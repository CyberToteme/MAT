// TODO turn into parameter?
// TODO: should this just call super()?
// TODO improve this
// TODO do contentType and/or dataEncoding belong in HTTPSampleResult instead?
// TODO - needs more work ...
// Maybe move to vector if MT problems occur
// TODO: This method doesn't appear to be used.
// TODO is this really necessary?
// Programming error: bail out.
// TODO should this throw an error?
// houston we have a problem !!
//TODO replace with proper Exception
// TODO - charset? // TODO this should really be request data, but there is none
// in milli-seconds // TODO: properties?
//TODO - move to JOrphanUtils?
// N.B. Needs to implement Visualizer so that TestBeanGUI can find the correct GUI class
// Can be null (not sure why)
//TODO implement other non-text types
// TODO this is not populated currently
// N.B. Needs to implement Visualizer so that TestBeanGUI can find the correct GUI class // TODO - remove UnsharedComponent ? Probably does not make sense for a TestBean.
// $NON-NLS-1$ // TODO - use a different format here?
// NOTUSED: long[] longSample = getSamples(); // load each node
//This can lead to code smell, meh! Do we care
// TODO is this ever used?
// TODO is this the best way to do this?
// All keys in messages.properties are lowercase (historical reasons?)
//NOT USED protected double[][] data = null;
//TODO do this more efficiently
// TODO - should this use setFirst() ?
"/*     *     * A Dom tree panel for to display response as tree view author <a     * href=""mailto:d.maung@mdl.com"">Dave Maung</a>      * TODO implement to find any nodes in the tree using TreePath.     *     */"
// TODO: Does this method need to be public? It isn't currently // called outside of this class.
"/*         * Does the system support UNC paths? If so, may need to fix them up         * later         */"
// Not used
// TODO should this be indeterminate? // TODO should this be indeterminate? //$NON-NLS-1$ //$NON-NLS-1$
// hack to skip processing
// TODO should we allow null for non-primitive types?
// TODO - not sure this is the best method
// TODO - is this needed?
// TODO - should we call start() and stop()?
// TODO: I believe the following code (to the end of the method) is // obsolete, // since NamePanel no longer seems to be the GUI for any component:
// Method is broken anyway
// TODO is this a sensible number? //$NON-NLS-1$
// TODO work out how to search the XML pane
// TODO is this sensible?
// Should we return fragment as text, rather than text of fragment?
"/*         * Not clear what can cause this ? conflicting versions perhaps         */"
//TODO replace with proper Exception // return with an error
//TODO: validate contentType for reasonable types?
"/*     * Mask values for TEST_TYPE TODO: remove either MATCH or CONTAINS - they     * are mutually exckusive     */"
// TODO ought to be a FileChooser ...
// Allow JMeter to render frames (and relative images) // Must be done after setContentType [Why?]
// TODO - is this used? (apart from test code)
// TODO: should this be clearData()?
"/**     * Provide a description of this timer class.     *     * TODO: Is this ever used? I can't remember where. Remove if it isn't --     * TODO: or obtain text from bean's displayName or shortDescription.     *     * @return the description of this timer class.     */"
"/*             * Provide dummy implementations to suppress download and display of             * related resources: - FRAMEs - IMAGEs TODO create better dummy             * displays TODO suppress LINK somehow             */"
// TODO should this be JTLSAVER? Only seems to be called by MonitorHealthVisualzer
// TODO: Make the running indicator its own class instead of a JButton
// If child of TransactionController is a ThroughputController and TPC does // not sample its children, then we will have this // TODO Should this be at warn level ?
// $NON-NLS-1$ // so it agrees with above // TODO perhaps should share code with __time() function for this... // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
// Hack to allow automated tests to find when test has ended //transient boolean testEnded = false;
// TODO could these be done earlier (or just once?)
// Hack to resolve ModuleControllers in non GUI mode
// add a system property so samplers can check to see if JMeter // is running in NonGui mode // $NON-NLS-1$ // TODO - why does it create a new instance?
// Should we run a beanshell script on startup? // $NON-NLS-1$
"/*         * A little hack - add each listener to the start of the list - this         * ensures that the thread running the show is the first listener and         * can modify certain values before other listeners are called.         */"
// TODO: move this to components -- the only reason why it's in core is because // it's used as a guinea pig by a couple of tests.
// TODO this bit of code needs to be tidied up // Unfortunately ModuleController is in components, not core // Bug 47165
// TODO: This class looks a lot like ArgumentsPanel. What exactly is the // difference? Could they be combined? // Note: it seems that this class is not actually used ...
// TODO does not appear to be used
"/*         * Ensure that the sample variables are correctly initialised for each run.         * TODO is this the best way to do this? should it be done elsewhere ?         */"
"/*             * Add fix for Deadlocks, see:             *              * See https://issues.apache.org/bugzilla/show_bug.cgi?id=48350            */"
// Hack to allow external control
// TODO - why use space?
// TODO should this also clear isDynamic, rawParameters, permanentResults?
// TODO should level be more than debug ?
// This is effectively the same as saver.toXML(Object, Writer) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class
// TODO fix up for Nimbus LAF
"/** * FIXME Why is searchTF not getting focus correctly after having been setVisible(false) once */"
// MenuBar related main.methods // TODO: Do we really need to have all these menubar main.methods duplicated // here? Perhaps we can make the menu bar accessible through GuiPackage?
// Hack to get full modifier value
"/*     * TODO consider removing this method, and providing method wrappers instead.     * This would allow the Gui package to do any additional clearups if required,     * as has been done with clearTestPlan()    */"
//Maybe do nothing at all?
"/*     * NOTUSED private void initButtonMap() { }     */"
//avoid error in ant task tests (good way?)
// Does not appear to be used; called by MainFrame#setEditAddMenu() but that is not called
"/** * Aggregates sample results for use by the Statistical remote batch mode. * Samples are aggregated by the key defined by getKey(). * TODO: merge error count into parent class? */"
// TODO should errors be thrown back through RMI?
"/*                 * JMeterTreeNode and TestBeanGUI are special GUI classes, and                 * aren't intended to be added to menus                 *                 * TODO: find a better way of checking this                 */"
// not used
// TODO - perhaps save other items such as headers?
// TODO should class implement SampleListener?
// Settings; readResolve sets these from the server/client values as appropriate // TODO would be nice to make these final; not 100% sure volatile is needed as not changed after creation
// should the samples be aggregated on thread name or thread group (default) ?
// Make it easier to enter a tab (can use \<tab> but that is awkward)
// TODO turn into method?
// Does not appear to be used (yet)
//@GuardedBy("sampleStore") TODO perhaps use ConcurrentHashMap ?
//TODO clazz is probably always the same as testclass
// TODO - should this be restored?
//TODO provide proper name?
// TODO: does it matter that an empty line will terminate the loop? // CSV output files should never contain empty lines, so probably // not // If so, then need to check whether the reader is at EOF
"/*     * TODO - convert to work more like upgrade.properties/NameUpdater.java     *     * Special processing is carried out for the Header Class The String     * property TestElement.name is converted to Header.name for example:     * <elementProp name=""User-Agent""     * elementType=""org.apache.jmeter.protocol.http.control.Header""> <stringProp     * name=""Header.value"">Mozilla%2F4.0+%28compatible%3B+MSIE+5.5%3B+Windows+98%29</stringProp>     * <stringProp name=""TestElement.name"">User-Agent</stringProp>     * </elementProp> becomes <elementProp name=""User-Agent""     * elementType=""org.apache.jmeter.protocol.http.control.Header""> <stringProp     * name=""Header.value"">Mozilla%2F4.0+%28compatible%3B+MSIE+5.5%3B+Windows+98%29</stringProp>     * <stringProp name=""Header.name"">User-Agent</stringProp> </elementProp>     */"
"/*     * These must be set before reading/writing the XML. Rather a hack, but     * saves changing all the method calls to include an extra variable.     *     * AFAIK the variables should only be accessed from one thread, so no need to synchronize.     */"
// TODO: should this be restored?
// TODO: not used - make private?
// TODO appears to duplicate the threadName field in SampleResult
// Yuck: TIFFImageEncoder uses Error to report runtime problems
// a check, just in case:
// TODO is this the right thing to do?
// results.setResponseCode("???"); TODO what code should be set here?
// TODO should this implement supportsCustomEditor() ?
// Not used, as the <testResult> element is generated by the // ResultCollector class
"/**     * Check if a string is a valid JMeter 'expression'.     * <p>     * The current implementation is very basic: it just accepts any string     * containing ""${"" as a valid expression. TODO: improve, but keep returning     * true for ""${}"".     */"
// TODO - use or remove
// I guess this can happen as a result of a bad // file read? In this case, it would be better to replace the // incorrect value with anything valid, e.g. the default value // for the property. // But for the time being, I just prefer to be aware of any // problems occuring here, most likely programming errors, // so I'll bail out. // (MS Note) Can't bail out - newly create elements have blank // values and must get the defaults. // Also, when loading previous versions of jmeter test scripts, // some values // may not be right, and should get default values - MS // TODO: review this and possibly change to:
// TODO does not work yet; need to determine the sample type
// Temporary fix to allow default protocol to be changed
//TODO consider using private logs for each derived class
// Does not appear to be used yet
// Remember to change this when the class changes ...
// TODO temporary hack to avoid unnecessary bug reports for subclasses
// TODO - yet another ambiguous name - does it need changing? // See also: Clearable, JMeterGUIComponent
// TODO Is this silent exception intended
"/*     * The following variables are set by StandardJMeterEngine.     * This is done before start() is called, so the values will be published to the thread safely     * TODO - consider passing them to the constructor, so that they can be made final     * (to avoid adding lots of parameters, perhaps have a parameter wrapper object.     */"
// TODO should this set the thread names for all the subsamples? // might be more efficient than fetching the name elsewehere
"/*         * Setting SamplingStarted before the contollers are initialised allows         * them to access the running values of functions and variables (however         * it does not seem to help with the listeners)         */"
// TODO: remove this useless Entry parameter
// TODO fix this when there is a real implementation
// TODO only clear the relevant entry - if possible...
// Surely this is always null in the constructor?
// TODO why not use the super class value?
// TODO - does not appear to be called directly
"/** * Custom TrustManager ignores all certificate errors * * TODO: implement conditional checking and logging * * (Derived from AuthSSLX509TrustManager in HttpClient contrib directory) */"
// Maps to contain page and form encodings // TODO - do these really need to be shared between all Proxy instances?
// NOTE: Source and line arguments are nonsense in a call(). //       Any way to make these arguments *sensible?
// Is it an exception wrapped in a JavaScriptException?
// TODO Why empty block ?
// TODO - perhaps this should be a fatal error?
// clone will produce correct type // TODO but why do we need to clone the list?
// TODO only called by UserParameterXMLParser.getXMLParameters which is a deprecated class
// TODO probably not needed
// TODO needs to be synch? Probably not changed after threads have started // JMeter Home directory (excludes trailing separator) // JMeter bin directory (excludes trailing separator)
// Hack: bsh-2.0b5.jar BshScriptEngine implements Compilable but throws "java.lang.Error: unimplemented"
// TODO: what is this for?
// TODO should equals and hashCode depend on field other than count?
// TODO is sync really needed?
// TODO is this correct?
// TODO cpercent is the same as cmedian here - why? and why pass it to "distributionLine"?
// TODO: Should the method signature of this method be changed to // match the super-implementation (using a TestElement parameter // instead of AbstractListenerElement)? This would require an // instanceof check before adding the listener (below), but would // also make the behavior a bit more obvious for sub-classes -- the // Java rules dealing with this situation aren't always intuitive, // and a subclass may think it is calling this version of the method // when it is really calling the superclass version instead.
// TODO Should this method be synchronized ? all other function execute are
// TODO should the engine be static?
// N.B. Commons IO IOUtils has equivalent main.methods; these were added before IO was included // TODO - perhaps deprecate these in favour of Commons IO?
// TODO should this be getMin()?
"/*                 * Fix bug: -D arg1=arg2 was causing parse error; however                 * --define arg1=arg2 is OK This seems to be because the parser                 * skips the terminator for the long options, but was not doing                 * so for the short options.                 */"
// TODO improve the error handling
"/**     * Add logTargets to root logger     * FIXME What's the clean way to add a LogTarget afterwards ?     * @param logTargets LogTarget array     */"
// hack to reduce the need to load every class in non-GUI mode, which only needs functions // TODO perhaps use BCEL to scan class files instead? // class name should contain this string // class name should not contain this string
"/*             * TODO: Exact ordering is only required for some tests; change the             * comparison to do a set compare where necessary.             */"
// TODO field always true, what for ?
// TODO - improve this check
// TODO - could this be return?
//very wrong.
// TODO - should this be a failure?
"/*     * Wrapper to convert a JUnit4 class into a TestCase     *     *  TODO - work out how to convert JUnit4 assertions so they are treated as failures rather than errors     */"
// TODO should really return most specific (i.e. longest) match.
// TODO - should this be done for embedded usage? // Note: the element is a ConfigTestElement when used standalone, so we cannot use FTPSampler access main.methods
// TODO: replace all this url2 mess with a proper method // "areEquivalent(url1, url2)" that // would also ignore case in protocol and host names, etc. -- use that // method in the CookieManager too.
// TODO is this possible?
"/*     * Holder for storing cache details.     * Perhaps add original response later?     */"
// TODO not used by GUI
// not currently used
// TODO correct URL?
// NOTE: the handling of simple- vs. double-quotes could be formally // more accurate, but I can't imagine a session id containing // either, so we should be OK. The whole set of expressions is a // quick hack anyway, so who cares.
"/*         * TODO improve string version to better match browser behaviour? e.g.         * do browsers regard http://host/ and http://Host:80/ as the same? If         * so, it would be better to reflect this in the string         */"
// Code also allows for LF only (not sure why - perhaps because the test code uses it?)
// TODO: find a way to avoid the cost of creating a String here -- // probably a new PatternMatcherInput working on a byte[] would do // better.
// TODO should setBaseForScript be called here rather than above?
// Java 1.6.0_22+ no longer allows Content-Length to be set, so don't check it. // See: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6996110 // TODO any point in checking the other headers?
// SampleEvent is not passed JMeterVariables, because they don't make sense for Proxy Recording // TODO - is this the correct threadgroup name?
// TODO needs cleaning up
// $NON-NLS-1$ TODO should this be a variable?
// TODO replace repeated substr() above and below with more efficient method.
// TODO perhaps make more specific than this? // no point parsing anything else, e.g. GIF ...
// won't work: writeErrorToClient(HttpReplyHdr.formInternalError()); // Generate result (if nec.) and populate it // hack to skip processing
// TODO - should this be done when the client is created? // If so, then the details need to be added as part of HttpClientKey
// HACK
// May be replaced later
// TODO hack, to be removed later
// Could we drop the Sync here?
// TODO - should LF-only EOL be allowed? 
// DirContext dc = //TODO perhaps return this?
// $NON-NLS-1$ // TODO - change to use URL version? Will this affect test plans?
// TODO specify collection type without breaking callers
// TODO - can this eever happen?
// All form parameter always have text/plain as mime type //TODO make this a parameter?
// $NON-NLS-1$ // TODO can this be obtained from the file somehow?
// Does not appear to be used
// NOTUSED: GuiPackage guiPack =
// Allow serializable test to work // TODO: is the serializable test necessary now that JMeterTreeNode is // no longer a GUI component?
// TODO is null correct?
// TODO - how to handle thread stopped here
// Slight hack - we need to ensure the TestClass is not reset by the previous call
// TODO should this be called if basedir == null?
// TODO - could be converted to generic class?
// TODO not used?
// TODO: make static?
// Hack to allow entire URL to be provided in host field
// TODO Should this be OK ? //assertEquals(contentEncoding, s.getContentEncoding()); // Check arguments // We should have one argument, with the value equal to the post body
// TODO downcase UPPER case non-final variables
// TODO - belongs elsewhere 
// TODO can this happen?
// TODO needed here because currently done on sample completion in JMeterThread, // but that only catches top-level samples.
// TODO : This is a bit fragile
// TODO is this correct? // If this is not the first file we can't write its header now // for simplicity we always save it, even if there is only one file
// TODO - should this return something else?
// Don't allow override of Content-Length // This helps with SoapSampler hack too // TODO - what other headers are not allowed?
//$NON-NLS-1$ TODO should this be variable?
// TODO - is this the correct default?
// TODO do we need to add a charset for the file contents? // $NON-NLS-1$
// TODO merge put and post main.methods as far as possible. // e.g. post checks for multipart form/files, and if not, invokes sendData(HttpEntityEnclosingRequestBase)
// Get the content length, it tells us how much data to read // TODO : Maybe support chunked encoding, then we cannot rely on content length
// TODO: is this the correct default?
// TODO should we allow mimetype only?
"/*     * TODO should these fields be public?     * They don't appear to be used externally.     *      * Also, are they any different from HTTPConstants.GET etc. ?     * In some cases they seem to be used as the method name from the Tomcat log.     * However the RMETHOD field is used as the value for HTTPSamplerBase.METHOD,     * for which HTTPConstants is most approriate.     */"
// NOTUSED org.apache.jmeter.monitor.model.Status st = // TODO - charset?
// TODO: find out how to retrieve these from the script // At present the script has to use SampleResult main.methods to set them. // $NON-NLS-1$ // $NON-NLS-1$
// TODO: process warnings? Set Code and Message to success?
// TODO - should the encoding be configurable? // $NON-NLS-1$
//$NON-NLS-1$ // TODO - probably wrong
// TODO Method with 0 reference, really useful ?
// Maybe we should consider creating a global cache for the // random files to make JMeter more efficient.
// Should we use java.naming.security.[principal|credentials] to create the QueueConnection?
// TODO set different status if not enough messages found?
"/** * FIXME BROKEN CODE */"
// NOTUSED private String chosenFile;
"/* * Find all beans out there and check their resource property files: - Check * that non-default property files don't have any extra keys. - Check all * necessary properties are defined at least in the default property file, * except for beans whose name contains ""Experimental"" or ""Alpha"".  *  * TODO: - Check property files don't have duplicate keys (is this important) *  */"
// This could perhaps be a variable name
// Should we add the "_" separator?
// TODO - should we skip processing here?
//TODO add some real tests now that split() has been removed
// NOT USED transient protected ThreadGroup THREADGROUP = null; // Anyway, was this supposed to be the class from java.lang, or // jmeter.threads?
// all the others could be private too?
// TODO can this ever happen?
// TODO fetch list of languages from a file? // N.B. Changes to language list need to be reflected in // resources/PackageTest.java
//TODO: move to utils class (JMeterUtils?)
// TODO: do we need to implement any kind of connection pooling? // If so, which connections should be shared? // Should threads share connections to the same destination? // What about cross-thread sharing?
//            // Set the content type TODO - needed? //            String multiPartContentType = multiPart.getContentType().getValue(); //            post.setHeader(HEADER_CONTENT_TYPE, multiPartContentType);
"/*     * TODO this assumes that the redirected response will always immediately follow the original response.     * This may not always be true.     * Is there a better way to do this?     */"
// TODO is it the best way ? https://issues.apache.org/bugzilla/show_bug.cgi?id=55634
// Keep the unexpanded path // TODO - allow directories to end with .jar by removing this check?
// TODO: the above works in the current situation, but it's // just a hack. How to get each editor to report whether it // wants to grow bigger? Whether the property label should // be at the left or at the top of the editor? ...?
// Hack: save the package for any transaction controllers
// How many classes can we assign from? // TODO: there must be a nicer way...
// Should the TestBean be hidden?
// TODO - why lower case? OK to use the default Locale?
//A hack to make user-defined variables in the testplan element more dynamic
// HACK: force the controller to load its tree
// It might be useful also to make this available in the 'Request' tab, for // when posting JSON.
// should header be saved with the data? //$NON-NLS-1$
// Showing large strings can be VERY costly, so we will avoid // doing so if the response // data is larger than 200K. TODO: instead, we could delay doing // the result.setText // call until the user chooses the "Response data" tab. Plus we // could warn the user // if this happens and revert the choice if he doesn't confirm // he's ready to wait.
// TODO strings should be resources
// result.setError(true); // TODO is this the correct strategy? // throw exception; // allow assertion to pass
// Why does this not call guiInstance.clearTestPlan() ? // Is there a reason for not clearing everything?
// NOTUSED yet private JTextField filename;
// TODO somehow show progress
// TODO support multiple signers
// TODO: fetch this once as per vars above?
// TODO: add and delete not currently supported // $NON-NLS-1$
// Fix path to allow the use of UNC URLs
// TODO should this use setDone()? // TODO should this use setFirst()?
// Set the overall status for the transaction sample // TODO: improve, e.g. by adding counts to the SampleResult class
// Should we exit at end of the test? (only applies to server, because host is non-null)
"/*         * Have we reached the reporting boundary?         * Need to allow for a margin of error, otherwise can miss the slot.         * Also need to check we've not hit the window already         */"
// TODO save hostname; save sample type (plain or http)
// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
// REMIND: convert arg list Vectors here?
// It is chunked transfer encoding, which we do not really support yet. // So we just read without blocking, because we do not know when to // stop reading, so we cannot block // TODO propery implement support for chunked transfer, i.e. to // know when we have read the whole request, and therefore allow // the reading to block
// TODO handle filenames
// not yet handled
// TODO - should check that error has been logged...
// Don't allow override of Content-Length // TODO - what other headers are not allowed?
// TODO ? perhaps note connection so it can be disconnected at end of test?
