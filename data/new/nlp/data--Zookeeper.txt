SATD	 bug grizzly needs doc root you are going register multiple adapters 
SATD	 dont need retry this operation the case failure will remove ephemeral files and dont wanna hang this process when closing cannot reconnect 
SATD	 this likely problem means that file reloading broken probably because the directory are watching was deleted otherwise became inaccessible unmounted permissions changed for now log error and exit the watcher thread 
SATD	 fixme this was originally seconds but realistically randomslowvirt hosts there way guarantee this 
SATD	 this bit weird but need return the address and the number bytes distinguish between ipv and ipv 
SATD	 bit hack but delete will never succeed and ensures that the same semantics are maintained 
SATD	 everything simply start counting the ticks warning couldnt find any wait statement synchronized block that would notified this notifyall call commented out synchronized this notifyall ping twice tick only update the tick every other 
SATD	 todoivmaykov not sure cnxn can null here becomes null channelinactive exceptioncaught trigger but its unclear usereventtriggered can run after either those check for null just safe 
SATD	 could not create tmp directory hold jaas conf file test will fail now 
SATD	 fixme this test assertfailing due client close race condition fixing separate patch for zookeeper this test checks see the sessionid that was created for the first zookeeper client can reused for the second one immidiately after the first client closes and the new client resues them throws ioexception throws throws keeperexception 
SATD	 todo need tune the default value thread size 
SATD	 todo refactor quorumbase special case this 
SATD	 this might not right but its only used for printing connection info the netty implementation its probably 
SATD	 problem before fix after session close the ephemeral node was not getting deleted but now after the fix after session close 
SATD	 observer should write disk that the wont request too old txn from the leader which may lead getting entire snapshot however this may degrade performance has write disk and periodic snapshot which may double the memory requirements 
SATD	 occasionally seen false negatives with timeout 
SATD	 todo investigate why reconfig makes qps null 
SATD	 todo zksprocesspacket changed take bytebuffer could implement zerocopy queueing 
SATD	 note that this performance assumption might not hold true for architectures other than 
SATD	 note the new buffer size hint and socket implementation free ignore dont verify that get back the same value 
SATD	 todo should this synchronized 
SATD	 todo use factory rather than switch 
SATD	 xxx need anything 
SATD	 session has not been revalidated 
SATD	 sad that isro and srvr are used zookeeper itself need fix this before deprecating 
SATD	 todo need figure out the security requirement for this 
SATD	 problem follower had one extra ephemeral node 
SATD	 todo the future serverid should validated for all cases not just the case todo however for now would too disruptive 
SATD	 since requests are processed order better get response the first request 
SATD	 this ugly you have better way speak 
SATD	 authentication error occurred during authentication with the zookeeper server 
SATD	 todo brd should either put concurrenthashmap restore use map save 
SATD	 todo this doesnt use quorum verifier 
SATD	 mocked class that doesnt clientside verification beforeafter calling removewatches 
SATD	 this shouldnt necessary wrapping data with string but without there are problems the server hangs for seconds and doesnt get the data todo investigate 
SATD	 try provide hints use about what went wrong they can fix their configuration todo introspect about look for gss information 
SATD	 fixme dont want have serialize here and then immediately deserialize next processor but not sure how else get the txn stored into our list 
SATD	 these internal classes are public but should not generally referenced 
SATD	 fixme ipv not supported using something like guavas hostandport parser would good 
SATD	 this really programmatic error and not something that can happen runtime 
SATD	 add backwards since are pushing into the front only send theres pending watch todo here have the only remaining use zookeeper this class its eliminated 
SATD	 todo rather than checking disjunction here should single member variable method this class determine whether the client configured use sasl see also zookeeper 
SATD	 todo maybe should flush the loop above every packetsbytes but how determine the right value for 
SATD	 need upgrade before can proceed 
SATD	 todo exit server this point 
SATD	 only make copy this thread isnt already holding lock 
SATD	 multiple bad arguments 
SATD	 xxx this doesnt need volatile should probably final 
SATD	 test will still fail even though just logignore 
SATD	 fixme ignore for now 
SATD	 xxx really should not need this 
SATD	 xxx hack 
SATD	 not sure about argwhat 
SATD	 fixme need way more cleanly exceptions 
SATD	 small chance that unexpected message was delivered after this check but would catch that next time 
SATD	 warning this will reset the xutil 
SATD	 little hacky way detect key type but works 
SATD	 the following sequence code stupid you would think that only sockclose needed but alas doesnt work that way you just sockclose there are cases where the socket doesnt actually close 
SATD	 todo not every tmp directory needs this file 
SATD	 xxx this shouldnt needed but just case 
SATD	 bunch constants todo will get rid eventually 
SATD	 todo can not name this method getstate since threadgetstate already exists would cleaner make class sendthread implementation runnable 
SATD	 handle below might harmless the user doesnt intend use jaas authentication 
SATD	 should never call this sasl authentication negotiated session initiation todo consider substituting current implementation direct clientcnxn manipulation with call this method session initiation 
SATD	 note may exceed our max length bit when add the last watch the batch this isnt ideal but makes the code simpler 
WITHOUT_CLASSIFICATION	 make the snapshot directory read only 
WITHOUT_CLASSIFICATION	 ensure that can convert all valid integers eventtypes 
WITHOUT_CLASSIFICATION	 notify the client the session closing and closecleanup socket 
WITHOUT_CLASSIFICATION	 shutdown previous zookeeper 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 converting observer into participant may sometimes fail with newconfignoquorum exception this testcase demonstrates the scenario current configuration where and are participant and observer suppose that has crashed never booted reconfiguration submitted where said become participant will fail with newconfignoquorum since this configuration majority voters the new configuration any voters must connected and uptodate with the leader observer cannot acknowledge the history prefix sent during reconfiguration and therefore does not count towards these required servers and the reconfiguration will aborted case this happens client can achieve the same task two reconfig commands first invoke reconfig remove from the configuration and then invoke second command add back participant follower during the intermediate state nonvoting follower and can ack the state transfer performed during the second reconfig command 
WITHOUT_CLASSIFICATION	 register most recent relogin attempt 
WITHOUT_CLASSIFICATION	 check clients current server the new list servers 
WITHOUT_CLASSIFICATION	 read txnlog but this should sufficient 
WITHOUT_CLASSIFICATION	 avoids running finish twice 
WITHOUT_CLASSIFICATION	 truncate the log 
WITHOUT_CLASSIFICATION	 address sender 
WITHOUT_CLASSIFICATION	 need log the stuff that came between the snapshot and the uptodate 
WITHOUT_CLASSIFICATION	 property set valid int should get the set value 
WITHOUT_CLASSIFICATION	 notification current replace and send messages out 
WITHOUT_CLASSIFICATION	 check for differences 
WITHOUT_CLASSIFICATION	 the clients may may not have already reconnected the recovered cluster force check but ignore 
WITHOUT_CLASSIFICATION	 zks cannot null otherwise would not have gotten here 
WITHOUT_CLASSIFICATION	 check leader running status 
WITHOUT_CLASSIFICATION	 reconnect with the same session 
WITHOUT_CLASSIFICATION	 delete the node the trie need update the trie well 
WITHOUT_CLASSIFICATION	 diff 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 lets assert that the first election the leader 
WITHOUT_CLASSIFICATION	 for dead peer 
WITHOUT_CLASSIFICATION	 null stat object passed the create should still succeed but stat info will returned 
WITHOUT_CLASSIFICATION	 ignore connection loss 
WITHOUT_CLASSIFICATION	 filter out the extra entrycreate events that are sometimes seen the start even though create the watcher after the file exists sometimes still get create event 
WITHOUT_CLASSIFICATION	 connect one them 
WITHOUT_CLASSIFICATION	 otherwise start worker threads receive data 
WITHOUT_CLASSIFICATION	 sets quorum sasl authentication configurations 
WITHOUT_CLASSIFICATION	 requesthdr set for write requests which are the only ones 
WITHOUT_CLASSIFICATION	 ensure thread started once and only once 
WITHOUT_CLASSIFICATION	 write the truststore 
WITHOUT_CLASSIFICATION	 this configuration section myzookeeperclient missing from the jaas configuration result sasl authentication should fail which tested this test testauth 
WITHOUT_CLASSIFICATION	 find the last snapshot 
WITHOUT_CLASSIFICATION	 didnt find read the whole buffer into string buffer 
WITHOUT_CLASSIFICATION	 localpeerbean 
WITHOUT_CLASSIFICATION	 listener thread 
WITHOUT_CLASSIFICATION	 unset its acl should remain the same 
WITHOUT_CLASSIFICATION	 good expected that 
WITHOUT_CLASSIFICATION	 the current vote for the leader initially 
WITHOUT_CLASSIFICATION	 well never mind 
WITHOUT_CLASSIFICATION	 width the toster 
WITHOUT_CLASSIFICATION	 verify lastprocessedzxid set correctly 
WITHOUT_CLASSIFICATION	 default disable starting jettyadminserver tests avoid accidentally attempting start multiple admin servers the 
WITHOUT_CLASSIFICATION	 the peer has done enough rounds then consider joining the thread will only join part quorum supporting the current leader otherwise will try again 
WITHOUT_CLASSIFICATION	 password test 
WITHOUT_CLASSIFICATION	 add watcher for each node and add node collection watched nodes 
WITHOUT_CLASSIFICATION	 generate new config string 
WITHOUT_CLASSIFICATION	 nothing special stay with the current server 
WITHOUT_CLASSIFICATION	 session has been revalidated 
WITHOUT_CLASSIFICATION	 exactly now except for role change 
WITHOUT_CLASSIFICATION	 make sure the watch removed when the connection closed 
WITHOUT_CLASSIFICATION	 start server and wait for leader election finish 
WITHOUT_CLASSIFICATION	 since sasl authentication has completed client configured outgoing packets waiting the outgoingqueue can now sent 
WITHOUT_CLASSIFICATION	 objects holding reference this object 
WITHOUT_CLASSIFICATION	 handle situation clientsections being null might simply because the client does not intend use sasl not necessarily error 
WITHOUT_CLASSIFICATION	 make sure the settings applied above before the socket was potentially upgraded tls still apply 
WITHOUT_CLASSIFICATION	 after restart 
WITHOUT_CLASSIFICATION	 set the factor high value that this test case always resync using txnlog 
WITHOUT_CLASSIFICATION	 trying load pem file with jks loader should fail 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 close the input stream 
WITHOUT_CLASSIFICATION	 lets wait for any previous leaders die and one our new nodes become the new leader 
WITHOUT_CLASSIFICATION	 nothing 
WITHOUT_CLASSIFICATION	 add the last logfile that less than the zxid 
WITHOUT_CLASSIFICATION	 weve already failed one the ops dont bother trying the rest know its going fail and would confusing the logfiles 
WITHOUT_CLASSIFICATION	 waiting for child watchers notified 
WITHOUT_CLASSIFICATION	 ensure server started give enough time that new leader election 
WITHOUT_CLASSIFICATION	 proposed leader 
WITHOUT_CLASSIFICATION	 snapshot files snap dir 
WITHOUT_CLASSIFICATION	 session has not been validated there must watches 
WITHOUT_CLASSIFICATION	 noop adding packet will already wake netty connection dont need add dummy packet the queue trigger wakeup 
WITHOUT_CLASSIFICATION	 expected behavior 
WITHOUT_CLASSIFICATION	 this addr wont even used since fake the socketconnect 
WITHOUT_CLASSIFICATION	 protocolversion 
WITHOUT_CLASSIFICATION	 second address doesnt work dont call onconnected this time statichostprovider should try reresolve the address this case 
WITHOUT_CLASSIFICATION	 loop which exchange notifications until find leader 
WITHOUT_CLASSIFICATION	 skip superhammer and clientcleanup they are too expensive for quorum 
WITHOUT_CLASSIFICATION	 avoid using literal address when security check fails 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 pending sync requests 
WITHOUT_CLASSIFICATION	 separate patch 
WITHOUT_CLASSIFICATION	 updating version solves conflict order matters 
WITHOUT_CLASSIFICATION	 creates principals the kdc and adds them keytab file 
WITHOUT_CLASSIFICATION	 the client asking close the session then mark closing 
WITHOUT_CLASSIFICATION	 verify creation 
WITHOUT_CLASSIFICATION	 after leader election lastprocessedzxid will point new epoch 
WITHOUT_CLASSIFICATION	 prepare for next test 
WITHOUT_CLASSIFICATION	 small chance that unexpected message was delivered after this check but would catch that next time check events 
WITHOUT_CLASSIFICATION	 make delete fail then verify cversion this doesnt happen anymore only set the cversion create loginfoattempting delete test count dooplogfile opcodedelete test count 
WITHOUT_CLASSIFICATION	 get default cipher suites from jdk 
WITHOUT_CLASSIFICATION	 not necessary repeat this expensive and not chroot related 
WITHOUT_CLASSIFICATION	 inject problem leader 
WITHOUT_CLASSIFICATION	 during startup thread thread name will overridden 
WITHOUT_CLASSIFICATION	 make sure pass explicit watcher because could sharing this zookeeper instance with someone else 
WITHOUT_CLASSIFICATION	 make sure tostring works both cases 
WITHOUT_CLASSIFICATION	 deleting child using chroot client 
WITHOUT_CLASSIFICATION	 tests that conditional reconfig fails the specified version doesnt correspond the version the current config 
WITHOUT_CLASSIFICATION	 zookeeper the leader sends the new config must complete others inside newleader message see learnerhandler where the newleader message constructed and once has enough acks must execute the following code that applies the config itself 
WITHOUT_CLASSIFICATION	 close connection 
WITHOUT_CLASSIFICATION	 nonjavadoc see langstring javalangstring javautilmap 
WITHOUT_CLASSIFICATION	 processing committedrequests check and see the commit came for the pending request can only commit request when there other request being processed 
WITHOUT_CLASSIFICATION	 accounted for 
WITHOUT_CLASSIFICATION	 ignore this one 
WITHOUT_CLASSIFICATION	 zookeeper client get username and password from jaas conf only used using digestmd 
WITHOUT_CLASSIFICATION	 packet death 
WITHOUT_CLASSIFICATION	 these tests are serial can speed 
WITHOUT_CLASSIFICATION	 add multiple child watches 
WITHOUT_CLASSIFICATION	 but still progress because there final sasl message from server which must received 
WITHOUT_CLASSIFICATION	 watch for everyone die 
WITHOUT_CLASSIFICATION	 close the socket make sure the other side can see being close 
WITHOUT_CLASSIFICATION	 test that when ask for recent snaps get the number asked for and 
WITHOUT_CLASSIFICATION	 from local session 
WITHOUT_CLASSIFICATION	 unique identifier for each znode that create 
WITHOUT_CLASSIFICATION	 follower within commitlog range 
WITHOUT_CLASSIFICATION	 strip off the surrounding quotes 
WITHOUT_CLASSIFICATION	 global sessions handled the leader this call noop not tracked local session safe call both cases 
WITHOUT_CLASSIFICATION	 were able talk the ensemble 
WITHOUT_CLASSIFICATION	 now lets kill the leader 
WITHOUT_CLASSIFICATION	 ignore duplicate create 
WITHOUT_CLASSIFICATION	 since for each snapshot have log file with same zxid expect same logs snaps kept 
WITHOUT_CLASSIFICATION	 should never null but just make findbugs happy 
WITHOUT_CLASSIFICATION	 when call put later the directbuffer small hold everything nothing will copied weve got slice the buffer its too big 
WITHOUT_CLASSIFICATION	 stop selecting this key while processing its connection 
WITHOUT_CLASSIFICATION	 and restart leader election config changed 
WITHOUT_CLASSIFICATION	 send out the kill signal 
WITHOUT_CLASSIFICATION	 propose foo update 
WITHOUT_CLASSIFICATION	 min higher max lower 
WITHOUT_CLASSIFICATION	 sendthread has not created the authenticating object yet 
WITHOUT_CLASSIFICATION	 than 
WITHOUT_CLASSIFICATION	 command line args nonnull run what was passed 
WITHOUT_CLASSIFICATION	 first filter out votes from unheardfrom machines then make the views consistent sometimes peers will have 
WITHOUT_CLASSIFICATION	 make sure the vote reset after shutdown 
WITHOUT_CLASSIFICATION	 run through snapshots not all them cannot get running within snapshots should give 
WITHOUT_CLASSIFICATION	 verify the data the first transaction 
WITHOUT_CLASSIFICATION	 the diff case dont need snapshot because the transactions will sync top any existing snapshot for snap and trunc the snapshot needed save that history 
WITHOUT_CLASSIFICATION	 this will cause everything shutdown this learner handler and will help notify the learnerobserver instantaneously 
WITHOUT_CLASSIFICATION	 there only server the quorum run standalone 
WITHOUT_CLASSIFICATION	 dont log error for shutdown 
WITHOUT_CLASSIFICATION	 assuming that version uniquely identifies configuration version the same nothing here 
WITHOUT_CLASSIFICATION	 third party customized could throw when jaas configuration isnt set can reevaluate whether catch runtimeexception instead when more different types runtimeexception found 
WITHOUT_CLASSIFICATION	 number machines stayed the same server not the new 
WITHOUT_CLASSIFICATION	 skip the proposals the peer already has 
WITHOUT_CLASSIFICATION	 for learner 
WITHOUT_CLASSIFICATION	 wait for request completion infinitely 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 see zookeeper for more details 
WITHOUT_CLASSIFICATION	 candidate acked return the best candidate found far 
WITHOUT_CLASSIFICATION	 connection reset peer 
WITHOUT_CLASSIFICATION	 convert from server path client path 
WITHOUT_CLASSIFICATION	 the first time are configured just tell which machine are 
WITHOUT_CLASSIFICATION	 partsi 
WITHOUT_CLASSIFICATION	 does not send anything back when done 
WITHOUT_CLASSIFICATION	 convert windows path unix avoid problems with 
WITHOUT_CLASSIFICATION	 reconfigmode false next shouldnt return null 
WITHOUT_CLASSIFICATION	 closing this expected 
WITHOUT_CLASSIFICATION	 watch status zookeeper server will graceful shutdown 
WITHOUT_CLASSIFICATION	 lets start servers with the new config 
WITHOUT_CLASSIFICATION	 remove hosts number and the currently last two the list 
WITHOUT_CLASSIFICATION	 this simple test try connect two clients server accepting maximum one connection from each address check that only one accepted close that connection and check that the other eventually connects there possibility false positive here when tested for having connected might not have been given enough time and finish connecting after the test done since the server doesnt tell the client why hasnt connected theres obvious way detect the difference 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 only the root path can end strip off every other prefix 
WITHOUT_CLASSIFICATION	 this server wasnt around during the configuration change should check that able connect finds out about the change and becomes observer 
WITHOUT_CLASSIFICATION	 this point there might still new packets appended outgoingqueue 
WITHOUT_CLASSIFICATION	 longer process newleader ack with this method however the learner sends ack back the leader after gets uptodate just ignore the message 
WITHOUT_CLASSIFICATION	 done joining 
WITHOUT_CLASSIFICATION	 disable receiving data for all open connections 
WITHOUT_CLASSIFICATION	 important for xdc scenarios 
WITHOUT_CLASSIFICATION	 now make environment for client hang 
WITHOUT_CLASSIFICATION	 servers from the old list that appear the new list 
WITHOUT_CLASSIFICATION	 simulate log file 
WITHOUT_CLASSIFICATION	 zxids should always order for write requests 
WITHOUT_CLASSIFICATION	 indicates that reconfig just committed 
WITHOUT_CLASSIFICATION	 start new instance 
WITHOUT_CLASSIFICATION	 check that all clients connect properly 
WITHOUT_CLASSIFICATION	 preallocsize positive and are within the known end the file calculate new file size 
WITHOUT_CLASSIFICATION	 determine client principal from subject 
WITHOUT_CLASSIFICATION	 superuser use java system property for password available 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 consider error 
WITHOUT_CLASSIFICATION	 good wanted see that lets make sure ran out time 
WITHOUT_CLASSIFICATION	 create transactions create the snapshot with createdelete pattern 
WITHOUT_CLASSIFICATION	 construct concurrenthashset using concurrenthashmap 
WITHOUT_CLASSIFICATION	 tstart 
WITHOUT_CLASSIFICATION	 should not happen because check for ipv address above 
WITHOUT_CLASSIFICATION	 lets make sure that hit the code that ran the real assertion above 
WITHOUT_CLASSIFICATION	 together like testnextgoesround 
WITHOUT_CLASSIFICATION	 the synchronized block here for two purpose synchronize with the final cleanup sendthreadrun avoid race synchronized against each packet closesession packet added 
WITHOUT_CLASSIFICATION	 modprinc maxlife mins principal kadmin 
WITHOUT_CLASSIFICATION	 got results 
WITHOUT_CLASSIFICATION	 verify super with correct pass success 
WITHOUT_CLASSIFICATION	 cool this what want 
WITHOUT_CLASSIFICATION	 continuation 
WITHOUT_CLASSIFICATION	 node must started first before quorum formed trigger the attempted invalid connection 
WITHOUT_CLASSIFICATION	 initialize with null vote 
WITHOUT_CLASSIFICATION	 send back the ping with our session data 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting 
WITHOUT_CLASSIFICATION	 zookeeper can block for long periods time must call outside the node lock call treeserialize which calls our modified writerecord method that blocks until can verify that separate thread can lock the datanode currently being written that does not hold the datanode lock while calling 
WITHOUT_CLASSIFICATION	 check see this user the user password database 
WITHOUT_CLASSIFICATION	 during the tests run with prealloc the logs windows systems prealloc was seen take seconds resulting test assertfailure client timeout first session set env and directly order handle static initgc issues 
WITHOUT_CLASSIFICATION	 start two servers form quorum client should detect this and 
WITHOUT_CLASSIFICATION	 dont have option specified just delete whole quota node 
WITHOUT_CLASSIFICATION	 return true one the following three cases hold new epoch higher new epoch the same current epoch but new zxid higher new epoch the same current epoch new zxid the same current zxid but server higher 
WITHOUT_CLASSIFICATION	 need get the pid number the process first 
WITHOUT_CLASSIFICATION	 propose update 
WITHOUT_CLASSIFICATION	 delete the leaves first and eventually get rid the root delete all versions the node with 
WITHOUT_CLASSIFICATION	 child channels options 
WITHOUT_CLASSIFICATION	 lets find the leader and kill everything else have few 
WITHOUT_CLASSIFICATION	 prior zookeeper attempting pad association with the second transaction will corrupt the first 
WITHOUT_CLASSIFICATION	 ensure late arrivals 
WITHOUT_CLASSIFICATION	 count down avoid infinite blocking call due this latch any 
WITHOUT_CLASSIFICATION	 ignoring the interrupt 
WITHOUT_CLASSIFICATION	 upgrade peer with and 
WITHOUT_CLASSIFICATION	 propagated the other servers the ensemble 
WITHOUT_CLASSIFICATION	 property set but with white spaces 
WITHOUT_CLASSIFICATION	 generate old config string 
WITHOUT_CLASSIFICATION	 authentication exchange has completed 
WITHOUT_CLASSIFICATION	 server 
WITHOUT_CLASSIFICATION	 create readonly server but dont start immediately 
WITHOUT_CLASSIFICATION	 each multiop must have the same zxid 
WITHOUT_CLASSIFICATION	 write protocol this previously caused npe quorumcnxmanager 
WITHOUT_CLASSIFICATION	 lists what threads havent joined thread doesnt join hasnt decided upon leader yet can happen that peer slow disconnected and can take longer nominate and connect the current leader 
WITHOUT_CLASSIFICATION	 for zookeeper verify that possible join ensemble with inconsistent election round information 
WITHOUT_CLASSIFICATION	 local session not enabled used our local session throw sessions expires 
WITHOUT_CLASSIFICATION	 things needed for waitforepochack run usually leaderlead but were not running leader here 
WITHOUT_CLASSIFICATION	 same configs and they should equal the config get from quorumpeer 
WITHOUT_CLASSIFICATION	 start sending packets 
WITHOUT_CLASSIFICATION	 before create otw race 
WITHOUT_CLASSIFICATION	 determined whether are currently throttled not 
WITHOUT_CLASSIFICATION	 does start with ipv literal 
WITHOUT_CLASSIFICATION	 expiring the session 
WITHOUT_CLASSIFICATION	 dont call setup dont want reassign portsdirs etc 
WITHOUT_CLASSIFICATION	 the thread the the grace period interrupt come out waiting 
WITHOUT_CLASSIFICATION	 and close connection 
WITHOUT_CLASSIFICATION	 verify auth 
WITHOUT_CLASSIFICATION	 expected 
WITHOUT_CLASSIFICATION	 shut the leader down 
WITHOUT_CLASSIFICATION	 milliseconds socket should connectread within this period otherwise 
WITHOUT_CLASSIFICATION	 logwarnproposed leader proposedleader 
WITHOUT_CLASSIFICATION	 when comes this point guarantees that later queued packet outgoingqueue will notified death 
WITHOUT_CLASSIFICATION	 get leader 
WITHOUT_CLASSIFICATION	 verify that have least nummessages snapcount txnlog 
WITHOUT_CLASSIFICATION	 standalone starts with epoch while quorum starts with 
WITHOUT_CLASSIFICATION	 try obtain challenge only does not have one yet 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 now were adding back participant and everything should work 
WITHOUT_CLASSIFICATION	 handle race condition where node listed but gets deleted before can queried ignore 
WITHOUT_CLASSIFICATION	 load the epochs 
WITHOUT_CLASSIFICATION	 resolve call keeps the size provider 
WITHOUT_CLASSIFICATION	 returns the string that maps this stat tracking 
WITHOUT_CLASSIFICATION	 the tests below strict server means unifiedserversocket that does not allow plaintext connections other words its sslonly non strict server means unifiedserversocket that allows both plaintext and ssl incoming connections 
WITHOUT_CLASSIFICATION	 get notified about possibly missed events reload the key store trust store just sure 
WITHOUT_CLASSIFICATION	 nop 
WITHOUT_CLASSIFICATION	 modify servers client port 
WITHOUT_CLASSIFICATION	 receive challenge and store somewhere else 
WITHOUT_CLASSIFICATION	 test that the path string validated 
WITHOUT_CLASSIFICATION	 set the margin 
WITHOUT_CLASSIFICATION	 inject network problem one the follower 
WITHOUT_CLASSIFICATION	 this the auth have expand the authenticated ids the requestor 
WITHOUT_CLASSIFICATION	 processresult used clientcnxns sendthread respond data contains the zookeeper servers sasl token ctx the zookeepersaslclient object use this objects respondtoserver method reply the zookeeper servers sasl token 
WITHOUT_CLASSIFICATION	 now just start watching the assignments directory 
WITHOUT_CLASSIFICATION	 try delete now have done with the created file why wait for deleteonexit deletion 
WITHOUT_CLASSIFICATION	 leadernewleader 
WITHOUT_CLASSIFICATION	 check the node exist previous leader but not others 
WITHOUT_CLASSIFICATION	 start with the initlimit once the ack processed learnerhandler switch the synclimit 
WITHOUT_CLASSIFICATION	 watcher function doesnt exists for the specified params 
WITHOUT_CLASSIFICATION	 see zookeeper for more details 
WITHOUT_CLASSIFICATION	 divide the new servers into oldservers that were the previous list 
WITHOUT_CLASSIFICATION	 higher 
WITHOUT_CLASSIFICATION	 eventwatch simple immutable type all need make sure can create all possible combinations values 
WITHOUT_CLASSIFICATION	 kill anything that was removed for the children 
WITHOUT_CLASSIFICATION	 let the notifications timeout 
WITHOUT_CLASSIFICATION	 success 
WITHOUT_CLASSIFICATION	 test that all servers have 
WITHOUT_CLASSIFICATION	 force leader use snapshot sync with follower 
WITHOUT_CLASSIFICATION	 quorum new config 
WITHOUT_CLASSIFICATION	 reconfiguration multiple other operations may ready committed since operations wait for different sets acks currently only permit one outstanding reconfiguration time such that the reconfiguration and subsequent outstanding ops proposed while the reconfig pending all wait for quorum old and new config its not possible get enough acks for operation without getting enough acks for preceding ops but the future multiple concurrent reconfigs are allowed this can happen and then need check whether some pending ops may already have enough acks and can committed which what this code does 
WITHOUT_CLASSIFICATION	 loginfodefaulting majority quorums 
WITHOUT_CLASSIFICATION	 when increment 
WITHOUT_CLASSIFICATION	 check shutdown doio closed this connection 
WITHOUT_CLASSIFICATION	 verify tree deleted 
WITHOUT_CLASSIFICATION	 used clientcnxn know whether emit saslrelated event either authfailed saslauthenticated 
WITHOUT_CLASSIFICATION	 send snap 
WITHOUT_CLASSIFICATION	 there isnt any version associated with the filename the default version 
WITHOUT_CLASSIFICATION	 and the stat and quota nodes 
WITHOUT_CLASSIFICATION	 followers its view 
WITHOUT_CLASSIFICATION	 verify that joiner has uptodate config including all four servers 
WITHOUT_CLASSIFICATION	 you update the configuration parameters sure update the conf letter word 
WITHOUT_CLASSIFICATION	 ignore cant find the path will output instead 
WITHOUT_CLASSIFICATION	 assert that commands are getting forwarded correctly 
WITHOUT_CLASSIFICATION	 disabled 
WITHOUT_CLASSIFICATION	 only previously existing records need rolled back 
WITHOUT_CLASSIFICATION	 nonjavadoc see gettitle 
WITHOUT_CLASSIFICATION	 number machines becomes smaller server the new cluster 
WITHOUT_CLASSIFICATION	 just put the description 
WITHOUT_CLASSIFICATION	 cleanup path watchlist 
WITHOUT_CLASSIFICATION	 test that when asking for more snaps than created still only get snaps 
WITHOUT_CLASSIFICATION	 only include votes from machines that heard from 
WITHOUT_CLASSIFICATION	 integer representation value 
WITHOUT_CLASSIFICATION	 day 
WITHOUT_CLASSIFICATION	 make sure different leader was elected 
WITHOUT_CLASSIFICATION	 populate digestmd user password map with jaas configuration entries from the quorumserver section usernames are distinguished from other options prefixing the username with user prefix 
WITHOUT_CLASSIFICATION	 hostclientport appending clientport 
WITHOUT_CLASSIFICATION	 this attempt ensure that not all the servers the ensemble take snapshot the same time 
WITHOUT_CLASSIFICATION	 since this already committed proposal need follow 
WITHOUT_CLASSIFICATION	 required for compilation from 
WITHOUT_CLASSIFICATION	 mapping from peer thread number 
WITHOUT_CLASSIFICATION	 eof reached 
WITHOUT_CLASSIFICATION	 not directory 
WITHOUT_CLASSIFICATION	 dont expect get the same stats for different creates 
WITHOUT_CLASSIFICATION	 when reset 
WITHOUT_CLASSIFICATION	 clientinitiated renegotiation tls unsafe and allows mitm attacks should disable unless was explicitly enabled the user brief summary the issue can found 
WITHOUT_CLASSIFICATION	 make space for length 
WITHOUT_CLASSIFICATION	 peer has zxid txnlog range 
WITHOUT_CLASSIFICATION	 check watches 
WITHOUT_CLASSIFICATION	 element could removed poll 
WITHOUT_CLASSIFICATION	 that rather innocuous 
WITHOUT_CLASSIFICATION	 log warning message txn comes outoforder 
WITHOUT_CLASSIFICATION	 reset acl back open and verify accessible again 
WITHOUT_CLASSIFICATION	 the leader executes the following block which essentially shuts down the peer not the last round 
WITHOUT_CLASSIFICATION	 expiry time nowcnxntimeout cnxntimeout range now cnxntimeout now cnxntimeout add buffer safe 
WITHOUT_CLASSIFICATION	 currently shouldnt happen since there are only learner types 
WITHOUT_CLASSIFICATION	 setup redirect outerr streams get systeminerr use this judiciously get current err 
WITHOUT_CLASSIFICATION	 only participant need get outstanding proposals 
WITHOUT_CLASSIFICATION	 corrupting the data 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 give things time report 
WITHOUT_CLASSIFICATION	 have loopback and has address use 
WITHOUT_CLASSIFICATION	 this server not looking but the one that sent the ack looking then send back what believes the leader 
WITHOUT_CLASSIFICATION	 find out who the leader and kill 
WITHOUT_CLASSIFICATION	 port static config file 
WITHOUT_CLASSIFICATION	 sketchy assume there will leader probably seconds 
WITHOUT_CLASSIFICATION	 leader asks for epoch mocking leaderlead behavior first add connectingfollowers 
WITHOUT_CLASSIFICATION	 nonjavadoc see javalangstring javalangstring 
WITHOUT_CLASSIFICATION	 its all over 
WITHOUT_CLASSIFICATION	 test stat and watch non existent node 
WITHOUT_CLASSIFICATION	 need synchronize since cnxns backed concurrenthashmap 
WITHOUT_CLASSIFICATION	 quorum members 
WITHOUT_CLASSIFICATION	 the change should not have happened yet since havent committed 
WITHOUT_CLASSIFICATION	 since they cant complete the reconfig 
WITHOUT_CLASSIFICATION	 revocation checking only supported with the pkix algorithm 
WITHOUT_CLASSIFICATION	 this test wouldnt create any dynamic config however adds clientportxxx static config file checks the standard way standalone mode 
WITHOUT_CLASSIFICATION	 the stat parameter should optional 
WITHOUT_CLASSIFICATION	 create 
WITHOUT_CLASSIFICATION	 the weights are not above zero things will get messed 
WITHOUT_CLASSIFICATION	 try load nonprotected private key while providing password 
WITHOUT_CLASSIFICATION	 since configuration initializes the key store and trust store related configuration from system property reading property from configuration will same reading from system property 
WITHOUT_CLASSIFICATION	 not able truncate the log 
WITHOUT_CLASSIFICATION	 more packets send turn off write interest flag will turned later later call enablewrite from within zookeepersaslclient client configured attempt sasl authentication either doio dotransport not 
WITHOUT_CLASSIFICATION	 were testing follower also check the session the 
WITHOUT_CLASSIFICATION	 not the view 
WITHOUT_CLASSIFICATION	 perhaps this create 
WITHOUT_CLASSIFICATION	 since this rough sanity check add some padding maxbuffer make for extra fields etc otherwise clients may able write buffers larger than can read from disk 
WITHOUT_CLASSIFICATION	 submit request directly leader 
WITHOUT_CLASSIFICATION	 add the recent snap files for assertion 
WITHOUT_CLASSIFICATION	 update lastcommitted and dbs zxid value representing the new epoch 
WITHOUT_CLASSIFICATION	 this unlikely edge case but check just case 
WITHOUT_CLASSIFICATION	 verify clientcnxnsocketnio creation 
WITHOUT_CLASSIFICATION	 since have already acked epoch equal the leaders cannot ack again but still need send our lastzxid the leader that can sync with does assume leadership the epoch the indicates that this reply should not count ack for the new epoch 
WITHOUT_CLASSIFICATION	 here create znodes 
WITHOUT_CLASSIFICATION	 start the servers with static config file without dynamic config file 
WITHOUT_CLASSIFICATION	 this tests the case where ensemble does not have the super users password configured reconfig should fail the super user has explicitly configured via 
WITHOUT_CLASSIFICATION	 cut the connection the server will create closesession part 
WITHOUT_CLASSIFICATION	 send diff when see the followers zxid our history 
WITHOUT_CLASSIFICATION	 peer has zxid 
WITHOUT_CLASSIFICATION	 now check that other commands dont blow everything 
WITHOUT_CLASSIFICATION	 rfc server identity names may contain the wildcard character which considered match any single domain name component component fragment based this statement presuming only singular wildcard legal 
WITHOUT_CLASSIFICATION	 found path watcher 
WITHOUT_CLASSIFICATION	 well catch this later does happen after timeout why waste the time poll 
WITHOUT_CLASSIFICATION	 override the defaults 
WITHOUT_CLASSIFICATION	 before expiration 
WITHOUT_CLASSIFICATION	 determine how long sleep from looking tickets expiry should not allow the ticket expire but should take into consideration will not sleep less than unless doing would cause ticket expiration 
WITHOUT_CLASSIFICATION	 this relatively common exception that cant avoid 
WITHOUT_CLASSIFICATION	 null storefiletype means autodetect from file extension 
WITHOUT_CLASSIFICATION	 when local flag true remove watchers for the given path irrespective otherwise shouldnt remove watchers locally when sees failure from server 
WITHOUT_CLASSIFICATION	 queue any outstanding requests enabling the receipt new requests 
WITHOUT_CLASSIFICATION	 this twice the timeout used 
WITHOUT_CLASSIFICATION	 make create fail then verify cversion 
WITHOUT_CLASSIFICATION	 recent snap shots 
WITHOUT_CLASSIFICATION	 sequence numbers for messages 
WITHOUT_CLASSIFICATION	 also auth enabled while enabling quorum server require sasl 
WITHOUT_CLASSIFICATION	 clear the kerberos state but the tokens are not cleared per the java kerberos login module code only the kerberos credentials 
WITHOUT_CLASSIFICATION	 this not cnxns then its already closed 
WITHOUT_CLASSIFICATION	 first char buffer leave the string buffer empty 
WITHOUT_CLASSIFICATION	 wait for new servers running 
WITHOUT_CLASSIFICATION	 check and make sure the change persisted 
WITHOUT_CLASSIFICATION	 verify super can anything and ignores acls 
WITHOUT_CLASSIFICATION	 nothing just try again 
WITHOUT_CLASSIFICATION	 roundrobin assign this connection selector thread 
WITHOUT_CLASSIFICATION	 warn about inconsistent peer type 
WITHOUT_CLASSIFICATION	 text area for the message 
WITHOUT_CLASSIFICATION	 start mock server 
WITHOUT_CLASSIFICATION	 global variable keeping track how many peers have successfully joined 
WITHOUT_CLASSIFICATION	 set socket linger false that socket close does not block 
WITHOUT_CLASSIFICATION	 clear the buf dont get something read before sought number entries skipped get the end the iterator less the number skipped get the start 
WITHOUT_CLASSIFICATION	 test that the majority quorum verifier only counts votes from 
WITHOUT_CLASSIFICATION	 use reduce the number packets this 
WITHOUT_CLASSIFICATION	 the new servers config going include itself and the current leader 
WITHOUT_CLASSIFICATION	 verify that the truncation and subsequent append were processed 
WITHOUT_CLASSIFICATION	 client login 
WITHOUT_CLASSIFICATION	 take advantage the limited size the length look for cmds they are all bytes which fits inside int 
WITHOUT_CLASSIFICATION	 add previously existing records back 
WITHOUT_CLASSIFICATION	 now that the ack has been processed expect the synclimit 
WITHOUT_CLASSIFICATION	 determine how much time process has wait once believes that has reached the end leader election 
WITHOUT_CLASSIFICATION	 this assertfails means are not cleaning after the closed sessions 
WITHOUT_CLASSIFICATION	 might consider changing the processor behaviour observers for example remove the disk sync requirements currently they behave almost exactly the same followers 
WITHOUT_CLASSIFICATION	 the available port range that use stays away from the ephemeral port range which the will assign client socket connections cant coordinate with the the assignment those ports its best stay out that range avoid conflicts typical ranges for ephemeral ports are iana suggests linux typically uses freebsd modern versions typically use the iana suggested range windows modern versions typically use the iana suggested range 
WITHOUT_CLASSIFICATION	 check for more than children zookeeperstats and zookeeperqutoas are not the children then this path ancestor some path that 
WITHOUT_CLASSIFICATION	 nonjavadoc see listselectionevent 
WITHOUT_CLASSIFICATION	 generate transaction will have some txnlog 
WITHOUT_CLASSIFICATION	 each session should see its cxids order 
WITHOUT_CLASSIFICATION	 let qpconfig parse the file and then pull the stuff are interested 
WITHOUT_CLASSIFICATION	 look through the logs for output that indicates the falseleader leading then looking then following 
WITHOUT_CLASSIFICATION	 general will see connection from each host setting the initial cap allows minimize mem usage the common case entry need set the initial cap avoid rehash when the first entry added 
WITHOUT_CLASSIFICATION	 use the order array preserve the order the commands for help the hashmap will not preserver order may overkill 
WITHOUT_CLASSIFICATION	 diff only 
WITHOUT_CLASSIFICATION	 string subreport reads double rlatency reads writes double wlatency writes 
WITHOUT_CLASSIFICATION	 try creating some data 
WITHOUT_CLASSIFICATION	 abstraction that interprets the field znode originally the ephemeralowner noted that znode ephemeral and which session created the node through optional system property extended features such ttl nodes can enabled special bits the ephemeralowner are used denote which feature enabled and the remaining bits the ephemeralowner are feature specific when the system property true extended types are enabled extended ephemeralowner defined ephemeralowner whose high bits are set codexfflcode the two bytes that follow the high bits are used denote which extended feature the ephemeralowner represents the remaining bytes are used the feature for whatever purpose needed currently the only extended feature ttl nodes denoted the extended feature value for ttl nodes the ephemeralowner has the high byte set xff and the next bytes are followed bytes that represent the ttl value milliseconds ephemeralowner with ttl value millisecond codexffcode add new extended features add new name the enum define constant extendedbitxxxx thats next line after ttls that would codexcode add mapping the extendedfeaturemap via the static initializer note container nodes technically are extended types but was implemented before this feature they are denoted specially ephemeral owner with only the high bit set codexlcode definition container node irrespective whether not extended types are enabled 
WITHOUT_CLASSIFICATION	 null storefiletype means autodetect from file extension 
WITHOUT_CLASSIFICATION	 recovery mode 
WITHOUT_CLASSIFICATION	 for backward compatibility test some tests create dynamic configuration without setting client port 
WITHOUT_CLASSIFICATION	 zookeeper disables all default 
WITHOUT_CLASSIFICATION	 reconfigure out leader and follower remaining follower 
WITHOUT_CLASSIFICATION	 and newservers that were not the previous list 
WITHOUT_CLASSIFICATION	 zkserver has been started dont need start again securecnxnfactory 
WITHOUT_CLASSIFICATION	 keep track the latest zxid which already queued 
WITHOUT_CLASSIFICATION	 clear data structures used for auth 
WITHOUT_CLASSIFICATION	 client configured use valid login configuration authentication either progress successful failed 
WITHOUT_CLASSIFICATION	 check 
WITHOUT_CLASSIFICATION	 the old port should clear this stage 
WITHOUT_CLASSIFICATION	 enable disabled 
WITHOUT_CLASSIFICATION	 unlike with krbloginmodule dont any actual login credential passing here authentication zookeeper done later through the saslclient object 
WITHOUT_CLASSIFICATION	 the synchronized prevent the race shared variable sslengine basically only need create once 
WITHOUT_CLASSIFICATION	 bring back 
WITHOUT_CLASSIFICATION	 trigger event make sure that not get 
WITHOUT_CLASSIFICATION	 create session with min value 
WITHOUT_CLASSIFICATION	 peer has newer zxid 
WITHOUT_CLASSIFICATION	 height the toster 
WITHOUT_CLASSIFICATION	 are going say last acked epoch 
WITHOUT_CLASSIFICATION	 setup channel variables connection etc 
WITHOUT_CLASSIFICATION	 zookeeper votes are received for live peers reset voting for ourselves otherwise may hang vote 
WITHOUT_CLASSIFICATION	 this lock guarantees that channel wont assigned after cleanup 
WITHOUT_CLASSIFICATION	 interval 
WITHOUT_CLASSIFICATION	 maintain semantics even chroot case specifically root cannot deleted think this makes sense even chroot case 
WITHOUT_CLASSIFICATION	 pzxid updated with deletenode higher zxid 
WITHOUT_CLASSIFICATION	 make sure the leader has the subsequent changes that were made while was offline 
WITHOUT_CLASSIFICATION	 validate that dont see any txn from the first session 
WITHOUT_CLASSIFICATION	 not null then shutdown this leader 
WITHOUT_CLASSIFICATION	 leader election time unless the designated leader fails 
WITHOUT_CLASSIFICATION	 commmitedlog empty will use txnlog lastprocesszxid 
WITHOUT_CLASSIFICATION	 kill server avoid interferences with fle the quorum 
WITHOUT_CLASSIFICATION	 lets conservative the typical number children 
WITHOUT_CLASSIFICATION	 take advantage the limited size the length look 
WITHOUT_CLASSIFICATION	 the create will trigger the get children and the exist watches 
WITHOUT_CLASSIFICATION	 there should create requests 
WITHOUT_CLASSIFICATION	 only take the first servers old quorum config 
WITHOUT_CLASSIFICATION	 delete node folowed update the now deleted node 
WITHOUT_CLASSIFICATION	 convert watchedevent type that can sent over the wire 
WITHOUT_CLASSIFICATION	 throws loginexception see startconnect below 
WITHOUT_CLASSIFICATION	 send session 
WITHOUT_CLASSIFICATION	 this method gets the version from the end dynamic file name for example zoocfgdynamic returns initial version zoocfgdynamic returns version hex number dynamic file name doesnt have any version the end file 
WITHOUT_CLASSIFICATION	 verify each quorum peer has expected config its config znode 
WITHOUT_CLASSIFICATION	 returns all configuration servers participants and observers 
WITHOUT_CLASSIFICATION	 first convert participant observer then observer participant 
WITHOUT_CLASSIFICATION	 convince falseleader that the leader 
WITHOUT_CLASSIFICATION	 version version config from which want reconfigure current config different reconfiguration will fail should committed from the cli disable this option 
WITHOUT_CLASSIFICATION	 update the node the leader 
WITHOUT_CLASSIFICATION	 check for the code path that throws server 
WITHOUT_CLASSIFICATION	 number machines increases server not the new cluster load old servers must decreased must connect one the new servers pnew 
WITHOUT_CLASSIFICATION	 set watches child 
WITHOUT_CLASSIFICATION	 take snapshot 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 have the request now process and setup for next 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 check that static config file doesnt include membership info and has pointer the dynamic configuration file 
WITHOUT_CLASSIFICATION	 fallthrough and log errors outside the synchronized block 
WITHOUT_CLASSIFICATION	 are going have extrapolate the epoch information 
WITHOUT_CLASSIFICATION	 best effort print the path assoc with this request 
WITHOUT_CLASSIFICATION	 and close the connection the leader 
WITHOUT_CLASSIFICATION	 neither option specified delete the quota node for thsi node 
WITHOUT_CLASSIFICATION	 shutdown has explicitly called for every thread make sure that resources are freed properly and all fixed network ports are available for other test cases 
WITHOUT_CLASSIFICATION	 are now going start getting transactions apply followed uptodate 
WITHOUT_CLASSIFICATION	 nonjavadoc see treeselectionevent 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 followers out are majority the voting view 
WITHOUT_CLASSIFICATION	 its supposed the first server serverlist well set later see below 
WITHOUT_CLASSIFICATION	 config file 
WITHOUT_CLASSIFICATION	 dont overwrite with special xids were interested the clients last real operation 
WITHOUT_CLASSIFICATION	 election port 
WITHOUT_CLASSIFICATION	 cversion keep newly created containers from being deleted before any children have been added you were create the container just before container cleaning period the container would immediately deleted 
WITHOUT_CLASSIFICATION	 interesting see whats there 
WITHOUT_CLASSIFICATION	 during session upgrade 
WITHOUT_CLASSIFICATION	 construct connection request 
WITHOUT_CLASSIFICATION	 create test znode and check that readwrite works before 
WITHOUT_CLASSIFICATION	 next the old servers 
WITHOUT_CLASSIFICATION	 during second iteration leavingindex will the index the leader 
WITHOUT_CLASSIFICATION	 password test 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 make sure nothing straggling 
WITHOUT_CLASSIFICATION	 quorum port 
WITHOUT_CLASSIFICATION	 attempting load with the wrong key password should fail 
WITHOUT_CLASSIFICATION	 there can extra sessionclose proposals 
WITHOUT_CLASSIFICATION	 create servers 
WITHOUT_CLASSIFICATION	 trigger the watches and ensure they properly propagate the client 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 get the string that being dropped 
WITHOUT_CLASSIFICATION	 nonjavadoc int 
WITHOUT_CLASSIFICATION	 get memory information 
WITHOUT_CLASSIFICATION	 make all zxids for given vote equal the largest zxid seen for 
WITHOUT_CLASSIFICATION	 use async otherwise will block the loglock zkdatabase and the setdata request will timeout 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 create ephemeral node 
WITHOUT_CLASSIFICATION	 match with nextpending that can move the next request when committed also want use nextpending because has the cnxn member set properly 
WITHOUT_CLASSIFICATION	 set that have been interrupted 
WITHOUT_CLASSIFICATION	 first make the views consistent sometimes peers will have different zxids for server depending timing 
WITHOUT_CLASSIFICATION	 verify that hasnt changed the original acl objects 
WITHOUT_CLASSIFICATION	 first address worked 
WITHOUT_CLASSIFICATION	 cause disconnection this will cause next called which will turn call nextreconfigmode 
WITHOUT_CLASSIFICATION	 try reduce memory consumption freeing buffer space which longer needed 
WITHOUT_CLASSIFICATION	 wait until followers time out getepochtopropose they shouldnt return normally because the leader didnt execute getepochtopropose and its epoch was not 
WITHOUT_CLASSIFICATION	 seconds should plenty time 
WITHOUT_CLASSIFICATION	 add all commandmap 
WITHOUT_CLASSIFICATION	 assume this existing cluster 
WITHOUT_CLASSIFICATION	 check events 
WITHOUT_CLASSIFICATION	 there only one createsession request between zxid diff will exactly the alternative way checking actually 
WITHOUT_CLASSIFICATION	 verify all the servers reporting same number nodes 
WITHOUT_CLASSIFICATION	 increase the tick time delay the leader going looking 
WITHOUT_CLASSIFICATION	 server ids are and 
WITHOUT_CLASSIFICATION	 however should able disconnect and reconnect the same server with the same session long quickly 
WITHOUT_CLASSIFICATION	 waiting time for expected condition 
WITHOUT_CLASSIFICATION	 nonjavadoc see javalangstring 
WITHOUT_CLASSIFICATION	 wait until leader starts 
WITHOUT_CLASSIFICATION	 exit follower after taking snapshot 
WITHOUT_CLASSIFICATION	 the dynamic file pointer 
WITHOUT_CLASSIFICATION	 append and commit transactions the log 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 try sync exists 
WITHOUT_CLASSIFICATION	 attempt renegotiate after establishing the connection 
WITHOUT_CLASSIFICATION	 verify alwaysontop flag 
WITHOUT_CLASSIFICATION	 leader and learner will control the zookeeper server and pass into quorumpeer 
WITHOUT_CLASSIFICATION	 foo 
WITHOUT_CLASSIFICATION	 dont want this check since the session expiration thread queues this operation without being the session owner this request the last the session should requestgetowner 
WITHOUT_CLASSIFICATION	 have some match and need update 
WITHOUT_CLASSIFICATION	 object created but start not called yet start called but background thread has not entered main loop background thread running stop called but background thread has not exited main loop stop called and background thread has exited background thread crashed 
WITHOUT_CLASSIFICATION	 already simple just return 
WITHOUT_CLASSIFICATION	 waiting for reelection 
WITHOUT_CLASSIFICATION	 target file does not exist 
WITHOUT_CLASSIFICATION	 note that clienttoken might empty clienttokenlength using the digestmd mechanism clienttoken will empty the beginning the sasl negotiation process 
WITHOUT_CLASSIFICATION	 check that membership makes sense leader will make these checks again dont check for leader election ports since client doesnt know what leader election alg used 
WITHOUT_CLASSIFICATION	 weve already validated therefore the path length its the root 
WITHOUT_CLASSIFICATION	 pass 
WITHOUT_CLASSIFICATION	 this replicates close the output stream before reading 
WITHOUT_CLASSIFICATION	 command specified print links all commands instead 
WITHOUT_CLASSIFICATION	 session should automatically expire after amount time 
WITHOUT_CLASSIFICATION	 with padding the filename 
WITHOUT_CLASSIFICATION	 are the final link the chain 
WITHOUT_CLASSIFICATION	 done checking its the root 
WITHOUT_CLASSIFICATION	 set default font 
WITHOUT_CLASSIFICATION	 leaving comma separated list server ids removed from the ensemble only used for incremental reconfigurations 
WITHOUT_CLASSIFICATION	 try node creation for around second 
WITHOUT_CLASSIFICATION	 the user explicitly overrides the default login context they probably expected sasl succeed but got here sasl failed 
WITHOUT_CLASSIFICATION	 servers have been set now test secure connection successful 
WITHOUT_CLASSIFICATION	 assert remotepeerbean replicatedserver 
WITHOUT_CLASSIFICATION	 the leader going dump the database 
WITHOUT_CLASSIFICATION	 for dead peer 
WITHOUT_CLASSIFICATION	 visiblefortesting 
WITHOUT_CLASSIFICATION	 login and also update the subject field this instance 
WITHOUT_CLASSIFICATION	 process sync request 
WITHOUT_CLASSIFICATION	 however failure still expected user not authenticated acl check will fail 
WITHOUT_CLASSIFICATION	 threadsleep 
WITHOUT_CLASSIFICATION	 note that this thread isnt going doing anything else rather than spawning another thread will just call run this thread 
WITHOUT_CLASSIFICATION	 dumpconnections connection implemented only 
WITHOUT_CLASSIFICATION	 make sure that they timed out and didnt return normally 
WITHOUT_CLASSIFICATION	 dont need roll back any records because there nothing left 
WITHOUT_CLASSIFICATION	 xffffffffl 
WITHOUT_CLASSIFICATION	 incremental change must majority quorum system 
WITHOUT_CLASSIFICATION	 assert remotepeerbean replicatedserver 
WITHOUT_CLASSIFICATION	 exception set when local session failed upgrade just need report the error 
WITHOUT_CLASSIFICATION	 have check closingchannel because error receivemessage could have led close being called 
WITHOUT_CLASSIFICATION	 the xid for pings 
WITHOUT_CLASSIFICATION	 concurrent reconfigs are allowed this can happen 
WITHOUT_CLASSIFICATION	 oldest log already remove this should point the start 
WITHOUT_CLASSIFICATION	 reconstructing transaction with the chroot prefix 
WITHOUT_CLASSIFICATION	 verify the data the second transaction 
WITHOUT_CLASSIFICATION	 now check the bytes match the quota 
WITHOUT_CLASSIFICATION	 step for the toaster 
WITHOUT_CLASSIFICATION	 higher zxid 
WITHOUT_CLASSIFICATION	 the list already removed from the ephemerals not have worry about synchronizing the list this only called from there need for synchronization the list not changed here only create and delete change the list which are again called from sequence 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 authentication packet 
WITHOUT_CLASSIFICATION	 this should never happen 
WITHOUT_CLASSIFICATION	 but still whats valid white list will get through 
WITHOUT_CLASSIFICATION	 need make sure that dont take the snapshot twice 
WITHOUT_CLASSIFICATION	 ill remain the leader 
WITHOUT_CLASSIFICATION	 fails 
WITHOUT_CLASSIFICATION	 diff proposals commit 
WITHOUT_CLASSIFICATION	 the connect attempt was cancelled but succeeded anyway make sure close the channel otherwise may leak file descriptor 
WITHOUT_CLASSIFICATION	 reset minsnapretaincount invalid less than file int will not allow purge less 
WITHOUT_CLASSIFICATION	 verify that empty child name success sequential 
WITHOUT_CLASSIFICATION	 send trunc and forward any packet starting 
WITHOUT_CLASSIFICATION	 node created successfully then means that zookeeper service 
WITHOUT_CLASSIFICATION	 visiblefortesting 
WITHOUT_CLASSIFICATION	 throttle acceptance new requests this entailed state change 
WITHOUT_CLASSIFICATION	 main loop 
WITHOUT_CLASSIFICATION	 this should never happen but should fall back sending snapshot just case 
WITHOUT_CLASSIFICATION	 nonjavadoc getsessionmeta 
WITHOUT_CLASSIFICATION	 add all the removed watch events the event queue that the clients will notified with datachild watchremoved event type 
WITHOUT_CLASSIFICATION	 the pattern holding far lets run the counter bit sure continues spit out the correct answer 
WITHOUT_CLASSIFICATION	 creates list peers 
WITHOUT_CLASSIFICATION	 use single listener instance reduce note this listener only added when logistraceenabled true 
WITHOUT_CLASSIFICATION	 last committed was leader change from now the new leader should commit 
WITHOUT_CLASSIFICATION	 new watcher which will used for removal 
WITHOUT_CLASSIFICATION	 close the session that ephemeral node deleted 
WITHOUT_CLASSIFICATION	 matching has been deprecated rfc and can used fallback only when subjectalts are available 
WITHOUT_CLASSIFICATION	 content changed 
WITHOUT_CLASSIFICATION	 write extra configurations 
WITHOUT_CLASSIFICATION	 during connection expiry the server will close the connection after the socket closed when the client tries read line text will throw see jira issue zookeeper 
WITHOUT_CLASSIFICATION	 session creation assertfails dump the thread stack and try the next server 
WITHOUT_CLASSIFICATION	 extract server from first part joiner serverx 
WITHOUT_CLASSIFICATION	 learner with ipaddress principal 
WITHOUT_CLASSIFICATION	 this expected case since server down and cant vote observer current role and need votes from 
WITHOUT_CLASSIFICATION	 remove watcher for each node and remove node from collection watched nodes 
WITHOUT_CLASSIFICATION	 create the nioservercnxn that will handle the client requests 
WITHOUT_CLASSIFICATION	 this the limit node get the real node and update the count and the bytes 
WITHOUT_CLASSIFICATION	 wait for servers 
WITHOUT_CLASSIFICATION	 try again 
WITHOUT_CLASSIFICATION	 set true when connected quorum server 
WITHOUT_CLASSIFICATION	 worst case here the tmp fileresourcesfd are not cleaned and the caller will notified ioexception 
WITHOUT_CLASSIFICATION	 test child watch and create with sequence 
WITHOUT_CLASSIFICATION	 return zxid zero since the database empty 
WITHOUT_CLASSIFICATION	 start peer and check joins the quorum 
WITHOUT_CLASSIFICATION	 authenticate client certificate 
WITHOUT_CLASSIFICATION	 use setdata instead sync api force view update check zookeeper for details 
WITHOUT_CLASSIFICATION	 color for toaster 
WITHOUT_CLASSIFICATION	 now check the counts match the quota 
WITHOUT_CLASSIFICATION	 here enable the which zookeeper tests depends 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 this the only child node 
WITHOUT_CLASSIFICATION	 make sure has chance write disk 
WITHOUT_CLASSIFICATION	 start and schedule the the purge task 
WITHOUT_CLASSIFICATION	 peer within committedlog range 
WITHOUT_CLASSIFICATION	 empty logs 
WITHOUT_CLASSIFICATION	 close the client without changing the node 
WITHOUT_CLASSIFICATION	 dont need worry about removing empty sets theyll eventually removed when they expire 
WITHOUT_CLASSIFICATION	 shouldnt happen without filter 
WITHOUT_CLASSIFICATION	 means notification 
WITHOUT_CLASSIFICATION	 kill half the servers make change restart the dead 
WITHOUT_CLASSIFICATION	 sends more notifications havent received enough otherwise processes new notification 
WITHOUT_CLASSIFICATION	 shutdown flag 
WITHOUT_CLASSIFICATION	 assert 
WITHOUT_CLASSIFICATION	 getznodelist and getznodelistjson are bogus but necessary unfortunately jersey unable render both xml and json properly the case where object contains listarray its impossible get render properly for both result need split into two jaxb classes 
WITHOUT_CLASSIFICATION	 todo test octet fully 
WITHOUT_CLASSIFICATION	 this can happen state transitions just ignore the request 
WITHOUT_CLASSIFICATION	 addition when performing operations particular subject subjectdoas the tobeused gsscredential should added subjects private credential set otherwise the gss operations will fail since credential found 
WITHOUT_CLASSIFICATION	 local session 
WITHOUT_CLASSIFICATION	 building notification packet send 
WITHOUT_CLASSIFICATION	 followers out not majority 
WITHOUT_CLASSIFICATION	 ignore 
WITHOUT_CLASSIFICATION	 authenticating learner 
WITHOUT_CLASSIFICATION	 sasl authentication completed successfully not enable the sockets writable flag that any packets waiting for authentication complete 
WITHOUT_CLASSIFICATION	 assert resolver called times because shouldnt cache the resolved addresses 
WITHOUT_CLASSIFICATION	 stat ruok and isro are white listed 
WITHOUT_CLASSIFICATION	 the response 
WITHOUT_CLASSIFICATION	 getting quorum from all necessary configurations 
WITHOUT_CLASSIFICATION	 ignore for purposes this test 
WITHOUT_CLASSIFICATION	 matches authenticationid and authorizationid 
WITHOUT_CLASSIFICATION	 the following ifthenelse block process syncs the leader the sync coming from follower then the follower handler adds synchandler otherwise client the leader that issued the sync command then synchandler wont contain the handler this case add synchandler and call processrequest the next processor 
WITHOUT_CLASSIFICATION	 check for well formed acls this resolves 
WITHOUT_CLASSIFICATION	 make sure everything consistent 
WITHOUT_CLASSIFICATION	 kill all followers 
WITHOUT_CLASSIFICATION	 class verify the thread has become follower 
WITHOUT_CLASSIFICATION	 exists only defeat instantiation 
WITHOUT_CLASSIFICATION	 should see that now all servers have the same config servers 
WITHOUT_CLASSIFICATION	 possible 
WITHOUT_CLASSIFICATION	 test synchronous api 
WITHOUT_CLASSIFICATION	 read after the renegotiation attempt and will fail 
WITHOUT_CLASSIFICATION	 todo write the vaddrbytes 
WITHOUT_CLASSIFICATION	 wait seconds for the disco delivered 
WITHOUT_CLASSIFICATION	 return message queue for another attempt later epoch hasnt changed 
WITHOUT_CLASSIFICATION	 not rsa assume 
WITHOUT_CLASSIFICATION	 this file copied from hadoops security branch with the following changes package changed from usage hadoops configuration class removed since not available zookeeper instead system property used 
WITHOUT_CLASSIFICATION	 note that should run the server shut down and only then simulate reconfig progress writing the temp file but here other server competing with them fle can skip this step 
WITHOUT_CLASSIFICATION	 populate the necessary data structures the commitprocessor instance and run processcommitted 
WITHOUT_CLASSIFICATION	 create persistent sequential node 
WITHOUT_CLASSIFICATION	 pick reasonable epoch number this should only happen once when moving new code version 
WITHOUT_CLASSIFICATION	 set the values based the mode were 
WITHOUT_CLASSIFICATION	 processing queuedrequests process the next requests until find one for which need wait for commit cannot process read request while are processing write request 
WITHOUT_CLASSIFICATION	 this code originally from hdfs see the similarly named file there case bug fixing history etc branch trunk github revision dabeeceaeacbfcbb 
WITHOUT_CLASSIFICATION	 try remove follower which the only remaining server this should fail 
WITHOUT_CLASSIFICATION	 write txnlog and take periodic snapshot 
WITHOUT_CLASSIFICATION	 this test simulate the use case change membership through rolling restart for node ensemble expand node ensemble verify during the process each node has the expected configuration setting pushed via updating local zoocfg file 
WITHOUT_CLASSIFICATION	 validate upper limit 
WITHOUT_CLASSIFICATION	 wait for the listener terminate 
WITHOUT_CLASSIFICATION	 now have invalid data disk lets load and verify 
WITHOUT_CLASSIFICATION	 dont anything 
WITHOUT_CLASSIFICATION	 simply return dont require auth 
WITHOUT_CLASSIFICATION	 set saslloginfailed true simulate the loginexception 
WITHOUT_CLASSIFICATION	 aborting multi shouldnt leave any record 
WITHOUT_CLASSIFICATION	 the only requests that should tobeapplied are write requests for which will have hdr cant simply use requestzxid here because that set read requests equal the zxid the last write 
WITHOUT_CLASSIFICATION	 dont have challenge yet skip sending notification 
WITHOUT_CLASSIFICATION	 things needed for waitfornewleaderack run usually leaderlead but were not running leader here 
WITHOUT_CLASSIFICATION	 also clears the wantclientauth flag according docs 
WITHOUT_CLASSIFICATION	 but consume with log message all other types exceptions 
WITHOUT_CLASSIFICATION	 member variables for mocking zkdatabase 
WITHOUT_CLASSIFICATION	 else there need clear the database when new quorum established can still apply the diff top the same zkdb data fetch new snapshot from leader the zkdb will cleared anyway before loading the snapshot 
WITHOUT_CLASSIFICATION	 one time scheduling 
WITHOUT_CLASSIFICATION	 regardless ticketrenewwindow setting above and the ticket expiry time thread will not sleep between refresh attempts any less than minute milliseconds minute 
WITHOUT_CLASSIFICATION	 whether have any pending buffers the output queue not 
WITHOUT_CLASSIFICATION	 are throttled need queue 
WITHOUT_CLASSIFICATION	 remember these servers can add them back later 
WITHOUT_CLASSIFICATION	 dns resolution tests 
WITHOUT_CLASSIFICATION	 try load passwordprotected private key with the wrong password 
WITHOUT_CLASSIFICATION	 force buffer fill next read 
WITHOUT_CLASSIFICATION	 test view contains other servers 
WITHOUT_CLASSIFICATION	 make sure the first handshake completed and only the second one failed 
WITHOUT_CLASSIFICATION	 the value callcount can exceed only the callback thread 
WITHOUT_CLASSIFICATION	 will get checksum failure 
WITHOUT_CLASSIFICATION	 read the log back from disk this will throw javaioioexception crc check failed prior zookeeper 
WITHOUT_CLASSIFICATION	 account for running within ikvm and create new mbeanserver the platformmbeanserver does not exist 
WITHOUT_CLASSIFICATION	 registers shutdown handler which will used know the 
WITHOUT_CLASSIFICATION	 session moved connection level error need tear down the connection otw zookeeper might happen client slow follower starts renew session fails before this completes then tries the fast follower leader and successful however the initial renew then successfully fwdprocessed the leader and result the client and leader disagree where the client most recently attached and therefore invalid session moved generated 
WITHOUT_CLASSIFICATION	 have received from all nodes then terminate 
WITHOUT_CLASSIFICATION	 were done dont expect send another bind 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 write length message 
WITHOUT_CLASSIFICATION	 reconfig tests with addresses 
WITHOUT_CLASSIFICATION	 flag determine whether authenticate not 
WITHOUT_CLASSIFICATION	 since the proposal has been committed need send the commit message also 
WITHOUT_CLASSIFICATION	 now corrupt the snapshot 
WITHOUT_CLASSIFICATION	 reset cnxn factory 
WITHOUT_CLASSIFICATION	 enable observers have identifier need generic identifier least for quorumcnxmanager use the following constant the value such generic identifier 
WITHOUT_CLASSIFICATION	 try connecting with the same session different 
WITHOUT_CLASSIFICATION	 session can both local and global session during upgrade 
WITHOUT_CLASSIFICATION	 directories 
WITHOUT_CLASSIFICATION	 ignoring exception there interrupted exception then one the following assertion will fail 
WITHOUT_CLASSIFICATION	 and try renew the ticket 
WITHOUT_CLASSIFICATION	 finally should also check that the lagoff server has updated 
WITHOUT_CLASSIFICATION	 create servers 
WITHOUT_CLASSIFICATION	 checkedoutputstream cout new checkedoutputstream 
WITHOUT_CLASSIFICATION	 see jira issue zookeeper 
WITHOUT_CLASSIFICATION	 start because will create empty part first 
WITHOUT_CLASSIFICATION	 wins the challenge then close the new connection 
WITHOUT_CLASSIFICATION	 thrown the caller does not have permission retrieve the configuration this case simply returning false correct 
WITHOUT_CLASSIFICATION	 this just means that the session revalidation failed 
WITHOUT_CLASSIFICATION	 this fine 
WITHOUT_CLASSIFICATION	 verify that now zookeeper service and running 
WITHOUT_CLASSIFICATION	 should exist 
WITHOUT_CLASSIFICATION	 change everyones leader election port 
WITHOUT_CLASSIFICATION	 the files expected 
WITHOUT_CLASSIFICATION	 verify access using original auth 
WITHOUT_CLASSIFICATION	 specific election address 
WITHOUT_CLASSIFICATION	 node doesnt exists 
WITHOUT_CLASSIFICATION	 truncate 
WITHOUT_CLASSIFICATION	 snapshot containing byte znode and logfile containing create txn 
WITHOUT_CLASSIFICATION	 leader goes looking state 
WITHOUT_CLASSIFICATION	 this sleep time represents the time follower would take declare the leader dead and start new leader election 
WITHOUT_CLASSIFICATION	 number machines increased server not the new cluster 
WITHOUT_CLASSIFICATION	 peer and peer are and the above example 
WITHOUT_CLASSIFICATION	 init connection executors 
WITHOUT_CLASSIFICATION	 verify that all the servers see the same number nodes the root 
WITHOUT_CLASSIFICATION	 property not set should get the default value 
WITHOUT_CLASSIFICATION	 building challenge packet send 
WITHOUT_CLASSIFICATION	 tried all servers and couldnt connect 
WITHOUT_CLASSIFICATION	 this the only place that can throw exception 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 generates ports per server 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 now the tally 
WITHOUT_CLASSIFICATION	 pretend that any watcher exists 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 this server should fail join the quorum not using tlsv 
WITHOUT_CLASSIFICATION	 this method maintain compatiblity startupzks and enable sharing zks 
WITHOUT_CLASSIFICATION	 assuming the packet will sent out successfully because fails the channel will close and clean queues 
WITHOUT_CLASSIFICATION	 see zookeeperjava for explanation why need suppresswarningstry 
WITHOUT_CLASSIFICATION	 create with createmode 
WITHOUT_CLASSIFICATION	 which means acked from itself 
WITHOUT_CLASSIFICATION	 there are two things going the logic below skip comparing the zxid and electionepoch for votes for servers out election need skip those because they can inconsistent due scenarios described and given that only one ensemble can running single point time and that each epoch used only once using only and epoch compare the votes sufficient see skip comparing peerepoch were running with mixed ensemble with version and without the change version introduced zookeeper see the server running with and without zookeeper will return different peerepoch during rolling upgrades its possible that servers are returning epoch while the other are returning epoch the other server need ignore the peerepoch able join 
WITHOUT_CLASSIFICATION	 are done with deserializing the the datatree update the quotas create path trie and also update the stat nodes 
WITHOUT_CLASSIFICATION	 restore the system property was set previously 
WITHOUT_CLASSIFICATION	 simple operation make sure the connection fine 
WITHOUT_CLASSIFICATION	 current number toaster 
WITHOUT_CLASSIFICATION	 check that the servers are have the right config and can process operations 
WITHOUT_CLASSIFICATION	 need cancel this selection key from the selector 
WITHOUT_CLASSIFICATION	 data should get updated 
WITHOUT_CLASSIFICATION	 throw loginexceptions 
WITHOUT_CLASSIFICATION	 materialize the watchers based the event 
WITHOUT_CLASSIFICATION	 start follower after its broadcast state make sure 
WITHOUT_CLASSIFICATION	 quorum this needs auth 
WITHOUT_CLASSIFICATION	 validate that the old value there and not the new one 
WITHOUT_CLASSIFICATION	 read error and input streams this would free the buffers 
WITHOUT_CLASSIFICATION	 new 
WITHOUT_CLASSIFICATION	 useful for testing watch handling behavior 
WITHOUT_CLASSIFICATION	 sasl authentication completes 
WITHOUT_CLASSIFICATION	 only partially sent this buffer update the position and exit the loop 
WITHOUT_CLASSIFICATION	 add multiple data watches 
WITHOUT_CLASSIFICATION	 create ephemeral znode 
WITHOUT_CLASSIFICATION	 this severe error that cannot recover from need exit 
WITHOUT_CLASSIFICATION	 but written out the transaction log 
WITHOUT_CLASSIFICATION	 rest commands fail 
WITHOUT_CLASSIFICATION	 principals must not gssapi use digestmd mechanism instead 
WITHOUT_CLASSIFICATION	 this the same object thiszk but cache the downcast 
WITHOUT_CLASSIFICATION	 the version appended filename should the same the one quorum verifier 
WITHOUT_CLASSIFICATION	 override setting zktestcase 
WITHOUT_CLASSIFICATION	 should not able remove follower 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 lets either become the leader watch the newupdated node 
WITHOUT_CLASSIFICATION	 servers list but theres peertypeobserver token config 
WITHOUT_CLASSIFICATION	 started which should take one ticktime seconds 
WITHOUT_CLASSIFICATION	 the customized leader catch the startforwarding call without synchronized set the node value then call the generate the ongoing 
WITHOUT_CLASSIFICATION	 lets just make sure can still move 
WITHOUT_CLASSIFICATION	 exception expected 
WITHOUT_CLASSIFICATION	 use outofband method verify 
WITHOUT_CLASSIFICATION	 track totals seconds 
WITHOUT_CLASSIFICATION	 check that the dynamic configuration file contains the membership info 
WITHOUT_CLASSIFICATION	 get the args 
WITHOUT_CLASSIFICATION	 available 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 start taking old servers 
WITHOUT_CLASSIFICATION	 when leader election completed the leader will set its lastprocessedzxid epoch there will txn associated with this zxid the learner will set its lastprocessedzxid the same value get diff snap from the leader the same learner come back sync with leader using this zxid will never find this zxid our history this case will ignore trunc logic and always send diff have old enough history 
WITHOUT_CLASSIFICATION	 remove all the watchers for the given path 
WITHOUT_CLASSIFICATION	 dont backup static config for standalone mode also dont backup reconfig feature disabled 
WITHOUT_CLASSIFICATION	 wait for the the request processor his job 
WITHOUT_CLASSIFICATION	 should able reconnect with the same session 
WITHOUT_CLASSIFICATION	 just make sure that actually did get process the 
WITHOUT_CLASSIFICATION	 send follower info including last zxid and sid 
WITHOUT_CLASSIFICATION	 java and later prefer gcm ciphers due improved aesni support 
WITHOUT_CLASSIFICATION	 simulate the upgrading scenario where the reconfig znode 
WITHOUT_CLASSIFICATION	 another client deleted the node first 
WITHOUT_CLASSIFICATION	 clean the dead machines 
WITHOUT_CLASSIFICATION	 since preallocate define eof 
WITHOUT_CLASSIFICATION	 this test takes too long tos run 
WITHOUT_CLASSIFICATION	 changing servers role port done adding with the same 
WITHOUT_CLASSIFICATION	 send trunc and forward any packet starting 
WITHOUT_CLASSIFICATION	 need wake connect success failure avoid timing out which may blocked waiting for first connect dotransport 
WITHOUT_CLASSIFICATION	 file should not exist 
WITHOUT_CLASSIFICATION	 start old cluster 
WITHOUT_CLASSIFICATION	 since clients authentication with server progress send only the nullheader packet queued primeconnection this packet must sent that the sasl authentication process can proceed but all other packets should wait until 
WITHOUT_CLASSIFICATION	 send trunc and forward any packet starting maxcommittedlog 
WITHOUT_CLASSIFICATION	 set shutdown flag 
WITHOUT_CLASSIFICATION	 everything went 
WITHOUT_CLASSIFICATION	 first line should version info 
WITHOUT_CLASSIFICATION	 push update request the queue resume selecting the current set interest ops which may have changed 
WITHOUT_CLASSIFICATION	 inform foo update 
WITHOUT_CLASSIFICATION	 negative counter for observer server ids 
WITHOUT_CLASSIFICATION	 keep the quorum peer running and force into the looking state kill leader election 
WITHOUT_CLASSIFICATION	 set ensemble with servers 
WITHOUT_CLASSIFICATION	 anything after this needs the transaction log not applied directly memory 
WITHOUT_CLASSIFICATION	 servers and should connect all servers including the one 
WITHOUT_CLASSIFICATION	 make sure have all servers listed 
WITHOUT_CLASSIFICATION	 current state 
WITHOUT_CLASSIFICATION	 property value takes precedence provided 
WITHOUT_CLASSIFICATION	 counter count connection processing threads 
WITHOUT_CLASSIFICATION	 delaying the server startup that reference wont initialized the defect scenario while processing the connection request zkserver needs sessiontracker reference but this not yet initialized and the server still the startup phase resulting npe 
WITHOUT_CLASSIFICATION	 default value peer participant 
WITHOUT_CLASSIFICATION	 now try ephemeral node this will trigger session upgrade there will createsession request inject into the pipeline 
WITHOUT_CLASSIFICATION	 sasl authentication has succeeded failed 
WITHOUT_CLASSIFICATION	 older than ondisk txnlog 
WITHOUT_CLASSIFICATION	 header base text footer 
WITHOUT_CLASSIFICATION	 just move the new list 
WITHOUT_CLASSIFICATION	 members comma separated list new membership information contents membership configuration file for use only with nonincremental reconfiguration this may specified manually via the members flag will automatically filled reading the contents actual configuration file using the file flag 
WITHOUT_CLASSIFICATION	 the server not running hits internal error 
WITHOUT_CLASSIFICATION	 reception queue 
WITHOUT_CLASSIFICATION	 simple error checking for conflicting modes 
WITHOUT_CLASSIFICATION	 prime the server that going come late with txns 
WITHOUT_CLASSIFICATION	 validate that dont see any txn from the second session 
WITHOUT_CLASSIFICATION	 could not create tmp directory hold jaas conf file test will fail now 
WITHOUT_CLASSIFICATION	 running outside the context ant ant using single test process then use all valid ports 
WITHOUT_CLASSIFICATION	 this the mode place before for version the protocol which didnt send peer epoch 
WITHOUT_CLASSIFICATION	 data watcher 
WITHOUT_CLASSIFICATION	 follower out not majority 
WITHOUT_CLASSIFICATION	 check that the first operation successful all request 
WITHOUT_CLASSIFICATION	 check throttling 
WITHOUT_CLASSIFICATION	 start servers 
WITHOUT_CLASSIFICATION	 epoch 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 current leader candidate 
WITHOUT_CLASSIFICATION	 disconnect the client killing the socket not sending the session disconnect the server usual this allows the test verify disconnect handling 
WITHOUT_CLASSIFICATION	 delete the first log file will fail read back from disk 
WITHOUT_CLASSIFICATION	 since user has provided sessionid 
WITHOUT_CLASSIFICATION	 the outgoing queue will sent the zookeeper server 
WITHOUT_CLASSIFICATION	 nothing needed 
WITHOUT_CLASSIFICATION	 peer miss the committedlog and txnlog disabled 
WITHOUT_CLASSIFICATION	 didnt read anything within the timeout fallthrough and assume the connection plaintext 
WITHOUT_CLASSIFICATION	 the start the txn 
WITHOUT_CLASSIFICATION	 number znodes this test creates each snapshot 
WITHOUT_CLASSIFICATION	 message tag 
WITHOUT_CLASSIFICATION	 add itself 
WITHOUT_CLASSIFICATION	 this node does not have child the leaf node check its the leaf node 
WITHOUT_CLASSIFICATION	 this will wake the accept thread and the other selector threads and tell the worker thread pool begin shutdown 
WITHOUT_CLASSIFICATION	 fle fast leader election 
WITHOUT_CLASSIFICATION	 add new node should trigger watch 
WITHOUT_CLASSIFICATION	 scenario where only three parameter are passed 
WITHOUT_CLASSIFICATION	 servers without any authentication configured 
WITHOUT_CLASSIFICATION	 verify zoocfgdynamic and zoocfgbak files existing locally when reconfig feature flag off default 
WITHOUT_CLASSIFICATION	 visible for testing 
WITHOUT_CLASSIFICATION	 are setting the num quota 
WITHOUT_CLASSIFICATION	 this should flush the config servers and 
WITHOUT_CLASSIFICATION	 create datatree with quota nodes pathtrie get updated 
WITHOUT_CLASSIFICATION	 handshake 
WITHOUT_CLASSIFICATION	 servers current config next config 
WITHOUT_CLASSIFICATION	 have read length bytes 
WITHOUT_CLASSIFICATION	 this normal for example server found out about new config through fastleaderelection gossiping and then got the same config uptodate message its already known 
WITHOUT_CLASSIFICATION	 simulating logic create session request has delayed and now reaches here the leader 
WITHOUT_CLASSIFICATION	 note releases the bytebuf for dont need 
WITHOUT_CLASSIFICATION	 scenario where four parameter are passed 
WITHOUT_CLASSIFICATION	 restart peer with and should fail join the 
WITHOUT_CLASSIFICATION	 new members are initialized with current config the new server 
WITHOUT_CLASSIFICATION	 port changes after bind the original port was update localaddress get the real port 
WITHOUT_CLASSIFICATION	 member variables for mocking leader 
WITHOUT_CLASSIFICATION	 case off tries enable server sasl 
WITHOUT_CLASSIFICATION	 second add electingfollowers waitforepochack returns without exceptions 
WITHOUT_CLASSIFICATION	 should cause foobar and foo get deleted when checkcontainers called 
WITHOUT_CLASSIFICATION	 remove serverx prefix which quorum peer does not include 
WITHOUT_CLASSIFICATION	 extract keyword arguments command from request parameters 
WITHOUT_CLASSIFICATION	 nonjavadoc see orgapachejuterecord javalangstring 
WITHOUT_CLASSIFICATION	 dont have designated leader need into leader election 
WITHOUT_CLASSIFICATION	 localpeerbean replicatedserver 
WITHOUT_CLASSIFICATION	 cannot create ephemeral nodes local session 
WITHOUT_CLASSIFICATION	 got expected exception 
WITHOUT_CLASSIFICATION	 for numclients this tests the case currenthost null reconfigmode true for numclients this tests the case currenthostnull reconfigmode true 
WITHOUT_CLASSIFICATION	 test that sequential filenames are being created correctly 
WITHOUT_CLASSIFICATION	 dont schedule the purge task with zero negative purge interval 
WITHOUT_CLASSIFICATION	 may get the correct exception but the txn may through 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting 
WITHOUT_CLASSIFICATION	 ensemble and will reject 
WITHOUT_CLASSIFICATION	 validateprocessor set similar fashion tobeapplied processor can prepost validating requests 
WITHOUT_CLASSIFICATION	 returned empty set must not modifiable 
WITHOUT_CLASSIFICATION	 not writing them back static file 
WITHOUT_CLASSIFICATION	 shut servers down 
WITHOUT_CLASSIFICATION	 notifies watcher removal 
WITHOUT_CLASSIFICATION	 well fill this later 
WITHOUT_CLASSIFICATION	 exists watcher 
WITHOUT_CLASSIFICATION	 shutdown the previous 
WITHOUT_CLASSIFICATION	 mark this connection once again ready for selection 
WITHOUT_CLASSIFICATION	 the following statement will throw 
WITHOUT_CLASSIFICATION	 test that reconfiguration fails the proposed change would leave the cluster with less than participants standaloneenabled true checks that standaloneenabled false its legal remove all but one remaining server 
WITHOUT_CLASSIFICATION	 process has not terminated check has completed not just destroy 
WITHOUT_CLASSIFICATION	 myhostfoocomfoocom 
WITHOUT_CLASSIFICATION	 entry this method qcm must nonnull and the locks both qcm and qvlock must held dont want change out from under have hold qvlock and since the call qcmconnectone will take the lock qcm and take qvlock again inside that the caller needs have taken 
WITHOUT_CLASSIFICATION	 already started writing pbb will already exist 
WITHOUT_CLASSIFICATION	 default create this directory but otherwise complain instead see zookeeper for more details 
WITHOUT_CLASSIFICATION	 down 
WITHOUT_CLASSIFICATION	 must java earlier 
WITHOUT_CLASSIFICATION	 client only has outgoing socket the event loop group only needs single thread 
WITHOUT_CLASSIFICATION	 this valid node for quota 
WITHOUT_CLASSIFICATION	 seconds 
WITHOUT_CLASSIFICATION	 tests that incremental reconfig fails the current config hiearchical 
WITHOUT_CLASSIFICATION	 are cleared 
WITHOUT_CLASSIFICATION	 zxid should nonnull too 
WITHOUT_CLASSIFICATION	 shut them down and then simulate reboot with reconfig progress 
WITHOUT_CLASSIFICATION	 new followers 
WITHOUT_CLASSIFICATION	 socket options for tcp keepalive 
WITHOUT_CLASSIFICATION	 possible since its just deserialized from packet the wire 
WITHOUT_CLASSIFICATION	 all clients should connected 
WITHOUT_CLASSIFICATION	 when leadershutdown calls ssclose the call accept throws exception catch and set stop true 
WITHOUT_CLASSIFICATION	 visible for testing 
WITHOUT_CLASSIFICATION	 reset incomingbuffer 
WITHOUT_CLASSIFICATION	 tests the case currenthost null lastindex calls next for clients with index numclients 
WITHOUT_CLASSIFICATION	 make sure have these servers listed 
WITHOUT_CLASSIFICATION	 accepted epoch should now have 
WITHOUT_CLASSIFICATION	 trying load pem file with pkcs loader should fail 
WITHOUT_CLASSIFICATION	 sun doesnt include the address that causes this exception thrown also uae cannot wrapped cleanly log the exception order capture this critical detail 
WITHOUT_CLASSIFICATION	 maximum retry count while trying bind election port 
WITHOUT_CLASSIFICATION	 font used display message 
WITHOUT_CLASSIFICATION	 server login 
WITHOUT_CLASSIFICATION	 both servers and will have the next config file which means 
WITHOUT_CLASSIFICATION	 the close operation rename fails well get notified worst case the tmp file may still exist 
WITHOUT_CLASSIFICATION	 the scenario that inspired this unit test 
WITHOUT_CLASSIFICATION	 test that with snaps returns empty list 
WITHOUT_CLASSIFICATION	 check the new configuration with the same quorum address 
WITHOUT_CLASSIFICATION	 using linux bash commands retrieve info 
WITHOUT_CLASSIFICATION	 map the elem the new expiry time different previous 
WITHOUT_CLASSIFICATION	 dont validate right away will another session create first 
WITHOUT_CLASSIFICATION	 lowerbound grace period secs 
WITHOUT_CLASSIFICATION	 the default quorumverifier quorummaj 
WITHOUT_CLASSIFICATION	 java default should have the cbc suites first 
WITHOUT_CLASSIFICATION	 find some server thats staying 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 number servers stayed the same decreased 
WITHOUT_CLASSIFICATION	 closing the resources 
WITHOUT_CLASSIFICATION	 loginfoclosed client zkdescribecnxn 
WITHOUT_CLASSIFICATION	 this just packet from old server which doesnt contain readonly field 
WITHOUT_CLASSIFICATION	 arrange act 
WITHOUT_CLASSIFICATION	 character base path 
WITHOUT_CLASSIFICATION	 write read request mix 
WITHOUT_CLASSIFICATION	 send the watches 
WITHOUT_CLASSIFICATION	 before restart 
WITHOUT_CLASSIFICATION	 delete any already existing next file 
WITHOUT_CLASSIFICATION	 setdata using chroot client 
WITHOUT_CLASSIFICATION	 default white list for empty all command should fail 
WITHOUT_CLASSIFICATION	 this will add local session tracker enabled 
WITHOUT_CLASSIFICATION	 wait some time let this get written disk 
WITHOUT_CLASSIFICATION	 the leader should time out and remaining servers should into looking state new leader wont established since that would require completing the reconfig which not possible while 
WITHOUT_CLASSIFICATION	 rollback change records from failed multiop 
WITHOUT_CLASSIFICATION	 returns the serverid from the sessionid the high order byte 
WITHOUT_CLASSIFICATION	 the previous local session was not persisted 
WITHOUT_CLASSIFICATION	 servers current config next config 
WITHOUT_CLASSIFICATION	 need set islocalsession tree for these type request that the request processor can process them correctly 
WITHOUT_CLASSIFICATION	 arrange 
WITHOUT_CLASSIFICATION	 read the uptodate ack 
WITHOUT_CLASSIFICATION	 observer calls waitfornewleaderack should fail 
WITHOUT_CLASSIFICATION	 ensure all servers started 
WITHOUT_CLASSIFICATION	 stop called shortly after start before this thread started running 
WITHOUT_CLASSIFICATION	 strip leading 
WITHOUT_CLASSIFICATION	 machine under load 
WITHOUT_CLASSIFICATION	 wait for the falseleader disconnect 
WITHOUT_CLASSIFICATION	 verify whether the connecting host present authorized hosts not exists then connecting peer not authorized join the 
WITHOUT_CLASSIFICATION	 newly elected zookeeper quorum 
WITHOUT_CLASSIFICATION	 compatibility 
WITHOUT_CLASSIFICATION	 rethrow exception 
WITHOUT_CLASSIFICATION	 cool now make parentcversion will trigger fixup processing processtxn 
WITHOUT_CLASSIFICATION	 disable sending diff using txnlog that this test still testing the zookeeper bug 
WITHOUT_CLASSIFICATION	 authenticating object exists ask for its progress 
WITHOUT_CLASSIFICATION	 use txnlog and committedlog sync 
WITHOUT_CLASSIFICATION	 execute writer operation and flush 
WITHOUT_CLASSIFICATION	 eof corrupted record 
WITHOUT_CLASSIFICATION	 set peers server null 
WITHOUT_CLASSIFICATION	 check that the second operation failed after the first request 
WITHOUT_CLASSIFICATION	 restore socket timeout the old value 
WITHOUT_CLASSIFICATION	 ensure least the two clients created are accounted for 
WITHOUT_CLASSIFICATION	 dont delete tmpfile this ensures dont attempt create tmpdir with duplicate name 
WITHOUT_CLASSIFICATION	 disable enabled 
WITHOUT_CLASSIFICATION	 close the session and newly created ephemeral node should deleted 
WITHOUT_CLASSIFICATION	 only commit otherwise will flaky then verify serverstats updated the number commits threshold set 
WITHOUT_CLASSIFICATION	 clean dead sessions 
WITHOUT_CLASSIFICATION	 max buffer size read from the network 
WITHOUT_CLASSIFICATION	 send diff 
WITHOUT_CLASSIFICATION	 this server should fail join the quorum not using one the supported suites from the other 
WITHOUT_CLASSIFICATION	 before connecting quorum servers should have set dynamic file version and pointer and the lagoff server using the older version dynamic file 
WITHOUT_CLASSIFICATION	 this should never happen when executing reconfig command line because guaranteed that have zookeeperadmin instance ready use clicommand stack the only exception would test code where clients can directly set zookeeper object zookeepermain 
WITHOUT_CLASSIFICATION	 using the old plainsocketimpl prior jdk expect get socket exception 
WITHOUT_CLASSIFICATION	 when reconfig occurs where the leader removed becomes observer 
WITHOUT_CLASSIFICATION	 zookeeper createclient long sessionid zkgetsessionid byte passwd zkgetsessionpasswd zkclose zkclose loginfoclosed first session startsignal new countdownlatch new zookeeperhostport connectiontimeout this sessionid passwd startsignalawait loginfoopened reuse zkgetsessionid zkclose 
WITHOUT_CLASSIFICATION	 were good 
WITHOUT_CLASSIFICATION	 not want wait for session close send soon detect 
WITHOUT_CLASSIFICATION	 can just ignore because the child watcher takes care this 
WITHOUT_CLASSIFICATION	 current state sender 
WITHOUT_CLASSIFICATION	 get path watch 
WITHOUT_CLASSIFICATION	 ssl prohibits unilateral halfclose 
WITHOUT_CLASSIFICATION	 try access with different user myuser 
WITHOUT_CLASSIFICATION	 test failed somehow 
WITHOUT_CLASSIFICATION	 guarded sync 
WITHOUT_CLASSIFICATION	 close the session 
WITHOUT_CLASSIFICATION	 for selfsigned certs issuer subject 
WITHOUT_CLASSIFICATION	 connect 
WITHOUT_CLASSIFICATION	 updates see the implementation comment 
WITHOUT_CLASSIFICATION	 close the bad client socket immediately 
WITHOUT_CLASSIFICATION	 test receiveconnection able timeout socket errors 
WITHOUT_CLASSIFICATION	 verify that server following and has the same epoch the leader 
WITHOUT_CLASSIFICATION	 for tests and only thus packageprivate 
WITHOUT_CLASSIFICATION	 want make sure implement the state machine correctly are participant once leader elected can move either leading following however are observer error elected leader 
WITHOUT_CLASSIFICATION	 change the election round for one the members the ensemble 
WITHOUT_CLASSIFICATION	 log warning message there matching commit old leader send outstanding proposal observer 
WITHOUT_CLASSIFICATION	 validate data both follower and leader 
WITHOUT_CLASSIFICATION	 start all the servers 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 explicitly close the session then the session should 
WITHOUT_CLASSIFICATION	 send notification back the peer that sent this message also looking and its logical clock lagging behind 
WITHOUT_CLASSIFICATION	 zookeeper 
WITHOUT_CLASSIFICATION	 validate typical case requested negotiated 
WITHOUT_CLASSIFICATION	 server and the local session was not persisted 
WITHOUT_CLASSIFICATION	 the connecting peer observer 
WITHOUT_CLASSIFICATION	 gssapi server sends final packet after authentication succeeds 
WITHOUT_CLASSIFICATION	 peer has zxid epoch 
WITHOUT_CLASSIFICATION	 force snapshot and restore 
WITHOUT_CLASSIFICATION	 nothing 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 version cant parsed use the more conservative java default 
WITHOUT_CLASSIFICATION	 zookeeper testing negative number for redo command 
WITHOUT_CLASSIFICATION	 see jira issue zookeeper test auto reset large number 
WITHOUT_CLASSIFICATION	 are readonly mode seek for readwrite server 
WITHOUT_CLASSIFICATION	 lost quorum last committed andor last proposed config set shutdown flag 
WITHOUT_CLASSIFICATION	 have wait for the first ack wait until the leader ready and only then can start processing messages 
WITHOUT_CLASSIFICATION	 shutdown zookeeper 
WITHOUT_CLASSIFICATION	 second chance some cases leader change particular the timing very tricky get right order assure that the client has disconnected and reconnected some cases the client will disconnect then attempt reconnect before the server back which case well see another connloss the operation the try this catches that case and waits for the server come back 
WITHOUT_CLASSIFICATION	 force the zxid behind the content 
WITHOUT_CLASSIFICATION	 different zxids for server depending timing 
WITHOUT_CLASSIFICATION	 sends connection request asynchronously the quorum sasl authentication enabled this required because sasl server authentication process may take few seconds finish this may delay next peer connection requests 
WITHOUT_CLASSIFICATION	 suppose that this new server never heard about the reconfig proposal 
WITHOUT_CLASSIFICATION	 test worker threads are getting killed after connection loss 
WITHOUT_CLASSIFICATION	 with the defect leader hangs here also but with fix does not 
WITHOUT_CLASSIFICATION	 capture the command name from the url 
WITHOUT_CLASSIFICATION	 clear pending revalidations 
WITHOUT_CLASSIFICATION	 expected sort 
WITHOUT_CLASSIFICATION	 later epoch 
WITHOUT_CLASSIFICATION	 start with servers and clients 
WITHOUT_CLASSIFICATION	 initialize lastlogin login first time 
WITHOUT_CLASSIFICATION	 accept maxclientcnxns configureblocking 
WITHOUT_CLASSIFICATION	 start server again with corrupted database 
WITHOUT_CLASSIFICATION	 dont leak sockets errors 
WITHOUT_CLASSIFICATION	 determine whether need send authfailed event 
WITHOUT_CLASSIFICATION	 disable client sasl 
WITHOUT_CLASSIFICATION	 create transaction and snapshot files data directory 
WITHOUT_CLASSIFICATION	 the first poll just session delivery 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 different server since has been propagated 
WITHOUT_CLASSIFICATION	 correct 
WITHOUT_CLASSIFICATION	 connection set relied heavily four letter commands 
WITHOUT_CLASSIFICATION	 compare 
WITHOUT_CLASSIFICATION	 then disable throttling after seconds 
WITHOUT_CLASSIFICATION	 using the niosocketimpl after jdk the expected behaviour the client side reach the end the stream bytesread without socket exception 
WITHOUT_CLASSIFICATION	 utility method that recreates new zookeeperadmin handle and wait for the handle connect 
WITHOUT_CLASSIFICATION	 number servers increased 
WITHOUT_CLASSIFICATION	 ensure closes particular wait for thread exit 
WITHOUT_CLASSIFICATION	 reset for next run 
WITHOUT_CLASSIFICATION	 populate digestmd user password map with jaas configuration entries from the server section usernames are distinguished from other options prefixing the username with user prefix 
WITHOUT_CLASSIFICATION	 first test see the watch survives across reconnects 
WITHOUT_CLASSIFICATION	 getters 
WITHOUT_CLASSIFICATION	 imp safer side catching all type exceptions and remove sid from inprogress connections this avoid blocking further connection requests from this sid case errors 
WITHOUT_CLASSIFICATION	 lets change leader observer 
WITHOUT_CLASSIFICATION	 ensure server started 
WITHOUT_CLASSIFICATION	 peer has zxid epoch 
WITHOUT_CLASSIFICATION	 prevent untyped construction 
WITHOUT_CLASSIFICATION	 renewal threads main loop exits from here thread will exit 
WITHOUT_CLASSIFICATION	 the start second log since the first one removed 
WITHOUT_CLASSIFICATION	 nextprocessor returns 
WITHOUT_CLASSIFICATION	 see admina this link for all the commands 
WITHOUT_CLASSIFICATION	 getting newleader here instead discovery means this zab 
WITHOUT_CLASSIFICATION	 guarantee that the final token the one were expanding 
WITHOUT_CLASSIFICATION	 already has quota 
WITHOUT_CLASSIFICATION	 verify acls the response 
WITHOUT_CLASSIFICATION	 zookeeper server supports two kinds connection unencrypted and encrypted 
WITHOUT_CLASSIFICATION	 make sure that the error thread exits 
WITHOUT_CLASSIFICATION	 unknown session 
WITHOUT_CLASSIFICATION	 quorum servers 
WITHOUT_CLASSIFICATION	 peer has zxid epoch 
WITHOUT_CLASSIFICATION	 test old cluster 
WITHOUT_CLASSIFICATION	 thread run instance leader election for given quorum peer 
WITHOUT_CLASSIFICATION	 the directory containing the 
WITHOUT_CLASSIFICATION	 spy can check snapshot happened not 
WITHOUT_CLASSIFICATION	 verify access 
WITHOUT_CLASSIFICATION	 this should fail since the buffer size the data size due extra fields 
WITHOUT_CLASSIFICATION	 can get here valid global session 
WITHOUT_CLASSIFICATION	 session setup 
WITHOUT_CLASSIFICATION	 set currentlycommitting will block until this completes cleared commitworkrequest after 
WITHOUT_CLASSIFICATION	 expiry before next scheduled refresh 
WITHOUT_CLASSIFICATION	 new server type need handle inflight packets 
WITHOUT_CLASSIFICATION	 this will remove the cnxn from cnxns 
WITHOUT_CLASSIFICATION	 open connection 
WITHOUT_CLASSIFICATION	 use them all except one build the ensemble 
WITHOUT_CLASSIFICATION	 modify followers client port 
WITHOUT_CLASSIFICATION	 read readonly flag 
WITHOUT_CLASSIFICATION	 send closesession request 
WITHOUT_CLASSIFICATION	 the server should respond within 
WITHOUT_CLASSIFICATION	 element take and remove follow the same pattern want return the child node with the smallest sequence number since other clients are removeing and takeing nodes concurrently the child with the smallest sequence number orderedchildren might gone the time check dont call getchildren again until have tried the rest the nodes sequence order 
WITHOUT_CLASSIFICATION	 make clean snapshot 
WITHOUT_CLASSIFICATION	 clear out the ref ensure reuse 
WITHOUT_CLASSIFICATION	 servers and should able work independently 
WITHOUT_CLASSIFICATION	 setup session tracker 
WITHOUT_CLASSIFICATION	 this has set null when the same instance this class reused between test cases 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 nothing observers keep themselves themselves 
WITHOUT_CLASSIFICATION	 when localtrue here connection not available simply removes 
WITHOUT_CLASSIFICATION	 backward compatibility dynamic configuration the same file 
WITHOUT_CLASSIFICATION	 access only inside blocks 
WITHOUT_CLASSIFICATION	 trigger the watches 
WITHOUT_CLASSIFICATION	 sleep for seconds 
WITHOUT_CLASSIFICATION	 including the lagoff server 
WITHOUT_CLASSIFICATION	 code unfortunately must duplicated below since cant assign anything before calling super 
WITHOUT_CLASSIFICATION	 setup database with two znodes 
WITHOUT_CLASSIFICATION	 find the log file that starts before the same time the zxid the snapshot 
WITHOUT_CLASSIFICATION	 mutators 
WITHOUT_CLASSIFICATION	 handshake will take place and then should reject the untrusted cert 
WITHOUT_CLASSIFICATION	 make the transaction log directory read only 
WITHOUT_CLASSIFICATION	 expecting close log session closure 
WITHOUT_CLASSIFICATION	 create ephemeral node 
WITHOUT_CLASSIFICATION	 the quorumcnxmanager held through atomicreference ensure crossthread visibility 
WITHOUT_CLASSIFICATION	 for invalid dataversion number should not throw exception 
WITHOUT_CLASSIFICATION	 expected 
WITHOUT_CLASSIFICATION	 idx the the leader then everyone will get disconnected otherwise idx follower then just that client will get 
WITHOUT_CLASSIFICATION	 this will wake the selector threads and tell the worker thread pool begin shutdown 
WITHOUT_CLASSIFICATION	 again after leader election 
WITHOUT_CLASSIFICATION	 trigger this will hopefully but not necessarily print details about detected leaks standard error before the error thrown 
WITHOUT_CLASSIFICATION	 need check the record datanode instance because changes zookeeper which adds default acl config node 
WITHOUT_CLASSIFICATION	 peer has zxid that have never seen 
WITHOUT_CLASSIFICATION	 start the zookeeper server param args the configfile the port datadir ticktime 
WITHOUT_CLASSIFICATION	 nodes and now form quorum and fully start attempts vote for fails returns looking state 
WITHOUT_CLASSIFICATION	 unregister from jmx 
WITHOUT_CLASSIFICATION	 change the quorum system from majority hierarchical 
WITHOUT_CLASSIFICATION	 check session close request 
WITHOUT_CLASSIFICATION	 returns whether are interested writing which determined 
WITHOUT_CLASSIFICATION	 expect this fail the trust store does not contain private key 
WITHOUT_CLASSIFICATION	 use the odd one out for the client 
WITHOUT_CLASSIFICATION	 verify node delete watcher 
WITHOUT_CLASSIFICATION	 this case not tested throw the expected exception 
WITHOUT_CLASSIFICATION	 and 
WITHOUT_CLASSIFICATION	 not logs anything else per zookeeper 
WITHOUT_CLASSIFICATION	 xff extended feature extended type ttl 
WITHOUT_CLASSIFICATION	 longer valid 
WITHOUT_CLASSIFICATION	 and now goes back normal next should everything 
WITHOUT_CLASSIFICATION	 mutation packets will queued during the serialize need mark when the peer can actually start using the data 
WITHOUT_CLASSIFICATION	 shutdown for the last time 
WITHOUT_CLASSIFICATION	 queue 
WITHOUT_CLASSIFICATION	 update the current candidate and the only one remaining return 
WITHOUT_CLASSIFICATION	 should never ever happen 
WITHOUT_CLASSIFICATION	 check get 
WITHOUT_CLASSIFICATION	 have majority then are good 
WITHOUT_CLASSIFICATION	 label store icon 
WITHOUT_CLASSIFICATION	 waiting for the session expiry 
WITHOUT_CLASSIFICATION	 throw new runtimeexceptionmy myid not the peer list 
WITHOUT_CLASSIFICATION	 additional sanity checks content selected wildcard can done here 
WITHOUT_CLASSIFICATION	 nada 
WITHOUT_CLASSIFICATION	 have the new credentials pass the logincontext constructor 
WITHOUT_CLASSIFICATION	 protected synchronizedthis 
WITHOUT_CLASSIFICATION	 wait one the follower the new leader 
WITHOUT_CLASSIFICATION	 exception expected 
WITHOUT_CLASSIFICATION	 just create some node that know the current zxid 
WITHOUT_CLASSIFICATION	 wait for the setdata txn being populated 
WITHOUT_CLASSIFICATION	 wrap sasl response token client inside response object 
WITHOUT_CLASSIFICATION	 ensure beans are leftover 
WITHOUT_CLASSIFICATION	 reconfig node access controlled default zookeeper 
WITHOUT_CLASSIFICATION	 initializing for new connection 
WITHOUT_CLASSIFICATION	 should elect itself leader and run itself 
WITHOUT_CLASSIFICATION	 next 
WITHOUT_CLASSIFICATION	 give datatree chance sync its lastprocessedzxid 
WITHOUT_CLASSIFICATION	 the child might already deleted during taking fuzzy snapshot but still need update the pzxid here before throw exception 
WITHOUT_CLASSIFICATION	 lets kill the leader and see new one elected 
WITHOUT_CLASSIFICATION	 when lock markernode allow writerecord continue 
WITHOUT_CLASSIFICATION	 below commands all need live connection 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 nothing 
WITHOUT_CLASSIFICATION	 should not happen 
WITHOUT_CLASSIFICATION	 check for valid snapshot 
WITHOUT_CLASSIFICATION	 close could have been called receivemessage failed 
WITHOUT_CLASSIFICATION	 move back the old port 
WITHOUT_CLASSIFICATION	 register watch the node 
WITHOUT_CLASSIFICATION	 not add non quorum packets the queue 
WITHOUT_CLASSIFICATION	 false means that the session has expired 
WITHOUT_CLASSIFICATION	 check all the followers are alive 
WITHOUT_CLASSIFICATION	 adding precreated watcher 
WITHOUT_CLASSIFICATION	 since sessiontracker and syncthreads poll just have set running false and they will detect during the poll 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 not need make copy nodedata because the contents are never changed 
WITHOUT_CLASSIFICATION	 set true when connected readonly server readwrite quorum server 
WITHOUT_CLASSIFICATION	 parse out chroot any 
WITHOUT_CLASSIFICATION	 prepare thread that will create znodes 
WITHOUT_CLASSIFICATION	 thread object will null refresh thread not needed 
WITHOUT_CLASSIFICATION	 just case 
WITHOUT_CLASSIFICATION	 gssapi 
WITHOUT_CLASSIFICATION	 the bug will manifest itself here because zkidle will expire 
WITHOUT_CLASSIFICATION	 authentication hasnt finished yet must wait for 
WITHOUT_CLASSIFICATION	 reconnect the client case were connected the shut down 
WITHOUT_CLASSIFICATION	 ignore connectionloss when removing from local session 
WITHOUT_CLASSIFICATION	 assuming the first packet the priming packet 
WITHOUT_CLASSIFICATION	 since this single buffer being resused need truncate the previous bytes string 
WITHOUT_CLASSIFICATION	 does createdelete depending the type and verifies cversion before the operation less than cversion afer 
WITHOUT_CLASSIFICATION	 just make sure are good when admin made some mistakes config file 
WITHOUT_CLASSIFICATION	 file when they boot 
WITHOUT_CLASSIFICATION	 delete 
WITHOUT_CLASSIFICATION	 receive challenge request 
WITHOUT_CLASSIFICATION	 ensure that can convert all valid integers keeperstates 
WITHOUT_CLASSIFICATION	 shutdown the server 
WITHOUT_CLASSIFICATION	 this server voter new config with the same quorum address then will remain the leader otherwise uptodate follower will designated leader this saves 
WITHOUT_CLASSIFICATION	 cluster 
WITHOUT_CLASSIFICATION	 the client not currently connected any server 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 todo partitioning peers and clients 
WITHOUT_CLASSIFICATION	 run servers for while 
WITHOUT_CLASSIFICATION	 hbase currently adds single server line the config for compatibility reasons need keep this here standaloneenabled true the quorumpeermain script will create standalone server instead quorum configuration 
WITHOUT_CLASSIFICATION	 now check its one the zookeeper node child 
WITHOUT_CLASSIFICATION	 even though followers timed out their ids are connectingfollowers and their epoch were accounted for the leader should not block and since started with 
WITHOUT_CLASSIFICATION	 channel disconnection happened 
WITHOUT_CLASSIFICATION	 this file copied from hadoops security branch with the following changes package changed from orgapachehadooputil orgapachezookeeper usage hadoops configuration class removed since not available zookeeper instead system properties are used the deprecated method removed since not needed 
WITHOUT_CLASSIFICATION	 multi record set foo succeed leave outstanding change delete foo fail roll back change 
WITHOUT_CLASSIFICATION	 independently the client socket implementation details always make sure the server didnt receive any data during the test 
WITHOUT_CLASSIFICATION	 single address not extracted 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 counter count worker threads 
WITHOUT_CLASSIFICATION	 serialize the data with one znode with acl 
WITHOUT_CLASSIFICATION	 addr should never null but just make sure 
WITHOUT_CLASSIFICATION	 sasl client disabled 
WITHOUT_CLASSIFICATION	 cut the tree till their more than one child 
WITHOUT_CLASSIFICATION	 start admin server 
WITHOUT_CLASSIFICATION	 decrement outstanding request count the processor may blocked the moment because waiting for the pipeline drain that case wake there are pending requests 
WITHOUT_CLASSIFICATION	 config itself 
WITHOUT_CLASSIFICATION	 the timeout thread handling 
WITHOUT_CLASSIFICATION	 zxid should still previous result because records not changed 
WITHOUT_CLASSIFICATION	 not the view its vote shouldnt count 
WITHOUT_CLASSIFICATION	 the control sequence sent the telnet program when closes connection include simply keep the logs cleaner the server would close the connection anyway because would parse this negative length 
WITHOUT_CLASSIFICATION	 diff proposals commit 
WITHOUT_CLASSIFICATION	 hdm new 
WITHOUT_CLASSIFICATION	 safe just create new datatree 
WITHOUT_CLASSIFICATION	 add partcipants change observers 
WITHOUT_CLASSIFICATION	 logtracee 
WITHOUT_CLASSIFICATION	 this test simulate the usual rolling restart with membership change node shutdown first upgrade software hardware cleanup local data after upgrade start the node this for every node one time 
WITHOUT_CLASSIFICATION	 any reconfig invoked 
WITHOUT_CLASSIFICATION	 threadsleep asserttruemessage fdcount initialfdcount 
WITHOUT_CLASSIFICATION	 limited number retries 
WITHOUT_CLASSIFICATION	 else what are expecting since there are outstanding watches 
WITHOUT_CLASSIFICATION	 note dont care about delete events 
WITHOUT_CLASSIFICATION	 set auth using digest 
WITHOUT_CLASSIFICATION	 lets force the recreation the 
WITHOUT_CLASSIFICATION	 find most idle node 
WITHOUT_CLASSIFICATION	 four letter words take care need not anything else 
WITHOUT_CLASSIFICATION	 prior this request 
WITHOUT_CLASSIFICATION	 watches set below exceeds 
WITHOUT_CLASSIFICATION	 test getexists with single set watchers get all then exists all 
WITHOUT_CLASSIFICATION	 after leaving listener thread the host cannot join the quorum anymore this severe error that cannot recover from need exit 
WITHOUT_CLASSIFICATION	 both servers and will have the next config file which means for them that reconfiguration was progress when they failed 
WITHOUT_CLASSIFICATION	 send error message the learner 
WITHOUT_CLASSIFICATION	 tells whether ssl enabled this servercnxnfactory 
WITHOUT_CLASSIFICATION	 iteration 
WITHOUT_CLASSIFICATION	 peer has zxid new machine turn txnlog 
WITHOUT_CLASSIFICATION	 make sure cant convert from invalid wrapper 
WITHOUT_CLASSIFICATION	 static configuration params see writedynamicconfig 
WITHOUT_CLASSIFICATION	 object synchronize access recvqueue 
WITHOUT_CLASSIFICATION	 list followers that are ready follow synced with the leader 
WITHOUT_CLASSIFICATION	 and the leader will complete 
WITHOUT_CLASSIFICATION	 set small preallocsize 
WITHOUT_CLASSIFICATION	 since jettyadminserver reads system property determine its port make sure initializes itself before setting the system property again with the second port number 
WITHOUT_CLASSIFICATION	 the leader 
WITHOUT_CLASSIFICATION	 verify correctness data and whether sequential znode creation 
WITHOUT_CLASSIFICATION	 node started without the leader its config view 
WITHOUT_CLASSIFICATION	 noinspection ttlreservedbit actually zero but serves document that the proper extended bit needs set 
WITHOUT_CLASSIFICATION	 peer can either participating which implies that willing both vote instances consensus and elect become leader may observing which case isnt need this distinction decide which serverstate move when conditions change which state become after looking 
WITHOUT_CLASSIFICATION	 better actionshelpabout but not tango 
WITHOUT_CLASSIFICATION	 the password here test 
WITHOUT_CLASSIFICATION	 always treat packet from the client possible local request 
WITHOUT_CLASSIFICATION	 and the ephemeral nodes will gone since the session died 
WITHOUT_CLASSIFICATION	 commit writes the new config tree zookeeperconfig 
WITHOUT_CLASSIFICATION	 form quorum without ssl 
WITHOUT_CLASSIFICATION	 there are multiple hostports just take the first one 
WITHOUT_CLASSIFICATION	 close connections still pending the selector any others with inflight work let drain out the work queue 
WITHOUT_CLASSIFICATION	 again failure expected because acl associated with this user 
WITHOUT_CLASSIFICATION	 this code originally from hdfs see the similarly named files there case bug fixing history etc 
WITHOUT_CLASSIFICATION	 set the session owner the follower that owns the session 
WITHOUT_CLASSIFICATION	 simply return there connection request server sid already progress 
WITHOUT_CLASSIFICATION	 start server again 
WITHOUT_CLASSIFICATION	 leave the bad client socket idle 
WITHOUT_CLASSIFICATION	 add global before removing local 
WITHOUT_CLASSIFICATION	 respective reconnection interval 
WITHOUT_CLASSIFICATION	 append flag 
WITHOUT_CLASSIFICATION	 read operation during mode 
WITHOUT_CLASSIFICATION	 add pendingsyncs 
WITHOUT_CLASSIFICATION	 peer has zxid epoch already sync 
WITHOUT_CLASSIFICATION	 add transaction log files the snap version dir 
WITHOUT_CLASSIFICATION	 creates configuration string for servers numservers ids observerids correspond observers other ids are for participants 
WITHOUT_CLASSIFICATION	 find leader 
WITHOUT_CLASSIFICATION	 now ship the request the leader with all other quorum operations sync also follows this code path but different from others need keep track the sync operations this observer has pending 
WITHOUT_CLASSIFICATION	 act 
WITHOUT_CLASSIFICATION	 empty snapshot and logfile containing byte create 
WITHOUT_CLASSIFICATION	 nonjavadoc see javautilcollection 
WITHOUT_CLASSIFICATION	 send create request old leader and make sure its synced disk 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 make sure this always synchronized with zoodefs 
WITHOUT_CLASSIFICATION	 know this from the data files this node the last node the snapshot 
WITHOUT_CLASSIFICATION	 zookeeper votes are received for live peers reset voting for ourselves otherwise may hang vote 
WITHOUT_CLASSIFICATION	 close listen socket and signal selector threads stop 
WITHOUT_CLASSIFICATION	 checking the child version using chroot client 
WITHOUT_CLASSIFICATION	 setting this true will enable encrypted clientserver communication 
WITHOUT_CLASSIFICATION	 local session from other server 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 start server 
WITHOUT_CLASSIFICATION	 ignoring exception there ioexception then one the following assertion will fail 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 create datanode and call getchildren 
WITHOUT_CLASSIFICATION	 that can reconfigure down one participant with observers 
WITHOUT_CLASSIFICATION	 make that testdata exists otherwise fails windows 
WITHOUT_CLASSIFICATION	 receive new message 
WITHOUT_CLASSIFICATION	 second prevent race condition missing send the second ping also make sure not send too many pings when readtimeout small 
WITHOUT_CLASSIFICATION	 normally because the leader didnt execute waitforepochack 
WITHOUT_CLASSIFICATION	 snapshot might progress while are modifying the data tree set lastprocessedzxid prior making corresponding change the tree then the zxid associated with the snapshot file will ahead its contents thus while restoring from the snapshot the restore method will not apply the transaction for zxid associated with the snapshot file since the restore method assumes that transaction present the snapshot avoid this first apply the transaction and then modify lastprocessedzxid during restore correctly handle the case where the snapshot contains data ahead the zxid associated with the file 
WITHOUT_CLASSIFICATION	 succeed explicitly disable the top xutiljava 
WITHOUT_CLASSIFICATION	 make sure the updates indeed committed not 
WITHOUT_CLASSIFICATION	 simulating close session request removesession will executed 
WITHOUT_CLASSIFICATION	 note that the login object static its shared amongst all zookeeperrelated connections order ensure the login initialized only once must synchronized the code snippet 
WITHOUT_CLASSIFICATION	 some tests may not have static config file 
WITHOUT_CLASSIFICATION	 test getexists with single set watchers getexists together 
WITHOUT_CLASSIFICATION	 local address 
WITHOUT_CLASSIFICATION	 stops automatic reads incoming data this channel dont expect any more traffic from the client when processing 
WITHOUT_CLASSIFICATION	 previous state was not new start has already been called 
WITHOUT_CLASSIFICATION	 nonnls 
WITHOUT_CLASSIFICATION	 start two the quorum and add txns 
WITHOUT_CLASSIFICATION	 some other update bump the maxcommttedzxid 
WITHOUT_CLASSIFICATION	 remove hosts and the last two list hosts 
WITHOUT_CLASSIFICATION	 for sending over wire 
WITHOUT_CLASSIFICATION	 done with the election round now set the vote the peer real zookeeper would take care setting the current vote here manually 
WITHOUT_CLASSIFICATION	 commit and send some info 
WITHOUT_CLASSIFICATION	 close all open connections 
WITHOUT_CLASSIFICATION	 follower already sync with send empty diff 
WITHOUT_CLASSIFICATION	 roll the log 
WITHOUT_CLASSIFICATION	 this negative that learner that does auth connects server itll think the received packet authentication packet 
WITHOUT_CLASSIFICATION	 the last valid ascii character 
WITHOUT_CLASSIFICATION	 srvr enabled default due the sad fact zkserversh uses 
WITHOUT_CLASSIFICATION	 maximum capacity thread queues 
WITHOUT_CLASSIFICATION	 creating chroot client 
WITHOUT_CLASSIFICATION	 make sure can instantiate key manager from the pkcs file disk 
WITHOUT_CLASSIFICATION	 this could happen both static file dynamic file 
WITHOUT_CLASSIFICATION	 standalone server doesnt need myid file 
WITHOUT_CLASSIFICATION	 loginfotesting connections want make sure socket descriptors are going away new zookeeperhostport this zkgetdata false new stat zkclose 
WITHOUT_CLASSIFICATION	 doesnt exist and the acl cache empty 
WITHOUT_CLASSIFICATION	 get the current value the logical clock for this peer that know which round this peer has executed 
WITHOUT_CLASSIFICATION	 and are observers their vote shouldnt count 
WITHOUT_CLASSIFICATION	 refresh interval msec last time the command was performed env for the command execution 
WITHOUT_CLASSIFICATION	 add some timing margin for the quorum elect leader without this margin timeouts have been observed parallel test runs 
WITHOUT_CLASSIFICATION	 authorized host lists 
WITHOUT_CLASSIFICATION	 node started second avoid and forming quorum before starts 
WITHOUT_CLASSIFICATION	 remove next notification from queue times out after times the termination time 
WITHOUT_CLASSIFICATION	 children have changed read the new list 
WITHOUT_CLASSIFICATION	 should numclients expectation test that its numclients slackpercent 
WITHOUT_CLASSIFICATION	 arrange 
WITHOUT_CLASSIFICATION	 the current protocol and two previous generations all send least bytes 
WITHOUT_CLASSIFICATION	 great this what want 
WITHOUT_CLASSIFICATION	 the commit workers will have execute this line before they wake the commit processor this value uptodate when variant check performed 
WITHOUT_CLASSIFICATION	 send session longer valid 
WITHOUT_CLASSIFICATION	 restart and observe failure 
WITHOUT_CLASSIFICATION	 remotepeerbean 
WITHOUT_CLASSIFICATION	 are connected server accept the new epoch and read the next packet 
WITHOUT_CLASSIFICATION	 servers still this should work 
WITHOUT_CLASSIFICATION	 zookeeper continue only there new request waiting queuedrequests waiting for commit 
WITHOUT_CLASSIFICATION	 dont suspend peer will rejoin quorum 
WITHOUT_CLASSIFICATION	 now lets stop the server 
WITHOUT_CLASSIFICATION	 zkserversh depends srvr 
WITHOUT_CLASSIFICATION	 using fle then every server requires separate election port 
WITHOUT_CLASSIFICATION	 since dont check the futures created write calls the channel complete need make sure that all writes have been completed before closing the channel risk data loss see 
WITHOUT_CLASSIFICATION	 nonjavadoc see byte 
WITHOUT_CLASSIFICATION	 dont want sleep the first ever connect attempt 
WITHOUT_CLASSIFICATION	 followers out are majority the voting view 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 things can only update after the whole txn applied data tree update the lastprocessedzxid with the first sub txn multi and there snapshot progress its possible that the zxid associated with the snapshot only include partial the multi when loading snapshot will only load the txns after the zxid associated with snapshot file which could cause data inconsistency due missing sub txns avoid this only update the lastprocessedzxid when the whole multiop txn applied datatree 
WITHOUT_CLASSIFICATION	 directories are not used but need avoid npe 
WITHOUT_CLASSIFICATION	 queue the pair watch set event for later processing 
WITHOUT_CLASSIFICATION	 getxid called externally clientcnxnniodoio when packets are sent from the outgoingqueue the server thus getxid must public 
WITHOUT_CLASSIFICATION	 dump data peer 
WITHOUT_CLASSIFICATION	 send connect request any socket that has been closed least not added the cnxn list the server will not have any bytes read and get eof the trick here was finding call that caused the server put bytes the input stream without closing the cnxn none the four letter commands that actually try create session which should send something back while maintaining the connection 
WITHOUT_CLASSIFICATION	 run through till the counts longer change each server max tries with second sleeps approx seconds 
WITHOUT_CLASSIFICATION	 also check update the quotas for this node 
WITHOUT_CLASSIFICATION	 test hostname that resolves single address 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 next scheduled refresh sooner than now mintimebeforelogin 
WITHOUT_CLASSIFICATION	 send trunc and forward any packet starting lastprocessedzxid 
WITHOUT_CLASSIFICATION	 clear part deserializesnapshot 
WITHOUT_CLASSIFICATION	 write number times until detects that the socket broken 
WITHOUT_CLASSIFICATION	 this class parses the initial identification sent out peers with their sid hostname 
WITHOUT_CLASSIFICATION	 trying get first txn the third give the 
WITHOUT_CLASSIFICATION	 will timeout 
WITHOUT_CLASSIFICATION	 this means that couldnt find any snapshot need initialize empty database reported zookeeper 
WITHOUT_CLASSIFICATION	 check see zkdb not null 
WITHOUT_CLASSIFICATION	 upon reception ack message remove from the 
WITHOUT_CLASSIFICATION	 when 
WITHOUT_CLASSIFICATION	 when add securecnxnfactory 
WITHOUT_CLASSIFICATION	 then force throttled read after second this puts the read into queuedbuffer 
WITHOUT_CLASSIFICATION	 otherwise send the corresponding thread send 
WITHOUT_CLASSIFICATION	 stop queuing connection attempts 
WITHOUT_CLASSIFICATION	 went the next log file should call next again 
WITHOUT_CLASSIFICATION	 the user did not override the default context might that they just dont intend use sasl log info not warn since they dont expect any saslrelated information 
WITHOUT_CLASSIFICATION	 this should only for the beginning the path splitpath empty string before first 
WITHOUT_CLASSIFICATION	 should not any work other than trace logging 
WITHOUT_CLASSIFICATION	 since pnew should first try the new servers 
WITHOUT_CLASSIFICATION	 zookeeper some cases the server does not close the connection closeconn buffer was not being queued zookeeper properly this happens for example when the client closes the connection the server should still close the session though 
WITHOUT_CLASSIFICATION	 ignore exception 
WITHOUT_CLASSIFICATION	 todo introspect about runtime environment such jaasconf 
WITHOUT_CLASSIFICATION	 resolve hostname for the remote server before attempting connect case the underlying address has changed 
WITHOUT_CLASSIFICATION	 another client removed the node first try next 
WITHOUT_CLASSIFICATION	 enumeration enumer rgetcurrentloggers 
WITHOUT_CLASSIFICATION	 note need create new clientxutil each time pick modified property value 
WITHOUT_CLASSIFICATION	 should cause foo get deleted when checkcontainers called 
WITHOUT_CLASSIFICATION	 let through dont require auth 
WITHOUT_CLASSIFICATION	 note that should run the server shut down and only then simulate reconfig progress writing the temp file but here other server competing with them fle can skip this step server booted after fle ends 
WITHOUT_CLASSIFICATION	 last opened toaster 
WITHOUT_CLASSIFICATION	 take the first server the list 
WITHOUT_CLASSIFICATION	 start server with old config where observer 
WITHOUT_CLASSIFICATION	 wait for the old leader start completely 
WITHOUT_CLASSIFICATION	 lost the race another thread already set the value 
WITHOUT_CLASSIFICATION	 diff proposals commit 
WITHOUT_CLASSIFICATION	 initialized prevent sending stale notifications peers 
WITHOUT_CLASSIFICATION	 add two participants and change them observers check 
WITHOUT_CLASSIFICATION	 this request came from someone else just send the commit packet 
WITHOUT_CLASSIFICATION	 track the number records written the log 
WITHOUT_CLASSIFICATION	 int percent 
WITHOUT_CLASSIFICATION	 wait until socket disconnects while reading 
WITHOUT_CLASSIFICATION	 start thread that blast packets the queue learner 
WITHOUT_CLASSIFICATION	 multi should have been deleted 
WITHOUT_CLASSIFICATION	 assert exception thrown 
WITHOUT_CLASSIFICATION	 count number log entries any line starting with timestamp counts entry 
WITHOUT_CLASSIFICATION	 remotepeerbean shouldnt exists replicatedserver 
WITHOUT_CLASSIFICATION	 votesi 
WITHOUT_CLASSIFICATION	 revert back the error 
WITHOUT_CLASSIFICATION	 generate some transactions that will get logged 
WITHOUT_CLASSIFICATION	 and ensure trueleader still the leader 
WITHOUT_CLASSIFICATION	 sockkey may concurrently accessed multiple threads use tmp here avoid race condition 
WITHOUT_CLASSIFICATION	 jaas nongssapi authentication assuming and supporting only digestmd mechanism for now todo use authmech value zoocfg 
WITHOUT_CLASSIFICATION	 used perform atomic write into file there failure the middle the writing operation the original file exists left intact based the idiom using the hdfs class 
WITHOUT_CLASSIFICATION	 everyone else thinks the leader must the leader the other two checks are just for the case which not the leader not the leader and havent received message from leader stating that leading then predicate false 
WITHOUT_CLASSIFICATION	 create new follower 
WITHOUT_CLASSIFICATION	 setup the messages streamed follower 
WITHOUT_CLASSIFICATION	 then 
WITHOUT_CLASSIFICATION	 nothing prepend 
WITHOUT_CLASSIFICATION	 verify serverstats before any commit 
WITHOUT_CLASSIFICATION	 cannot guarantee that this strictly the starting txn after given zxid should fail 
WITHOUT_CLASSIFICATION	 their are more child nodes just reset property 
WITHOUT_CLASSIFICATION	 filter read requests 
WITHOUT_CLASSIFICATION	 need shutdown and start back make sure that the create session isnt the first transaction since 
WITHOUT_CLASSIFICATION	 find follower 
WITHOUT_CLASSIFICATION	 xxx lastprocessedzxid really the best thing use 
WITHOUT_CLASSIFICATION	 revert redirect outerr streams important step 
WITHOUT_CLASSIFICATION	 transport 
WITHOUT_CLASSIFICATION	 old list just the ports 
WITHOUT_CLASSIFICATION	 remove all outstanding changes for paths this multi previous records will added back later 
WITHOUT_CLASSIFICATION	 when explicitly close the session should not able 
WITHOUT_CLASSIFICATION	 commit proposal may lag behind data tree but shouldnt affect any case 
WITHOUT_CLASSIFICATION	 check for race condition with session upgrading 
WITHOUT_CLASSIFICATION	 remotepeerbean shouldnt exists replicatedserver 
WITHOUT_CLASSIFICATION	 peer has zxid epoch 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 ignore timeout 
WITHOUT_CLASSIFICATION	 that add outstandingchanges 
WITHOUT_CLASSIFICATION	 clear all the connections which are selecting 
WITHOUT_CLASSIFICATION	 into looking state followingleading state 
WITHOUT_CLASSIFICATION	 set true and only constructor zookeepersaslclient 
WITHOUT_CLASSIFICATION	 this means reconfigmode true and will called from next 
WITHOUT_CLASSIFICATION	 rmr deprecated the test here just for backwards 
WITHOUT_CLASSIFICATION	 setdata 
WITHOUT_CLASSIFICATION	 standalone mode reconfiguration currently not supported 
WITHOUT_CLASSIFICATION	 zab might take snapshot when get the newleader message but pre take the snapshot the update message since zab also gets the update after the newleader 
WITHOUT_CLASSIFICATION	 set the logical clock fle instance server 
WITHOUT_CLASSIFICATION	 zoocfgdynamic returns null 
WITHOUT_CLASSIFICATION	 check that the change has propagated everyone 
WITHOUT_CLASSIFICATION	 initialize zookeeper again from the same datadir 
WITHOUT_CLASSIFICATION	 peer has zxid epoch 
WITHOUT_CLASSIFICATION	 ensure get the same value back after round trip conversion 
WITHOUT_CLASSIFICATION	 received ack successfully return 
WITHOUT_CLASSIFICATION	 peer has zxid epoch 
WITHOUT_CLASSIFICATION	 this what want 
WITHOUT_CLASSIFICATION	 snapshots are taken lazily can happen that the child znodes parent are created after the parent serialized therefore while replaying logs during restore create might fail because the node was already created after seeing this failure should increment the cversion the parent znode since the parent was serialized before its children note such failures should seen only during restore 
WITHOUT_CLASSIFICATION	 message with bad protocol version 
WITHOUT_CLASSIFICATION	 setup servers followers and and observers 
WITHOUT_CLASSIFICATION	 border color 
WITHOUT_CLASSIFICATION	 this code originally from hdfs see the file name testminikdc there case bug fixing history etc branch trunk github revision ffefbadebd 
WITHOUT_CLASSIFICATION	 know the total junit process count and this test processs use these values calculate the valid range for port assignments within this test process lose few possible ports the remainder but thats acceptable 
WITHOUT_CLASSIFICATION	 correctly 
WITHOUT_CLASSIFICATION	 since all requests are passed the request processor should wait for setting the request processor chain the state will updated running after the setup 
WITHOUT_CLASSIFICATION	 some unexpected error warn about 
WITHOUT_CLASSIFICATION	 expect two notifications before want continue 
WITHOUT_CLASSIFICATION	 create servers 
WITHOUT_CLASSIFICATION	 over outstanding ops order and try find candidate that acked the most ops this way will the most uptodate and well minimize the number ops that get dropped 
WITHOUT_CLASSIFICATION	 upgrade peer with and 
WITHOUT_CLASSIFICATION	 authentication error occurred when the sasl client tried initialize for kerberos this means that the client failed authenticate with the kdc this different from authentication error that occurs during communication with the zookeeper server which handled below 
WITHOUT_CLASSIFICATION	 unnecessary code coupling 
WITHOUT_CLASSIFICATION	 there are legal states some use cases for null keymanager trustmanager but user wanna specify one location required password defaults empty string not specified the user 
WITHOUT_CLASSIFICATION	 change the snapcount happen more often 
WITHOUT_CLASSIFICATION	 invalid acls 
WITHOUT_CLASSIFICATION	 this code requires key pkcs format which not the default openssl format convert the pkcs format you use openssl pkcs topk 
WITHOUT_CLASSIFICATION	 ignore this expected 
WITHOUT_CLASSIFICATION	 encoding 
WITHOUT_CLASSIFICATION	 there log record for the initial config thus after syncing with leader zookeeperconfig empty also possible that last committed config propagated during leader election without the propagation the corresponding log records should explicitly this this not necessary when were already followerobserver only 
WITHOUT_CLASSIFICATION	 local session from the leader 
WITHOUT_CLASSIFICATION	 note that make effort here remove empty mappings from ipmap 
WITHOUT_CLASSIFICATION	 recalculate the init limit time because retries sleep for milliseconds 
WITHOUT_CLASSIFICATION	 start everyone but the leader 
WITHOUT_CLASSIFICATION	 use run zookeeper jar with generate password example java libslfjapijar supertest 
WITHOUT_CLASSIFICATION	 with peer epoch and version the message became bytes 
WITHOUT_CLASSIFICATION	 this predicate true once dont read any new relevant message from the reception queue 
WITHOUT_CLASSIFICATION	 this isnt really error txn just has the same format the error represents the timeout 
WITHOUT_CLASSIFICATION	 now check their already existing parent child that has quota 
WITHOUT_CLASSIFICATION	 save the found address that its used during the next connection attempt 
WITHOUT_CLASSIFICATION	 fake propose request 
WITHOUT_CLASSIFICATION	 have worker thread pool use that otherwise the work directly 
WITHOUT_CLASSIFICATION	 the last snapshot seems incompelte corrupt the last but one and use that 
WITHOUT_CLASSIFICATION	 wait for authfailed event from clients eventthread 
WITHOUT_CLASSIFICATION	 this should stomp the handle 
WITHOUT_CLASSIFICATION	 make sure can instantiate trust manager from the jks file disk 
WITHOUT_CLASSIFICATION	 add snapshot files the log version dir 
WITHOUT_CLASSIFICATION	 provide time for the falseleader realize followers have connected 
WITHOUT_CLASSIFICATION	 wait for request completion with timeout 
WITHOUT_CLASSIFICATION	 from nonvoting server such observer nonvoting follower respond right away 
WITHOUT_CLASSIFICATION	 not trigger the reverse name service lookup 
WITHOUT_CLASSIFICATION	 method always top start only since jdk 
WITHOUT_CLASSIFICATION	 calculate sizelimit that allow retrieve txnlog from disk 
WITHOUT_CLASSIFICATION	 the test below chance disconnecting 
WITHOUT_CLASSIFICATION	 check all groups have majority 
WITHOUT_CLASSIFICATION	 joiner initial config consists itself and the leader 
WITHOUT_CLASSIFICATION	 address the sender 
WITHOUT_CLASSIFICATION	 remove the old files 
WITHOUT_CLASSIFICATION	 empty snapshot and logfile containing byte create and byte set 
WITHOUT_CLASSIFICATION	 get information current leader 
WITHOUT_CLASSIFICATION	 create node 
WITHOUT_CLASSIFICATION	 synchronized sync the containers and ttls change probably only need sync containers and ttls will update 
WITHOUT_CLASSIFICATION	 learner hasnt sync properly yet dont send ping packet otherwise the learner will crash 
WITHOUT_CLASSIFICATION	 only proceed the vote comes from replica the current next voting view for replica the current next voting view 
WITHOUT_CLASSIFICATION	 create operation that injected ioexception thrown 
WITHOUT_CLASSIFICATION	 before sending the request check the request requires global session and what have local session upgrade 
WITHOUT_CLASSIFICATION	 nothing exclude persistence from perf 
WITHOUT_CLASSIFICATION	 logwarnset clientaddr clientaddr 
WITHOUT_CLASSIFICATION	 got here the version was set 
WITHOUT_CLASSIFICATION	 verify that the correct exception thrown 
WITHOUT_CLASSIFICATION	 put going modify the positions both buffers put dont want change the position the source buffers well that after the send needed save and reset the position after the copy 
WITHOUT_CLASSIFICATION	 order committed proposal must accepted quorum 
WITHOUT_CLASSIFICATION	 set combination childexistsdata watches 
WITHOUT_CLASSIFICATION	 expected that 
WITHOUT_CLASSIFICATION	 stop old watcher there one 
WITHOUT_CLASSIFICATION	 test done close the not needed 
WITHOUT_CLASSIFICATION	 nonjavadoc see utilproperties 
WITHOUT_CLASSIFICATION	 reusing the index variable select follower connect 
WITHOUT_CLASSIFICATION	 check that dynamic configuration file doesnt exist 
WITHOUT_CLASSIFICATION	 note that not generate the xid for the packet yet generated later sendtime implementation 
WITHOUT_CLASSIFICATION	 color for border 
WITHOUT_CLASSIFICATION	 since the file padding inserts will fill the data with xff ensure corrupt the data put the the data 
WITHOUT_CLASSIFICATION	 convert time sessions map time session ids map 
WITHOUT_CLASSIFICATION	 start one server 
WITHOUT_CLASSIFICATION	 the path does not exist 
WITHOUT_CLASSIFICATION	 this just avoids complaints junit 
WITHOUT_CLASSIFICATION	 the following commands would not work the original cluster but now that weve removed servers have cluster servers and one them allowed fail 
WITHOUT_CLASSIFICATION	 zookeeper need store for parents changerecord the parent node request that this sequential node creation request can restore previous parents changerecord correctly otherwise sequential node name generation will incorrect for subsequent request 
WITHOUT_CLASSIFICATION	 give the worker threads time finish executing 
WITHOUT_CLASSIFICATION	 requestaddrqrecsync 
WITHOUT_CLASSIFICATION	 should not have touched original file 
WITHOUT_CLASSIFICATION	 state peer that sent this message 
WITHOUT_CLASSIFICATION	 this going reset the buffer position and the limit the size the buffer that can fill with data from the nondirect buffers that need send 
WITHOUT_CLASSIFICATION	 avoid negative cxid values particular cxid values and are special and must not used for requests see skip from max 
WITHOUT_CLASSIFICATION	 establish the connection the zookeeper cluster 
WITHOUT_CLASSIFICATION	 server new config but load should decreased need decide this client moving one the new servers 
WITHOUT_CLASSIFICATION	 newer than committedlog send trunc and done 
WITHOUT_CLASSIFICATION	 force binls except windows 
WITHOUT_CLASSIFICATION	 process the touches 
WITHOUT_CLASSIFICATION	 see its set 
WITHOUT_CLASSIFICATION	 joining comma separated list server config strings for servers added the ensemble each entry identical syntax would appear configuration file only used for incremental reconfigurations 
WITHOUT_CLASSIFICATION	 look through the logs for output that indicates node leading following 
WITHOUT_CLASSIFICATION	 leader epoch 
WITHOUT_CLASSIFICATION	 are going look for leader casting vote for ourself 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 dont allow redoing this redo 
WITHOUT_CLASSIFICATION	 insert random delay test thread race conditions 
WITHOUT_CLASSIFICATION	 restart halted node and verify count 
WITHOUT_CLASSIFICATION	 the snapshot directory 
WITHOUT_CLASSIFICATION	 create extra handle can index the handles from quall using the server 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 make sure can instantiate key manager from the pem file disk 
WITHOUT_CLASSIFICATION	 this code does not exists 
WITHOUT_CLASSIFICATION	 shutdown the server itself 
WITHOUT_CLASSIFICATION	 used for assertions later 
WITHOUT_CLASSIFICATION	 box selectorclose not called diff 
WITHOUT_CLASSIFICATION	 new config will have three the servers followers 
WITHOUT_CLASSIFICATION	 instantiate notification and set its attributes 
WITHOUT_CLASSIFICATION	 check have version that includes config extract config info from message 
WITHOUT_CLASSIFICATION	 store off current pending change records case need rollback 
WITHOUT_CLASSIFICATION	 close the existing txnlog and snaplog 
WITHOUT_CLASSIFICATION	 updates the dynamic file pointer 
WITHOUT_CLASSIFICATION	 tests the case currenthost null lastindex 
WITHOUT_CLASSIFICATION	 cant skip should just read from the start 
WITHOUT_CLASSIFICATION	 make sure servers dont come online this should the case 
WITHOUT_CLASSIFICATION	 similar follower need log requests between the snapshot and uptodate 
WITHOUT_CLASSIFICATION	 wait for things stabilize 
WITHOUT_CLASSIFICATION	 all clients should disconnected 
WITHOUT_CLASSIFICATION	 note setup enables this test based the test name 
WITHOUT_CLASSIFICATION	 test normal run everything should work out well 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting maxcommittedlog 
WITHOUT_CLASSIFICATION	 java default should have the gcm suites first 
WITHOUT_CLASSIFICATION	 execute output stream operation 
WITHOUT_CLASSIFICATION	 everything below and until get back the select non blocking time effectively constant that why just have this once here 
WITHOUT_CLASSIFICATION	 generate xid now because will sent immediately call below 
WITHOUT_CLASSIFICATION	 joiner should have the following format serverx 
WITHOUT_CLASSIFICATION	 last proposed quorum verifier 
WITHOUT_CLASSIFICATION	 default hostprovider 
WITHOUT_CLASSIFICATION	 property set but can not parsed int should get the 
WITHOUT_CLASSIFICATION	 run another instance leader election 
WITHOUT_CLASSIFICATION	 remember close old instance before replacing 
WITHOUT_CLASSIFICATION	 nothing 
WITHOUT_CLASSIFICATION	 this server should join successfully 
WITHOUT_CLASSIFICATION	 create session with max value 
WITHOUT_CLASSIFICATION	 make sure create new object when changing 
WITHOUT_CLASSIFICATION	 only run the readynode exists 
WITHOUT_CLASSIFICATION	 notify server state changes the registered shutdown handler any 
WITHOUT_CLASSIFICATION	 this should trigger the watch 
WITHOUT_CLASSIFICATION	 whether remove the watches locally 
WITHOUT_CLASSIFICATION	 start mock server 
WITHOUT_CLASSIFICATION	 run servers and normally 
WITHOUT_CLASSIFICATION	 checks that conditioning version works properly 
WITHOUT_CLASSIFICATION	 ephemeral node getting deleted 
WITHOUT_CLASSIFICATION	 currentindex was set the call updateserverlist which called next 
WITHOUT_CLASSIFICATION	 refresh the ticket granting ticket tgt periodically how often refresh determined the tgts existing expiry date and the configured for testing and development you can decrease the interval expiration tickets for example minutes running 
WITHOUT_CLASSIFICATION	 creating peer 
WITHOUT_CLASSIFICATION	 leader mock prep mockproposal commit validate final have side thread call commitproccommit 
WITHOUT_CLASSIFICATION	 the stat fails the node has gone missing between the call getchildren and exists need try and become the leader 
WITHOUT_CLASSIFICATION	 the previous client connection falseleader likely closed create new one 
WITHOUT_CLASSIFICATION	 inject problem server 
WITHOUT_CLASSIFICATION	 try provide hints use about what went wrong they can fix their configuration todo introspect about look for gss information 
WITHOUT_CLASSIFICATION	 while opcodeclosesession 
WITHOUT_CLASSIFICATION	 could not create tmp directory hold jaas conf file 
WITHOUT_CLASSIFICATION	 groups username command return nonconsistent across different unixes 
WITHOUT_CLASSIFICATION	 days about years 
WITHOUT_CLASSIFICATION	 when incremented 
WITHOUT_CLASSIFICATION	 since just shut down server its still considered synced the leader which allows start the reconfig checks that quorum the new config synced before starting reconfig try remove server which requires quorum have that and but down wont get quorum new config acks 
WITHOUT_CLASSIFICATION	 dont want receive any packets until are sure that the 
WITHOUT_CLASSIFICATION	 verify there any change the proposed leader 
WITHOUT_CLASSIFICATION	 when reset 
WITHOUT_CLASSIFICATION	 simulate socket channel between client and follower 
WITHOUT_CLASSIFICATION	 last committed quorum verifier 
WITHOUT_CLASSIFICATION	 check duplication addresses and ports 
WITHOUT_CLASSIFICATION	 bad hostport string 
WITHOUT_CLASSIFICATION	 sleep for seconds 
WITHOUT_CLASSIFICATION	 this should exceed threshold 
WITHOUT_CLASSIFICATION	 adding back the packet notify failure conlosspacket 
WITHOUT_CLASSIFICATION	 reconfig test with unresolved hostnames 
WITHOUT_CLASSIFICATION	 ignore close the sendevent threads 
WITHOUT_CLASSIFICATION	 make streams and socket something innocuous 
WITHOUT_CLASSIFICATION	 there acl however the permission wrong need write permission leaste 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 dont care about the version its looking state 
WITHOUT_CLASSIFICATION	 create the pkg directory 
WITHOUT_CLASSIFICATION	 can only test calls zktrustmanager using sockets not sslengines this can fine since the logic the same 
WITHOUT_CLASSIFICATION	 setconfiguration will work even the above try fails due missing kerberos configuration unless set true which would not allow execution reach here due the throwing above 
WITHOUT_CLASSIFICATION	 takes place 
WITHOUT_CLASSIFICATION	 their next file during startup and will find the next config and join 
WITHOUT_CLASSIFICATION	 add child watch 
WITHOUT_CLASSIFICATION	 make sure can instantiate trust manager from the pkcs file disk 
WITHOUT_CLASSIFICATION	 lock object that guard access quorumverifier and 
WITHOUT_CLASSIFICATION	 contains the tag for acks and zxid for notifications 
WITHOUT_CLASSIFICATION	 combine local and global sessions getting local first upgrades global are caught 
WITHOUT_CLASSIFICATION	 clientconfig hostport just port 
WITHOUT_CLASSIFICATION	 arrange create hostprovider with list unresolved server addresses 
WITHOUT_CLASSIFICATION	 setting what should 
WITHOUT_CLASSIFICATION	 ignores its connectstring and next always returns localhost will count down when updateserverlist called 
WITHOUT_CLASSIFICATION	 send close connection packet the client doio will eventually close the underlying machinery like socket selectorkey etc 
WITHOUT_CLASSIFICATION	 volatile int round 
WITHOUT_CLASSIFICATION	 protocol identifier used among peers 
WITHOUT_CLASSIFICATION	 server stays down 
WITHOUT_CLASSIFICATION	 see zookeeper for more details 
WITHOUT_CLASSIFICATION	 expect this throw ioexception since were faking socket connect errors every time 
WITHOUT_CLASSIFICATION	 weve timed out hard shutdown 
WITHOUT_CLASSIFICATION	 see disconnect for each assertfailed connection attempt 
WITHOUT_CLASSIFICATION	 pending sync requests must access under this lock 
WITHOUT_CLASSIFICATION	 they will handled next connection cleared closed 
WITHOUT_CLASSIFICATION	 start with initial set candidates that are voters from new config that acknowledged the reconfig there must quorum choose one them 
WITHOUT_CLASSIFICATION	 set bogus streams 
WITHOUT_CLASSIFICATION	 set true when connected quorum server readonly mode 
WITHOUT_CLASSIFICATION	 with local session 
WITHOUT_CLASSIFICATION	 this was added avoid running into the problem zookeeper 
WITHOUT_CLASSIFICATION	 remove host number the first one the current list 
WITHOUT_CLASSIFICATION	 nonjavadoc javautillist 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting 
WITHOUT_CLASSIFICATION	 assuming that isconnected only used initiate connection not used some other connection status judgement 
WITHOUT_CLASSIFICATION	 wait for the leader quit due not enough followers and come back part the new quorum 
WITHOUT_CLASSIFICATION	 here null also clientaddr null 
WITHOUT_CLASSIFICATION	 test hostname that resolves multiple addresses 
WITHOUT_CLASSIFICATION	 pzxid not updated with smaller zxid 
WITHOUT_CLASSIFICATION	 epoch the proposed leader 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 not reg should 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 throw exception otherwise continue without authentication 
WITHOUT_CLASSIFICATION	 servicehostname myhostfoocom 
WITHOUT_CLASSIFICATION	 shutdown every one else but the leader 
WITHOUT_CLASSIFICATION	 this expected 
WITHOUT_CLASSIFICATION	 create dummy txn larger than preallocsize 
WITHOUT_CLASSIFICATION	 setowner the leader itself unless updated via the follower handlers 
WITHOUT_CLASSIFICATION	 resume poor fellow 
WITHOUT_CLASSIFICATION	 reset back default 
WITHOUT_CLASSIFICATION	 record leader election time 
WITHOUT_CLASSIFICATION	 wait connect one these 
WITHOUT_CLASSIFICATION	 any arbitrary constant will 
WITHOUT_CLASSIFICATION	 observer asks for epoch mocking learnerhandler behavior 
WITHOUT_CLASSIFICATION	 todo should depend zoocfg specified mechs but 
WITHOUT_CLASSIFICATION	 global session 
WITHOUT_CLASSIFICATION	 wait until cant connect 
WITHOUT_CLASSIFICATION	 otherwise wait for fixed amount time 
WITHOUT_CLASSIFICATION	 force server restart and load from snapshot not txn log 
WITHOUT_CLASSIFICATION	 use instance track synced learners make sure still have quorum current and potentially next pending view 
WITHOUT_CLASSIFICATION	 note wrong password test test this test sasl authentication failure 
WITHOUT_CLASSIFICATION	 creating the subtree for chroot clients 
WITHOUT_CLASSIFICATION	 when there worker thread pool the work directly and wait for its completion 
WITHOUT_CLASSIFICATION	 oom condition 
WITHOUT_CLASSIFICATION	 this replica might still believe that the connection sid have shut down the workers before trying open new connection 
WITHOUT_CLASSIFICATION	 initial connection write the complete connect request packet but then disable further writes until after receiving successful connection response the session expired then the server sends the expiration response and immediately closes its end the socket the client simultaneously writing its end then the tcp stack may choose abort with rst which case the client would never receive the session expired event see 
WITHOUT_CLASSIFICATION	 not and all server sasl messages have been received 
WITHOUT_CLASSIFICATION	 this scenario change role participant need remove first 
WITHOUT_CLASSIFICATION	 verify each quorum peer has expected quorum member view 
WITHOUT_CLASSIFICATION	 initialize the clients communications with the zookeeper server sending the server the first 
WITHOUT_CLASSIFICATION	 ipmap used limit connections per 
WITHOUT_CLASSIFICATION	 this could faster but probably wont used 
WITHOUT_CLASSIFICATION	 good message 
WITHOUT_CLASSIFICATION	 threadsleep 
WITHOUT_CLASSIFICATION	 given 
WITHOUT_CLASSIFICATION	 need check can close the session sometimes the corresponding servercnxnfactory could null because are just playing diffs from the leader 
WITHOUT_CLASSIFICATION	 addition when performing operations particular subject subjectdoas the tobeused gsscredential should added subjects private credential set otherwise the gss operations will fail since credential found 
WITHOUT_CLASSIFICATION	 send the snapshot created earlier 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 validate crc 
WITHOUT_CLASSIFICATION	 dont apply any prior change records less than firstzxid note that previous outstanding requests might have been removed once they are completed 
WITHOUT_CLASSIFICATION	 verifying that other path data watches are removed 
WITHOUT_CLASSIFICATION	 make sure everything consistent 
WITHOUT_CLASSIFICATION	 were good 
WITHOUT_CLASSIFICATION	 the customized leader catch the beginsnapshot call set the node value 
WITHOUT_CLASSIFICATION	 act assert 
WITHOUT_CLASSIFICATION	 add sid payload 
WITHOUT_CLASSIFICATION	 represents protocol version other words message type 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 taken care finally block 
WITHOUT_CLASSIFICATION	 cnxns typically have many watches use default cap here 
WITHOUT_CLASSIFICATION	 intentionally use the wrong password 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting lastprocessedzxid 
WITHOUT_CLASSIFICATION	 ensure that server and data bean are registered 
WITHOUT_CLASSIFICATION	 give some time process the snap snapshot taken yet the snap was applied memory 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 event ready emit yet 
WITHOUT_CLASSIFICATION	 suite setup 
WITHOUT_CLASSIFICATION	 note the first call getsocket triggers mode detection which can block 
WITHOUT_CLASSIFICATION	 jute tostring horrible remove unnecessary newlines 
WITHOUT_CLASSIFICATION	 get the ack the new leader 
WITHOUT_CLASSIFICATION	 watchers 
WITHOUT_CLASSIFICATION	 list all the followers 
WITHOUT_CLASSIFICATION	 period that isnt its own 
WITHOUT_CLASSIFICATION	 servers the new list that are not the old list 
WITHOUT_CLASSIFICATION	 validate the provided znode path contains the given watcher watchertype 
WITHOUT_CLASSIFICATION	 leader calls waitfornewleaderack first add ackset 
WITHOUT_CLASSIFICATION	 nongssapi final packet from server 
WITHOUT_CLASSIFICATION	 through the magic byte buffers txn will not pointing 
WITHOUT_CLASSIFICATION	 need sync and get consensus any transactions 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 are setting the bytes quota 
WITHOUT_CLASSIFICATION	 check set 
WITHOUT_CLASSIFICATION	 remove beans which are related client sessions strong assertions cannot done for these client sessions because registeration these beans with server will happen only their 
WITHOUT_CLASSIFICATION	 server not new config and load old servers must decreased connect one the new servers 
WITHOUT_CLASSIFICATION	 zxid the second log 
WITHOUT_CLASSIFICATION	 the lookout for timeout 
WITHOUT_CLASSIFICATION	 new configuration 
WITHOUT_CLASSIFICATION	 expected behaviour 
WITHOUT_CLASSIFICATION	 expect leader lose quorum proposed config and time out 
WITHOUT_CLASSIFICATION	 remove replicatedserver from the ensemble 
WITHOUT_CLASSIFICATION	 intercept when startforwarding called 
WITHOUT_CLASSIFICATION	 attempt incremental reconfig 
WITHOUT_CLASSIFICATION	 wait for the node appear 
WITHOUT_CLASSIFICATION	 verify that the exit code set properly 
WITHOUT_CLASSIFICATION	 register createconnection 
WITHOUT_CLASSIFICATION	 should get snap can better here but the main logic that should never send diff have never seen any txn older 
WITHOUT_CLASSIFICATION	 now verify autocreate off works 
WITHOUT_CLASSIFICATION	 sets reconfigmode 
WITHOUT_CLASSIFICATION	 sync request processor get flush disk 
WITHOUT_CLASSIFICATION	 lost the challenge then drop the new connection 
WITHOUT_CLASSIFICATION	 start and add followers 
WITHOUT_CLASSIFICATION	 dont keep this too long will assertassert false below 
WITHOUT_CLASSIFICATION	 fake the message 
WITHOUT_CLASSIFICATION	 create keytab 
WITHOUT_CLASSIFICATION	 nothing just return the same packet dropped the network 
WITHOUT_CLASSIFICATION	 kill peer and wait more than seconds for readonly server 
WITHOUT_CLASSIFICATION	 are sending the first packet figure out whether trunc 
WITHOUT_CLASSIFICATION	 ignore 
WITHOUT_CLASSIFICATION	 not used 
WITHOUT_CLASSIFICATION	 step time 
WITHOUT_CLASSIFICATION	 during first iteration leavingindex will correspond follower 
WITHOUT_CLASSIFICATION	 create some additional znodes without taking snapshot afterwards 
WITHOUT_CLASSIFICATION	 note that configuration here refers 
WITHOUT_CLASSIFICATION	 log the number fds used before and after test run verifies are freeing resources correctly unfortunately this only works unix systems the only place sun has implemented part the mgmt bean api 
WITHOUT_CLASSIFICATION	 keep findbugs happy 
WITHOUT_CLASSIFICATION	 turnofffollowers 
WITHOUT_CLASSIFICATION	 the exception thrown the server side need unwrap 
WITHOUT_CLASSIFICATION	 spin quorum use small ticktime make the test run faster 
WITHOUT_CLASSIFICATION	 default not registered 
WITHOUT_CLASSIFICATION	 the leader didnt get quorum acks make sure that leaders current epoch not advanced 
WITHOUT_CLASSIFICATION	 timeout not allowed since infinite timeout can permanently lock accept thread 
WITHOUT_CLASSIFICATION	 should fail and shouldnt change outstanding record 
WITHOUT_CLASSIFICATION	 leader this should also fail 
WITHOUT_CLASSIFICATION	 the created ephemeral nodes are still around 
WITHOUT_CLASSIFICATION	 simulate snapshot file 
WITHOUT_CLASSIFICATION	 make sure snapshot that have something there when 
WITHOUT_CLASSIFICATION	 make sure map negative ids well size 
WITHOUT_CLASSIFICATION	 log file more recent must scan find the highest zxid 
WITHOUT_CLASSIFICATION	 allow subclasses statcommand specify their own names 
WITHOUT_CLASSIFICATION	 later packet will notified 
WITHOUT_CLASSIFICATION	 returns whether are interested taking new requests which 
WITHOUT_CLASSIFICATION	 starts listener thread that waits for connection requests 
WITHOUT_CLASSIFICATION	 observers are currently only compatible with leaderelection 
WITHOUT_CLASSIFICATION	 not consider groups with weight zero 
WITHOUT_CLASSIFICATION	 java prefer cbc ciphers since aesni support lacking and gcm slower than cbc 
WITHOUT_CLASSIFICATION	 this good 
WITHOUT_CLASSIFICATION	 nio should not accept conenctions 
WITHOUT_CLASSIFICATION	 lets grab two ports 
WITHOUT_CLASSIFICATION	 invalid dataversion 
WITHOUT_CLASSIFICATION	 notification probe recvqueuepeek 
WITHOUT_CLASSIFICATION	 need process local session requests 
WITHOUT_CLASSIFICATION	 the version this quorumverifier will set leaderlead case the leader just being established waitforepochack makes sure that readytostart true 
WITHOUT_CLASSIFICATION	 now the resulting ensemble shouldnt quorate 
WITHOUT_CLASSIFICATION	 but different role port 
WITHOUT_CLASSIFICATION	 old client session can expire restart 
WITHOUT_CLASSIFICATION	 the pointer the connection the request 
WITHOUT_CLASSIFICATION	 this method called when client passes authentication data for this scheme the authdata directly from the authentication packet the implementor may attach new ids the authinfo field cnxn may use cnxn send packets back the client param cnxn the cnxn that received the authentication information param authdata the authentication data received return todo 
WITHOUT_CLASSIFICATION	 nonjavadoc see javautilcollection 
WITHOUT_CLASSIFICATION	 weve already starting sending the first packet better finish 
WITHOUT_CLASSIFICATION	 connect the client after services are restarted otherwise would get 
WITHOUT_CLASSIFICATION	 send the packet death 
WITHOUT_CLASSIFICATION	 stored files the list files greater than the zxid are looking for 
WITHOUT_CLASSIFICATION	 needed jersey 
WITHOUT_CLASSIFICATION	 get zxid create requests 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 setup servers followers 
WITHOUT_CLASSIFICATION	 snapshot was never taken during very simple sync 
WITHOUT_CLASSIFICATION	 pass 
WITHOUT_CLASSIFICATION	 now check its the limit node 
WITHOUT_CLASSIFICATION	 important that this done before the leader executes waitforepochack before learnerhandlers return from their waitforepochack hence before they construct the newleader message containing the the leader which change below 
WITHOUT_CLASSIFICATION	 read the length now get the buffer 
WITHOUT_CLASSIFICATION	 arrange 
WITHOUT_CLASSIFICATION	 above but dont the throttled read make the request bytes wait the socket 
WITHOUT_CLASSIFICATION	 check that theres reconfig progress 
WITHOUT_CLASSIFICATION	 making sure setdata works 
WITHOUT_CLASSIFICATION	 one successful operation the newly added node 
WITHOUT_CLASSIFICATION	 second iteration the loop will remove the leader 
WITHOUT_CLASSIFICATION	 allow the clients run for max sec 
WITHOUT_CLASSIFICATION	 optimization for read heavy workloads iff this read and there are pending flushes writes then just pass this the next processor 
WITHOUT_CLASSIFICATION	 with local session off 
WITHOUT_CLASSIFICATION	 the follower reconfiguration will have failed 
WITHOUT_CLASSIFICATION	 this test makes sure that clientinitiated tls renegotiation does not 
WITHOUT_CLASSIFICATION	 default case 
WITHOUT_CLASSIFICATION	 were sending the designated leader and the leader changing the followers are responsible for closing the connection this way are sure that least majority them 
WITHOUT_CLASSIFICATION	 simulate reconfig progress servers have temp reconfig 
WITHOUT_CLASSIFICATION	 dont forward local sessions the leader 
WITHOUT_CLASSIFICATION	 start thread that waits for connection requests from 
WITHOUT_CLASSIFICATION	 proposedrefresh too far the future its after ticket expires simply return now 
WITHOUT_CLASSIFICATION	 proceeds correctly after this point 
WITHOUT_CLASSIFICATION	 enable client sasl 
WITHOUT_CLASSIFICATION	 number machines stayed the same server the new cluster 
WITHOUT_CLASSIFICATION	 create couple nodes 
WITHOUT_CLASSIFICATION	 this the mode for version information 
WITHOUT_CLASSIFICATION	 this just arbitrary object represent requests issued aka owned this class 
WITHOUT_CLASSIFICATION	 something wrong 
WITHOUT_CLASSIFICATION	 create nodes this should ensure the length our 
WITHOUT_CLASSIFICATION	 real zookeeper would take care setting the current vote here manually 
WITHOUT_CLASSIFICATION	 create some ephemeral nodes this should force the session 
WITHOUT_CLASSIFICATION	 otherwise the end the string ignore 
WITHOUT_CLASSIFICATION	 sleep since writing the config files may take time 
WITHOUT_CLASSIFICATION	 this call shouldnt trigger any error watch 
WITHOUT_CLASSIFICATION	 done joining 
WITHOUT_CLASSIFICATION	 trying load jks file with pem loader should fail 
WITHOUT_CLASSIFICATION	 now update the path quota subtree 
WITHOUT_CLASSIFICATION	 builds ocsphandler that responds with good status for all certificates except revokedcert 
WITHOUT_CLASSIFICATION	 weve found the primingpacket move the beginning the queue 
WITHOUT_CLASSIFICATION	 will fixed next kerby version 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting lastprocessedzxid 
WITHOUT_CLASSIFICATION	 multi should never have been created entire should fail 
WITHOUT_CLASSIFICATION	 test that data provided when 
WITHOUT_CLASSIFICATION	 start next request 
WITHOUT_CLASSIFICATION	 negative value not allowed will return the default 
WITHOUT_CLASSIFICATION	 follower counter 
WITHOUT_CLASSIFICATION	 foobar childwatch foo 
WITHOUT_CLASSIFICATION	 sort leader offers sequence number which may not zerobased contiguous and keep their paths handy for setting watches 
WITHOUT_CLASSIFICATION	 make sure doesnt have the new value that alone had logged 
WITHOUT_CLASSIFICATION	 update last committed quorum verifier write the new config disk 
WITHOUT_CLASSIFICATION	 commit packet 
WITHOUT_CLASSIFICATION	 also use the expiring interval for cnxnexpiryqueue these dont need the same but the expiring interval passed into the expiryqueue constructor below should less than equal the timeout 
WITHOUT_CLASSIFICATION	 either client not configured use tunnelled authentication scheme tunnelled authentication has completed successfully 
WITHOUT_CLASSIFICATION	 remove the buffers that have sent 
WITHOUT_CLASSIFICATION	 default create snaplog dirs but otherwise complain instead 
WITHOUT_CLASSIFICATION	 snapcount must more see 
WITHOUT_CLASSIFICATION	 borrowed from pathwindows 
WITHOUT_CLASSIFICATION	 this code originally from hdfs see the file name minikdc there case bug fixing history etc branch trunk github revision ffefbadebd 
WITHOUT_CLASSIFICATION	 verify the session existence 
WITHOUT_CLASSIFICATION	 for cmds they are all bytes which fits inside int 
WITHOUT_CLASSIFICATION	 are adding two new servers the ensemble these two servers should have the config which includes all five servers the old three servers plus the two servers added the old three servers should only have the old three server config because disabling reconfig will prevent synchronizing configs between peers 
WITHOUT_CLASSIFICATION	 make sure that did take the snapshot now 
WITHOUT_CLASSIFICATION	 opread means can read but opwrite means cannot write its weird 
WITHOUT_CLASSIFICATION	 loginfostarting forward for toclose 
WITHOUT_CLASSIFICATION	 set 
WITHOUT_CLASSIFICATION	 start follower snapshot sync 
WITHOUT_CLASSIFICATION	 add replicatedserver back the ensemble 
WITHOUT_CLASSIFICATION	 call command and put result bytestream 
WITHOUT_CLASSIFICATION	 remove self local bean 
WITHOUT_CLASSIFICATION	 only extra logging know what kind session this were supporting both kinds sessions 
WITHOUT_CLASSIFICATION	 will send diff for this kind zxid any case this ifblock the catch when our history older than learner and there new txn since then need empty diff 
WITHOUT_CLASSIFICATION	 restart leader election 
WITHOUT_CLASSIFICATION	 waiting for the callback were assured that the event queue flushed 
WITHOUT_CLASSIFICATION	 commit proposals order 
WITHOUT_CLASSIFICATION	 peer have some proposals that the leader hasnt seen yet may used leader 
WITHOUT_CLASSIFICATION	 corrupt all the snapshot the snapshot directory 
WITHOUT_CLASSIFICATION	 should work 
WITHOUT_CLASSIFICATION	 the xid for authpacket 
WITHOUT_CLASSIFICATION	 message type notification acknowledgement 
WITHOUT_CLASSIFICATION	 start servers 
WITHOUT_CLASSIFICATION	 wait until followers time out waitforepochack they shouldnt return 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 set the snap count something low that force log rollover and verify that working part the epoch rollover 
WITHOUT_CLASSIFICATION	 close wasnt successful try delete the tmp file 
WITHOUT_CLASSIFICATION	 now verify that the filetxnlog reads every transaction only once 
WITHOUT_CLASSIFICATION	 generate some transactions 
WITHOUT_CLASSIFICATION	 suppress the try warning here because the close methods signature allows throw which strongly advised against autocloseable see close will never throw but the exception remains the signature for backwards compatibility purposes 
WITHOUT_CLASSIFICATION	 password test 
WITHOUT_CLASSIFICATION	 connection time out value milliseconds 
WITHOUT_CLASSIFICATION	 wait until can connect 
WITHOUT_CLASSIFICATION	 make sure that ops are committed order with reconfigurations now possible that different operations wait for different sets acks and still want enforce that they are committed order currently only permit one outstanding reconfiguration such that the reconfiguration and subsequent outstanding ops proposed while the reconfig pending all wait for quorum old and new config its not possible get enough acks for operation without getting enough acks for preceding ops but the future multiple 
WITHOUT_CLASSIFICATION	 turn each child rootnodename into leader offer this tuple the sequence number and the node name 
WITHOUT_CLASSIFICATION	 new contents replace original file 
WITHOUT_CLASSIFICATION	 loginfocreated new client zkdescribecnxn 
WITHOUT_CLASSIFICATION	 sleeps receive 
WITHOUT_CLASSIFICATION	 add the root logger the hierarchy mbean orgapachelogjlogger rootlogger 
WITHOUT_CLASSIFICATION	 this only true because were setting cmdname the primary name 
WITHOUT_CLASSIFICATION	 have written more than have previously preallocated need make sure the new file size larger than what already have 
WITHOUT_CLASSIFICATION	 create top level znode 
WITHOUT_CLASSIFICATION	 peer already sync 
WITHOUT_CLASSIFICATION	 resetting watcher that this watcher can again used ensure that the zkclient able reestablish connection with the 
WITHOUT_CLASSIFICATION	 canonicalize authorization according system properties 
WITHOUT_CLASSIFICATION	 expected that 
WITHOUT_CLASSIFICATION	 failed the most recent snapshot must incomplete try reading the next one after corrupting 
WITHOUT_CLASSIFICATION	 leader calls waitforepochack first add electingfollowers 
WITHOUT_CLASSIFICATION	 get three server quorum 
WITHOUT_CLASSIFICATION	 cleanup 
WITHOUT_CLASSIFICATION	 nonjavadoc see dataflavor 
WITHOUT_CLASSIFICATION	 are requesting half the number transaction from the snapshot 
WITHOUT_CLASSIFICATION	 entry point for quorumlearnerjava 
WITHOUT_CLASSIFICATION	 before joining established ensemble verify that majority are following the same leader 
WITHOUT_CLASSIFICATION	 errors are okay since hosts may down 
WITHOUT_CLASSIFICATION	 bad gateway 
WITHOUT_CLASSIFICATION	 got eof right away definitely not using tls fallthrough 
WITHOUT_CLASSIFICATION	 check that new dynamic config includes the updated client port check that server changedserverid erased clientport from static config check that other servers still have clientport static config 
WITHOUT_CLASSIFICATION	 only update pzxid when the zxid larger than the current pzxid otherwise might override higher pzxid set following create txn which could cause the cversion and pzxid inconsistent 
WITHOUT_CLASSIFICATION	 truncatelog reloads the 
WITHOUT_CLASSIFICATION	 set threshold after the first commit takes commit disk 
WITHOUT_CLASSIFICATION	 set the state the peer looking and look for leader 
WITHOUT_CLASSIFICATION	 this the leader has dropped leadership 
WITHOUT_CLASSIFICATION	 unable pull new connection off the accept queue pause accepting give time free file descriptors and the accept thread doesnt spin tight loop 
WITHOUT_CLASSIFICATION	 make sure that the magic number written before padding 
WITHOUT_CLASSIFICATION	 must java later 
WITHOUT_CLASSIFICATION	 this means that the file has ended should the next file 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 sasl not required when server initializes connection will try log but will also accept connections that not start with sasl 
WITHOUT_CLASSIFICATION	 cannot send trunc that cross epoch boundary the learner will crash asked will send snapshot this those cases 
WITHOUT_CLASSIFICATION	 since the sasl authenticator will usually used with kerberos authentication should enforce that these names are valid according kerbeross syntax for principals use the kerberosnameid constructor define validity kerberosnameid throws then invalid otherwise valid 
WITHOUT_CLASSIFICATION	 does not commit ops after committing the reconfig 
WITHOUT_CLASSIFICATION	 this safe inside iterator per 
WITHOUT_CLASSIFICATION	 result the operations just performed 
WITHOUT_CLASSIFICATION	 find the leader 
WITHOUT_CLASSIFICATION	 look through proposals this variable keeps track previous proposal 
WITHOUT_CLASSIFICATION	 max number toasters for the sceen 
WITHOUT_CLASSIFICATION	 need for calloc free 
WITHOUT_CLASSIFICATION	 receive the commit message 
WITHOUT_CLASSIFICATION	 for such child 
WITHOUT_CLASSIFICATION	 great this what were hoping for 
WITHOUT_CLASSIFICATION	 zookeeper test white list four letter words for default white list empty verify that the case except stat command which enabled clientbase which other tests depend 
WITHOUT_CLASSIFICATION	 disconnected 
WITHOUT_CLASSIFICATION	 zookeeper always unregister connection upon close prevent connection bean leak under certain race conditions 
WITHOUT_CLASSIFICATION	 sasl login failed 
WITHOUT_CLASSIFICATION	 null factory never started 
WITHOUT_CLASSIFICATION	 ignore for this test 
WITHOUT_CLASSIFICATION	 all zxid should match what created 
WITHOUT_CLASSIFICATION	 this class holds the servers and clients for those servers 
WITHOUT_CLASSIFICATION	 adds weights per group 
WITHOUT_CLASSIFICATION	 qcm outside qvlock avoid deadlock against other callers qcmconnectone 
WITHOUT_CLASSIFICATION	 quorumpeer learner not auth enabled then self wont able join quorum this condition ensuring that the quorumpeer learner 
WITHOUT_CLASSIFICATION	 read without sending data verify timeout 
WITHOUT_CLASSIFICATION	 ignore weve simply come the end the file 
WITHOUT_CLASSIFICATION	 receive and handle the connection request asynchronously the quorum sasl authentication enabled this required because sasl server authentication process may take few seconds finish this may delay next peer connection requests 
WITHOUT_CLASSIFICATION	 separated this method from the main run loop for test purposes zookeeper 
WITHOUT_CLASSIFICATION	 rewrite option 
WITHOUT_CLASSIFICATION	 loginthread will sleep until time from last refresh tickets expiry has been reached which time will wake 
WITHOUT_CLASSIFICATION	 used send quorumverifier configuration info 
WITHOUT_CLASSIFICATION	 print notification info 
WITHOUT_CLASSIFICATION	 new server has still its invalid joiner config everyone old 
WITHOUT_CLASSIFICATION	 commit foo update 
WITHOUT_CLASSIFICATION	 create child znodes 
WITHOUT_CLASSIFICATION	 note getting the input stream should not block the thread trigger mode detection 
WITHOUT_CLASSIFICATION	 mapping was present clean the previous expiry bucket 
WITHOUT_CLASSIFICATION	 can get here dont have packet queue there duplicate txn given iterator 
WITHOUT_CLASSIFICATION	 only want print anything things have had chance change 
WITHOUT_CLASSIFICATION	 removed server 
WITHOUT_CLASSIFICATION	 cant call outgoingqueueclear here because between iterating and clear there might new packets added queuepacket 
WITHOUT_CLASSIFICATION	 dont reestablish connection are closing 
WITHOUT_CLASSIFICATION	 start the servers with static config file without dynamic 
WITHOUT_CLASSIFICATION	 find zxid for the second log 
WITHOUT_CLASSIFICATION	 crank the epoch numbers 
WITHOUT_CLASSIFICATION	 this should never happen you cant have filter exception without filter 
WITHOUT_CLASSIFICATION	 all new sessions local default 
WITHOUT_CLASSIFICATION	 handle clientpath 
WITHOUT_CLASSIFICATION	 set force snapshot true 
WITHOUT_CLASSIFICATION	 nothing are shutting things down exception here irrelevant 
WITHOUT_CLASSIFICATION	 free the error stream buffer 
WITHOUT_CLASSIFICATION	 sending message myself then simply enqueue loopback 
WITHOUT_CLASSIFICATION	 choose identifier random need value identify the connection 
WITHOUT_CLASSIFICATION	 entry point for 
WITHOUT_CLASSIFICATION	 closing session should remove ephemeral nodes and trigger data watches any 
WITHOUT_CLASSIFICATION	 stopping the elected node reelection will happen 
WITHOUT_CLASSIFICATION	 expect this happen 
WITHOUT_CLASSIFICATION	 return capitalizefname tagn 
WITHOUT_CLASSIFICATION	 show time 
WITHOUT_CLASSIFICATION	 listener thread should stop and throws error which notify quorumpeer about error quorumpeer should start shutdown process set wait time listener contains bug and thread not stops 
WITHOUT_CLASSIFICATION	 logwarnclientparts serverclientparts 
WITHOUT_CLASSIFICATION	 some tests initialize quorumpeer without static config file 
WITHOUT_CLASSIFICATION	 zkclose 
WITHOUT_CLASSIFICATION	 setting used for snapretaincount this test 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 update the election vote here ensure that all members the ensemble report the same vote new servers that start and send leader election notifications the ensemble see 
WITHOUT_CLASSIFICATION	 subject nonnull can assumed gssapi 
WITHOUT_CLASSIFICATION	 should able dump the recovered logfile with crc error 
WITHOUT_CLASSIFICATION	 check content transaction log and snapshot dirs they are two different directories 
WITHOUT_CLASSIFICATION	 run the command 
WITHOUT_CLASSIFICATION	 sending and challenge 
WITHOUT_CLASSIFICATION	 assume that server and client are the same realm default unless the system property 
WITHOUT_CLASSIFICATION	 messages send both notifications and acks 
WITHOUT_CLASSIFICATION	 resolution occured every time 
WITHOUT_CLASSIFICATION	 ignore chroot spec same null 
WITHOUT_CLASSIFICATION	 this was added zookeeper the initial config has version not explicitly specified the user the lack version config file interpreted version soon config established would like increase its version that takes presedence over other initial configs that were not established such config server trying join the ensemble which may partial view the system not the full config chose set the new version the one the newleader message however before can that there must agreement the new version can only change the version when sendingreceiving uptodate not when sendingreceiving newleader other words cant change curqv here since its the committed quorum verifier and theres still agreement the new version that wed like use instead use which being sent with newleader message its good way let followers know about the new version the original reason for sending with newleader that the leader completes any potentially uncommitted reconfigs that finds before starting propose operations here were reusing the same code path for reaching consensus the new version number 
WITHOUT_CLASSIFICATION	 clean for shutdown 
WITHOUT_CLASSIFICATION	 just make sure that actually did get process the leader 
WITHOUT_CLASSIFICATION	 remove the error 
WITHOUT_CLASSIFICATION	 create file destination 
WITHOUT_CLASSIFICATION	 make sure dont mess with request itself 
WITHOUT_CLASSIFICATION	 are not truncating sending diff just send snapshot 
WITHOUT_CLASSIFICATION	 send response 
WITHOUT_CLASSIFICATION	 start peer servers with and 
WITHOUT_CLASSIFICATION	 set sizelimit very high number can pull all transactions 
WITHOUT_CLASSIFICATION	 response with other packets 
WITHOUT_CLASSIFICATION	 multiply get reqssec 
WITHOUT_CLASSIFICATION	 initial data written 
WITHOUT_CLASSIFICATION	 want queue the request processed before submit the request the leader that are ready receive 
WITHOUT_CLASSIFICATION	 add back host number 
WITHOUT_CLASSIFICATION	 make sure can instantiate trust manager from the pem file disk 
WITHOUT_CLASSIFICATION	 xff extended feature unsupported extended type 
WITHOUT_CLASSIFICATION	 explicitly add global session the flag not set 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 the files are sorted with zxids 
WITHOUT_CLASSIFICATION	 the connection not the master list its already been closed 
WITHOUT_CLASSIFICATION	 this client section has the correct password but were not configured use were configured the above use the myzookeeperclient section which has incorrect password 
WITHOUT_CLASSIFICATION	 parse the output clear the input stream buffer 
WITHOUT_CLASSIFICATION	 check for more than children zookeeperstats and zookeeperquotas are not the children then this path ancestor some path that 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 wait for falseleader rejoin the quorum 
WITHOUT_CLASSIFICATION	 parent channel options 
WITHOUT_CLASSIFICATION	 validate status code the end authentication exchange 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 end end 
WITHOUT_CLASSIFICATION	 otherwise proceed with the connection 
WITHOUT_CLASSIFICATION	 input buffer until after throttling turned off need make sure both modes work 
WITHOUT_CLASSIFICATION	 check exceptions 
WITHOUT_CLASSIFICATION	 find the leader 
WITHOUT_CLASSIFICATION	 for invalid acls should not throw exception 
WITHOUT_CLASSIFICATION	 create child see nodechildren notification 
WITHOUT_CLASSIFICATION	 private void notestconnections throws ioexception keeperexception zookeeper 
WITHOUT_CLASSIFICATION	 found path watchers 
WITHOUT_CLASSIFICATION	 the sleep necessary that the leader figures out 
WITHOUT_CLASSIFICATION	 sanity check 
WITHOUT_CLASSIFICATION	 methods aid testing follow these methods are expected used for testing only 
WITHOUT_CLASSIFICATION	 use indication which sasl mechanism use empty use digestmd otherwise use gssapi 
WITHOUT_CLASSIFICATION	 new client port 
WITHOUT_CLASSIFICATION	 animate from top 
WITHOUT_CLASSIFICATION	 diff proposals commit 
WITHOUT_CLASSIFICATION	 generate snapshot and close files 
WITHOUT_CLASSIFICATION	 create with valid sequential flag 
WITHOUT_CLASSIFICATION	 check whether its global session can ignore those because they are handled the leader but not rethrow check local session status first avoid race condition with session upgrading 
WITHOUT_CLASSIFICATION	 add all nonexcluded log files 
WITHOUT_CLASSIFICATION	 test the most likely situation only server stated observer 
WITHOUT_CLASSIFICATION	 iterator points the first valid txn when initialized 
WITHOUT_CLASSIFICATION	 delete 
WITHOUT_CLASSIFICATION	 requests coming from the learner should have gone through submitrequest each server which already perform some request validation dont need again additionally learnerhandler should start submitting requests into the leaders pipeline only when the leaders server started can submit the request directly into this done that requests from learners wont through which perform local session upgrade 
WITHOUT_CLASSIFICATION	 possible that committedlog empty that case setting these value the latest txn leader will reduce the case that need handle here how each case handle the block below lastprocesszxid peerzxid handle lastprocesszxid peerzxid handle lastprocesszxid peerzxid handle 
WITHOUT_CLASSIFICATION	 peer zxid 
WITHOUT_CLASSIFICATION	 grab list iterator starting the end the list can iterate reverse 
WITHOUT_CLASSIFICATION	 value not allowed will return the default 
WITHOUT_CLASSIFICATION	 test view contains self 
WITHOUT_CLASSIFICATION	 wait until all updates return 
WITHOUT_CLASSIFICATION	 log request 
WITHOUT_CLASSIFICATION	 make sure the data was recorded the filesystem 
WITHOUT_CLASSIFICATION	 child watcher 
WITHOUT_CLASSIFICATION	 now try ephemeral node this should fail since 
WITHOUT_CLASSIFICATION	 stop all severs 
WITHOUT_CLASSIFICATION	 zookeeper wait until can connect readwrite server after the quorum formed otherwise possible that client first connects readonly server then drops the connection because shutting down the readonly server caused leader election quorum forming between the readonly server and the newly started server happen execute the zkcreate after the readonly server shutdown and before the quorum formed will get 
WITHOUT_CLASSIFICATION	 exception occurred misdetected sequence suffix return 
WITHOUT_CLASSIFICATION	 double check for the file existence 
WITHOUT_CLASSIFICATION	 now ship the request the leader with all other quorum operations sync also follows this code path but different from others need keep track the sync operations this follower has pending 
WITHOUT_CLASSIFICATION	 now start new connection 
WITHOUT_CLASSIFICATION	 todo introduce jutetestcase zktestcase 
WITHOUT_CLASSIFICATION	 there should only two files one the snapshot and the other logfile 
WITHOUT_CLASSIFICATION	 now corrupt the leaders database 
WITHOUT_CLASSIFICATION	 flush the config server 
WITHOUT_CLASSIFICATION	 fake messages from the server 
WITHOUT_CLASSIFICATION	 put the new set the map but only another thread 
WITHOUT_CLASSIFICATION	 consider all notifications from the same epoch together 
WITHOUT_CLASSIFICATION	 this test that reconfig will only succeed there quorum new config below there quorum should fail 
WITHOUT_CLASSIFICATION	 simulate the upgrading case where the config node will created 
WITHOUT_CLASSIFICATION	 this client section has incorrect password but were not configured use were configured the above use the myzookeeperclient section below which has the correct password 
WITHOUT_CLASSIFICATION	 call noop session isnt tracked safe call both 
WITHOUT_CLASSIFICATION	 need short since need wait for session expire 
WITHOUT_CLASSIFICATION	 upgrade peer with and 
WITHOUT_CLASSIFICATION	 would great test the value but does not appear 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 this request the commit request that was blocking the processor clear 
WITHOUT_CLASSIFICATION	 wait for selector and worker threads shutdown 
WITHOUT_CLASSIFICATION	 reset default value since some test cases set this true needed for jdk since unit test can run random order 
WITHOUT_CLASSIFICATION	 address recipient 
WITHOUT_CLASSIFICATION	 never true tmpfile does its job 
WITHOUT_CLASSIFICATION	 note that addack already checks that the learner participant 
WITHOUT_CLASSIFICATION	 this server will added back observer 
WITHOUT_CLASSIFICATION	 and finally disable throttling after seconds 
WITHOUT_CLASSIFICATION	 all the rest dont need create txn just verify session 
WITHOUT_CLASSIFICATION	 weve asked close wait for finish closing all the subthreads otw the selector may not closed when check false positive test assertfailure 
WITHOUT_CLASSIFICATION	 only use jline its the classpath 
WITHOUT_CLASSIFICATION	 dont try handle jersey exceptions ourselves 
WITHOUT_CLASSIFICATION	 ulimit isnt supported windows 
WITHOUT_CLASSIFICATION	 get new designated leader from current leaders message 
WITHOUT_CLASSIFICATION	 this server section has incorrect password but were not configured use were configured the above use the myzookeeperserver section below which has the correct password 
WITHOUT_CLASSIFICATION	 hadoop 
WITHOUT_CLASSIFICATION	 close clients 
WITHOUT_CLASSIFICATION	 start creating all the parents 
WITHOUT_CLASSIFICATION	 this data structure must accessed under the outstandingchanges lock 
WITHOUT_CLASSIFICATION	 through buffer until find reach end buffer first put whats buffer into string buffer repeat 
WITHOUT_CLASSIFICATION	 real zookeeper would take care setting the current vote here manually 
WITHOUT_CLASSIFICATION	 should catch the exceptions from the valid snapshot and continue until find valid one 
WITHOUT_CLASSIFICATION	 cannot use createclient here because server may close session before jmxenvensureall called which will fail the test case 
WITHOUT_CLASSIFICATION	 lastprocessedzxid 
WITHOUT_CLASSIFICATION	 nothing interesting out null 
WITHOUT_CLASSIFICATION	 transaction log and snapshot files the same dir 
WITHOUT_CLASSIFICATION	 observer calls waitforepochack should fail 
WITHOUT_CLASSIFICATION	 trying get second txn second txnlog give the 
WITHOUT_CLASSIFICATION	 some useful information log the number fds used before and after test run helps verify are freeing resources correctly unfortunately this only works unix systems the only place sun has implemented part the mgmt bean api 
WITHOUT_CLASSIFICATION	 nonjavadoc see javalangstring 
WITHOUT_CLASSIFICATION	 here are the cases that want handle force sending snapshot for testing purpose peer and leader already sync send empty diff follower has txn that havent seen this may old leader need send trunc however peer has newepochzxid cannot send trunc since the follower has txnlog follower within committedlog range already insync may need send diff trunc depending followers zxid always send empty diff follower already insync follower missed the committedlog will try use ondisk txnlog committedlog sync with follower that fail will send snapshot 
WITHOUT_CLASSIFICATION	 server new config and load should increased stay with this server and nothing special 
WITHOUT_CLASSIFICATION	 the transaction logs 
WITHOUT_CLASSIFICATION	 set the last accepted epoch and current epochs 
WITHOUT_CLASSIFICATION	 proposed leader the case notification 
WITHOUT_CLASSIFICATION	 visiable for test 
WITHOUT_CLASSIFICATION	 purge snapshot and log files 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 for now 
WITHOUT_CLASSIFICATION	 take any necessary action need send trunc diff 
WITHOUT_CLASSIFICATION	 domain parameter hardwired between the server and client 
WITHOUT_CLASSIFICATION	 this 
WITHOUT_CLASSIFICATION	 txn proposal and commit for value update 
WITHOUT_CLASSIFICATION	 when new leader starts executing leaderlead invokes this method the database however has been initialized before running leader election that the server could pick its zxid for its initial vote does invoking consequently dont need initialize once more and avoid the penalty loading second time not reloading particularly important for applications that host large database the following block checks whether the database has been initialized not note that this method invoked least one other method see zookeeper for more detail 
WITHOUT_CLASSIFICATION	 depricated rmr 
WITHOUT_CLASSIFICATION	 server error shutdown state changes 
WITHOUT_CLASSIFICATION	 for future unwary socket programmers although connect blocks does not require accept the server side return therefore you can not assume that all the sockets are connected the end this for loop 
WITHOUT_CLASSIFICATION	 zxid the proposed leader 
WITHOUT_CLASSIFICATION	 marks end stream need check clear had been called between the snapshot 
WITHOUT_CLASSIFICATION	 ensure have the leaders correct address before attempting connect 
WITHOUT_CLASSIFICATION	 this should break the run loop 
WITHOUT_CLASSIFICATION	 loginfoprep cxid requestcxid type 
WITHOUT_CLASSIFICATION	 logwarnsid sid addressstr addressstr 
WITHOUT_CLASSIFICATION	 case off tries enable learner sasl 
WITHOUT_CLASSIFICATION	 zookeeper overwrite config node content extracted from leader snapshot with local config avoid potential 
WITHOUT_CLASSIFICATION	 all dynamic files created with the same version should have 
WITHOUT_CLASSIFICATION	 creating child using chroot client 
WITHOUT_CLASSIFICATION	 send the valid invalid session packet the follower 
WITHOUT_CLASSIFICATION	 the flip limit becomes position position gets set this sets for the write 
WITHOUT_CLASSIFICATION	 wildcard address loopback addresslocalhost 
WITHOUT_CLASSIFICATION	 transaction log files log dir 
WITHOUT_CLASSIFICATION	 make tracked buffers eligible for 
WITHOUT_CLASSIFICATION	 deserialize datatree this should clear the old bug nodes and pathtrie 
WITHOUT_CLASSIFICATION	 now truncate the current position 
WITHOUT_CLASSIFICATION	 upgrade this once have googleguava java 
WITHOUT_CLASSIFICATION	 should noop 
WITHOUT_CLASSIFICATION	 when the cversion need translate from the count the creates the count the changes semantics for every create there delete except for the children still present 
WITHOUT_CLASSIFICATION	 this will fast forward the database the latest recorded transactions 
WITHOUT_CLASSIFICATION	 original contents still place 
WITHOUT_CLASSIFICATION	 format version introduced 
WITHOUT_CLASSIFICATION	 same port 
WITHOUT_CLASSIFICATION	 capture quorumpeer logging 
WITHOUT_CLASSIFICATION	 verify that the size just connect then disconnect the client attempts reconnect and are not handling current state correctly eventing duplicate disconnects then well 
WITHOUT_CLASSIFICATION	 catch this 
WITHOUT_CLASSIFICATION	 now shut down the servers and restart them 
WITHOUT_CLASSIFICATION	 create dummy log and transaction file 
WITHOUT_CLASSIFICATION	 register watch 
WITHOUT_CLASSIFICATION	 wont work because the session expiration will match the zxid for and wont actually truncate the zxid for creation due artifact switching the xid the standalone the last entry the log for the xid result the first the truncated znodes check for 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 make sure that previous request finished 
WITHOUT_CLASSIFICATION	 todo lets assert that are longer the leader 
WITHOUT_CLASSIFICATION	 recreate client session since the previous session was not persisted 
WITHOUT_CLASSIFICATION	 for them that reconfiguration was progress when they failed 
WITHOUT_CLASSIFICATION	 calling closesession after losing the cnxn results the client close session response being dropped 
WITHOUT_CLASSIFICATION	 start the old leader 
WITHOUT_CLASSIFICATION	 ignore simply end file though really linenull should have caught this 
WITHOUT_CLASSIFICATION	 assert that the state the thread the one expected 
WITHOUT_CLASSIFICATION	 get the value from the map 
WITHOUT_CLASSIFICATION	 nonjavadoc see javalangstring 
WITHOUT_CLASSIFICATION	 sasl authentication currently progress construct and send response packet immediately rather than queuing 
WITHOUT_CLASSIFICATION	 specify all the commands that are available 
WITHOUT_CLASSIFICATION	 wait for the transactions written out the thread that writes them out 
WITHOUT_CLASSIFICATION	 use gathered write call this updates the positions the byte buffers reflect the bytes that were written out 
WITHOUT_CLASSIFICATION	 try load passwordprotected private key without providing password 
WITHOUT_CLASSIFICATION	 the proposal has already been committed 
WITHOUT_CLASSIFICATION	 sanitise start and end times 
WITHOUT_CLASSIFICATION	 expected 
WITHOUT_CLASSIFICATION	 two the servers observers and all ports different 
WITHOUT_CLASSIFICATION	 were here shouldnt the leader 
WITHOUT_CLASSIFICATION	 use single listener instance reduce 
WITHOUT_CLASSIFICATION	 want make sure implement the state machine correctly are participant once leader elected can move either leading following however are observer error elected leader 
WITHOUT_CLASSIFICATION	 try reconnecting with new session the data should persisted even though the session was not 
WITHOUT_CLASSIFICATION	 survives the exception thrown the first callback 
WITHOUT_CLASSIFICATION	 not the case for letterword 
WITHOUT_CLASSIFICATION	 clear all the connections 
WITHOUT_CLASSIFICATION	 giving grace period seconds 
WITHOUT_CLASSIFICATION	 make sure can instantiate key manager from the jks file disk 
WITHOUT_CLASSIFICATION	 and add back hosts and 
WITHOUT_CLASSIFICATION	 the watch contains the unchroot path 
WITHOUT_CLASSIFICATION	 now the follower knows that the session valid invalid lets try 
WITHOUT_CLASSIFICATION	 verify super with bad pass assertfails 
WITHOUT_CLASSIFICATION	 for global session dont know already expired 
WITHOUT_CLASSIFICATION	 nonincremental membership change 
WITHOUT_CLASSIFICATION	 setup redirect outerr streams get systeminerr use this judiciously get current err 
WITHOUT_CLASSIFICATION	 watches which require multiple setwatches calls 
WITHOUT_CLASSIFICATION	 configure socket blocking that dont have write tight while loop 
WITHOUT_CLASSIFICATION	 start peer and check goes leading state 
WITHOUT_CLASSIFICATION	 are simulating established leader the epoch 
WITHOUT_CLASSIFICATION	 leader will shutdown remaining followers will elect new leader 
WITHOUT_CLASSIFICATION	 delete the direct children first 
WITHOUT_CLASSIFICATION	 have read length bytes sock nonblocking 
WITHOUT_CLASSIFICATION	 add back server 
WITHOUT_CLASSIFICATION	 lets try look the current failed the middle creating the znode 
WITHOUT_CLASSIFICATION	 ignore this just means server not 
WITHOUT_CLASSIFICATION	 now wait until quorum supports the same leader 
WITHOUT_CLASSIFICATION	 building challenge request packet send 
WITHOUT_CLASSIFICATION	 sending nonexisting opcode should cause the server disconnect 
WITHOUT_CLASSIFICATION	 shutdown and start zookeeper again 
WITHOUT_CLASSIFICATION	 new server joining 
WITHOUT_CLASSIFICATION	 serverstart only throws exception lets least wrap identifiable subclass 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 mock processor used zookeeper server 
WITHOUT_CLASSIFICATION	 replace trusted keys with valid key that not trusted the server 
WITHOUT_CLASSIFICATION	 nothing for the root are not keeping quota the zookeeper root node for now 
WITHOUT_CLASSIFICATION	 set message color 
WITHOUT_CLASSIFICATION	 add all nonexcluded snapshot files the deletion list 
WITHOUT_CLASSIFICATION	 server this should fail since local sesion 
WITHOUT_CLASSIFICATION	 receives socket and max number attempts input 
WITHOUT_CLASSIFICATION	 change leaders leading port should renounce leadership 
WITHOUT_CLASSIFICATION	 nothing 
WITHOUT_CLASSIFICATION	 second add ackset waitfornewleaderack returns without exceptions 
WITHOUT_CLASSIFICATION	 inconsistency config node content during rolling restart 
WITHOUT_CLASSIFICATION	 cores sweet spot seems selector threads 
WITHOUT_CLASSIFICATION	 this the real assertion could another thread lock the datanode were currently writing 
WITHOUT_CLASSIFICATION	 that 
WITHOUT_CLASSIFICATION	 restore former value 
WITHOUT_CLASSIFICATION	 check that return code all request are correct 
WITHOUT_CLASSIFICATION	 allows the jvm shutdown even this thread still running 
WITHOUT_CLASSIFICATION	 standalone mode doenst need myid 
WITHOUT_CLASSIFICATION	 reopen the txnlog and snaplog rather just closereopen this object itself however that would have big impact outside zkdatabase there are other 
WITHOUT_CLASSIFICATION	 resolver called times because shouldnt cache the resolved addresses 
WITHOUT_CLASSIFICATION	 nonpriming packet defer until later leaving the queue until authentication completes 
WITHOUT_CLASSIFICATION	 check observer new config 
WITHOUT_CLASSIFICATION	 lets sort them explicitly though they seem come back order ususally 
WITHOUT_CLASSIFICATION	 initialization 
WITHOUT_CLASSIFICATION	 this the limit node get the parent and add the trie 
WITHOUT_CLASSIFICATION	 this server and not protocol version 
WITHOUT_CLASSIFICATION	 hard close immediately discarding buffers 
WITHOUT_CLASSIFICATION	 the initial message without the protocol version 
WITHOUT_CLASSIFICATION	 ignore well check instead whether its global session 
WITHOUT_CLASSIFICATION	 check this local session and are trying create ephemeral node which case upgrade the session 
WITHOUT_CLASSIFICATION	 this client section has the correct password but were not configured use were configured instead the above use the nonexistent myzookeeperclient section 
WITHOUT_CLASSIFICATION	 only happens during tests 
WITHOUT_CLASSIFICATION	 zookeeper session has large number watches set then attempting reestablish those watches after connection loss may fail due the setwatches request exceeding the servers configured jutemaxbuffer value avoid this instead split the watch reestablishement across multiple setwatches calls this constant controls the size each call set conservative with respect the servers default for jutemaxbuffer 
WITHOUT_CLASSIFICATION	 server using jaasauthenticated subject determine service principal name and hostname from servers subject 
WITHOUT_CLASSIFICATION	 hasnt beaten 
WITHOUT_CLASSIFICATION	 skip the offset latest skip point before starttime 
WITHOUT_CLASSIFICATION	 point server testdir 
WITHOUT_CLASSIFICATION	 make sure that empty password and null password are treated the same 
WITHOUT_CLASSIFICATION	 create ephemeral sequential node 
WITHOUT_CLASSIFICATION	 make all snapshots empty 
WITHOUT_CLASSIFICATION	 keep queue requests requests get submitted they are stored here the queue drained the run method 
WITHOUT_CLASSIFICATION	 some the operations will executed client connected the removed server while others are invoked client connected some other server when were removing the leader will the client connected 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 nonjavadoc see javalangstring javalangstring 
WITHOUT_CLASSIFICATION	 windows renameto does not replace 
WITHOUT_CLASSIFICATION	 this request for local session and create ephemeral node then upgrade the session and return new session request for the leader this called the request processor thread either follower observer request processor which unique learner will not called concurrently two threads 
WITHOUT_CLASSIFICATION	 from txnlog 
WITHOUT_CLASSIFICATION	 warn but generally this 
WITHOUT_CLASSIFICATION	 start the prepared thread that writing znodes while the follower restarting the first restart the follow should use txnlog catchup for subsequent restart the follower should use diff catchup 
WITHOUT_CLASSIFICATION	 take the last server which were connected 
WITHOUT_CLASSIFICATION	 convert milliseconds 
WITHOUT_CLASSIFICATION	 therefore authentication the earliest stage being progress 
WITHOUT_CLASSIFICATION	 wait for the process finish and check the exit code 
WITHOUT_CLASSIFICATION	 building notification packet send 
WITHOUT_CLASSIFICATION	 lower epoch must return false 
WITHOUT_CLASSIFICATION	 need truncate the log the lastzxid the leader 
WITHOUT_CLASSIFICATION	 send diff and fall through zxid newepoch 
WITHOUT_CLASSIFICATION	 next two steps related sequential processing verify that empty child name assertfails not sequential 
WITHOUT_CLASSIFICATION	 test view does not contain nonexistant servers 
WITHOUT_CLASSIFICATION	 break the quorum 
WITHOUT_CLASSIFICATION	 getting called 
WITHOUT_CLASSIFICATION	 quora keeps the supporters given leader first update with the vote this peer 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting 
WITHOUT_CLASSIFICATION	 register with jmx 
WITHOUT_CLASSIFICATION	 test fails still cant connect the quorum after seconds 
WITHOUT_CLASSIFICATION	 per rfc section certificates can use bytes bits for serial numbers 
WITHOUT_CLASSIFICATION	 building notification packet send this called directly only tests 
WITHOUT_CLASSIFICATION	 normalize ipv dns name 
WITHOUT_CLASSIFICATION	 add childremove child and then call getchildren 
WITHOUT_CLASSIFICATION	 first add the elem the new expiry time bucket expirymap 
WITHOUT_CLASSIFICATION	 its possible our session expired but this shows 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 reconfigure 
WITHOUT_CLASSIFICATION	 qcm nonnull may call qcmconnectone which will take the lock qcm and then take qvlock take the locks the same order ensure that dont deadlock against other callers connectone qcmref gets set another thread while were inside the synchronized block that does harm didnt take lock qcm because was null when sampled wont call connectone use atomicreference enough guarantee visibility updates that provably happen another thread before entering this method 
WITHOUT_CLASSIFICATION	 sessionmap used closesession 
WITHOUT_CLASSIFICATION	 any arbitrary constant will 
WITHOUT_CLASSIFICATION	 for zookeeper verify that peer joining established cluster does not leading state 
WITHOUT_CLASSIFICATION	 startup its possible that well try calling addusage not the cache this safe ignore itll added later when traverse the tranlog see discussion here this test makes sure that dont add the the cache this case that would result dupes later and consequently incorrect counts and entries that will never cleaned out 
WITHOUT_CLASSIFICATION	 setting back 
WITHOUT_CLASSIFICATION	 should always the case 
WITHOUT_CLASSIFICATION	 flag that indicate use alwaysontop not 
WITHOUT_CLASSIFICATION	 corrupt the logfile 
WITHOUT_CLASSIFICATION	 creating ephemeral with wrong option 
WITHOUT_CLASSIFICATION	 set watch 
WITHOUT_CLASSIFICATION	 reduce the set candidates those that acknowledged 
WITHOUT_CLASSIFICATION	 remember this server can add back later 
WITHOUT_CLASSIFICATION	 simulate bit network latency 
WITHOUT_CLASSIFICATION	 nonjavadoc see javalangstring 
WITHOUT_CLASSIFICATION	 write only bytes the message wait bit then write the rest this makes sure that writes smaller than bytes dont break the plaintext mode the server once decides that the input doesnt look like tls handshake 
WITHOUT_CLASSIFICATION	 call reconfig api when the new server has received 
WITHOUT_CLASSIFICATION	 send watches packet server connection 
WITHOUT_CLASSIFICATION	 have get least majority servers sync with this waiting for the newleader packet get acknowledged 
WITHOUT_CLASSIFICATION	 looking looking 
WITHOUT_CLASSIFICATION	 shutdown sequence guarantee that all pending requests 
WITHOUT_CLASSIFICATION	 wait hit data tree 
WITHOUT_CLASSIFICATION	 mimic sessionid generated followers local session tracker 
WITHOUT_CLASSIFICATION	 validate lower limit 
WITHOUT_CLASSIFICATION	 sets lastindex resets reconfigmode 
WITHOUT_CLASSIFICATION	 remove host number the last one list hosts 
WITHOUT_CLASSIFICATION	 format and print the output the command 
WITHOUT_CLASSIFICATION	 peer miss the txnlog 
WITHOUT_CLASSIFICATION	 skip the xid 
WITHOUT_CLASSIFICATION	 peer zxid txnlog range 
WITHOUT_CLASSIFICATION	 setup the logger capture all logs 
WITHOUT_CLASSIFICATION	 get expected exception 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 now start the third server that new config has quorum 
WITHOUT_CLASSIFICATION	 check format 
WITHOUT_CLASSIFICATION	 setting the value 
WITHOUT_CLASSIFICATION	 message too long 
WITHOUT_CLASSIFICATION	 rather than fight let root have alias 
WITHOUT_CLASSIFICATION	 todo only show add selected node isnt being watched and only show remove selected node being watched 
WITHOUT_CLASSIFICATION	 since preallocate define eof empty transaction 
WITHOUT_CLASSIFICATION	 now shutdown the server and restart 
WITHOUT_CLASSIFICATION	 are not going take the snapshot sure the transactions are not applied memory 
WITHOUT_CLASSIFICATION	 keep these two lines together keep the initialization order explicit 
WITHOUT_CLASSIFICATION	 check see the leader zxid lower than ours this should never happen but just safety check 
WITHOUT_CLASSIFICATION	 ignore silently 
WITHOUT_CLASSIFICATION	 resolution occurred 
WITHOUT_CLASSIFICATION	 failed when flushing try close not leak 
WITHOUT_CLASSIFICATION	 tests that quorum new config synced with the leader and reconfig allowed start but then the new quorum lost the leader will time out and leader election 
WITHOUT_CLASSIFICATION	 send diff and forward any packet starting 
WITHOUT_CLASSIFICATION	 this server looking then send proposed leader 
WITHOUT_CLASSIFICATION	 want track the change with callback rather than depending timing 
WITHOUT_CLASSIFICATION	 serverconfig should either hostportport hostportporttype 
WITHOUT_CLASSIFICATION	 node started last kicks off leader election 
WITHOUT_CLASSIFICATION	 ignore this may local session from other servers 
WITHOUT_CLASSIFICATION	 lets remove someone whos not the leader 
WITHOUT_CLASSIFICATION	 get the new configuration from the request 
WITHOUT_CLASSIFICATION	 zookeeper dont execute its not enabled 
WITHOUT_CLASSIFICATION	 set ssl system properties and port unification begin restarting servers 
WITHOUT_CLASSIFICATION	 now parse 
WITHOUT_CLASSIFICATION	 exponential backoff 
WITHOUT_CLASSIFICATION	 and the leader will complete 
WITHOUT_CLASSIFICATION	 nthreads 
WITHOUT_CLASSIFICATION	 setting the quorum has transaction overhead for creating and closing the session 
WITHOUT_CLASSIFICATION	 prep the request and convert txn 
WITHOUT_CLASSIFICATION	 test getexists with two sets watchers 
WITHOUT_CLASSIFICATION	 nonjavadoc 
WITHOUT_CLASSIFICATION	 once weve figured out where are were done 
WITHOUT_CLASSIFICATION	 lets see one successful operation 
WITHOUT_CLASSIFICATION	 try reestablish the quorum 
WITHOUT_CLASSIFICATION	 same for element should refactor this 
WITHOUT_CLASSIFICATION	 make sure zkclient works 
WITHOUT_CLASSIFICATION	 start server with new config 
WITHOUT_CLASSIFICATION	 none not ready yet sets saslstate complete sideeffect 
WITHOUT_CLASSIFICATION	 instead starting rozk immediately wait some grace period before decide were partitioned thread used here because otherwise would require changes each election strategy classes which 
WITHOUT_CLASSIFICATION	 this should never happen 
WITHOUT_CLASSIFICATION	 logwarnack cxid requestcxid type requesttype requestsessionid requestaddrqrecprop 
WITHOUT_CLASSIFICATION	 this method can return empty iterator the requested zxid 
WITHOUT_CLASSIFICATION	 log error level are returning marshalling error the user 
WITHOUT_CLASSIFICATION	 have read data from the file and matchs the timep pattern 
WITHOUT_CLASSIFICATION	 change nothing update 
WITHOUT_CLASSIFICATION	 make sure atomically check local session status upgrade session and make the session creation request this avoid another thread upgrading the session parallel 
WITHOUT_CLASSIFICATION	 for each leader offer find out where fit were first become the leader were not elected the leader attempt stat the offer just less than they exist watch for their failure but they dont become the leader 
WITHOUT_CLASSIFICATION	 zookeeper provides escape hatch for users upgrading from old versions zookeeper pre 
WITHOUT_CLASSIFICATION	 the follower acceptor thread 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 now kill one the other real servers 
WITHOUT_CLASSIFICATION	 servers with authentication interfaces configured 
WITHOUT_CLASSIFICATION	 resets flag 
WITHOUT_CLASSIFICATION	 note mode unknown plaintext 
WITHOUT_CLASSIFICATION	 disable throttling and resume acceptance new requests this entailed state change register interest update request with 
WITHOUT_CLASSIFICATION	 and add back follower 
WITHOUT_CLASSIFICATION	 create file logger url from the command line args 
WITHOUT_CLASSIFICATION	 check delete 
WITHOUT_CLASSIFICATION	 leader 
WITHOUT_CLASSIFICATION	 input may delimited either commas newlines convert common newline separated format 
WITHOUT_CLASSIFICATION	 return number session expiry calls 
WITHOUT_CLASSIFICATION	 touch table for the global sessions 
WITHOUT_CLASSIFICATION	 watcher 
WITHOUT_CLASSIFICATION	 init quorum auth server learner 
WITHOUT_CLASSIFICATION	 verify bad pass assertfails 
WITHOUT_CLASSIFICATION	 verifying that other path child watches are not affected 
WITHOUT_CLASSIFICATION	 start peers and verify they form the cluster 
WITHOUT_CLASSIFICATION	 this server should fail join the quorum not using ssl 
WITHOUT_CLASSIFICATION	 check the path exists cannot create quota for path that already exists zookeeper 
WITHOUT_CLASSIFICATION	 matching option specified remove the watches the given node choosing watchertypeany 
WITHOUT_CLASSIFICATION	 version added 
WITHOUT_CLASSIFICATION	 want loop through the list twice 
WITHOUT_CLASSIFICATION	 create transaction and snapshot files differentdifferent 
WITHOUT_CLASSIFICATION	 set watch the root node 
WITHOUT_CLASSIFICATION	 the selector 
WITHOUT_CLASSIFICATION	 note according the socket javadocs settrafficclass may ignored socket implementations dont check that the value set returned 
WITHOUT_CLASSIFICATION	 execute from commandmap 
WITHOUT_CLASSIFICATION	 sub process used execute the command 
WITHOUT_CLASSIFICATION	 now participant asks for epoch mocking learnerhandler behavior second add connectingfollowers triggers true 
WITHOUT_CLASSIFICATION	 that the switched off servers are down 
WITHOUT_CLASSIFICATION	 logwarndesignated leader designatedleader 
WITHOUT_CLASSIFICATION	 creates leader election notification message 
WITHOUT_CLASSIFICATION	 want send our version the request 
WITHOUT_CLASSIFICATION	 this should enough time for the first session expire and for the closesession request propagate other machines there bug since time sensitive have false negative when test 
WITHOUT_CLASSIFICATION	 here start populating the server and shutdown the follower after 
WITHOUT_CLASSIFICATION	 clear our internal buffer 
WITHOUT_CLASSIFICATION	 access ipmap any set contained the map needs protected with synchronized ipmap 
WITHOUT_CLASSIFICATION	 choose current server according the client rebalancing algorithm 
WITHOUT_CLASSIFICATION	 createclose session dont require request record 
WITHOUT_CLASSIFICATION	 start one lethread for each peer want run 
WITHOUT_CLASSIFICATION	 grab some memory that easier cause 
WITHOUT_CLASSIFICATION	 doing delete 
WITHOUT_CLASSIFICATION	 ensure got connected 
WITHOUT_CLASSIFICATION	 use synchronizedthis access 
WITHOUT_CLASSIFICATION	 defaults servercnxnfactory would instantiated with 
WITHOUT_CLASSIFICATION	 make sure there leader 
WITHOUT_CLASSIFICATION	 now create the direct children 
WITHOUT_CLASSIFICATION	 add back servers and while still reconfigmode didnt call 
WITHOUT_CLASSIFICATION	 create zookeeper and connect 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 only import nodeviewers 
WITHOUT_CLASSIFICATION	 challenge counter avoid replay attacks 
WITHOUT_CLASSIFICATION	 check that the node path removed from ptrie 
WITHOUT_CLASSIFICATION	 including the header and the last bytes the snapshot should least bytes 
WITHOUT_CLASSIFICATION	 not 
WITHOUT_CLASSIFICATION	 number entries skipped get the end the iterator less the number skipped get the start 
WITHOUT_CLASSIFICATION	 save the return error code the server 
WITHOUT_CLASSIFICATION	 change the change this minutes 
WITHOUT_CLASSIFICATION	 authenticate learner 
WITHOUT_CLASSIFICATION	 the test method threw exception but might expected exception defined the test annotation check the annotation and log appropriate message 
WITHOUT_CLASSIFICATION	 register interest update request with the selector 
WITHOUT_CLASSIFICATION	 this must global request 
WITHOUT_CLASSIFICATION	 here create znodes 
WITHOUT_CLASSIFICATION	 the change should happen now 
WITHOUT_CLASSIFICATION	 request processors 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 create and register the top level logj mbean 
WITHOUT_CLASSIFICATION	 test basic create and getdata 
WITHOUT_CLASSIFICATION	 entries jaasconf theres configuration exception fetching the jaas section and the user has required sasl specifying logincontextnamekey jaas file 
WITHOUT_CLASSIFICATION	 dont waste memory there are few watches node rehash when the entry added doubling size thereafter seems like good compromise 
WITHOUT_CLASSIFICATION	 creating sequential nodes stored properly 
WITHOUT_CLASSIFICATION	 servers and then bounce the other servers one one 
WITHOUT_CLASSIFICATION	 than peer zxid 
WITHOUT_CLASSIFICATION	 check that when server starts from old style config should keep the client 
WITHOUT_CLASSIFICATION	 send the same messages this time should not make the leader 
WITHOUT_CLASSIFICATION	 start additional new servers 
WITHOUT_CLASSIFICATION	 pretend each connect attempt takes milliseconds 
WITHOUT_CLASSIFICATION	 servers and should able work independently 
WITHOUT_CLASSIFICATION	 weve sent the whole buffer drop the buffer 
WITHOUT_CLASSIFICATION	 start new connection doesnt have one already 
WITHOUT_CLASSIFICATION	 watcher 
WITHOUT_CLASSIFICATION	 send the connection request client 
WITHOUT_CLASSIFICATION	 this value will used directly link codesessionmoved public static final int sessionmoved 
WITHOUT_CLASSIFICATION	 nonjavadoc see 
WITHOUT_CLASSIFICATION	 this just packet from old client which doesnt contain readonly field 
WITHOUT_CLASSIFICATION	 number machines increased server the new cluster here whether move not depends the difference cluster sizes with probability oldnew the client disconnects 
WITHOUT_CLASSIFICATION	 this case the hostname equals literal address 
WITHOUT_CLASSIFICATION	 queuedbuffer has reached its component limit combine the existing components 
WITHOUT_CLASSIFICATION	 check being waken closing 
WITHOUT_CLASSIFICATION	 abort hit the limit 
WITHOUT_CLASSIFICATION	 start mock server 
WITHOUT_CLASSIFICATION	 start server again with intact database 
WITHOUT_CLASSIFICATION	 this shouldnt break anything 
WITHOUT_CLASSIFICATION	 resolve hostname for this server case the underlying address has changed 
WITHOUT_CLASSIFICATION	 lets remove the leader and some other server 
WITHOUT_CLASSIFICATION	 throw error there were any leaked buffers 
WITHOUT_CLASSIFICATION	 delete till you can find node with more than one child 
WITHOUT_CLASSIFICATION	 shutdown leader quorum should still exist 
WITHOUT_CLASSIFICATION	 nonjavadoc javautillist 
WITHOUT_CLASSIFICATION	 election instance 
WITHOUT_CLASSIFICATION	 tgt not bother with ticket management 
WITHOUT_CLASSIFICATION	 each watcher will process the event 
WITHOUT_CLASSIFICATION	 restart the previous leader force replay the edits and possibly come bad state 
WITHOUT_CLASSIFICATION	 shutdown followers that leader does not have majority and goes 
WITHOUT_CLASSIFICATION	 make sure they joined the new config without any change 
WITHOUT_CLASSIFICATION	 where the packet actually sent 
WITHOUT_CLASSIFICATION	 write message 
WITHOUT_CLASSIFICATION	 get each logger from the logj repository and add the hierarchy mbean created above 
WITHOUT_CLASSIFICATION	 send snap 
WITHOUT_CLASSIFICATION	 different larger version dynamic file 
WITHOUT_CLASSIFICATION	 start the server automatically create the necessary directories and capture the directory where data stored 
WITHOUT_CLASSIFICATION	 look for the clients finish their create operations 
WITHOUT_CLASSIFICATION	 default constructor 
WITHOUT_CLASSIFICATION	 later 
WITHOUT_CLASSIFICATION	 startforwarding will called all cases 
WITHOUT_CLASSIFICATION	 send ping request either time due packet sent out within maxsendpinginterval 
WITHOUT_CLASSIFICATION	 some the operations will executed client connected the removed server while others are invoked client connected some other server when were removing the leader will the client connected removed server 
WITHOUT_CLASSIFICATION	 again the user explicitly set something saslrelated they probably expected sasl succeed 
WITHOUT_CLASSIFICATION	 content preserved 
WITHOUT_CLASSIFICATION	 
WITHOUT_CLASSIFICATION	 check avoid startup follows shutdown 
WITHOUT_CLASSIFICATION	 sleep for millisecond and then again check 
WITHOUT_CLASSIFICATION	 check the existence name bean 
WITHOUT_CLASSIFICATION	 when local session upgrading disabled leader will reject the ephemeral node creation due session expire however this the follower that issue the request will have the correct error code should use that and report user 
WITHOUT_CLASSIFICATION	 only called callback from 
WITHOUT_CLASSIFICATION	 the test failes will most likely fail with noauth exception before ever gets this assertion 
WITHOUT_CLASSIFICATION	 loop through the args must keyvalue sequence 
WITHOUT_CLASSIFICATION	 falls back filename detection property value 
WITHOUT_CLASSIFICATION	 start the followers form new quorum 
WITHOUT_CLASSIFICATION	 number machines became smaller server not the new cluster 
WITHOUT_CLASSIFICATION	 the node value same what have leader 
WITHOUT_CLASSIFICATION	 check that the static config was split into static and dynamic files correctly 
WITHOUT_CLASSIFICATION	 nonjavadoc see eventeventtype javalangstring 
WITHOUT_CLASSIFICATION	 signal for graceful shutdown 
WITHOUT_CLASSIFICATION	 proceed the next processor 
WITHOUT_CLASSIFICATION	 cleanup 
WITHOUT_CLASSIFICATION	 halt one the listeners and verify count 
WITHOUT_CLASSIFICATION	 throttle when there are too many concurrent snapshots being sent observers 
WITHOUT_CLASSIFICATION	 should only happen during upgrade 
WITHOUT_CLASSIFICATION	 check for any parent that has been quota 
WITHOUT_CLASSIFICATION	 take one the new servers possible there are still such servers didnt try and either the probability tells connect one the new servers already tried all the old servers 
WITHOUT_CLASSIFICATION	 wont race another upgrade attempt because only one thread will get the timeout from the map 
WITHOUT_CLASSIFICATION	 findbugs complains about get after put long term strategy would use computeifabsent after jdk 
WITHOUT_CLASSIFICATION	 jaasconf entry available 
WITHOUT_CLASSIFICATION	 create the node with another session 
WITHOUT_CLASSIFICATION	 the node doesnt exist anymore skip 
WITHOUT_CLASSIFICATION	 sid 
WITHOUT_CLASSIFICATION	 the first allowable character 
WITHOUT_CLASSIFICATION	 during first and second iteration leavingindex will correspond follower during third and fouth iteration leavingindex will the index 
WITHOUT_CLASSIFICATION	 the socket times out count that assertfailed 
WITHOUT_CLASSIFICATION	 make sure can handle any type correct wrapper 
WITHOUT_CLASSIFICATION	 the direcotry containing the 
WITHOUT_CLASSIFICATION	 sets authorization flag 
WITHOUT_CLASSIFICATION	 setup database with single foo node 
WITHOUT_CLASSIFICATION	 sun doesnt include the address that causes this exception thrown wrap the exception order capture this critical detail 
WITHOUT_CLASSIFICATION	 check that storage space return some value 
WITHOUT_CLASSIFICATION	 log that precedes first retained snapshot also retained 
