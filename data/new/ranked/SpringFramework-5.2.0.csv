1, Line, //  This is somewhat tricky... We have to process introductions first,   but we need to preserve order in the ultimate list. 
1, Line, //  1 will make it throw a RuntimeException - SpEL will let this through 
1, Line, //  simply must not bail; we don't want non-existent resources to result in an Exception 
1, Line, //  for now just make a new array; TODO: optimize 
1, Line, //  Read-write transaction -> flush the Hibernate Session.   Further check: only flush when not FlushMode.MANUAL. 
1, Line, //  some case would not have been really necessary, but we can't know this at this point). 
1, Line, //  this test is a bit fragile, but gets the job done, proving that an   attempt was made to look up the AJ aspect. It's due to classpath issues   in .integration-tests that it's not found.
1, Line, //  Instantiation failure, maybe too early... 
1, JavaDoc, /* 	 * Eat an identifier, possibly qualified (meaning that it is dotted).	 * TODO AndyC Could create complete identifiers (a.b.c) here rather than a sequence of them? (a, b, c)	  */
1, Line, //  TODO: broken comparison since Mockito 2.2 upgrade   verifyIdenticalInvocations(expectedLexicalHandler, actualLexicalHandler); 
1, Line, //  TODO don't lose generic info for the new map 
1, Line, //  we have work todo... 
1, Line, //  TODO Determine why setExceptionToRaise() is unused. 
1, Line, //  We don't trust the JMS provider: It might throw RuntimeException or Error. 
1, Line, //  TODO Future optimization - if followed by a static method call, skip generating code here 
1, Line, //  TODO: Optimization: Process only if this() specifies a type and not an identifier. 
1, Line, // FIXME revisit in case of reentrant sync deadlock
1, Line, //  It has already caused a field error with a rejected value. 
1, Line, //  TODO - only handles 2-dimensional arrays 
1, Line, //  TODO: Make me final when deprecated methods are removed 
1, Line, //  TODO [SPR-13537] Change equalTo(null) to equalTo(""). 
1, Line, //  TODO: error? 
1, Line, //  Resolve plain BeanDefinition, without contained name: use dummy name. 
1, Line, //  TODO May fail on either call: may want to tighten up definition 
1, JavaDoc, /* 	 * SPR-6038: detect HSQL and stop illegal locks being taken.	 * TODO: Against Quartz 2.2, this test's job doesn't actually execute anymore...	  */
1, Line, //  If they were numbers, were they compatible? 
1, Line, //  TODO following lines are a workaround for Hibernate bug   If Hibernate throws an exception due to flush(),   it actually HAS flushed, meaning that the database   was updated outside the transaction
1, Line, //  TODO verify remaining output for forms 5, 6, 7, 8, and 14 (fix whitespace)
1, Line, //  TODO should be able to make this assertion: need to fix target handling   in AdvisedSupport  assertEquals(target2, ((Advised) proxied).getTarget()); 
1, Line, //  TODO: shouldn't the wildcard lower the score?  		assertEquals(-1,  				comparator.compare(parse("/hotels/new"), parse("/hotels/new.*"))); 
1, Line, //  TODO this will currently map, would be nice for optimization  assertTrue(ajexp.matches(HasGeneric.class));  assertFalse(ajexp.matches(TestBean.class)); 
1, Line, //  Plain PersistenceException wrapper for underlying exception?   Make sure the nested exception message is properly exposed,   along the lines of Spring's NestedRuntimeException.getMessage() 
1, Line, //  Open frame not sent yet?   If in the session initialization thread, then cache, otherwise wait. 
1, Line, //  TODO: remove reflection when build requires JDK 9+ 
1, Line, //  TODO: optimize 
1, Line, //  TODO better exception handling 
1, Line, //  TODO: change to ByteBufferFeeder when supported by Jackson   See https://github.com/FasterXML/jackson-core/issues/478
1, Line, //  Remove corresponding bean from singleton cache, if any. Shouldn't usually   be necessary, rather just meant for overriding a context's default beans 
1, Line, //  It would be nice to partially match a path and get any bound variables in one step 
1, Line, //  TODO -- this fails with NPE due to ArrayToObject converter - discuss with Andy  setValueExpectError("arrayContainer.doubles[1]", new ArrayList<String>());  setValueExpectError("arrayContainer.shorts[1]", new ArrayList<String>()); 
1, Line, //  TODO: make sure Callback is null 
1, Line, //  TODO if you change type pattern from org.springframework.beans..*   to org.springframework..* it also matches introduction.   Perhaps generated advisor bean definition could be made to depend   on the introduction, in which case this would not be a problem.
1, Line, //  JSR-330 API not available - Provider interface simply not supported then. 
1, Line, //  TODO document this behaviour. 
1, Line, //  We can optimize this because it's all new:   There is no replacement of existing property values. 
1, Line, //  one error (should not include delimiter) 
1, Line, // bad method (too many args, doesn't obey class contract) 
1, Line, //  TODO replace this check: no longer possible  assertEquals(advised.getTarget(), this); 
1, Line, //  TODO this seems rather bogus, should we eagerly show an error? 
1, Line, //  TODO is this caching safe - passing the expression around will mean this executor is also being passed around 
1, Line, //  TODO possible optimization here if we cache the discovered type reference, but can we do that? 
1, Line, // FIXME inline? 
1, Line, //  TODO revisit performance if doing a lot of case insensitive matching
1, Line, //  TODO might want to control this behaviour...   Do we really want to call remove after a remote exception? 
1, Line, //  TODO support multidimensional arrays   TODO support correct syntax for multidimensional [][][] and not [,,,]
1, Line, //  TODO used to catch UnknownAdviceTypeException, but   with CGLIB some errors are in proxy creation and are wrapped   in aspect exception. Error message is still fine.  assertTrue(ex.getMessage().indexOf("ntroduction") > -1);
1, Line, //  TODO: returns just 1 as of AspectJ 1.9 beta 3, not detecting the applicable lambda expression anymore   assertEquals(2, ctx.getBean(CountingAspect.class).count); 
1, Line, //  TODO: fix Reactor support 
1, Line, //  TODO this looks like a serious issue (but not a new one): the context object against which arguments are evaluated seems wrong:  		evaluate("{a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8,i:9,j:10}.?[isEven(value) == 'y']", "[2, 4, 6, 8, 10]", ArrayList.class); 
1, Line, //  TODO: Why does this test fail? It hasn't been run before, so it maybe never actually passed... 
1, Line, //  TODO: what does this mean? This method is not used in SpEL so probably ignorable? 
1, Line, //  slight hack for Linux/Unix systems 
1, Line, //  TODO fails due to conversionservice handling of String[] to Object...  	expression = parser.parseExpression("#append2(#stringArray)"); 
1, Line, //  TODO Determine why connectWithError() is unused. 
1, Line, //  We don't trust the JDBC driver: It might throw RuntimeException or Error. 
1, Line, //  TODO Enable TestNG test with timeout once we have a solution.
1, Line, //  not implemented 
1, Line, //  TODO: Reactor usually times out on Windows ...
1, Line, //  TODO: It's just an adapter but returning 0 might still have side effects... 
1, Line, //  Bean Validation 2.0: currently not implemented here since it would imply   a hard dependency on the new javax.validation.ClockProvider interface.   To be resolved once Spring Framework requires Bean Validation 2.0+.   Obtain the native ValidatorFactory through unwrap(ValidatorFactory.class)   instead which will fully support a getClockProvider() call as well. 
1, Line, //  TODO could do with more refactoring around argument handling and varargs 
1, Block, /* 	 * Further TODO for compilation:	 *	 * - OpMinus with a single literal operand could be treated as a negative literal. Will save a	 *   pointless loading of 0 and then a subtract instruction in code gen.	 * - allow other accessors/resolvers to participate in compilation and create their own code	 * - A TypeReference followed by (what ends up as) a static method invocation can really skip	 *   code gen for the TypeReference since once that is used to locate the method it is not	 *   used again.	 * - The opEq implementation is quite basic. It will compare numbers of the same type (allowing	 *   them to be their boxed or unboxed variants) or compare object references. It does not	 *   compile expressions where numbers are of different types or when objects implement	 *   Comparable.     *	 * Compiled nodes:	 *	 * TypeReference	 * OperatorInstanceOf	 * StringLiteral	 * NullLiteral	 * RealLiteral	 * IntLiteral	 * LongLiteral	 * BooleanLiteral	 * FloatLiteral	 * OpOr	 * OpAnd	 * OperatorNot	 * Ternary	 * Elvis	 * VariableReference	 * OpLt	 * OpLe	 * OpGt	 * OpGe	 * OpEq	 * OpNe	 * OpPlus	 * OpMinus	 * OpMultiply	 * OpDivide	 * MethodReference	 * PropertyOrFieldReference	 * Indexer	 * CompoundExpression	 * ConstructorReference	 * FunctionReference	 * InlineList	 * OpModulus	 *	 * Not yet compiled (some may never need to be):	 * Assign	 * BeanReference	 * Identifier	 * OpDec	 * OpBetween	 * OpMatches	 * OpPower	 * OpInc	 * Projection	 * QualifiedId	 * Selection	  */
1, Line, //  TODO currently failing as with new ObjectToArray converter closest constructor 
1, Line, //  TODO: small memory optimization here (can skip creation for methods with no advice) 
1, Line, //  TODO: publisherToMono/CompletableFuture vs Single (ISE on multiple elements)? 
1, Line, //  TODO currently failing since setValue does a getValue and "Wien" string != PlaceOfBirth - check with andy 
1, Line, //  TODO Is the resolver/executor model too pervasive in this package? 
1, Line, //  TODO: refactor in AbstractBeanFactory (tests for AbstractBeanFactory) 
1, Line, //  No implementation, just an addition of the tag interface StatefulJob   in order to allow stateful method invoking jobs. 
1, Line, //  The target does not implement the hashCode() method itself. 
1, Line, //  TODO possible optimization - only regex match if rest of pattern matches?   Benefit likely to vary pattern to pattern 
1, Line, //  Not implemented 
1, Line, //  The above result is likely to be incomplete, i.e. only containing file system references.   We need to have pointers to each of the jar files on the classpath as well... 
1, Line, //  TODO need to make this conditionally occur based on a debug flag 
1, Line, //  TODO: maybe try and detect this as a special case in parser? 
1, Line, //  TODO what is the end position for a method reference? the name or the last arg? 
1, Line, //  This method may throw any BeansException, which won't be caught   here, if there is a critical failure such as no matching field.   We can attempt to deal only with less serious exceptions. 
1, Line, //  TODO Do we need special handling when patterns contain multiple dots? 
1, Line, //  ---- workaround ----
1, Line, //  TODO correct end position?
1, Line, //  TODO: Consider optimization by caching the list of the aspect names 
1, JavaDoc, /* 	 * Tomcat: ClientAbortException or EOFException	 * Jetty: EofException	 * WildFly, GlassFish: java.io.IOException "Broken pipe" (already covered)	 * <p>TODO:	 * This definition is currently duplicated between HttpWebHandlerAdapter	 * and AbstractSockJsSession. It is a candidate for a common utility class.	 * @see #indicatesDisconnectedClient(Throwable)	  */
1, JavaDoc, /*  * Tests for pooling invoker interceptor. * TODO: need to make these tests stronger: it's hard to * make too many assumptions about a pool. * * @author Rod Johnson * @author Rob Harrop * @author Chris Beams * @author Stephane Nicoll  */
1, Line, //  This is a hack to be able to get the generated key from a database that doesn't support   get generated keys feature. HSQL is one, PostgreSQL is another. Postgres uses a RETURNING   clause while HSQL uses a second query that has to be executed with the same connection. 
1, Line, //  TODO Fails related to conversion service converting a String[] to satisfy Object...  		expression = parser.parseExpression("sixteen(stringArray)");  		assertCantCompile(expression);  		expression.getValue(tc);  		assertEquals("aaabbbccc", tc.s);  		assertCanCompile(expression);  		tc.reset();  		expression.getValue(tc);  		assertEquals("aaabbbccc", tc.s);  		tc.reset();
1, Line, //  Can't clearly figure out exact method due to type converting / autowiring! 
1, Line, //  Workaround  caching issue... 
1, Line, //  JCA WorkManager resolved lazily - may not be available. 
1, Line, //  TODO unable to build correct type descriptor 
0, Line, //  it should behave like ours 
0, Line, //  Check it contains all 
0, Line, //  int 
0, Line, //  for this to work, an actual WebJar must be on the test classpath 
0, Line, //  Skip over any content from the start of the comment to the EOL 
0, Line, //  Should not happen...
0, Line, //  BeanFactory interface not registered as resolvable type in a plain factory. 
0, Line, //  Create EntityManagerFactory directly through PersistenceProvider. 
0, Line, //  Probably a proxy interfering with target type match -> throw meaningful exception. 
0, Line, //  Will do JNDI lookup to get home but won't call create   Could actually try to figure out interface from create?
0, Line, //  TODO: could call the conversion service to convert the value to a String
0, Line, //  Should not happen.. 
0, Line, //  Register the JPA EntityManager's JDBC Connection for the DataSource, if set. 
0, Line, // 	assertTrue(((SpelNodeImpl)((SpelExpression) expression).getAST()).isCompilable());  	assertCanCompile(expression); 
0, Line, //  Second request: same session 
0, Line, //  SPR-12170 
0, Line, //  expire immediately so we can check expiration started 
0, Line, //  Implementation of DeferredResultProcessingInterceptor methods 
0, Line, //  Any other reactive type, typically a Flux 
0, Line, //  Parse num_element_value_pairs and element_value_pairs and visit these values. 
0, Line, //  Get and invoke the scheduled timeout task 
0, Line, //  Standard JCA 1.5 "acknowledgeMode" apparently not supported (e.g. WebSphere MQ 6.0.2.1) 
0, Line, //  no built in support for this: 
0, Line, //  Remove exposed nestedPath value. 
0, Line, //  Check nested map in list 
0, Line, //  original value is not a Big* number - use standard long conversion 
0, Line, //  Access long array 
0, Line, //  First, check factory method return type, if applicable 
0, Line, //  Ignore when no TransformerFactory implementation is available 
0, Line, // -------------------------------------------------------------------------   Helper methods used by the operations above  ------------------------------------------------------------------------- 
0, Line, //  Swap it back 
0, Line, //  SPR-9079 
0, Line, //  Note: the ordering of the initializers is intentionally: two, one. 
0, Line, //  The new helper class here uses an upper bound on the generic 
0, Line, //  should start since it's a dependency of an auto-started bean 
0, Line, //  Check out of bounds 
0, Line, //  If there are no listeners to inherit, we might need to merge the   locally declared listeners with the defaults. 
0, Line, //  Absolutely needs thread-bound Executor to initialize. 
0, Line, //  Already filtered 
0, Line, //  Make ThemeSource aware of parent ThemeSource. 
0, Line, //  Subtraction 
0, Line, //  Ignore - no need to check resolvable type for manually registered singleton 
0, Line, //  Create local SchedulerFactory instance (typically a StdSchedulerFactory) 
0, Line, //  Get the value from the tag body 
0, Line, //  SPR 17210 
0, Line, //  At this point, we got a new result to process 
0, Line, //  check original locale 
0, Line, //  Visit the runtime invisible instruction annotations, if any. 
0, Line, //  no init-param set  sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml"); 
0, Line, //  before construction 
0, Line, //  NOTE we are using mock references so we don't need to worry about GC 
0, Line, //  Instead of postHandle and afterCompletion 
0, Line, //  Delegate to WebContentGenerator for checking and preparing. 
0, Line, //  inline list creation 
0, Line, //  get the bean again 
0, Line, //  check new theme namelocale 
0, Line, //  the advice declared last has higher precedence 
0, Line, //  1. First item received   2. writeFunction applied and writeCompletionBarrier subscribed to it   3. Write Publisher fails right after that and before request(n) from server 
0, Line, //  Determine JmsListenerEndpointRegistry bean from the BeanFactory 
0, Line, //  Possible values for the KIND field of an abstract type. 
0, Line, //  Avoid creation of target Connection on pre-close cleanup (e.g. Hibernate Session) 
0, Line, //  Efficiently check whether bean definition exists in this factory. 
0, Line, //  depending on the configured hierarchy mode.s 
0, Line, //  Controller-local first... 
0, Line, //  - The offset of the AnnotationDefault attribute, or 0. 
0, Line, //  Index of the next runtime visible type annotation to read (in the 
0, Line, // ---------------------------------------------------------------------   Implementation of Lifecycle interface  --------------------------------------------------------------------- 
0, Line, //  Type references 
0, Line, //  SPR-13241 
0, Line, //  mark which properties are required 
0, Line, //  SPR-13374 
0, Line, //  Two captures mean we use a RegexPathElement 
0, Line, //  will it be compilable. 
0, Line, //  Possibly on Tomcat when called too late: fall back to silent setStatus 
0, Line, //  Keep backing up the inheritance hierarchy. 
0, Line, //  We are only validating the request. The response is mocked out.   hotel.getId() == 42   hotel.getName().equals("Holiday Inn") 
0, Line, //  no match, no forward slash included 
0, Line, //  "read-only not supported" SQLException -> ignore, it's just a hint anyway 
0, Line, //  should handle Shopper (beats Greetable since it is a class) 
0, Line, //  PROJECTION 
0, Line, //  WebRequest / NativeWebRequest / ServletWebRequest 
0, Line, //  CORS lookup 
0, Line, //  Do not modify the Session: just mark the request accordingly. 
0, Line, //  Fail if we're already creating this bean instance:   We're assumably within a circular reference. 
0, Line, //  This is a format that cannot be parsed by new Date(String) 
0, Line, //  colors.put("black", "schwarz"); 
0, Line, //  Use defaults?
0, Line, //    / mapping (default servlet)   
0, Line, //  SPR-13375 
0, Line, //  Plain variant: just find a default bean 
0, Line, //  Can now remove it 
0, Line, //  foo.iii == 99 
0, Line, //  id attribute is supported, but we don't want it 
0, Line, //  Do invoke this filter... 
0, Line, //  RMIClientSocketFactory specified for registry access.   Unfortunately, due to RMI API limitations, this means   that we need to parse the RMI URL ourselves and perform   straight LocateRegistry.getRegistry/Registry.lookup calls. 
0, Line, // -------------------   SPR-16103 classes  ------------------- 
0, Line, //  SPR-8718 
0, Block, /* 		public int return5() {			return 5;		}		 */
0, Line, //  Full SLF4J SPI including location awareness support 
0, Line, //  Must not be able to set enter message with exception placeholder 
0, Line, //  Publish event via parent context as well... 
0, Line, //  Route and metadata 
0, Line, //  Forwarded to the "default" servlet via <mvc:default-servlet-handler/> 
0, Line, //  Add property values based on autowire by name if applicable. 
0, Line, //  SPR-15772 
0, Line, //  Or, and, not expressions 
0, Line, //  try to update the attribute again 
0, Line, //  Check if repackaging is needed... 
0, Line, //  Ensure user configured an appropriate DataSource/TransactionManager pair. 
0, Line, //  Invoked method threw a checked exception.   We must rethrow it. The client won't see the interceptor. 
0, Line, //  Default editors for primitive arrays. 
0, Line, //  Search parent types for method that has same signature as bridge. 
0, Line, //  Fresh ResourceBundle.getBundle call in order to let ResourceBundle   do its native caching, at the expense of more extensive lookup steps. 
0, Line, //  Only do attribute scanning for public annotations; we'd run into   IllegalAccessExceptions otherwise, and we don't want to mess with   accessibility in a SecurityManager environment. 
0, Line, //  This implementation does nothing!   It's not overloaded 
0, Line, //  Optimize for Mono 
0, Line, //  create the proxy definition 
0, Line, //  valueOf() invokes the constructor 
0, Line, //  SPR-11326 
0, Line, //  Reverse the list so that we can traverse "down" the hierarchy. 
0, Line, //  Couldn't determine resource URL - return null to indicate   that there is no appropriate text representation. 
0, Line, //  SPR-17429 
0, Line, //  SPR-13111 
0, Line, //  disable caching for reliable leak detection, see https://github.com/netty/netty/issues/5275 
0, Line, //  Interceptor behind regexp advisor 
0, Line, //  @Transactional(readOnly = true) 
0, Line, //  Release underlying connection back to the connection manager 
0, Line, //  try first time 
0, Line, //  default HandlerAdapters if no other adapters are found. 
0, Line, //  Media type from "produces" attribute 
0, Line, //  registered listeners above - but here potentially with additional metadata. 
0, Line, //  the arguments should have been converted to the box form of the required type. 
0, Line, //  Still in startup registration phase 
0, Line, //  PUT 
0, Line, //  SPR-11325 
0, Line, //  JCA 
0, Line, //  there a couple of mappings defined with which we can test the   path matching, let's do that... 
0, Line, //  First non-basic Decoder (e.g. CBOR, Protobuf) 
0, Line, //  Ignore non-existent default lifecycle methods. 
0, Line, //  Rationale for the following assertion:     The field value for the custom rule is null when JUnit sees it. JUnit then   ignores the null value, and at a later point in time Spring injects the rule   from the ApplicationContext and overrides the null field value. But that's too   late: JUnit never sees the rule supplied by Spring via dependency injection. 
0, Line, //  Typically a MalformedURLException or AccessControlException. 
0, Line, //  method with changing target 
0, Line, //  If EJB 3.1 API not present, simply ignore. 
0, Line, //  Correct the position for the error before re-throwing 
0, Line, //  - consolidate the state scattered in these two instances into the canonical instance: 
0, Line, //  Standard Bean Validation 1.1 API 
0, Line, //  next trigger is in one second because second is wildcard 
0, Line, //  See SPR-10945 Serialized events result in a null source 
0, Line, //  Try to connect using client. 
0, Line, //  A normal return value: will lead to a commit. 
0, Line, //  Explicit cast for compatibility with covariant return type on JDK 9's ByteBuffer 
0, Line, //  SPR-13379 
0, Line, //  nop = 0 (0x0)   aconst_null = 1 (0x1)   iconst_m1 = 2 (0x2)   iconst_0 = 3 (0x3)   iconst_1 = 4 (0x4)   iconst_2 = 5 (0x5)   iconst_3 = 6 (0x6)   iconst_4 = 7 (0x7)   iconst_5 = 8 (0x8)   lconst_0 = 9 (0x9)   lconst_1 = 10 (0xa)   fconst_0 = 11 (0xb)   fconst_1 = 12 (0xc)   fconst_2 = 13 (0xd)   dconst_0 = 14 (0xe)   dconst_1 = 15 (0xf)   bipush = 16 (0x10)   sipush = 17 (0x11)   ldc = 18 (0x12)   ldc_w = 19 (0x13)   ldc2_w = 20 (0x14)   iload = 21 (0x15)   lload = 22 (0x16)   fload = 23 (0x17)   dload = 24 (0x18)   aload = 25 (0x19)   iload_0 = 26 (0x1a)   iload_1 = 27 (0x1b)   iload_2 = 28 (0x1c)   iload_3 = 29 (0x1d)   lload_0 = 30 (0x1e)   lload_1 = 31 (0x1f)   lload_2 = 32 (0x20)   lload_3 = 33 (0x21)   fload_0 = 34 (0x22)   fload_1 = 35 (0x23)   fload_2 = 36 (0x24)   fload_3 = 37 (0x25)   dload_0 = 38 (0x26)   dload_1 = 39 (0x27)   dload_2 = 40 (0x28)   dload_3 = 41 (0x29)   aload_0 = 42 (0x2a)   aload_1 = 43 (0x2b)   aload_2 = 44 (0x2c)   aload_3 = 45 (0x2d)   iaload = 46 (0x2e)   laload = 47 (0x2f)   faload = 48 (0x30)   daload = 49 (0x31)   aaload = 50 (0x32)   baload = 51 (0x33)   caload = 52 (0x34)   saload = 53 (0x35)   istore = 54 (0x36)   lstore = 55 (0x37)   fstore = 56 (0x38)   dstore = 57 (0x39)   astore = 58 (0x3a)   istore_0 = 59 (0x3b)   istore_1 = 60 (0x3c)   istore_2 = 61 (0x3d)   istore_3 = 62 (0x3e)   lstore_0 = 63 (0x3f)   lstore_1 = 64 (0x40)   lstore_2 = 65 (0x41)   lstore_3 = 66 (0x42)   fstore_0 = 67 (0x43)   fstore_1 = 68 (0x44)   fstore_2 = 69 (0x45)   fstore_3 = 70 (0x46)   dstore_0 = 71 (0x47)   dstore_1 = 72 (0x48)   dstore_2 = 73 (0x49)   dstore_3 = 74 (0x4a)   astore_0 = 75 (0x4b)   astore_1 = 76 (0x4c)   astore_2 = 77 (0x4d)   astore_3 = 78 (0x4e)   iastore = 79 (0x4f)   lastore = 80 (0x50)   fastore = 81 (0x51)   dastore = 82 (0x52)   aastore = 83 (0x53)   bastore = 84 (0x54)   castore = 85 (0x55)   sastore = 86 (0x56)   pop = 87 (0x57)   pop2 = 88 (0x58)   dup = 89 (0x59)   dup_x1 = 90 (0x5a)   dup_x2 = 91 (0x5b)   dup2 = 92 (0x5c)   dup2_x1 = 93 (0x5d)   dup2_x2 = 94 (0x5e)   swap = 95 (0x5f)   iadd = 96 (0x60)   ladd = 97 (0x61)   fadd = 98 (0x62)   dadd = 99 (0x63)   isub = 100 (0x64)   lsub = 101 (0x65)   fsub = 102 (0x66)   dsub = 103 (0x67)   imul = 104 (0x68)   lmul = 105 (0x69)   fmul = 106 (0x6a)   dmul = 107 (0x6b)   idiv = 108 (0x6c)   ldiv = 109 (0x6d)   fdiv = 110 (0x6e)   ddiv = 111 (0x6f)   irem = 112 (0x70)   lrem = 113 (0x71)   frem = 114 (0x72)   drem = 115 (0x73)   ineg = 116 (0x74)   lneg = 117 (0x75)   fneg = 118 (0x76)   dneg = 119 (0x77)   ishl = 120 (0x78)   lshl = 121 (0x79)   ishr = 122 (0x7a)   lshr = 123 (0x7b)   iushr = 124 (0x7c)   lushr = 125 (0x7d)   iand = 126 (0x7e)   land = 127 (0x7f)   ior = 128 (0x80)   lor = 129 (0x81)   ixor = 130 (0x82)   lxor = 131 (0x83)   iinc = 132 (0x84)   i2l = 133 (0x85)   i2f = 134 (0x86)   i2d = 135 (0x87)   l2i = 136 (0x88)   l2f = 137 (0x89)   l2d = 138 (0x8a)   f2i = 139 (0x8b)   f2l = 140 (0x8c)   f2d = 141 (0x8d)   d2i = 142 (0x8e)   d2l = 143 (0x8f)   d2f = 144 (0x90)   i2b = 145 (0x91)   i2c = 146 (0x92)   i2s = 147 (0x93)   lcmp = 148 (0x94)   fcmpl = 149 (0x95)   fcmpg = 150 (0x96)   dcmpl = 151 (0x97)   dcmpg = 152 (0x98)   ifeq = 153 (0x99)   ifne = 154 (0x9a)   iflt = 155 (0x9b)   ifge = 156 (0x9c)   ifgt = 157 (0x9d)   ifle = 158 (0x9e)   if_icmpeq = 159 (0x9f)   if_icmpne = 160 (0xa0)   if_icmplt = 161 (0xa1)   if_icmpge = 162 (0xa2)   if_icmpgt = 163 (0xa3)   if_icmple = 164 (0xa4)   if_acmpeq = 165 (0xa5)   if_acmpne = 166 (0xa6)   goto = 167 (0xa7)   jsr = 168 (0xa8)   ret = 169 (0xa9)   tableswitch = 170 (0xaa)   lookupswitch = 171 (0xab)   ireturn = 172 (0xac)   lreturn = 173 (0xad)   freturn = 174 (0xae)   dreturn = 175 (0xaf)   areturn = 176 (0xb0)   return = 177 (0xb1)   getstatic = 178 (0xb2)   putstatic = 179 (0xb3)   getfield = 180 (0xb4)   putfield = 181 (0xb5)   invokevirtual = 182 (0xb6)   invokespecial = 183 (0xb7)   invokestatic = 184 (0xb8)   invokeinterface = 185 (0xb9)   invokedynamic = 186 (0xba)   new = 187 (0xbb)   newarray = 188 (0xbc)   anewarray = 189 (0xbd)   arraylength = 190 (0xbe)   athrow = 191 (0xbf)   checkcast = 192 (0xc0)   instanceof = 193 (0xc1)   monitorenter = 194 (0xc2)   monitorexit = 195 (0xc3)   wide = 196 (0xc4)   multianewarray = 197 (0xc5)   ifnull = 198 (0xc6)   ifnonnull = 199 (0xc7)   goto_w = 200 (0xc8)   jsr_w = 201 (0xc9) 
0, Line, //  Convert the merged properties, if necessary. 
0, Line, // Added a brief snooze here - seems to fix occasional  java.net.BindException: Address already in use errors 
0, Line, //  request attribute 
0, Line, //  -----------------------------------------------------------------------------------------------   Constructor and accessors   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-14577 
0, Line, //  SPR-16972 
0, Line, //  We need this resolver separate from ServerWebExchangeArgumentResolver which   implements SyncHandlerMethodArgumentResolver. 
0, Line, //  relative to the persistence unit root, according to the JPA spec 
0, Line, //  The provider may support on-demand cache creation... 
0, Line, //  No header value sent at all 
0, Line, //  HttpServletRequest exposes some headers as properties:   we should include those if not already present 
0, Line, //  Try custom editor... 
0, Line, //  Avoid cancelHeartbeat() and responseLock within server "close" callback 
0, Line, //  Store result in a local variable in order to appease the   Eclipse compiler with regard to inferred generics. 
0, Line, //  Check it affects JNDI 
0, Line, //  Fallback for ClassLoaders without parent/child relationship: 
0, Line, //  Primarily ".xml" files but for any other extension as well 
0, Line, // ds.setDriverClassName("foobar"); 
0, Line, //  two events: ContextRefreshedEvent and TestEvent 
0, Line, //  Baseline: 
0, Line, //  This will cause creation of default SQL translator. 
0, Line, //  An invalid scoped proxy arrangement - let's ignore it. 
0, Line, //  Use bind error processor to create FieldError. 
0, Line, //  Otherwise, expose null/empty value and associated BindingResult 
0, Line, //  ServerEndpointConfig.Configurator implementation 
0, Line, //  We have exactly one match. 
0, Line, //  Do not initialize FactoryBeans here: We need to leave all regular beans   uninitialized to let the bean factory post-processors apply to them!   Separate between BeanDefinitionRegistryPostProcessors that implement   PriorityOrdered, Ordered, and the rest. 
0, Line, //  Nevertheless call commit, in order to reset the transaction timeout (if any). 
0, Line, //  No value 
0, Line, //  Protected template methods 
0, Line, //  set new locale 
0, Line, //  SPR-16844 
0, Line, //  Unmarshalling 
0, Line, //  do not flush the underlying response as the content as not been copied to it yet 
0, Line, //  Name property value is overridden 
0, Line, //  Now we have properties, process each one individually. 
0, Line, //  SPR-17076 
0, Line, //  Errors instance, even if no errors.
0, Line, //  Quick check for existing entry on ConcurrentHashMap... 
0, Line, //  request.setRequestURI("http://localhost:7070/example/bingo.html"); 
0, Line, // 		SpelExpression expr = parser.parseExpression("(hasRole('SUPERVISOR') or (#a <  1.042)) and hasIpAddress('10.10.0.0/16')"); 
0, Line, //  Invoke method on target Connection. 
0, Line, //  Add its successors to the list of blocks to process. Note that {@link #pushSuccessors} does   not push basic blocks which are already in a list. Here this means either in the list of   blocks to process, or in the list of already processed blocks. This second list is 
0, Line, //  Specific exception counter. Example: java.lang.RuntimeException 
0, Line, //  SPR-16710 
0, Line, //  Division 
0, Line, //  root 
0, Line, //  Clear cached merged bean definitions since the post-processors might have 
0, Line, //  for os x / linux 
0, Line, //  Proceed to the joinpoint through the interceptor chain. 
0, Line, //  literals 
0, Line, //  set JPA version (1.0 or 2.0) 
0, Line, //  VARIABLE 
0, Line, //  target invocation exception 
0, Line, //  should fail with bogus rollback rule 
0, Line, //  Intentionally not static 
0, Line, //  Tag values for the constant pool entries (using the same order as in the JVMS). 
0, Line, //  REAL_LITERAL :   ('.' (DECIMAL_DIGIT)+ (EXPONENT_PART)? (REAL_TYPE_SUFFIX)?) |   ((DECIMAL_DIGIT)+ '.' (DECIMAL_DIGIT)+ (EXPONENT_PART)? (REAL_TYPE_SUFFIX)?) |   ((DECIMAL_DIGIT)+ (EXPONENT_PART) (REAL_TYPE_SUFFIX)?) |   ((DECIMAL_DIGIT)+ (REAL_TYPE_SUFFIX));   fragment INTEGER_TYPE_SUFFIX : ( 'L' | 'l' );   fragment HEX_DIGIT :   '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F'|'a'|'b'|'c'|'d'|'e'|'f';     fragment EXPONENT_PART : 'e' (SIGN)* (DECIMAL_DIGIT)+ | 'E' (SIGN)*   (DECIMAL_DIGIT)+ ;   fragment SIGN : '+' | '-' ;   fragment REAL_TYPE_SUFFIX : 'F' | 'f' | 'D' | 'd';   INTEGER_LITERAL   : (DECIMAL_DIGIT)+ (INTEGER_TYPE_SUFFIX)?; 
0, Line, //  Second request: session expires 
0, Line, //  There must be an async result before dispatching 
0, Line, //  Normal path element found. 
0, Line, //  -1 if not known; should be known in all reasonable cases 
0, Line, //  Nested types 
0, Line, //  Unknown Number subtype -> best guess is double increment 
0, Line, //  This one's for the tx (shared) 
0, Line, //  https://github.com/rsocket/rsocket-java/issues/613 
0, Block, /*  test methods in superclass  */
0, Line, //  bean exists 
0, Line, //  convertedValue == null 
0, Line, //  @since 4.0.3 
0, Line, //  ... and set through setter 
0, Line, //  second invocation for bf2 -- should throw 
0, Line, //  Candidate class is an ImportBeanDefinitionRegistrar ->   delegate to it to register additional bean definitions 
0, Line, //  Read the max_stack, max_locals and code_length fields. 
0, Line, //  SPR-7779 
0, Line, //  gh-22952 
0, Line, //  look up by type and default name 
0, Line, //  Could apply dynamically to getAge/setAge but not to getName 
0, Line, //  Should return the age before the third, AOP-induced birthday 
0, Line, //  Annotation Class not resolvable 
0, Line, //  Compute the stack size, ignoring TOP types that are just after a LONG or a DOUBLE. 
0, Line, //  short 
0, Line, //  Only check bean definition if it is complete. 
0, Line, //  Check the set of scanned definitions for any further config classes and parse recursively if needed 
0, Line, //  SPR-16715 
0, Line, //  When the input is a map, we push a special context object on the stack   before calling the specified operation. This special context object   has two fields 'key' and 'value' that refer to the map entries key   and value, and they can be referenced in the operation   eg. {'a':'y','b':'n'}.![value=='y'?key:null]" == ['a', null] 
0, Line, //  Remove Level 2   Should also remove Levels 3-A and 3-B, leaving only Level 1 as a context in the   cache but also removing the Level 1 hierarchy since all children have been 
0, Line, //  Remove duplicate methods (possible due to resolved bridge methods) 
0, Block, /* 	 * NOTE: We could avoid the code duplication between this class and the CGLIB	 * proxies by refactoring "invoke" into a template method. However, this approach	 * adds at least 10% performance overhead versus a copy-paste solution, so we sacrifice	 * elegance for performance. (We have a good test suite to ensure that the different	 * proxies behave the same :-)	 * This way, we can also more easily take advantage of minor optimizations in each class.	  */
0, Line, //  gh-22959 
0, Line, //  A competing write might have completed very quickly 
0, Line, //  First child gives us the array type which will either be a primitive or reference type 
0, Line, //  Is the test class annotated with @TestConstructor?
0, Line, //  SPR-9420 
0, Line, //  fetch async result similar to "asyncDispatch" builder 
0, Line, //  second commit attempt 
0, Line, //  the scope proxy has kicked in 
0, Line, //  header not present 
0, Line, //  Reset HTTP 1.0 Pragma header if present 
0, Line, //  Must generate CGLIB subclass. 
0, Line, // Add no interceptors 
0, Line, //  'test string' 
0, Line, //  won't actually do anything since we're not processing through an app ctx 
0, Line, //  target type is declared as raw enum, treat the trimmed value as <enum.fqn>.FIELD_NAME 
0, Line, //  SPR-6923 
0, Line, //  Take a slow path if observing unexpected argument types 
0, Line, //  The return value is the new value, not the original value 
0, Line, //  Skip the argument types, one at a each loop iteration. 
0, Line, //  SPR-15291 
0, Line, //  Check if this is the alternative (textual) representation of an operator (see   alternativeOperatorNames) 
0, Line, //  Just test anything: it will fail if context wasn't found 
0, Line, //  Interesting hierarchical factory to test counts.   Slow to read so we cache it. 
0, Line, //  config file doesn't matter - just a placeholder 
0, Line, //  Skip 0 to 3 padding bytes. 
0, Line, //  No name to resolve 
0, Line, //  Determine autowire mode. 
0, Line, //  should not be called, since we return false for canRead(Class)
0, Line, //  1. external-general-entities and dtd support disabled (default) 
0, Line, //  Do not allow eager init for type matching in case of a prioritized post-processor. 
0, Line, //  Immediate event 
0, Line, // -------------------------------------------------------------------------   Methods dealing with configuration properties  ------------------------------------------------------------------------- 
0, Line, //  trigger a transaction 
0, Line, //  This should always be true, since we're only calling this when active. 
0, Line, //  Return the last level in the context hierarchy 
0, Line, //  stack: right/left 
0, Line, // 			ctx.setRootObject(new Manager("Luke"));  			ctx.setVariable("a",1.043d);  			value = (Boolean)expr.getValue(ctx,Boolean.class);  			assertFalse(value); 
0, Line, //  Correctly returns false since JmxUtils won't navigate to the extended interface 
0, Line, // SPR-14767 
0, Line, //  SPR-11806 
0, Line, //  register and start immediately 
0, Line, //  Should never happen. 
0, Line, //  Expired on retrieve or while processing request, or invalidated.. 
0, Line, //  zero size array if nothing to pass as the varargs parameter 
0, Line, // do something with object1 
0, Line, //  it was a '.' or a '?.' 
0, Line, //  probably a streaming request - let's simply ignore it 
0, Line, //  Create the set of field types that may be annotated with @DateTimeFormat. 
0, Line, //  Static factory methods 
0, Line, //  Fallback to original instance 
0, Line, //  audio/basic > audio/* 
0, Line, //  Convert value to target type here. 
0, Line, //  Ignore the first outgoing edge of the basic blocks ending with a jsr: these are virtual   edges which lead to the instruction just after the jsr, and do not correspond to a   possible execution path (see {@link #visitJumpInsn} and   {@link Label#FLAG_SUBROUTINE_CALLER}). 
0, Line, //  Support images buttons, which would submit parameters as name_value.x=123 
0, Line, //  Attempt to populate the cache entry 
0, Line, //  Check whether current file size is different than original one. 
0, Line, //  Search for TaskScheduler bean... 
0, Line, //  skip the target_path structure: 
0, Line, //  Prototype: new object on each call. 
0, Line, //  test null assertion 
0, Line, //  parseCheck("new int[] {3,2,1}.sort()");   }   
0, Line, //  Check nested map 
0, Line, //  JPA 2.0: return EntityManagerFactory's CriteriaBuilder/Metamodel (avoid creation of EntityManager) 
0, Line, //  Use loadFactor to disable resize 
0, Line, //  Eagerly resolve handler if referencing singleton via name. 
0, Line, //  Possibly a bean constraint with property path: retrieve the actual property value.   However, explicitly avoid this for "address[]" style paths that we can't handle. 
0, Line, //  Immediately trigger the request in a no-output scenario as well 
0, Line, //  Write content type and also length (determined via byte array). 
0, Line, //  Package private accessors... 
0, Line, //  Copy and reset the nextAttribute field so that it can also be used in FieldWriter. 
0, Line, //  This should happen only once, for the implicit first frame (which is explicitly visited   in ClassReader if the EXPAND_ASM_INSNS option is used - and COMPUTE_INSERTED_FRAMES   can't be set if EXPAND_ASM_INSNS is not used). 
0, Line, //  There is definitely a variant, and it is everything after the country   code sans the separator between the country code and the variant. 
0, Line, //  xLOAD or xSTORE 
0, Line, //  The best we can do is to assume we're safe. 
0, Line, //  fast default check 
0, Line, //  Add to end of list 
0, Line, //  Inner bean definition must receive same scope as containing bean. 
0, Line, //  should never be invoked because isRuntime() returns false 
0, Line, //  SPR-4789 
0, Line, //  to the caller to convert them (e.g. through a ConversionService). 
0, Line, //  Early cache initialization on startup 
0, Line, //  Clocks go forward an hour so 2am doesn't exist in CET for this localDateTime 
0, Line, //  Read-only attributes 
0, Line, //  parseCheck("{1,2,3,4,5,6,7,8,9,10}.${#isEven(#this) == 'y'}",   "{1,2,3,4,5,6,7,8,9,10}.${(#isEven(#this) == 'y')}");   } 
0, Line, //  Ask for re-resolution on next getTheme call. 
0, Line, //  Probably no protocol in original jar URL, like "jar:C:/mypath/myjar.jar".   This usually indicates that the jar file resides in the file system. 
0, Line, //  TODO This currently passes because of the Date(String) constructor fallback is used
0, Line, //  Any Throwable other than RuntimeException and Error   has to be considered checked according to the JLS. 
0, Line, //  assertTrue(AopUtils.isJdkDynamicProxy(bean)); 
0, Line, //  visitLabel starts a new basic block (except for debug only labels), so we need to update the 
0, Line, //  arguments for 'clone'-like method 
0, Line, //  Same lenient fallback checking as in CachedIntrospectionResults... 
0, Line, //  Service locator for a bean type 
0, Line, // ---------------------------------------------------------------------   Various  --------------------------------------------------------------------- 
0, Line, //  does not override handle() 
0, Line, //  check de-registration works 
0, Line, //  iii=42 
0, Line, //  The dummy business method will throw an exception if the   necessary callbacks weren't invoked in the right order. 
0, Line, //  Protect from infinite recursion in Undertow, where we can't check if data   is available, so all we can do is to try to read.   Generally, no need to check if we just came out of readAndPublish()... 
0, Line, //  SPR-13867 
0, Line, //  duplicate slash or backslash 
0, Line, //  Shouldn't affect second 
0, Line, //  Continue below... 
0, Line, //  Skip String: CharSequenceDecoder + "*/*" comes after 
0, Line, //  Fall back to InputStream adaptation in superclass 
0, Line, //  Try InputStream resolution for jar resources 
0, Line, //  SPR-16496 
0, Line, //  Optimization to avoid creating ClassReader for super class. 
0, Line, //  Note: attributeName is added to the constant pool by the call to computeAnnotationsSize   below. This assumes that there is at least one non-null element in the annotationWriters   sub-array (which is ensured by the lazy instantiation of this array in MethodWriter).   The attribute_name_index, attribute_length and num_parameters fields use 7 bytes, and each   element of the parameter_annotations array uses 2 bytes for its num_annotations field. 
0, Line, //  Do nothing, no values found at all. 
0, Line, //  Disable writing: next item will be cached.. 
0, Line, //  Adding a 2nd Cookie should result in 2 Cookies. 
0, Line, //  root still null 
0, Line, //  If this resolver is not supposed to handle the given view,   return null to pass on to the next resolver in the chain. 
0, Line, //  Check default behaviour is overridden 
0, Line, //  is there more to this token than simply the kind 
0, Line, //  Not streaming: write headers without committing response.. 
0, Line, //  SPR-16362 
0, Line, //  Remove destroyed bean's prepared dependency information. 
0, Line, //  used only for error reporting 
0, Line, //  Verify if locals are the same as in the previous frame. 
0, Line, //  More than one operation found -> local declarations override interface-declared ones... 
0, Line, //  Union with all setters 
0, Line, //  A Resource object: add it to the result. 
0, Line, //  Collections 
0, Line, //  - The string corresponding to the SourceDebugExtension attribute, or null. 
0, Line, //  Inner cast required by Eclipse IDE. 
0, Line, //  The factory is calling the bean method in order to instantiate and register the bean   (i.e. via a getBean() call) -> invoke the super implementation of the method to actually   create the bean instance. 
0, Line, //  Maps 
0, Line, //  5xx 
0, Line, //  key is foo.bar 
0, Line, //  Last step: publish corresponding event. 
0, Line, //  gh-23542 
0, Line, //  Classic Hibernate getFlushMode() with FlushMode return type 
0, Line, //  The user (i.e. not the factory) is requesting this bean through a call to   the bean method, direct or indirect. The bean may have already been marked   as 'in creation' in certain autowiring scenarios; if so, temporarily set   the in-creation status to false in order to avoid an exception. 
0, Line, //  Start of the most recent variable capture in a particular path element 
0, Line, //  Encode methods 
0, Line, //  Abort test?
0, Line, //  Register as ServletContext attribute, for ContextCleanupListener to detect it. 
0, Line, //  must work with raw map in this test 
0, Block, /* 	 * Separate static class to isolate Aalto dependency.	  */
0, Line, //  Initialize and register a StaticMessageSource. 
0, Line, //  Otherwise ignore new imported config class; existing non-imported class overrides it. 
0, Line, //  Fields designed for test introspection 
0, Line, //  we want to fall back to the default... 
0, Line, //  If we have another kind of PersistenceException, throw it. 
0, Line, //  Default reader selection necessary?
0, Line, //  We have been able to determine the arg names. 
0, Line, //  Get as late as possible to minimize the time we "own" the target, 
0, Line, //  SPR-16231 
0, Line, //  SPR-16364 
0, Line, // ---------------------------------------------------------------------------------------   Convenience methods for sending auto-converted messages  --------------------------------------------------------------------------------------- 
0, Line, //  force use of Class.getClassLoader() 
0, Line, //  Cannot access system ClassLoader - oh well, maybe the caller can live with null... 
0, Line, //  Release Connection early, to avoid potential connection pool deadlock   in the case when the exception translator hasn't been initialized yet. 
0, Line, //  varargs 2 - null is packed into the varargs 
0, Line, //  Note: the following 'multi-line' layout is for enhanced code readability.         
0, Line, //  SPR-11931 
0, Line, //  Target Connection already held -> return it. 
0, Line, //  Based purely on catchAll 
0, Line, //  else 
0, Line, //  Leave stack trace for later, if error is not handled... 
0, Line, //  --- SmartContextLoader - loadContext() ---------------------------------- 
0, Line, //  -----------------------------------------------------------------------------------------------   Equals, hashCode and toString.   ----------------------------------------------------------------------------------------------- 
0, Line, //  Candidate class is an ImportSelector -> delegate to it to determine imports 
0, Line, //  Allocate the cache of ConstantDynamic values, if there is at least one. 
0, Line, //  up to last '**' 
0, Line, //  try the numbers 0,1,2,null 
0, Line, //  Specific environment settings defined, overriding any shared properties. 
0, Line, //  Autodetect UserTransaction at its default JNDI location. 
0, Line, //  Rely on default pointcut. 
0, Line, //  Haven't had an afterCommit call: trigger a rollback. 
0, Line, //  Set ResourceAdapter's ClassLoader as bean class loader. 
0, Line, //  Special handling for this, target, @this, @target, @annotation   in Spring - we can optimize since we know we have exactly this class,   and there will never be matching subclass at runtime. 
0, Line, //  Fetch RMI registry to expose. 
0, Line, //  Evaluate dynamic method matcher here: static part will already have   been evaluated and found to match. 
0, Line, //  Hibernate Query.list() method 
0, Line, //  If we get here, otherProxy is the other AopProxy. 
0, Line, //  SPR-16499 
0, Line, //  Either there was no accessor or it no longer exists 
0, Line, //  Serialization methods 
0, Line, //  Fallback is to return an empty SQLErrorCodes instance. 
0, Line, //  Logging related 
0, Line, //  extension receivers are not explicitly named, but require a name for Java interoperability   $receiver is not a valid Kotlin identifier, but valid in Java, so it can be used here 
0, Line, //  throw these two exceptions, besides PersistenceException. 
0, Line, //  Check reference beyond end of collection 
0, Line, //  Including json 
0, Line, //  Match 
0, Line, //  just tests that the (singleton) script-backed bean is able to be instantiated with references to its collaborators 
0, Line, //  SPR-16103 
0, Line, //  Here label.frame should be null. 
0, Line, //  Recovery during active operation.. 
0, Line, //  invoke constructor 
0, Line, //  RowSet navigation methods 
0, Line, //  following methods are used to test support for primitives 
0, Line, //  allow getters and setters to be marked as operations directly 
0, Line, //  assumably from commit call to the underlying JDBC connection 
0, Line, //  A problem occurred whilst attempting to construct an object of type   'org.springframework.expression.spel.ConstructorInvocationTests$Tester'   using arguments '(java.lang.Integer)' 
0, Line, //  Depends on age, name and spouse (TestBean) 
0, Line, //  methodArgs : LPAREN! (argument (COMMA! argument)* (COMMA!)?)? RPAREN!; 
0, Line, //  SPR-14939 
0, Line, //  try any registered prefixes before giving up 
0, Line, // assertEquals(2, conf.getInvocations()); 
0, Line, //  no URL -> treat as file path 
0, Line, //  ensure the custom environment took 
0, Line, //  HttpServletRequest required for all further argument types 
0, Line, //  We don't have an exact type but if bean definition target type or the factory 
0, Line, // client.setHessian2(true); 
0, Line, //  safe if same Class can be loaded from given ClassLoader 
0, Line, //  Now sort out the final argument, which is the varargs one. Before entering this method, 
0, Line, //  Value type adaptation, also covering java.util.Optional 
0, Line, //  Participating in larger transaction 
0, Line, //  Repeat a few times just to be sure... 
0, Line, //  Check definition settings for new transaction. 
0, Line, //  NOTE: We would actually expect that there are now ZERO entries in the   person table, since the transaction is rolled back by the framework;   however, since our JdbcTemplate and the transaction manager used by   the Spring TestContext Framework use two different DataSource   instances, our insert statements were executed in transactions that   are not controlled by the test framework. Consequently, there was no   rollback for the two insert statements in   modifyTestDataWithinTransaction().   
0, Line, //  Make sure that the cache resolver is initialized. An exception cache resolver is only   required if the exceptionCacheName attribute is set on an operation. 
0, Line, //  - The offset of the ModulePackages attribute, or 0. 
0, Line, //  Unexpected exception from external delegation call -> close EntityManager and rethrow. 
0, Line, //  Fix point algorithm: add the first basic block to a list of blocks to process (i.e. blocks   whose stack map frame has changed) and, while there are blocks to process, remove one from   the list and update the stack map frames of its successor blocks in the control flow graph   (which might change them, in which case these blocks must be processed too, and are thus   added to the list of blocks to process). Also compute the maximum stack size of the method, 
0, Line, //  Set arguments: Does nothing if there are no parameters. 
0, Line, //  Check that lookup methods exist and determine their overloaded status. 
0, Line, //  Note: fields are ordered as in the ClassFile structure, and those related to attributes are   ordered as in Section 4.7 of the JVMS. 
0, Line, //  Local variables are in variable scopes which come and go during evaluation.  Normal variables are   accessible through the evaluation context 
0, Line, //  Can only generate bytecode where the right operand is a direct type reference,   not if it is indirect (for example when right operand is a variable reference) 
0, Line, //  give up trying to compile it when it just doesn't seem to be possible. 
0, Line, //  Massage return value if necessary 
0, Line, //  was not available. 
0, Line, //  Rollback 
0, Line, //  Hessian 2.0 call... for some reason not handled in HessianServlet! 
0, Line, //  Call two methods to test for SPR-3953-like condition 
0, Line, //  Explicit access via Buffer base type for compatibility   with covariant return type on JDK 9's ByteBuffer... 
0, Line, //  Normal case: URI contains context path. 
0, Line, //  Set request attribute to fallback theme and remove cookie. 
0, Line, //  See https://stackoverflow.com/questions/12626699/if-modified-since-http-header-passed-by-ie9-includes-length 
0, Line, //  direct to the target using the fixed chain for that method. 
0, Line, //  varargs conversion 
0, Line, //  Copy request headers, as they might be pooled and recycled by   the server implementation once the handshake HTTP exchange is done. 
0, Line, //  In 2.0 XSD as well as in 2.1 XSD. 
0, Line, //  Multi-purpose return value types 
0, Line, //  lazy scheduled tasks are a contradiction in terms -> force to false 
0, Line, //  Take this as a close match if there isn't one already 
0, Line, //  -> JobExecutionException, to be logged at info level by Quartz 
0, Line, //  Assumes no overloading of test methods... 
0, Line, //  Use a default of near-lowest precedence, still allowing for even lower precedence in other mappings 
0, Line, //  destroyMethod 
0, Line, //  Wrap the EntityManagerFactory in a factory implementing all its interfaces.   This allows interception of createEntityManager methods to return an   application-managed EntityManager proxy that automatically joins   existing transactions. 
0, Line, //  Lazy invocation of the target method on the provided type 
0, Line, //  TODO [SPR-9517] Enable ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass test cases   { ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.class, true }, // CGLIB proxy   { ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.class, false }, 
0, Line, //  Create a new XmlBeanDefinitionReader for the given BeanFactory. 
0, Line, //  but 07xxx will be bad grammar picked up by the fallback SQLState translator 
0, Line, //  SPR-15674 (in comments) 
0, Line, //  We could check canEncode but we're probably last in order anyway 
0, Line, //  Ensure we have at least some HandlerExceptionResolvers, by registering 
0, Line, //  SPR-14584 
0, Line, //  set the new value 
0, Line, //  value of false 
0, Line, //  SPR-15782 
0, Line, //  Index of the next runtime invisible type annotation to read (in the 
0, Line, //  1. First item received   2. writeFunction applied and writeCompletionBarrier subscribed to it   3. writeFunction fails, e.g. to flush status and headers, before request(n) from server 
0, Line, //  Make MessageSource aware of parent MessageSource. 
0, Line, //  Attach any proxy target class metadata. 
0, Line, // ---------------------------------------------------------------------   General convenience methods for working with Strings  --------------------------------------------------------------------- 
0, Line, //  findAnnotation() does search on interfaces 
0, Line, //  Load Level 3-A 
0, Line, //  endif designates the instruction just after GOTO_W, and is visited as part of the 
0, Line, //  Merged annotation chooses lowest depth 
0, Line, //  Corresponding qualifier on bean implementation class? (for custom user types) 
0, Line, //  Proceed with file system resolution... 
0, Line, //  SPR-16108 
0, Line, //  Have we already encountered that Locale before?
0, Line, //  Ensure we have at least one HandlerMapping, by registering 
0, Line, //  Annotations used on tested elements 
0, Line, //  No current invocation... 
0, Line, //  varargs 
0, Line, //  Passing (int,Sub) on call to foo(Integer,Super) requires boxing conversion of argument zero 
0, Line, //  SPR-13254 
0, Line, //  Return early if [handlerStart,handlerEnd[ and [rangeStart,rangeEnd[ don't intersect. 
0, Line, //  The method may be on an interface, but we need attributes from the target class. 
0, Line, //  Cut off at latest possible point 
0, Line, //  If we get here, we're supposed to shut down. 
0, Line, //  Unsupported operations 
0, Line, //  SPR-12647 
0, Line, //  Load Level 3-B 
0, Line, //  If no CacheManager given, fetch the default. 
0, Line, //  Enforce comment prefix aliases within the global @SqlConfig. 
0, Line, //  Spring 1.2 style 
0, Line, //  the content of these attributes. 
0, Line, //  SPR-17082 
0, Line, //  --- ContextLoader ------------------------------------------------------- 
0, Line, //  Will work for transactional and non-transactional connections. 
0, Line, //  a default HandlerMapping if no other mappings are found. 
0, Line, //  End of meaningful data... 
0, Line, //  The invoker wraps any Throwable in a ThrowableWrapper instance so we   can just make sure that one bubbles up the stack. 
0, Line, //  should not fail! 
0, Line, //  all need converting to strings 
0, Line, //  https://en.wikipedia.org/wiki/Billion_laughs   https://msdn.microsoft.com/en-us/magazine/ee335713.aspx 
0, Line, //  static method, one parameter of reference type 
0, Line, //  Nothing on the stack but something is needed 
0, Line, //  Order of decoders may be significant for default data MimeType   selection in RSocketRequester.Builder 
0, Line, //  SPR-16983 
0, Line, //  Separate between BeanPostProcessors that implement PriorityOrdered, 
0, Line, //  always false - but left operand code always driven   in case it had side effects 
0, Line, //  config file doesn't matter.  just a placeholder 
0, Line, //  Finally register the composite component. 
0, Line, //  Check that logger survived deserialization 
0, Line, //  Expanding the ASM specific instructions can introduce F_INSERT frames, even if the method   does not currently have any frame. These inserted frames must be computed by simulating the   effect of the bytecode instructions, one by one, starting from the implicit first frame.   For this, MethodWriter needs to know maxLocals before the first instruction is visited. To   ensure this, we visit the implicit first frame here (passing only maxLocals - the rest is   computed in MethodWriter). 
0, Line, //  SPR-15785 
0, Line, //  Rely on singleton semantics provided by the factory. 
0, Line, //  SPR-12778 
0, Line, //  frameDecoder does not apply to connectionSetupPayload   so retain here since handle expects it.. 
0, Line, //  elvis has left the building 
0, Line, //  WebSphere 
0, Line, //  unadvised calls to static targets that cannot return this). 
0, Line, //  The children might be further lists if they are not constants. In this   situation do not call back into generateCode() because it will register another clinit adder.   Instead, directly build the list here: 
0, Line, //  dynamic resizes) and fill it with the ClassFile content. 
0, Line, //  static @Bean methods have no constraints to validate -> return immediately 
0, Line, //  Expose RequestContext instance for Spring macros. 
0, Line, //  SPR-13257 
0, Line, //  Signature attributes always use 8 bytes. 
0, Line, //  Maintainer's note: changes made here should also be made in   AnnotationAsyncExecutionAspect#getExecutorQualifier 
0, Line, //  The size, in bytes, to use when allocating the next byte[] 
0, Line, //  need to touch the MBean proxy 
0, Line, //  Nested transaction through nested begin and commit/rollback calls.   Usually only for JTA: Spring synchronization might get activated here   in case of a pre-existing JTA transaction. 
0, Line, //  Ignore exception on close... 
0, Line, //  Inequality between standard and synthesized annotations 
0, Line, //  In case the map key is unqualified, we want it evaluated against the root object   so temporarily push that on whilst evaluating the key 
0, Line, //  We're all set... find the unbound parameter, and bind it. 
0, Line, // ctx.setConfigLocation("programmatic.xml"); // nothing set programmatically 
0, Line, //  All keys should be strings 
0, Line, //  Parse the argument types, one at a each loop iteration. 
0, Line, //  Redeclared for visibility within simp.stomp 
0, Line, //  Log message stuff 
0, Line, //  Only pass in the NoLocal flag in case of a Topic (pub-sub mode):   Some JMS providers, such as WebSphere MQ 6.0, throw IllegalStateException   in case of the NoLocal flag being specified for a Queue. 
0, Line, //  org.springframework.test.context.support --> 5 levels up to the root of the classpath 
0, Line, //  class field 
0, Line, //  Wildcard with suffix, e.g. application/*+xml 
0, Line, //  If we haven't closed the Connection in beforeCompletion,   close it now. The holder might have been used for other   cleanup in the meantime, for example by a Hibernate Session. 
0, Line, //  Bind the entity manager holder to the thread. 
0, Block, /* 	 * This method never fails, allowing to try other possible ways to use an	 * server-agnostic weaver. This non-failure logic is required since	 * determining a load-time weaver based on the ClassLoader name alone may	 * legitimately fail due to other mismatches.	  */
0, Line, //  2. Resolve unencoded resource 
0, Line, //  NOTE: @ModelAttribute will NOT be found on the abstract superclass if   @RequestMapping is declared locally. Thus, we have to redeclare   @ModelAttribute locally as well. 
0, Line, //  Cache region is not defined. Should create one with default properties. 
0, Line, //  Unknown Number subtypes -> best guess is double multiplication 
0, Line, //  Access float array 
0, Line, //  New script content... 
0, Line, //  Ignore, as does IndexedPropertyDescriptor#getPropertyType 
0, Line, //  Let's create the outer bean named "innerBean",   to check whether it doesn't create any conflicts   with the actual inner beans named "innerBean". 
0, Line, //  Can do custom FieldError registration with invalid value from ConstraintViolation,   as necessary for Hibernate Validator compatibility (non-indexed set path in field) 
0, Line, //  Compute the length and the hash code of the bootstrap method. 
0, Line, //  - The offset of the Module attribute, or 0. 
0, Line, //  Note that ints is of type Collection<Integer>, but the collection returned   by createApproximateCollection() is of type Collection<Color>. Thus, 42   cannot be cast to a Color. 
0, Line, //  Shouldn't proxy framework interfaces 
0, Line, //  Not an int literal but an opminus with one operand:   expression = parser.parseExpression("-1");   assertCanCompile(expression);   assertEquals(-1, expression.getValue()); 
0, Line, //  look for direct name match 
0, Line, //  fallback to resource.readableChannel(), below 
0, Line, //  non-standard write method 
0, Line, // SPR-12372 & SPR-13455 
0, Line, //  Avoid multiple adjacent whitespace characters 
0, Line, //  Neither BindingResult nor target object available. 
0, Line, //  Bean property binding and validation;   skipped in case of binding failure on construction. 
0, Line, //  SPR-11443 
0, Line, //  Implicitly invoked by set/setException: store current thread for   determining whether the given result has actually triggered completion   (since FutureTask.set/setException unfortunately don't expose that) 
0, Line, //  No args -> delegate to standard getBean method. 
0, Line, //  try resolving as relative path 
0, Line, //  Fallback: setString or setNString binding 
0, Line, //  reply 
0, Line, //  gh-23175 
0, Line, //  Required so that references (up container hierarchies) are correctly resolved. 
0, Line, //  <-- no options whatsoever 
0, Line, //  if it wasn't before, it is now 
0, Line, //  SPR-16720 
0, Line, //  Shared resource cache -> reset to local cache. 
0, Line, // MapPersistenceExceptionTranslator mpet = new MapPersistenceExceptionTranslator(); 
0, Line, //  Simple conversion: int to string 
0, Line, //  SPR-9194 
0, Line, //  New Session to be bound for the current method's scope... 
0, Line, //  Shortcut if there is no work to do 
0, Block, /* 	 * See SPR-6876	  */
0, Line, //  given 
0, Line, //  New in Jackson 2.7 
0, Line, //  otherwise ignore beans where the class is not resolvable 
0, Line, //  SPR-15524 
0, Line, //  First invoke the user-specific ExceptionListener, if any. 
0, Line, //  right is a float 
0, Line, //  read method 
0, Line, //  Subscriber methods and async I/O notification methods... 
0, Line, //  RECEIPT frame 
0, Line, //  If dstType is the NULL type, merge(srcType, dstType) = srcType, or TOP if srcType is not a   an array type or a reference type. 
0, Line, //  Create Connection through invoking WSDataSource.getConnection(JDBCConnectionSpec) 
0, Line, //  Type conversion from "Patty" to TestBean via TestBean(String) constructor 
0, Line, //  In case of FactoryBean, return singleton status of created object. 
0, Line, //  first call: cache miss 
0, Line, //  Until this is fixed https://github.com/synchronoss/nio-multipart/issues/10 
0, Line, //  ensure some send time elapses 
0, Line, //  If not resolvable above and the referenced factory bean doesn't exist yet,   exit here - we don't want to force the creation of another bean just to 
0, Line, //  the concrete type may not be a Boolean - can be String 
0, Line, //  Supported methods and required session 
0, Line, //  Deprecated HTTP 1.0 cache behavior, as in previous Spring versions 
0, Line, //  We use {@link Label#getCanonicalInstance} to store the state of a basic block in only   one place, but this does not work for labels which have not been visited yet.   Therefore, when we detect here two labels having the same bytecode offset, we need to 
0, Line, //  isEmpty() and size() 
0, Line, //  Non existent field (or property): 
0, Line, //  exception parameter cannot be cloned 
0, Line, //  NOTE: the two DataSource instances are NOT the same! 
0, Line, //  Lenient handling (e.g. error dispatch): ignore locale/timezone parse exceptions 
0, Line, //  SPR-12771 
0, Line, //  Runnable decorator to user-level FutureTask, if different 
0, Line, //  Should never happen... would have thrown an exception before   and as a consequence led to a rollback, not to a commit call.   In any case, the transaction is already fully cleaned up. 
0, Line, //  looking for the first extension 
0, Line, //  First, register the BeanPostProcessors that implement PriorityOrdered. 
0, Line, //  Check up until the varargs argument: 
0, Line, //  length of a populated token stream 
0, Line, //  Default value: null. 
0, Line, //  Second try is the caching operation on the target class. 
0, Line, //  constructors 
0, Line, //  The target does not implement the equals(Object) method itself. 
0, Line, //  next token is not "(" either, can't be a pc... 
0, Line, //  Demonstrates we cant inject that event because the listener has a wildcard 
0, Line, //  FunctionReference 
0, Line, //  No cache in order to check every time if IFrame are authorized 
0, Line, //  URL decode after request mapping, not before. 
0, Line, //  Different parts of ternary expression are null 
0, Line, //  Deep copy with overridden values. 
0, Line, //  from: src/test/webapp/resources/Spring.js 
0, Line, //  SPR-9062 
0, Line, //  empty list '{}' 
0, Line, //  getParentLogger() is required for JDBC 4.1 compatibility 
0, Line, //  The operand is going to be read and then assigned to, we don't want to evaluate it twice. 
0, Line, //  Let subclasses do some final clean-up if they wish... 
0, Line, //  enforcing its full initialization... 
0, Line, //  Check it didn't affect the other thread's copy 
0, Line, //  functionOrVar   : (POUND ID LPAREN) => function   | var     function : POUND id=ID methodArgs -> ^(FUNCTIONREF[$id] methodArgs); 
0, Line, //  against the Lockable interface introduced by the specific advisor 
0, Line, //  variables and functions 
0, Line, //  Fall back on default 
0, Line, //  The present implementation always returns 1, making Quartz   always schedule any tasks that it feels like scheduling.   This could be made smarter for specific TaskExecutors,   for example calling {@code getMaximumPoolSize() - getActiveCount()}   on a {@code java.util.concurrent.ThreadPoolExecutor}. 
0, Line, //  Look for matching annotation on the target class 
0, Line, //  proceed with field lookup 
0, Line, //  Direct annotation present?
0, Line, //  Can also obtain the mixin (this) this way  Lockable mixin = (Lockable) jp.getThis(); 
0, Line, //  There is an initializer 
0, Line, //  When resolving against a temporary class loader, exit early in order   to avoid storing the resolved Class in the bean definition. 
0, Line, //  Parse and store the target_path structure. 
0, Line, //  Lazily initialize the delegate if necessary. 
0, Line, //  Client or server: single Resource... 
0, Line, //  Only prefix the path delimiter if something exists before it 
0, Line, //  -----------------------------------------------------------------------------------------------   Frame merging methods, used in the second step of the stack map frame computation algorithm   ----------------------------------------------------------------------------------------------- 
0, Line, //  Remove whitespace from handler bean name. 
0, Line, //  check position for final 'false' 
0, Line, //  null means any registered server, but "" specifically means the platform server 
0, Line, //  Delegate to JpaDialect for actual transaction begin. 
0, Line, //  constructorArgs 
0, Line, //  ASM API versions. 
0, Line, //  SqlParameterValue overrides declared parameter meta-data, in particular for   independence from the declared parameter position in case of named parameters. 
0, Line, //  OpDec 
0, Line, //  Prefer remote registries due to cross-server SessionLookup 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods to handle uninitialized types   ----------------------------------------------------------------------------------------------- 
0, Line, //  Check its unchanged 
0, Line, //  interleaved writing 
0, Line, //  Check the return value 
0, Line, //  Use the Pointcuts matches method 
0, Line, //  Stopping jetty will undeploy the servlet 
0, Line, //  basic 
0, Line, //  Name of table for this context 
0, Line, //  Else only apply if there are no explicit handler mappings. 
0, Line, //  Optimization to avoid creating ClassReader for super class 
0, Line, //  just invoke any method to see if advice fired 
0, Line, //  Check parent MessageSource, returning null if not found there.   Covers custom MessageSource impls and DelegatingMessageSource. 
0, Line, //  Fetch prototype target bean... 
0, Line, //  should throw, bad (non-interface-type) serviceLocator interface supplied 
0, Line, //  Only accept fallback match if @Qualifier annotation has a value...   Otherwise it is just a marker for a custom qualifier annotation. 
0, Line, //  Not allowed to access non-public methods...   Fallback: check locally declared public methods only. 
0, Line, //  Strip the first key. 
0, Line, //  Sanity check: check that argument conversion doesn't work with plain MethodInvoker 
0, Line, //  Never use ASM for core java types 
0, Line, //  The JDK does not contain default editors for number wrapper types! 
0, Line, //  The wac environment's #initPropertySources will be called in any case when the context   is refreshed; do it eagerly here to ensure servlet property sources are in place for 
0, Line, //  Now revert state of foh and try compiling it: 
0, Line, //  non-static method, reference type return 
0, Line, //  No choice but to go through all mappings... 
0, Line, //  Extract column value from JDBC ResultSet. 
0, Line, //  The final parameter may or may not need packaging into an array, or nothing may   have been passed to satisfy the varargs and so something needs to be built. 
0, Line, //  caching disabled 
0, Line, //  Three strings, optimal bytecode would only use one StringBuilder 
0, Line, //  GenericTypeAwarePropertyDescriptor leniently resolves a set* write method   against a declared read method, so we prefer read method descriptors here. 
0, Line, //  must not throw a NullPointerException 
0, Line, //  Expose current TransactionStatus, preserving any existing TransactionStatus   for restoration after this transaction is complete. 
0, Line, //  Invoke with a request parameter (RedirectView return value) 
0, Line, // ---------------------------------------------------------------------   Copy methods for java.io.InputStream / java.io.OutputStream  --------------------------------------------------------------------- 
0, Line, //  Must be first 
0, Line, //  will return true if we're not proxying interfaces 
0, Line, //  from DefaultPropertiesFileDetectionTestPropertySourceTests.properties 
0, Line, //  - The offset of the RuntimeVisibleParameterAnnotations attribute, or 0. 
0, Line, //  testing on Unix 
0, Line, //  For parameter source lookups we need to provide case-insensitive lookup support   since the database meta-data is not necessarily providing case sensitive parameter names. 
0, Line, //  Expose all standard FreeMarker hash models. 
0, Line, //  Add default constructor to list of optional constructors, as fallback. 
0, Line, //  The dummy business method will throw an exception if the   afterPropertiesSet() callback wasn't invoked 
0, Line, //  optional .SecondMsg blah = 2; 
0, Line, //  Unregister beans already registered by this exporter. 
0, Line, //  If we get here, we know we have an AspectJ method.   Check that it's an AspectJ-annotated class 
0, Line, //  stack: right/left   stack: right/left/left 
0, Line, //  projection would be {false,true,false}   projection would be {false,true,false} 
0, Line, //  Creating a new object instance in the getInterceptors() method   isn't a problem as we normally cache created chains. 
0, Line, //  Deliver toString without touching a target EntityManager. 
0, Line, //  Try to get charset value anyway 
0, Line, //  Transacted session created by this container -> rollback. 
0, Line, //  False positive, since an exception will be thrown once the session is   finally flushed (i.e., in production code) 
0, Line, //  no real advice, but just reflective invocation of the target. 
0, Line, //  This case should happen only once, for the visitLabel call in the constructor. Indeed, if   compute is equal to COMPUTE_MAX_STACK_AND_LOCAL_FROM_FRAMES, currentBasicBlock stays   unchanged. 
0, Line, //  OpOr 
0, Line, //  SPR-13876 
0, Line, //  Handle minus sign, if present. 
0, Line, //  Cache factory for both Locale and ResourceBundle list. 
0, Line, //  Check that default behaviour is overridden 
0, Line, //  no op 
0, Line, // logicalOrExpression : logicalAndExpression (OR^ logicalAndExpression)*; 
0, Line, //  Unresolved type variable, potentially nested -> never insist on exact match 
0, Line, //  To be picked up by RedirectView 
0, Line, //  Indicate that we can't obtain a transactional EntityManager. 
0, Line, //  It's a prototype -> create a new instance. 
0, Line, //  what happens on (Integer,String) passed to (Integer[]) ? 
0, Line, //  increment/decrement operators - SPR-9751 
0, Line, //  but a newly retrieved bean should have the default name 
0, Line, //  AbstractBeanDefinition.prepareMethodOverrides(): 
0, Line, //  ignore if just being asked for plain Validator 
0, Line, //  The JVM opcode values (with the MethodVisitor method name used to visit them in comment, and   where '-' means 'same method name as on the previous line').   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-6.html. 
0, Line, //  Actually destroy the bean now... 
0, Line, //  SPR-15041 
0, Line, //  Should NOT roll back on ServletException 
0, Line, //  Allow for ViewResolver chaining... 
0, Line, //  Do not consider an interface or an annotation... 
0, Line, //  Look up by type and qualifier from @Transactional 
0, Line, //  RxJava2 
0, Line, //  This is the application-specific one 
0, Line, //  method and class level -> method value, even if empty, overrides 
0, Line, //  the biggest public class in the JDK (>60k) 
0, Line, //  Store the offset of 'signature_index', and the value of 'index' and 'start_pc'. 
0, Line, //  SPR-10859 
0, Line, //  by the Spring AOP infrastructure after the first evaluation. 
0, Line, //  variable access returning array 
0, Line, //  JSR-107 support should create an exception cache resolver with the cache manager   and there is no way to set that exception cache resolver from the namespace 
0, Line, //  @@protoc_insertion_point(builder_scope:Msg) 
0, Line, //  Score related 
0, Line, //  should handle Regular (exact) and VIP (closest match) 
0, Line, //  failure scenario 
0, Line, //  found character sequence ending comment or quote 
0, Line, //  Create an array for the varargs arguments 
0, Line, //  Bind the session holder to the thread. 
0, Line, //  setAllSharedVariables methods. 
0, Line, //  RxJava1 
0, Line, //  Wrapped in Hibernate 5.2, with the constraint violation as cause 
0, Line, //  should succeed 
0, Line, //  gh-23179 
0, Line, //  Annotation.equals is reflective and pretty slow, so let's check identity and proxy type first. 
0, Line, //  Don't consume InputStream... 
0, Line, //  Otherwise, just ignore it and continue... 
0, Line, //  use of primitive as type for instanceof check - compilable 
0, Line, //  Using the following method rather than direct reflection, we   get correct handling of InvocationTargetException 
0, Line, //  Unexpectedly some invokers are still active after the receive timeout period   -> interrupt remaining receive attempts since we'd reject the messages anyway 
0, Line, //  e.g. JORAM 
0, Line, //  Now msg better be as expected even with different args 
0, Line, //  SPR-15176 
0, Line, //  no conversion required 
0, Line, //  or suppress the interface on the proxy factory 
0, Line, //  Sort lazily here, not in registerSynchronization. 
0, Line, //  Don't try autowiring by type for type Object: never makes sense,   even if it technically is a unsatisfied, non-simple property. 
0, Line, //  Can't assert it's equal to 4 as the pointcut may be optimized and only invoked once 
0, Line, //  For now I am making #this not assignable 
0, Line, //  Fall back on default, but only if the qualifier is present 
0, Line, //  Create field error with code "required". 
0, Line, //  Hibernate 5.1/5.2: manually enforce connection release mode AFTER_STATEMENT (the JTA default) 
0, Line, //  SPR-12287 
0, Line, //  private property will be accessed through getter() 
0, Line, //  When we invoke A, it's NopInterceptor will have count == 1 
0, Line, //  1. Resolve plain resource 
0, Line, //  SPR-13747 
0, Line, //  ----------------------------------------------------------------------------------------------   Methods to parse modules, fields and methods   ---------------------------------------------------------------------------------------------- 
0, Line, //  Simple key/value pairs 
0, Line, //  Register ScopeMetadataResolver if class name provided. 
0, Line, //  was **/myLang 
0, Line, //  Name of catalog for call 
0, Line, //  Recursively process any member (nested) classes first 
0, Line, //  Set the system property to something other than VALUE as a sanity   check. 
0, Line, // ---------------------------------------------------------------------   Handling of current savepoint state  --------------------------------------------------------------------- 
0, Line, //  no more ${expressions} found in string, add rest as static text 
0, Line, //  the default: queue 
0, Line, //  SPR-12286 
0, Line, //  Add handlerBlock as a successor of all the basic blocks in the exception handler range. 
0, Line, //  Returns the type_path_kind of the path element of the given index. 
0, Line, //  trailing slash is optional   trailing slash is optional 
0, Line, //  No bean definition found in this factory -> delegate to parent. 
0, Line, //  List of SqlParameter objects to be used in call execution 
0, Line, //  not encoding or the value contains no scheme - fallback to default 
0, Line, //  SPR-13615 
0, Line, //  implementing FactoryBean 
0, Line, //  Ignore attribute change... 
0, Line, //  we really want to return the proxy. 
0, Line, //  Initialize RouteMatcher before parent initializes handler mappings 
0, Line, //  URL paths found: Let's consider it a handler. 
0, Line, //  Spring's CustomBooleanEditor accepts more flag values than the JDK's default editor. 
0, Line, //  No other properties specified: check bean name. 
0, Line, //  If there was (or perhaps still is) a transaction... 
0, Line, //  Adding a 2nd cookie header should result in 2 cookies. 
0, Line, //  An unresolvable bean type, probably from a lazy bean - let's ignore it. 
0, Line, //  modified the original metadata, e.g. replacing placeholders in values... 
0, Line, //  no ConcurrentModificationException 
0, Line, //  Only paths on the default file system can be converted to a File:   Do exception translation for cases where conversion is not possible. 
0, Line, //  Finally, re-register all internal BeanPostProcessors. 
0, Line, //  Explicitly check implemented interfaces for setter/getter methods as well, 
0, Line, //  Reset transaction isolation to previous value, if changed for the transaction. 
0, Line, //  Reset 'active' flag. 
0, Line, //  6 header bytes and 2 bytes for number_of_entries. 
0, Line, //  Disallowing access to System#getenv means that our 
0, Line, //  not compatible number types 
0, Line, // ---------------------------------------------------------------------   Template methods  --------------------------------------------------------------------- 
0, Line, //  No singleton instance found -> check bean definition. 
0, Line, //  If already confirmed it cannot be a match, then return 
0, Line, //  set the target 
0, Line, //  Build Advisors for all AspectJ aspects in the bean factory. 
0, Line, //  #1 and #3 have equivalent hash codes even though equals() returns false. 
0, Line, //  Instantiate all remaining (non-lazy-init) singletons. 
0, Line, //  JTA 1.1 TransactionSynchronizationRegistry available - use it. 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods to manage line numbers   ----------------------------------------------------------------------------------------------- 
0, Line, //  Allow metaclass and other customization. 
0, Line, //  SPR-16376 
0, Line, //  Execute scripts directly against the DataSource 
0, Line, //  If an editor was found, edit the value. 
0, Line, //  Not managed (destroy has no impact).. 
0, Line, //  Use (byte[] bytes) for Eclipse 
0, Line, //  Gets additional call(s) from TransactionControl 
0, Line, //  (which causes the '::' prefix in test output) 
0, Line, //  Physically remove and close leaf nodes first (i.e., on the way back up the 
0, Line, //  Test classic error code translation. We should move there next if the exception we pass in is not one 
0, Line, //  Retrieval of bean instances 
0, Line, //  interesting! standard Inspector picks up non-void return types on indexed write methods by default 
0, Line, //  Support methods for use in "InvocableHandlerMethod" sub-class variants.. 
0, Line, //  far from ideal 
0, Line, //  Publisher<T> methods (we're the Publisher to the writeSubscriber).. 
0, Line, //  Lifecycle 
0, Line, //  Match object created by FactoryBean. 
0, Line, //  non-existent scope 
0, Line, //  Init RedirectView with WebAppCxt 
0, Line, //  SPR-16246 
0, Line, //  Should never be invoked as isRuntime returns false. 
0, Line, //  Has the existing bean definition bean marked as a framework-generated bean?
0, Line, //  Distinguish from default ListableBeanFactory behavior 
0, Line, //  SPR-12283 
0, Line, //  quote the returned message (this is the change)... 
0, Line, //  Update the absolute maximum stack size of the method. 
0, Line, //  ensure that override order is correct and that it is a singleton 
0, Line, //  Transparently remove ResourceHolder that was marked as void... 
0, Line, //  Success and error responses may use different content types 
0, Line, //  Only set parent context as parent MessageSource if no parent MessageSource   registered already. 
0, JavaDoc, /* 	 * Return if the given method name matches the mapped name.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,	 * as well as direct equality. Can be overridden in subclasses.	 * @param methodName the method name of the class	 * @param mappedName the name in the descriptor	 * @return if the names match	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
0, Line, //  Mirrors AbstractHandlerExceptionResolver in spring-webmvc... 
0, Line, //  Assume sync execution (e.g. encoding with Flux.just).. 
0, Line, //  SPR-14949 
0, Line, //  The transaction manager will flag an error if an incompatible tx already exists. 
0, Line, //  should be dynamic proxy, implementing both interfaces 
0, Line, //  We might still need view name translation for a plain error model... 
0, Line, //  Replace GOTO with GOTO_W and JSR with JSR_W. 
0, Line, //  isAnnotationInherited() does not currently traverse interface hierarchies. 
0, Line, //  Note: The forwarded resource is supposed to determine the content type itself. 
0, Line, //  Create EntityManager based on the info's vendor-specific type   (which might be more specific than the field's type). 
0, Line, //  Avoid TypeDescriptor initialization if not necessary 
0, Line, //  We know that we are optimizing so we can use the FixedStaticChainInterceptors. 
0, Line, //  Now, invoke the postProcessBeanFactory callback of all processors handled so far. 
0, Line, //  Must not be able to set enter message with return value placeholder 
0, Line, //  Note that ints is of type Collection<Integer>, but the collection returned   by createCollection() is of type Collection<Color>. Thus, 42 cannot be cast   to a Color. 
0, Line, //  Load Hibernate configuration from given location. 
0, Line, //  Note: the following 'multi-line' layout is for enhanced code readability.                 
0, Line, //  Use autowire-capable factory in order to support extended qualifier matching   (only exposed on the internal BeanFactory, not on the ApplicationContext). 
0, Line, //  *sigh* complicated   Basically.. we have to have all parameters match up until the varargs one, then the rest of what is   being provided should be   the same type whilst the final argument to the method must be an array of that (oh, how easy...not) -   or the final parameter   we are supplied does match exactly (it is an array already). 
0, Line, //  InlineMap 
0, Line, //  Expose RequestContext?
0, Line, //  We could not find it - got to look it up. 
0, Line, //  Update the Http client so that it returns an updated  config 
0, Line, //  no ApplicationContextInitializers have been declared -> nothing to do 
0, Line, //  Save previous nestedPath value, build and expose current nestedPath value.   Use request scope to expose nestedPath to included pages too. 
0, Line, //  Now repeat with GET 
0, Line, //  However, if it is not compliant, do remove the improper trailing slash! 
0, Line, //  --- 4xx Client Error --- 
0, Line, //  multi annotations 
0, Line, //  No transactional event execution at all 
0, Line, //  Check whether aspect is enabled (to cope with cases where the AJ is pulled in automatically) 
0, Line, //  This isn't serializable 
0, Line, //  August: 31 days and not a daylight saving boundary 
0, Line, //  Deserialize superclass fields. 
0, Line, //  Evaluate it using a 'standard' context 
0, Line, //  + 1 for states call! 
0, Line, //  Placeholders not resolvable or resource not found when trying to open it 
0, Line, //  Since it is impossible to determine the actual type of a type   parameter (!), we resort to requiring the caller to provide the   actual type as parameter, too.   Not set in a constructor to enable easy CGLIB-proxying (passing   constructor arguments to Spring AOP proxies is quite cumbersome). 
0, Line, //  And then mock the file changing; i.e. the File says it has been modified 
0, Line, //  but findAnnotationDeclaringClassForTypes() should still find it on classes. 
0, Line, //  Track write listener calls from here on.. 
0, Line, //  JMX-kind 
0, Line, //  NameReverter saved it back 
0, Line, //  No caching required, only call the underlying method 
0, Line, //  skip - already processed in first phase above 
0, Line, //  Convert elements to target type, if determined. 
0, Line, //  multipart file field 
0, Line, //  SPR-11308 
0, Line, //  */* < audio/* 
0, Line, //  Web and Scopes 
0, Line, //  Knock out dynamic part 
0, Line, //  Now add a new translator and verify it wins 
0, Line, //  Unknown Number subtypes -> best guess is double division 
0, Line, //  HTTP 1.1 header 
0, Line, //  Custom methods 
0, Line, //  parseCheck("{1,2,3,4,5,6,7,8,9,10}.!{#isEven()}");   } 
0, Line, //  private class Servlet3SecurityContextHolderAwareRequestWrapper extends SecurityContextHolderAwareRequestWrapper 
0, Line, //  Create and visit the first (implicit) frame. 
0, Line, //  only supported as an output format 
0, Line, //  Match raw bean instance (might be raw FactoryBean). 
0, Line, //  Get back arrays of single elements 
0, Line, //  ----------------------------------------------------------------------------------------------   Methods to parse annotations, type annotations and parameter annotations   ---------------------------------------------------------------------------------------------- 
0, Line, //  Throw fallback producer exception since original was probably NoSuchBeanDefinitionException.
0, Line, //  escaped ":" should be skipped 
0, Line, //  No proxy needed. 
0, Line, //  New in Spring 3.0: resolve placeholders in embedded values such as annotation attributes. 
0, Line, //  Process captures   SPR-8455 
0, Line, //  first code valid 
0, Line, //  Same object is equal 
0, Line, //  Used by DefaultClientResponseBuilder 
0, Line, //  Servlet* PropertySources have precedence over System* PropertySources 
0, Line, //  write method 
0, Line, //  Massage return value if necessary. 
0, Line, //  Full qualifier matching supported. 
0, Line, //  Main assignability check about to follow 
0, Line, //  e.g. Jackson's JsonMappingException, indicating an incomplete payload 
0, Line, //  Could still be a custom variant of a convention-compatible ClassLoader 
0, Line, //  Original handler must have been invoked as well... 
0, Line, //  Could not possibly contain a currency code ->   try with locale and likely let it fail on parse. 
0, Line, //  Also expose methods from java.lang.Class itself 
0, Line, // -------------------------------------------------------------------------   Management of paused tasks  ------------------------------------------------------------------------- 
0, Line, //  Apply transaction name (if any) to WebLogic transaction. 
0, Line, //  TODO: Object.class if unresolvable
0, Line, //  nested map 
0, Line, //   The constructor arguments are name, birthday, and nationaltiy. 
0, Line, //  Override global attribute with local attribute. 
0, Line, //  No shutdown hook registered yet. 
0, Line, //  gh-22576 
0, Line, //  Now... we have the final argument in the method we are checking as a match and we have 0   or more other arguments left to pass to it. 
0, Line, //  Checking that the "test class" name ends with "*Tests" ensures that an actual   test class is passed to this method as opposed to a "*Config" class which would   imply that we likely have been passed the 'declaringClass' instead of the   'rootDeclaringClass'. 
0, Line, //  lookup foo on the root, then bar on that, then use that as the key into 
0, Line, //  Determine bean scope. 
0, Line, //  Non-null value but no obvious equality with the candidate value: 
0, Line, //  @Autowired 
0, Line, //  replace 'local' with new property source 
0, Line, //  result == "2" 
0, Line, //  non-static method 
0, Line, //  Check to see if CachedIntrospectionResults is delegating to ExtendedBeanInfo as expected 
0, Line, //  May need to resolve contained runtime references. 
0, Line, //  Does the actual (non-CGLIB) superclass implement BeanFactoryAware?   If so, call its setBeanFactory() method. If not, just exit. 
0, Line, //  If the types are equal, merge(sourceType, dstType) = dstType, so there is no change. 
0, Line, //  Check property-specific editor first. 
0, Line, //  Remove since we will be re-inserting the resolved attribute value 
0, Line, //  UserTransaction has already been obtained from JNDI, so the   TransactionSynchronizationRegistry probably sits there as well. 
0, Line, //  Adapt default cache level. 
0, Line, //  Clear interruptions to ensure that the consumer closes successfully...   (working around misbehaving JMS providers such as ActiveMQ) 
0, Line, //  Evaluate the specified MessageSourceResolvable, if any. 
0, Line, //  We couldn't find the parameter value... 
0, Line, //  Ignoring failure due to missing result, consider the cache put has to proceed 
0, Line, //  non-abstract bean should work, even if it serves as parent 
0, Line, //  See java.beans.PropertyDescriptor#PropertyDescriptor(PropertyDescriptor) 
0, Line, //  Check fixed rate 
0, Line, //  ConstantValue attributes always use 8 bytes. 
0, Line, //  May happen e.g. with Groovy-generated methods 
0, Line, //  Check transport connection first... 
0, Line, //  Not allowed to change the transaction settings of the JDBC Connection. 
0, Line, //  Autodetect any beans that are already MBeans. 
0, Line, //  SPR-15795 
0, Line, //  hotel.getId() == 42   hotel.getName().equals("Holiday Inn") 
0, Line, //  public class SecurityContextHolderAwareRequestWrapper extends HttpServletRequestWrapper 
0, Line, //  Test on full templates 
0, Line, //  static getter 
0, Line, //  We already validated the parameter above... 
0, Line, // ---------------------------------------------------------------------------------------   Convenience methods for sending messages  --------------------------------------------------------------------------------------- 
0, Line, //  left cannot be null at this point 
0, Line, //  If the WebApplicationContext has no parent or the parent is not a WebApplicationContext,   set the current context as the root WebApplicationContext: 
0, Line, //  Should wipe the cache. 
0, Line, //  SPR-17094 
0, Line, //  Else use the AOP_PROXY. 
0, Line, //  No other order guarantees for methods with unresolvable dependencies (and methods that depend on them),   Required dependencies will be created via default constructor. 
0, Line, //  any client frame other than CONNECT 
0, Line, //  Invert the order if it is a reverse sort. 
0, Line, //  Look for arg-type match elements. 
0, Line, //  Skip the ClassFile's attributes_count field. 
0, Line, //  parseCheck("{'a','b',null,'d',null}.nonNull()");   }   
0, Line, //  Map entry iteration is less expensive to initialize than forEach with lambdas 
0, Line, //  Iterate over the declared RowMappers and register the corresponding SqlParameter 
0, Line, //  assertNull(bf.getBean(AssemblerInjection.class).assembler1);  TODO: accidental match   assertNull(bf.getBean(AssemblerInjection.class).assembler2); 
0, Line, //  e.g. on Postgres: getObject returns a PGObject but we need a String 
0, Line, //  Else rethrow to conform to the contracts of TestExecutionExceptionHandler and LifecycleMethodExecutionExceptionHandler 
0, Line, //  Iterate over a copy to allow for init methods which in turn register new bean definitions.   While this may not be part of the regular factory bootstrap, it does otherwise work fine. 
0, Line, //  Register default template loaders. 
0, Line, //  getAnnotation() does not search on interfaces 
0, Line, //  evals to 2147483647 
0, Line, //  Unknown exception, typically a wrapper with a common MVC exception as cause   (since @ExceptionHandler type declarations also match first-level causes):   We only deal with top-level MVC exceptions here, so let's rethrow the given   exception for further processing through the HandlerExceptionResolver chain.
0, Line, //  SPR-12634 
0, Line, //  SPR-12501 
0, Line, //  printAst(expr.getAST(),0); 
0, Line, // ---------------------------------------------------------------------   BodyTag implementation  --------------------------------------------------------------------- 
0, Line, //  Test fallback. We assume that no database will ever return this error code,   but 07xxx will be bad grammar picked up by the fallback SQLState translator 
0, Line, //  @@protoc_insertion_point(outer_class_scope) 
0, Line, //  SPR-13135 
0, Line, //  Fall back to getObject without type specification, again 
0, Line, //  SPR-9807 
0, Line, //  RFC 6265 
0, Line, //  Allow a subclass to provide custom initialization of the reader, 
0, Line, //  They are reusable 
0, Line, //  gh-22447 
0, Line, //  We don't need an IntroductionAdvisor for this kind of introduction:   It's fully self-describing. 
0, Line, //  '$' in the class name but no inner class -   assuming it's a special subclass (e.g. by OpenJPA) 
0, Line, //  The following can also be used to directly access the   environment instead of relying on placeholder replacement.   @Value("#{ environment['enigma'] }") 
0, Line, //  SPR-10105 
0, Line, //  Pointing to existing alias - just remove placeholder 
0, Line, //  No client or server specific multipart writers currently.. 
0, Line, // consume OR 
0, Line, //  Is the stream closed?
0, Line, //  assert: SpelCompiler.boxingCompatible(leftDesc, rightDesc) 
0, Line, //  the default: same value as pubSubDomain 
0, Line, //  nop 
0, Line, //  Parse exclude and include filter elements. 
0, Line, //  Consider changing this if live change of the factory is required... 
0, Line, //  Only really happens on JBoss 4.2 in case of an early timeout...   Explicit rollback call necessary to clean up the transaction.   IllegalStateException expected on JBoss; call still necessary. 
0, Line, // -------------------------------------------------------------------------   Implementation of the JCA WorkManager interface  ------------------------------------------------------------------------- 
0, Line, // ---------------------------------------------------------------------   Implementation of BeanDefinitionRegistry  --------------------------------------------------------------------- 
0, Line, //  SPR-16731 
0, Line, //  we may have found some var names that were bound in previous primitive args binding step,   filter them out... 
0, Line, //  Silently skip non-existing directories. 
0, Line, //  Create and/or resize the output local variables array if necessary. 
0, Line, //  User sessions from "this" registry only (i.e. one server) 
0, Line, //  -----------------------------------------------------------------------------------------------   Default method to compute common super classes when computing stack map frames   ----------------------------------------------------------------------------------------------- 
0, Line, //  Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear. 
0, Line, //  ArrayList containing List<String> to List<Integer> 
0, Line, //  Delete first and last characters of value: { and } 
0, Line, //  "[[I" or "[[Ljava.lang.String;" style arrays 
0, Line, //  should re-propagate updated attribute 
0, Line, //  Fields for the control flow and data flow graph analysis algorithms (used to compute the   maximum stack size or the stack map frames). A control flow graph contains one node per "basic   block", and one edge per "jump" from one basic block to another. Each node (i.e., each basic   block) is represented with the Label object that corresponds to the first instruction of this   basic block. Each node also stores the list of its successors in the graph, as a linked list of   Edge objects.     The control flow analysis algorithms used to compute the maximum stack size or the stack map   frames are similar and use two steps. The first step, during the visit of each instruction,   builds information about the state of the local variables and the operand stack at the end of   each basic block, called the "output frame", <i>relatively</i> to the frame state at the   beginning of the basic block, which is called the "input frame", and which is <i>unknown</i>   during this step. The second step, in {@link MethodWriter#computeAllFrames} and {@link   MethodWriter#computeMaxStackAndLocal}, is a fix point algorithm   that computes information about the input frame of each basic block, from the input state of   the first basic block (known from the method signature), and by the using the previously   computed relative output frames.     The algorithm used to compute the maximum stack size only computes the relative output and   absolute input stack heights, while the algorithm used to compute stack map frames computes   relative output frames and absolute input frames.
0, Line, //  Note: JBoss throws plain RuntimeException with RollbackException as cause. 
0, Line, //  SPR-16863 
0, Line, //  Try variable resolution against target type 
0, Line, //  no class-level annotation 
0, Line, //  Compute the concrete types of the stack operands at the end of the basic block corresponding   to this frame, by resolving its abstract output types, and merge these concrete types with 
0, Line, //  Subclass of RemoteException 
0, Line, //  May return early, but at least we already cancelled all known Timers. 
0, Line, //  check reinitialization 
0, Line, //  The following call to enigma() literally invokes the local   enigma() method, not a CGLIB proxied version, since these methods   are essentially factory bean methods. 
0, Line, //  Message converters 
0, Line, //  SPR-12226 and SPR-12660 
0, Line, //  No defineClass variant available at all?
0, Line, //  Get directly from Target 
0, Line, //  must not kick in for map keys but rather only for map values. 
0, Line, //  Complain louder if it exists but is no directory. 
0, Line, //  SPR-2158 
0, Line, //  OpLT 
0, Line, // registrar.setMappedObjectNames(new Object[] {objectName, objectName2}); 
0, Line, //  Check if we have a cached item matching the conditions 
0, Line, //  SPR-13139 
0, Line, //  Visit the InnerClasses attribute. 
0, Line, //  IMPORTANT! Here we assume that the frames are ordered, as in the StackMapTable attribute,   although this is not guaranteed by the attribute format. This allows an incremental   extraction of the labels corresponding to this attribute (see the comment above for the   StackMapTable attribute).
0, Line, //  some custom static bloc or <clinit> 
0, Line, //  Private methods for use in State... 
0, Line, //  the following assertions fail only during coverage runs   assertEquals(1, pu2.getJarFileUrls().size());   assertEquals(new ClassPathResource("order-supplemental.jar").getURL(), pu2.getJarFileUrls().get(0)); 
0, Line, //  Parse the rest of the type_annotation structure, starting with the target_path structure 
0, Line, //  OperatorNot 
0, Line, //  Subscriber<Void> implementation 
0, Line, //  OK, so no JTA 1.1 TransactionSynchronizationRegistry is available... 
0, Line, //  Should wipe the cache 
0, Line, //  Take getMessageConverters() List as-is when passed in here 
0, Line, //  SPR-16868 
0, Line, //  null is not an instanceof anything 
0, Block, /*  this test case consists entirely of tests loaded as a suite.  */
0, Line, //  does not throw an exception 
0, Line, //  Locking should be independent; nop is shared 
0, Line, //  Parse and create the argument types, one at each loop iteration. 
0, Line, // 	    | constructor 
0, Line, //  now unwrap scoped proxy 
0, Line, //  if the introduced method throws an exception. 
0, Line, //  SPR-12894 
0, Line, //  ScopedProxyFactoryBean's "proxyTargetClass" default is TRUE, so we don't need to set it explicitly here. 
0, Line, //  SPR-16734 
0, Line, //  SPR-16601 
0, Line, //  we DON'T want the default SimpleMessageConversion happening... 
0, Line, //  Determine default... 
0, Line, //  Indicates that the chosen instantiation strategy does not work on the given JVM.   Typically a failure to initialize the default SunReflectionFactoryInstantiator.   Let's assume that any subsequent attempts to use Objenesis will fail as well... 
0, Line, //  from ApplicationListenerDetector (singleton beans and inner beans). 
0, Line, //  Create 100 sessions 
0, Line, //  Create the MethodInvocation clone. 
0, Line, //  java.beans.Introspector returns the "wrong" declaring class for overridden read   methods, which in turn violates expectations in {@link ExtendedBeanInfo} regarding   method equality. Spring's {@link ClassUtils#getMostSpecificMethod(Method, Class)}   helps out here, and is now put into use in ExtendedBeanInfo as well.
0, Line, //  We need to get a reference to the client-side targetsource 
0, Line, //  Registry binding failed: let's unexport the RMI object as well. 
0, Line, //  Load bean definitions from resource bundle. 
0, Line, //  If dstType is any other type, merge(srcType, dstType) = TOP whatever srcType. 
0, Line, //  Only accept unnamed parameters for index matches. 
0, Line, //  Update the successor blocks of basicBlock in the control flow graph. 
0, Line, //  Remaining transaction timeout overrides specified value. 
0, Line, //  strange - FSXAC strips leading '/' unless prefixed with 'file:' 
0, Line, //  marker object for classes that do not have any debug info 
0, Line, //  Otherwise, assume that externally provided factory has been initialized with appropriate settings 
0, Line, //  SPR-8867 
0, Block, /*  Do Nothing  */
0, Line, //  - The string corresponding to the ModuleMainClass attribute, or null. 
0, Line, //  SPR-16604 
0, Line, //  unary expressions 
0, Line, //  primary differentiation 
0, Line, //  When the condition is an empty string 
0, Line, //  But the event was not actually published since the ApplicationContext 
0, Line, //  Marshalling 
0, Line, //  Ignore, after send failure 
0, Line, //  For testing we want more control of the hash 
0, Line, //  instantiation is sufficient to trigger failure if this is going to fail... 
0, Line, //  properly create the remaining two instances 
0, Line, //  Allow post-processors to modify the merged bean definition. 
0, Line, //  Delegate the current ResourceLoader to it if possible 
0, Line, //  beans are registered at this point - just grab them from the server 
0, Line, //  Call coming in through InfrastructureProxy interface... 
0, Line, //  We may need additional runtime (argument) check. 
0, Line, //  Compare the values. 
0, Line, //  Check that listInstance is not considered a bean of type FactoryMethods. 
0, Line, //  typical classes). 
0, Line, //  Check whether we got an absolute file path without "file:" prefix.   For backwards compatibility, we'll consider those as straight file path. 
0, Line, //  Visit the SourceFile and SourceDebugExtenstion attributes. 
0, Line, //  SPR-16869 
0, Line, //  Invocation on EntityManager interface coming in... 
0, Line, //  no occurrence -> can return input as-is 
0, Line, //  SPR-9098 
0, Line, //  We need to visit all indexed annotations. 
0, Line, //  verification!?
0, Line, //  SPR-11560 
0, Line, //  prove that the processor chokes on the invalid key 
0, Line, //  Try field lookup as fallback: for JDK 1.5 enum or custom enum   with values defined as static fields. Resulting value still needs   to be checked, hence we don't return it right away. 
0, Line, //  Case of an element_value with an annotation_value field.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1. 
0, Line, //  Let it throw raw if the type of the exception is on the throws clause of the method. 
0, Line, //  check position for OperatorAnd 
0, Line, //  1. Set properties 
0, Line, //  Visit the class declaration. The minor_version and major_version fields start 6 bytes before 
0, Line, //  TODO SPR-6310: qualify relative path locations as done in AbstractContextLoader.modifyLocations
0, Line, //  Passing (int,String) on call to foo(Integer,String) requires boxing conversion of argument zero 
0, Line, //  Using nullSafeEquals for proper array equals comparisons 
0, Line, //  In Gson, toJson with a type argument will exclusively use that given type,   ignoring the actual type of the object... which might be more specific,   e.g. a subclass of the specified type which includes additional fields.   As a consequence, we're only passing in parameterized type declarations   which might contain extra generics that the object instance doesn't retain. 
0, Line, //  Don't try again 
0, Line, //  SPR-13883 
0, Line, //  User exception was the root cause - exit now 
0, Line, //  Retrieve existing registry. 
0, Line, //  jackson-datatype-joda not available 
0, Line, //  avoiding inserting checkcast because first part of expression returns a Map 
0, Line, //  SPR-11692 
0, Line, //  assume an index otherwise 
0, Line, //  "offset_delta + 1" rule in all cases. 
0, Line, //  previous and current block references and list of successors. 
0, Line, //  Fall back... 
0, Line, //  ignore - we'll try ValidatorFactory unwrapping next 
0, Line, //  Process default methods on interfaces 
0, Line, //  This should work as SerializablePerson is equal 
0, Line, //  Fall through to loadable check below 
0, Line, //  Must not be able to set empty exception message 
0, Line, //  ConstructorReference 
0, Line, //  set because of @SesstionAttributes 
0, Line, //  const_value_index, CONSTANT_Utf8 
0, Line, //  Create a new collection or map ready for the indexer 
0, Block, /* 	 * See SPR-8543	  */
0, Line, //  register the pointcut 
0, Line, //  and fixedCallbacks into the callbacks array. 
0, Line, //  This suffix does not close the initial prefix but rather   just one that occurred within the property name. 
0, Line, //  Consider any CharSequence (including StringBuffer and StringBuilder) as a String. 
0, Line, //  SPR-11919 
0, Line, //  --- Given --- 
0, Line, //  only on attempt as the second one lead to a recovery 
0, Line, //  Check META-INF folder 
0, Line, //  Check whether there is a reference to shared environment properties... 
0, Line, //  do nothing 
0, Line, //  If we don't run out of memory, then this test is a success. 
0, Line, //  Check printStackTrace 
0, Line, //  SPR-11917 
0, Line, //  class, field, method 
0, Line, //  Unexpected exception from external delegation call -> close Connection and rethrow. 
0, Line, //  Method handling 
0, Line, //  Order is very important: must add superclass, then   its superclass chain, then each interface and   its superinterfaces. 
0, Line, //  No unclosed prefix(es) in the property name (left) ->   this is the suffix we are looking for. 
0, Line, //  Hessian 4.0 check: another layer of InvocationTargetException. 
0, Line, //  SPR-9657, SPR-11504 
0, Line, //  clean start so that simpleBean is included 
0, Line, //  Meta-annotation or (default) value lookup on an annotation type 
0, Line, //  SPR-12149 
0, Block, /* 	 * Oracle-based implementation for detecting the current schema.	  */
0, Line, //  Exercise the comparator invocation code that runs in   equalityCheck() (called from interpreted and compiled code) 
0, Line, //  Holds the compiled form of the expression (if it has been compiled) 
0, Line, // SPR-16921 
0, Line, //  Add constructor arguments. 
0, Line, //  Escaped prefix -> use plain value. 
0, Line, //  Create attribute instance 
0, Line, //  Read the provides_index, provides_with_count and provides_with_index fields and visit them. 
0, Line, //  Check whether an actual close attempt is necessary... 
0, Line, //  SPR-13620 
0, Line, //  worked when using an ApplicationContext (see commented), fails when using BeanFactory 
0, Line, //  Haven't yet been into second branch 
0, Line, //  Proof that the @Value field did not get set: 
0, Line, //  Check for file with language and country localization. 
0, Line, //  The (start_pc, index, signature_index) fields of each entry of the LocalVariableTypeTable. 
0, Line, //  By setting setDefaultReadOnly(true), the user can no longer modify any entity... 
0, Line, //  Returned resource path does not start with relative directory:   assuming absolute path returned -> strip absolute path. 
0, Line, //  If no DefaultListableBeanFactory, can't pass the resolver along. 
0, Line, //  The user has provided a custom LoadTimeWeaver instance 
0, Line, //  Verifying 'parameterized' support: 
0, Line, //  qualifier annotations have to be local 
0, Block, /* 					weblogic.transaction.UserTransaction wut = (weblogic.transaction.UserTransaction) ut;					wut.begin(definition.getName());					 */
0, Line, //  Use ObjectInputStream's default ClassLoader... 
0, Line, //  Fall back on bean definition attribute 
0, Line, // ---------------------------------------------------------------------   Implementation of PlatformTransactionManager  --------------------------------------------------------------------- 
0, Line, //  Direct match?
0, Line, //  Test empty String 
0, Line, //  Note: @Transactional is inherited 
0, Line, //  Try a URL connection content-length header 
0, Line, //  Handling of IPv6 hosts as described in SPR-13525 
0, Line, //  private class, can't compile it 
0, Line, //  = 2 invocations 
0, Line, //  -----------------------------------------------------------------------------------------------   Public methods   ----------------------------------------------------------------------------------------------- 
0, Line, //  Check for Windows-style path 
0, Line, //  gh-23297 
0, Line, //  must be idempotent (i.e. the following lookup must still work); 
0, Line, //  Alright, not on this interface then... 
0, Line, //  SPR-14952 
0, Line, //  Do this first, it may add ResponseBodyAdvice beans 
0, Line, //  Can remove 
0, Line, //  Remove the entity manager holder from the thread. 
0, Line, //  Let the subclass process the properties. 
0, Line, //  Use given NumberFormat for parsing text. 
0, Line, //  Set the local variable. 
0, Line, //  instance method BFPP interferes with lifecycle -> autowiring fails!   WARN-level logging should have been issued about returning BFPP from non-static @Bean method 
0, Line, //  session created 
0, Line, //  method with changing parameter types (change reference type) 
0, Line, //  If successorBlock has changed it must be processed. Thus, if it is not already in the   list of blocks to process, add it to this list. 
0, Line, //  SPR-12013 
0, Line, //  will be managed correctly even if no transaction was created by this aspect. 
0, Line, //  equals, hashCode, toString 
0, Line, //  The config classes that imported this one were all skipped, therefore we are skipped... 
0, Line, //  Do the insert 
0, Line, //  2 bytes each for access_flags, name_index, descriptor_index and attributes_count. 
0, Line, //  Allow for matching with regular UnionMethodMatcher by providing same hash... 
0, Line, //  - and make sure to NOT assign 'label' into 'currentBasicBlock' or 'lastBasicBlock', so 
0, Line, //  abstract bean should throw exception on creation attempt 
0, Line, //  empty map '{:}' 
0, Line, //  Resolve merged bean definition locally. 
0, Line, //  All reflection-detected methods found in ASM method set -> proceed 
0, Line, //  If this gets changed, it must remain sorted... 
0, Line, //  Get the names of the meta-data parameters 
0, Line, //  get the bean again from the BF 
0, Line, //  Third step: replace the ASM specific instructions, if any. 
0, Line, //  SPR-10714 
0, Line, //  SPR-16252 
0, Line, //  go into more exhaustive comparisons. 
0, Line, //  Ignore: indicates a reference back to the bean we're trying to advise.   We want to find advisors other than the currently created bean itself. 
0, Line, //  SPR-9317 
0, Line, //  Use prototype bean definition, to avoid registering bean as dependent bean. 
0, Line, //  try another time, this time using Strings 
0, Line, //  SPR-13757 
0, Line, //  Candidate class not an ImportSelector or ImportBeanDefinitionRegistrar ->   process it as an @Configuration class 
0, Line, //  Continue since the BytesMessage typically won't be used any further. 
0, Line, //  Don't add advisors to an empty list; may indicate that proxying is just not required 
0, Line, //  Otherwise pick concrete media type 
0, Line, //  gh-22936 
0, Line, //  ACC_DEPRECATED is ASM specific, the ClassFile format uses a Deprecated attribute instead. 
0, Line, //  Async support options 
0, Line, //  give other interceptors a chance to handle the timeout 
0, Line, //  Write 
0, Line, //  SPR-10848 
0, Line, //  just want to ensure that it doesn't bomb 
0, Line, //  No restriction of HTTP methods by default,   in particular for use with annotated controllers... 
0, Line, //  There might be multiple 'best patterns', let's make sure we have the correct URI template variables 
0, Line, //  will remove di 
0, Line, //  - The offset of the LocalVariableTable attribute, or 0. 
0, Line, //  concrete types 
0, Line, //  Process any @ImportResource annotations 
0, Line, //  Level 2 
0, Line, // ---------------------------------------------------------------------   Implementation of MailSender  --------------------------------------------------------------------- 
0, Line, //  Fails!
0, Line, //  see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getProperties() 
0, Line, //  Corresponding qualifier on factory method? (typically in configuration class)
0, Line, //  If only one of the advisor (but not both) is PointcutAdvisor, then it is a mismatch.   Takes care of the situations where an IntroductionAdvisor is used (see SPR-3959). 
0, Line, //  evaluates to false 
0, Line, //  method that gets type converted parameters 
0, Block, /* 	 * Controllers	  */
0, Line, //  Detect a LoadTimeWeaver and prepare for weaving, if found. 
0, Line, //  Check locale-independent common messages for the given message code. 
0, Line, // ---------------------------------------------------------------------   Implementation of ReactiveTransactionManager  --------------------------------------------------------------------- 
0, Line, //  SPR-13626 
0, Block, /* 			* If useNewConnection is true, then we obtain a non-managed connection so our modifications			* are handled in a separate transaction. If it is false, then we use the current transaction's			* connection relying on the use of a non-transactional storage engine like MYISAM for the			* incrementer table. We also use straight JDBC code because we need to make sure that the insert			* and select are performed on the same connection (otherwise we can't be sure that last_insert_id()			* returned the correct value).			 */
0, Line, // assertFalse(em.getTransaction().isActive()); 
0, Line, //  Fulfill all the parameter requirements except the last one 
0, Line, //  Close the state of this context itself. 
0, Line, //  Build JobDetail instance. 
0, Line, //  Some unknown type desired -> rely on getObject. 
0, Line, //  Check that the perclause pointcut is valid 
0, Line, //  Set the given MBeanServerForwarder, if any. 
0, Line, // evaluate("aVarargsMethod('a')", 1, Integer.class); 
0, Line, //  assert that only static OR non static are set, but not both or none 
0, Line, //  VOID-RETURNING, NON-INDEXED write method 
0, Line, //  Only consider bean as eligible if the bean name   is not defined as alias for some other bean. 
0, Line, //  Cache editor for search type, to avoid the overhead   of repeated assignable-from checks. 
0, Line, //  Check name as-is 
0, Line, //  Note: not actually invoked within a transaction since the test class is   annotated with @MetaTxWithOverride(propagation = NOT_SUPPORTED) 
0, Line, //  SPR-13627 
0, Line, //  OpAnd 
0, Line, //  Evaluate the "spring.objenesis.ignore" property upfront... 
0, Line, //  Key should be coerced to string representation of 42 
0, Line, //  Found a matching TargetSource. 
0, Line, //  Check whether the UserTransaction or TransactionManager implements it... 
0, Line, //  Passing (Sub,String) on call to foo(Super,String) is close match 
0, Line, //  Pass custom isolation level on to EclipseLink's DatabaseLogin configuration   (since Spring 4.1.2) 
0, Line, //  First, invoke the BeanFactoryPostProcessors that implement PriorityOrdered. 
0, Line, //  -----------------------------------------------------------------------------------------------   Type table entries management.   ----------------------------------------------------------------------------------------------- 
0, Line, //  Note: the following 'multi-line' layout is for enhanced code readability.                             
0, Line, //  not changed 
0, Line, //  Only non-simple types, even if not annotated 
0, Line, //  Thus the following, though perhaps counter intuitive, must be false: 
0, Line, //  Try LocaleResolver (we're within a DispatcherServlet request). 
0, Line, //  A configuration class may not be final (CGLIB limitation) unless it declares proxyBeanMethods=false 
0, Line, //  Level 1 
0, Line, //  Create alias 
0, Line, //  GZIP response found - need to unzip. 
0, Line, //  Use Arrays.hashCode since ObjectUtils doesn't comply to to   Annotation#hashCode() 
0, Line, //  Create new session if necessary. 
0, Line, //  Create EntityManager based on the field's type. 
0, Line, //  stack: right/left(1or2slots) 
0, Line, //    suite of tests root requests for default servlets (SRV 11.2) on Websphere vs Tomcat and other containers   see: https://jira.springframework.org/browse/SPR-7064   
0, Line, //  Should never be called since we return "true" from isAsyncReturnValue 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods to get Type(s) from a descriptor, a reflected Method or Constructor, other types, etc.   ----------------------------------------------------------------------------------------------- 
0, Line, //  Take any bean name that we can determine URLs for. 
0, Line, //  Still more specific class 
0, JavaDoc, /*  * This class can be used to parse other classes containing constant definitions * in public static final members. The {@code asXXXX} methods of this class * allow these constant values to be accessed via their string names. * * <p>Consider class Foo containing {@code public final static int CONSTANT1 = 66;} * An instance of this class wrapping {@code Foo.class} will return the constant value * of 66 from its {@code asNumber} method given the argument {@code "CONSTANT1"}. * * <p>This class is ideal for use in PropertyEditors, enabling them to * recognize the same names as the constants themselves, and freeing them * from maintaining their own mapping. * * @author Rod Johnson * @author Juergen Hoeller * @since 16.03.2003  */
0, Line, //  number of cache seconds 
0, Line, //  else, let EmbeddedDatabaseFactory use the default "testdb" name 
0, Line, //  N.B. this will sometimes fail if you use classpath: instead of classpath*:.   The result depends on the classpath - if test-classes are segregated from classes   and they come first on the classpath (like in Maven) then it breaks, if classes   comes first (like in Spring Build) then it is OK.
0, Line, //  propagated to callers but the transaction still considered as committed. 
0, Line, //  basic conversion int>String 
0, Line, //  Explicit bean name found. 
0, Line, //  Swallow - let original exception get through 
0, Line, //  Instance methods 
0, Line, //  Recalculate taking into account count inside lock and items that   will be purged 
0, Line, //  try with exceptional 
0, Line, //  First step: compute the number of argument types in methodDescriptor. 
0, Line, //  Lazily prepare service and stub if necessary. 
0, Line, //  Read the attribute_info's attribute_name and attribute_length fields. 
0, Line, //  Not an incrementer so it must be a range (possibly empty) 
0, Line, //  Additional candidate with same length 
0, Line, //  ignore - might be an unresolved placeholder or non-existing base directory 
0, Line, //  Publish the final event. 
0, Line, //  Array required -> apply appropriate conversion of elements. 
0, Line, //  test property set (tb.name) 
0, Line, //  Create field error with the exceptions's code, e.g. "typeMismatch". 
0, Line, //  Set enhanced subclass of the user-specified bean class 
0, Line, //  Expose the form object name for nested tags... 
0, Line, //  try to reuse 
0, Line, //  Register alias for backwards compatibility with 4.1 
0, Line, //  should not be called, since we override canConvertFrom/canConvertTo instead 
0, Line, //  This had better be a Bad SQL Grammar code 
0, Line, //  Steps in the binding algorithm... 
0, Line, //  does not exist 
0, Line, //  Handle close method: only close if not within a transaction. 
0, Line, //  Read the switch labels. 
0, Line, //  Shouldn't happen 
0, Line, //  SPR-14828 
0, Line, //  In case of FactoryBean, return prototype status of created object. 
0, Line, //  Now copy both the callbacks from mainCallbacks 
0, Line, //  SPR-16124 
0, Line, //  has the concrete child bean values 
0, Line, //  Use request configuration given by the user, when available 
0, Line, //  Transaction rollback   Oracle: deadlock 
0, Line, //  RouterFunctions.Visitor 
0, Line, //  This will call the varargs concat with an empty array 
0, Line, //  Now fast-forward by 31 minutes 
0, Line, //  Generate the proxy class and create a proxy instance. 
0, Line, //  blocks ending with JSR instructions (see {@link #visitJumpInsn)} that can reach 'r'. 
0, Line, //  It may not be possible to produce a single DataBuffer synchronously 
0, Line, //  Passing (Sub) on call to (Super[]) is close match 
0, Line, // -------------------   SPR-3534 classes  ------------------- 
0, Line, //  @Transactional 
0, Line, //  queryResultString = "Nikola Tesla is a member of the IEEE Society" 
0, Line, //  Check two per-instance mixins were distinct 
0, Line, //  put exact matches on the front to be tried first? 
0, Line, //  Make a properties entry by combining bean name and property. 
0, Line, //  Remove the session holder from the thread. 
0, Line, //  copy autowire settings from original bean definition. 
0, Line, //  Not necessary to cast if the target & bridge have   the same return type.   (This conveniently includes void and primitive types,   which would fail if casted.  It's not possible to   covariant from boxed to unbox (or vice versa), so no having   to box/unbox for bridges).   TODO: It also isn't necessary to checkcast if the return is   assignable from the target.  (This would happen if a subclass   used covariant returns to narrow the return type within a bridge
0, Line, //  SPR-16166: top-level JSON values 
0, Line, //  Hessian 2.0 stream 
0, Line, //  this should not match because of the administratorT 
0, Line, //  Reproducing bug requires that the class specified in target() pointcut doesn't   include the advised method's implementation (instead a base class should include it) 
0, Line, //  with the possible next task element 
0, Line, //  JPA 2.0: handle unwrap method - could be a proxy match. 
0, Line, //  emulate what happens when BFPPs are added to an application context: It's LIFO-based 
0, Line, //  3.4L - not allowed 
0, Line, //  Superclass found, return its annotation metadata and recurse 
0, Line, //  SPR-14470 
0, Line, //  and then the MessageConsumer gets created... 
0, Line, //  reference is out of date. 
0, Line, //  extra slashes and spaces 
0, Line, //  Up to date 
0, Line, //  Operator precedence 
0, Line, //  Self description 
0, Line, //  Default instance to be re-used across requests, unless one is configured explicitly 
0, Line, //  skipping 
0, Line, //  Resolve system properties: e.g. "${user.dir}" 
0, Line, //  Lookup cached sub-PropertyAccessor, create new one if not found. 
0, Line, //  We have a code or default text that we need to resolve. 
0, Line, //  6 attribute header bytes, 6 bytes for name, flags and version, and 5 * 2 bytes for counts. 
0, Line, //  java.util.logging as default 
0, Line, //  Peek into the file to look for DOCTYPE. 
0, Line, //  Object 
0, Line, //  Full iteration necessary... 
0, Line, //  if null assume the problem is because the right token was   not found at the end of the expression 
0, Line, //  No re-broadcast 
0, Line, //  Target Connection already fetched,   or target Connection necessary for current operation -> 
0, Line, //  Update response 
0, Line, //  Should also remove Level 3-B, leaving only Level 1. 
0, Line, //  MultiValueMap implementation 
0, Line, //  doSuspend failed - original transaction is still active... 
0, Line, //  SPR-8858 
0, Line, //  No custom TargetSource found. 
0, Line, //  Property access on a class object 
0, Line, //  RequestPredicates.Visitor 
0, Line, //  name, create one 
0, Line, //  slightly diff here because return value isn't a list, it is a single entity 
0, Line, //  Configuration properties 
0, Line, //  look up EJB home and create method 
0, Line, //  SPR-17459 
0, Line, //  Leniently match first line due to differences between JDK 8 and JDK 9+. 
0, Line, //  Add the session identifier if needed   (Do not embed the session identifier in a remote link!) 
0, Line, //  Assume a single argument object. 
0, Line, //  In case of pre-bound Session, restore previous flush mode. 
0, Line, //  Setup the types that we want to match against 
0, Line, //  class to test naming of beans in an error message 
0, Line, //  Recursively process the configuration class and its superclass hierarchy. 
0, Line, //  -- OR -- 
0, Line, //  invoke any method on the advised proxy to see if the interceptor has been invoked 
0, Line, // -------------------------------------------------------------------------   Implementation of AbstractMessageListenerContainer's template methods  ------------------------------------------------------------------------- 
0, Line, //  Uncompilable as argument conversion is occurring 
0, Block, /*  value =  */
0, Line, //  Value not of required type?
0, Line, //  bytes respectively. 
0, Line, //  Mono empty 
0, Line, //  Base pattern matches a jar file - search for matching entries within. 
0, Line, // ((Advised) pooled).setTargetSource(new SingletonTargetSource(new SerializablePerson())); 
0, Line, //  GC could happen during restructure so we must be able to create a reference for a null entry 
0, Line, //  See org.springframework.core.env.EnvironmentSystemIntegrationTests#mostSpecificDerivedClassDrivesEnvironment_withDevEnvAndDerivedDevConfigClass 
0, Line, //  Fetch WebApplicationContext, either from DispatcherServlet or the root context. 
0, Line, //  will probably never happen, doesn't make much sense 
0, Line, //  SPR-15672 
0, Line, //  used to test invalid methods that exist in the proxy interface 
0, Line, //  Apply specific isolation level, if any. 
0, Line, //  perform simple MBean count test 
0, Line, //  a?:b (a if it isn't null, otherwise b) 
0, Line, //  We keep ViewResolvers in sorted order. 
0, Line, //  It doesn't matter if the referenced bean hasn't yet been registered: 
0, Line, //  Second pass: look for method where arguments can be converted to parameter types. 
0, Line, //  Visit the RuntimeInvisibleParameterAnnotations attribute. 
0, Line, //  Applies statically but not dynamically 
0, Line, //  If a filter is registered for this type, call it 
0, Line, //  Match all elements up to the first ** 
0, Line, //  ServletContext params are available 
0, Line, //  Postgres-style "::" casting operator should be skipped 
0, Line, //  properties 
0, Line, //  Else, compare the inner classes entry nameSymbol.info - 1 with the arguments of this method   and throw an exception if there is a difference? 
0, Line, //  those of the local variables in the input frame of dstFrame. 
0, Line, //  Transaction active but no synchronization active. 
0, Line, //  SPR-12624 
0, Line, //  Add a new element to the list 
0, Line, //  Not using "parseMimeType" to avoid static init cost 
0, Line, //  Find all translators, being careful not to activate FactoryBeans. 
0, Line, //  The method may be on an interface, so let's check on the target class as well. 
0, Line, //  Shouldn't custom translate this 
0, Line, //  Register all matching methods 
0, Line, //  release all objects 
0, Line, //  Register Calendars. 
0, Line, //  - The offset of the Code attribute, or 0. 
0, Line, //  Determine the path for the request dispatcher. 
0, Line, //  Fail on next write 
0, Line, //  ---------------------------------------------------------------------   Lifecycle methods   --------------------------------------------------------------------- 
0, Line, //  result == "1" 
0, Line, //  SPR-14210 
0, Line, //  Bad session, just get out 
0, Line, //  Generic assignment can be a little confusing, given:     List<CharSequence> c1, List<? extends CharSequence> c2, List<String> s;     c2 = s; is allowed and is often used for argument input, for example   see List.addAll(). You can get items from c2 but you cannot add items without   getting a generic type 'is not applicable for the arguments' error. This makes   sense since if you added a StringBuffer to c2 it would break the rules on s.     c1 = s; not allowed. Since there is no '? extends' to cause the generic   'is not applicable for the arguments' error when adding (which would pollute   s).
0, Line, //  making it available for JSP EL. 
0, Line, //  check new locale 
0, Line, //  Let "our" handler know before sending the open frame to the remote handler 
0, Line, //  Potentially overlapping with URLClassLoader.getURLs() result above! 
0, Line, //  Unusual but legal return type   Properly test generic type handling of Flux values collected to a List 
0, Line, //  Check all bean definitions. 
0, Line, //  Prevent clearConnection() from trying to close 
0, Line, //  Combining @Configuration classes with a Properties based loader doesn't really make   sense, but that's OK for unit testing purposes. 
0, Line, //  Regular servlet container: behaves as expected in any case,   so the trailing slash is the result of a "/" url-pattern mapping.   Don't remove that slash. 
0, Line, //  Parameterized for server-side use 
0, Line, //  Demonstrates we can't inject that event because the generic type is lost 
0, Line, //  DatabaseMetaData.procedureColumnReturn or possibly procedureColumnResult 
0, Line, //  Annotation-based return value types 
0, Line, //  Inner bean: generate identity hashcode suffix. 
0, Line, // ---------------------------------------------------------------------   ResourceLoader / ResourcePatternResolver override if necessary  --------------------------------------------------------------------- 
0, Line, // -------------------------------------------------------------------------   Methods dealing with prepared statements  ------------------------------------------------------------------------- 
0, Line, //  When the condition is a double slot primitive 
0, Line, //  ... and it can be done successfully 
0, Line, //  Should never happen... 
0, Line, //  By definition, a LOCAL_KIND type designates the concrete type of a local variable at   the beginning of the basic block corresponding to this frame (which is known when   this method is called, but was not when the abstract type was computed). 
0, Line, //  indexed read method 
0, Line, //  chain of statics ending with static field 
0, Line, //  Can't assume ordering for others, so use a list 
0, Line, //  should cast to the interface 
0, Line, //  Check that references survived pooling 
0, Line, //  Raise UnexpectedRollbackException if we had a global rollback-only marker 
0, Line, //  gh-23508 
0, Line, //  For subclasses: do nothing by default. 
0, Line, //  September: 30 days 
0, Line, //  A clone of the AutowireCandidateResolver since it is potentially BeanFactoryAware... 
0, Line, //  Cache the EJB create() method that must be declared on the home interface. 
0, Line, //  Specific to LinkedCaseInsensitiveMap 
0, Line, //  parseCheck("new int[] {1,2,3}.count()");   }   
0, Line, //  binding from returning clause 
0, Line, //  an inner expression was found - this is a composite 
0, Line, //  Attempted read as first activity on this field and property (no canRead before them) 
0, Line, //  It's a cached MessageConsumer... 
0, Line, //  If it is not already marked as belonging to a subroutine, mark it as belonging to 
0, Line, //  Now try protected method, and singleton 
0, Line, //  list should be unmodifiable 
0, Line, //  Simple BeanShell script: Let's create a proxy for it, implementing the given interfaces. 
0, Line, //  Registering callbacks statically (as opposed to thread-local)   is critical for usage in an OSGi environment (SPR-5932)... 
0, Line, //  The TestBean is created separately for each bean 
0, Line, //  SPR-772 
0, Line, //  This one is only thrown by the JMX 1.2 RI, not by the JDK 1.5 JMX code. 
0, Line, //  Equality amongst standard annotations 
0, Line, //  SPR-13149 
0, Line, //  correlation ID is queried when response is being created... 
0, Line, //  Find all HandlerAdapters in the ApplicationContext, including ancestor contexts. 
0, Block, /* 		The plan:		1 Start with whole second (rounding up if necessary)		2 If seconds match move on, otherwise find the next match:		2.1 If next match is in the next minute then roll forwards		3 If minute matches move on, otherwise find the next match		3.1 If next match is in the next hour then roll forwards		3.2 Reset the seconds and go to 2		4 If hour matches move on, otherwise find the next match		4.1 If next match is in the next day then roll forwards,		4.2 Reset the minutes and seconds and go to 2		 */
0, Line, //  Still perform unwrap call on target EntityManager. 
0, Line, //  test whether autowiring succeeded with auto proxy creation 
0, Line, //  should not occur 
0, Line, //  (so that the ATHROW could consume this Throwable if it were reachable). 
0, Line, //  Explicit mark/reset access via Buffer base type for compatibility   with covariant return type on JDK 9's ByteBuffer... 
0, Line, //  Header phase 
0, Line, //  Did a concurrent read transition to NO_DEMAND just before us?
0, Line, //  Maybe a malformed query string... try plain request URL 
0, Line, //  SPR-8983 
0, Line, //  no data for *   trailing slash, so is allowed 
0, Line, //  the variable does not exist (but that is OK, we should be writable) 
0, Line, //  Skip the bean if no wiring info given. 
0, Line, //  Check for match in ancestors -> positive 
0, Line, //  Let's try to find a language-only match as a fallback 
0, Line, //  concreteOutputType might be an uninitialized type from the input locals or from the input   stack. However, if a constructor has been called for this class type in the basic block, 
0, Line, //  Update existing Theme objects.   Usually there shouldn't be any at the time of this call. 
0, Line, //  Interrupted right before and still failing... give up. 
0, Line, //  Metadata, route 
0, Line, //  java.net.HttpURLConnection returns a *; q=.2 Accept header 
0, Line, //  index of char after the last character 
0, Line, //  Change to a new dynamic target 
0, Line, //  does not throw 
0, Line, //  Non match: no change 
0, Line, //  -----------------------------------------------------------------------------------------------   Utility methods: low level parsing   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-16516, SPR-16539 
0, Line, //  AbstractContextLoader 
0, Line, //  No, if HSQL is the platform, we really don't want to use locks... 
0, Line, //  in case it comes from a pool. 
0, Line, //  The following is unpleasant but a consequence of the generic collection converter above... 
0, Line, //  Child bean definition: needs to be merged with parent. 
0, Line, //  End the current basic block. 
0, Line, //  Obtain a serializable type proxy for the given provider... 
0, Line, //  NullLiteral 
0, Line, //  No JTA TransactionManager available - log a warning. 
0, Line, //  create the interceptor names list 
0, Line, //  Fallback to bounds 
0, Line, //  Whether or not we succeeded, publish an event. 
0, Line, //  If the original locations or classes were not empty, there's no   need to bother with default detection checks; just let the   appropriate loader process the configuration. 
0, Line, //  Servlet 3.0 Part.write is not guaranteed to support absolute file paths:   may translate the given path to a relative location within a temp dir   (e.g. on Jetty whereas Tomcat and Undertow detect absolute paths).   At least we offloaded the file from memory storage; it'll get deleted   from the temp dir eventually in any case. And for our user's purposes,   we can manually copy it to the requested location as a fallback. 
0, Line, //  1) Get an annotation 
0, Line, //  Set the custom handler method factory once resolved by the configurer 
0, Line, //  array of simple form fields 
0, Line, //  Happens after deserialization, during destruction... 
0, Line, //  Current name is resource name -> preserve it in the extra field... 
0, Line, // clear filter 
0, Line, //  the null must not propagate 
0, Line, //  An unresolvable type in a method signature, probably from a lazy bean - let's ignore it.
0, Line, //  Verify the same result for compiled vs interpreted 
0, Line, //  ctor varargs 2 
0, Line, //  Assert no exception is thrown 
0, Line, //  Release Connection early if the holder is not open anymore   (that is, not used by another resource like a Hibernate Session   that has its own cleanup via transaction synchronization),   to avoid issues with strict JTA implementations that expect   the close call before transaction completion. 
0, Line, //  After the response is committed, propagate errors to the server... 
0, Block, /*  all tests are in the parent class.  */
0, Line, //  Use transaction timeout (if available). 
0, Line, //  Cannot use #data in condition due to dynamic proxy. 
0, Line, //  binding from pointcut match 
0, Line, //  Read the 'exception_table_length' and 'exception_table' field to create a label for each 
0, Line, //  Register component for the surrounding <jms:annotation-driven> element. 
0, Line, //  Concrete subclasses 
0, Line, //  Resolve the script source. 
0, Line, //  Custom editor for this type?
0, Line, //  Calling foo(List) with (ArrayList) is close match (no conversion required) 
0, Line, //  AnnotationConfigContextLoader 
0, Line, //  Check the cache - we may have a ResolvableType which has been resolved before... 
0, Line, //  Shared default locale at the framework level 
0, Line, //  Absolute path 
0, Line, //  relative to the input stack size, which is not known yet). 
0, Line, //  request the beans from non-privileged code 
0, Line, //  Do not modify the EntityManager: just set the participate flag. 
0, Line, //  Simulate @PostConstruct life-cycle event 
0, Line, //  Should also remove Levels 2, 3-A, and 3-B, leaving nothing. 
0, Line, //  e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE 
0, Line, //  instance field 
0, Line, //  This should *not* recognized as a bean since it does not reside inside an @Component 
0, Line, //  collection conversion 
0, Line, //  Possible values for the type operand of the NEWARRAY instruction.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-6.html#jvms-6.5.newarray. 
0, Line, //  If we were given a ParameterMapper, we must let the mapper do its thing to create the Map. 
0, Line, //  Fall back to default theme. 
0, Line, //  SPR-9566 
0, Block, /*  expected  */
0, Line, //  Custom return value types 
0, Line, //  Bind Spring AOP proxy to AspectJ "this" and Spring AOP target to AspectJ target,   consistent with return of MethodInvocationProceedingJoinPoint 
0, Line, //  An arbitrary value: probably a String or a Resource array.   setAsText will be called for a String; a Resource array will be used as-is. 
0, Line, //  SPR-13895 
0, Line, //  Singleton: return shared object. 
0, Line, //  Destroy already created singletons to avoid dangling resources. 
0, Line, //  Remove the entity manager holder from the thread, if still there.   (Could have been removed by EntityManagerFactoryUtils in order   to replace it with an unsynchronized EntityManager). 
0, Line, //  - The offset of the RuntimeInvisibleTypeAnnotations attribute, or 0. 
0, Line, //  Source extraction 
0, Line, //  separator ends in whitespace, so we might want to see if the script is trying   to end the same way 
0, Line, //  Look for defined custom translations first. 
0, Line, //  Collect puts from any @Cacheable miss, if no cached item is found 
0, Line, //  Execute TestExecutionListener in parallel, thereby simulating parallel   test method execution. 
0, Line, //  The stack size delta is 1 for NEW, and 0 for ANEWARRAY, CHECKCAST, or INSTANCEOF. 
0, Line, //  If the object is something that looks indexable by an integer, 
0, Line, //  See if the return type of the method is outside the class hierarchy of the target type.   If so we know it never needs to have return type massage and can use a dispatcher.   If the proxy is being exposed, then must use the interceptor the correct one is already   configured. If the target is not static, then we cannot use a dispatcher because the   target needs to be explicitly released after the invocation. 
0, Line, //  only wrapping, no allocation 
0, Line, //  Different parts of elvis expression are null 
0, Line, //  Set reflectively 
0, Line, //  Common return type found: all factory methods return same type. For a non-parameterized 
0, Line, //  with a null AnnotationVisitor). 
0, Line, // -------------------------------------------------------------------------   Management of a shared JMS Connection  ------------------------------------------------------------------------- 
0, Line, //  If we get here, we need to process an existing result object immediately.   The decision is made within the result lock; just the handle call outside 
0, Line, //  Custom arguments 
0, Line, //  intentionally empty: we just need the class to be present to fail   the test 
0, Line, //  Should have invoked target and changed name 
0, Line, // ---------------------------------------------------------------------   Methods for MockRequestDispatcher  --------------------------------------------------------------------- 
0, Line, //  The size in bytes of this CONSTANT_Utf8 structure provides a conservative estimate   of the length in characters of the corresponding string, and is much cheaper to   compute than this exact length. 
0, Line, //  Inject a shared transactional EntityManager proxy. 
0, Line, //  Convert Map elements. 
0, Line, //  Not advised
0, Line, //  In contrast to nested test classes running in JUnit 4, the foo   field in the outer instance should have been injected from the   test ApplicationContext for the outer instance. 
0, Line, //  add cacheable first 
0, Line, // startNode   : parenExpr | literal  	    | type  	    | methodOrProperty  	    | functionOrVar  	    | projection  	    | selection  	    | firstSelection  	    | lastSelection  	    | indexer 
0, Block, /* 		 * We use the mixin to check and, if necessary, change,		 * modification status. We need the JoinPoint to get the		 * setter method. We use newValue for comparison.		 * We try to invoke the getter if possible.		  */
0, Line, //  Take sendInProgress flag only if queue is not empty 
0, Line, //  +1 because creating target for stats call counts 
0, Line, //  1. Resolve, and cache .gz variant 
0, Line, //  Locate specified JNDI object. 
0, Line, //  SPR-13631 
0, Line, //  Remain back-compatible by using the default constructor if there's more then one 
0, Line, //  either there was no accessor or it no longer existed 
0, Line, //  fallback to default conversion logic below 
0, Line, //  first invocation -- should succeed 
0, Line, //  Should never happen 
0, Line, //  If the number of elements to be popped is greater than the number of elements in the output   stack, clear it, and pop the remaining elements from the input stack. 
0, Line, //  Sanity test that we can reflectively read annotations,   including Class attributes; if not -> fall back to ASM 
0, Line, //  Full config 
0, Line, //  visibleTypeAnnotationOffsets array). 
0, Line, //  Just set to MANUAL in case of a new Session for this transaction. 
0, Line, // ---------------------------------------------------------------------   Flushing support  --------------------------------------------------------------------- 
0, Line, //  Statement 4 addresses the error described in SPR-9982. 
0, Line, //  Skip call to converters, as they may update the body. 
0, Line, //  Start the connector server asynchronously (in a separate thread). 
0, Line, //  <-- i.e. @Bean was registered   <-- i.e. @Bean *not* enhanced 
0, Line, //  UriTemplateHandler 
0, Line, //  parseCheck("{1,2,3,4,5,6,7,8,9,10}.^{#isEven(#this) == 'y'}",   "{1,2,3,4,5,6,7,8,9,10}.^{(#isEven(#this) == 'y')}");   } 
0, Line, //  Read the Code attributes to create a label for each referenced instruction (the variables   are ordered as in Section 4.7 of the JVMS). Attribute offsets exclude the   attribute_name_index and attribute_length fields.   - The offset of the current 'stack_map_frame' in the StackMap[Table] attribute, or 0.   Initially, this is the offset of the first 'stack_map_frame' entry. Then this offset is 
0, Line, //  no parent 
0, Line, //  Add with JDBC 
0, Line, //  The descriptors of the runtime operand values are used if the discovered declared   descriptors are not providing enough information (for example a generic type   whose accessors seem to only be returning 'Object' - the actual descriptors may   indicate 'int') 
0, Line, //  Note: the following 'multi-line' layout is for enhanced code readability. 
0, Line, //  simple form field 
0, Line, //  The listener successfully published the event... 
0, Line, //  Check that the characters used for captured variable names are like java identifiers 
0, Line, //  The most recently constructed path element in the chain 
0, Line, //  The context instance was injected without an explicit parent ->   determine parent for root web application context, if any. 
0, Line, //  Full check for complex generic type match required?
0, Line, //  utility methods 
0, Line, //  Is the construct {*...} being used in a particular path element 
0, Line, //  Could actually try to figure out interface from create?
0, Line, //  GET after POST 
0, Line, //  Try to adapt to the runtime situation that we're encountering:   There are obviously too many different patterns coming in here...   So let's turn off the cache since the patterns are unlikely to be reoccurring.
0, Line, //  no context path 
0, Line, //  SPR-17137: should not break trying to proxy the final test class 
0, Line, //  Special handling of default encoding 
0, Line, //  if optional slash is on...   and there is at least one character to match the *...   and the next path element is the end of the candidate...   and the final element is a separator 
0, Line, //  Else: different class with same name found 
0, Line, //  SPR-16262 
0, Line, // dottedNode   : ((methodOrProperty  	  | functionOrVar      | projection      | selection      | firstSelection      | lastSelection      )) 
0, Line, //  SPR-10704 
0, Line, //  Publisher implementation... 
0, Line, //  Make given ResourceLoader available for SchedulerFactory configuration. 
0, Line, //  Class not regularly loadable - can't determine a match that way. 
0, Line, //  If [handlerStart,handlerEnd[ is included in [rangeStart,rangeEnd[, remove firstHandler. 
0, Line, // ---------------------------------------------------------------------   Implementation of PropertyResolver interface  --------------------------------------------------------------------- 
0, Line, //  matches although it takes an arg 
0, Line, //  Using the following method rather than direct reflection,   we get correct handling of InvocationTargetException 
0, Line, //  We couldn't load the class file, which is not fatal as it   simply means this method of discovering parameter names won't work. 
0, Line, //  Regex patterns that matches URIs. See RFC 3986, appendix B 
0, Line, //  If no cache name given, use bean name as cache name. 
0, Line, //  Detect Equinox OSGi (e.g. on WebSphere 6.1) 
0, JavaDoc, /* 	 * Return if the given bean name matches the mapped name.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,	 * as well as direct equality. Can be overridden in subclasses.	 * @param beanName the bean name to check	 * @param mappedName the name in the configured list of names	 * @return if the names match	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
0, Line, //  make sure the location actually exists 
0, Line, //  Verify what the expression caused aa to be compared to 
0, Line, //  Sanity check, this particular call has *not* called the service 
0, Line, //  Addition 
0, Line, //  Kotlin present?
0, Line, //  stack: left(1or2)/right 
0, Line, //  SPR-13502 
0, Line, //  Default connection timeout merged 
0, Line, //  NB: WebSphere passes className as "." without class while the transformer expects a VM "/" format 
0, Line, //  vars associated with second variable 
0, Line, //  Find appropriate constructor for the given exception class 
0, Line, //  The listener attempted to publish the event... 
0, Line, //  Test null 
0, Line, //  Also register a custom endpoint 
0, Line, //  Mapped to all MBeans registered by the MBeanExporter. 
0, Line, //  Note: not actually invoked within a transaction since the method is   annotated with @MetaTxWithOverride(propagation = NOT_SUPPORTED) 
0, Line, //  Actually scan for bean definitions and register them. 
0, Line, //  Fires only on setters 
0, Line, //  Must be initialized by @Test method... 
0, Line, //  Transport methods 
0, Line, //  Information about the current method, i.e. the one read in the current (or latest) call   to {@link ClassReader#readMethod()}. 
0, Line, //  Is the path pattern using * characters in a particular path element 
0, Line, //  SPR-15066 
0, Line, //  expect a transaction 
0, Line, //  SPR-17461 
0, Line, //  Points to current directory - drop it. 
0, Line, //  Perform a fresh lookup for JTA handles. 
0, Line, //  consume (first time through) or comma (subsequent times) 
0, Line, //  Now proceed with actual closing of the shared Connection... 
0, Line, //  MBean might already have been unregistered by an external process 
0, Line, //  Try efficient lock-free access for existing cache entry 
0, Line, //  Check raw class match as well, making sure it's exposed on the proxy. 
0, Line, //  SPR-12398 
0, Line, //  type references 
0, Line, //  Configure non-transactional connection settings for Quartz. 
0, Line, //  - Whether the method has a Synthetic attribute. 
0, Line, //  Can't rely on classpath detection 
0, Line, //  If no attribute is returned, we know that it is not defined in the   management interface. 
0, Line, //  SPR-13637 
0, Line, //  the parent bean is autowiring 
0, Line, //  nothing to do 
0, Line, //  Stop the TimerManager itself. 
0, Line, //  Visit the method declaration. 
0, Line, //  supply the implicit lower bound if none are specified 
0, Line, //  for normal advice   invoke target without considering advice, if optimized   no override for methods mapped to this
0, Line, //  InfoReceiver methods 
0, Line, //  Is it different AspectJ behaviour, at least for checked exceptions?
0, Line, //  Save previous nestedPath value, build and expose current nestedPath value. 
0, Line, //  Code attribute fields and sub attributes: 
0, Line, //  There is only getDecoratedClass() declared -> dispatch to proxy config. 
0, Line, //  First two bytes: byte order mark 
0, Line, //  Managed (destroy disposes).. 
0, Line, //  SPR-15900 
0, Line, //  Extract anchor fragment, if any. 
0, Line, //  SPR-17330 
0, Line, //  SPR-12810 : inputstream body should be consumed 
0, Line, //  left up to the caller to convert the value if necessary. 
0, Line, //  Potentially inherited from outer <beans> sections, otherwise falling back to 'no'. 
0, Line, //  POST -> bind error 
0, Line, //  SPR-16132 
0, Line, //  SPR-10701 
0, Line, //  Do not check the expected position due a change in RegEx parsing in JDK 13.   See https://github.com/spring-projects/spring-framework/issues/23669 
0, Line, //  Any concrete media type 
0, Line, //  No underlying Connection -> lazy init via DriverManager. 
0, Line, //  Setting the bean reference to the same value is alright - can simply be ignored... 
0, Line, //  Return the start offset of the rest of the type_annotation structure. 
0, Line, //  Store context in local instance variable, to guarantee that   it is available on ServletContext shutdown. 
0, Line, //  Proceed to physical close from here... 
0, Line, //  Replace ASM_GOTO_W with GOTO_W. 
0, Line, //  manually building WebSocketDeploymentInfo in order to avoid class cast exceptions   with tomcat's implementation when using undertow 1.1.0+ 
0, Line, //  Message<String> as Message<Integer> 
0, Line, //  determine remote object 
0, Line, //  required in OpenJPA case 
0, Line, //  It's an output parameter: SqlReturnResultSet parameters already excluded.   It need not (but may be) supplied by the caller. 
0, Line, //  MappingJackson2MessageConverter default constructors 
0, Line, //  See SPR-11393 for related discussions. 
0, Line, //  Add argument resolver before parent initializes argument resolution 
0, Line, //  No generic type -> we know it's a Class type-match, so no need to check again. 
0, Line, //  Verify if the input changes, the result changes 
0, Line, //  Necessary for older Oracle drivers, in particular when running against an Oracle 10 database.   Should also work fine against other drivers/databases since it uses standard JDBC 4.0 API. 
0, Line, //  User superclass behavior (rollback on unchecked) if no rule matches. 
0, Line, //  Implementation note:   We need the level of indirection this interface provides as otherwise the   AspectJPrecedenceComparator must ask an Advisor for its Advice in all cases   in order to sort advisors. This causes problems with the   InstantiationModelAwarePointcutAdvisor which needs to delay creating   its advice for aspects with non-singleton instantiation models. 
0, Line, //  should never happen 
0, Line, //  SPR-17465 
0, Line, //  Non-transactional DataSource is optional: fall back to default 
0, Line, //  No exception raised as of 4.3, aligned with the behavior for @Async methods (SPR-14030) 
0, Line, //  Compute the offset of each constant pool entry, as well as a conservative estimate of the   maximum length of the constant pool strings. The first constant pool entry is after the   magic, minor_version, major_version and constant_pool_count fields, which use 4, 2, 2 and 2 
0, Line, //  SPR-9692 
0, Line, //  ignore - this is expected on refresh() for failure case tests 
0, Line, //  At this point we know it wasn't a user problem so worth a retry if a 
0, Line, //  Then, mark the subroutines called by the main subroutine, then the subroutines called by 
0, Line, //  UDP 
0, Line, //  request.setRequestURI("https://example.org/foo/page.html"); 
0, Line, //  if it was actually declared by the superclass. 
0, Line, //  check that unused instances from autowiring got removed 
0, Line, //  It's a cached MessageProducer... reset properties only. 
0, Line, //  Name and parameter number match, check the arguments 
0, Line, //  first set up the PageContext and the bean 
0, Line, //  Neither transaction nor synchronization active. 
0, Line, //  No URL (or no resolvable URL) -> try relative to resource base. 
0, Line, //  visitLocalVariable will never be called for static no args methods   which doesn't use any local variables.   This means that hasLvtInfo could be false for that kind of methods   even if the class has local variable info. 
0, Line, //  Unsynchronized - just scope it for the transaction, as demanded by the JPA 2.1 spec... 
0, Line, //  IntLiteral 
0, Line, //  no restriction of HTTP methods by default 
0, Line, //  Check cron expression 
0, Line, //  If we still lack default connection properties, check them now. 
0, Line, //  Rethrow original Spring exception from first attempt. 
0, Line, //  UriBuilderFactory 
0, Line, //  simply concatenate the two patterns 
0, Line, //  Check obvious equality matches with the candidate first, 
0, Line, //  Could be part of normal workflow (e.g. browser tab closed) 
0, Line, //  OpNE 
0, Line, //  Unsupported Unmarshalling 
0, Line, //  Try reentrant call--will go through this advice. 
0, Line, //  Not streaming... 
0, Line, //  Typically ClassNotFoundException or NoClassDefFoundError... 
0, Line, //  "hiding" the target bean in an internal target definition. 
0, Line, //  Simulate scenario where Filter would have already set CORS headers 
0, Line, //  Server side only... 
0, Line, //  Call from CGLIB proxy handle, potentially implementing a FactoryBean method?
0, Line, //  Unbind at this point if it's a new Session... 
0, Line, //  Check that the setter was invoked...   We should be able to combine Constructor and   Setter Injection 
0, Line, //  StringLiteral 
0, Line, //  Proper OPTIONS response coming from a handler - we're done. 
0, Block, /* 	@Override	public javax.validation.ClockProvider getClockProvider() {		Assert.notNull(this.validatorFactory, "No target ValidatorFactory set");		return this.validatorFactory.getClockProvider();	}	 */
0, Line, //  method not public 
0, Line, //  OperatorBetween 
0, Line, //  Handle JPA 2.1 unwrap method - could be a proxy match. 
0, Line, //  Singleton listener instance (without backing bean definition) disappeared -   probably in the middle of the destruction phase 
0, Line, // ---------------------------------------------------------------------   Instance implementation  --------------------------------------------------------------------- 
0, Line, //  Joda-Time present?
0, Line, //  Print debug message when warn logger is not enabled. 
0, Line, //  /hotels + /booking => /hotels/booking   /hotels + booking => /hotels/booking 
0, Line, //  Wait for all tasks to terminate - works for the common pool as well. 
0, Line, //  contributed by ConfigForScanning 
0, Line, //  Probably a pre-bound resource... 
0, Line, //  Wildcards 
0, Line, //  hash code 
0, Line, //  Two calls to verify that caching doesn't break re-creation. 
0, Line, //  Proceed with file system resolution 
0, Line, //  No ThemeResolver and ThemeSource available -> try fallback. 
0, Line, //  this fails while it inherits from the child bean 
0, Line, //  Determine default HTML escape setting from the "defaultHtmlEscape" 
0, Line, //  nothing 
0, Line, //  Could read these from files 
0, Line, // ---------------------------------------------------------------------   Implementation of ConfigurableListableBeanFactory interface  --------------------------------------------------------------------- 
0, Line, //  And, not expressions 
0, Line, //  inline list creation not supported at the moment   evaluate("{1,2,3,4,5,6,7,8,9,10}.!{#isEven(#this)}", "[n, y, n, y, n, y, n, y, n, y]", ArrayList.class); 
0, Line, //  Will fail without the following, because we're not able to get a connection   from the DataSource here if we need to create an ExceptionTranslator 
0, Line, //  SPR-16138 
0, Line, //  Only pass in the NoLocal flag in case of a Topic:   Some JMS providers, such as WebSphere MQ 6.0, throw IllegalStateException   in case of the NoLocal flag being specified for a Queue. 
0, Line, //  Register the final decorated instance. 
0, Line, //  Local transaction joined - don't actually call close() before transaction completion 
0, Line, //  equals 
0, Line, //  ASM-based resolution - safe for non-resolvable classes as well 
0, Line, //  Not using "valueOf' to avoid static init cost 
0, Line, //  ---------------------------------------------------------------------   Lifecycle properties   --------------------------------------------------------------------- 
0, Line, //  create a parent context that includes a mapping 
0, Line, //  add bar property -> validation should pass, even with an empty string value 
0, Line, //  Something on the stack when nothing is needed
0, Block, /* 	 * See SPR-6021	  */
0, Line, //  Only patterns not capturing variables cannot match against just / 
0, Line, //  Don't override the class with CGLIB if no overrides. 
0, Line, //  If srcType and dstType are reference types with the same array dimension,   merge(srcType, dstType) = dim(srcType) | common super class of srcType and dstType. 
0, Line, //  Parse each @Configuration class 
0, Line, //  inner bean with other scope - can't reliably process events 
0, Line, //      duplicate!     duplicate!
0, Line, //  Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars 
0, Line, //  Assert that we're in the inner proxy 
0, Line, //  path_length is stored in the first byte of a type_path. 
0, Line, //  END OF PATCH 
0, Line, //  Any of the typical annotations found?
0, Line, // -------------------------------------------------------------------------   Implementation hooks and helper methods  ------------------------------------------------------------------------- 
0, Line, //  parseCheck("new String[] {'abc','xyz'}", "new String[] {'abc','xyz'}");   } 
0, Line, //                    
0, Line, //  repro SPR-9123, ReflectivePropertyAccessor JavaBean property names compliance tests 
0, Line, //  Disable well-known modules detection 
0, Line, //  != t 
0, Line, //  Requires binding 
0, Line, //  Otherwise, use the full servlet path. 
0, Line, //  If this property or field access would return a primitive - and yet   it is also marked null safe - then the exit type descriptor must be   promoted to the box type to allow a null value to be passed on 
0, Line, //  gh-23622 
0, Line, //  Cancel associated user-level Future handle as well 
0, Line, //  here: RIGHT==null LEFT==null 
0, Line, //  For MySQL: exception class name indicating a timeout?
0, Line, //  Check request for preparsed or preset theme. 
0, Line, //  Can't do exact matching through isMatch 
0, Line, //  Store pre-refresh ApplicationListeners... 
0, Line, //  configure the pointcut expression accordingly. 
0, Line, //  If we get here, we have an exception that resulted from user code,   rather than the persistence provider, so we return null to indicate 
0, Line, //  Add listeners by bean name, potentially overlapping with programmatically 
0, Line, //  Were the two compared descriptor both for numbers?
0, Line, //  Clear context-level resource caches (such as ASM metadata from scanning). 
0, Line, // ---------------------------------------------------------------------   Implementation of the TargetSourceCreator interface  --------------------------------------------------------------------- 
0, Line, //  Since we're looking into the general ApplicationContext here,   let's accept this as a non-match and allow for chaining as well... 
0, Line, //  consistent with WebMvcConfigurationSupport 
0, Line, //  Shouldn't happen with connection reset beforehand 
0, Line, //  ast 
0, Line, //  Could be a collection type but we don't know about its element type,   so let's just assume there is an element type of type Object... 
0, Line, //  A final desperate attempt on the proxy class itself... 
0, Line, //  thrown inside the method. Otherwise the method could not be invoked. 
0, Line, //  parseCheck("new String[] {'abc','def','xyz'}.count()");   } 
0, Line, //  encoded dot 
0, Line, //  Revert to old position. 
0, Line, //  other parameters 
0, Line, //  No singleton guarantees from the factory -> let's lock locally but   reuse the factory's singleton lock, just in case a lazy dependency   of our advice bean happens to trigger the singleton lock implicitly... 
0, Line, //  default resourceRef=false should cause this to fail, as java:/comp/env will not   automatically be added 
0, Line, //  We need to expose a separate Session. 
0, Line, //  @Lookup method not substituted 
0, Line, //  6 header bytes and 2 bytes for local_variable_table_length. 
0, Block, /*  STOMP spec: receiver SHOULD take into account an error margin  */
0, Line, //  Not overloaded: don't worry about arg type matching... 
0, Line, //  SPR-16578 
0, Line, //  for backwards compatibility.. 
0, Line, //  Use mock ResourceResolver: i.e. we're only testing upfront validations... 
0, Line, //  List of SqlParameter names for out parameters 
0, Line, //  Stubbed null arguments just for reference purposes,   expecting them to be autowired for regular singleton references?   A safe assumption since @Bean singleton arguments cannot be optional...
0, Line, //  Convert array elements, if necessary. 
0, Line, //  primitive left operand - should get boxed, return true 
0, Line, //  Must now report back as having been modified 
0, Line, //  UTF-8 
0, Line, //  was /*/menu/** 
0, Line, //  Covers the case where a @Configuration is picked up via component scanning   and its bean definition only has a String bean class. In such cases   beanDefinition.hasBeanClass() returns false so we need to actually   call determineTargetType ourselves 
0, Line, // -------------------------------------------------------------------------   Template methods to be implemented by subclasses  ------------------------------------------------------------------------- 
0, Line, //  Check no encoding of expressions or constraints 
0, Line, // operand.getValueInternal(state); 
0, Line, //  If the transaction attribute is null, the method is non-transactional. 
0, Line, //  Try to explicitly synchronize the EntityManager itself   with an ongoing JTA transaction, if any. 
0, Line, //  Identifier 
0, Line, //  - The value corresponding to the ConstantValue attribute, or null. 
0, Line, //  not directly implemented 
0, Line, //  No JSON view specified... 
0, Line, //  SPR-13592 
0, Line, //  static @Bean method 
0, Line, //  Just rethrow exception if we can't get any match. 
0, Line, //  Flux 
0, Line, //  Use hashCode of service locator proxy. 
0, Line, //  October: 31 days and a daylight saving boundary in CET 
0, Line, //  context path only 
0, Line, //  Visit the AnnotationDefault attribute. 
0, Line, //  No-arg constructor for XML 
0, Line, //  Probably Hibernate's WebSphereExtendedJTATransactionLookup pseudo JTA stuff... 
0, Line, //  Remove a registered singleton of the given name, if any. 
0, Line, //  Spring 2.0 style 
0, Line, // String[] listenerNames = ((ListableBeanFactory) applicationContext).getBeanDefinitionNames(ApplicationListener.class);  assertTrue("listeners include beanThatListens", Arrays.asList(listenerNames).contains("beanThatListens")); 
0, Line, //  was /**/*Other 
0, Line, //  currently deliberate 
0, Line, //  empty params 
0, Line, //  graph, and add these blocks to the list of blocks to process, if not already done. 
0, Line, //  Not a Class: We need to evaluate the script for every call. 
0, Line, //  Dynamic SQL error   Cardinality violation   Syntax error direct SQL   Syntax error dynamic SQL   General SQL syntax error   Oracle: unknown identifier
0, Line, //  Add these so that static methods are invocable on the type: e.g. Float.valueOf(..) 
0, Line, //  7.5.9 
0, Line, //  SPR-14792 
0, Line, //  singleton property 
0, Line, //  Existing reference will fail 
0, Line, //  String not exhausted, but pattern is. Failure. 
0, Line, //  This produces 2 (see comments in https://jira.spring.io/browse/SPR-14544 )   Comparator<String> patternComparator = new AntPathMatcher().getPatternComparator(""); 
0, Line, //  Number of times to interpret an expression before compiling it 
0, Line, //  Cleaned URL path cannot be converted to URL -> take original URL. 
0, Line, //  A bean contained in a non-singleton bean cannot be a singleton itself.   Let's correct this on the fly here, since this might be the result of   parent-child merging for the outer bean, in which case the original inner bean 
0, Line, //  Visit the stack map frame for this bytecode offset, if any. 
0, Line, //  https://github.com/spring-projects/spring-framework/issues/22602 
0, Line, //  The best we can do is to check whether we're logically connected. 
0, Line, //  nice long wait... 
0, Line, //  two errors
0, Line, //  varargs but nothing to convert 
0, Line, //  no resolver registered == exception 
0, Line, //  7.5.8 
0, Line, //  Assign a List<String> to the List<Integer> field - the component elements should be converted 
0, Line, //  Passing (Super) on call to (Sub[]) is not a match 
0, Line, //  Verify how all the nodes behave with assignment (++, --, =) 
0, Line, //  setting values 
0, Line, //  Delegation methods 
0, Line, //  Finally, invoke all other BeanFactoryPostProcessors. 
0, Line, //  This will call the getter 
0, Line, //  primitive int 
0, Line, //  Only use factory method metadata if the return type is actually expressive enough   for our dependency. Otherwise, the returned instance type may have matched instead   in case of a singleton instance having been registered with the container already. 
0, Line, //  Instantiate the bean. 
0, Line, //  OK, so no JTA TransactionManager is available... 
0, Line, //  Keep reading up to 64 bits. 
0, Line, //  Do not attempt to lookup tx manager if no tx attributes are set 
0, Line, //  use cached QualifiedIdentifier: 
0, Line, //  filling at least one 256 buffer 
0, Line, //  Propagate refresh to lifecycle processor first. 
0, Line, //  Proxy is not yet available, but that shouldn't matter.
0, Line, //  Not touched 
0, Line, //  Skip the first character, which is always a '('. 
0, Line, //  Regular instantiation via default constructor... 
0, Line, //  First call should not have been cached 
0, Line, //  Check for uniqueness 
0, Line, //  JSR-236 API not available...
0, Line, //  ExtendedBeanInfo needs to behave exactly like BeanInfo... 
0, Line, //  Compute and store the offset of each 'bootstrap_methods' array field entry. 
0, Line, //  Add each bootstrap method in the symbol table entries. 
0, Line, //  parseCheck("{1, 2, 3, 4, 5} instanceof List", "({1,2,3,4,5} instanceof List)");   }// true 
0, Line, //  7.5.6 
0, Line, //  or removing the attribute, respectively, if appropriate. 
0, Line, //  SPR-16318 
0, Line, //  In case of FactoryBean, match object created by FactoryBean. 
0, Line, //  Here the target method takes Object... and we are passing a string 
0, Line, //  Update of the cache will fail as well 
0, Line, //  setup security 
0, Line, //  Deprecated attributes always use 6 bytes. 
0, Line, //  not found 
0, Line, //  SPR-13464 
0, Line, //  Read the access_flags, name_index and descriptor_index fields. 
0, Line, //  Search for further keys to strip, with the first key not stripped. 
0, Line, //  Check that this doesn't fail due to attempt to assign final 
0, Line, //  Improve the message by showing the context. 
0, Line, //  Same implicit default values as the @CrossOrigin annotation + allows simple methods 
0, Line, //  SPR-16091 
0, Line, //  Should rollback 
0, Line, //  7.5.7 
0, Line, //  Actually invoke the handler. 
0, Line, //  Data flow algorithm: put the first basic block in a list of blocks to process (i.e. blocks   whose input stack size has changed) and, while there are blocks to process, remove one   from the list, update the input stack size of its successor blocks in the control flow 
0, Line, //  assert that the property source was added last to the set of sources 
0, Line, //  cannot happen 
0, Line, //  No path info... (not mapped by prefix, nor by extension, nor "/*")   For the default servlet mapping (i.e. "/"), urlDecode=false can   cause issues since getServletPath() returns a decoded path.   If decoding pathWithinApp yields a match just use pathWithinApp. 
0, Line, //  If the target is varargs and there is just one more argument 
0, Line, //  Check it returns mutable contexts 
0, Line, //  See org.springframework.core.env.EnvironmentSystemIntegrationTests 
0, Line, //  In the first case we should not retry, in the second case we should see if there is a   better suited method. 
0, Line, //  But do not simulate validation of the 'equal' bean. As a consequence, a method   override in 'equal' will be marked as overloaded, but the corresponding   override in 'master' will not. But... the bean definitions should still be   considered equal. 
0, Line, //  ask for the result to be made into an Integer 
0, Line, //  gh-22428 
0, Line, //  Only really happens on JBoss 4.2 in case of an early timeout... 
0, Line, //  Intentionally FINAL. 
0, Line, //  ServerWebExchange delegation methods... 
0, Line, //  NOTE: This class must not implement Serializable because it serves as base   class for AspectJ aspects (which are not allowed to implement Serializable)! 
0, Line, //  Extract key from attribute or sub-element. 
0, Line, //  2) Fall back to an implicit database name based on the ID 
0, Line, //  Removes counting before advisor 
0, Line, //  SPR-12569 
0, Line, //  Try fallback to originally specified name... 
0, Line, //  SPR-14796 
0, Line, //  Create and visit the label for the first basic block. 
0, Line, //  To be invoked through the proxy, even in case of an interface-based proxy. 
0, Line, //  Inbound mapping 
0, Line, //  test matching with ?'s 
0, Line, //  @Order and @Priority should be ignored due to implementation of PriorityOrdered. 
0, Line, //  Convert value to a transaction attribute. 
0, Line, //  If you thought things were bad before, now we sink to new levels of horror... 
0, JavaDoc, /* 	 * Add an attribute for a cacheable method.	 * <p>Method names can be exact matches, or of the pattern "xxx*",	 * "*xxx" or "*xxx*" for matching multiple methods.	 * @param methodName the name of the method	 * @param ops operation associated with the method	  */
0, Line, //  Removes Nop1 
0, Line, //  7.5.5 
0, Line, //  Two reasons this can occur:   1. the method invoked actually threw a real exception   2. the method invoked was not passed the arguments it expected and      has become 'stale' 
0, Line, //  Obtain a RequestDispatcher for the target resource (typically a JSP). 
0, Line, //  deal with hexadecimal 
0, Line, //  Actually create the inner bean instance now... 
0, Line, //  not same due to fallback to raw FinalFactoryBean instance with repeated getObject() invocations 
0, Line, //  frame (except for uninitialized types, which may have been initialized). 
0, Line, //  Initialize with passed-in context. 
0, Line, //  Type-based... 
0, Line, //  remove first four irrelevant stack trace elements 
0, Line, //  exchange 
0, Line, //  Ignore: AsyncContext recycled and should not be used   e.g. TIMEOUT_LISTENER (above) may have completed the AsyncContext 
0, Line, // consume INC/DEC 
0, Line, //  Don't bother if WebSphere is configured to be fully Servlet compliant. 
0, Line, //  method call with result from method call 
0, Line, //  Synthesized annotation 
0, Line, //  RequestPath methods.. 
0, Line, //  No name specified - standard JTA is sufficient. 
0, Line, //  Re-interrupt current thread, to allow other threads to react. 
0, Line, //  SPR-12434 
0, Line, //  Null new pattern: should ignore 
0, Line, //  Find editor for superclass or interface. 
0, Line, //  Count is now 2 
0, Line, //  SPR-13468 
0, Line, //  Keys in the Properties object are sorted. 
0, Line, //  We should only attempt if the user explicitly set lazy-init to true   and we know the merged bean definition is for a factory bean. 
0, Line, //  -----------------------------------------------------------------------------------------------   Parameters, annotations and non standard attributes   ----------------------------------------------------------------------------------------------- 
0, Line, //  Set same instance 
0, Line, //  Just to check that this doesn't cause problems with introduction processing 
0, Line, //  Determine response-encoded HTML escape setting from the "responseEncodedHtmlEscape" 
0, Line, //  Assume bundle not found   -> do NOT throw the exception to allow for checking parent message source. 
0, Line, //  Is the existing bean definition one that was created from a configuration class?   -> allow the current bean method to override, since both are at second-pass level.   However, if the bean method is an overloaded case on the same configuration class,
0, Line, //  Proactively notify all active WebSocket sessions 
0, Line, //  Only use method proxy for public methods not derived from java.lang.Object 
0, Line, //  Immediate, before commit, after commit 
0, Line, //  Must allow for introductions; can't just set interfaces to the target's interfaces only. 
0, Line, //  7.5.3 
0, Line, //  SPR-17030 
0, Line, //  Create a ByteVector to hold an 'annotation' JVMS structure.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16. 
0, Line, // ---------------------------------------------------------------------   Copy methods for java.io.Reader / java.io.Writer  --------------------------------------------------------------------- 
0, Line, //  general execution 
0, Line, //  Use toString method for rendering value. 
0, Line, //  SPR-11101 
0, Line, //  "normal" case 
0, Line, //  Inject the BeanFactory before AutowiredAnnotationBeanPostProcessor's   postProcessProperties method attempts to autowire other configuration beans. 
0, Line, //  Minimal SLF4J API without location awareness support 
0, Line, // ---------------------------------------------------------------------   Writing  --------------------------------------------------------------------- 
0, Line, //  What's a reasonable expectation for _any_ server or developer machine load?   8 seconds?
0, Line, //  -----------------------------------------------------------------------------------------------   Frame output methods, to generate StackMapFrame attributes   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-16098 
0, Line, //  look at a LOT of items 
0, Line, //  SPR-12432 
0, Line, //  We don't actually want to write (just save the body Flux) 
0, Line, //  gh-21972 
0, Line, //  If one of them is empty the result is the other. If both empty the result is "" 
0, Line, //  Check fixed delay 
0, Line, //  Modify nested maps 
0, Line, //  since those are only meant to apply to beans defined in the original factory. 
0, Line, //  Interfaces/Abstract class are filtered out automatically. 
0, Line, //  removed. 
0, Line, //  definition will not have inherited the merged outer bean's singleton status. 
0, Line, //  Bad SQL state 
0, Line, //  Create and/or resize the initializations array if necessary. 
0, Line, //  double slot left operand - should get boxed, return true 
0, Line, //  element type correctly Integer 
0, Line, // ---------------------------------------------------------------------   Implementation of ConfigurableBeanFactory interface  --------------------------------------------------------------------- 
0, Line, //  SPR-15866 
0, Line, //  Will be advised 
0, Line, //  varargs byte 
0, Line, //  Specific header accessors 
0, Line, //  or if the event provides its precise type 
0, Line, //  Eagerly fetch singleton target bean, and determine result type. 
0, Line, //  reflective method accessor is the only one by default 
0, Line, //  Days of month start with 1 (in Cron and Calendar) so add one 
0, Line, //  Must use the ISO-8859-1 encoding because Properties.load(stream) expects it. 
0, Line, //  Ignore: indicates a circular reference when autowiring constructors.   We want to find matches other than the currently created bean itself. 
0, Line, //  Convenience factory methods 
0, Line, //  /* + /hotel -> /hotel ; "/*.*" + "/*.html" -> /*.html   However /user + /user -> /usr/user ; /{foo} + /bar -> /{foo}/bar 
0, Line, //  The actual expression from the bug report. It fails if the ENGLISH reference fails   to pop the type reference for Locale off the stack (if it isn't popped then   toLowerCase() will be called with a Locale parameter). In this situation the   code generation for ENGLISH should notice there is something on the stack that 
0, Line, //  OK, so it's the other order... probably on Sun JDK 1.6 or IBM JDK 1.5 
0, Line, //  Initialize event multicaster for this context. 
0, Line, //  Re-broadcast 
0, Line, //  If both getter and setter are null, then this does not need exposing. 
0, Line, //  SPR-14669 
0, Line, //  Indicate that a message has been received. 
0, Line, //  and observe they now pass through unresolved 
0, Line, //  having a value in value2 fields will enable compilation to succeed, then can switch it to null 
0, Line, //  No "Accept" header 
0, Line, //  SPR-10122, ReflectivePropertyAccessor JavaBean property names compliance tests - setters 
0, Line, //  Nest the concrete post-processor bean in the surrounding component. 
0, Line, //  using default port (which is 80), so do not need to append the port (-1 means ignore) 
0, Line, //  Mapping name lookup 
0, Line, //  PathExposingHandlerInterceptor at chain.getInterceptors()[1] 
0, Line, //  Use Jackson factory in order to have JSR-310 and Joda-Time modules registered automatically 
0, Line, //  Still bound to original thread, but at least completed. 
0, Line, //  Should we override default for including synonyms for meta-data lookups 
0, Line, //  Not initialized yet: assume no active threads. 
0, Line, //  This is an around advice: Invoke the next interceptor in the chain.   This will normally result in a target object being invoked.   Need re-wrapping of ReactiveTransaction until we get hold of the exception   through usingWhen. 
0, Line, //  no need to evaluate right operand 
0, Line, //  should have been autowired 
0, Line, //  Load reference definition file 
0, Line, //  A pattern without a currency code... 
0, Line, //  Use specific name if given, else fall back to bean name. 
0, Line, //  SPR-14405 
0, Line, //  Now we have the bean instance, which may be a normal bean or a FactoryBean.   If it's a FactoryBean, we use it to create a bean instance, unless the 
0, Line, //  Get the interception chain for this method. 
0, Line, //  It's a CallbackPreferringPlatformTransactionManager: pass a TransactionCallback in. 
0, Line, //  Allow for defaults fallback or potentially overridden accessor... 
0, Block, /* 	 * If the token starts meets Java identifier conventions, it's in.	  */
0, Line, //  ensure send doesn't block 
0, Line, //  OpGT   OpGE   false - null is not > or >= something 
0, Line, //  Root entry path must end with slash to allow for proper matching.   The Sun JRE does not return a slash here, but BEA JRockit does. 
0, Line, //  Register SimpleUrlHandlerMapping for view controllers 
0, Line, //  varargs boolean 
0, Line, //  SPR-15603 
0, Line, //  moving it to the end of the processor chain (for picking up proxies etc). 
0, Line, //  Now let the annotation config loader process the configuration. 
0, Line, //  No superclass -> processing is complete 
0, Line, //  Should usually be the case for traditional JAR files. 
0, Line, //  Data flow algorithm: put this basic block in a list blocks to process (which are blocks   belonging to a subroutine starting with this label) and, while there are blocks to process,   remove one from the list, put it in a list of blocks that have been processed, add a return   edge to the successor of subroutineCaller if applicable, and add its successor basic blocks 
0, Line, //  As of Spring 4.1.2, we're using a custom ConnectionHandle for lazy retrieval   of the underlying Connection (allowing for deferred internal transaction begin   within the EclipseLink EntityManager) 
0, Line, //  We don't use an IntroductionAdvisor, we can just add an advice that implements IntroductionInfo 
0, Line, //  Do not modify the Session: just set the participate flag. 
0, Line, //  Process superclass, if any 
0, Line, //  Not a String -> use PropertyEditor's setValue.   With standard PropertyEditors, this will return the very same object;   we just want to allow special PropertyEditors to override setValue   for type conversion from non-String values to the required type. 
0, Line, //  Transacted session created by this template -> commit. 
0, Line, //  rely on default setting of resourceRef=false, no auto addition of java:/comp/env prefix 
0, Line, //  4 will make it throw a checked exception - this will be wrapped by spel on the 
0, Line, //  Clear cache in externally provided MetadataReaderFactory; this is a no-op   for a shared cache since it'll be cleared by the ApplicationContext. 
0, Line, //  supply the implicit upper bound if none are specified 
0, Line, //  Use the SessionFactory's DataSource for exposing transactions to JDBC code. 
0, Line, //  Copy the message 
0, Line, //  Always accept such event when the type is unknown 
0, Line, //  Ignore - simply no detailed message then. 
0, Line, //  mixed operators 
0, Line, //  Try quick bean name or alias match first... 
0, Line, //  SPR-16804 
0, Line, //  Use PropertyEditor's setAsText in case of a String value. 
0, Line, //  should automatically receive applicationEventPublisher reference 
0, Line, //  Nest the concrete beans in the surrounding component. 
0, Line, //  Register bean as disposable. 
0, Line, //  flush headers 
0, Line, //  If the parent has the annotation and isn't abstract it's an error 
0, Line, //  -----------------------------------------------------------------------------------------------   Utility methods: control flow analysis algorithm   ----------------------------------------------------------------------------------------------- 
0, Line, //  Fall back to system properties. 
0, Line, //  If there is more data, it must start with the separator 
0, Line, //  Check whether aspect is enabled to cope with cases where the AJ is pulled in automatically 
0, Line, //  We're allowed to change the transaction settings of the JDBC Connection. 
0, Line, //  Server-side only... 
0, Line, //  trailing slash is optional 
0, Line, //  Already an RMI object bound for the specified service name... 
0, Line, //  SPR-13018 
0, Line, //  Add property values based on autowire by type if applicable. 
0, Line, //  one string then varargs string 
0, Line, //  Request configuration not set in the context 
0, Line, //  Keep processing error dispatch with regular request handle below 
0, Line, //  Check socket factories for registry. 
0, Line, //  If all factory methods have the same return type, return that type. 
0, Line, //  At this point, it's a top-level override (probably XML), just having been parsed 
0, Line, //  Annotation-based... 
0, Line, //  SPR-17168 
0, Line, // 	assertEquals("No objects active", 0, conf.getActive()); 
0, Line, //  Convert array elements to Collection elements. 
0, Line, //  Apply HTTP status code for error views, if specified.   Only apply it if we're processing a top-level request. 
0, Line, //  no-arg ctor 
0, Line, //  need to bind arguments by name as returned from the pointcut match 
0, Line, //  This is used for Groovy. It's a bean reference to a customizer bean. 
0, Line, //  SPR-11360 
0, Line, //  A value is set but is 'null' 
0, Line, //  If it's a per target aspect, emit the dummy instantiating aspect. 
0, Line, //  Cannot find common ancestor 
0, Line, //  SimpUserRegistry methods 
0, Line, //  Check for decorated DataSource a la Spring's DelegatingDataSource 
0, Line, //  No stack size delta. 
0, Line, //  Check socket factories for exported object. 
0, Line, //  Could be a primitive - likely. 
0, Line, // ---------------------------------------------------------------------   Dependency resolution functionality  --------------------------------------------------------------------- 
0, Line, //  If srcType and dstType are array types of equal dimension but different element types,   merge(srcType, dstType) = dim(srcType) - 1 | java/lang/Object. 
0, Line, //  check that not broken by circular reference resolution mechanism 
0, Line, //  For very general mappings (e.g. "/") we need to check 404 first 
0, Line, //  Process individual @Bean methods 
0, Line, //  WebSocket session ready, SockJS Session not yet 
0, Line, //  An array type: compare the component type. 
0, Line, //  Elvis 
0, Line, //  Visit the label and the line number(s) for this bytecode offset, if any. 
0, Line, //  static method 
0, Line, //  Not initialized yet: assume initial pool size. 
0, Line, //  anonymous port 
0, Line, //  StompEncoder isn't involved 
0, Line, //  optional string foo = 1; 
0, Line, //  On Java 9, the message used to contain the module name: "java.base/java.lang.String cannot be cast..." 
0, Line, //  Only apply encoding if content type is specified but does not contain charset clause already. 
0, Line, //  Create view controller bean definition 
0, Line, //  Try and keep the original accessor type 
0, Line, //  one more attempt with the write lock 
0, Line, //  So we match in number... 
0, Line, //  A Class: We need to create an instance for every call. 
0, Line, //  Simple replace 
0, Line, //  set JPA 2.0 validation mode 
0, JavaDoc, /*  * Builds on the {@link AbstractMBeanInfoAssembler} superclass to * add a basic algorithm for building metadata based on the * reflective metadata of the MBean class. * * <p>The logic for creating MBean metadata from the reflective metadata * is contained in this class, but this class makes no decisions as to * which methods and properties are to be exposed. Instead it gives * subclasses a chance to 'vote' on each property or method through * the {@code includeXXX} methods. * * <p>Subclasses are also given the opportunity to populate attribute * and operation metadata with additional descriptors once the metadata * is assembled through the {@code populateXXXDescriptor} methods. * * @author Rob Harrop * @author Juergen Hoeller * @author David Boden * @since 1.2 * @see #includeOperation * @see #includeReadAttribute * @see #includeWriteAttribute * @see #populateAttributeDescriptor * @see #populateOperationDescriptor  */
0, Line, //  Throwing an exception if a CacheManager of the same name exists already... 
0, Line, //  Lifecycle related methods 
0, Line, //  use in any post-processing or initialization that occurs below prior to #refresh 
0, Line, //  Create the JMX service URL. 
0, Line, //  spouse for autowiring by name... 
0, Line, //  Empty context path (root context) should not match to a URL with a context path 
0, Line, //  SPR-15382 
0, Line, //  @RequestMapping intentionally omitted 
0, Line, //  Eagerly load the NestedExceptionUtils class to avoid classloader deadlock   issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607. 
0, Line, //  Always let TypeMismatchNamingException through -   we don't want to fall back to the defaultObject in this case. 
0, Line, //  --- build 
0, Line, //  SPR-6354 
0, Line, //  Assumably failed to flush changes to database. 
0, Line, //  for RequiredAnnotationBeanPostProcessor.SKIP_REQUIRED_CHECK_ATTRIBUTE 
0, Line, //  This case should happen only once, for the visitLabel call in the constructor. Indeed, if   compute is equal to COMPUTE_INSERTED_FRAMES, currentBasicBlock stays unchanged. 
0, Line, //  6:00 
0, Line, //  Validate column count. 
0, Line, //  and won't think it's equal to B's NopInterceptor 
0, Line, // 		} 
0, Block, /*  Cross-server session lookup (e.g. same user connected to multiple servers)  */
0, Line, //  Change to a new static target 
0, Line, //  in particular for Java 8 default methods... 
0, Line, //  was /**/surprise 
0, Line, //  It is {*....} 
0, Line, //  6 header bytes and 2 bytes for local_variable_type_table_length. 
0, Line, //  Reset static counters in case tests are run multiple times in a test suite --   for example, via JUnit's @Suite. 
0, Line, //  same for BLOB 
0, Line, //  SPR-15384 
0, Line, //  will fail if not resolvable in the file system 
0, Line, //  Initialize immutable resolver and transformer chains 
0, Line, //  Look up single bean by type 
0, Line, //  t3 and t4 are found here as of Spring 2.0, since they are pre-registered   singleton instances, while testFactory1 and testFactory are *not* found   because they are FactoryBean definitions that haven't been initialized yet. 
0, Line, //  ConversionService's IntegerToEnumConverterFactory) for use as index 
0, Line, //  Static builder methods 
0, Line, //  Proceed in any case. 
0, JavaDoc, /* 	 * Return the propagation behavior.	 * <p>Must return one of the {@code PROPAGATION_XXX} constants	 * defined on {@link TransactionDefinition this interface}.	 * <p>The default is {@link #PROPAGATION_REQUIRED}.	 * @return the propagation behavior	 * @see #PROPAGATION_REQUIRED	 * @see org.springframework.transaction.support.TransactionSynchronizationManager#isActualTransactionActive()	  */
0, Line, //  Mirrors the score computation logic in PathPattern 
0, Line, //  statements can add attribute names to the constant pool, thereby changing its size! 
0, Line, //  Rethrow a provider configuration exception (possibly with a nested cause) directly 
0, Line, //  The meta-annotation should have been loaded by the parent 
0, Line, //  Triggers headers resolution 
0, Line, //  Recursive invocation, parsing placeholders contained in the   previously resolved placeholder value. 
0, Line, //  it's actually ConfigurationClassPostProcessor's Environment that gets the job done here. 
0, Line, //  -9000 
0, Line, //  shouldn't go through to remote service 
0, Line, // 	assertTrue("Some free", conf.getFree() > 0); 
0, Line, //  ask for the result to be made into an Integer knowing that it will not fit 
0, Line, //  Initialize the Scheduler instance... 
0, Line, //  Only "byType" and "byName" supported, but maybe other default inherited... 
0, Line, //  Accept "*/*" 
0, Line, // 		v = expression.getValue(ctx,holder);  	} 
0, Line, //  OpPlus 
0, Line, //  first rollback 
0, Line, //  Same unwrapping exception handling as above in above catch block 
0, Line, //  The context has not yet been refreshed -> provide services such as   setting the parent context, setting the application context id, etc 
0, Line, //  1xx Informational 
0, Line, //  Check all beans of type SQLErrorCodes. 
0, Line, //  Find all ViewResolvers in the ApplicationContext, including ancestor contexts. 
0, Line, //  Possibly an IE 10 style value: "Wed, 09 Apr 2014 09:57:42 GMT; length=13774" 
0, Line, //  and annotation presence), use target class instead of interface-based proxy. 
0, Line, //  trigger lazy resolution 
0, Line, //  name attribute is not supported by <label/> 
0, Line, //  Then, check annotation on factory method, if applicable 
0, Line, //  length of W/ + " + 0 + 32bits md5 hash + " 
0, Line, //  interfaces 
0, Line, //  Purge empty entries on access since we don't have a clean-up thread or the like. 
0, Line, //  not annotated 
0, Line, //  method call 
0, Line, //  Since the map is a LinkedMultiValueMap, we depend on the ordering of   elements in the map and reverse the order of the keys in order to traverse 
0, Line, //  An EJB3 Session Bean... 
0, Line, //  Opt in for ERROR dispatch 
0, Line, //  implementing Expression 
0, Line, //  assumes rpc.setPattern("java.lang.Object.hashCode"); 
0, Line, //  accessible as property field   accessible as property through getter/setter   accessible as property through getter/setter 
0, Line, //  should not match, because there's not .gif extension in there 
0, Line, //  Create "empty" transaction: no actual transaction, but potentially synchronization. 
0, Line, //  We're running with connection release mode "on_close": We're able to reset   the isolation level and/or read-only flag of the JDBC Connection here.   Else, we need to rely on the connection pool to perform proper cleanup. 
0, Line, //  All values if none set 
0, Line, //  and rename this class 
0, Line, //  9.4.20.v20190813: ExtensionFactory (abstract class -> interface) 
0, Line, //  T <= T 
0, Line, //  children[0] is the type of the constructor, don't want to include that in argument processing 
0, Line, //  non-inherited class-level annotation; note: @Order is not inherited 
0, Line, //  Create the set of field types that may be annotated with @DateTimeFormat.   Note: the 3 ReadablePartial concrete types are registered explicitly since   addFormatterForFieldType rules exist for each of these types   (if we did not do this, the default byType rules for LocalDate, LocalTime,   and LocalDateTime would take precedence over the annotation rule, which   is not what we want) 
0, Line, //  This will be set by DummyPersistenceProvider 
0, Line, //  This will be cached anyway as the earlyPut has updated the cache before 
0, Line, //  Use default valueOf methods for parsing text. 
0, Line, //  Enforce namespace aware for XSD... 
0, Line, //  container is stopped but should nevertheless invoke the runnable argument 
0, Line, //  MESSAGE 
0, Line, //  JiBX does not support SAX natively, so we write to a buffer first, and transform that to the handlers 
0, Line, //  JSR-250 1.1 API (as included in Java EE 6) not available - simply skip. 
0, Line, //  SPR-10515 
0, Line, //  Verify the result 
0, Line, //  Ordered, and the rest. 
0, Line, //  getting request parameters will consume the request body 
0, Line, //  Special case: there is one parameter left and it is an array and it matches the varargs   expected argument - that is a match, the caller has already built the array. Proceed with it. 
0, Line, //  We need to create a method invocation... 
0, Line, //  Bug in javac in JDK <9: annotation array excludes enclosing instance parameter   for inner classes, so access it with the actual parameter index lowered by 1 
0, Line, //  Separate implicit return parameters from explicit parameters... 
0, Line, //  Hits joinpoint 
0, Line, //  log4j-to-slf4j bridge -> we'll rather go with the SLF4J SPI;   however, we still prefer Log4j over the plain SLF4J API since   the latter does not have location awareness support. 
0, Line, //  2 invocations 
0, Line, //  Ignore, no HandlerExceptionResolver is fine too. 
0, Line, //  Result handler available -> let's clear the stored reference since 
0, Line, //  SPR-15122 
0, Line, //  --- SmartContextLoader - processContextConfiguration() ------------------ 
0, Block, /* 	 * See SPR-6978	  */
0, Line, //  10004: Reserved.   The specific meaning might be defined in the future. 
0, Line, //  trailing slash 
0, Line, //  DataSource if not explicitly specified. 
0, Line, //  check PrintStackTrace 
0, Line, //  Fall through if setAccessible fails with InaccessibleObjectException on JDK 9+   (on the module path and/or with a JVM bootstrapped with --illegal-access=deny) 
0, Line, //  Hibernate 5.0/5.1 getFlushMode() with FlushMode return type 
0, Line, //  SPR-16587 
0, Line, //  both the upper and lower bounds of the right-hand side must be   completely enclosed in the upper and lower bounds of the left-   hand side. 
0, Line, //  To handle the case of an inter-bean method reference, we must explicitly check the   container for already cached instances. 
0, Line, //  Can't propagate error to client, so just log 
0, Line, //  Cast is safe, as CallbackFilter filters are used selectively. 
0, Line, //  Skip the 'fields' array field. 
0, Line, //  methods are inherited 
0, Line, //  Next, register the BeanPostProcessors that implement Ordered. 
0, Line, //  Type-based argument resolution 
0, Line, //  Trim the text value to avoid unwanted whitespace   caused by typical XML formatting. 
0, Line, //  Encountered a new context hierarchy level?
0, Line, //  Using distance will ensure a more accurate match is discovered,   more closely following the Java rules. 
0, Line, // setValueExpectError("arrayContainer.longs[1]", new ArrayList<String>()); 
0, Line, //  SPR-15123 
0, Line, //  Probably a generic type mismatch between interface and impl as reported in SPR-12237 / HV-1011   Let's try to find the bridged method on the implementation class... 
0, Line, //  Will be ExposeInvocationInterceptor, synthetic instantiation advisor, 2 method advisors 
0, Line, //  SPR-7905 
0, Line, //  Should trigger close method expected by EntityManagerFactory mock 
0, Line, //  SPR-10785: set callbacks directly on the instance instead of in the   enhanced class (via the Enhancer) in order to avoid memory leaks. 
0, Line, //  Eagerly load the ContextClosedEvent class to avoid weird classloader issues   on application shutdown in WebLogic 8.1. (Reported by Dustin Woods.) 
0, Line, //  Here we do not extract the labels corresponding to the attribute content. This would   require a full parsing of the attribute, which would need to be repeated when parsing   the bytecode instructions (see below). Instead, the content of the attribute is read one   frame at a time (i.e. after a frame has been visited, the next frame is read), and the   labels it contains are also extracted one frame at a time. Thanks to the ordering of   frames, having only a "one frame lookahead" is not a problem, i.e. it is not possible to   see an offset smaller than the offset of the current instruction and for which no Label   exist. Except for UNINITIALIZED type offsets. We solve this by parsing the stack map   table without a full decoding (see below).
0, Line, //  SPR-10779 
0, Line, //  SPR-10513 
0, Line, //  We have no fallback text to consider. 
0, Line, //  SPR-16453 
0, Line, //  It will complain if it can't get the proxy 
0, Line, //  'the match' it starts with a separator 
0, Line, //  Rethrow JMSException to indicate an infrastructure problem   that may have to trigger recovery... 
0, Line, //  optional int32 blah = 1; 
0, Line, //  Convert String array to a comma-separated String.   Only applies if no PropertyEditor converted the String array before.   The CSV String will be passed into a PropertyEditor's setAsText method, if any. 
0, Line, //  10=November 
0, Line, //  gh-22543 
0, Line, //  boolean operators 
0, Line, //  All tests are in superclass. 
0, Line, //  stack height 
0, Line, //  Detect package-protected NullBean instance through equals(null) check 
0, Line, //  ignore RemoteAccessException as probably setup issue with JAX-WS provider vs JAXB 
0, Line, //  Resolves to EntityManagerFactory or EntityManager. 
0, Line, //  Allow for the collection of early ApplicationEvents, 
0, Line, //  Suppression required due to bug in javac in Java 8: presence of default method in a Serializable interface 
0, Line, //  Determine ResourceLoader to use. 
0, Line, //  First, see if we have a cached value. 
0, Line, //  Not serializable... Servlet containers usually automatically   unbind the attribute in this case. 
0, Line, //  SPR-15125 
0, Line, //  TODO same as old age to avoid ordering effect for now
0, Line, //  requires type conversion of '1' to 1 
0, Line, //  Then without 
0, Line, //  Existing transaction that we participate in, controlled outside   of the scope of this Spring transaction manager -> try to register   an afterCompletion callback with the existing (JTA) transaction. 
0, Line, //  Assert 
0, Line, //  XhrTransport methods 
0, Line, //  Ignored for the common pool. 
0, Line, //  checkcast each argument against the target's argument types 
0, Line, //  Invalid message format - probably not intended for formatting,   rather using a message structure with no arguments involved... 
0, Line, //  A bridge method was passed in but we couldn't find the bridged method.   Let's proceed with the passed-in method and hope for the best... 
0, Line, //  Handle JPA 2.1 isJoinedToTransaction method for the non-JTA case. 
0, Line, //  array of lists 
0, Line, //  Register component for the surrounding <context:annotation-config> element. 
0, Line, //  DELETE 
0, Line, //  Compute the number of locals, ignoring TOP types that are just after a LONG or a DOUBLE, and   all trailing TOP types. 
0, Line, //  disable log file 
0, Line, //  create the method factory bean 
0, Line, //  Otherwise, just the given exception as-is 
0, Line, //  Unsupported Map operations 
0, Line, //  -- AND -- 
0, Line, //  Parameter annotation 
0, Line, //  Access short array 
0, Line, //  Add the main interceptor (typically an Advisor). 
0, Line, //  Determine if each loader can load a context from the mergedConfig. If it   can, let it; otherwise, keep iterating. 
0, Line, //  If the transaction is still active... 
0, Line, //  What's a reasonable expectation for _any_ server or developer machine load?   9 seconds?
0, Line, //  with null conversion (null -> false) 
0, Line, //  No HttpSession available -> no mutex necessary 
0, Line, //  The output of the accessor will be a primitive but from the block above it might be null,   so to have a 'common stack' element at skipIfNull target we need to box the primitive 
0, Line, //  Unknown Number subtypes -> best guess is double addition 
0, Line, //  Lenient fallback: dummy factory in case of original factory not found... 
0, Line, //  No custom editor -> check BeanWrapperImpl's default editors. 
0, Line, //  6 
0, Line, //  perform tests with classValuesAsString = false (the default) 
0, Line, //  Use NumberFormat for rendering value. 
0, Line, //  Consider a pre-bound connection as transaction. 
0, Line, //  Next, invoke the BeanFactoryPostProcessors that implement Ordered. 
0, Line, //  always passes 
0, Line, //  Convert keys and values to respective target type, if determined. 
0, Line, //  SPR-17525 
0, Line, //  Start new transaction with default commit semantics 
0, Line, //  The following inner classes need to remain since lambdas would not retain their   declared generic types (which need to be seen by the underlying WebSocket engine) 
0, Line, //  Should we access call parameter meta-data info or not 
0, Block, /* 	 * Helper method for printing the AST with indentation	  */
0, Line, //            
0, Line, //  Preserve rollback-on-close semantics. 
0, Line, //  varargs with nothing needing conversion 
0, Line, //  Reset static state 
0, Line, //  stack: left/right/right   stack: left/right 
0, Line, //  SPR-11970 
0, Line, //  Standard headers (as defined in the spec) 
0, Line, //  --- local tests ------- 
0, Line, //  Also business exception!?
0, Line, //  The target bean should be ignored in favor of the scoped proxy. 
0, Line, //  Determine initial delay 
0, Line, //  Custom... 
0, Line, //  iterator() 
0, Line, //  Regular case: straight bean instance, with BeanFactory available. 
0, Line, //  Instance methods, relative to a base UriComponentsBuilder... 
0, Line, //  Create a ByteVector to hold a 'type_annotation' JVMS structure.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.20. 
0, Line, //  Treat it like a property...   The readerCache will only contain gettable properties (let's not worry about setters for now). 
0, Line, //  nothing to assert 
0, Line, //  Invoke the handler method with appropriate arguments. 
0, Line, //  optional handling 
0, Line, //  No synchronization necessary... 
0, Line, //  Determine init method and destroy method. 
0, Line, // ---------------------------------------------------------------------   Implementation of JavaMailSender  --------------------------------------------------------------------- 
0, Line, //  2. external-general-entities and dtd support enabled 
0, Line, //  assertions in init() should succeed 
0, Line, //  Could not transmit the exception to the caller with default executor 
0, Line, //  Create the embedded database first 
0, Line, //  MySQL style escapes '\\' 
0, Line, //  Remove the JDBC connection holder from the thread, if exposed. 
0, Line, //  Interpret location as relative to the web application root directory. 
0, Line, //  final class HttpServlet3RequestFactory implements HttpServletRequestFactory 
0, Line, //  Process last-modified header, if supported by the handler. 
0, Line, //  Lazily establish a shared Connection, if necessary. 
0, Line, //  No corresponding class found at all 
0, Line, //  JiBX compiler is currently not compatible with JDK 9 
0, Line, //  SPR-10771 
0, Line, //  multi arg ctor that includes primitives 
0, Line, //  Disallowing access to the spring.profiles.active property means that   the BeanDefinitionReader won't be able to determine which profiles are   active. We should see an INFO-level message in the console about this   and as a result, any components marked with a non-default profile will 
0, Line, //  Spring 
0, Line, //  Use current user schema if no schema specified... 
0, Line, //  Generic header accessors 
0, Line, //  of the new sub-classes. 
0, Line, //  Stop shared Connection early, if necessary. 
0, Line, //  either targetObject or targetBeanName specified 
0, Line, //  No result handler set yet -> let the setResultHandler implementation   pick up the result object and invoke the result handler for it. 
0, Line, //  Fail if we are still missing properties. 
0, Line, //  Filter will be called but not do anything, so first doit() will be invoked 
0, Line, //  Skip over any block comments 
0, Line, //  This is an around advice: Invoke the next interceptor in the chain.   This will normally result in a target object being invoked. 
0, Line, //  Make sure the interface is loaded from the  parent class loader 
0, Line, //  It doesn't have a pointcut so we assume it applies. 
0, Line, //  Try to find cached factory for ResourceBundle list: 
0, Line, //  requires type conversion of 37 to '37' 
0, Line, //  Start the shared Connection, if any. 
0, Block, /*  Locale -> BeanFactory  */
0, Line, //  1 
0, Line, //  Remove all remaining references to any removed contexts from the 
0, Line, //  Check that we're not parsing our own bean definition,   to avoid failing on unresolvable placeholders in properties file locations. 
0, Line, //  Retrieve canonical http schema mapping even for https declaration 
0, Line, //  ignoreUnresolvableNestedPlaceholders 
0, Line, //  Unsupported methods follow: no support for javax.naming.Name 
0, Line, //  Fallback 
0, Line, //  Method parameter predicates 
0, Line, //  method takes a string and we are passing an Integer 
0, Line, //  Build PDF document. 
0, Line, //  Apply JmsListenerConfigurer beans from the BeanFactory, if any 
0, Line, // checkInvariants(containerEmfb); 
0, Line, //  Declare binding disabled (e.g. via @ModelAttribute method) 
0, Line, //  If we haven't already registered it... 
0, Line, //  Use new temporary FileUpload instance if the request specifies   its own encoding that does not match the default encoding. 
0, Line, //  Regular "jar:file:...myjar.jar!/myentry.txt" 
0, Line, //  ctor varargs 
0, Line, //  May not be possible to decode... 
0, Line, //  No equals 
0, Line, //  --- Then --- 
0, Line, //  create parser and set variable 'primes' as the array of integers 
0, Line, //  Check for Tomcat's new copyWithoutTransformers on InstrumentableClassLoader first 
0, Line, //  Adapt to TransactionAspectSupport's invokeWithinTransaction... 
0, Line, //  nothing below trace 
0, Line, //  Register template loaders that are supposed to kick in early. 
0, Line, //  The provider of table meta-data 
0, Line, //  Lazy cache initialization on access 
0, Line, //  evaluates to "Idvor" 
0, Line, //  index1 is 2 at the start - the 'intArray[#root.index1++]' should not be evaluated twice!   intArray[2] is 3 
0, Line, //  Calling 'Fruit(int i, String... strings)' - returns int+length_of_strings 
0, Line, //  Maybe it's okay there is no content type, if there is no content.. 
0, Line, //  ASM specific access flags.   WARNING: the 16 least significant bits must NOT be used, to avoid conflicts with standard   access flags, and also to make sure that these flags are automatically filtered out when   written in class files (because access flags are stored using 16 bits only). 
0, Line, //  This annotation type is not directly annotated with Indexed so we can use   the index to find candidates 
0, Line, //  Cache to hold filename lists per Locale 
0, Line, //  Same if no concrete media type 
0, Line, //  Calling foo(String) with (String) is exact match 
0, Line, //  varargs int 
0, Line, //  Parse reference definition properties 
0, Line, //  Alter array returned from synthesized annotation 
0, Line, //  ? super T <= ? super S if S <: T 
0, Line, //  Increment the sequence column... 
0, Line, //  SPR-11225 
0, Line, // ---------------------------------------------------------------------   Management of custom editors  --------------------------------------------------------------------- 
0, Block, /* 	 * We've found the start of a binding pointcut at the given index into the	 * token array. Now we need to extract the pointcut body and return it.	  */
0, Line, //  SPR9511 
0, Line, //  SPR-14410 
0, Line, //  Clean up the client if we created it in the constructor 
0, Line, //  It is OK to use the cached accessor 
0, Line, //  Maybe an inner class name using the dot name syntax? Need to use the dollar syntax here...   ClassUtils.forName has an equivalent check for resolution into Class references later on.
0, Line, //  no destination 
0, Line, //  Make given non-transactional DataSource available for SchedulerFactory configuration. 
0, Line, //  Nothing to discard since we pass data buffers on immediately.. 
0, Line, //  On WebSphere, in non-compliant mode, for a "/foo/" case that would be "/foo"   on all other servlet containers: removing trailing slash, proceeding with   that remaining slash as final lookup path... 
0, Line, //  We don't want that GMT fallback... 
0, Line, //  Subclasses for specific HTTP status codes 
0, Line, //  SPR-9942 
0, Line, //  SPR-11357 
0, Line, //  Copy and reset the nextAttribute field so that it can also be used in MethodWriter. 
0, Line, //  Clean up any resources used by a multipart request. 
0, Line, //  if unable to set the value the operand is not writable (e.g. 1-- ) 
0, Line, //  Register JobDetails. 
0, Line, //  Expecting count=0 after test2IncrementCount1() since REQUIRED transactions   participate in the existing transaction (if present), which in this case is the   transaction managed by the TestContext framework which will be rolled back   after each test method. 
0, Block, /* 	 * Return true if the parameter name binding for the given parameter	 * index has not yet been assigned.	  */
0, Line, // ---------------------------------------------------------------------   ServletResponse interface  --------------------------------------------------------------------- 
0, Line, //  Unsupported marshalling 
0, Line, //  Ternary 
0, Line, //  Autowiring by name or by type 
0, Line, //  Explicit value provided as part of the bean definition. 
0, Line, //  Reset previous status values. 
0, Line, //  This is deprecated; to be removed along with PropertyPlaceholderConfigurer itself. 
0, Line, //  Check raw type first... 
0, Line, //  Scan twice in order to find errors in the bean definition compatibility check. 
0, Line, //  instructions). 
0, Line, //  worth a closer look 
0, Line, //  wac.refresh();   note that the context is not set as the ROOT attribute in the ServletContext! 
0, Line, //  Java 8 
0, Line, //  --- 5xx Server Error --- 
0, Line, //  Read the access_flags, this_class, super_class, interface_count and interfaces fields. 
0, Line, //  concurrencyLevel of 3 ends up as 4 (nearest power of 2) 
0, Line, // ---------------------------------------------------------------------   Adapt superclass registerBean calls to AnnotatedBeanDefinitionReader  --------------------------------------------------------------------- 
0, Line, //  Do not log warning for serializer not found (note: different message wording on Jackson 2.9) 
0, Line, //  Record the fact that 'label' designates a subroutine, if not already done. 
0, Line, //  Use the specified ClassLoader to resolve local classes. 
0, Line, //  4 
0, Line, //  Let cached signals ("foo" and error) be published.. 
0, Line, //  -----------------------------------------------------------------------------------------------   Implementation of the MethodVisitor abstract class   ----------------------------------------------------------------------------------------------- 
0, Line, //  Perform explicit wiring based on the specified bean definition. 
0, Line, //  Now let's cause the method to exit via exception and ensure it doesn't cause a retry. 
0, Line, //  SPR-11488 
0, Line, //  Service locator for a specific bean name 
0, Line, //  Here i'm going to change which hasRole() executes and make it one of my own Java methods 
0, Line, //  factory-method requires args 
0, Line, //  this is not double wildcard, it's / then **acb (an odd, unnecessary use of double *) 
0, Line, // ----------------------------------------------------------------------------   Implementation of org.apache.commons.pool2.PooledObjectFactory interface  ---------------------------------------------------------------------------- 
0, Line, //  null value 
0, Line, //  We don't trust the CCI driver: It might throw RuntimeException or Error. 
0, Line, //  ControllerAdvice classes 
0, Line, //  Adapt flush mode and store previous isolation level, if any. 
0, Line, //  Validate those beans are indeed wrapped by a proxy 
0, Line, //  already 2: getSpouse + getNestedIndexedBean calls above 
0, Line, //  3 
0, Line, //  Visit the fields and methods. 
0, Line, //  SPR-12553 
0, Line, //  /hotels/* + booking -> /hotels/booking 
0, Line, // ---------------------------------------------------------------------   Implementation of ResourceLoader interface  --------------------------------------------------------------------- 
0, Line, //  Some non-serializable entries -> serialize a temporary MessageHeaders copy 
0, Line, //  We need to resolve the view name. 
0, Line, //  Deal with wildcard bounds 
0, Line, //    /foo/* mapping   
0, Line, //  singleton, static 
0, Line, //  By construction, the second outgoing edge of a basic block that ends with a jsr instruction   leads to the jsr target (see {@link #FLAG_SUBROUTINE_CALLER}). 
0, Line, //  Number of times to try compiling an expression before giving up 
0, Line, //  SPR-13554: convention mapping mixed with AlaisFor annotations   locations doesn't apply because it has no AlaisFor annotation 
0, Line, //  no errors 
0, Line, //  # can appear in filenames, java.net.URL should not treat it as a fragment 
0, Line, //  Same comment as above for the RuntimeVisibleTypeAnnotations attribute. 
0, Line, //  Service to be created through generated class. 
0, Line, //  This is chopping off the 'L' to leave us with "java/lang/String" 
0, Line, //  If dstTypes[dstIndex] has never been assigned, merge(srcType, dstType) = srcType. 
0, Line, //  2 
0, Line, //  Without custom multipart types supported 
0, Line, //  equal 
0, Line, // ---------------------------------------------------------------------   Static factory methods  --------------------------------------------------------------------- 
0, Line, //  We're checking nested generic variables now... 
0, Line, //  HttpWebHandlerAdapter handles unresolved errors 
0, Line, // ---------------------------------------------------------------------   Implementation of FactoryBean interface  --------------------------------------------------------------------- 
0, Line, //  This means the operand is not decrementable 
0, Line, //  List and Array navigation 
0, Line, //  widening of int 3 to double 3 is OK 
0, Line, //  We need to create a proxy for this... 
0, Line, //  add foo property -> validation should fail only on missing 'bar' property 
0, Line, //  Assert that the handler method is not a suspending one. 
0, Line, //  Fallback: expecting TomcatInstrumentableClassLoader's getThrowawayClassLoader 
0, Line, //  Register bean definition under primary name. 
0, Line, //  Visit the local variable type annotations of the RuntimeInvisibleTypeAnnotations attribute. 
0, Line, //  The broker may not have removed the session yet 
0, Block, /* 	 * https://opensource.atlassian.com/projects/spring/browse/SPR-2754	  */
0, Line, //  Should not be used other than to delegate to   RequestDataValueDataProcessor 
0, Line, //  synchronous 
0, Line, //  Does not trigger advice or count 
0, Line, //  filter proxy, we'll have to resort to lazy initialization. 
0, Line, //  Extract value from attribute or sub-element. 
0, Line, //  Set custom exception translator 
0, Line, //  SPR-13218 
0, Line, //  Is it a long ?
0, Line, //  definition.getConstructorArgumentValues().addGenericArgumentValue("foo"); 
0, Line, //  MergedAnnotation should follow the same class loader logic 
0, Line, //  Invocation on ConnectionProxy interface coming in... 
0, Line, //  Short "0" or "-1" like values are never valid HTTP date headers...   Let's only bother with SimpleDateFormat parsing for long enough values. 
0, Line, //  Regular case: failed while active.   Invoke ErrorHandler if available. 
0, Line, //  We need to care for the default handler directly, since we need to   expose the PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE for it as well. 
0, Line, //  BigDecimal 
0, Line, //  Special case when the key is an unquoted string literal that will be parsed as   a property/field reference 
0, Line, //  Register annotation config processors, if necessary. 
0, Line, //  Simulate @PreDestroy life-cycle event 
0, Block, /*  Secondary lookup across all sessions by id  */
0, Line, //  Passing (Super,String) on call to foo(Sub,String) is not a match 
0, Line, //  Are we using generated key columns 
0, Line, // assertEquals("Any other setter does not increment", 2, adrian1.getAge()); 
0, Line, //  Check to see if there is a custom editor, 
0, Line, //  Assumably PROPAGATION_SUPPORTS or PROPAGATION_REQUIRED. 
0, Line, //  Test return value 
0, Line, //  ServerHttpRequest delegation methods... 
0, Line, //  ApplicationEventMulticaster not initialized yet - no need to remove a listener 
0, Line, // ---------------------------------------------------------------------   Implementation of relevant AbstractBeanFactory template methods  --------------------------------------------------------------------- 
0, Line, //  Ignore, UrlLinkParser will take care 
0, Line, //  assert that enhancement is working 
0, Line, //  Doesn't match a method from Throwable 
0, Line, //  overridden attributes: 
0, Line, //  If already included or response already committed, perform include, else forward. 
0, Line, //  JNDI name lookup - may still go to a local BeanFactory. 
0, Line, //  We need to override just this bean definition, as it may reference other beans   and we're happy to take the parent's definition for those.   Always use prototype scope if demanded. 
0, Line, //  Plain log methods 
0, Line, //  block size doubles each time 
0, Line, //  We don't want to expose the control interface 
0, Line, //  To determine which situation it is, the AccessException will contain a cause.   If the cause is an InvocationTargetException, a user exception was thrown inside the constructor.   Otherwise the constructor could not be invoked. 
0, Line, //  GET 
0, Line, //  override type info?
0, Line, //  No special handling: simply use no-arg constructor. 
0, Line, //  testing some ????? behavior
0, Line, //  Use the type cast feature   Replace etc methods on advised should be same as on ProxyFactory 
0, Line, //  Check inserts match 
0, Line, //  Profiles {foo, bar} should not hash to the same as {bar,foo} 
0, Line, //  Should have loaded without error 
0, Line, //  [Implied] super / extends cannot be mixed 
0, Line, //  Next is either:   '}' - end of list   ',' - more expressions in this list   ':' - this is a map!   list with one item in it 
0, Line, //  For backwards compatibility, we ignore null names here...   And since ConcurrentHashMap cannot store null values, we simply take null   as a remove from the Map (with the same result from lookupVariable below). 
0, Line, //  message will be: EL1063E:(pos 20): A problem occurred whilst attempting to set the property   'flibbles': 'Cannot set flibbles to an object of type 'class java.lang.String'' 
0, Line, //  Check for listener beans and register them. 
0, Line, //  string concatenation 
0, Line, //  A match test returned maybe - if there are any subtype sensitive variables   involved in the test (this, target, at_this, at_target, at_annotation) then   we say this is not a match as in Spring there will never be a different 
0, Line, //  BeanReference 
0, Line, //  The callbacks to use. Note that these callbacks must be stateless. 
0, Line, //  Install facade expecting a call 
0, Line, //  No BindingResult available as request attribute:   Probably forwarded directly to a form view.   Let's do the best we can: extract a plain target if appropriate. 
0, Line, //  Add the AopInfrastructureBean marker to indicate that the scoped proxy 
0, Block, /* 	 * Find the argument index with the given type, and bind the given	 * {@code varName} in that position.	  */
0, Line, //  Delegating Map implementation 
0, Line, //  qualifiers 
0, Line, //  These worked prior, but validating they continue to work 
0, Line, //  Standard JPA transaction begin call for full JPA context setup... 
0, Line, //  Perform was-null check if necessary (for results that the JDBC driver returns as primitives). 
0, Line, //  env.setActiveProfiles(DEV_ACTIVE);  env.setDefaultProfiles("default"); 
0, Line, //  Access through is method 
0, Line, //  We're on an earlier version of Tomcat, probably with Spring's TomcatInstrumentableClassLoader 
0, Line, //  else varNames.size must be 0 and we have nothing to bind. 
0, Line, //  These fields are used when the indexer is being used as a property write accessor.   If the name and target type match these cached values then the cachedWriteAccessor   is used to write the property. If they do not match, the correct accessor is   discovered and then cached for later use. 
0, Line, //  No aop.xml present on the classpath -> treat as 'disabled' 
0, Line, //  trim out the nulls first 
0, Line, //  Unlikely to ever get here, but it must be handled...
0, Line, //  Treat it like a property 
0, Line, //  Transport error => no more fallback 
0, Line, //  do transaction checks 
0, Line, //  If we enforced that adjacent captures weren't allowed,   this would do it (this would be an error: /foo/{bar}{boo}/) 
0, Line, //  Verify the type of event that was published. 
0, Line, //  provider 
0, Line, //  PROPERTYORFIELDREFERENCE 
0, Line, //  CONNECTED 
0, Line, //  Also specifically test we get different instances 
0, Line, //  implement an unrelated interface first (SPR-16288) 
0, Line, //  Not sure we can get here because -1 is OpMinus 
0, Line, //  Can cause infinite recursions in case of self-references 
0, Line, //  got no BindingResult - can only do standard rejectValue call   with automatic extraction of the current field value 
0, Line, //  Failed to introspect target method, probably because it has been loaded   in a special ClassLoader. Let's try the declaring ClassLoader instead... 
0, Line, //  lower case encoding 
0, Line, //  Eagerly check singleton cache for manually registered singletons. 
0, Line, //  SPR-16590 
0, Line, //  Avoid further encoding (in the case of strictEncoding=true) 
0, Line, // ---------------------------------------------------------------------   Convenience methods for working with formatted Strings  --------------------------------------------------------------------- 
0, Line, //  TypeReference 
0, Line, //  CachedIntrospectionResults should delegate to ExtendedBeanInfo 
0, Line, //  We've already implicitly added this interface.   This call should be ignored without error 
0, Line, //  comes from "resource.xml" 
0, Line, //  Passing (Integer,String) on call to (Integer,String[]) is exact match 
0, Line, //  Internal methods for UserRegistryMessageHandler to manage broadcasts 
0, Line, //  Start async before Read/WriteListener registration 
0, Line, //    
0, Line, //  Ensure comment prefix aliases are honored during the merge. 
0, Line, //  Confirming AntPathMatcher behaviour: 
0, Line, //  explicitly registered overriding bean   scanned same file twice   scanned equivalent class twice 
0, Line, //  Check the class' major_version. This field is after the magic and minor_version fields, which 
0, Line, //  super_class is after the access_flags and this_class fields (2 bytes each). 
0, Line, //  SPR-12903 
0, Line, //  Fully resolve parameter names and argument values. 
0, Line, //  look up single bean by type, with support for 'primary' beans 
0, Line, //  No way to access the request config of the HTTP client so no way to "merge" our customizations 
0, Line, //  Are there array dimensions?
0, Line, //  May need to add implicit join point arg name... 
0, Line, //  Retain original ordering of entries 
0, Line, //  managed by the factory or a temporary one for the given invocation. 
0, Line, //  If not returned before: return original request. 
0, Line, //  The other numeric operators 
0, Line, //  Create script factory bean definition. 
0, Line, //  null condition 
0, JavaDoc, /* 	 * Register fields that should be allowed for binding. Default is all	 * fields. Restrict this for example to avoid unwanted modifications	 * by malicious users when binding HTTP request parameters.	 * <p>Supports "xxx*", "*xxx" and "*xxx*" patterns. More sophisticated matching	 * can be implemented by overriding the {@code isAllowed} method.	 * <p>Alternatively, specify a list of <i>disallowed</i> fields.	 * @param allowedFields array of field names	 * @see #setDisallowedFields	 * @see #isAllowed(String)	  */
0, Line, // -------------------   SPR-3357 classes  ------------------- 
0, Line, //  stack: <nothing> 
0, JavaDoc, /* 	 * Set the service locator interface to use, which must have one or more methods with	 * the signatures {@code MyType xxx()} or {@code MyType xxx(MyIdType id)}	 * (typically, {@code MyService getService()} or {@code MyService getService(String id)}).	 * See the {@link ServiceLocatorFactoryBean class-level Javadoc} for	 * information on the semantics of such methods.	  */
0, Line, //  Handle derived types 
0, Line, //  Apply cache settings, if any 
0, Line, //  Still matches subclass of MyTestBean 
0, Line, //  Count minus duplicate 
0, Line, //  If the target is a static one and the advice chain is frozen,   then we can make some optimizations by sending the AOP calls 
0, Line, //  Fast-forward 31 minutes 
0, Line, //                
0, Line, //  type nor method are public 
0, Line, //  Should not have invoked constructor for the proxy instance 
0, Line, //  Null old pattern: should ignore 
0, Line, //  Execute receive within transaction. 
0, Line, //  /hotels/** + booking -> /hotels/**/booking 
0, Line, //  Perform autowiring (also applying standard factory / post-processor callbacks). 
0, Line, //  If no bean id is given auto generate one using the ReaderContext's BeanNameGenerator 
0, Line, //  named constructor arguments 
0, Line, //  Might be better with a as a variable although it would work as a property too...   Variable references using a '#' 
0, Line, //  At this point we know it wasn't a user problem so worth a retry if a better candidate can be found 
0, Line, //  but always false 
0, Line, //  Should we access insert parameter meta-data info or not 
0, Line, //  Prepend with slash if not already present. 
0, Line, //  As late as possible (Reactor Netty commonly used for WebClient) 
0, Line, //  Callback code threw application exception... 
0, Line, //  OpDivide 
0, Line, // ---------------------------------------------------------------------------------------   Convenience methods for browsing messages  --------------------------------------------------------------------------------------- 
0, Line, //  SPR-15131 
0, Line, //  Consider name and any aliases 
0, Line, //  OpLE 
0, Line, //  Generated by the protocol buffer compiler.  DO NOT EDIT!   source: sample.proto 
0, Line, //  Prepare this context for refreshing. 
0, Line, //  No need to lookup: the ModelAndView object contains the actual View object. 
0, Line, //  HttpMessageEncoder... 
0, Line, //  SPR-14066 
0, Line, //  Lazily connect to MBeanServer if necessary. 
0, Line, //  Basic chain: property access then method access 
0, Line, //  A localvar_target has a variable size, which depends on the value of their table_length   field. It also references bytecode offsets, for which we need labels. 
0, Line, //  Whether a F_INSERT stack map frame must be inserted before the current instruction. 
0, Line, //  Check socket factories for RMI registry. 
0, Line, //  If we have more than this number of args, we have constructor args 
0, Line, //  Set read-only flag. 
0, Line, //  for all of them 
0, Line, //  No target Connection held -> fetch one. 
0, Line, //  Headers will be flushed at the first write 
0, Line, //  Ensure we have at least some HandlerAdapters, by registering 
0, Line, //  no session yet 
0, Line, //  property not set, only the object itself 
0, Line, //  assertEquals(null, state.getRootContextObject().getValue()); 
0, Line, //  all class path resources with the given name 
0, Line, //  Check for SessionFactory's DataSource. 
0, Line, //  RegexPathElement 
0, Line, //  test default message without and with args 
0, Line, //  It is critical that we override this method for performance 
0, Line, //  Check cost of repeated construction of beans with method overrides 
0, Line, //  SPR-12198: mySource should 'win' as it was registered manually 
0, Line, //  Returns empty list 
0, Line, //  If it starts with a reference prefix... 
0, Line, //  const_value_index, CONSTANT_Integer 
0, Line, //  Enforce comment prefix aliases within the local @SqlConfig. 
0, Line, //  SPR-8255 
0, Line, //  Route, metadata 
0, Line, //  Needs to happen after listener registration but before setStatisticsEnabled 
0, Line, //  mediaType1.getType().equals(mediaType2.getType())   audio/* < audio/basic 
0, Line, //  Need to rebuild the path without the duplicate adjacent separators 
0, Line, //  This had better NOT be 
0, Line, // /CLOVER:OFF 
0, Line, // 		===> Expression '3+4+5+6+7-2' - AST start  		OperatorMinus  value:(((((3 + 4) + 5) + 6) + 7) - 2)  #children:2  		  OperatorPlus  value:((((3 + 4) + 5) + 6) + 7)  #children:2  		    OperatorPlus  value:(((3 + 4) + 5) + 6)  #children:2  		      OperatorPlus  value:((3 + 4) + 5)  #children:2  		        OperatorPlus  value:(3 + 4)  #children:2  		          CompoundExpression  value:3  		            IntLiteral  value:3  		          CompoundExpression  value:4  		            IntLiteral  value:4  		        CompoundExpression  value:5  		          IntLiteral  value:5  		      CompoundExpression  value:6  		        IntLiteral  value:6  		    CompoundExpression  value:7  		      IntLiteral  value:7  		  CompoundExpression  value:2  		    IntLiteral  value:2  		===> Expression '3+4+5+6+7-2' - AST end 
0, Line, //  Remove from old position, if any 
0, Line, // -------------------------------------------------------------------------   Convenience finder methods for HQL strings  ------------------------------------------------------------------------- 
0, Line, //  ignore if just being asked for ValidatorFactory 
0, Line, //  those called by the main subroutine, etc. 
0, Line, //  Reset internal context state. 
0, Line, //  Verifying dependency injection: 
0, Line, //  The exception position '0' isn't right but the overhead of creating   instances of this per node (where the node is solely for error reporting)   would be unfortunate. 
0, Line, //  case 3 
0, Line, //  A plain value: convert it to a Collection with a single element. 
0, Line, //  Guarantee initialization of beans that the inner bean depends on. 
0, Line, //  Expose previous nestedPath value. 
0, Line, //  Transactional 
0, Line, //  Evaluate the conditions *without* the result object because we don't have it yet... 
0, JavaDoc, /* 	 * Register fields that should <i>not</i> be allowed for binding. Default is none.	 * Mark fields as disallowed for example to avoid unwanted modifications	 * by malicious users when binding HTTP request parameters.	 * <p>Supports "xxx*", "*xxx" and "*xxx*" patterns. More sophisticated matching	 * can be implemented by overriding the {@code isAllowed} method.	 * <p>Alternatively, specify a list of <i>allowed</i> fields.	 * @param disallowedFields array of field names	 * @see #setAllowedFields	 * @see #isAllowed(String)	  */
0, Line, //  SPR-13705 
0, Line, //  unchanged 
0, Line, //  Visit the RuntimeInvisibleTypeAnnotations attribute. 
0, Line, //  parseCheck("(#max = {|x,y| $x > $y ? $x : $y }; #max(5,25))", "(#max={|x,y| ($x > $y) ? $x : $y };#max(5,25))");   }   
0, Line, //  The number of times compilation was attempted and failed - enables us to eventually 
0, Line, //  Custom global default?
0, Line, //  Can't be shared; there is no such thing as a read-only field 
0, Line, //  There must be a separator ahead of this thing   currentPE SHOULD be a SeparatorPathElement 
0, Line, //  Store the value, potentially overriding a value from an attribute   of the same name found higher in the annotation hierarchy. 
0, Line, //  Update maxLocals and currentLocals. 
0, Line, //  If this local has never been assigned in this basic block, it is still equal to its value   in the input frame. 
0, Line, //  same as java.sql.Connection.TRANSACTION_REPEATABLE_READ; 
0, Line, //  Use Msg.newBuilder() to construct. 
0, Line, //  gh-22531 
0, Line, // ---------------------------------------------------------------------   Template methods to be implemented by subclasses  --------------------------------------------------------------------- 
0, Line, //  SPR-11830 
0, Line, //  create an array of integers 
0, Line, //  If this method_info must be copied from an existing one, copy it now and return early. 
0, Line, //  Filter out BeanPostProcessors that are part of the AOP infrastructure, 
0, Line, //  will only look for the exact port 
0, Line, //  by an @Bean method, as of 4.2... 
0, Line, //  same as java.sql.Connection.TRANSACTION_READ_UNCOMMITTED; 
0, Line, //  SPRING PATCH END 
0, Line, //  At least the JTA TransactionManager available - use that one. 
0, Line, //  'after' callbacks are reversed, so 2 comes before 1. 
0, Line, //  Have not gone down false branch 
0, Line, //  A previously detected exception with proper bean creation context already,   or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry. 
0, Line, //  getClassLoader() returning null indicates the bootstrap ClassLoader 
0, Line, //  now see if we can match methods with arguments that have supertype arguments 
0, Line, //  Extra cast necessary for compiling on JDK 9 plus running on JDK 8, since   otherwise the overridden ByteBuffer-returning rewind method would be chosen   which isn't available on JDK 8. 
0, Line, //  Register the target bean as separate bean in the factory. 
0, Line, //  Mock must never have been called 
0, Line, //  non-singleton, static 
0, Line, //  resulting in a property descriptor including the non-standard setFoo method 
0, Line, //  Check qualifier first 
0, Line, //  An instance of the scripted class: let's return it as-is. 
0, Line, //  The child ClassLoader used to load the compiled expression classes 
0, Line, //  Extract individual config locations. 
0, Line, //  SPR-17535 
0, Line, //  No user-specified interfaces: check whether target class is an interface. 
0, Line, //  method name should not be registered 
0, Line, //  Language Spec 4.5.1. Type Arguments and Wildcards 
0, Line, // -------------------------------------------------------------------------   Core methods used by NamedParameterJdbcTemplate and SqlQuery/SqlUpdate  ------------------------------------------------------------------------- 
0, Line, //  Stop using the temporary ClassLoader for type matching. 
0, Line, //  been published. 
0, Line, //  non-static method, no args, void return 
0, Line, //  extract default param for the definition 
0, Line, //  Parse and store the target_type structure. 
0, Line, //  is not required and pop it off. 
0, Line, //  This code block checks whether the left or right operand is null and handles 
0, Line, // ---------------------------------------------------------------------   Implementation of JDBC 4.1's getParentLogger method  --------------------------------------------------------------------- 
0, Line, //  first: rollback 
0, Line, //  Should not match a separator 
0, Line, //  this.beanOrName must be a String representing the bean name if   this.resolvedBean is null. 
0, Line, //  a Throwable from a MessageListener MUST simply be swallowed... 
0, Line, //  needs The Sundays compiler; must NOT throw any exception here... 
0, Line, //  Strip prefix from path to analyze, to not treat it as part of the   first path element. This is necessary to correctly parse paths like   "file:core/../core/io/Resource.class", where the ".." should just 
0, Line, //  subscribe 
0, Line, //  SPR-16339 
0, Line, //  Explicitly pass a String argument, avoiding Log4j's argument expansion   for message objects in case of "{}" sequences (SPR-16226) 
0, Line, //  Apply SmartInstantiationAwareBeanPostProcessors to predict the   eventual type after a before-instantiation shortcut. 
0, Line, //  ignore beans where the class is not resolvable 
0, Line, //  Ensure that the type variable (e.g., T) is declared directly on the method   itself (e.g., via <T>), not on the enclosing class or interface. 
0, Line, //  first commit 
0, Line, //  equals 2 calls on shared nop, because it's first and sees calls 
0, Line, //  If there are exception handler blocks, each instruction within a handler range is, in   theory, a basic block (since execution can jump from this instruction to the exception   handler). As a consequence, the local variable types at the beginning of the handler   block should be the merge of the local variable types at all the instructions within the   handler range. However, instead of creating a basic block for each instruction, we can   get the same result in a more efficient way. Namely, by starting a new basic block after   each xSTORE instruction, which is what we do here. 
0, Line, //  Find unique EntityManagerFactory bean in the context, falling back to parent contexts. 
0, Line, //  index1 is 3 intArray[3] is 4 
0, Line, //  As of 5.1, we're also setting Hibernate's read-only entity mode by default. 
0, Line, //  audio/basic == text/html 
0, Line, //  Save original default locale. 
0, Line, //    This list in the <i>reverse order</i> or their order in the ClassFile structure. 
0, Block, /*  annotationVisitor =  */
0, Line, //  method calls below), and to account for bootstrap method entries. 
0, Line, //  Bean name pointing to a potentially lazy-init bean in the factory. 
0, Line, //  Media type from request 
0, Line, //  1856 
0, Line, //  Mark this bean as currently in creation, even if just partially. 
0, Line, //  We're shutting down completely. 
0, Line, //  Register template loaders that are supposed to kick in late. 
0, Line, //  Ignore - simply proceed with given Query object then 
0, Line, //  Build & resolve shortcuts... 
0, Line, //  The length of the input data 
0, Line, // ---------------------------------------------------------------------   Template methods to be implemented/overridden by subclasses  --------------------------------------------------------------------- 
0, Line, //  Process any collected put requests, either from @CachePut or a @Cacheable miss 
0, Line, //  Fetch JTA TransactionManager from JNDI, if necessary. 
0, Line, //  Will cause rollback only 
0, Line, //  When we use other thread's copy in this thread 
0, Line, // Get the key 
0, Line, //  No explicit exception translator specified - perform autodetection. 
0, Line, //  These methods are registered in the test context and therefore accessible through function calls   in test expressions 
0, Line, //  Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early. 
0, Line, //  Mimic standard JSF/JSP behavior when base is a Map by returning null. 
0, Line, //  Convert stringified value to target Number class. 
0, Line, //  We cannot use Profiles.of(...) since profile expressions are not supported   in XML config. See SPR-12458 for details. 
0, Line, //  This first part of the if clause prevents a 'double dereference' of the property (SPR-5847) 
0, Line, //  Not found -> check parent. 
0, Line, //  SPR-15009 
0, Line, //  Potentially try again with object equality checks in order to avoid race 
0, Line, //  Ensure the final flush 
0, Line, //  Explicitly extract typed value, as far as possible. 
0, Line, //  TRUE 
0, Line, //  perform tests with classValuesAsString = true 
0, Line, //  The application context id is still set to its original default value   -> assign a more useful id based on available information 
0, Line, //  Create and/or resize the output stack array if necessary. 
0, Line, //  Use local attributes only?
0, Line, //  Implemented as an anonymous inner class instead of a lambda expression due to a bug   in Eclipse IDE: "The blank final field testContext may not have been initialized" 
0, Line, //  3xx Redirection 
0, Line, //  testing some normal behavior 
0, Line, //  end of JDBCException (subclass) handling 
0, Line, //  Should we bind parameter by name 
0, Line, //  initMethod 
0, Line, //  gh-19890 
0, Line, //  Information about the current stack map frame, i.e. the one read in the current (or latest)   call to {@link ClassReader#readFrame()}. 
0, Line, //  When clearly asking for Groovy, that's what they'll get... 
0, Line, //  Default bean name for bean definition to take property values from 
0, Line, //  different subtypes 
0, Line, //  SPR-17181 
0, Line, //  sanity check: check that argument count matching works 
0, Line, //  Check directly registered editor for type. 
0, Line, //  Converting from an int to a string 
0, Line, //  SPR-9841 
0, Line, //  First pass: Look for named parameter match. 
0, Line, //  Initial request thread 
0, Line, //  In case of IOException, onError handling should call discardData(WebSocketMessage).. 
0, Line, //  Check for JSR-250 support, and if present add the CommonAnnotationBeanPostProcessor. 
0, Line, //  Register the advisor auto proxy creator with subclass 
0, Line, //  Set request attribute and add cookie. 
0, Line, //  The instruction after the GOTO_W becomes the target of the IFNOT instruction. 
0, Line, //  hit sentinel at end of value   will take us to the end 
0, Line, // ---------------------------------------------------------------------   Implementation of SmartLifecycle interface  --------------------------------------------------------------------- 
0, Line, //  | GREATER_THAN_OR_EQUAL | INSTANCEOF | BETWEEN | MATCHES 
0, Line, //  Register ApplicationContext in Scheduler context. 
0, Line, //  Preferred option: JDK 9+ Lookup.defineClass API if ClassLoader matches 
0, Line, //  Make invocation available if necessary. 
0, Line, //  Fallback: Original JavaBeans introspection might not have found matching setter   method due to lack of bridge method resolution, in case of the getter using a   covariant return type whereas the setter is defined for the concrete property type. 
0, Line, //  Check for special "forward:" prefix. 
0, Line, //  verify the property values have been evaluated as expressions 
0, Line, //  set persistence unit root URL 
0, Line, //  test matching with ?'s and /'s 
0, Line, //  Reacts to ServletException and RemoteException 
0, Line, //  no AOP 
0, Line, //  A regular request... 
0, Line, //  false 
0, Line, //  Some debug output might be useful... 
0, Line, //  set transaction type 
0, Line, //  be ignored. 
0, Line, //  SPR-17050 
0, Line, //  -----------------------------------------------------------------------------------------------   Utility methods: stack map frames   ----------------------------------------------------------------------------------------------- 
0, Line, //  Inherit Environment if possible 
0, Line, //  Read the name_index and access_flags fields and visit them. 
0, Line, //  Couple of possible cases:    1. Mock server never consumed request body (e.g. error before read)    2. FluxExchangeResult: getResponseBodyContent called before getResponseBody  noinspection ConstantConditions 
0, Line, //  It's an all in one... get the text between the first (and the last) 
0, Line, //  Visible if same Class can be loaded from given ClassLoader 
0, Line, //  Retrieve cookie value from request. 
0, Line, //  SPR 16692 
0, Line, //  Try even with null return value. ResponseBodyAdvice could get involved. 
0, Line, //  first one is expected position of the error within the string 
0, Line, //  Xalan-specific, but this is the most common XSLT engine in any case 
0, Line, //  Resolve any bridge methods 
0, Line, //  SPR-8779 
0, Line, //  Visit the end of the module attributes. 
0, Line, //  list = LCURLY (element (COMMA element)*) RCURLY 
0, Line, //  Check for well-known PersistenceException subclasses. 
0, Line, //  powerExpr  : unaryExpression (POWER^ unaryExpression)? (INC || DEC) ; 
0, Line, //  result of the invocation 
0, Line, //  SPR-15753 
0, Line, //  Restore reflective handles (which are unfortunately not serializable) 
0, Line, //  Non-strict casing can only be achieved through custom invocation handling.   Only partial MXBean support available!
0, Line, //  Apply preferences and build metadata. 
0, Line, //  we need to change it back 
0, Line, //  If we are dealing with method with generic parameters, find the original method. 
0, Line, //  Not initialized yet: assume core pool size.
0, Line, //  Process any early evictions 
0, Line, //  skip to flights   skip to flight 
0, Line, //  no point doing other checks 
0, Line, //  out of date. 
0, Line, //  All other tests are in superclass. 
0, Line, //  should throw CNFE when trying to load AnnotationTransactionAspect.   Do you actually have org.springframework.aspects on the classpath? 
0, Line, //  To determine the situation, the AccessException will contain a cause.   If the cause is an InvocationTargetException, a user exception was 
0, Line, //  Parse the target_type, target_info and target_path fields. 
0, Line, //  SPR-12677 
0, Line, //  Convert remaining arguments to the varargs element type 
0, Line, //  Transacted session created by this container -> commit. 
0, Line, //  no constraint 
0, Line, //  Ideally we would expect String.class instead of Object.class, but   resolveReturnTypeForFactoryMethod() does not currently support this form of 
0, Line, //  In order to retain back compatibility we only register Date/Calendar   types when a user defined formatter is specified (see SPR-10105) 
0, Line, //  public 
0, Line, //  SPR-9712 
0, Line, //  SPR-13225 
0, Line, //  variety chain 
0, Line, //  SPR-15803: nested array, no top-level array 
0, Line, //  Putting again should not increase the count 
0, Line, //  This can happen on (very early) completion notification from container.. 
0, Line, // ---------------------------------------------------------------------   Unsupported Servlet 3.0 registration methods  --------------------------------------------------------------------- 
0, Line, //  Config loaded from BasicGroovyWacTestsContext.groovy 
0, Line, //  Ensure that these don't cause problems 
0, Line, //  JDK default HTTP client blacklist headers like Origin 
0, Line, //  SPR-17051 
0, Line, //  right is a short 
0, Line, //  Must not be able to set exception message with return value placeholder 
0, JavaDoc, /* 	 * Return if the given field is allowed for binding.	 * Invoked for each passed-in property value.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,	 * as well as direct equality, in the specified lists of allowed fields and	 * disallowed fields. A field matching a disallowed pattern will not be accepted	 * even if it also happens to match a pattern in the allowed list.	 * <p>Can be overridden in subclasses.	 * @param field the field to check	 * @return if the field is allowed	 * @see #setAllowedFields	 * @see #setDisallowedFields	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
0, Line, //  see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getProperty(java.lang.String) 
0, Line, //  Shortcut when re-creating the same bean... 
0, Line, // ---------------------------------------------------------------------   Notification and listener management  --------------------------------------------------------------------- 
0, Line, //  Rely on Double>String conversion for calling startsWith() 
0, Line, //  Actually register all listeners 
0, Line, //  Will check inherited fields are copied 
0, Line, //  Implementation of the GroovyObject interface 
0, Line, //  Complete the control flow graph with exception handler blocks. 
0, Line, //  Switch to active. 
0, Line, //  Use Log4j 2.x directly, including location awareness support 
0, Line, //  Register a custom MethodResolver... 
0, Line, //  SPR-12542 
0, Line, //  JPA 2.1 StoredProcedureQuery 
0, Line, //  SPR-13554: convention mapping mixed with AlaisFor annotations   xmlConfigFiles can be used because it has an AlaisFor annotation 
0, Line, //  We know it can only be invoked if there's a single parameter of type string 
0, Line, //  '?'   '? extends number' 
0, Line, //  Case of an element_value with an array_value field. 
0, Line, //  put supertype matches at the end of the   specificAccessor list 
0, Line, //  clear thread callbacks to allow them to be gc'd 
0, Line, //  SPR-17054 
0, Line, //  If it's a FactoryBean, we want to look at what it creates, not the factory class. 
0, Line, //  that translation should not occur. 
0, Line, //  next instruction. Since it is a jump target, we need to insert a frame here. 
0, Line, //  The user has injected a context at construction time -> use it... 
0, Line, //  repro SPR-10994 
0, Line, //  not writable because (1) name is private (2) there is no setter, only a getter 
0, Line, //  now start the connector 
0, Line, //  should throw, bad (non-Exception-type) serviceLocatorException class supplied 
0, Line, //  No existing transaction found -> check propagation behavior to find out how to proceed. 
0, Line, //  Only call close() on WebApplicationContext if locally managed... 
0, Line, //  Try to parse the location as a URL... 
0, Line, //  SPR-14559 
0, Line, //  Constants for CGLIB callback array indices 
0, Line, //  ensure the same works for AbstractRefreshableApplicationContext impls too 
0, Line, //  No BeanWrapper default editor -> check standard JavaBean editor. 
0, Line, //  number of evaluations that are timed in one run 
0, Line, //  Write API methods to be implemented or template methods to override... 
0, Block, /* 			 * Do a final check to see if any this(TYPE) kind of residue match. For			 * this purpose, we use the original method's (proxy method's) shadow to			 * ensure that 'this' is correctly checked against. Without this check,			 * we get incorrect match on this(TYPE) where TYPE matches the target			 * type but not 'this' (as would be the case of JDK dynamic proxies).			 * <p>See SPR-2979 for the original bug.			  */
0, Line, //  in the case of a non-string *key*, however, we can do better.  Alert   the user that under these very special conditions (non-object key +   SecurityManager that disallows access to system properties), they
0, Line, //  should never occur 
0, Line, //  SPR-15758 
0, Line, //  Ignore, we'll add a default ViewResolver later. 
0, Line, //  factoryBean 
0, Line, //  SPR-2544 
0, Line, // parenExpr : LPAREN! expression RPAREN!; 
0, Line, //  We should have loaded the source and initial annotation from child 
0, Line, //  We're ahead of String + "*/*"   Let's see if we can aggregate the output (lest we time out)... 
0, Line, //  SPR-16956 
0, Line, // 		beanFactory.getBean("simple1", DummyBean.class); 
0, Line, //  We are allowed to try, it will return null if data is not available 
0, Line, //  delegate to subclass for interceptor definition 
0, Line, //  the client-side doesn't need message framing (letter "a") 
0, Line, //  Only perform destroy method inference or Closeable detection   in case of the bean not explicitly implementing DisposableBean 
0, Block, /*  no beans required for this test  */
0, Line, //  Use stack to restore old transaction TransactionInfo.   Will be null if none was set. 
0, Line, //  Second pass: Look for parameter index match. 
0, Line, //  No corresponding field on the target class... 
0, Line, //  may be null 
0, Line, //  [handlerStart,handlerEnd[ - [rangeStart,rangeEnd[ = [rangeEnd,handlerEnd[ 
0, Line, //  @Order is not @Inherited 
0, Block, /*  owner =  */
0, Block, /* 	 * These tests are attempting to call constructors where we need to widen or convert	 * the argument in order to satisfy a suitable constructor.	  */
0, Line, //  allow everything else 
0, Block, /*  L1  */
0, Line, //  Only the longest name is used for enumerating 
0, Line, //  <-- i.e. @Bean was registered   <-- i.e. @Bean *was* enhanced 
0, Line, //  multiple 
0, Line, //  Cache keeps being alive due to the explicit cache setting 
0, Line, //  Remove the "already filtered" request attribute for this request. 
0, Line, //  result1 == "1" 
0, Line, //  Call afterCompletion with the appropriate status indication. 
0, Line, //  map! 
0, Line, //  -----------------------------------------------------------------------------------------------   Generic symbol table entries management.   ----------------------------------------------------------------------------------------------- 
0, Line, //  e.printStackTrace(); 
0, Line, //  Compute where 'byteLength' must be stored in 'data', and store it at this location. 
0, Line, //  Intentionally missing:   @AliasFor("location") 
0, Line, //  Multiple options for supporting this expression: "p.name == principal.name"   (1) If the right person is the root context object then "name==principal.name" is good enough 
0, Line, //  no more events with what currently has been fed to the reader 
0, Line, //  Immediate expiration check outside of the result lock 
0, Line, //  Assuming an unrelated class cast failure... 
0, Line, //  lets now release an object and try to acquire a new one 
0, Line, //  specific to unspecific 
0, Line, //  We need an IntroductionAdvisor for this kind of introduction. 
0, Line, //  These fields are used when the indexer is being used as a property read accessor.   If the name and target type match these cached values then the cachedReadAccessor   is used to read the property. If they do not match, the correct accessor is   discovered and then cached for later use. 
0, Line, //  Must not be able to set exit message with exception placeholder 
0, Line, //  Possible values for the reference_kind field of CONSTANT_MethodHandle_info structures.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.4.8. 
0, Line, //  Swallow and proceed. 
0, Line, //  set unit name 
0, Line, //  Special case: URI is different from servlet path. 
0, Line, //  @Order and @Priority should be ignored due to implementation of Ordered. 
0, Line, //  ensure environment is registered as a bean 
0, Line, //  ---------------------------------------------------------------------   HttpServletRequest interface   --------------------------------------------------------------------- 
0, Line, //  We don't roll back on this exception.   Will still roll back if TransactionStatus.isRollbackOnly() is true. 
0, Line, //  Remove Level 2 
0, Line, //  Get value of bean property. 
0, Line, //  No serializable type wrapping necessary (e.g. for java.lang.Class) 
0, Line, //  @Configuration 
0, Line, //  As above, but in this case we are given the join point. 
0, Line, //  Create the plain text part of the message. 
0, Line, //  In order to retain backwards compatibility we only register Date/Calendar   types when a user defined formatter is specified (see SPR-10105) 
0, Line, //  primaryExpression : startNode (node)? -> ^(EXPRESSION startNode (node)?); 
0, Line, //  uninitialized to let the bean factory post-processors apply to them! 
0, Line, //  Most class names will be quite long, considering that they   SHOULD sit in a package, so a length check is worthwhile. 
0, Line, //  assert that servletconfig params resolve with higher precedence than sysprops 
0, Line, //  No resource type specified... check field/method. 
0, Line, //  SPR-10272 
0, Line, //  indicates a part of the string that was not parsed 
0, Line, //  Process any @ComponentScan annotations 
0, Line, //  Remove Level 1 
0, Line, //  Decorate event as an ApplicationEvent if necessary 
0, Line, //  Force initialization of the user attributes Map,   for having a shared Map reference in the clone. 
0, Line, //  for AspectJ aspects (which are not allowed to implement Serializable)! 
0, Line, //  Consolidate static and dynamic model attributes. 
0, Line, //  Just check that it works--we can't make assumptions 
0, Line, //  wrap the output so it is valid XML 
0, Line, //  Find the containing EditorAwareTag (e.g. BindTag), if applicable. 
0, Line, //  Switch to inactive. 
0, Line, //  Either the context is not a ConfigurableApplicationContext with refresh   support or the context injected at construction time had already been   refreshed -> trigger initial onRefresh manually here. 
0, Line, //  list cannot be properly parameterized as it breaks other tests 
0, Line, //  Invoke three non-advised methods 
0, Line, //  7 am is the trigger time 
0, Line, //  Register given Hibernate mapping definitions, contained in resource files. 
0, Line, //  path parameters 
0, Line, //  RxJava 1 Single 
0, Line, //  Load properties from file upfront, to let local properties override. 
0, Line, //  Hamcrest... 
0, Line, //  to determine the decorated bean's type than the proxy's type. 
0, Line, //  pointcutExpression will be initialized lazily by checkReadyToMatch() 
0, Line, //  Override JDK primitive number editors with our own CustomNumberEditor. 
0, Line, //  Remove a basic block from the list of blocks to process. 
0, Line, //  The @Scheduled method should have been called at least once but   not more times than the delay allows. 
0, Line, //  Consume first part of number 
0, Line, //  ExtendedEntityManagerSynchronization active after joinTransaction() call:   flush synchronization already registered. 
0, Line, //  Assume it's a connection timeout that would otherwise get lost: e.g. from JDBC 4.0 
0, Line, //  Required everywhere we use AspectJ proxies 
0, Line, //  Ensure that we are testing against a timezone other than the default. 
0, Line, //  note that we do not test for null, true, or false, which are also valid top-level values,   but are unsupported by JSONassert 
0, Line, //  Got hit by call to advised1.getSpouse().getAge() 
0, Line, //  Check whether the method is a valid service locator. 
0, Line, //  WebSocketHandler implementation 
0, Line, //  The first time searching, we don't care about for this test   Try with Locale.US 
0, Line, //  If already included, include again, else forward. 
0, Line, //  SPR-13975 
0, Line, //  Declared on a composed annotation (i.e., as a meta-annotation)? 
0, Line, //  Implementation support for subclasses 
0, Line, //  Commit necessary - but avoid commit call within a JTA transaction. 
0, Line, //  Proceed with standard resource location parsing. 
0, Line, //  It looks like a constructor reference but is NEW being used as a map key? 
0, Line, //  Unicode for LS (line terminator in ECMA-262) 
0, Line, //  We can skip creating a MethodInvocation: just invoke the target directly   Note that the final invoker must be an InvokerInterceptor so we know it does   nothing but a reflective operation on the target, and no hot swapping or fancy proxying. 
0, Line, //  Due to the lifecycle options, and because the bean has the "prototype" scope, we should not return the same instance 
0, Line, //  the info field. This trick allows duplicate detection in O(1) time. 
0, Line, //  Trigger initialization of all non-lazy singleton beans... 
0, Line, //  information is not available at run-time due to type erasure. 
0, Line, //  Update the (absolute) maximum stack size. 
0, Line, //  "always cache" 
0, Line, //  4) Verify that the original and synthesized annotations are equivalent 
0, Line, //  Handling of invalid origins as described in SPR-13478 
0, Line, //  Visit the RuntimeVisibleTypeAnnotations attribute. 
0, Line, //  SPR-15140 
0, Line, //  non-static method, one parameter of primitive type 
0, Line, //  Any other createEntityManager variant - expecting non-synchronized semantics 
0, Line, //  CGLIB proxy 
0, Line, //  make sure the thread will overlap 
0, Line, //  Finished partial creation of this bean. 
0, Block, /*  Quartz 2.2 initialize method  */
0, Line, //  'system' now has precedence 
0, Line, //  finally, issue additional assertions to cover all combinations of calling these   methods, however unlikely. 
0, Line, // pc.setIgnoreUnresolvablePlaceholders(false); // the default 
0, Line, //  Delegate bean definition registration to scanner class. 
0, Line, //  Only allow events to be published for test methods named "publish*". 
0, Line, //  Manual flush is required to avoid false positive in test 
0, Line, //  Invocation on Query interface coming in... 
0, Line, //  longer is better 
0, Line, //  Indexing into a Map 
0, Line, //  reflective constructor accessor is the only one by default 
0, Line, //  nothing we can do here in terms of warning the user that there was   actually a (non-string) value available. By this point, we only   have access to calling System.getProperty(), which itself returns null   if the value is non-string.  So we're stuck with returning a potentially 
0, Line, //  assert the method name is used 
0, Line, //  varargs with conversion required 
0, Line, //  Months start with 1 in Cron and 0 in Calendar, so push the values first into a longer bit set 
0, Line, //  Tag values for the type table entries (ASM specific tags). 
0, Line, //  Not advised, not under One 
0, Line, //  Declared on interface?
0, Line, //  Validate that all properties marked as required are resolvable: 
0, Line, //  the EM w/o properties will be created 
0, Line, //  see createTextMessage 
0, Line, //  Don't wait for beans that aren't running... 
0, Line, //  Find the current raw value, by invoking the corresponding setter 
0, Line, //  2. At length 
0, Line, //  attribute, or null. 
0, Line, //  lots of underscores 
0, Line, //  varargs long 
0, Line, //  audio/basic == audio/wave 
0, Line, //  Within full synchronization in order to guarantee a disconnected Set 
0, Line, //  Deal with the arguments up to 'expected number' - 1 (that is everything but the varargs argument) 
0, Line, //  Do not apply context path to relative URLs. 
0, Line, //  Proceed with superclass initialization. 
0, Line, //  Inherit all type-specific PropertyEditors. 
0, Line, //  Put specified objects into Scheduler context. 
0, Line, //  Fully synchronized resolution now... 
0, Line, //  STRING_LITERAL: '\''! (APOS|~'\'')* '\''!; 
0, Line, //  Use hashCode of PersistenceManager proxy. 
0, Line, //  Value will either be canonical value indicating there is no transaction attribute,   or an actual transaction attribute. 
0, Block, /*  no-op  */
0, Line, //  -----------------------------------------------------------------------------------------------   Utility methods: constant pool management for Attribute sub classes   ----------------------------------------------------------------------------------------------- 
0, Line, //  should lead to rollback 
0, Line, //  Second step: find the successors in the control flow graph of each subroutine basic block   'r' ending with a RET instruction. These successors are the virtual successors of the basic 
0, Line, //  URL 
0, Line, //  Try a URL connection last-modified header 
0, Line, //  Actual argument found - otherwise left as null 
0, Line, //  Merged annotation 
0, Line, //  In case the user forgot to call visitEnd(). 
0, Line, //  sanity check: singleton, non-static should work 
0, Line, //  Parse an expression 
0, Line, //  Check whether we should support the request method. 
0, Line, //  SPR-13847 
0, Line, //  2, 2, 4 and 2 bytes respectively for max_stack, max_locals, code_length and   attributes_count, plus the bytecode and the exception table. 
0, Line, //  protected methods used by the support sub-package 
0, Line, //  Skip bridge methods - we're only interested in original   annotation-defining user methods. On JDK 8, we'd otherwise run into   double detection of the same annotated method... 
0, Line, //  TODO could cache if a singleton for minor performance optimization
0, Line, //  Compute and put the attributes_count field. 
0, Line, //  A forward jump with an offset > 32767. In this case we automatically replace ASM_GOTO   with GOTO_W, ASM_JSR with JSR_W and ASM_IFxxx <l> with IFNOTxxx <L> GOTO_W <l> L:...,   where IFNOTxxx is the "opposite" opcode of ASMS_IFxxx (e.g. IFNE for ASM_IFEQ) and   where <L> designates the instruction just after the GOTO_W.   First, change the ASM specific opcodes ASM_IFEQ ... ASM_JSR, ASM_IFNULL and   ASM_IFNONNULL to IFEQ ... JSR, IFNULL and IFNONNULL. 
0, Line, //  Writing MIME header. 
0, Line, //  = 5 invocations, as reentrant call to spouse is advised also 
0, Line, //  Fill in location information if possible. 
0, Line, //  The stack size delta is 1 for BIPUSH or SIPUSH, and 0 for NEWARRAY. 
0, Line, //  SPR-16210 
0, Line, //  as a by-product. 
0, Line, //  of course it could be a different copy in a real object. 
0, Line, //  ------------------------------------------------------------------------ 
0, Line, //  #this should be the element from list1 
0, Line, //  does not support File-based reading; delegates to InputStream-style reading...  resource.getFile(); 
0, Line, // 		@Async public int getInt() {  			return 0;  		} 
0, Line, //  no match on message type 
0, Line, //  make the scope create a new object .. again 
0, Line, //  gh-23125 
0, Line, //  Set of in parameter names to exclude use for any not listed 
0, Line, //  gh-23258 
0, Line, //  by default Ast nodes are not writable 
0, Line, //  General exception counter which is a total for all exceptions thrown 
0, Line, //  header present 
0, Line, //  Actually this is still a "maybe" - treat the pointcut as dynamic if we don't know enough yet 
0, Line, //  Parse the element_value_pairs array. 
0, Line, //  Rely on default serialization, although this class itself doesn't carry state anyway... 
0, Line, //  Possibly AspectJ 1.8.10 encountering an invalid signature 
0, Line, //  If type to match is FactoryBean, return FactoryBean itself.   Else, return bean instance. 
0, Line, //  See @CachePut 
0, Line, //  Store the attributes in the <i>reverse</i> order of their visit by this method. 
0, Line, //  POST 
0, Line, //  SPR-17410 
0, Line, //  Otherwise, no local settings to be applied via StdSchedulerFactory.initialize(Properties) 
0, Line, //  Now let's cause the method to exit via exception and ensure it doesn't cause   a retry. 
0, Line, //  Permit proxy and invocation checkers to get context from AopContext 
0, Line, //  array has primitive component type 
0, Line, //  Do not modify the EntityManager: just mark the request accordingly. 
0, Line, //  Use empty MessageSource to be able to accept getMessage calls. 
0, Line, //  INDEXER 
0, Line, //  We only need this to wrap ByteBufs 
0, Line, //  We looked and failed... 
0, Line, //  SPR-13717 
0, Line, //  Execute handleRequestInternal in synchronized block if required. 
0, Line, //  bind em to the thread now since it's created 
0, Line, //  Check to see if we have fixed interceptor to serve this method. 
0, Line, //  Queue gets created in order to create MessageConsumer for that Destination... 
0, Line, //  No closing ] 
0, Line, //  - The non standard attributes (linked with their {@link Attribute#nextAttribute} field). 
0, Line, //  Send status code 302 by default. 
0, Line, //  Append anchor fragment, if any, to end of URL. 
0, Line, //  unresolvable w/ default   unresolvable placeholder 
0, JavaDoc, /* 	 * Return if the given method name matches the mapped name.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*"	 * matches, as well as direct equality.	 * @param methodName the method name of the class	 * @param mappedName the name in the descriptor	 * @return if the names match	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
0, Line, //  Check getting again doesn't cause a problem 
0, Line, //  previous step. So the stats should remain the same. 
0, Line, //  How many variable captures are occurring in a particular path element 
0, Line, //  SPR-15015 
0, Line, //  treat the nested ${..} as a part of the expression 
0, Line, //  Set rollback-only in case of Vavr failure matching our rollback rules... 
0, Line, //  Use the @ControllerAdvice annotation found by findAnnotationOnBean()   in order to avoid a subsequent lookup of the same annotation. 
0, Line, //  ----------------------------------------------------------------------------------------------   Methods to parse attributes   ---------------------------------------------------------------------------------------------- 
0, Line, //  Found it! 
0, Line, //  Just optional - for getting a specifically configured TypeConverter if needed.   We'll simply fall back to a SimpleTypeConverter if no specific one available. 
0, Line, //  Not matched method on {@link LoggingAspect}. 
0, Line, //  as of Hibernate 5.2 
0, Line, //  Got the lock in the meantime: double-check expiration status 
0, Line, //  SPR-14916 
0, Line, //  source: sample.proto 
0, Line, //  Not is a unary operator so does not extend BinaryOperator 
0, Line, //  Delegate handling of "java.class" format to standard Control 
0, Line, //  BooleanLiteral 
0, Line, //  intentionally omitted: attribute = "locations" 
0, Line, //  SPR-13719 
0, Line, //  can't rely on classpath for server detection 
0, Line, //  If counter is 4 then the method got called twice! 
0, Line, //  - make sure the two instances share the same Frame instance (the implementation of   {@link Label#getCanonicalInstance} relies on this property; here label.frame should be 
0, Line, //  SPR-14690 
0, Line, //  Cannot be evaluated, so can't be writable. 
0, Line, //  We don't care about the params. 
0, Line, //  -----------------------------------------------------------------------------------------------   Overridden Object methods   ----------------------------------------------------------------------------------------------- 
0, Line, //  Cause lazy loading 
0, Line, //  execute the bind tag using the date property 
0, Line, //  Give up 
0, Line, //  final Template expectedTemplate = new Template(); 
0, Line, //  ISO-8859-1 
0, Line, //  No generic information 
0, Line, // ---------------------------------------------------------------------   Convenient methods for loading XML bean definition files  --------------------------------------------------------------------- 
0, Line, //  Also check utils version 
0, Line, //  Expose cause as provided argument as well 
0, Line, //  The input data for parsing 
0, Line, //  A dynamically resolved expression, supported as of 4.2... 
0, Line, //  assert that servletcontext init params resolve with higher precedence than sysprops 
0, Line, //  Ignore - no Hibernate Validator 5.2+ or similar provider 
0, Line, //  Used for types that are user-named like: STRUCT, DISTINCT, JAVA_OBJECT, named array types 
0, Line, //  DQ_STRING_LITERAL: '"'! (~'"')* '"'!; 
0, Line, //  Make it dynamic: must mutate from pre-instantiation to post-instantiation state.   If it's not a dynamic pointcut, it may be optimized out 
0, Line, //  relational operators 
0, Line, //  /*.html + /hotel => /hotel.html   /*.html + /hotel.* => /hotel.html 
0, Line, //  ServerHttpResponse delegation methods... 
0, Line, //  No doOnDiscard (no caching after DataBufferUtils#read) 
0, Line, //  Should not happen 
0, Line, //  SPR-8280 
0, Line, //  This shouldn't happen:     1. dataReceived can only be called from REQUESTED state     2. currentData is cleared before requesting 
0, Line, //  again as above, standard Inspector picks up non-void return types on indexed write methods by default 
0, Line, //  Reply-To is queried when response is being created... 
0, Line, //  second argument not used, see config 
0, Line, //  Equality between standard and synthesized annotations 
0, Line, //  Check below is always true against Hibernate >= 5.2 but not against 5.0/5.1 at runtime 
0, Line, //  Netty Cookie doesn't support sameSite. When this is resolved, we can adapt to it again:   https://github.com/netty/netty/issues/8161 
0, Line, //  This can match only on declared pointcut. 
0, Line, // containerEmfb.destroy();  emfMc.verify(); 
0, Line, //  Find introduction fields. 
0, Line, //  Register given cacheable Hibernate mapping definitions, read from the file system. 
0, Line, //  use own privileged to change accessibility (when security is on) 
0, Line, //  A bean definition resulting from a component scan can be silently overridden 
0, Line, //  no exceptions 
0, Line, //  bogus static method 
0, Line, //  Passing (String,Sub) on call to foo(String,Super) is close match 
0, Line, //  Set sessionTransacted=true in case of a non-JTA transaction manager. 
0, Line, //  Information about the current type annotation target, i.e. the one read in the current   (or latest) call to {@link ClassReader#readAnnotationTarget()}. 
0, Line, //  Explicitly specified bean name for bean definition to take property values from 
0, Line, //  stack as opposed to prior to the recursive call). 
0, Line, //  ActivationSpecImpl class in "inbound" subpackage (WebSphere MQ 6.0.2.1) 
0, Line, //  but we should still find it on classes. 
0, Line, //  No property-specific editor -> check type-specific editor. 
0, Line, //  Resolve 'attr3' by type 
0, Line, //  Create savepoint within existing Spring-managed transaction,   through the SavepointManager API implemented by TransactionStatus.   Usually uses JDBC 3.0 savepoints. Never activates Spring synchronization. 
0, Line, //  No BindingResult parameter -> fail with BindException 
0, Line, //  1. Below length 
0, Line, //  expect no calls 
0, Line, //  No required type specified -> perform default extraction. 
0, Line, //  Original method invocation should be unaffected by changes to argument list of clone 
0, Line, //  Check for document without localization. 
0, Line, //  Only setter fired 
0, Line, //  Not a valid comparison...
0, Line, //  The offset of the other entries depend on the total size of all the previous entries. 
0, Line, //  Handle getTargetConnection method: return underlying Connection. 
0, Line, //  Allow for caching all bean definition metadata, not expecting further changes. 
0, Line, //  Guarantee initialization of beans that the current bean depends on. 
0, Line, //  this is Ok 
0, Line, //  To be compatible with the AntPathMatcher comparator,   '.*' is not considered a wildcard usage 
0, Line, //  Do-nothing concrete subclass 
0, Line, //  in to out 
0, Line, //  gh-22656 
0, Line, //  We're using setHeader here to remain compatible with JavaMail 1.2,   rather than JavaMail 1.3's setContentID. 
0, Line, //  Sunday can be represented as 0 or 7 
0, Line, //  Quick check for existing cache... 
0, Line, //  Factory methods based on an HttpServletRequest 
0, Line, //  Cache turned off because it went beyond the threshold 
0, Line, //  Shared default time zone at the framework level 
0, Line, //  SPR-14694 
0, Line, //  Search for TaskExecutor bean... not plain Executor since that would   match with ScheduledExecutorService as well, which is unusable for   our purposes here. TaskExecutor is more clearly designed for it. 
0, Line, //  -----------------------------------------------------------------------------------------------   Implementation of the FieldVisitor abstract class   ----------------------------------------------------------------------------------------------- 
0, Line, //  startKey is the level at which to begin clearing the cache, 
0, Line, //  Should typically be set for any kind of factory method, since the BeanFactory   pre-resolves them before reaching out to the AutowireCandidateResolver... 
0, Line, //  If return value is a Query or Criteria, apply transaction timeout.   Applies to createQuery, getNamedQuery, createCriteria. 
0, Line, //  Jackson2CodecSupport ... 
0, Line, //  Existing transaction found -> check propagation behavior to find out how to behave. 
0, Line, //  SPR-13496 
0, Line, //  Please DO NOT simplify the following with AssertJ's fluent API.     We explicitly invoke methods directly on HttpHeaders#keySet()   here to check the behavior of the entire contract. 
0, Line, //  Candidate constructors for autowiring?
0, Line, //  ---------------------------------------------------------------------   ServletRequest interface   --------------------------------------------------------------------- 
0, Line, //  No direct hits, go through all mappings 
0, Line, //  skip over that too, and continue 
0, Line, //  gh-22655 
0, Line, //  analogous to the JAXBContext.newInstance(String) implementation 
0, Line, //  dotted qualified id 
0, Line, //  For transaction suspension, the JTA TransactionManager is necessary too. 
0, Line, //  Determine default auto-commit and transaction isolation   via a Connection from the target DataSource, if possible. 
0, Line, //  Access char array 
0, Line, //  nested arrays 
0, Line, //  Do not accept the String.valueOf(Object) method 
0, Line, //  audio/basic;level=1 < audio/basic 
0, Line, //  Probably from a TreeSet - ignore. 
0, Line, //  overriding the default properties 
0, Line, //  Total includes detected mappings + explicit registrations via registerMapping 
0, Line, //  Static factory method 
0, Line, //  now test with explicit id 
0, Line, //  subroutine. 
0, Line, //  Remembers count, but we need to get a new reference to nop... 
0, Line, //  SPR-17191 
0, Line, //  /hotels/* + booking => /hotels/booking 
0, Line, //  Passing a subtype 
0, Line, //  gh-22654 
0, Line, //  This means the operand is not incrementable 
0, Line, //  long 
0, Line, //  How many ? characters in a particular path element 
0, Line, //  End the current basic block (with one new successor). 
0, Line, //  there outofpattern*yeah in the pattern, so this should fail 
0, Line, //  check the advice details 
0, Line, //  should handle Customer (exact match) 
0, Line, //  Position in the pattern where this path element starts 
0, Line, //  Look up single bean by type, with support for 'primary' beans 
0, Line, //  Rely on singleton semantics provided by the factory -> no local lock. 
0, Line, //  TargetSource.getTarget() failed 
0, Line, //  If the method descriptor has changed, with more locals than the max_locals field of the   original Code attribute, if any, then the original method attributes can't be copied. A   conservative check on the descriptor changes alone ensures this (being more precise is not   worth the additional complexity, because these cases should be rare -- if a transform changes   a method descriptor, most of the time it needs to change the method's code too). 
0, Line, //  The context has not yet been refreshed -> do so before returning it... 
0, Line, //  expected, because stack was reset by setNestedPath 
0, Line, // ---------------------------------------------------------------------   Implementation of JDBC 4.0's Wrapper interface  --------------------------------------------------------------------- 
0, Line, //  na1 was filtered 
0, Line, //  RECEIPT 
0, Line, //  expect the exception we threw in the custom metaclass to show it got invoked 
0, Line, //  Fall back to the parser's default behavior. 
0, Line, //  ignore, see SPR-13620 
0, Line, //  here: RIGHT!=null LEFT==null 
0, Line, //  Should never be used 
0, Line, //  Visit the ModuleMainClass attribute. 
0, Line, //  Second request: invalidates session 
0, Line, //  non-inherited class-level annotation; note: @Order is not inherited, 
0, Line, //  NON-VOID-RETURNING, NON-INDEXED write method 
0, Line, //  Standard stack map frame element types, used in {@link ClassVisitor#visitFrame}. 
0, Line, //  A non-array type: compare the type itself. 
0, Line, //  -- NOT -- 
0, Line, //  Now intersection with MyTestBeanSubclass getters should eliminate MyTestBean target 
0, Line, //  Based purely on 'wildness' 
0, Line, //  No queue-capacity provided, so unbounded 
0, Line, //  We ran out of messages.. 
0, Line, //  Check manually registered singletons too. 
0, Line, //  Outbound mapping 
0, Line, //  Name of catalog for this context 
0, Line, //  Accept "application/json" 
0, Line, //  Scoped proxy factory beans are a special case and should not be further proxied 
0, Line, //  Ensure internal list is mutable. 
0, Line, //  OpModulus 
0, Line, //  used by MethodInterceptorGenerated generated code 
0, Line, //  If we registered a JVM shutdown hook, we don't need it anymore now:   We've already explicitly closed the context. 
0, Line, //  string literal, evaluates to "bc" 
0, Line, //  A location pattern: resolve it into a Resource array.   Might point to a single resource or to multiple resources. 
0, Line, //  SPR-9964 
0, Line, //  Don't do anything, leave it expired... 
0, Line, //  SQL type constant from {@code java.sql.Types} 
0, Line, // -------------------------------------------------------------------------   Convenience methods operating on a plain SQL String  ------------------------------------------------------------------------- 
0, Line, //  Check that 'ref' and 'method' are specified 
0, Line, //  HibernateTransactionManager 
0, Line, //  Classes designed for test introspection 
0, Line, // -------------------------------------------------------------------------   Template methods for listener execution  ------------------------------------------------------------------------- 
0, Line, //  only second code valid 
0, Line, //  If no infrastructure bean name prefix has been set, override it. 
0, Line, //  Do nothing on flush 
0, Line, //  Hamcrest matchers... 
0, Line, //  FALSE 
0, Line, //  Compute fields for fast comparison 
0, Line, //  OK up to here, so the evaluation should be fine... 
0, Line, //  XMLEventReader is Iterator<Object> on JDK 9 
0, Block, /*  numStack =  */
0, Line, //  SPR-12665 
0, Line, //  Check the JCache cache again (in case the cache was added at runtime) 
0, Line, //  Visit the max stack and max locals values. 
0, Line, //  Register early post-processor for detecting inner beans as ApplicationListeners. 
0, Line, //  Config loaded from DefaultScriptDetectionGroovySpringContextTestsContext.groovy 
0, Line, //  Method predicates 
0, Line, //  Determine locale for request and apply it to the response. 
0, Line, //  Should custom translate this 
0, Line, //  SPR-14435 
0, Line, //  Default instances of collection editors. 
0, Line, //  If a nested property cannot be read, simply return null   (similar to JSTL EL). If the property doesn't exist in the   first place, let the exception through. 
0, Line, //  Direct URL lookup 
0, Line, //  any client frame except CONNECT 
0, Line, //  verify it is going to work with Spring Security's AntPathRequestMatcher 
0, Line, //  Check SQLErrorCodes with corresponding error code, if available. 
0, Line, //  SiMP header names 
0, Line, //  PRE-FLIGHT 
0, Line, // ---------------------------------------------------------------------   Implementation methods  --------------------------------------------------------------------- 
0, Line, //  Find the root WebApplicationContext 
0, Line, //  If this local has never been assigned in this basic block, so it is still equal to its   value in the input frame. 
0, Line, //  Special case: If no required type specified, which usually only happens for   Collection elements, or required type is not assignable to registered type,   which usually only happens for generic properties of type Object -   then return PropertyEditor if not registered for Collection or array type.   (If not registered for Collection or array, it is assumed to be intended   for elements.) 
0, Line, //  annotation_value 
0, Line, //  SPR-9832 
0, Line, //  Note: the MRU entry is moved to the tail when accessed. 
0, Line, //  Not using the Quartz startDelayed method since we explicitly want a daemon   thread here, not keeping the JVM alive in case of all other threads ending. 
0, Line, //  Create class outline 'spel/ExNNN extends org.springframework.expression.spel.CompiledExpression' 
0, Line, //  Well known variables:   currently active context object 
0, Line, //  no code valid, no default 
0, Line, //  preserve the existing bean definition. 
0, Line, //  ... 
0, Line, //  Check terminal signal before processing element.. 
0, Line, //  found in upper scope 
0, Line, //  We must avoid fetching a target Connection for "equals".   Only consider equal when proxies are identical. 
0, Line, //  intercept responding 
0, Line, //  Log level checks 
0, Line, //  Resolve BeanDefinitionHolder: contains BeanDefinition with name and aliases. 
0, Line, //  SPR-8637 
0, Line, //  Set a relative File reference and hope for the best. 
0, Line, //  Codes should be empty 
0, Line, //  AbstractGenericContextLoader 
0, Line, //  Send registration event. 
0, Line, //  Let subclasses do whatever initialization they like. 
0, Line, //  direct access to annotation attributes: 
0, Line, //  2=February 
0, Line, //  @@protoc_insertion_point(class_scope:SecondMsg) 
0, Line, //  SPR-10398 
0, Line, //  shouldn't matter 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods related to the input frame   ----------------------------------------------------------------------------------------------- 
0, Line, //  way out 
0, Line, //  JDK default HTTP client blacklists headers like Origin 
0, Line, //  TODO: test with expression for ServerWebExchange 
0, Line, //  recurse 
0, Line, //  Rely on AOP infrastructure to tell us what interfaces to proxy. 
0, Line, //  Skip the methods_count and 'methods' fields, using the same method as above. 
0, Line, //  Compute the "opposite" of opcode. This can be done by flipping the least   significant bit for IFNULL and IFNONNULL, and similarly for IFEQ ... IF_ACMPEQ 
0, Line, //  given a class with a non-void returning setter method 
0, Line, //  Proceed with unprocessed value. 
0, Line, //  In case of IOException, onError handling should call discardData(DataBuffer).. 
0, Line, //  jump to the end of the literal 
0, Line, //  Use response wrapper in order to always add PATCH to the allowed methods 
0, Line, //  Common cases 
0, Line, //  Shouldn't happen - probably a result of circular reference resolution... 
0, Line, //  Register transactional ConnectionProvider for Quartz. 
0, Line, //  Search the full type hierarchy 
0, Line, //  SPR-12660 
0, Line, //  Supported marshalling 
0, Line, //  A default method or other concrete method on a Java 8+ interface... 
0, Line, // ---------------------------------------------------------------------   Convenience methods for content-based equality/hash-code handling  --------------------------------------------------------------------- 0
0, Line, //  gh-22042 
0, Line, //  TODO must be immutable list
0, Line, //  jackson-datatype-jdk8 not available 
0, Line, //  gh-23241 
0, Line, //  Possibly "c:" drive prefix on Windows, to be upper-cased for proper duplicate detection 
0, Line, //  Effectively analogous to JDK 8's BigInteger.longValueExact() 
0, Line, //  SPR-12792 
0, Line, //  JiBX does not support DOM natively, so we write to a buffer first, and transform that to the Node 
0, Line, //  non-inherited class-level annotation; note: @Order is not inherited,   but findAnnotationDeclaringClassForTypes() should still find it on 
0, Line, //  Note that the 'map' key must be of type String, but the keys in the map   returned by createMap() are of type Color. Thus "foo" cannot be cast to a   Color. 
0, Line, //  SPR-15505 
0, Line, //  Next day is a week day so add one 
0, Line, //  Hibernate 5.2+ getHibernateFlushMode() 
0, Line, //  Get reflectively 
0, Line, //  Then, do this for the stack operands that have pushed in the basic block (this code is the 
0, Line, //  TextMessage contents must be unwrapped... 
0, Line, //  Return bean instance from factory. 
0, Line, //  Consider factory methods 
0, Line, //  Use the JDK's own MBeanServerInvocationHandler, in particular for native MXBean support. 
0, Line, //  then convert it here 
0, Line, //  The following (AnnotationAttributes) cast is required on JDK 9+. 
0, Line, //  Rely on default serialization; just initialize state after deserialization. 
0, Line, //  Access int array 
0, Line, //  Won't throw an exception 
0, Line, //  spliterator() via stream() 
0, Line, //  Check whether we have any advice. If we don't, we can fallback on direct 
0, Line, //  Check ConditionalConverters for a dynamic match 
0, Line, //  SUBSCRIBE, UNSUBSCRIBE 
0, Line, //  Start of the most recent path element in a particular path element 
0, Line, //  allow configuration after set a MessageCodesResolver 
0, Line, //  By definition, a STACK_KIND type designates the concrete type of a local variable at   the beginning of the basic block corresponding to this frame (which is known when   this method is called, but was not when the abstract type was computed). 
0, Line, //  required but empty 
0, Line, //  URI var with regex for path variable, and (empty) URI var for matrix params.. 
0, Line, //  Standard collection interfaces 
0, Line, //  Quick check on the concurrent map first, with minimal locking. 
0, Line, //  register the final advisor 
0, Line, //  Don't set business interface 
0, Line, //  Write the bootstrap method in the BootstrapMethods table. This is necessary to be able to   compare it with existing ones, and will be reverted below if there is already a similar 
0, Line, //  If the next instruction starts a new basic block, call visitLabel to add the label of this 
0, Line, //  Read the exports_index, exports_flags, exports_to_count and exports_to_index fields   and visit them. 
0, Line, //  JiBX does not support reading XML fragments, hence the override here 
0, Line, //  Continue with the possible next task element 
0, Line, //  when certain limit reached 
0, Line, //  Invoke the method if we don't have a cache hit 
0, Line, //  only one call made  - the first EM definition wins (in this case the one w/o the properties) 
0, Line, //  Single string methods 
0, Line, // see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getenv() 
0, Line, //  Check we can manipulate state of p2 
0, Line, //  Visit the end of the field. 
0, Line, //  referenced as #a in the expression   so non-qualified references 'hasRole()' 'hasIpAddress()' are invoked against it 
0, Line, // public abstract Point getPoint(); 
0, Line, // return pjp.proceed(); 
0, Line, //  conditions while invoking java.lang.reflect.Executable.getParameters(). 
0, Line, //  This is a better match... 
0, Line, //  even if Locale was different, same bundles might have been found. 
0, Line, //  If return value is a JDBC Statement, apply statement settings   (fetch size, max rows, transaction timeout). 
0, Line, //  Subclass used for matching 
0, Line, //  SPR-10619 
0, Line, //  Initialize the context fields related to stack map frames, and generate the first 
0, Line, //  Else fall back to superclass implementation: calling loadView. 
0, Line, //  Last in chain, so if we're called and we fail, that's bad... 
0, Line, //  see ConfigurablePropertyResolver#setRequiredProperties 
0, Line, //  default HandlerExceptionResolvers if no other resolvers are found. 
0, Line, //  we need the real target too, not just the proxy... 
0, Line, //  -> "unhandled exception", to be logged at error level by Quartz 
0, Line, //  expected, because stack was empty 
0, Line, //  Implementation of java.util.Map 
0, Line, //  Regular delegation to the target SessionFactory, 
0, Line, //  WildcardTheRestPathElement 
0, Line, //  An interceptor array specified through the constructor 
0, Line, //  Session should not be present 
0, Line, //  Temporarily return non-post-processed object, not storing it yet.. 
0, Line, //  Bean name not matching qualifier 
0, Line, //  Else, nothing to customize 
0, Line, //  parseCheck("{1}.#isEven(#this) == 'y'?'it is even':'it is odd'",   "({1}.#isEven(#this) == 'y') ? 'it is even' : 'it is odd'");   } 
0, Line, //  Now turn off growing and reference off the end 
0, Block, /* 	 * Test method for	 * 'org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessException(PersistenceException)'	  */
0, Line, //  Check nested list in list 
0, Line, //  Expose indexed variables as well as parameter names (if discoverable) 
0, Line, //  Remove the set of children for the current context from the hierarchy map. 
0, Line, //  Should throw a BadSqlGrammarException after test01, assuming 'drop-schema.sql' was executed 
0, Line, //  If this check is changed, the generateCode method will need changing too 
0, Line, //  Constants to manipulate the DIM field of an abstract type. 
0, Line, //  Should have left this one alone 
0, Line, //  if close is called entire test will fail 
0, Line, //  No JMS Session available 
0, Line, //  Compiler chooses getX(Number i) when passing Integer 
0, Line, //  make the scope create a new object 
0, Line, //  TODO one invocation from setup
0, Line, // ---------------------------------------------------------------------   Implementation of TransactionFactory interface  --------------------------------------------------------------------- 
0, Line, //  public for Kotlin 
0, Line, //  dump(expressionToCompile.toStringAST(), clazzName, data); 
0, Line, //  Finally, let's look for @Bean methods... 
0, Line, //  ctx.register(ConfigWithPlaceholderConfigurer.class); 
0, Line, //  qualifier added, and value matches the default 
0, Line, //  Sort by Ordered/@Order if we loaded default listeners. 
0, Line, //  a single resource with the given name 
0, Line, //  Replace system properties with a mock property source for convenience 
0, Line, //  TcpConnectionHandler 
0, Line, //  gh-23240 
0, Line, //  Fully synchronized building and caching of a ListenerRetriever 
0, Line, //  Get the ObjectName from the map key. 
0, Line, // -------------------------------------------------------------------------   Implementation of the Spring SchedulingTaskExecutor interface  ------------------------------------------------------------------------- 
0, Line, //  No logging: HTTP transports too verbose and we don't know enough to log anything of value 
0, Line, //  The context instance was injected without an explicit parent -> set   the root application context (if any; may be null) as the parent 
0, Line, //  HttpSession has a getId() method. 
0, Line, //  Name of procedure to call 
0, Line, //  HTTP responses returned by async HTTP client are not bound to an   active connection and do not have to deallocate any resources... 
0, Line, //  collection processors 
0, Line, //  Register an alias for the plain bean class name, if still possible,   if the generator returned the class name plus a suffix.   This is expected for Spring 1.2/2.0 backwards compatibility. 
0, Line, //  overloaded 
0, Line, //  Order doesn't matter: <bean> always wins over @Bean. 
0, Line, //  a?b:c 
0, Line, //  annotation.synthesize(); 
0, Line, //  October 
0, Line, //  Hessian 1.0 call 
0, Line, //  Check for file with language, country and variant localization. 
0, Line, //  all need converting to strings   needs string conversion   first and last need conversion 
0, Line, //  Check it still works: proxy factory state shouldn't have been corrupted 
0, Line, //  We always bind the TransactionInfo to the thread, even if we didn't create   a new transaction here. This guarantees that the TransactionInfo stack 
0, Line, //  on JDK 9 
0, Line, //  Now there may or may not be an exponent 
0, Line, //  Create default constructor 
0, Line, //  This will work as the local resolver is set 
0, Line, //  Use AUTODETECT_ALL as default in no beans specified explicitly. 
0, Line, //  Note format... 
0, Line, //  Opening tag still needs to be closed... 
0, Line, //  Need to recreate all Cache instances with the new store-by-value configuration... 
0, Line, //  env.setActiveProfiles(DEV_ACTIVE); 
0, Line, //  1. At limit.. 
0, Line, //  SPR-16483 
0, Line, //  Indicates whether this procedure's return value should be included 
0, Line, //  SPR-16350 
0, Line, //  Load default strategy implementations from properties file.   This is currently strictly internal and not meant to be customized   by application developers. 
0, Line, //  Ignore - we're reconnecting anyway 
0, Line, //  Build a proxy that also exposes the JAX-WS BindingProvider interface. 
0, Line, //  not currently testable in a reliable fashion  assertDoesNotMatchStringClass(classFilter); 
0, Line, //  Custom request method 
0, Line, //  Request 2 retrieves session 
0, Line, //  This isn't a real property, but a reference to another prototype 
0, Line, //  Choose an "aop" interceptor (used for AOP calls). 
0, Line, //  Return immediately if no @Configuration classes were found 
0, Line, //  Mapping from name to target object. 
0, Line, //  Use retain() for Reactor Netty 
0, Line, //  assignment 
0, Block, /*  L3B  */
0, Line, //  SPR-16486 
0, Line, //  Check declared factory method return type on factory class. 
0, Line, //  Create a parser 
0, Line, //  The user has explicitly specified a value for system-properties-mode: revert to   PropertyPlaceholderConfigurer to ensure backward compatibility with 3.0 and earlier. 
0, Line, //  SPR-17550 
0, Line, //  nothing to merge 
0, Line, //  Async I/O notification methods... 
0, Line, //  empty path 
0, Line, //  No result yet: store handler for processing once it comes in 
0, Line, //  instance check on purpose 
0, Line, //  Parse the argument types and compute their size, one at a each loop iteration. 
0, Line, //  RxJava 2 Single 
0, Line, //  AMC start 
0, Line, // ---------------------------------------------------------------------   Enable functionality through underlying transaction object  --------------------------------------------------------------------- 
0, Line, //  Generics potentially only match on the target class, not on the proxy... 
0, Line, //  Configure transactional connection settings for Quartz. 
0, Line, //  none of these sets are possible due to (expected) conversion problems 
0, Line, //  if only one operand, then this is unary minus 
0, Line, //  assumes Calendar->ReadableInstant converter is registered 
0, Line, //  YAML can have numbers as keys 
0, Line, //  class, field, method   class, field, method   class, field, method   field, method   class, field, method, parameter   class   method   module   module requires   field   method   module requires   method   field   method   class   class, method   method   class, field, method, parameter, module *   class   class(?) field inner   parameter, module, module *   class 
0, Line, //  TestExecutionListener not applicable due to a missing dependency 
0, Line, //  - The offset of each 'type_annotation' entry in the RuntimeInvisibleTypeAnnotations 
0, Line, //  Other functionality 
0, Line, //  Detect default configuration classes: 
0, Line, //  audio/*;q=0.7 < audio/*;q=0.3 
0, Line, //  variable access returning primitive 
0, Line, // 		assertEquals(1,parse("/**").getScore()); 
0, Line, //  Next, try the custom SQLException translator, if available. 
0, Line, //  -> best-effort match against the target class if applicable. 
0, Line, //  Shortcut for 1 dimensional 
0, Line, //  SPR-13727 
0, Line, //  check we can find the ctor ok 
0, Line, //  See SPR-7000 
0, Line, //  Private methods for use from State's... 
0, Line, //  configure the page context 
0, Line, //  Release Connection on suspend if the application doesn't keep   a handle to it anymore. We will fetch a fresh Connection if the   application accesses the ConnectionHolder again after resume,   assuming that it will participate in the same transaction. 
0, Line, //  reset the flag back 
0, Line, //  Fetch physical Connection from DataSource. 
0, Line, //  no inline list building at the moment   evaluate("1 between {1, 5}", "true", Boolean.class); 
0, Line, //  Not already registered for JMX exposure. 
0, Line, //  we don't really care... 
0, Line, //  Implicitly started session.. 
0, Line, //  If this subroutine has not been marked yet, find its basic blocks. 
0, Line, //  should skip connection to the server 
0, Line, // -------------------------------------------------------------------------   Management of transaction-associated resource handles  ------------------------------------------------------------------------- 
0, Line, //  Cache in mock cache 
0, Line, //  https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1 
0, Line, // e.g. WebSphere 
0, Line, //  No '\v' in Java, use octal value for VT ascii char 
0, Line, //  This is OK - it may have gone stale due to a class change,   let's try to get a new one and call it before giving up... 
0, Line, //  generate name and register the interceptor 
0, Line, //  Do not modify the Session: just clear the marker. 
0, Line, //  same as java.sql.Connection.TRANSACTION_READ_COMMITTED; 
0, Line, //  No context instance is defined for this servlet -> create a local one 
0, Line, //  Incorrectly returns true since it doesn't detect that this is an interface
0, Line, //  static method, one parameter of primitive type 
0, Line, //  specified, and find the discovered argument types. 
0, Line, //  allow @Scheduled method to be called several times 
0, Line, //  Bitmasks to get each field of an abstract type. 
0, Line, //  Let concrete implementations initialize themselves. 
0, Line, //  Avoid lock contention for known Methods through concurrent access... 
0, Line, //  Get as late as possible to minimize the time we "own" the target, in case it comes from a pool... 
0, Line, //  All the methods in this class use the advised() template method   to obtain a transaction object, configured with the when PlatformTransactionManager   and transaction attribute source 
0, Line, //  The default context is used if no override is supplied by the user 
0, Line, //  Case of an array type, we need to build its descriptor first.   SPRING PATCH: larger initial size 
0, Line, //  already processed 
0, Line, //  It looks like a type reference but is T being used as a map key?
0, Line, //  Async request timeout 
0, Line, //  Failed to read metadata -> ignore. 
0, Line, //  Read the 'uses_count' and 'uses' fields. 
0, Line, //  Change age, so this will be returned by invocation 
0, Line, //  Ignore: just for testing against duplicate. 
0, Line, //  Our own broadcast 
0, Line, //  So, it's a call parameter - part of the call string.   Get the value - it may still be null. 
0, Line, //  Create proxy if we have advice. 
0, Line, //  after construction and first resolution 
0, Line, //  Initialize the bean instance. 
0, Line, //  OpEq 
0, Line, //  SPR-14265 
0, Line, //  Could neither introspect the target class nor the proxy class ->   let's try the original method's declaring class before we give up... 
0, Line, //  path element 
0, Line, //  The TestBean reference is resolved to a prototype in the factory 
0, Line, //  Clean up specially exposed Session, if any. 
0, Line, //  SPR-15464 
0, Line, //  Section 7.5 
0, Line, //  Create close-suppressing Connection proxy, also preparing returned Statements. 
0, Line, //  SPR-15331 
0, Line, //  When container type is omitted and therefore inferred from @Repeatable 
0, Line, //  assumably failed to flush changes to database 
0, Line, //  Either a previously bound unsynchronized EntityManager, or the application   has requested a synchronized EntityManager before and therefore upgraded   this transaction's EntityManager to synchronized before. 
0, Line, //  Shortcut: directly present on the element, with no merging needed?
0, Line, // ---------------------------------------------------------------------   Delegating implementations of JspWriter's abstract methods  --------------------------------------------------------------------- 
0, Line, //  Update the input stack size of the successor blocks of basicBlock in the control flow 
0, Line, //  Compute the (absolute) input stack size and maximum stack size of this block. 
0, Line, //  Not a valid URI (let's try as Spring resource location),   or a URI scheme not registered for NIO (let's try URL   protocol handlers via Spring's resource mechanism). 
0, Line, //  ServerEndpointConfig implementation 
0, Line, //  override 
0, Line, //  gh-22771 
0, Line, //  These had better be a Bad SQL Grammar code 
0, Line, //  Any sort of path separator found... 
0, Line, //  For testing 
0, Line, //  Assumably a Spring-generated proxy from SharedEntityManagerCreator:   since we're passing it back to the native EntityManagerFactory,   let's unwrap it to the original Query object from the provider. 
0, Line, //  Initialize conversion service for this context. 
0, Line, //  nonDottedNode: indexer; 
0, Line, //  Handle close method: don't pass the call on. 
0, Line, //  PropertyEditor cannot convert non-Strings 
0, Line, //  parseCheck("1 between {1, 5}", "(1 between {1,5})");   } 
0, Line, //  Check that we can get the template, even if we might subsequently get it again. 
0, Line, //  MethodReference 
0, Line, //  Instance state 
0, Line, //  ------------------------------------------------------------------------- 
0, Line, //  nothing to assert: we just want to make sure that the context loads without   errors. 
0, Line, //  Lazily initialize cache resolver via default cache manager... 
0, Line, //  Adding a new property accessor just for a particular type 
0, Line, //  Ignore -> fall back to ASM next, except for core java types. 
0, Line, //  Global methods first 
0, Line, //  Go through the accessors that may be able to resolve it. If they are a cacheable accessor then   get the accessor and use it. If they are not cacheable but report they can read the property 
0, Line, //  SPR-15201 
0, Line, //  the field we will retrieve 
0, Block, /* 	* SPR_2165 - ClassEditor is inconsistent with multidimensional arrays	 */
0, Line, //  Write type_index and reserve space for num_element_value_pairs. 
0, Line, //  Map implementation 
0, Line, //  there should be only one 
0, Line, //  Section 7.4.1 
0, Line, //  First step: find the subroutines. This step determines, for each basic block, to which 
0, Line, //  This call requires the cache manager to be set 
0, Line, //  so that this method can be called again with a different subroutine or subroutine caller. 
0, Line, //  always a start node 
0, Line, //  Register transaction timeout. 
0, Line, //  SPR-11897 
0, Line, //  Flush any messages cached in the mean time 
0, Line, //  -----------------------------------------------------------------------------------------------   Constructor   ----------------------------------------------------------------------------------------------- 
0, Line, //  non-standard indexed write method 
0, Line, //  Actual execution of the query: close the EntityManager right   afterwards, since that was the only reason we kept it open. 
0, Line, //  Visit the ModulePackages attribute. 
0, Line, //  Now obtain the value for the fully resolved key... 
0, Line, //  Check we can add a new advisor to the target 
0, Line, //  Trigger destruction of contained beans... 
0, Line, //  ServletContext needs to be specified to be able to fall back to the root context! 
0, Line, //  SPR-16668 
0, Line, //  SPR-14005 
0, Line, //  First non compiled: 
0, Line, //  Cache forever: prefer locale cache over repeated getBundle calls. 
0, Line, //  SPR-16402 
0, Line, //  SPR-11763 
0, Line, //  makeEncSJP, although meant for computing the enclosing join point,   it serves our purpose here 
0, Line, //  Return unmodifiable snapshot, to avoid ConcurrentModificationExceptions   while iterating and invoking synchronization callbacks that in turn   might register further synchronizations. 
0, Line, //  Method m2 = getNameMethod;   No attributes for m2 
0, Line, //  Use a try-catch block to ensure that the exception is thrown as a result of the   next line and not as a result of the previous line. 
0, Line, //  Check the EhCache cache again (in case the cache was added at runtime) 
0, Line, //  If the advisor passed validation, we can make the change. 
0, Line, //  both separators are 2 chars 
0, Line, //  reflective invocation of the target, and avoid creating a MethodInvocation. 
0, Line, //  for postProcessPropertyValues 
0, Line, //  @since 4.2 
0, Line, //  Now check non-effect of removing interceptor that isn't there 
0, Line, //  try second time 
0, Line, //  Not enough data to match this path element 
0, Line, //  Skip trailing separators that would be in the result 
0, Line, //  Read the num_annotations field and create an array to store the type_annotation offsets. 
0, Line, //  Modulus 
0, Line, //  static field 
0, Line, //  Interpret argument array as individual method arguments. 
0, Line, //  Add remote registry 
0, Line, // sumExpression: productExpression ( (PLUS^ | MINUS^) productExpression)*; 
0, Line, //  Create the constant pool arrays. The constant_pool_count field is after the magic, 
0, Line, //  SPR-12960 
0, Line, //  parseCheck("new int[] {1,2,3}.max()");   }   
0, Line, //  Register HttpRequestHandlerAdapter 
0, Line, //  that they still refer to the canonical instance for this bytecode offset. 
0, Line, //  Data flow algorithm: put this basic block in a list of blocks to process (which are blocks   belonging to subroutine subroutineId) and, while there are blocks to process, remove one from   the list, mark it as belonging to the subroutine, and add its successor basic blocks in the   control flow graph to the list of blocks to process (if not already done). 
0, Line, //  If the app container sanitized the servletPath, check against the sanitized version 
0, Line, //  assertEquals(Connection.class, con.getClass());   assertEquals(Types.ARRAY, type);   assertEquals("NUMBER", typeName); 
0, Line, //  Notify all post-processors that the specified bean definition has been reset. 
0, Line, //  Request 2 saves session after invalidated 
0, Line, //  SPR-15205 
0, Line, //  Don't be clever for arrays or a null target... 
0, Line, //  Pre-bound Session found -> simply proceed. 
0, Line, //  replyTO set on the request 
0, Line, //  Determine current EntityManager: either the transactional one 
0, Line, //  type is a primitive or array type. 
0, Line, //  Attempt to get the actual ResolvableType for the bean. 
0, Line, //  Empty holder representing "not found". 
0, Line, //  Check that a repeated execution in the same thread works and performs cleanup. 
0, Line, //  instance @Bean method 
0, Line, //  This class just checks proxy is bound before getTarget() call 
0, Line, // ---------------------------------------------------------------------   Implementation of BindingResult interface  --------------------------------------------------------------------- 
0, Line, //  Methods to discover parameter names for 
0, Line, //  Parse the array_value array. 
0, Line, //  Have to exclude Clover-generated class files here,   as we might be running as part of a Clover test run. 
0, Line, //  the number is something like '3.'. It is really an int but may be 
0, Line, //  First force the full class loading of the weaver by invoking transformation on a dummy class 
0, Line, //  When compatible, what is the descriptor of the common type 
0, Line, //  JORAM 
0, Line, //  No need to update maxRelativeStackSize (the stack size delta is always negative). 
0, Line, //  Pass full property name and old value in here, since we want full 
0, Line, //  Find the labels for UNINITIALIZED frame types. Instead of decoding each element of the   stack map table, we look for 3 consecutive bytes that "look like" an UNINITIALIZED type   (tag ITEM_Uninitialized, offset within bytecode bounds, NEW instruction at this offset).   We may find false positives (i.e. not real UNINITIALIZED types), but this should be rare,   and the only consequence will be the creation of an unneeded label. This is better than   creating a label for each NEW instruction, and faster than fully decoding the whole stack 
0, Line, //  ... but this fails 
0, Line, //  JpaTransactionManager 
0, Line, //  Definitely doesn't match: throw IllegalArgumentException/IllegalStateException 
0, Line, //  Decorate based on custom nested elements. 
0, Line, //  true 
0, Line, //  Next, look for grouped error codes. 
0, Line, //  convention for failing is to return null, allowing participation in a chain of responsibility 
0, Line, //  a '.' indicates this number is a real 
0, Line, //  only ServletHandlerAdapter with bean name "handlerAdapter" detected 
0, Line, //  By definition, basicBlock is reachable. 
0, Line, //  There is an initializer but this is a multi-dimensional array (e.g. new int[][]{{1,2},{3,4}}) - this   is not currently supported 
0, Line, //  Method with string return 
0, Line, //  Note that the following invocation of getApplicationContext() forces eager   loading of the test's ApplicationContext which consequently results in the   publication of all test execution events. Otherwise, TestContext#publishEvent   would never fire any events for ExampleTestCase. 
0, Line, //  fall back to full creation of the FactoryBean instance. 
0, Line, //  The output of the accessor is a primitive but from the block above it might be null,   so to have a common stack element type at skipIfNull target it is necessary   to box the primitive 
0, Line, //  Resources served via <mvc:resources/> 
0, Line, //  OperatorMatches 
0, Line, //  Check name with dots and hyphens replaced 
0, Line, //  Only validate min count since max count is checked on every request... 
0, Line, //  Fallback: target bean at least found by bean name - probably a manually registered singleton. 
0, Line, //  Force this, since we'll never actually connect 
0, Line, //  SPR-14882 
0, Line, //  If we encountered individual exceptions, throw the composite exception. 
0, Line, //  Collect any explicit @CachePuts 
0, Line, //  Equality amongst synthesized annotations 
0, Line, //  Try this first for backwards compatibility 
0, Block, /*  The following should work according to the spec, but doesn't on the JAXB2 implementation including in JDK 1.6.0_17	public JAXBElement<Source> standardClassSource() {		StringReader reader = new StringReader("<foo/>");		return new JAXBElement<Source>(NAME, Source.class, new StreamSource(reader));	}	 */
0, Line, //  Fast-forward a few seconds 
0, Line, //  No thread context class loader -> use class loader of this class. 
0, Line, //  Note that the 'map' key must be of type String, but the keys in the map   returned by createApproximateMap() are of type Color. Thus "foo" cannot be   cast to a Color. 
0, Line, //  Build the array and populate it 
0, Line, //  params with spaces 
0, Line, //  do something nice for arrays 
0, Line, //  Else leave default value. 
0, Line, //  SPR-8536 
0, Line, //  Track registration and notify listeners. 
0, Line, //  Using attributes source. 
0, Line, //  SPR-9603 
0, Line, //  -2 
0, Line, //  Encoding 
0, Line, //  May reach here without it computed if all elements are literals 
0, Line, //  consume 'AND' 
0, Line, //  Tag values for the BootstrapMethods attribute entries (ASM specific tag). 
0, Line, //  All literals so we can do this straight away 
0, Line, //  In case of an optional Collection/Map, silently ignore a non-unique case:   possibly it was meant to be an empty collection of multiple regular beans   (before 4.3 in particular when we didn't even look for collection beans). 
0, Line, //  not invoked again 
0, Line, //  Can only load single resources by absolute URL. 
0, Line, //  see: TestBean 
0, Line, //  Underlying ScheduledFutureTask to user-level ListenableFuture handle, if any 
0, Line, //  PropertyOrFieldReference 
0, Line, //  JDK classes don't have debug information (usually) 
0, Line, //  Extractors for specific content .. 
0, Line, //  try with non-transaction 
0, Line, //  No physical target Connection kept yet ->   resolve transaction demarcation methods without fetching   a physical JDBC Connection until absolutely necessary. 
0, Line, //  primitive left operand - should get boxed, return false 
0, Line, //  Parse the method descriptor, one argument type descriptor at each iteration. Start by   skipping the first method descriptor character, which is always '('. 
0, Line, //  SPR-16407 
0, Line, //  -----------------------------------------------------------------------------------------------   Fields used to compute the maximum stack size and number of locals, and the stack map frames   ----------------------------------------------------------------------------------------------- 
0, Line, //  In case of FactoryBean, try to match FactoryBean itself next. 
0, Line, //  Not found - now check again with full lock... 
0, Line, //  The maximum stack size is now at least one, because of the Throwable declared above. 
0, Line, //  relationalOperator   : EQUAL | NOT_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL | GREATER_THAN 
0, Line, //  Copyright (c) 2000-2011 INRIA, France Telecom   All rights reserved.     Redistribution and use in source and binary forms, with or without   modification, are permitted provided that the following conditions   are met:   1. Redistributions of source code must retain the above copyright      notice, this list of conditions and the following disclaimer.   2. Redistributions in binary form must reproduce the above copyright      notice, this list of conditions and the following disclaimer in the      documentation and/or other materials provided with the distribution.   3. Neither the name of the copyright holders nor the names of its      contributors may be used to endorse or promote products derived from      this software without specific prior written permission.     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF   THE POSSIBILITY OF SUCH DAMAGE. 
0, Line, //  Should not happen (no Model argument resolution) ... 
0, Line, //  The buffers used to store the content bytes 
0, Line, //  No synchronization on session demanded at all... 
0, Line, //  +1 again 
0, Line, // (nextPos > candidateIndex) && 
0, Line, //  - The string corresponding to the NestHost attribute, or null. 
0, Line, //  -----------------------------------------------------------------------------------------------   Constant pool entries management.   ----------------------------------------------------------------------------------------------- 
0, Line, //  may not be the end if the char after is also a " 
0, Line, // assertTrue(em.getTransaction().isActive()); 
0, Line, //  Merge local properties if specified. 
0, Line, //  Supported operand types for equals (at the moment) 
0, Line, // testAspectsAndAdvisorAreApplied(childAc, (ITestBean) ac.getBean("adrian")); 
0, Line, //  sessionId -> SessionSubscriptionInfo 
0, Line, //  After commit not invoked 
0, Line, //  no args 
0, Line, //  Default is no multipart resolver. 
0, Line, //  see SWS-392 
0, Line, //  SPR-13555 
0, Line, //  Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars... 
0, Line, //  cannot convert String to boolean 
0, Line, //  Expose ModelAndView for chosen error view. 
0, Line, //  This will get a connection. 
0, Line, //  Captures the most recently used method for the function invocation *if* the method   can safely be used for compilation (i.e. no argument conversion is going on) 
0, Line, //  Apply indexes and map keys: fetch value for all keys but the last one. 
0, Line, //  Keep the FULL_FRAME type. 
0, Line, //  [handlerStart,handlerEnd[ - [rangeStart,rangeEnd[ =       [handlerStart,rangeStart[ + [rangeEnd,handerEnd[ 
0, Line, //  Always use full path within current servlet context?
0, Line, //  test fields and helpers 
0, Line, //  We need to discover them, or if that fails, guess,   and if we can't guess with 100% accuracy, fail. 
0, Line, //  Delegate to application-provided document code. 
0, Line, //  Try reading the class file via ASM for deterministic declaration order...   Unfortunately, the JVM's standard reflection returns methods in arbitrary   order, even between different runs of the same application on the same JVM. 
0, Line, //  Unknown Number subtype -> best guess is double decrement 
0, Line, //  Only literal (encode full source).. 
0, Line, //  ConversionService implementation 
0, Line, //  SPR-13423 
0, Line, //  Try various advice types 
0, Line, //  ListenableFutureCallback implementation: handshake outcome 
0, Block, /*  Whether the client is willfully closing the connection  */
0, Line, //  Use the easiest to compute common super type 
0, Line, //  Stack is empty, should use context object 
0, Line, //  Look up by type and explicit name 
0, Line, //  Autodetect UserTransaction object that implements TransactionManager,   and check fallback JNDI locations otherwise. 
0, Line, //  ensure that override order is correct 
0, Line, //  We at least need the JTA UserTransaction. 
0, Line, //  If needed, update the maximum stack size and number of locals, and stack map frames. 
0, Line, //  SPR-10914 
0, Line, //  Unicode for PS (line terminator in ECMA-262) 
0, Line, //  AJ weaving is disabled -> do nothing 
0, Line, //  Now the expression has cached that throwException(int) is the right thing to   call. Let's change 'bar' to be a PlaceOfBirth which indicates the cached 
0, Line, //  No media type preferences 
0, Line, //  Only one method got invoked 
0, Line, //  Call from interface-based proxy handle, allowing for an efficient check? 
0, Line, //  (since MySQL doesn't throw the JDBC 4 SQLTimeoutException) 
0, Line, //  This should theoretically never happen... 
0, Line, //  Global exception handlers... 
0, Line, //  assumes Date->Long converter is registered 
0, Line, //  OpGE 
0, Line, //  may not be the end if the char after is also a ' 
0, Line, //  evaluates to "Nikola Tesla" 
0, Line, //  gh-23230 
0, Line, // ---------------------------------------------------------------------   Convenience methods for working with String arrays  --------------------------------------------------------------------- 
0, Line, //      
0, Line, //  SPR-16051 
0, Line, //  Not a default ReflectiveMethodResolver - don't know whether caching is valid 
0, Line, //  list of arrays 
0, Line, //  SPR-14888 
0, Line, // 	; 
0, Line, //  This will trigger compilation (second usage) 
0, Line, //  Re-retrieve the array from the synthesized annotation 
0, Line, //  Unsupported 
0, Line, // -------------------------------------------------------------------------   Methods dealing with callable statements  ------------------------------------------------------------------------- 
0, Line, //  form to be passed to the method 
0, JavaDoc, /*  * Utility methods for simple pattern matching, in particular for * Spring's typical "xxx*", "*xxx" and "*xxx*" pattern styles. * * @author Juergen Hoeller * @since 2.0  */
0, Line, //  The Classfile's access_flags field is just after the last constant pool entry. 
0, Line, //  Compute the concrete types of the local variables at the end of the basic block corresponding   to this frame, by resolving its abstract output types, and merge these concrete types with 
0, Line, //  Must not be able to set enter message with invocation time placeholder 
0, Line, //  The following tests fail with a MalformedURLException on Windows   testResolvePathWithTraversal(location, "/" + secretPath);   testResolvePathWithTraversal(location, "/  " + secretPath); 
0, Line, //  Put it in the cache. 
0, Line, //  custom scope annotation makes the bean prototype scoped. subsequent calls   to getBean should return distinct instances. 
0, Line, //  Reset PropertyEditor: It already did a proper conversion.   Don't use it again for a setAsText call. 
0, Line, //  Fall back to searching the system environment. 
0, Line, //  resource loading environment. 
0, Line, //  Mark override as not overloaded, to avoid the overhead of arg type checking. 
0, Line, //  SPR-16187 
0, Line, //  We have to parse "advice" and all the advice kinds in one loop, to get the   ordering semantics right. 
0, Line, //  Set default singleton scope, if not configured before. 
0, Line, //  Reset the interrupted flag as it was before. 
0, Line, //  Additional check for defining the package, if not defined yet. 
0, Line, //  Return original String if not modified. 
0, Line, //  different types 
0, Line, //  Check old BindException prefix for backwards compatibility. 
0, Line, //  In case of FactoryBean, return singleton status of created object if not a dereference. 
0, Line, //  aop.xml is present on the classpath -> enable 
0, Line, //  Server-side only: single Resource or sub-regions... 
0, Line, //  Check name with just hyphens replaced 
0, Line, //  Proceed without invoking this filter... 
0, Line, //  Should now match absquatulate() as well 
0, Line, //  does not throw after the changes introduced in SPR-8806 
0, Line, //  clear first, session may be unresponsive 
0, Line, //  SPR-12475 
0, Line, //  If there are no put requests, just use the cache hit 
0, Line, //  SPR-8661 
0, Line, //  URI var with regex for path variable, and URI var for matrix params.. 
0, Line, //  -----------------------------------------------------------------------------------------------   Implementation of the AnnotationVisitor abstract class   ----------------------------------------------------------------------------------------------- 
0, Line, //  Full check for complex generic type match... 
0, Line, //  Find attributOffset of the 'bootstrap_methods' array. 
0, Line, // create new inventor instance within add method of List 
0, Line, //  -----------------------------------------------------------------------------------------------   Other public methods   ----------------------------------------------------------------------------------------------- 
0, Line, //  It's because Integers aren't canonical 
0, Line, //  Handle close method: suppress, not valid. 
0, Line, //  Will allow CaptureTheRest to bind the variable to empty 
0, Line, //  Making a class abstract doesn't _really_ prevent instantiation :-) 
0, Line, //  Not the usual case - simply forget about the type check... 
0, Line, //  Map key: Country   Map value: Locale 
0, Line, //  Write tag and type_index, and reserve 2 bytes for num_element_value_pairs. 
0, Line, //  If we have a bean type use it so that generics are considered 
0, Line, //  Find a param-aware ancestor 
0, Line, //  Cache handling 
0, Line, //  Note: fields are ordered as in the field_info structure, and those related to attributes are   ordered as in Section 4.7 of the JVMS. 
0, Line, //  No longer counting 
0, Line, // -------------------------------------------------------------------------   Management of transaction synchronizations  ------------------------------------------------------------------------- 
0, Line, //  Proxy classes never have annotations on their redeclared methods. 
0, Line, //  SPR-17593: explicit HEAD should not clash with implicit mapping via GET 
0, Line, //  Avoid initialization of shared DefaultConversionService if   no standard type conversion is needed in the first place... 
0, Line, //  Process any late evictions 
0, Line, //  Explicitly close all MessageProducers and MessageConsumers that   this Session happens to cache... 
0, Line, //  Fall back to stream existence: can we open the stream? 
0, Line, //  Unless it was invalidated 
0, Line, //  Prepare taskExecutor and maxMessagesPerTask. 
0, Line, //  left scans right, and right scans left 
0, Line, //  Since there is already a stack map frame for this bytecode offset, there is no need to   insert a new one. 
0, Line, //  No transaction or new transaction for the current scope ->   invoke the afterCompletion callbacks immediately 
0, Line, //  classes. 
0, Line, //  Cache the result for further calls to getType() 
0, Line, //  Note: the ordering of the config classes is intentionally: global, two, one. 
0, Line, //  Handle JPA 2.0 unwrap method - could be a proxy match. 
0, Line, //  -----------------------------------------------------------------------------------------------   Exceptions table entries, debug information, max stack and max locals   ----------------------------------------------------------------------------------------------- 
0, Line, //  Now test the Prototype TargetSource 
0, Line, // ---------------------------------------------------------------------   Implementation of remaining BeanFactory methods  --------------------------------------------------------------------- 
0, Line, //  java.util.Properties does not allow null values (because Hashtable does not) 
0, Line, //  The bootstrap method arguments can be Constant_Dynamic values, which reference other   bootstrap methods. We must therefore add the bootstrap method arguments to the constant pool   and BootstrapMethods attribute first, so that the BootstrapMethods attribute is not modified 
0, Line, //  cool; now let's change the script and check the refresh behaviour... 
0, Line, //  set up test data 
0, Line, //  Look for Query arguments, primarily JPA 2.1's addNamedQuery(String, Query) 
0, Line, //  If dstFrame is an exception handler block, it can be reached from any instruction of the   basic block corresponding to this frame, in particular from the first one. Therefore, the   input locals of dstFrame should be compatible (i.e. merged) with the input locals of this   frame (and the input stack of dstFrame should be compatible, i.e. merged, with a one
0, Line, //  JSON must be preferred for Flux<String> -> List<String> or else we stream 
0, Line, // -------------------------------------------------------------------------   Inner classes used as internal adapters  ------------------------------------------------------------------------- 
0, Line, //  parseCheck("(#fact = {|n| $n <= 1 ? 1 : $n * #fact($n-1) }; #fact(5))",   "(#fact={|n| ($n <= 1) ? 1 : ($n * #fact(($n - 1))) };#fact(5))");   } // 120 
0, Line, //  SPR-17256 
0, Line, //  Test with default class loader first... 
0, Line, //  session exists 
0, Line, //  Fetch Spring root application context and initialize the delegate early,   if possible. If the root application context will be started after this 
0, Line, //  context-param in web.xml, if any. 
0, Line, //  7.5.12 
0, Block, /* 			weblogic.transaction.TransactionManager wtm =					(weblogic.transaction.TransactionManager) getTransactionManager();			wtm.forceResume(suspendedTransaction);			 */
0, Line, //  Detect transformation-aware ClassLoader by traversing the hierarchy   (as in GlassFish, Spring can be loaded by the WebappClassLoader). 
0, Line, //  Need to recreate all Cache instances with the new null-value configuration... 
0, Line, //  regular DateFormat-based Date, Calendar, Long converters 
0, Line, //  here: RIGHT!=null LEFT==unknown 
0, Line, //  The access_flags, name_index, descriptor_index and attributes_count fields use 8 bytes. 
0, Line, //  should do client-side lookup 
0, Line, //  Either targetClass or targetObject specified. 
0, Line, //  Publish early application events now that we finally have a multicaster... 
0, Line, //  method and class level -> method value overrides 
0, Line, //  SPR-11140 
0, Line, //  Visit the RuntimeVisibleParameterAnnotations attribute. 
0, Line, //  SPR-8798 
0, Line, //  create a new bean 
0, Line, //  ---------------------------------------------------------------------   Constructors   --------------------------------------------------------------------- 
0, Line, //  Hamcrest..   Hamcrest.. 
0, Block, /* 					weblogic.transaction.Transaction wtx = (weblogic.transaction.Transaction) tx;					wtx.setProperty(ISOLATION_LEVEL_KEY, isolationLevel);					 */
0, Line, //  We must copy until this is resolved:   https://github.com/eclipse/jetty.project/issues/2429 
0, Line, //  invisibleTypeAnnotationOffsets array). 
0, Line, //  Change IFNULL and IFNONNULL to ASM_IFNULL and ASM_IFNONNULL. 
0, Line, //  Sort non-void returning write methods to guard against the ill effects of   non-deterministic sorting of methods returned from Class#getDeclaredMethods   under JDK 7. See https://bugs.java.com/view_bug.do?bug_id=7023180 
0, Line, //  7.5.11 
0, Line, //  parseCheck("'efg' between {'abc', 'xyz'}", "('efg' between {'abc','xyz'})");   }// true 
0, Line, //  Plain response found. 
0, Line, //  Let the bean definition get re-merged now that we're actually creating   the bean... just in case some of its metadata changed in the meantime. 
0, Line, //  should only happen in test environments 
0, Line, //  trigger immediate startup 
0, Line, //  a=b 
0, Line, //  directly implemented 
0, Line, //  Not running in an ApplicationContext -> register tasks early... 
0, Line, //  Check that the bean can invoke the overridden method on itself   This differs from Spring's AOP support, which has a distinct notion   of a "target" object, meaning that the target needs explicit knowledge   of AOP proxying to invoke an advised method on itself. 
0, Line, //  Check subclass fields were copied 
0, Line, //  helper class 
0, Block, /*  data =  */
0, Line, //  Override default "txMgr" from @TxComposedWithOverride with "localTxMgr" 
0, Line, //  CaptureTheRestPathElement 
0, Line, //  Defensively fall back to URL connection check instead 
0, Line, //  nothing to really test; it is enough if we don't get error while creating app context
0, Line, //  Assignment 
0, Line, //  :{x} style parameter 
0, Line, //  should have failed with bogus propagation code 
0, Line, //  7.5.10 
0, Block, /*  All tests are in the parent class...  */
0, Line, //  nothing passed to varargs parameter 
0, Line, //  Send message via current transport... 
0, Line, //  This forces the method to be executed again 
0, Line, //  Advice instance identity is unimportant to the proxy class:   All that matters is type and ordering. 
0, Line, //  Read the fields_count field. 
0, Line, //  Modify nested map 
0, Line, //  SPR-6268 
0, Line, //  Entry for fallback locale that isn't already in filenames list. 
0, Line, //  SPR-16059 
0, Line, //  Create a deep copy, resolving any references for values. 
0, Line, //  ClientHttpRequest delegation methods... 
0, Line, //  @@protoc_insertion_point(builder_scope:SecondMsg) 
0, Line, //  Note: Unlike return type, no such generic information is needed for the throwing type,   since Java doesn't allow exception types to be parameterized. 
0, Line, //  Full match: language + country, possibly narrowed from earlier language-only match 
0, Line, //  SPR-9378 
0, Line, //  Compute the offset and the length of the BootstrapMethods 'bootstrap_methods' array. 
0, Line, //  method level 
0, Line, //  Leaf count 
0, Line, //  Shortcut if no args need to be loaded 
0, Line, //  Else, use path within current servlet mapping if applicable 
0, Line, //  If the meta-distance is positive, that means the annotation is   meta-present and should therefore have lower priority than directly   present annotations (i.e., it should be prepended to the list instead   of appended). This follows the rule of last-one-wins for overriding   properties. 
0, Line, //  obtain a FactoryBean's object type... 
0, Line, //  WebSocketContainer 
0, Line, //  Clear already activated context builder. 
0, Line, //  succeeds 
0, Line, //  Configure the bean definition reader with this context's 
0, Line, //  Static references 
0, Line, //  Flip the default implementation from SyncHandlerMethodArgumentResolver:   instead of delegating to (sync) resolveArgumentValue,   call (async) super.resolveArgument shared with non-blocking resolvers;   actual resolution below still sync... 
0, Line, //  test resolve with no args 
0, Line, //  Required so that all BeanPostProcessors, Scopes, etc become available. 
0, Line, //  Visit the NestedMembers attribute. 
0, Line, //  Use copy instead of buffer wrapping because Callback#succeeded() is   used not only to release the buffer but also to request more data   which is a problem for codecs that buffer data. 
0, Line, //  subroutine(s) it belongs. Start with the main "subroutine": 
0, Line, //  A custom namespace, not to be handled by Spring - maybe "xml:...". 
0, Line, //  The token stream constructed from that expression string 
0, Line, //  We keep HandlerExceptionResolvers in sorted order. 
0, Line, //  Actual implementations of Context methods follow 
0, Line, //  True because it maybeMatches with potential argument subtypes 
0, Line, //  'value' in @SpringAppConfig should not override 'value' in @ContextConfig 
0, Line, //  ---------------------------------------------------------------------   Pseudo-implementation of ConfigurableWebApplicationContext   --------------------------------------------------------------------- 
0, Line, //  --- When --- 
0, Block, /*  Primary lookup that holds all users and their sessions  */
0, Line, // constructor 
0, Line, //  If we cannot resolve types, we are not assignable 
0, Line, //  Don't allow no-public methods as required. 
0, Line, //  real numbers must have leading digits 
0, Line, //  Create a ResourceBundleMessageSource for the specified resource bundle   basename in the JSTL context-param in web.xml, wiring it with the given   Spring-defined MessageSource as parent. 
0, Line, //  second call: cache hit 
0, Line, //  no characters for var1   no characters for var1 
0, Line, //  Visit the field declaration. 
0, Line, //  Same contract as for overrides.xml 
0, Line, //  Parse depends-on list of bean names. 
0, Line, //  Shouldn't custom translate this - invalid class 
0, Line, //  Check bean class whether we're dealing with a FactoryBean. 
0, Line, //  Here we do not extract the labels corresponding to the attribute content. This would   require a full parsing of the attribute, which would need to be repeated when parsing   the bytecode instructions (see below). Instead, the content of the attribute is read one   type annotation at a time (i.e. after a type annotation has been visited, the next type   annotation is read), and the labels it contains are also extracted one annotation at a   time. This assumes that type annotations are ordered by increasing bytecode offset.
0, Line, //  Optimized resolution: no arguments to apply,   therefore no MessageFormat needs to be involved.   Note that the default implementation still uses MessageFormat;   this can be overridden in specific subclasses. 
0, Block, /*  no beans  */
0, Line, //  Serialize as regular MessageHeaders (without MessageHeaderAccessor reference) 
0, Line, //  It's a normal bean property. 
0, Line, //  Then skip the num_element_value_pairs and element_value_pairs fields (by reading them 
0, Line, //  bean does not exist 
0, Line, // ---------------------------------------------------------------------   Exporter implementation  --------------------------------------------------------------------- 
0, Line, //  gh-23101 
0, Line, //  Add the bootstrap method to the symbol table or revert the above changes. 
0, Line, //  SPR-14141 
0, Line, //  -----------------------------------------------------------------------------------------------   Main method, to simulate the execution of each instruction on the output frame   ----------------------------------------------------------------------------------------------- 
0, Line, //  We must check each value to see whether it requires a runtime reference   to another bean to be resolved. 
0, Line, //  roll over if needed 
0, Line, //  Recursively check each generic 
0, Line, //  final int contentLength = ITERATIONS * BUF_SIZE;   request.getHeaders().setContentLength(contentLength); 
0, Line, //  Direct match for exposed instance?
0, Line, //  Pass through IllegalStateException when coming from FileItem directly,   or propagate an exception from I/O operations within FileItem.write 
0, Line, //  Test OK 
0, Line, //  Parse the type_annotation's target_type and the target_info fields. The size of the 
0, Line, //  2. Set properties again 
0, Line, //  Should result in something similar to the following:     java.lang.IllegalStateException: Failed to parse 'testGroups' system property:   Unable to find test group 'bogus' when parsing testGroups value: 'all-bogus'.   Available groups include: [LONG_RUNNING,PERFORMANCE,CI] 
0, Line, //  Read the frame_type field. 
0, Line, //  Begin an early transaction to force EclipseLink to get a JDBC Connection   so that Spring can manage transactions with JDBC as well as EclipseLink. 
0, Line, //  Add to front of interceptor chain 
0, Line, //  Turn off writing so next item will be cached 
0, Line, //  Read the module_name_index, module_flags and module_version_index fields and visit them. 
0, Line, //  Check for our bizarre customized rollback rules 
0, Line, //  Wildcard with suffix? e.g. application/*+xml 
0, Line, //  Now to configure the advice... 
0, Line, // no inspection unchecked 
0, Line, //  Implemented interfaces probably expose conflicting method signatures...   Proceed with original target method. 
0, Line, //  needs to be first for additional headers 
0, Line, //  Possibly a static Java method registered as a function 
0, Line, //  NOTE: the two DataSource instances ARE the same! 
0, Line, //  Make given TaskExecutor available for SchedulerFactory configuration. 
0, Line, //  Skip the index field (2 bytes). 
0, Line, //  Skip property population phase for null instance. 
0, Line, //  First, do this for the stack operands that have not been popped in the basic block   corresponding to this frame, and which are therefore equal to their value in the input 
0, Line, //  Determine scheduler name across local settings and Quartz properties... 
0, Line, //  test is a valid value 
0, Line, //  Else throw as-is in order to comply with the contract of TestExecutionExceptionHandler. 
0, Line, //  Actual name to use for the return value in the output map 
0, Line, //  /hotels/** + /booking -> /hotels/**/booking 
0, Line, //  We failed more than once in a row or on startup -   wait before first recovery attempt. 
0, Line, //  HTTP 1.0 header 
0, Line, //  This comes from the test bean 
0, Line, //  Will throw exception if it fails 
0, Line, //  eat the body 
0, Line, //  Only register config value editors if explicitly requested. 
0, Line, //  Hit all 3 joinpoints 
0, Block, /* 		 * The nth entry contains the slot index of the LVT table entry holding the		 * argument name for the nth parameter.		  */
0, Line, //  SPR-13079 
0, Line, //  As of Spring 3.1, the default value of system-properties-mode has changed from   'FALLBACK' to 'ENVIRONMENT'. This latter value indicates that resolution of   placeholders against system properties is a function of the Environment and 
0, Line, //  OpGT 
0, Line, //  Start a new current basic block, and reset the current and maximum relative stack sizes. 
0, Line, //  Counter suffix for generated classes within this SpelCompiler instance 
0, Line, //  A single data class constructor -> resolve constructor arguments from request parameters. 
0, Line, //  SPR-14144 
0, Line, //  SPR-16674 
0, Line, //  Prepare method overrides. 
0, Line, //  traditional RMI stub 
0, Line, //  audio/* > */* 
0, Line, //  Retrieve and parse cookie value. 
0, Line, //  SPR-11623 
0, Line, //  Nested transaction through nested begin and commit/rollback calls. 
0, Line, //  cool, no errors, so the rubbish class name in the bean def was not resolved   let's resolve the bean definition; must blow up 
0, Line, //  Also check if empty string, as per the code in the interpreted version 
0, Line, //  no cache hit at all, caching disabled 
0, Line, //  VariableReference 
0, Line, //  Use AdaptableJobFactory as default for a local Scheduler, unless when   explicitly given a null value through the "jobFactory" bean property. 
0, Line, //  tokenize output and ignore whitespace 
0, Line, //  Parse the target_path structure and create a corresponding TypePath. 
0, Line, //  Obtain WebLogic ClientTransactionManager interface. 
0, Line, //  toString 
0, Line, //  Check that it is the Hibernate FlushMode type, not JPA's... 
0, Line, //  Age property is inherited from bean in parent factory 
0, Line, //  Be careful not to get the Advice without a guard, as this might eagerly   instantiate a non-singleton AspectJ aspect... 
0, Line, //  testing on Windows 
0, Line, //  Header field 0 is the status line for most HttpURLConnections, but not on GAE 
0, Line, //  Create disconnected SingletonTargetSource/EmptyTargetSource. 
0, Line, //  SPR-11755 
0, Line, //  Unknown Number subtypes -> best guess is double subtraction 
0, Line, //  Efficient ISO_LOCAL_* variants for printing since they are twice as fast... 
0, Line, //  Now safe to check "beforeSubscribed" flags, they won't change once in NO_DEMAND 
0, Line, //  override of scanned class 
0, Line, //  Increase counter until the id is unique. 
0, Line, //  Since we're not traversing interface hierarchies the following,   though perhaps 
0, Line, //  SPR-12820 
0, Line, //  SPR-14147 
0, Line, //  Create template for client-side JNDI lookup. 
0, Line, //  Remember the charset to encode URI variables later.. 
0, Line, //  OK 
0, Line, //  No doOnDiscard as operators used do not cache (and drop) buffers 
0, Line, //  Calling 'public int aVarargsMethod(String... strings)'  evaluate("aVarargsMethod('a','b','c')", 3, Integer.class); 
0, Line, //  Transactional code threw unexpected exception -> rollback 
0, Line, //  If we have a closure body, that will be the last argument. 
0, Line, //  SPR-15478 
0, Line, //  Convert original Number to target Number class. 
0, Line, //  loader. 
0, Line, //  No ListenerRetriever caching -> no synchronization necessary 
0, Line, //  If exposing the proxy, then AOP_PROXY must be used. 
0, Line, //  Add all the labels as successors of the current basic block. 
0, Line, //  We keep HandlerAdapters in sorted order. 
0, Line, //  test is not a valid integer 
0, Line, //  Passing (String) on call to (String[]) is exact match 
0, Line, //  SPR-16545 
0, Line, //  max reached 
0, Line, //  wrap it in a BeanDefinitionHolder with bean name 
0, Line, // ---------------------------------------------------------------------   Implementations of AbstractApplicationContext's template methods  --------------------------------------------------------------------- 
0, Line, //  When building ClientResponse manually, the ClientRequest.logPrefix() has to be passed,   e.g. via ClientResponse.Builder, but this (builder) is not used currently. 
0, Line, //  Are there any file prefix/suffix things to consider?
0, Line, //  SPR-10554 
0, Line, //  here. 
0, Line, //  We must be careful not to instantiate beans eagerly as in this case they   would be cached by the Spring container but would not have been weaved. 
0, Line, //  Errors and warnings 
0, Line, //  US ASCII 
0, Line, //  store the url as a variable 
0, Line, //  Members List 
0, Line, //  check position for first 'true' 
0, Line, //  CachePut forced a method call 
0, Line, //  HTML and/or JavaScript escape, if demanded 
0, Line, //  fails to wire when LowLevelConfig is processed with ASM because nested @Filter   annotation is not parsed 
0, Line, //  no @Cacheable operation at all 
0, Line, //  attempt to retrieve a bean that does not exist 
0, Line, //  target_info field depends on the value of target_type. 
0, Line, // -------------------   SPR-2603 classes  ------------------- 
0, Line, //  references 
0, Line, //  Parse the 'annotations' array field. 
0, Line, //  Allow directly-present annotation to override annotations that are meta-present. 
0, Line, //  If srcType is any other reference or array type,   merge(srcType, dstType) = min(srcDdim, dstDim) | java/lang/Object   where srcDim is the array dimension of srcType, minus 1 if srcType is an array type   with a non reference element type (and similarly for dstDim). 
0, Line, //  The simple case... nothing to bind. 
0, Line, //  Indicate that no message has been received. 
0, Line, //  Check if bean definition exists in this factory. 
0, Line, //  looks like 'NEW]' (so NEW used as map key) 
0, Line, //  report all connect failures to the handler   post-connect issues 
0, Line, // SPR-12403 
0, Line, //  Top-level bean: use plain class name with unique suffix if necessary. 
0, Line, //  no @Lookup annotation 
0, Line, //  /hotels/* + /booking => /hotels/booking 
0, Line, //  delegation 
0, Line, //  SPR-16414 
0, Line, //  Maybe an indexed/mapped property... 
0, Line, //  only first match actually counts 
0, Line, //  gh-23219 
0, Line, //  SPR-9374 
0, Line, //  Check fallback JNDI locations. 
0, Line, //  Use bean name as default transaction name. 
0, Line, //  Not an introduction field 
0, Line, //  Check registered HandlerExceptionResolvers... 
0, Line, //  Now with trailing matching turned OFF 
0, Line, // -------------------------------------------------------------------------   Convenience finder methods for named queries  ------------------------------------------------------------------------- 
0, Line, //  skip to root 
0, Line, //  Read the default label and the number of switch cases. 
0, Line, //  Next trigger is 3 months latter 
0, Line, //  Attach any refresh metadata. 
0, Line, //  factory method syntax 
0, Line, //  This will be remove anyway as the earlyRemove has removed the cache before 
0, Line, //  If one is null, check if the other is 
0, Line, //  Ignore: no target connection yet. 
0, Line, //  Quick check without a lock... 
0, Line, //  underlying File is asked for so that the last modified time can be checked... 
0, Line, // 2
0, Line, //  varargs short 
0, Line, //  Find all HandlerMappings in the ApplicationContext, including ancestor contexts. 
0, Line, //  must not add if collection is empty... 
0, Line, //  A RuntimeException: will lead to a rollback. 
0, Line, //  @ArgNames({"age"})	// AMC needs more work here? ignoring pjp arg... ok??   argNames should be supported in Around as it is in Pointcut 
0, Line, //  Java 9+ Flow.Publisher 
0, Line, //  position in the old string 
0, Line, // assertEquals(INITIAL_COUNT + 1, apartment.getCount()); 
0, Line, //  ID: ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9'|DOT_ESCAPED)*; 
0, Line, //  Like Spring Security does in HttpServlet3RequestFactory.. 
0, Line, //  Is bean a FactoryBean?
0, Line, //  MBean has a bad ObjectName, so if said MBean is autodetected, an exception will be thrown... 
0, Line, //  SPR-13693 
0, Line, //  Check for JPA support, and if present add the PersistenceAnnotationBeanPostProcessor. 
0, Line, //  Discover whether the location is an absolute or relative URI 
0, Line, //  SPR-10550 
0, Line, // 3
0, Line, //  e.g. AccessControlException on Google App Engine 
0, Line, //  Recurse through lower levels 
0, Line, //  /foo/bar should be overridden in concrete subclass 
0, Line, //  Do not try to strip off a path... 
0, Line, //  Not fully initialized yet -> return null to indicate "not known yet". 
0, Line, //  we have a non-empty properties string 
0, Line, //  if determineRemaining is true, this is set to the position in   the candidate where the pattern finished matching - i.e. it   points to the remaining path that wasn't consumed 
0, Line, //  No early bean instantiation possible: determine FactoryBean's type from   static factory method signature or from class inheritance hierarchy... 
0, Line, //  IE workaround: write into byte array first. 
0, Line, //  SPR-16494   https://github.com/reactor/reactor-netty/issues/283 
0, Line, //  Grab the locale-specific version of the template. 
0, Line, // 4 
0, Line, //  Proper TRACE response coming from a handler - we're done. 
0, Line, //  -----------------------------------------------------------------------------------------------   Constructors and factories   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-12287 (16/Oct/14 comments) 
0, Line, //  non existent indexer (index via a string) 
0, Line, //  Fallback: plain getBundle lookup without Control handle 
0, Line, //  attempt to retrieve the instance by its generated bean name 
0, Line, //  Fetch JTA TransactionSynchronizationRegistry from JNDI, if necessary. 
0, Line, //  exception occurred, eviction skipped, data should still be in the cache 
0, Line, // 5 
0, Line, //  Retrieve the new max of the sequence column... 
0, Line, //  SPR-6877 
0, Line, //  SPR-14761 
0, Line, //  Validates the custom synchronization is invoked 
0, Line, //  Default handling of number values 
0, Line, //  Calling 'public int aVarargsMethod2(int i, String... strings)' - returns int+length_of_strings 
0, Line, //  Need to copy into separate Collection here, to avoid side effects 
0, Line, //  Note: the XML bean definition for "enigma" always wins since   ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition()   lets XML bean definitions override those "discovered" later via an   @Bean method. 
0, Line, //  same as java.sql.Connection.TRANSACTION_SERIALIZABLE; 
0, Line, //  now verify failure on bad id 
0, Line, //  (implicit) stack map frame, if needed. 
0, Line, //  qualifier added, but includes no value 
0, Line, //  StepVerifier will block 
0, Line, //  Make sure body is consumed to avoid leak reports 
0, Line, //  else... 
0, Line, //  non-static method, primitive type return 
0, Line, //  - The strings corresponding to the Exceptions attribute, or null. 
0, Line, //  If codebaseUrl is set, try to load the class with the RMIClassLoader.   Else, propagate the ClassNotFoundException. 
0, Line, //  Resolve regularly, caching the result in the BeanDefinition... 
0, Line, //  now test with non-string 
0, Line, //  Invalid 
0, Line, //  Don't let calling code try to dereference the factory if the bean isn't a factory. 
0, Line, //  getter 
0, Line, //  copy in the sub-array 
0, Line, //  HTTP 1.1 Cache-Control header: "no-cache" is the standard value,   "no-store" is necessary to prevent caching on Firefox. 
0, Line, //  SmartContextLoader 
0, Line, //  SPR-16060 
0, Line, //  InlineList 
0, Line, //  Initializer should have doubled value 
0, Line, //  Get the start offset of the cp_info structure (plus one), and read the CONSTANT_Utf8 entry   designated by the first two bytes of this cp_info. 
0, Line, //  Reset the {@link #nextListElement} of all the basic blocks that have been processed to null, 
0, Line, //  Add the instruction to the bytecode of the method. 
0, Line, //  Cache to hold already loaded properties per filename 
0, Block, /*  L2  */
0, Line, //  Consider self references as a final pass...   but in the case of a dependency collection, not the very same bean itself. 
0, Line, //  If the list is purely literals, it is a constant value and can be computed and cached 
0, Line, //  use normal response 
0, Line, //  Avoid Validator invocation on FactoryBean.getObjectType/isSingleton 
0, Line, //  Reset all bean definitions that have the given bean as parent (recursively). 
0, Line, //  Put attribute_name_index and attribute_length. 
0, Line, //  for each property value in the new set 
0, Line, //  JSR-330 API not available - simply skip. 
0, Line, //  Regular case: find a handler method reflectively. 
0, Line, //  SPR-6741 
0, Line, //  Transport error => fallback 
0, Line, //  If no other property specified, consider bean name as static field expression. 
0, Line, //  If we got a TransactionAwareDataSourceProxy, we need to perform transactions   for its underlying target DataSource, else data access code won't see   properly exposed transactions (i.e. transactions for the target DataSource). 
0, Line, // ---------------------------------------------------------------------   Implementation of ConfigurableEnvironment interface  --------------------------------------------------------------------- 
0, Line, //  Expose request to the current thread (for SpEL expressions) 
0, Line, //  The generated code should include boxing of the int to a Number 
0, Line, //  All remaining parameters must be of this type or convertible to this type 
0, Line, //  SPR-16067, SPR-16695 
0, Line, //  Check whether token contains illegal whitespace within text. 
0, Line, //  If no attributes, the qualifier must be present 
0, Line, //  AbstractGenericWebContextLoader 
0, Line, //  JPA 2.0: return EntityManagerFactory without creating an EntityManager. 
0, Line, //  no java:comp/env prefix 
0, Line, //  UTF-8 by default 
0, Line, //  Similar declaration exists in AbstractSockJsSession.. 
0, Line, //  with a ret, in {@link Label#addSubroutineRetSuccessors}. 
0, Line, //  will be using the cached accessor this time 
0, Line, //  Delegating implementation of SmartLifecycle 
0, Line, //  See TestCacheInterceptor 
0, Line, //  skip to child 
0, Line, //  DontCheck(InterfaceIsType): can't be fixed (for backward binary compatibility). 
0, Line, //  SPR-17619 
0, Line, //  ref to method 
0, Line, //  Standard Java types do not have non-standard annotations on them ->   skip any load attempt, in particular for Java language interfaces. 
0, Line, //  FreeMarker will only accept known keys in its setSettings and 
0, Line, //  Track whether it is instantiation/destruction aware 
0, Line, //  determine name of the object and property 
0, Line, //  Pattern match?
0, Line, //  Includes fallback search for single EntityManagerFactory bean by type. 
0, Line, //  
0, Line, //  Keep a snapshot of the request attributes in case of an include,   to be able to restore the original attributes after the include. 
0, Line, //  Determine locale to use for this RequestContext. 
0, Line, //  First, the getSQLState check... 
0, Line, //  SPR-13435 
0, Line, //  Save flash attributes 
0, Line, //  enable repeated reads of response body 
0, Line, //  SPR-15831 
0, Line, //  Special handling of boolean property. 
0, Line, //  Absolutely needs thread-bound DataSource to initialize. 
0, Line, //  ServletResponse required for all further argument types 
0, Line, //  SPR-14899 
0, Line, //  ignore the output 
0, Line, //  Read the bytecode 'code' array to create a label for each referenced instruction. 
0, Line, //  Now cause it to throw an exception: 
0, Line, //  If sourceClass is Number and targetClass is Integer, the following message should expand to: 
0, Line, //  Visit the runtime visible instruction annotations, if any. 
0, Line, //  Static expansion helpers 
0, Line, //  Should only have one child element: ref, value, list, etc. 
0, Line, //  /{*foobar} is at the start 
0, Line, //  consume STAR/DIV/MOD 
0, Line, //  These are only checked for current Ctx (not parent ctx) 
0, Line, //  From non-transactional code running in active transaction synchronization   -> can be safely removed, will be closed on transaction completion. 
0, Line, //  Use JVM temp dir as ServletContext temp dir. 
0, Line, //  Should have thrown BeanCreationNotAllowedException 
0, Line, //  the check method is also cached 
0, Line, //  gh-23484 
0, Line, //  Register a custom MethodFilter... 
0, Line, //  non static field 
0, Line, //  due to a warning in Quartz 2.2's JobStoreCMT 
0, Line, //  and 08xxx will be data resource failure (non-transient) picked up by the fallback SQLState translator 
0, Line, //  We need a transaction for this method...
0, Line, //  wait for the entry to expire 
0, Line, //  Subscription should have happened by now due to ChannelSendOperator 
0, Line, //  Now test the ThreadLocal one 
0, Line, //  Relative path 
0, Line, //  Mark as infrastructure bean and attach source location. 
0, Line, //  Resolve arguments eagerly, for the case where the message   is defined in a parent MessageSource but resolvable arguments   are defined in the child MessageSource. 
0, Line, //  its current set of PropertySources. 
0, Line, //  SPR-12597 
0, Line, //  Recursive invocation, parsing placeholders contained in the placeholder key. 
0, Block, /*  named =  */
0, Line, //  "Hello world! (Japanese) 
0, Line, //  true during the previous iteration. The actual frame content is computed in MethodWriter. 
0, Line, //  Exception handling 
0, Line, //  placeholders nested within the value of "p4" are unresolvable and cause an 
0, Line, //  Plain bean instance -> register it directly. 
0, Line, //  parseCheck("new int[] {1, 2, 3, 4, 5}", "new int[] {1,2,3,4,5}");   }   
0, Line, //  Explicitly check for identity too: for Connection handles that do not implement   "equals" properly, such as the ones Commons DBCP exposes). 
0, Line, //  Call any method: should cause automatic tx invocation 
0, Line, //  -- AND and NOT -- 
0, Line, //  Passing (Integer, String[]) on call to (String, String[]) is exact match 
0, Line, //  Need to provide an independent DefaultConversionService, not the   shared DefaultConversionService used by PropertySourcesPropertyResolver. 
0, Line, //  type-safe access to servlet-specific methods 
0, Line, // ---------------------------------------------------------------------   Implementation of BeanDefinitionRegistry interface  --------------------------------------------------------------------- 
0, Line, //  get the root bean name - will be the name of the generated proxy factory bean 
0, Line, //  just ignore since we are already in the block 
0, Line, //  ANSI C's asctime() format 
0, Line, //  Visit the bytecode instructions. First, introduce state variables for the incremental parsing   of the type annotations. 
0, Line, //  Support classes 
0, Line, //  test the root mapping for /foo/* w/o a trailing slash - <host>/<context>/foo 
0, Line, //  Rollback (automatically) 
0, Line, //  The bytecode offset of the next runtime visible type annotation to read, or -1. 
0, Line, //  Reset connection. 
0, Line, //  This may fail if one of the annotations is not available.
0, Line, //  Construct using org.springframework.protobuf.Msg.newBuilder() 
0, Line, //  Make sure bean class is actually resolved at this point, and   clone the bean definition in case of a dynamically resolved Class   which cannot be stored in the shared merged bean definition. 
0, Line, //  -> allow the current bean method to override it, since it is application-level 
0, Line, //  Converting from an int to a Number 
0, Line, //  Hibernate 5.2's createQuery method declares a new subtype as return type,   so we need to use reflection for binary compatibility with 5.0/5.1 here. 
0, Line, //  If agentId was specified, we were only supposed to locate that   specific MBeanServer; so let's bail if we can't find it. 
0, Line, //  We must always calculate hashCode based on the proxy. 
0, Line, //  We arrived at the original timestamp - round up to the next whole second and try again... 
0, Line, //  SPR-15835 
0, Line, //  Should now match all getter methods 
0, Line, //  Passing (String, Integer, String[]) on call to (String, String, String[]) is exact match 
0, Line, //  --- setContextPath 
0, Line, //  Should not throw NPE 
0, Line, //  Check can cast to GroovyObject 
0, Line, //  The writer will call MultipartHttpOutputMessage#write which doesn't actually write   but only stores the body Flux and returns Mono.empty(). 
0, Line, //  Let the XML loader process the configuration. 
0, Line, //  By hypothesis, num_element_value_pairs is stored in the last unsigned short of 'annotation'. 
0, Line, //  package private 
0, Line, //  This would be legal, at least if not actually _starting_ a tx 
0, Line, //  Must generate CGLIB subclass... 
0, Line, //  Any call will do 
0, Line, //  No need to revisit the target annotation type: 
0, Line, //  Check decorated bean definition, if any: We assume it'll be easier 
0, Line, //  FORWARD/ERROR/ASYNC: minimal message (there should be enough context already) 
0, Line, //  A Groovy script, probably creating an instance: let's execute it. 
0, Line, //  Supplier-based log methods 
0, Line, //  strip the first "core" directory while keeping the "file:" prefix. 
0, Line, //  SPR-11130 
0, Line, //  Null model arguments added without a name being explicitly supplied are not allowed 
0, Line, //  note: "Id" is not a valid JavaBean name, nevertheless it is treated as "id" 
0, Line, //  when 
0, Line, //  Save 
0, Line, //  Take getInterceptors() List as-is when passed in here 
0, Line, //  Raise a proper exception in case of a null target 
0, Line, //  Shortcut: AnnotatedElementUtils would have to expect AnnotatedElement.getAnnotations()   to return a copy of the array, whereas we can do it more efficiently here. 
0, Line, //  Check for illegal characters.. 
0, Line, //  bogus method 
0, Line, // :	('new' qualifiedId LPAREN) => 'new' qualifiedId ctorArgs -> ^(CONSTRUCTOR qualifiedId ctorArgs) 
0, Line, //  Remove a basic block from the list of blocks to process. Note that we don't reset   basicBlock.nextListElement to null on purpose, to make sure we don't reprocess already 
0, Line, //  just in case 
0, Line, //  We handle OPTIONS transparently, so don't match if no explicit declarations 
0, Line, //  Shortcut for avoiding synchronization... 
0, Line, //  repeated evaluation to drive use of cached executor 
0, Line, //  SPR-14506 
0, Line, // 		checkError("/{foo}{bar}/",6,PatternMessage.CANNOT_HAVE_ADJACENT_CAPTURES); 
0, Line, //  EntityManagerFactoryInfo.getEntityManagerInterface returns null 
0, Line, //  set JPA 2.0 shared cache mode 
0, Line, //  SPR-13309 
0, Line, //  SPR-12592 
0, Line, //  NEEDS TO OVERRIDE THE REFLECTION ONE - SHOW REORDERING MECHANISM 
0, Line, //  Keep a default MessageCodesResolver 
0, Line, // ---------------------------------------------------------------------   Implementation of JSR-303 Validator interface  --------------------------------------------------------------------- 
0, Line, //  SPR-9983 
0, Line, //  Scan the factory bean methods 
0, Line, //  Work out whether to apply setter autowiring or constructor autowiring.   If it has a no-arg constructor it's deemed to be setter autowiring,   otherwise we'll try constructor autowiring. 
0, Block, /* 		 * Using a volatile invariant allows us to initialize the FastClass and		 * method index pairs atomically.		 *		 * Double-checked locking is safe with volatile in Java 5.  Before 1.5 this		 * code could allow fastClassInfo to be instantiated more than once, which		 * appears to be benign.		  */
0, Line, //  relax the treatment of unresolvable nested placeholders 
0, Line, //  Caches object obtained from FactoryBean if it is a singleton. 
0, Line, //  Invert the boolean 
0, Line, //  fall back to getRelative 
0, Line, //  -----------------------------------------------------------------------------------------------   Accessors   ----------------------------------------------------------------------------------------------- 
0, Line, //  Explicit reference equality is added here just in case Arrays.equals does not have one 
0, Line, //  Implicit toggling of ascending?
0, Line, //  ----------------------------------------------------------------------------------------------   Methods to parse a Code attribute   ---------------------------------------------------------------------------------------------- 
0, Line, //  try with non-existing value 
0, Line, //  Active profiles must be unique 
0, Line, //  gh-23358 
0, Line, //  Default to "text/plain" 
0, Line, //  What's a reasonable expectation for _any_ server or developer machine load?   3 seconds?
0, Line, //  IllegalStateException from sharing the underlying JDBC Connection   which typically gets committed first, e.g. with Oracle AQ --> ignore 
0, Line, //  Create a proxy with JndiObjectFactoryBean's proxy interface and the JndiObjectTargetSource. 
0, Line, //  SPR-13083 
0, Line, //  SPR-14372 (case insensitive) 
0, Line, //  parseCheck("{'a','b','a','d','e'}.distinct()");   } 
0, Line, //  SPR-15839 
0, Line, //  Add any property definitions that need adding. 
0, Line, //  expected 
0, Line, //  Finally register the scheduled tasks 
0, Line, //  Use current user schema if no schema specified 
0, Line, // projection: PROJECT^ expression RCURLY!; 
0, Line, //  Static method references 
0, Line, //  Get the MBean server connection. 
0, Line, //  Add the Hibernate transaction to the session holder. 
0, Line, //  SPR-10062 
0, Line, //  Can't compile this as we aren't going down the getfalse() branch in our evaluation 
0, Line, //  index 0 is the super class 
0, Line, //  currently does not know about java.util by default  		assertEquals(java.util.List.class,locator.findType("List")); 
0, Line, //  on Hibernate 5.0.x or lower - no need to change the default there 
0, Line, //  Use hashCode of reference proxy. 
0, Line, //  Shouldn't succeed in inserting into table which doesn't exist 
0, Line, // ---------------------------------------------------------------------   Implementation of ResourcePatternResolver interface  --------------------------------------------------------------------- 
0, Line, // ---------------------------------------------------------------------   Abstract methods that must be implemented by subclasses  --------------------------------------------------------------------- 
0, Line, //  Set content type before writing 
0, Line, //  no more path left to match this element 
0, Line, //  Gather all methods with matching name and parameter size. 
0, Line, //  Throw UnexpectedRollbackException if we have a global rollback-only   marker but still didn't get a corresponding exception from commit. 
0, Line, //  Verifying that after a number of compilations, the classloaders   used to load the compiled expressions are discarded/replaced.   See SpelCompiler.loadClass() 
0, Line, //  Source and subclasses should be supported according to the JAXB2 spec, but aren't in the RI   Source.class.isAssignableFrom(clazz) || 
0, Line, //  Nothing to do. 
0, Line, //  Assumes no overloading 
0, Line, //  Check whether a session is required. 
0, Line, //  SPR-11391 
0, Line, // -----------------------------   SPR-2454 Test Classes  ----------------------------- 
0, Line, //  Just to test ASM5's bytecode parsing of INVOKESPECIAL/STATIC on interfaces 
0, Line, //  SPR-12816 
0, Line, //  RFC 850 
0, Line, //  Multiplication 
0, Line, //  ---------------------------------------------------------------------   Public constants   --------------------------------------------------------------------- 
0, Line, //  Passing (Integer, String[]) on call to (Integer, String[]) is exact match 
0, Line, //  Avoid using java.util.stream.Stream in hot paths 
0, Line, //  Unexpected rollback only matters here if we're asked to fail early 
0, Line, //  WebSocketHandlerDecorator could close the session 
0, Line, //  If the map is purely literals, it is a constant value and can be computed and cached 
0, Line, //  No such factory bean 
0, Line, //  No suitable ModelAndViewResolver... 
0, Line, //  Single-value (with or without reactive type wrapper) 
0, Line, //  Ensure headers are flushed even if no body was written. 
0, Line, //  Call internal method to avoid getting the default code back   in case of "useCodeAsDefaultMessage" being activated. 
0, Block, /* 	 * SPR_2165 - ClassEditor is inconsistent with multidimensional arrays	  */
0, Line, //  as FactoryBean would ultimately return. 
0, Line, //  The BootstrapMethods attribute is read in the constructor. 
0, Line, //  Is this a covariant return type situation?
0, Line, //  Create a new EntityManager for use within the current transaction. 
0, Line, //  Force Mockito to invoke the interface default method 
0, Line, //  First, just reset the milliseconds and try to calculate from there... 
0, Line, //  should not happen 
0, Line, //  Multicast right now if possible - or lazily once the multicaster is initialized 
0, Line, //  Check that returning and throwing were in the argument names list if 
0, Line, //  or using assignment within the expression 
0, Line, //  neither foo nor bar properties are present -> validating should throw 
0, Line, // 	// time it compiled  	stime = System.currentTimeMillis(); 
0, Line, //  A singleton aspect. 
0, Line, //  SPR-3625 
0, Line, // -------------------   SPR-3304 classes  ------------------- 
0, Line, //  Insert a stack map frame for this bytecode offset, if requested by setting insertFrame to 
0, Line, //  "spouse", "touchy", "age" should not be copied 
0, Line, //  Fallback to Spring's own SQL state translation... 
0, Line, //  For parameter source lookups we need to provide case-insensitive lookup support since the   database meta-data is not necessarily providing case-sensitive column names 
0, Line, //  Check specifically registered converters 
0, Line, //  If the PropertyEditor returned null, there is no appropriate   text representation for this value: only use it if non-null. 
0, Line, //  conversion ability for map values. 
0, Line, //  We need to work it out. 
0, Block, /*  Using short class names as default bean names by default.  */
0, Line, //  For any other Throwable, e.g. OutOfMemoryError: let it get propagated as-is. 
0, Line, //  Set the session attribute 
0, Line, //  Try to locate existing MBeanServer, if desired. 
0, Line, //  Must now continue to report back as not having been modified 'cos the Resource does not support access as a File (and so the lastModified date cannot be determined). 
0, Line, //  Class not found - can't resolve class reference in annotation attribute. 
0, Line, //  Abstract types popped from the stack or read from local variables. 
0, Line, //  faking no message received 
0, Line, //  SPR-12813 
0, Line, //  testing simple /**/behavior 
0, Line, //  ---- reproduce ---- 
0, Line, //  RIGHT==null LEFT!=null 
0, Line, //  - The offset of the MethodParameters attribute, or 0. 
0, Line, //  Shouldn't really happen, as a rollback doesn't cause a flush. 
0, Line, //  the DAY_OF_WEEK values in java.util.Calendar start with 1 (Sunday),   but in the cron pattern, they start with 0, so we subtract 1 here 
0, Line, //  unwrap infrastructure proxy 
0, Line, //  filter is enabled by default 
0, Line, //  here: RIGHT==null LEFT==unknown 
0, Line, //  SPR-12945 
0, Line, //  maybe 
0, Line, //  use 4 and 2 bytes respectively. 
0, Line, //  Stop all Lifecycle beans, to avoid delays during individual destruction. 
0, Line, //  Cache debug flag to avoid repeated checks. 
0, Line, //  The expression being parsed 
0, Line, //  Unknown Number subtypes -> best guess is double comparison 
0, Line, //  to support styles of field injection. 
0, Line, //  If srcType is any other type, merge(srcType, dstType) = TOP. 
0, Line, //  take bean from context 
0, Line, //  will have parent 
0, Line, //  ordered by priority - operands first 
0, Line, //  Corresponding attribute method not found: cannot expose empty array. 
0, Line, //  The reflection one will be used for other properties... 
0, Line, //  Create the connector server now. 
0, Line, //  Only actually register it if there are destinations specified;   otherwise @SubscribeMapping is just being used as a (meta-annotation) marker. 
0, Line, //  then ask them to read it 
0, Line, //  calling a factory method that accepts arguments without any arguments emits an exception unlike cases   where a no-arg factory method is called with arguments. Adding this test just to document the difference 
0, Line, //  SPR-16683 
0, Line, //  General execution 
0, Line, //  Visit the end of the class. 
0, Line, //  SPR-12811 
0, Line, //  We must avoid fetching a target Connection for "hashCode",   and we must return the same hash code even when the target   Connection has been fetched: use hashCode of Connection proxy. 
0, Line, //  Server and session id's must not contain "." 
0, Line, //  Cover all PathElement kinds 
0, Line, //  Demonstrates it works if we actually use the subtype 
0, Line, //  Find the start and end bytecode offsets of this unreachable block. 
0, Line, //  Ok 
0, Line, //  Assume annotations source. 
0, Line, //  At this point we know we're streaming.. 
0, Line, //  an int and leave the dot as a separate token. 
0, Line, //  In case of FactoryBean, try to match FactoryBean instance itself next. 
0, Line, //  This may not be all the URI variables, supply what we have so far.. 
0, Line, //  Query should not succeed since parameter declaration did not specify parameter name 
0, Line, //  custom optional attributes 
0, Line, //  overridable hooks 
0, Line, //  Passing (Sub, String[]) on call to (Super, String[]) is exact match 
0, Line, //  Save the first exception but invoke all interceptors 
0, Line, //  Replace its instructions with NOP ... NOP ATHROW. 
0, Line, //  simply proceed 
0, Line, //  SPR-12810 
0, Line, //  Determine default EntityResolver to use. 
0, Line, //  Workaround for WebLogic 10.3 
0, Line, // -------------------------------------------------------------------------   Convenience methods for loading individual objects  ------------------------------------------------------------------------- 
0, Line, //  Probably in a Jigsaw environment on JDK 9+ 
0, Line, //  Running in SpelCompilerMode.immediate mode - propagate exception to caller 
0, Line, //  Fetch JTA UserTransaction from JNDI, if necessary. 
0, Line, //  Inventions Array 
0, Line, //  Invoke method on target Session. 
0, Line, //  wrapping, not allocating 
0, Line, //  Remove LeakAwareDataBuffer wrapper so delegate can find native buffers 
0, Line, //  Visit the EnclosingMethod attribute. 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods related to the output frame   ----------------------------------------------------------------------------------------------- 
0, Line, //  Act 
0, Line, //  SPR-10414 
0, Line, //  Actually invoke the message listener... 
0, Line, //  minor_version and major_version fields, which use 4, 2 and 2 bytes respectively. 
0, Line, //  varargs double 
0, Line, //  null instance registered 
0, Line, //  Take default from containing bean in case of an inner bean definition. 
0, Line, //  meta annotation with qualifier 
0, Line, //  No pre-built EntityManager found -> build one based on factory.   Obtain EntityManagerFactory from JNDI? 
0, Line, //  Try to obtain the FactoryBean's object type from its factory method   declaration without instantiating the containing bean at all. 
0, Line, //  The previous path element in the chain 
0, Line, //  const_value_index, CONSTANT_Double   const_value_index, CONSTANT_Float   const_value_index, CONSTANT_Integer   const_value_index, CONSTANT_Long 
0, Line, //  Non-empty payload 
0, Line, //  Expose remaining arguments as vararg array for last parameter 
0, Line, //  Note that, by construction in this method, a block which calls a subroutine has at   least two successors in the control flow graph: the first one (added below) leads to   the instruction after the JSR, while the second one (added here) leads to the JSR   target. Note that the first successor is virtual (it does not correspond to a possible   execution path): it is only used to compute the successors of the basic blocks ending 
0, Line, //  something transactional 
0, Line, // ---------------------------------------------------------------------   Implementation of ConfigurableApplicationContext interface  --------------------------------------------------------------------- 
0, Line, //  It is a primitive type 
0, Line, //  leading control character 0x7F (DEL) 
0, Line, //  https://example.com/resource? 
0, Line, //  intentionally omitted: attribute = "value" 
0, Line, //  Ask the expression AST to generate the body of the method 
0, Line, //  Shortcut if possible... 
0, Line, //  not a useful expression but tests nested expression syntax that clashes with template prefix/suffix 
0, Line, //  Key is of form: prefix<name>.property 
0, Line, //  Set our (possibly massaged) deep copy. 
0, Line, //  Check for special "redirect:" prefix. 
0, Line, //  Matched method on {@link LoggingAspect} 
0, Line, //  Returns the type_argument_index of the path element of the given index. 
0, Line, //  defensive check: singleton, non-static should work with null array 
0, Line, //  gh-23205 
0, Line, //  Set statement separator to double newline so that ";" is not   considered a statement separator within the source code of the   aliased function 'REVERSE'. 
0, Line, //  SPR-9142 
0, Line, //  Check given bean name whether it is unique. If not already unique,   add counter - increasing the counter until the name is unique. 
0, Line, //  Test whitespace String 
0, Line, //  Add 'label' as a successor of the current basic block. 
0, Line, //  varargs float 
0, Line, //  Invariant: currentOffset is the offset of a field_info structure.   Skip the access_flags, name_index and descriptor_index fields (2 bytes each), and read the   attributes_count field. 
0, Line, //  Path is exhausted, only match if rest of pattern is * or **'s 
0, Line, //  Trigger destruction of dependent beans first... 
0, Line, //  on Servlet 4.0 
0, Line, //  Registering top path found. 
0, Line, //  System.err.println(configAttributes);   } 
0, Line, //  Skip the bootstrap_method_ref and num_bootstrap_arguments fields (2 bytes each),   as well as the bootstrap_arguments array field (of size num_bootstrap_arguments * 2). 
0, Line, //  Load default SQL error codes. 
0, Line, //  Static, factory methods 
0, Line, //  Copy the BootstrapMethods, if any. 
0, Line, //  TilesConfigurer: resources under "/WEB-INF/**/tiles.xml" 
0, Line, //  Try with Locale.US - Use a different test msg that requires no args 
0, Line, //  Now populate the database 
0, Line, //  Request 3 retrieves and invalidates 
0, Line, //  SPR-10140, SPR-16867 
0, Line, //  Try file existence: can we find the file in the file system?
0, Line, //  Not started, already stopped, or previous stop attempt in progress   -> return immediately, no stop process to control anymore. 
0, Line, //  Checks that the custom keyGenerator was used 
0, Line, //  As of JDK 8, invoking getAnnotation() on a bridge method actually   finds an   annotation on its 'bridged' method [1]; however, the Eclipse compiler   will not   support this until Eclipse 4.9 [2]. Thus, we effectively ignore the   following   assertion if the test is currently executing within the Eclipse IDE.   [1] https://bugs.openjdk.java.net/browse/JDK-6695379   [2] https://bugs.eclipse.org/bugs/show_bug.cgi?id=495396 
0, Line, //  Chew on the expression text - relying on the rules:   brackets must be in pairs: () [] {}   string literals are "..." or '...' and these may contain unmatched brackets 
0, Line, //  First request: no session yet, new session created 
0, Line, //  OpMultiply 
0, Line, //  Standard transaction demarcation with getTransaction and commit/rollback calls. 
0, Line, //  With a /** on the end have to check if there is any more data post 
0, JavaDoc, /* 	 * Set the default parent for views defined in the {@code ResourceBundle}.	 * <p>This avoids repeated "yyy1.(parent)=xxx", "yyy2.(parent)=xxx" definitions	 * in the bundle, especially if all defined views share the same parent.	 * <p>The parent will typically define the view class and common attributes.	 * Concrete views might simply consist of a URL definition then:	 * a la "yyy1.url=/my.jsp", "yyy2.url=/your.jsp".	 * <p>View definitions that define their own parent or carry their own	 * class can still override this. Strictly speaking, the rule that a	 * default parent setting does not apply to a bean definition that	 * carries a class is there for backwards compatibility reasons.	 * It still matches the typical use case.	  */
0, Line, //  SPR-11872 
0, Line, //  Decorate based on custom attributes first. 
0, Line, //  Don't try to determine contentLength on InputStreamResource - cannot be read afterwards...   Note: custom InputStreamResource subclasses could provide a pre-calculated content length! 
0, Line, //  Use a factory bean for the resources so they can be given an order if a pattern is used 
0, Line, //  SPR-3173 
0, Line, // ---------------------------------------------------------------------   Implementation of SavepointManager  --------------------------------------------------------------------- 
0, Line, //  If we have nested annotations, we need them as nested maps 
0, Line, // consume PLUS or MINUS or INC 
0, Line, //  Do not apply formatting on binding failures like type mismatches. 
0, Line, // ---------------------------------------------------------------------   Reading  --------------------------------------------------------------------- 
0, Line, //  Transactional code threw application exception -> rollback 
0, Line, //  Usual case: A BindingResult is available as request attribute.   Can determine error codes and messages for the given expression.   Can use a custom PropertyEditor, as registered by a form controller. 
0, Line, //  Call close() at this point if it's a new Session... 
0, Line, //  Register a default embedded value resolver if no bean post-processor   (such as a PropertyPlaceholderConfigurer bean) registered any before: 
0, Line, //  the maybe case 
0, Line, //  Remove destroyed bean from other beans' dependencies. 
0, Line, //  We start with an index of -1 and increment early. 
0, Line, //  ServletRequest / HttpServletRequest / MultipartRequest / MultipartHttpServletRequest 
0, Line, //  Shouldn't succeed in creating stored procedure with unnamed parameter 
0, Line, //  cached accessor used 
0, Line, //  Use same Connection for further JDBC actions within the transaction.   Thread-bound object will get removed by synchronization at transaction completion. 
0, Line, //  */* includes anything 
0, Line, //  Other numbers are not yet supported (isCompilable will not have returned true) 
0, Line, //  Match found for this bean: do not match FactoryBean itself anymore. 
0, Line, //  evaluate("aVarargsMethod2(8,new String[]{'a','b','c'})", 11, Integer.class); 
0, Line, //  Generally only look for a pattern after a prefix here,   and on Tomcat only after the "*/" separator for its "war:" protocol. 
0, Line, //  We would typically expect an IllegalStateException, but Hibernate throws a   PersistenceException. So we assert the contents of the exception message instead. 
0, Line, //  RxJava 1 
0, Line, //  at this point, primarily for resolution in annotation attribute values. 
0, Line, //  It's a full or lite configuration candidate... Let's determine the order value, if any. 
0, Line, //  method return type matches the predicted type then we can use that. 
0, Line, //  then this type is no longer uninitialized at the end of basic block. 
0, Line, //  We can't read multipart, so skip this supported media type. 
0, Line, //  Always return a non-transactional Connection. 
0, Line, //  Null object is not equal 
0, Line, //  Should work identically on subclass definition, in which lookup 
0, Line, //  IMPORTANT: this must be the last part of the ClassFile size computation, because the previous 
0, Line, //  toArray() 
0, Line, //  Set parent so that references (up container hierarchies) are correctly resolved. 
0, Line, //  useful for profiling to take snapshots   System.in.read(); 
0, Line, //  A Class: We'll cache the Class here and create an instance   outside of the synchronized block. 
0, Line, //  NOTE: if we omit the @WebAppConfiguration declaration, the ApplicationContext will fail   to load since @EnableWebMvc requires that the context be a WebApplicationContext. 
0, Line, //  RxJava 2 
0, Line, //  No cache resolved for the operation 
0, Line, //  Consider as not determinable. 
0, Line, //  No need to iterate the methods if we're matching any method anyway... 
0, Line, //  Open a plain Hibernate transaction without specified timeout. 
0, Line, //  Declared type variables to inspect?
0, Line, //  Remain open in the session list. 
0, Line, //  conventional RMI service 
0, Line, //  Set up the escalation list... 
0, Line, //  Try to find cached factory for Locale: 
0, Line, //  Simply proceed, no equivalent superclass constructor found... 
0, Line, //  If we don't have a bean type, fallback to the predicted type 
0, Line, //  Use copy of given root bean definition. 
0, Line, //  To start with, we populate the result with a copy of all attribute values   from the target annotation. A copy is necessary so that we do not 
0, Line, //  Will invoke inner.getName, which is non-transactional 
0, Line, //  avoid nested generic 
0, Line, //  Fallback: target bean at least found by bean name. 
0, Line, //  should require one handler method at least 
0, Line, //  this is a proxy so it should be reset to default 
0, Line, //  better candidate can be found. 
0, Line, //  non existent indexer (wibble made up) 
0, Line, //  Use SecondMsg.newBuilder() to construct. 
0, Line, //  DontCheck(AbbreviationAsWordInName): can't be renamed (for backward binary compatibility). 
0, Line, //  Dispose of temporary files in case of streaming variant... 
0, Line, //  No need to consider this if back-off is set 
0, Line, //  Keep CGLIB happy 
0, Line, //  JMS 
0, Line, //  Work it out and cache it. 
0, Line, //  Check manually registered singletons. 
0, Line, // SPR-16754 
0, Line, //  No way to verify queue capacity 
0, Line, //  SPR-9445   without null conversion 
0, Line, // 			org.springframework.expression.spel.SpelEvaluationException: EL1008E:(pos 15): Property or field 'wibble' cannot be found on object of type 'org.springframework.expression.spel.testresources.ArrayContainer' - maybe not public?  					at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225) 
0, Line, //  Invoke method on current EntityManager. 
0, Line, //  Legacy ContextLoaders don't know how to process classes 
0, Line, //  First, build the clients 
0, Line, // -------------------------------------------------------------------------   Exposure of transaction characteristics  ------------------------------------------------------------------------- 
0, Line, //  Remove the connection holder from the thread. 
0, Line, //  For instance supplied beans try the target type and bean class 
0, Line, // ---------------------------------------------------------------------   HttpServletResponse interface  --------------------------------------------------------------------- 
0, Line, //  RMI invoker 
0, Line, //  SPR-13443 
0, Line, //  This test helper has a bound on the type variable 
0, Line, //  Ignore 
0, Line, //  second rollback attempt 
0, Line, //  Mono 
0, Line, //  Internal exception - has been handled before. 
0, Line, //  SPR-7970 
0, Line, //  Else, just do a toString. 
0, Line, //  Must not be able to set empty exit message 
0, Line, // ---------------------------------------------------------------------   ServletResponse properties  --------------------------------------------------------------------- 
0, Line, //  Let's check for lookup methods here... 
0, Line, //  Ignore, we'll add a default HandlerAdapter later. 
0, Line, //  right is a double 
0, Line, //  SPR-13311 
0, Line, //  Expect a transaction 
0, Line, //  Invoke factory processors registered with the context instance. 
0, Line, //  Use path info if available. Indicates index page within a servlet mapping?   e.g. with index page: URI="/", servletPath="/index.html"
0, Line, //  We need a proxy and a JndiObjectTargetSource. 
0, JavaDoc, /*  * Auto proxy creator that identifies beans to proxy via a list of names. * Checks for direct, "xxx*", and "*xxx" matches. * * <p>For configuration details, see the javadoc of the parent class * AbstractAutoProxyCreator. Typically, you will specify a list of * interceptor names to apply to all identified beans, via the * "interceptorNames" property. * * @author Juergen Hoeller * @since 10.10.2003 * @see #setBeanNames * @see #isMatch * @see #setInterceptorNames * @see AbstractAutoProxyCreator  */
0, Line, //  Use same EntityManager for further JPA operations within the transaction.   Thread-bound object will get removed by synchronization at transaction completion. 
0, Line, //  Force static initializers to run. 
0, Line, //  Convert Collection elements to array elements. 
0, Line, //  InheritedAnnotationClass is NOT annotated or meta-annotated with @Component,   @Service, or @Order, but it is annotated with @Transactional. 
0, Line, // assertEquals(1, conf.getInvocations()); 
0, Line, //  SPR-15975 
0, Line, //  Set dynamically chosen port 
0, Line, //  deprecated on Protobuf 3.9 
0, Line, //  Then try again with a different class loader on the target... 
0, Line, //  Visit the RuntimeVisibleAnnotations attribute. 
0, Line, //  ... and remove it from the front 
0, Line, //  Neither child element nor "ref" or "value" attribute found. 
0, Line, //  Check to see if an MBeanServer is registered. 
0, Line, //  SPR-17306 (nested close) 
0, Line, //  URI var parsed into path variable + matrix params.. 
0, Line, //  test matching with **'s 
0, Line, //  Invoke BeanDefinitionRegistryPostProcessors first, if any. 
0, Line, //  Coroutines 
0, Line, //  Emit a frame for this unreachable block, with no local and a Throwable on the stack 
0, Line, //  array construction 
0, Line, //  Check commit - avoid commit call within a JTA transaction. 
0, Line, //  SingleCharWildcardPathElement 
0, Line, //  Not initialized yet: return our setting for the time being. 
0, Line, //  <-- not a valid value (the key)...
0, Line, //  MySQL style escapes 
0, Line, //  should be dynamic proxy 
0, Line, //  A url() function without unquoted 
0, Line, //  no-op 
0, Line, //  test is an invalid value 
0, Line, //  If not present, do nothing for the time being...   We can fall back on "reactive-streams-flow-bridge" (once released) 
0, Line, //  No such bean defined 
0, Line, //  Similar test with compiled expression 
0, Line, //  Remove Level 3-A 
0, Line, //  Resolve the forward references to this label, if any. 
0, Line, //  These properties are meaningless for JNDI, but we don't worry about that:   the underlying JNDI implementation will throw exceptions when the user tries   to look anything up 
0, Line, //  singleton bean (top-level or inner): register on the fly 
0, Line, //  The following if-condition (which basically mimics   AbstractEnvironment#validateProfile(String)) is necessary in order   to ensure that the Profiles implementation returned by Profiles.of()   never passes an invalid (parsed) profile name to the active profiles   predicate supplied to Profiles#matches(Predicate<String>). 
0, Line, //  Won't be advised 
0, Line, //  @Bean 
0, Block, /*  visible =  */
0, Line, //  Do not create the node if it does not exist... 
0, Line, //  Other header names 
0, Line, //  Sort methods into a sensible order 
0, Line, //  should be at maximum now 
0, Line, //  SPR-17140 
0, Line, //  only one call made  - the first EM definition wins (in this case the one w/ the properties) 
0, Line, //  - The offset of the NestMembers attribute, or 0. 
0, Line, //  Check for match in children -> negative 
0, Line, //  manually trigger an Exception with the above bad MessageListener... 
0, Line, //  varargs string 
0, Line, //  If unable to set the value the operand is not writable (e.g. 1++ ) 
0, Line, //  Bug in javac: type array excludes enclosing instance parameter   for inner classes with at least one generic constructor parameter,   so access it with the actual parameter index lowered by 1
0, Line, //  invoke a transactional method, causing the PlatformTransactionManager bean to be resolved. 
0, Line, //  It's an input parameter; must be supplied by the caller. 
0, Line, //  wrap errors in a Model 
0, Line, //  tm has no synch enabled (used at outer level), tm2 has synch enabled (inner level) 
0, Line, //  parameterize 
0, Line, //  a parameterized type is always assignable to its raw class type 
0, Line, //  SPR-8683 
0, Line, //  Collect the parameters from all the remaining segments 
0, Line, //  within PriorityOrdered 
0, Line, //  Security settings are disallowing reflective access; fall back to 'method' below. 
0, Block, /* 	 * See comments in spec on EntityManager.joinTransaction().	 * We take the view that this is a valid no op.	  */
0, Line, //  Apply kept transaction settings, if any. 
0, Line, //  Invocation on Connection interface coming in... 
0, Line, //  Enforce ASM via class name resolution 
0, Line, //  jdbcProperties 
0, Line, //  skip a 
0, Line, //  methods_count and attributes_count) use 2 bytes each, and each interface uses 2 bytes too. 
0, Line, //  Simply return the configured ScriptEngine... 
0, Line, //  evaluates to true 
0, Line, //  We don't want to visit the other target_type annotations, so we just skip them (which   requires some parsing because the element_value_pairs array has a variable size). First, 
0, Line, //  Specific exception match found. 
0, Line, //  CTL = <US-ASCII control chars (octets 0 - 31) and DEL (127)> 
0, Line, //  the first constant pool entry, which itself starts at cpInfoOffsets[1] - 1 (by definition). 
0, Line, //  re-activating and re-closing the context (SPR-13425) 
0, Line, //  SPR-13317 
0, Line, //  Determine if the final passed argument is already suitably packaged in array 
0, Line, //  10 seconds is Tomcat's default 
0, Line, //  default web binding initializer behavior test 
0, Line, // 		Map<String, String> namespace = Collections.singletonMap("ns", ""); 
0, Line, //  Servlet 3.0 getParameterMap() not guaranteed to include multipart form items   (e.g. on WebLogic 12) -> need to merge them here to be on the safe side 
0, Line, //  If it's a URL or a path pointing to an existing resource, use it as-is. 
0, Line, //  Static field access on a T() referenced type 
0, Line, //  2. Resolve with Accept-Encoding 
0, Line, //  Extend to get new interface 
0, Line, //  Expand the reference. 
0, Line, //  No more pattern, is there more data?   If pattern is capturing variables there must be some actual data to bind to them
0, Line, //  For ease of reference, we use here the same attribute order as in Section 4.7 of the JVMS. 
0, Line, //  Remove the merged bean definition for the given bean, if already created. 
0, Line, //  The activate() call will cause an assignment to the activated variable. 
0, Line, //  Can reuse the pre-parsed metadata from the given BeanDefinition... 
0, Line, //  SPR-13318 
0, Line, //  unary plus 
0, Line, //  gh-22010 
0, Line, //  Returned type may be null if the factory is unable to determine the type. 
0, Line, //  This check is different to the one in the other numeric operators (OpLt/etc)   because we allow simple object comparison 
0, Line, //  Explicitly remove target for a proxy, if registered already,   in order to avoid double invocations of the same listener. 
0, Line, //  void return value 
0, Line, //  Attempt to load the PlatformMBeanServer. 
0, Line, // 			actualNames[i] = resources[i].getFilename();  		}  		List sortedActualNames = new LinkedList(Arrays.asList(actualNames));  		List expectedNames = new LinkedList(Arrays.asList(fileNames));  		Collections.sort(sortedActualNames);  		Collections.sort(expectedNames);   
0, Line, //  Assert that the supplied mapping is unique. 
0, Line, //  name is ok but foobar does not exist: 
0, Line, //  AST: 
0, Line, //  Short "0" or "-1" like values are never valid HTTP date headers...   Let's only bother with DateTimeFormatter parsing for long enough values. 
0, Line, //  SPR-13319 
0, Line, //  Just use default parent if we're not dealing with the parent itself,   and if there's no class name specified. The latter has to happen for 
0, Line, //  replace the request context with one containing the errors 
0, Line, //  SPR-9571 and SPR-14363 
0, Line, //  SPR-17144 
0, Line, //  see if Commons FileUpload can read what we wrote 
0, Line, //  These tests below verify that the chain of static accesses (either method/property or field)   leave the right thing on top of the stack for processing by any outer consuming code.   Here the consuming code is the String.valueOf() function.  If the wrong thing were on   the stack (for example if the compiled code for static methods wasn't popping the   previous thing off the stack) the valueOf() would operate on the wrong value.
0, Line, //  of it, avoiding any deadlock potential with Servlet container locks. 
0, Line, //  The head of the path element chain currently being built 
0, Line, //  Remove entire ThreadLocal if empty... 
0, Line, //  Internal helpers 
0, Line, //  Use a locale that doesn't result in the generation of HTML entities 
0, Line, //  processed basic blocks. 
0, Line, //  Add the constant pool items in the symbol table entries. Reserve enough space in 'entries' to   avoid too many hash set collisions (entries is not dynamically resized by the addConstant* 
0, Line, //  SPR-8687 
0, Line, //  pattern uses extension mapping but starts with / (treated as exact match) 
0, Line, //  Full method signature 
0, Line, //  One char's not allowed 
0, Line, //  T <= ? super T 
0, Line, //  a class path resource (multiple resources for same name possible) 
0, Line, //  Try to get the exact method first. 
0, Line, //  It's an interceptor, so we just invoke it: The pointcut will have   been evaluated statically before this object was constructed. 
0, Line, //  RSocketStrategies and RSocketFactory configurers should have been called 
0, Line, //  graph, and add these blocks to the list of blocks to process (if not already done). 
0, Line, //  We're assumably within the original request thread... 
0, Line, //  Correctly returns true for a class 
0, Line, //  ---------------------------------------------------------------------   HttpServletRequest properties   --------------------------------------------------------------------- 
0, Line, //  <-- not a valid value...
0, Line, //  should still be the first bean with name Rob Harrop 
0, Line, //  attempt to treat the index value as a number 
0, Line, //  SPR-17146 
0, Line, //  includes 2 TestBeans from FactoryBeans (DummyFactory definitions) 
0, Line, //  Load the raw bytes. 
0, Line, //  - The offset of the LocalVariableTypeTable attribute, or 0. 
0, Line, //  even when triggered by lifecycle interfaces like BeanFactoryAware. 
0, Line, //  A plain name 
0, Line, //  Shouldn't matter for processing but must be unique 
0, Line, //  Test validly set property matches 
0, Line, //  If we got a TransactionAwareConnectionFactoryProxy, we need to perform transactions   for its underlying target ConnectionFactory, else JMS access code won't see   properly exposed transactions (i.e. transactions for the target ConnectionFactory). 
0, Line, //  the EM w/ properties will be created 
0, Line, //  Look for most specific name match. 
0, JavaDoc, /* 		 * The most common ISO DateTime Format {@code yyyy-MM-dd'T'HH:mm:ss.SSSXXX},		 * e.g. "2000-10-31T01:30:00.000-05:00".		 * <p>This is the default if no annotation value is specified.		  */
0, Line, //  Default handling of date-time values 
0, Line, //  attempt to retrieve the instance by its specified name 
0, Line, //  test serializability 
0, Line, //  TypedStringValue used to be equivalent to an XML-defined argument String 
0, Line, //  index of first character 
0, Line, //  6 header bytes and 2 bytes for line_number_table_length. 
0, Line, //  Now msg better be as expected 
0, Block, /*  useNamedValues =  */
0, Line, //  Try and treat the index value as a property of the context object 
0, Line, //  let's see if the remote invocation object works 
0, Line, //  Check if the bean definition itself has defined the type with an attribute 
0, Line, //  Build default TypeConverter, registering custom editors. 
0, Line, //  However, FactoryBean may still produce a prototype object... 
0, Line, //  Technically, cancellation from the result subscriber should be propagated   to the upstream subscription. In practice, HttpHandler server adapters   don't have a reason to cancel the result subscription. 
0, Line, //  second invocation for bf1 -- should throw   first invocation for bf2 -- should succeed 
0, Line, //  missing right operand 
0, Line, //  ClientHttpResponse delegation methods... 
0, Line, //  @@protoc_insertion_point(class_scope:Msg) 
0, Line, //  stack: <nothing>   load 0 or 1 depending on comparison instruction 
0, Line, //  One of these is set so we should not inherit anything 
0, Line, //  no expectations -> a class file transformer should NOT be added   because no META-INF/aop.xml is present on the classpath 
0, Line, //  SPR-13096 
0, Line, //  We only apply special treatment to ScriptFactory implementations here. 
0, Line, //  1. Subscribe to user destination 
0, Line, //  Resolve the unescaped message. 
0, Line, //  SPR-15719 
0, Line, //  Determine handler adapter for the current request. 
0, Line, // ---------------------------------------------------------------------   Convenient methods for registering individual beans  --------------------------------------------------------------------- 
0, Line, //  SPR-10180 
0, Line, //  requires a body 
0, Line, //  inline map creation 
0, Line, //  Variant of above more like what was in the bug report: 
0, Line, //  Preserve explicitly specified message id... 
0, Line, //  HTML escaping in tags is performed by the ValueFormatter class. 
0, Line, //  Exhaustive retrieval of merged annotations... 
0, Line, //  No NavigationHandler specified through constructor argument:   Call original handler, marking the end of this chain. 
0, Line, //  Instead of testing for equality to 1, we just assert that the value   was incremented at least once, since this test class may serve as a   parent class to other tests in a suite, etc. 
0, Line, //  First step: compute the size in bytes of the ClassFile structure.   The magic field uses 4 bytes, 10 mandatory fields (minor_version, major_version,   constant_pool_count, access_flags, this_class, super_class, interfaces_count, fields_count, 
0, Line, //  Tell the subclass to refresh the internal bean factory. 
0, Line, //  Constants used in the StackMapTable attribute.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.4. 
0, Line, //  SPR-356: lookup methods & method replacers are not serializable. 
0, Line, //  Can use advised and ProxyFactory interchangeably 
0, Line, //  Check whether we only have one InvokerInterceptor: that is, 
0, Line, //  assertTrue(multiPackageBeanCount > singlePackageBeanCount); 
0, Line, //  Fall back to generic setObject call without SQL type specified. 
0, Line, //  TODO: SPR-15871, SPR-15542
0, Line, //  ServerContainer 
0, Line, //  cookie 
0, Line, //       | (ELVIS^ expression))?; 
0, Line, //  should handle Salesman (only interface) 
0, Line, //  Any other than the original exception (or its cause) is unintended here,   probably an accident (e.g. failed assertion or the like). 
0, Line, //  Get the listener from the map value. 
0, Line, //  unspecific to specific 
0, Line, //  overridden attribute: 
0, Line, //  --- buildRequest 
0, Line, //  Start the connector server in the same thread. 
0, Line, //  the other way to start an identifier 
0, Line, //  First, try with selector header 
0, Line, //  invoke destroy before tasks have even been scheduled... 
0, Line, //  Invariant: currentOffset is the offset of an attribute_info structure.   Read the attribute_length field (2 bytes after the start of the attribute_info) and skip   this many bytes, plus 6 for the attribute_name_index and attribute_length fields   (yielding the total size of the attribute_info structure). 
0, Line, //  leading control and '/' characters 
0, Line, //  shuffle & sort 10 times 
0, Line, //  set new theme name 
0, Line, //  make sure the name has been updated 
0, Line, //  but does not merge the parent values 
0, Line, //  Not seen yet 
0, Line, //  Root context removes it 
0, Line, //  Hamcrest..   Hamcrest..   Hamcrest.. 
0, Line, //  - The string corresponding to the Signature attribute, or null. 
0, Line, //  Extract property name: property is of form dog(ref) 
0, Line, //  Read the num_bootstrap_methods field and create an array of this size. 
0, Line, //  It was declared by CGLIB, but we might still want to autowire it 
0, Line, //  data(Object) 
0, Line, //  Case of a jump with an offset >= -32768, or of a jump with an unknown offset. In these   cases we store the offset in 2 bytes (which will be increased via a ClassReader ->   ClassWriter round trip if it turns out that 2 bytes are not sufficient). 
0, Line, //  This will be propagated to views, so we need it. 
0, Line, //        
0, Line, //  Arrange 
0, Line, //  SPR-13800 
0, Line, //  test message args 
0, Line, //  Empty 
0, Line, //  "java.lang.String[]" style arrays 
0, Line, //  this order confirmed by running the same aspects (minus the Spring AOP advisors)   through AspectJ...   1   2   3,  before proceed   4,  before proceed   5   6   7   8   9,  before proceed   10, before proceed   11, after proceed   12, after proceed   13   14   15, after proceed   16, after proceed   17   18 
0, Line, //  This is complicated due to the support for dollars in identifiers.   Dollars are normally separate tokens but there we want to combine 
0, Line, //  Alternative methods relying on RequestContextHolder to find the request 
0, Line, //  Try PE-based comparison (PE should *not* be allowed to escape creating thread) 
0, Line, //  but findAnnotationDeclaringClass() should still find it on classes. 
0, Line, //  SPR-14718, SPR-7598 
0, Line, //  Wrap the response to ignore further header changes 
0, Line, //  SPR-10539 
0, Line, //  root path 
0, Line, // ---------------------------------------------------------------------   Copy methods for java.io.File  --------------------------------------------------------------------- 
0, Line, //  Next, invoke the BeanDefinitionRegistryPostProcessors that implement Ordered. 
0, Line, //  Ignore: no statements created yet. 
0, Line, //  handle "escaped"/"_" arguments 
0, Line, //  Give any InstantiationAwareBeanPostProcessors the opportunity to modify the   state of the bean before properties are set. This can be used, for example, 
0, Line, //  SPR-11868 
0, Line, //  factoryMethod 
0, Line, //  Use reflection to invoke the method. 
0, Line, //  Statically vetoed 
0, Line, //  SPR-13801 
0, Line, //  Didn't get removed 
0, Line, //  MessageSource registered (and found for autowiring) as a bean. 
0, Line, //  Ignore: no warnings to expose yet. 
0, Line, //  Using nested <form:option/> tags, so just expose the value in the PageContext... 
0, Line, //  end of URI variable 
0, Line, //  Possible flags for the FLAGS field of an abstract type. 
0, Line, //  INTERNAL HANDLING OF GROOVY CLOSURES AND PROPERTIES 
0, Line, //  Return default error view else, if defined.
0, Line, //  setup some values 
0, Line, //  Find first path element that is not a separator or a literal (i.e. the first pattern based element) 
0, Line, //  Will pick up misuse of CGLIB 
0, Line, //  We don't need to test all combination of pointcuts due to BeanNamePointcutMatchingTests 
0, Line, //  handles Joda-specific types as well as Date, Calendar, Long 
0, Line, //  Determine RMI registry to use. 
0, Block, /* 					weblogic.transaction.UserTransaction wut = (weblogic.transaction.UserTransaction) ut;					wut.begin(definition.getName(), timeout);					 */
0, Line, //  Find all HandlerExceptionResolvers in the ApplicationContext, including ancestor contexts. 
0, Line, //  mathematical operators 
0, Line, //  Publish shutdown event. 
0, Line, //  Check to see if the user has explicitly set a custom bean name... 
0, Line, //  yes 
0, Line, //  Cannot set it to a string value 
0, Line, //  SPR-17630 
0, Line, //  Simply create a map and call overloaded method. 
0, Line, //  Propagate exception to caller. 
0, Line, //  Redirect 
0, Line, //  Fires context checks 
0, Line, //  External dtd/xsd lookup via https even for canonical http declaration 
0, Line, //  Register name and attribute. 
0, Line, //  SPR-12931 
0, Line, //  Within a path (e.g. /aa/*/bb) there must be at least one character to match the wildcard 
0, Line, //  Create a new MBeanServer and register it, if desired. 
0, Line, //  mixing operators 
0, Line, //  SPR-14169 
0, Line, //  Based purely on number of captures 
0, Line, //  Don't do toString on target, it may be proxied. 
0, Line, //  September 
0, Line, //  This won't work as no resolver is known for the payload
0, Line, //  SPR-15367 
0, Line, //  Engine attribute only supported for <lang:std> 
0, Line, //  SPR-10648 (example is from INT-3063) 
0, Line, //  Will match MyTestBeanSubclass 
0, Line, //  Determine whether this bean is a scoped-proxy 
0, Line, //  Can now try multiple tests 
0, Line, //  ttl = 10s 
0, Line, //  Consider fallback matches if the first pass failed to find anything... 
0, Line, //  Needs to be at least one character #SPR15264 
0, Line, //  Connection exception   PostgreSQL: insufficient resources (e.g. disk full)   PostgreSQL: program limit exceeded (e.g. statement too complex)   DB2: out-of-memory exception / database not started   DB2: unexpected system error 
0, Line, //  We will perform this validation... 
0, Line, //  create instance factory definition 
0, Line, // -------------------------------------------------------------------------   Convenience methods for building XML content  ------------------------------------------------------------------------- 
0, Line, //  Check with full lock now in order to enforce the same merged instance. 
0, Line, //  By construction, the first outgoing edge of a basic block that ends with a jsr   instruction leads to the jsr continuation block, i.e. where execution continues   when ret is called (see {@link #FLAG_SUBROUTINE_CALLER}). 
0, Line, //  3) the input argument was the wrong type and got converted and put into an array 
0, Line, //  Will be advised but doesn't match 
0, Line, //  Shouldn't happen with the kind of resources we're using 
0, Line, //  Note: in the view case, calling withType instead of forType for compatibility with Jackson <2.5 
0, Line, //  gh-21670 
0, Line, //  Tyrus 1.11+ 
0, Line, //  SPR-16434 
0, Line, //  Do not throw exception, else the main loop of the scheduler might stop! 
0, Line, //  visitInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitIntInsn   -   visitLdcInsn   visitVarInsn   -   -   -   -   visitInsn   -   -   -   -   -   -   -   visitVarInsn   -   -   -   -   visitInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitIincInsn   visitInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitJumpInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitVarInsn   visiTableSwitchInsn   visitLookupSwitch   visitInsn   -   -   -   -   -   visitFieldInsn   -   -   -   visitMethodInsn   -   -   -   visitInvokeDynamicInsn   visitTypeInsn   visitIntInsn   visitTypeInsn   visitInsn   -   visitTypeInsn   -   visitInsn   -   visitMultiANewArrayInsn   visitJumpInsn   - 
0, Line, //  Passing (String[]) on call to (String[]) is exact match 
0, Line, //  Need to read interface to determine a match... 
0, Line, //  Install facade 
0, Line, //  skip to flight 
0, Line, //  Expose as variable, if demanded, else write to the page. 
0, Line, //  Configure the bean factory with context callbacks. 
0, Line, //  TaskScheduler implementation 
0, Line, //  Register aliases even when overridden 
0, Line, //  nothing to do when not creating temporary LOBs 
0, Line, //  no transactional support for evictIfPresent 
0, Line, //  Only when the right hand operand is a direct type reference 
0, Line, //  SmartApplicationListener methods 
0, Line, //  Delegate to the View object for rendering. 
0, JavaDoc, /*  * Property editor that converts a String into a {@link TransactionAttributeSource}. * The transaction attribute string must be parseable by the * {@link TransactionAttributeEditor} in this package. * * <p>Strings are in property syntax, with the form:<br> * {@code FQCN.methodName=&lt;transaction attribute string&gt;} * * <p>For example:<br> * {@code com.mycompany.mycode.MyClass.myMethod=PROPAGATION_MANDATORY,ISOLATION_DEFAULT} * * <p><b>NOTE:</b> The specified class must be the one where the methods are * defined; in case of implementing an interface, the interface class name. * * <p>Note: Will register all overloaded methods for a given name. * Does not support explicit registration of certain overloaded methods. * Supports "xxx*" mappings, e.g. "notify*" for "notify" and "notifyAll". * * @author Rod Johnson * @author Juergen Hoeller * @since 26.04.2003 * @see TransactionAttributeEditor  */
0, Line, //  Get the raw content without consuming the response body flux.. 
0, Line, //  binding from thrown exception 
0, Line, //  no active profiles are set 
0, Line, //  This won't block since resolveName below doesn't 
0, Line, // Null model arguments added without a name being explicitly supplied are not allowed 
0, Line, //  Create getValue() method 
0, Line, //  Defensively use lazy-initializing adapter class here as well since the   java.logging module is not present by default on JDK 9. We are requiring   its presence if neither Log4j nor SLF4J is available; however, in the   case of Log4j or SLF4J, we are trying to prevent early initialization   of the JavaUtilLog adapter - e.g. by a JVM in debug mode - when eagerly   trying to parse the bytecode for all the cases of this switch clause.
0, Line, //  should go through 
0, Line, //  - The offset of each 'type_annotation' entry in the RuntimeVisibleTypeAnnotations 
0, Line, //  check original theme 
0, Line, //  Before commit not invoked 
0, Line, //  After rollback not invoked 
0, Line, //  Need lifecycle methods 
0, Line, //  3) Verify that the AnnotationAttributes and synthesized annotation are equivalent 
0, Line, //  parseCheck("{1,2,3,4,5,6,7,8,9,10}.?{#isEven(#this) == 'y'}",   "{1,2,3,4,5,6,7,8,9,10}.?{(#isEven(#this) == 'y')}");   } 
0, Line, //  isOpen() check used below to find out about it. 
0, Line, //  static method BFPP does not interfere with lifecycle -> autowiring succeeds 
0, Line, //  Merging path element with element corresponding to top path. 
0, Line, //  close and stop the listeners 
0, Line, //  Prepend container prefix if not already specified and no other scheme given. 
0, Line, //  gh-22740 
0, Line, //  Based purely on length 
0, Block, /* 			 * this.mbeanServer = AdminServiceFactory.getMBeanFactory().getMBeanServer();			  */
0, Line, //  Write out the 'field was present' marker. 
0, Line, //  explicit no-op 
0, Line, //  The name potentially contains locale information 
0, Block, /*  ignore  */
0, Line, //  our position in the old string 
0, Line, //  Parsing logic invoked by the constructor 
0, Line, //  throw new PatternParseException(pos, pathPatternData,   PatternMessage.CANNOT_HAVE_ADJACENT_CAPTURES); 
0, Line, //  bootstrap method. 
0, Line, //  Skip the argument descriptor content. 
0, Line, //  If the declared descriptors aren't providing the information, try the actual descriptors 
0, Line, //  Note: the following would fail since TestExecutionListeners in   the Spring TestContext Framework are not applied to the enclosing   instance of an inner test class.     assertEquals("foo", foo); 
0, Line, //  Switch to manual commit if necessary. This is very expensive in some JDBC drivers,   so we don't want to do it unnecessarily (for example if we've explicitly   configured the connection pool to set it already).
0, Line, //  non static getter 
0, Line, //  Change back, relying on casting to Advised 
0, Line, //  SPR-13582 
0, Line, //  If explicitly false, do not proceed with any other checks... 
0, Line, //  As of 5.1, we explicitly optimize for a transaction-local EntityManager,   aligned with native HibernateTransactionManager behavior. 
0, Line, //  Register given Hibernate mapping definitions, contained in jar files. 
0, Line, //  Read the field attributes (the variables are ordered as in Section 4.7 of the JVMS).   Attribute offsets exclude the attribute_name_index and attribute_length fields. 
0, Line, //  Not a CGLIB method so it's OK. 
0, Line, //  (with a pre and post offset by 1). 
0, Line, //  Visit the local variable type annotations of the RuntimeVisibleTypeAnnotations attribute. 
0, Line, //  If Derby isn't cleaned up properly this will fail...
0, Line, //  Bound to two threads 
0, JavaDoc, /* 	 * Add an attribute for a transactional method.	 * <p>Method names can be exact matches, or of the pattern "xxx*",	 * "*xxx" or "*xxx*" for matching multiple methods.	 * @param methodName the name of the method	 * @param attr attribute associated with the method	  */
0, Line, //  SPR-16304 
0, Line, //  on the Enumeration when removing attributes. 
0, Line, //  could also get column names 
0, Line, // ---------------------------------------------------------------------   Lifecycle in bean factory: automatically register/unregister beans  --------------------------------------------------------------------- 
0, Line, //  Return merged result 
0, Line, //  Matches subclass of MyTestBean 
0, Line, //  multiple candidate vars, but only one slot 
0, Line, //  double slot left operand - should get boxed, return false 
0, Line, //  ------------------------------------------------------------------- 
0, Line, //  Given default message does not contain any argument placeholders   (and isn't escaped for alwaysUseMessageFormat either) -> return as-is. 
0, Line, //  Factory may be null, we defer the resolution right before actually creating the container 
0, Line, //  Jenny is a singleton 
0, Line, //  Try default variable resolution 
0, Line, //  SPR-8678 
0, Line, //  fail on improper argument types at afterPropertiesSet 
0, Line, //  should match because there testlast* in there 
0, Line, //  OK, let's obtain the editor... 
0, Line, //  What we just unboxed might be a double slot item (long/double)   so can't just use SWAP 
0, Line, //  But the flattened map retains the order from the input. 
0, Block, /* 	 * Test method for	 * 'org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetEntityManager(EntityManagerFactory)'	  */
0, Line, //  missing one argument 
0, Line, //  Different class is not equal 
0, Line, //  empty environment 
0, Line, //  Convenience methods to delegate to 
0, Line, //  If we couldn't use the target type, try regular prediction. 
0, Line, //  Section 4.7.6 of the JVMS states "Every CONSTANT_Class_info entry in the constant_pool table   which represents a class or interface C that is not a package member must have exactly one   corresponding entry in the classes array". To avoid duplicates we keep track in the info   field of the Symbol of each CONSTANT_Class_info entry C whether an inner class entry has   already been added for C. If so, we store the index of this inner class entry (plus one) in 
0, Line, //  It's an empty enum identifier: reset the enum value to null. 
0, Line, //  Retrieve the defaults for bean definitions within this parser context 
0, Line, //  Register default environment beans. 
0, Line, //  If neither of the candidates supports the mergedConfig based on resources but   ACIs or customizers were declared, then delegate to the annotation config 
0, Line, //  Common concrete collection classes 
0, Line, //  SPR-14651 
0, Line, //  the element is a <description> -> ignore it 
0, Line, //  Selection 
0, Line, //  Only actually register it if there are destinations specified;   otherwise @MessageMapping is just being used as a (meta-annotation) marker. 
0, Line, // (AdviceUsingThisJoinPoint) Aspects.aspectOf(AdviceUsingThisJoinPoint.class);  assertEquals("method-execution(int TestBean.getAge())",aspectInstance.getLastMethodEntered()); 
0, Line, //  For rules that build nodes, they are stacked here for return 
0, Line, //  chain of statics ending with static property access 
0, Line, //  We saved most evaluations 
0, Line, //  SPR-13453 
0, Line, //  Data truncation   No data found   Value out of range   Integrity constraint violation   Triggered data change violation   With check violation 
0, Line, //  Give BeanPostProcessors a chance to return a proxy instead of the target bean instance. 
0, Line, //  SPR-12448 
0, Line, //  Traverse the TestExecutionListeners in reverse order to ensure proper   "wrapper"-style execution of listeners. 
0, Line, //  Need re-wrapping until we get hold of the exception through usingWhen. 
0, Line, //  this_class is just after the access_flags field (using 2 bytes). 
0, Line, //  Second request: session id changes 
0, Line, //  Only override default charset if the converter operates with a charset to begin with... 
0, Line, //  Code gen is different for -1 .. 6 because there are bytecode instructions specifically for those values 
0, Line, //  scan *this* package 
0, Line, //  we don't need it anymore. 
0, Line, //  2500 is between DependencyInjectionTestExecutionListener (2000) and   DirtiesContextTestExecutionListener (3000) 
0, Line, //  Allow for custom post-processing before we actually build the ValidatorFactory. 
0, Line, //  SPR-17506 
0, Line, // assertEquals("Wrong value for @Cacheable key", anotherValue, cache.get(key).get()); 
0, Line, //  Use the URL constructor for applying the relative path as a URL spec 
0, Line, //  Consider scoping 
0, Line, //  Double-check within full dataSourceCache lock 
0, Line, //  No matching persistence unit found - simply take the EntityManagerFactory 
0, Block, /* 	 * See SPR-6640	  */
0, Line, //  expected: should get resolved as class path resource,   and there is no such resource in the class path... 
0, Line, //  Load config file if specified. 
0, Line, //  Old-school EhCache singleton sharing...   No way to find out whether we actually created a new CacheManager   or just received an existing singleton reference.
0, Line, //  SPR-14520 
0, Line, //  fixedInterceptorMap only populated at this point, after getCallbacks call above 
0, Line, //  ConverterRegistry implementation 
0, Line, //  Register Triggers. 
0, Line, //  HEAD 
0, Line, //  Explicit qualifier metadata on bean definition? (typically in XML definition) 
0, Line, //  set up a writer for the tag content to be written to 
0, Line, //  Check that an object name has been specified. 
0, Line, //  Find a param aware ancestor 
0, Line, //  SPR-13455 
0, Line, //  Invoke factory processors registered as beans in the context. 
0, Line, //  JPA 2.1 API available but method not actually implemented in persistence provider:   falling back to regular createEntityManager method.
0, Line, //  Either create a new table or reuse the existing one 
0, Line, //  it's a match 
0, Line, //  Reset original thread context ClassLoader. 
0, Line, //  [handlerStart,handlerEnd[ - [rangeStart,rangeEnd[ = [handlerStart,rangeStart[ 
0, Line, //  test matching with *'s 
0, Line, //  Subscription id's may also be populated via getSubscriptions() 
0, Line, //  Static methods 
0, Line, //  Any nested <beans> elements will cause recursion in this method. In   order to propagate and preserve <beans> default-* attributes correctly,   keep track of the current (parent) delegate, which may be null. Create   the new (child) delegate with a reference to the parent for fallback purposes,   then ultimately reset this.delegate back to its original (parent) reference.   this behavior emulates a stack of delegates without actually necessitating one.
0, Line, //  Ignore, as does PropertyDescriptor#getPropertyType 
0, Line, //  The config class is annotated with @ComponentScan -> perform the scan immediately 
0, Line, //  Has the parser entered a {...} variable capture block in a particular 
0, Line, //  contains() 
0, Line, //  data(Publisher<T>, Class<T>) 
0, Line, //  only prepend if not already an absolute path 
0, Line, //  configure the advisor 
0, Line, //  Explicitly configured warn logger in logException method. 
0, Block, /*  Bridges signals to and from the completionSubscriber  */
0, Line, //  Convert to HttpHeaders to avoid "\n" 
0, Line, //  Also tests empty value 
0, Line, //  SPR-9390 
0, Line, //  Based on number of captures 
0, Line, //  Should not throw 
0, Line, //  JDK <1.8 doesn't support getOutputStream with HTTP DELETE 
0, Line, //  pre and post offset by 1). The jump offset is 8 bytes (3 for IFNOTxxx, 5 for GOTO_W). 
0, Line, //  Map to array 
0, Line, //  Simple 
0, Line, //  Use the default ClassLoader... 
0, Line, //  test string-arg getter with null id 
0, Line, //  Create a child factory with a bean that should be woven 
0, Line, //  failed prior to fix for SPR-9453 
0, Line, //  the updated script surrounds the message in quotes before returning... 
0, Line, //  never happen 
0, Line, //  SPR-12444 
0, Line, //  size now 3 
0, Line, //  JPA 2.1's createEntityManager(SynchronizationType, Map)   Redirect to plain createEntityManager and add synchronization semantics through Spring proxy 
0, Line, //  Add all the Spring advisors found according to superclass rules. 
0, Line, //  Three outcomes of that previous line:   1) the input argument was already compatible (ie. array of valid type) and nothing was done   2) the input argument was correct type but not in an array so it was made into an array 
0, Line, //  a series of identifiers and dollars into a single identifier. 
0, Line, //  exclude this class from scanning since it's in the scanned package 
0, Line, //  Shortcut: use the pre-converted values as-is. 
0, Line, //  We need to use the default. 
0, Line, //  right/left 
0, Line, //  String is exhausted 
0, Line, //  simply must not bail...
0, Line, //  Using nullSafeHashCode for proper array hashCode handling 
0, Line, //  Visit the Module, ModulePackages and ModuleMainClass attributes. 
0, Line, //  Use simpler method if there are no nested annotations 
0, Line, //  consume relational operator token 
0, Line, //  Should call the non varargs version of concat 
0, Line, //  merges all values 
0, Line, //  Now test distinct bean with swapped value in factory, to ensure the two are independent 
0, Line, //  ensure setAsText can consume the return value of getAsText 
0, Line, //  Check that it is supported. 
0, Line, //  Ignore when no TransformerFactory implementation is available...
0, Line, //  only increment when creating the actual target - not the proxy 
0, Line, //  this will ensure that the reference is resolved at runtime. 
0, Line, //  "java.class.path" manifest evaluation... 
0, Line, //  /hotels/* + /booking -> /hotels/booking 
0, Line, //  Separate between BeanFactoryPostProcessors that implement PriorityOrdered, 
0, Line, //  Servlet 3.0 getParameterNames() not guaranteed to include multipart form items   (e.g. on WebLogic 12) -> need to merge them here to be on the safe side
0, Line, //  Read the instruction. 
0, Line, //  Ignore reinitialization if same context passed in. 
0, Line, //  Only in 2.0 XSD: moved to context namespace as of 2.1 
0, Line, //  @CacheKey 
0, Line, //  Bean name or resolved handler?
0, Block, /* 		 Try with Locale.US		 Since the msg has a time value in it, we will use String.indexOf(...)		 to just look for a substring without the time.  This is because it is		 possible that by the time we store a time variable in this method		 and the time the ResourceBundleMessageSource resolves the msg the		 minutes of the time might not be the same.		  */
0, Line, //  Parse listener specific settings 
0, Line, // see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getenv(java.lang.String) 
0, Line, //  Intentionally NOT annotated with @Configuration 
0, Line, //  not needed for the tests but here for completeness 
0, Line, //  Just subscribe without requesting 
0, Line, //  leading whitespace control characters (00-1F) 
0, Line, //  Can't use a more specific hashCode since we can't rely on   this.destination.hashCode() actually being the same value   for equivalent destinations... Thanks a lot, WebSphere MQ! 
0, Line, //  SPR-13328 
0, Block, /*  (non-Javadoc)	 * @see org.springframework.aop.MethodBeforeAdvice#before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object)	  */
0, Line, //  Session invalidated - shouldn't usually happen. 
0, Line, //  Make sure bean class is actually resolved at this point. 
0, Line, //  update the attributes 
0, Line, //  non-singleton, non-static 
0, Line, //  First, invoke the BeanDefinitionRegistryPostProcessors that implement PriorityOrdered. 
0, Line, //  CodeFlow.toPrimitiveTargetDesc(leftDesc); 
0, Line, //  Choose a "direct to target" dispatcher (used for 
0, Line, //  exception handler ranges. 
0, Line, // -------------------------------------------------------------------------   Delegate methods for resolving injection points  ------------------------------------------------------------------------- 
0, Line, //  which might give an indication on the desired target type. 
0, Line, //  "never cache" 
0, Line, //  Mark handlerBlock as an exception handler. 
0, Line, //  nested placeholders   deeply nested placeholders   unresolvable placeholder   unresolvable w/ default   cyclic reference left   cyclic reference right 
0, Line, //  Set up infrastructure. 
0, Line, //  varargs char 
0, Line, //  lots of whitespace 
0, Line, //  Kotlin module 
0, Line, //  Should only have one value child element: ref, value, list, etc.   Optionally, there might be a key child element. 
0, Line, //  variant with non-standard write method 
0, Line, //  /{foo} + /bar => /{foo}/bar 
0, Line, //  Probably from a TreeMap - ignore. 
0, Line, //  conflicting priority 
0, Line, //  OpInc 
0, Line, //  Skip leading separators that would be in the result 
0, Line, //  - The offset of the InnerClasses attribute, or 0. 
0, Line, //  Oracle uses catalog name for package name or an empty string if no package 
0, Line, //  Do NOT delete "DefaultContextCache.this."; otherwise, we accidentally   invoke java.util.Map.remove(Object, Object). 
0, Line, //  Note that it's important to ensure that we have this as   a FQN: otherwise it will match everything! 
0, Line, //  Has the singleton object implicitly appeared in the meantime ->   if yes, proceed with it since the exception indicates that state. 
0, Line, //  conversion int>string 
0, Line, //  Reset read-only flag. 
0, Line, //  parseCheck("new int[] {1,2,3}.average()");   }   
0, Line, //  SPR-7476 
0, Line, //  evaluates to "Wireless communication" 
0, Line, //  test matching with ?'s and .'s 
0, Line, // -------------------------------------------------------------------------   Convenience methods for accessing XML content  ------------------------------------------------------------------------- 
0, Line, //  Probably a class path resource: cache it forever. 
0, Line, // ---------------------------------------------------------------------   Implementation of InitializingBean interface  --------------------------------------------------------------------- 
0, Line, //  Because a dynamic intersection may be composed of a static and dynamic part,   we must avoid calling the 3-arg matches method on a dynamic matcher, as   it will probably be an unsupported operation. 
0, Line, //  but should still find it on classes. 
0, Line, //  1) Find and merge AnnotationAttributes from the annotation hierarchy 
0, Line, //  Shouldn't have changed first instance 
0, Line, // ---------------------------------------------------------------------   Abstract methods to be implemented by subclasses  --------------------------------------------------------------------- 
0, Line, //  Constructor invocation 
0, Line, //  parseCheck("3 in {1,2,3,4,5}", "(3 in {1,2,3,4,5})");   }   
0, Line, //  We wrote all, so can still write more.. 
0, Line, //  Write target_type, target_info, and target_path. 
0, Line, //  Just wanting to use the prefix or suffix within the template: 
0, Line, //  Don't use ResolvedType.isAssignableFrom() as it won't be aware of (Spring) mixins 
0, Line, //  A document can be a text literal 
0, Line, //  If there's no EOL, we must be at the end of the script, so stop here. 
0, Line, //  A generic reference to any name of any bean. 
0, Line, //  SPR-15727 
0, Line, //  Register BeanPostProcessorChecker that logs an info message when   a bean is created during BeanPostProcessor instantiation, i.e. when 
0, Line, //  Build list of ResourceBundle references for Locale. 
0, Line, //  Silently proceed with raw message if format not enforced... 
0, Line, //  affects choice of ClassLoader 
0, Line, //  Switch to FlushMode.AUTO, as we have to assume a thread-bound Session   with FlushMode.MANUAL, which needs to allow flushing within the transaction. 
0, Line, //  PATCH 
0, Line, //  Close the HTTP connection (if applicable). 
0, Line, //  First try to get it as a normal name=value parameter 
0, Line, //  not used in the response 
0, Line, //  Ensure we have at least one ViewResolver, by registering 
0, Line, //  notice - different map   true because linkedlist allows duplicates 
0, Line, //  Register all Hibernate mapping definitions in the given directories. 
0, Line, //  Method 
0, Line, //  Must not be private. 
0, Line, //  2. Above limit.. 
0, Line, //  Physically close durable subscribers at time of Session close call. 
0, Line, //  A bean with a custom scope... 
0, Line, //  SPR-8410 
0, Line, //  If the supplied content type is null, fall back to multipart/form-data.   Otherwise rely on the fact that isMultipart() already verified the   supplied content type is multipart. 
0, Line, //  If we aren't dealing with a raw type, check if generic parameters are assignable. 
0, Line, //  Should have failed to load without error 
0, Line, //  e.g. ActiveMQ 
0, Line, //  backwards compatibility 
0, Line, //  generic object conversion 
0, Line, //  set ThreadLocal Map if none found 
0, Line, //  Rare case: listener thread failed after container shutdown.   Log at debug level, to avoid spamming the shutdown log. 
0, Line, //  Here we could put a GOTO_W in theory, but if ASM specific instructions are used in this   method or another one, and if the class has frames, we will need to insert a frame after   this GOTO_W during the additional ClassReader -> ClassWriter round trip to remove the ASM   specific instructions. To not miss this additional frame, we need to use an ASM_GOTO_W   here, which has the unfortunate effect of forcing this additional round trip (which in 
0, Line, //  add new 
0, Line, //  ReadOnlySystemAttributesMap will come into play. 
0, Line, //  Determine handler for the current request. 
0, Line, //  this method is used by the test above 
0, Line, //  a bean is not eligible for getting processed by all BeanPostProcessors. 
0, Line, //  but this is handled gracefully   and beans from both packages are available
0, Line, //  check path 
0, Line, //  Standard JCA 1.5 "subscriptionDurability" apparently not supported... 
0, Line, //  SPR-10170 
0, Line, //  Setting the Set-Cookie header a 2nd time should overwrite the previous value 
0, Line, //  1 invocation 
0, Line, //  reached java.lang.Object 
0, Line, //  Proceed with actual listener initialization. 
0, Line, //  The PropertyEditor might not support this value... pass through. 
0, Line, //  trickier: 
0, Block, /* 	 * Testing the coercion of both the keys and the values to the correct type	  */
0, Line, //  Async dispatch after concurrent handling produces result ... 
0, Line, //  Custom resolvers 
0, Line, //  Search for further keys to strip, with the first key stripped. 
0, Line, //  Custom argument resolvers and return value handlers 
0, Line, //  If running in mixed mode, revert to interpreted 
0, Line, //  productExpression: powerExpr ((STAR^ | DIV^| MOD^) powerExpr)* ; 
0, Line, //  Hibernate 5.1/5.2: manually enforce connection release mode ON_CLOSE (the former default) 
0, Line, //  Expect no methods 
0, Line, //  handle -ref arguments 
0, Line, //  SPR-17027 
0, Line, //  spaces 
0, Line, //  Remove underlying context path first (e.g. Servlet container) 
0, Line, //  Will call pool.close() 
0, Line, //  Serialize and continue... 
0, Line, //  Special case: it returned "this" and the return type of the method   is type-compatible. Note that we can't help if the target sets   a reference to itself in another returned object. 
0, Line, //  No doOnDiscard as operators used do not cache 
0, Line, //  Override default "dev" profile from   @ConfigClassesAndProfilesWithCustomDefaultsMetaConfig: 
0, Line, //  Create the CacheInterceptor definition. 
0, Line, //  SPR-14040 
0, Line, //  Add two days because we start on Saturday 
0, Line, //  notice whitespace 
0, Line, //  In the form <? extends Number> is assignable to X... 
0, Line, //  Not a Class: OK, we'll simply create BeanShell objects   through evaluating the script for every call later on.   For this first-time check, let's simply return the   already evaluated object.
0, Line, //  If type is not F_NEW then it is F_INSERT by hypothesis, and currentBlock.frame contains   the stack map frame at the current instruction, computed from the last F_NEW frame and   the bytecode instructions in between (via calls to CurrentFrame#execute). 
0, Line, //  No WebLogic UserTransaction available or no transaction name specified   -> standard JTA begin call. 
0, Line, //  SPR-15372 
0, Line, // 	literal    : INTEGER_LITERAL  	| boolLiteral  	| STRING_LITERAL    | HEXADECIMAL_INTEGER_LITERAL    | REAL_LITERAL  	| DQ_STRING_LITERAL 
0, Line, //  trim the leading '[', may leave other '['   build array big enough to hold remaining arguments 
0, Line, //  Third request: expired session, new session created 
0, Line, //  We're only trying to find candidates, can easily ignore extra ones here... 
0, Line, //  An existing alias - no need to re-register 
0, Line, //  Add the instruction to the bytecode of the method.   Compute the 'base' opcode, i.e. GOTO or JSR if opcode is GOTO_W or JSR_W, otherwise opcode. 
0, Line, //  https://github.com/reactor/reactor-netty/issues/503   FluxReceive rejects multiple subscribers, but not after a cancel().   Subsequent subscribers after cancel() will not be rejected, but will hang instead.   So we need to intercept and reject them in that case. 
0, Line, //  Initialize and cache exported object. 
0, Line, //  Second step: create a Type instance for each argument type. 
0, Line, //  Flush to HTTP response. 
0, Line, //  InheritedAnnotationClass is NOT annotated or meta-annotated with @Component 
0, Line, //  Appeasing the compiler: the following line will never be executed. 
0, Line, //  Potential test timezone, both have daylight savings on October 21st 
0, Line, //  gh-22265 
0, Line, //  should trigger actual close 
0, Line, //  Set bean properties from init parameters. 
0, Line, //  Ignore, we'll add a default HandlerMapping later. 
0, Line, //  Let the delegate perform the actual doFilter operation. 
0, Line, //  Map of lists 
0, Line, //  bean name will cause AccessException 
0, Line, //  Store the original resource name if necessary... 
0, Line, //  start the MBeanExporter 
0, Line, //  Try to find SQLException with actual error code, looping through the causes.   E.g. applicable to java.sql.DataTruncation as of JDK 1.6. 
0, Line, //  Reset local application listeners to pre-refresh state. 
0, Line, //  This call is slow so we do it once. 
0, Line, //  should pass 
0, Line, //  Cannot be evaluated, so can't be readable.
0, Line, //  should be a class-based proxy 
0, Line, //  was **/myHandle 
0, Line, //  not a user destination 
0, Line, //  right is an int 
0, Line, //  allows render values to handle some strange browser compat issues. 
0, Line, //  We weren't ignoring anything anyway... 
0, Line, //  The next instruction starts a new basic block (except for GOTO: by default the code   following a goto is unreachable - unless there is an explicit label for it - and we   should not compute stack frame types for its instructions). 
0, Line, //  header 
0, Line, //  gh-23463 
0, Line, //  Child element is what we're looking for. 
0, Line, //  Store single elements 
0, JavaDoc, /*  * Represents a WebSocket close status code and reason. Status codes in the 1xxx range are * pre-defined by the protocol. Optionally, a status code may be sent with a reason. * * <p>See <a href="https://tools.ietf.org/html/rfc6455#section-7.4.1">RFC 6455, Section 7.4.1 * "Defined Status Codes"</a>. * * @author Rossen Stoyanchev * @since 4.0  */
0, Line, //  Logger available to subclasses 
0, Line, //  methods 
0, Line, //  Try Hibernate Validator 5.2's externalClassLoader(ClassLoader) method 
0, Line, //  Special handling of synchronized invocation 
0, Line, //  We're either instantiated and matching on declared pointcut,   or uninstantiated matching on either pointcut... 
0, Line, //  constraint is expressed in non encoded form 
0, Line, //  Giving up -> either using local default executor or none at all... 
0, Line, //  SPR-14177 
0, Line, //  Constructor handling 
0, Line, //  SPR-14044 
0, Line, //  caller actually wants a reference to the factory. 
0, Line, //  compilerMode = SpelCompilerMode.MIXED 
0, Line, //  SPR-11856 
0, Line, //  no properties have been marked as required -> validation should pass 
0, Line, //  Use default ThemeSource to be able to accept getTheme calls, either   delegating to parent context's default or to local ResourceBundleThemeSource. 
0, Line, //  start of URI variable 
0, Line, //  Assert no HttpMessageNotReadableException is thrown 
0, Line, //  If there is a stack map frame for this offset, make methodVisitor visit it, and read the   next stack map frame if there is one. 
0, Line, //  Return the scoped proxy definition as primary bean definition 
0, Line, //  ContextLoader 
0, Line, //  As of JDK 8, invoking getAnnotation() on a bridge method actually finds an   annotation on its 'bridged' method [1]; however, the Eclipse compiler will not   support this until Eclipse 4.9 [2]. Thus, we effectively ignore the following   assertion if the test is currently executing within the Eclipse IDE.     [1] https://bugs.openjdk.java.net/browse/JDK-6695379   [2] https://bugs.eclipse.org/bugs/show_bug.cgi?id=495396   
0, Line, //  Local exception handler methods on the controller class itself. 
0, Line, //  Look for arg variable and bind it if we find exactly one... 
0, Line, //  Giving up -> falling back to default scheduler within the registrar... 
0, Line, //  By default, the bean name is the name of the @Bean-annotated method 
0, Line, //  We can't create fancy target sources for directly registered singletons. 
0, Line, //  Let's skip any wrapping attempts if types are generally not serializable in   the current runtime environment (even java.lang.Class itself, e.g. on Graal) 
0, Line, //  When the condition is a primitive 
0, Line, //  class_info 
0, Line, //  SPR-14045 
0, Line, //  Guaranteed to be on the classpath, but most certainly NOT XML 
0, Line, //  Fallback exception match found. 
0, Line, //  If the returned MethodVisitor is in fact a MethodWriter, it means there is no method   adapter between the reader and the writer. In this case, it might be possible to copy   the method attributes directly into the writer. If so, return early without visiting 
0, Line, //  Write method's property type potentially more specific 
0, Line, //  look-up. 
0, Line, //  then 
0, Line, //  In the static case, target will simply be {@code null}. 
0, Line, //  never null 
0, Line, //  let others try 
0, Line, //  asserts that the set contract is not violated during a merge() operation... 
0, Line, //  Reset HTTP 1.0 Expires header if present 
0, Line, //  Second step: allocate a ByteVector of the correct size (in order to avoid any array copy in 
0, Line, //  RealLiteral 
0, Line, //  Create service locator proxy. 
0, Line, //  SPRING PATCH: leniently handle offset mismatch 
0, Line, //  SPR-11855 
0, Line, //  First arg is the map containing factoryBean : factoryMethod 
0, Line, //  as well as an empty marker interface 
0, Line, //  Ignore -> can only happen in case of a JTA transaction. 
0, Line, //  Common cache initialization delegates for subclasses 
0, Line, //  Should Pass. 
0, Line, //  append any characters to the right of a match 
0, Line, //  InvalidRepeatable[] value(); 
0, Line, //  all types are assignable to themselves and to class Object 
0, Line, //  quoted if dotted 
0, Line, //  HttpServletResponse exposes some headers as properties: we should include those if not already present 
0, Line, //  Use modifiable ArrayList here, to allow for further adding of   JobDetail objects during autodetection of JobDetail-aware Triggers. 
0, Line, //  Determine list of advisor bean names, if not cached already. 
0, Line, //  Convert everything up to the varargs position 
0, Line, //  Variables captures in this path pattern 
0, Line, //  (e.g., not German, where \u00e4 becomes &auml;) 
0, Line, //  Return false since we invoke a custom eviction algorithm. 
0, Line, //  Differing types of number, not yet supported
0, Line, //  Try relative to resource base if currently in system root. 
0, Line, //  Load XML resource with context-aware entity resolver. 
0, Line, //  Read the num_element_value_pairs field (or num_values field for an array_value). 
0, Line, //  No client side HttpCookie support yet 
0, Line, //  First, try custom translation from overridden method. 
0, Line, //  Projection 
0, Line, // ---------------------------------------------------------------------   Implementation of MBeanExportOperations interface  --------------------------------------------------------------------- 
0, Line, //  comparator = new PatternComparatorConsideringPath("/hotels/new.html");   paths.add(pp.parse("/hotels/new.*"));   paths.add(pp.parse("/hotels/{hotel}"));   Collections.shuffle(paths);   Collections.sort(paths, comparator); 
0, Line, //  value is array containing [true,false] 
0, Line, //  First core decoder (e.g. String) 
0, Line, //  Report first connect to the ListenableFuture 
0, Line, //  Skip the 'attributes' array field. 
0, Line, //  Explicitly remove instance from singleton cache: It might have been put there   eagerly by the creation process, to allow for circular reference resolution.   Also remove any beans that received a temporary reference to the bean. 
0, Line, //  Specify isolation level, if any, through corresponding WebLogic transaction property. 
0, Line, //  application/*+xml includes application/soap+xml 
0, Line, //  SPR-13286 
0, Line, //  First, check to see if the requested bean is a FactoryBean. If so, create a subclass   proxy that intercepts calls to getObject() and returns any cached bean instance.   This ensures that the semantics of calling a FactoryBean from within @Bean methods 
0, Line, //  class level 
0, Line, //  Add our local Advisor to the existing proxy's Advisor chain... 
0, Line, //  -- tests relating to customizing reserved default profiles ---------------------- 
0, Line, //  Nullsafe guard on expression element evaluating to primitive/null 
0, Line, //  Perform autodetection, if desired. 
0, Line, //  2. Send message to user via inboundChannel 
0, Line, //  Assert that target matches BEFORE invocation returns 
0, Line, //  test global property (should be null) 
0, Line, //  Possibly compiled by another thread before this thread got into the sync block 
0, Line, //  resolve with two args 
0, Line, //  Passing (int,Sub,boolean) on call to foo(Integer,Super,Boolean) requires boxing conversion of arguments zero and two   TODO checkMatch(new Class<?>[] {Integer.TYPE, Sub.class, Boolean.TYPE}, new Class<?>[] {Integer.class, Super.class, Boolean.class}, tc, ArgsMatchKind.REQUIRES_CONVERSION); 
0, Line, //  Make it the new current basic block. 
0, Line, //  try with transactional 
0, Line, //  SPR-12747 
0, Line, //  SPR-13154 
0, Line, //  Check for document with language localization. 
0, Line, //  The type of the previous local variable is not known yet, but if it later appears   to be LONG or DOUBLE, we should then use TOP instead.
0, Line, //  Assume no registry found -> create new one. 
0, Line, //  RowSet methods for extracting data values 
0, Line, //  Write method not matched against read method: potentially ambiguous through   several overloaded variants, in which case an arbitrary winner has been chosen   by the JDK's JavaBeans Introspector...
0, Line, //  try URL 
0, Line, //  Force all the text lower case to make matching faster 
0, Line, //  Check whether the delegate is a MessageListener impl itself.   In that case, the adapter will simply act as a pass-through. 
0, Line, //  failed to populate, so leave it as not initialized 
0, Line, //  Potentially inherited from outer <beans> sections, otherwise falling back to false. 
0, Line, //  -----------------------------------------------------------------------------------------------   Implementation of the ClassVisitor abstract class   ----------------------------------------------------------------------------------------------- 
0, Line, //  in conjunction with "" username, this means no password to use 
0, Line, //  if no-arg, don't insist on args at all 
0, Line, //  Keep the task in paused mode... 
0, Line, //  This check is different to the one in the other numeric operators (OpLt/etc)   because it allows for simple object comparison 
0, Line, //  Defensively back out when called from within the transform delegate below:   in particular, for the over-eager transformer implementation in Hibernate 5. 
0, Line, //  Using a TreeMap for alphabetical ordering of attribute names 
0, Line, //  Wrap executor with an unconfigurable decorator. 
0, Line, //  wait until stop is called 
0, Line, //  Note: Can't use JoinPointMatch.getClass().getName() as the key, since   Spring AOP does all the matching at a join point, and then all the invocations   under this scenario, if we just use JoinPointMatch as the key, then   'last man wins' which is not what we want at all.   Using the expression is guaranteed to be safe, since 2 identical expressions   are guaranteed to bind in exactly the same way. 
0, Line, //  Do not initialize FactoryBeans here: We need to leave all regular beans   uninitialized to let the auto-proxy creator apply to them! 
0, Line, //  no MessageSelector... 
0, Line, //  simple ctor 
0, Line, //  Fallback matches allow unresolvable generics, e.g. plain HashMap to Map<String,String>;   and pragmatically also java.util.Properties to any Map (since despite formally being a   Map<Object,Object>, java.util.Properties is usually perceived as a Map<String,String>). 
0, Line, //  Cross-server session lookup (e.g. user connected to multiple servers) 
0, Line, //  assert that 6:00 is next execution time 
0, Line, //  nested primitive array 
0, Line, //  Process any @Import annotations 
0, Line, //  SPR-16884 
0, Line, //  SPR-13252, SPR-14053 
0, Line, //  "fast enough" is of course relative, but we're using 6 seconds with the hope   that these tests typically pass on the CI server. 
0, Line, //  Should Fail due to duplicate configuration.
0, Line, //  Register Flux and Mono before Publisher... 
0, Line, //  Configuration class (full or lite) or a configuration-derived @Bean method   -> resolve bean class at this point... 
0, Line, //  The scale to apply in case of a NUMERIC or DECIMAL type, if any 
0, Line, //  Create bean instance. 
0, Line, //  Build SessionFactory instance. 
0, Line, //  evals to "Hello World" 
0, Line, //  Last fallback is the class of the original method. 
0, Line, //  Consider the concurrent flag to choose between stateful and stateless job. 
0, Line, //  pre-condition is that hasAspectName returned true 
0, Line, //  Current supplied argument being processed 
0, Line, //  check position for second 'true' 
0, Line, //  Check already loaded Class if present...   since we possibly can't even load the class file for this Class. 
0, Line, //  Iterate over the attributes to check, restoring the original value 
0, Line, //  ASM specific stack map frame types, used in {@link ClassVisitor#visitFrame}. 
0, Line, //  We can always call flush, just ensure writes are on.. 
0, Line, //  -21 
0, Line, //  We must always proxy equals, to direct calls to this. 
0, Line, //  Let's skip it if it's not resolvable - we're just looking for candidates
0, Line, //  not supplied due to COMPUTE_MAXS
0, Line, //  Using strict parsing to align with Joda-Time and standard DateFormat behavior:   otherwise, an overflow like e.g. Feb 29 for a non-leap-year wouldn't get rejected.   However, with strict parsing, a year digit needs to be specified as 'u'... 
0, Line, //  indexed write method 
0, Line, //  Case of an element_value with an enum_const_value field.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1. 
0, Line, //  Cache for the latest to-method resolved on a given Class 
0, Line, //  static method, reference type return 
0, Line, //  Set a temporary ClassLoader for type matching. 
0, Line, //  Visit the NestHost attribute. 
0, Line, //  OpMinus 
0, Line, //  Effectively, all remaining messages failed... 
0, Line, //  SPR-14224 
0, Line, //  NOTE: we would like to be able to override the 'value' attribute; however,   Spring currently does not allow overrides for the 'value' attribute.
0, Line, //  not writable 
0, Line, //  Should never happen.. 
0, Line, //  Never reached 
0, Line, //  Catch-all 
0, Line, //  The AJTypeSystem goes to great lengths to provide a uniform appearance between code-style and   annotation-style aspects. Therefore there is no 'clean' way to tell them apart. Here we rely on   an implementation detail of the AspectJ compiler. 
0, Line, //  @ContextConfig --> Intentionally NOT meta-present 
0, Line, //  Treat empty String as null value. 
0, Line, //  Create a new delegate now (but don't store it in the map).   We do this for two reasons:   1) to fail early if there is a problem instantiating delegates   2) to populate the interface map once and once only 
0, Line, //  SPR-12742 
0, Line, //  SPR-16752 
0, Line, //  HTTP 1.0 Expires header 
0, Line, // ---------------------------------------------------------------------   Implementation of DisposableBean interface  --------------------------------------------------------------------- 
0, Line, //  a custom phase value 
0, Line, //  That confirms the logic to mark the cached reference stale and retry is working 
0, Line, //  logicalAndExpression : relationalExpression (AND^ relationalExpression)*; 
0, Line, //  Parameters used for optimization choices... 
0, Line, //  Making sure replyChannel is not mixed with replyTo 
0, Line, //  Handle radix specifier, if present. 
0, Line, //  In case the BytesMessage is going to be received as a user argument:   reset it, otherwise it would appear empty to such processing code... 
0, Line, //  Remove property from property values to bind: 
0, Line, //  Same comment as above. 
0, Line, //  To keep the algorithm simple we don't support subtypes 
0, Line, //  Attributes need to have their methods exposed as   operations to the JMX server as well. 
0, Line, //  No current transaction timeout -> apply specified value. 
0, Line, //  For now, everything becomes a double... 
0, Line, //  DontCheck(MemberName): can't be renamed (for backward binary compatibility). 
0, Line, //  all prime numbers > 10 from the list (using selection ?{...}) 
0, Line, //  TaskExecutor indicated a preference for short-lived tasks. According to   setMaxMessagesPerTask javadoc, we'll use 10 message per task in this case   unless the user specified a custom value. 
0, Line, //  Case of a backward jump with an offset < -32768. In this case we automatically replace GOTO   with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <L> GOTO_W <l> L:..., where   IFNOTxxx is the "opposite" opcode of IFxxx (e.g. IFNE for IFEQ) and where <L> designates   the instruction just after the GOTO_W. 
0, Line, //  Helpers 
0, Line, //  Try to apply some standard type conversion rules if appropriate. 
0, Line, //  Start new transaction with default rollback semantics 
0, Line, //  Instance fields. 
0, Line, //  if a new object is requested or none exists under the current 
0, Line, //  Single size primitive (boolean) 
0, Line, //  Probably simply a method that wasn't meant to follow the JavaBeans pattern... 
0, Line, //  multi-item list 
0, Line, //  WebSocketHandler adapter delegate methods 
0, Line, //  Now add attribute and try again 
0, Line, //  idempotent 
0, Line, //  if there wasn't an old one, add it 
0, Line, //  Inject a container-managed extended EntityManager. 
0, Line, //  Mixed literal parts and URI variables, maybe (encode literal parts only).. 
0, Line, //  will access the field 'wibble' and not use a getter 
0, Line, //  gh-21799 
0, Line, //  abstract beans should not match 
0, Line, //  "DIV","EQ","GE","GT","LE","LT","MOD","NE","NOT" 
0, Line, //  On exception it won't be invoked 
0, Line, //  gh-22731 
0, Line, //  child value for 'one' must override parent value... 
0, Line, //  The below does not work since ConnectionPoolProvider simply checks if pool is empty.   assertFalse(connectionProvider.isDisposed());
0, Line, //  What about a map key that is an expression - ensure the getKey() is evaluated in the right scope 
0, Line, //  Per contract body shouldn't be null, but check anyway..
0, Line, //  Only needed when compiling against Jackson 2.7; gone in 2.8 
0, Line, //  Now actually close the Session. 
0, Line, //  Annotation-based argument resolution 
0, Line, //  Normal case: URI contains servlet path. 
0, Line, //  Too long: truncation 
0, Line, //  Avoid parsing the port, may have URI variable.. 
0, Line, //  If srcType has the same array dimension and the same kind as dstType. 
0, Line, //  just comparing two classes 
0, Line, //  1500 is greater than SpelCompiler.CLASSES_DEFINED_LIMIT 
0, Line, //  1 primitive arg, and one candidate... 
0, Line, //  6 header bytes and 1 byte for parameters_count. 
0, Line, //  Check for specific exception mappings. 
0, Line, //  Determine type of the target bean. 
0, Line, //  These fail prior to fixing SPR-10546 
0, Line, //  SPR-16759 
0, Line, //  Before Java 1.5, synthetic fields are represented with a Synthetic attribute. 
0, Line, //  @CustomStereotype-annotated   @CustomComponent-annotated 
0, Line, //  The number of bytes in previous buffers. 
0, Line, //  Cannot access thread context ClassLoader - falling back... 
0, Line, //  Ensure that we do not include the EventPublishingTestExecutionListener   since it will access the ApplicationContext for each method in the   TestExecutionListener API, thus distorting our cache hit/miss results. 
0, Line, //  We should be at least 4 time faster 
0, Line, //  No match when the literal path element is a longer form of the segment in the pattern 
0, Line, //  must be write only 
0, Line, //  stack: left/right 
0, Line, //  Allow for multiple close calls... 
0, Line, //  Try to determine URL for resource. 
0, Line, //  no transactional support for putIfAbsent 
0, Line, //  non-static method, one parameter of reference type 
0, Line, //  Spring bean names are less restrictive compared to AspectJ names (methods, types etc.)   MVC Controller-kind 
0, Line, //  Second candidate we've found - ambiguous binding 
0, Line, //  Invoke without a request parameter (String return value) 
0, Line, //  SPR-10341 
0, Line, //  The following is unpleasant but a consequence of the raw collection converter above... 
0, Line, //  for windows 
0, Line, //  number types are not the same 
0, Line, //  Put an object with null property at the end of the sort result. 
0, Line, //  name is ok but madeup() does not exist 
0, Line, //  SEND 
0, Line, // -------------------------------------------------------------------------   Methods handling execution  ------------------------------------------------------------------------- 
0, Line, //  Optimistically, any MultiValueMap with or without generics 
0, Line, //  from primitive array to reference type array 
0, Line, //  SPR-9160 
0, Line, //  SPR-9293 
0, Line, //  Builder 
0, Line, // assertTrue("5 beans in reftypes, not " + this.beanFactory.getBeanDefinitionCount(), this.beanFactory.getBeanDefinitionCount() == 5); 
0, Line, //  PathContainer methods.. 
0, Line, //  Excludes methods implemented. 
0, Line, //  Need to remove it in this case, since Quartz shares the Scheduler instance by default!
0, Line, //  Read the class attributes (the variables are ordered as in Section 4.7 of the JVMS).   Attribute offsets exclude the attribute_name_index and attribute_length fields. 
0, Line, //  Subclasses for specific, server-side, HTTP status codes 
0, Line, //  double 
0, Line, //  and the path data has run out too 
0, Line, //  for Environment.acceptsProfiles(String...) 
0, Line, //              
0, Line, //  If we get an archive, simply return the jar URL (section 6.2 from the JPA spec) 
0, Line, //  "advice" methods 
0, Line, //  Execute invokeHandlerMethod in synchronized block if required. 
0, Line, //  We need a transactional target now. 
0, Line, //  Register specified ScheduledExecutorTasks, if necessary. 
0, Line, //  Any change to this method should be also applied to spring-jms and spring-messaging 
0, Line, //  Call each validator with the same binding result 
0, Line, //  array initializer 
0, Line, //  Might be one of the textual forms of the operators (e.g. NE for != ) -   in which case we can treat it as an identifier. The list is represented here:   Tokenizer.alternativeOperatorNames and those ones are in order in the TokenKind enum. 
0, Line, //  Calling foo(String,int) with (String,Integer) requires boxing conversion of argument one 
0, Line, //  Restore old proxy. 
0, Line, //  no expected exception!
0, Line, //  static method, primitive type return 
0, Line, //  Send as Mono if possible as an optimization hint to Reactor Netty 
0, Line, //  Should not happen since placeholders are checked earlier. 
0, Line, //  Release default logger if it is not being used. 
0, Line, //  Verifying 
0, Line, //  The size and offset in bits of each field of an abstract type. 
0, Line, //  update the attribute 
0, Line, //  assuming RFC-1123 value a la "Tue, 3 Jun 2008 11:05:30 GMT" 
0, Line, //  Not very useful until createHeaders does more with metadata 
0, Line, //  Extracted value does not match already: try to convert it. 
0, Line, //  Corresponding SQL types for JSR-310 / Joda-Time types, left up 
0, Line, //  not a proxy so this should not have changed 
0, Line, //  Happening on the production version of Google App Engine, coming out of the   restricted "sun.reflect.ReflectionFactory" class... 
0, Line, //  if not empty, drop through to elseTarget 
0, Line, //  This can happen if someone is sloppy with Throwable causes...
0, Line, //  Fallback is to look at the original method. 
0, Line, //  parseCheck("new int[] {1,2,3}.min()");   }   
0, Line, //  widening of int 3 to long 3 is OK 
0, Line, //  method.) 
0, Line, // ---------------------------------------------------------------------   Implementation of ConfigurablePropertyResolver interface  --------------------------------------------------------------------- 
0, Line, //  Multi-dimensional - hold onto your hat! 
0, Line, //  Append the new basic block at the end of the basic block list. 
0, Line, //  force a header write 
0, Line, //  Without a fix compilation was inserting a checkcast to a private type 
0, Line, //  stack: right 
0, Line, //  this.factory.preInstantiateSingletons(); 
0, Line, //  Ensure headers are flushed, no body should be written. 
0, Line, //  spouse for autowiring by type... 
0, Line, //  Expect one invocation by the filter being tested 
0, Line, //  full resource path 
0, Line, //  No handler found... 
0, Line, //  re-refresh (after construction refresh) 
0, Line, //  Two reasons this can occur:   1. the method invoked actually threw a real exception   2. the method invoked was not passed the arguments it expected and has become 'stale' 
0, Line, //  Simple editors, without parameterization capabilities. 
0, Line, //  Some X-Forwarded-* tests in addition to the ones in UriComponentsBuilderTests 
0, Line, //  Initialize before first call to getLogPrefix() 
0, Line, //  SPR-4612 
0, Line, //  When just doing type checks (i.e. not creating an actual instance yet),   use the specified temporary class loader (e.g. in a weaving scenario). 
0, Line, // 		StaticApplicationContext ctx = new StaticApplicationContext();  		ctx.registerPrototype("testService", TestService.class, new MutablePropertyValues());  		ctx.registerAlias("testService", "1");  		MutablePropertyValues mpv = new MutablePropertyValues();  		mpv.addPropertyValue("serviceLocatorInterface", TestServiceLocator3.class);  		ctx.registerSingleton("factory", ServiceLocatorFactoryBean.class, mpv);  		ctx.refresh(); 
0, Line, //  cache name = id 
0, Line, //  let raw JMS invocation throw an exception if Destination (i.e. args[0]) is null 
0, Line, //  SPR-15074 
0, Line, //  Configure CGLIB Enhancer... 
0, Line, //  Subscription methods (we're the Subscription to the writeSubscriber).. 
0, Line, //  Possibly store converted value in merged bean definition,   in order to avoid re-conversion for every created bean instance. 
0, Line, //  Can be overridden by registering custom instances of those as custom editors. 
0, Line, //  We're looking to find a match or return null.. 
0, Line, //  client 
0, Line, // ---------------------------------------------------------------------   Implementation of BeanFactory interface  --------------------------------------------------------------------- 
0, Line, //  Use defaults if no transaction definition given. 
0, Line, //  InitializingBean 
0, Line, //  See testValidator() 
0, Line, //  session 
0, Line, //  counter intuitive, must be false: 
0, Line, //  ? extends T <= ? extends S if T <: S 
0, Line, //  OpLE   OpGE   true - null is <= or >= null 
0, Line, //  Read the 'exports_count' and 'exports' fields. 
0, Line, //  top-level empty variable scope 
0, Line, //  Current location in the token stream when processing tokens 
0, Line, //  Ignore, as does IndexedPropertyDescriptor#getIndexedPropertyType 
0, Line, // ---------------------------------------------------------------------   Other  --------------------------------------------------------------------- 
0, Line, //  tokenize it with "," 
0, Line, //  Retrieve corresponding bean definition. 
0, Line, //  Note: We can't use JoinPointMatch.getClass().getName() as the key, since   Spring AOP does all the matching at a join point, and then all the invocations.   Under this scenario, if we just use JoinPointMatch as the key, then   'last man wins' which is not what we want at all.   Using the expression is guaranteed to be safe, since 2 identical expressions 
0, Line, //  those cases before letting the original code (that only handled actual numbers) run 
0, Line, //  SPR-12123 
0, Line, //  SPR-10825 
0, Line, //  Let's try whether we're in a JTA transaction. 
0, Line, //  We got the result, must also wait for the dispatch 
0, Line, //  This stream doesn't have any data in it... 
0, Line, //  SimpleControllerHandlerAdapter not detected 
0, Line, //  Invoke a non-advised method 
0, Line, //  Handle nested properties recursively. 
0, Line, //  give other interceptors a chance to handle the error 
0, Line, //  Handler method lookup 
0, Line, //  Put the access_flags, name_index and descriptor_index fields. 
0, Line, //  Don't use the supplied testClass; instead ensure that we are   building the MCC for the actual test class that declared the   configuration for the current level in the context hierarchy. 
0, Line, //  Should still be the case with custom multipart types supported 
0, Line, //  Unwrap proxies for speed 
0, Line, //  Cancel associated user-level ListenableFuture handle as well 
0, Line, //  store the byte 
0, Line, //  Unchanged 
0, Line, //  Replace the original bean definition with the target one, if necessary 
0, JavaDoc, /* 	 * Match a String against the given pattern, supporting the following simple	 * pattern styles: "xxx*", "*xxx", "*xxx*" and "xxx*yyy" matches (with an	 * arbitrary number of pattern parts), as well as direct equality.	 * @param pattern the pattern to match against	 * @param str the String to match	 * @return whether the String matches the given pattern	  */
0, Line, //  value is list containing [true,false] 
0, Line, //  If no name specified, apply method identification as transaction name. 
0, Line, //  The size, in bytes, to use when allocating the first byte[] 
0, Line, //  Fire aspect 
0, Line, //  on Windows 
0, Line, //  Servlet 4.0 PushBuilder not found - not supported for injection 
0, Line, //  Skip bridge methods - we're only interested in original annotation-defining user methods.   On JDK 8, we'd otherwise run into double detection of the same annotated method... 
0, Line, //  Only String-based MultiValueMap 
0, Line, //  should not be called, since we override canRead/Write 
0, Line, //  message 
0, Line, //  Unlock 
0, Line, //  Officer's Dictionary 
0, Line, //  Deal with array by delegating to the component type 
0, Line, //  = 1 invocation   = 2 invocations 
0, Line, //  2xx Success 
0, Line, //  SPR-15910 
0, Line, //  SPR-17473 
0, Line, //  null map value case 
0, Line, //  Should not have been autowired 
0, Line, //  (see BigDecimal javadoc for details) 
0, Line, //  Ignored 
0, Line, //  We've already added a version, we need to extend it 
0, Line, //  SPR-16275 
0, Block, /* 	 * Return {@code true} if the given argument type is a subclass	 * of the given supertype.	  */
0, Line, //  Ideally create enhanced FactoryBean proxy without constructor side effects,   analogous to AOP proxy creation in ObjenesisCglibAopProxy... 
0, Line, //  contextPath in underlying request 
0, Line, // 		beanFactory.getBean("name-value1", TestBean.class); 
0, Line, // -----------------------------------------------------------------------------------   Hook for exception translation (used by JpaTransactionManager)  ----------------------------------------------------------------------------------- 
0, Line, //  Strip off any leading '_' and whitespace, what's left is the variant. 
0, Line, //  The provider of call meta-data 
0, Line, //  SPR-13516 
0, Line, //  See SPR-13486 
0, Line, //  Handle isOpen method: always return true. 
0, Line, //  Reschedule paused tasks, if any. 
0, Line, //  Lazily determine theme to use for this RequestContext. 
0, Line, //  No write method found for non-void returning 'setFoo' method. 
0, Line, //  Massage return value if possible: if the delegate returned itself, 
0, Line, //  Use holder's reference count to track synchronizedWithTransaction access. 
0, Line, //  AnnotatedElementUtils finds first 
0, Line, //  Re-register post-processor for detecting inner beans as ApplicationListeners, 
0, Line, //  Continue with null type descriptor 
0, Line, //  no need to invoke the actual test method 
0, Line, //  For num_annotations. 
0, Line, //  how deep in nested {...} pairs 
0, Line, //  Ensure that we exclude 
0, Line, //  SPR-17475 
0, Line, //  Clear all pending inserts/updates/deletes in the Session.   Necessary for pre-bound Sessions, to avoid inconsistent state. 
0, Line, //  should be ignored 
0, Line, //  otherwise value has to be Serializable 
0, Line, //  before configuration class processing kicks in... 
0, Line, //  ternary operator 
0, Line, //  in the control flow graph to the list of blocks to process (if not already done). 
0, Line, //  This is what you had to do before the changes in order for it to compile: 
0, Line, //  should never happen.. 
0, Line, //  transform stuff 
0, Line, // depthPlusOne(exitTypeDescriptor)+"Ljava/lang/Object;"); 
0, Line, //  SPR-11052 
0, Line, //  Overridable template methods for cache initialization 
0, Line, //  ignore - probably running on JDK without the JAX-WS impl present 
0, Line, // 1.0
0, Line, //  put null in as a value... 
0, Line, //  If the string name is changing the accessor is clearly going to change (so no compilation possible) 
0, Line, //  Effectively checking object equality as well as toString equality.   On WebSphere MQ, Destination objects do not implement equals... 
0, Line, //  TODO AopUtils.invokeJoinpointUsingReflection 
0, Line, //  SPR-9159 
0, Line, //  null): 
0, Line, //  gh-22386 
0, Line, //  this bean does not have any ignored methods on it, so must obviously not be ignored... 
0, Line, //  Do we need to mark the bean as skipped by its condition?
0, Line, //  Unwrap to the native Validator with forExecutables support 
0, Line, //  Restore the original attribute snapshot, in case of an include. 
0, Line, //  ----------------------------------------------------------------------------------------------   Methods to parse stack map frames   ---------------------------------------------------------------------------------------------- 
0, Line, //  NOTE: while you might expect the main key to have been updated, it hasn't. @Cacheable operations   are only processed in case of a cache miss. This is why combining @Cacheable with @CachePut   is a very bad idea. We could refine the condition now that we can figure out if we are going   to invoke the method anyway but that brings a whole new set of potential regressions.
0, Line, //  SPR-13292 
0, Line, //  fallback 
0, Line, //  Test fallback. We assume that no database will ever return this error code, 
0, Line, //  https://github.com/spring-projects/spring-framework/issues/23633 
0, Line, //  Get global attributes, if any. 
0, Line, //  The bytecode offset of the next runtime invisible type annotation to read, or -1. 
0, Line, //  no conflicts found trying to register SimpleComponent   succeeds -> there is only one bean of type SimpleComponent 
0, Line, //  index1 is 4, intArray[3] is 3 
0, Line, //  The subsequent dance is performed just once for each class,   so it does not matter much how fast it goes 
0, Line, //  Only proceed with retrieved object if still present (the expected case).   If it disappeared concurrently, we return our locally created instance. 
0, Line, // no-op 
0, Line, //  Create the CacheOperationSource definition. 
0, Line, //  ServletResponse, HttpServletResponse 
0, Line, //  Catch-all... 
0, Line, //  Must have come from TargetSource. 
0, Line, //  24.0 
0, Line, // assertTrue(Arrays.binarySearch(pf.getProxiedInterfaces(), TimeStamped.class) != -1); 
0, Line, //  Check that AnnotationUtils works with concrete proxied script classes 
0, Line, //  varargs conversion but no varargs 
0, Line, //  Else, just print it out. 
0, Line, //  This next call was failing because the isCompilable check in Indexer   did not check on the key being compilable (and also generateCode in the   Indexer was missing the optimization that it didn't need necessarily   need to call generateCode for that accessor) 
0, Line, //  getDeclaredClasses() failed because of non-resolvable dependencies   -> fall back to ASM below 
0, Line, //  Let abstract subclasses check their configuration. 
0, Line, //  Original stack must not contain any reference to methodInCallStack 
0, Line, //  Read the method attributes (the variables are ordered as in Section 4.7 of the JVMS).   Attribute offsets exclude the attribute_name_index and attribute_length fields. 
0, Line, //  Could not find the database among the defined ones. 
0, Line, //  No JarURLConnection -> need to resort to URL file parsing.   We'll assume URLs of the format "jar:path!/entry", with the protocol   being arbitrary as long as following the entry format.   We'll also handle paths with and without leading "file:" prefix. 
0, Line, //  no-op; the @ComponentScan-annotated MyConfig class below simply exercises   available attributes of the annotation. 
0, Line, //  If counter is 5 then the method got called twice! 
0, Line, //  Package-private: used in ResponseCookie 
0, Line, //  Record the fact that 'label' is the target of a jump instruction. 
0, Line, //  SPR-8571 
0, Line, //  Equality checks were handled by the proxy 
0, Line, //  Special case: A SmartInstantiationAwareBeanPostProcessor returned a non-FactoryBean   type but we nevertheless are being asked to dereference a FactoryBean...   Let's check the original bean class and proceed with it if it is a FactoryBean. 
0, Line, //  Complete the control flow graph with the successor blocks of subroutines, if needed. 
0, Line, //  create proxy factory bean definition 
0, Line, //  array of arrays 
0, Line, //  parseCheck("new String[3]");   } 
0, Line, //  The next path element in the chain 
0, Line, //  A static field/method call will not consume what is on the stack,   it needs to be popped off. 
0, Line, //  It is a full capture of this element (possibly with constraint), for example: /foo/{abc}/ 
0, Line, //  Remove already filtered 
0, Line, //  Shouldn't have changed value in joinpoint 
0, Line, //  SPR-12605 
0, Line, //  float is not a wide type 
0, Line, //  Wait for AsyncMessageListenerInvokers to deactivate themselves... 
0, Line, //  Register the bean definitions before invoking preInstantiateSingletons()   to simulate realistic usage of an ApplicationContext; otherwise, the bean   factory thinks it's an "empty" factory which causes this test to fail in   an unrealistic manner. 
0, Line, //  gh-23321 
0, Line, //  By construction, jsr targets are stored in the second outgoing edge of basic blocks   that ends with a jsr instruction (see {@link #FLAG_SUBROUTINE_CALLER}). 
0, Line, //  Remove non-matching listeners that originally came from   ApplicationListenerDetector, possibly ruled out by additional   BeanDefinition metadata (e.g. factory method generics) above. 
0, Line, //  If the username is empty, we'll simply let the target DataSource   use its default credentials. 
0, Line, //  Ensure BeanNameUrlHandlerMapping (SPR-8289) and default HandlerAdapters are not "turned off" 
0, Line, //  Add this successor to the list of blocks to process, if it does not already belong to a   list of labels. 
0, Line, //  SPR-15560 
0, Line, //  A populated but stale holder -> could keep using it. 
0, Line, //  Hamcrest.. 
0, Line, //  then proceed with actually loading the bean definitions. 
0, Line, //  exclude synthetic + bridged && static class initialization 
0, Line, //  Getting refreshed by another thread already ->   let's return the existing properties for the time being. 
0, Line, //  A custom TypeConverter which does not support TypeDescriptor resolution... 
0, Line, //  wrapping only, no allocation 
0, Line, //  clear() 
0, Line, //  gh-22107 
0, Line, //  For Oracle where catalogs are not supported we need to reverse the schema name   and the catalog name since the catalog is used for the package name 
0, Line, //  Proceed with read method's property type 
0, Line, //  Similar to above for the capture-the-rest variant 
0, Line, //  destination -> subscriptions 
0, Line, //  Use a single shared instance for common combinations 
0, Line, //  First getBean call triggers actual creation of the singleton bean 
0, Line, //  Register aliases for bean name, if any. 
0, Line, //  both with the rendered value and with the original value. 
0, Line, //  Assign a generated name?
0, Line, //  carry on consuming digits 
0, Block, /*  List of ResourceBundle -> BeanFactory  */
0, Line, //  no candidate destroy method found 
0, Line, // 	// time it interpreted  	long stime = System.currentTimeMillis(); 
0, Line, //  This is to deal with the case where the property setter is the last   statement in a closure (hence the return value) 
0, Line, //  SPR-14363 
0, Line, //  Avoid recreation of the script bean definition in case of a prototype. 
0, Line, //  (potentially an inner bean). 
0, Line, // ---------------------------------------------------------------------   Implementation of Spring Validator interface  --------------------------------------------------------------------- 
0, Line, //  Confirm all dimensions were specified (for example [3][][5] is missing the 2nd dimension) 
0, Line, //  Attempt to keep connection alive by consuming its remaining content 
0, Line, //  ignore 
0, Line, //  Expect no methods on home 
0, Line, //  Simulate AbstractBeanDefinition.validate() which delegates to 
0, Line, //  Use non-singleton bean definition, to avoid registering bean as dependent bean. 
0, Line, //  Parse the attribute to find the corresponding (debug only) labels. 
0, Line, //  ---------------------------------------------------------------------   ServletRequest properties   --------------------------------------------------------------------- 
0, Line, //  Extends above class just to add repository annotation 
0, Line, //  2) Synthesize the AnnotationAttributes back into the target annotation 
0, Line, //  path intentionally omitted 
0, Line, //  Ignore: we don't produce data 
0, Line, //  @formatter:off 
0, Line, //  Reset common introspection caches in Spring's core, since we   might not ever need metadata for singleton beans anymore... 
0, Line, //  - The string corresponding to the SourceFile attribute, or null. 
0, Line, //  SPR-12735 
0, Line, //  We couldn't identify it more precisely. 
0, Line, //  SPR-14498 
0, Line, // ---------------------------------------------------------------------   Autodetection process  --------------------------------------------------------------------- 
0, Line, //  no tx active 
0, Line, //  go before RequestMappingHandlerMapping 
0, Line, //  Must be a list to support ordering   Our bean doesn't modify the collection: 
0, Line, //  Modify header if necessary 
0, Line, //  SPR-9284 
0, Line, //  Eagerly disconnect the Session here, to make release mode "on_close" work nicely. 
0, Line, //  Actually set 'corePoolSize' to the upper bound of the range   but allow core threads to timeout... 
0, Line, //  No type found for shortcut FactoryBean instance: 
0, Line, //  1) Check for an explicit database name 
0, Line, //  Only one MBean 
0, Line, //  Cast is necessary for compilation in Eclipse 4.4.1. 
0, Line, //  SPR-9021 
0, Line, //  Try even with null body. ResponseBodyAdvice could get involved. 
0, Line, //  Eagerly cache singletons to be able to resolve circular references 
0, Line, //  First, switch back to throwException(int) 
0, Line, //  Export RMI object. 
0, Line, //  Default-lazy-init applies to custom bean definitions as well. 
0, Line, //  element stack containing the caught exception type). 
0, Line, //  Extract multipart files and multipart parameters. 
0, Line, //  vararg methods go last 
0, Line, //  SPR-12999 
0, Line, //  SPR-16630 
0, Line, //  If return value is a Statement, apply transaction timeout.   Applies to createStatement, prepareStatement, prepareCall. 
0, Line, //  p2 should 'win' as it was registered last 
0, Line, //  InternalResourceViewResolver 
0, Line, //  Check if required type matches the type of the actual bean instance. 
0, Line, //  retrying in case of concurrent reads on the same key 
0, Line, //  SPR-11401 
0, Line, //  A simple bean... Let's create a lazy-init ModelMBean proxy with notification support. 
0, Line, //  @formatter:on 
0, Line, //  preserve the pre-bound RequestAttributes instance 
0, Line, //  The separator used in this path pattern 
0, Line, //  Complete configuring the PrototypeTargetSource. 
0, Line, //  while adding the given bootstrap method to it, in the rest of this method. 
0, Line, //  Running in an ApplicationContext -> register tasks this late...   giving other ContextRefreshedEvent listeners a chance to perform   their work at the same time (e.g. Spring Batch's job registration). 
0, Line, //  Name of schema for call 
0, Line, //  add application context to url 
0, Line, //  comes from "resourceImport.xml" 
0, Line, //  elements and will be stored in what is in fact num_values. 
0, Line, //  Interpret argument array as single method argument of array type. 
0, Line, //  singleton, non-static 
0, Line, //  Access flags values, defined in   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.1-200-E.1   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.5-200-A.1   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.6-200-A.1   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.25 
0, Line, //  SPR-14368 
0, Line, //  Make given DataSource available for SchedulerFactory configuration. 
0, Line, //  Try to get the connector bean. 
0, Line, //  Create the HTML text part of the message. 
0, Line, //  make sure the write index is correctly set 
0, Line, //  TODO allow for key being PropertyOrFieldReference like Indexer on maps
0, Line, //  doesn't make much sense in the context of a list... 
0, Line, //  We've reached the end of the current statement 
0, Line, //  Check actual existence of temporary file. 
0, Line, //  alternatively 
0, Line, //  We can stringify any primitive value... 
0, Line, //  Fully synchronize now for missing cache registration 
0, Line, //  Obtain EntityManager reference from JNDI?
0, Line, //  Do not require @Transactional test methods to be public. 
0, Line, //  Cache RMI stub on initialization?
0, Line, //  Clear out the transformers (copied as well) 
0, Line, //  gh-23305 
0, Line, //  Should be ordered 
0, Line, //  If the target class is null, the method will be unchanged. 
0, Line, //  evaluates to "Induction motor" 
0, Line, //  Instantiate the specified BeanDefinitionReader 
0, Line, //  Table has been dropped 
0, Line, //  get hidden bean 
0, Line, //  the factory is a prototype - ask for multiple instances 
0, Line, //  In the form X is assignable to <? extends Number> 
0, Line, //  ok, is this change reflected in the reference that the collaborator has?
0, Line, //  - Whether the stack map frames are compressed (i.e. in a StackMapTable) or not. 
0, Line, //  Calling 'Fruit(String... strings)' 
0, Line, //  If the local variable has never been assigned in this basic block, it is equal to its   value at the beginning of the block. 
0, Line, //  Remaining top paths need to be retained. 
0, Line, //  read it, set it, read it again 
0, Line, //  The delta to subtract from a goto_w or jsr_w opcode to get the corresponding goto or jsr   opcode, or 0 if goto_w and jsr_w must be left unchanged (i.e. when expanding ASM specific 
0, Line, //  Session is rolled back 'cos it is transacted... 
0, Line, //  SPR-15803: nested array 
0, Line, //  If handlerRangeBlock is a JSR block, add handlerBlock after the first two outgoing   edges to preserve the hypothesis about JSR block successors order (see   {@link #visitJumpInsn}). 
0, Line, //  parameterized types are only assignable to other parameterized types and class types 
0, Line, //  Obtain bean definitions for all relevant BeanPostProcessors. 
0, Line, //  IntelliJ IDEA 11 won't accept int assignment here 
0, Line, //  backwards compatibility reasons. 
0, Line, //  SPR-14238 
0, Line, //  Prepare the bean factory for use in this context. 
0, Line, //  In any case, we can still verify the type of event that would have 
0, Line, //  At this point, we need a TypeDescriptor for a non-null target object 
0, Line, //  construct an errors instance of the tag 
0, Line, //  -----------------------------------------------------------------------------------------------   Instance fields   ----------------------------------------------------------------------------------------------- 
0, Line, //  We should set a specific isolation level but are not allowed to... 
0, Line, //  Basic number comparisons 
0, Line, //  in case of plain LinkageError (class already defined)   or IllegalArgumentException (class in different package):   fall through to traditional ClassLoader.defineClass below 
0, Block, /* 	 * Below are tests from Table 12-1 of the Servlet Specification	  */
0, Line, //  gh-22853 
0, Line, //  gh-22720 
0, Line, //  Close and stop the listeners 
0, JavaDoc, /* 	 * Removes all headers provided via array of 'headerPatterns'.	 * <p>As the name suggests, array may contain simple matching patterns for header	 * names. Supported pattern styles are: "xxx*", "*xxx", "*xxx*" and "xxx*yyy".	  */
0, Line, //  Helper methods 
0, Line, //  Override a DECIMAL data type for no-decimal numerics   (this is for better Oracle support where there have been issues   using DECIMAL for certain inserts (see SPR-6912)) 
0, Line, //  SPR-12861 
0, Line, //  Demonstrates we cant inject that event because the listener has a raw type 
0, Line, // ---------------------------------------------------------------------   Implementation of ApplicationContext interface  --------------------------------------------------------------------- 
0, Line, //  Reset session if invalidated. 
0, Line, //  Try to build the most specific interface possible for inherited methods to be   considered for sub-interface matches as well, in particular for proxy classes.   Note: AspectJ is only going to take Method.getDeclaringClass() into account. 
0, Line, //  Retain the following warning suppression for deprecation (even if Eclipse   states it is unnecessary) since withPotentialTimeout(FrameworkMethod,Object,Statement)   in BlockJUnit4ClassRunner has been deprecated. 
0, Line, //  Build methods 
0, Line, //  If we've gone as far as we can go and haven't found it... 
0, Line, //  3. Resolve with Accept-Encoding but no matching codings 
0, Line, //  Add final key and value to the Map. 
0, Line, //  getThrowawayClassLoader method is optional 
0, Line, //  Manually acknowledge message, if any. 
0, Line, //  First, check annotation on qualified element, if any 
0, Line, //  See SPR-13973 
0, Line, //  variable names refer to RFC 2616, section 2.2 
0, Line, //  Invoke method on actual Query object. 
0, Line, //  SPR-10330 
0, Line, //  SPR-12860 
0, Line, //  first and last need conversion 
0, Line, //  Note: the following 'multi-line' layout is for enhanced code readability.                                                                                               
0, Line, //  Send error while item cached 
0, Line, //  Run the actual test several times in order to increase the chance of threads   stepping on each others' toes by overwriting the same mutable state in the   TestContext. 
0, Line, //  Invalid Accept-Language header: treat as empty for matching purposes 
0, Line, //  test resolvable with default message, without and with args 
0, Line, //  with the persistence unit name as bean name (by convention). 
0, Line, //  Be sure to increment depth to avoid infinite recursion 
0, Line, //  Register non-transactional ConnectionProvider for Quartz. 
0, Line, //  This is declared private to avoid "public field" pollution 
0, Line, //  SPR-3671 
0, Line, //  Enforce presence of a session first to allow listeners to create the mutex attribute 
0, Line, //  Current parsing position 
0, Line, //  must override existing entry 
0, Line, //  One final test check coercion on the key for a map lookup 
0, Line, //  Check whether we had any attribute set 
0, Line, //  Do this first, it may add ResponseBody advice beans 
0, Line, //  SPR-16505 
0, Line, //  Eagerly initialize the default HttpInvokerRequestExecutor, if needed. 
0, Line, //  Initial cache attempt 
0, Line, //  exit type descriptor can be null if both components are literal expressions 
0, Line, //  Make sure to preserve first matching column for any given name,   as defined in ResultSet's type-level javadoc (lines 81 to 83). 
0, Line, //  Use hashCode of proxy. 
0, Line, //  - The offset of the RuntimeVisibleAnnotations attribute, or 0. 
0, Line, //  This is a Saturday 
0, Line, //  Path start definitely matches due to "**" part in pattern. 
0, Line, //  Need to recreate all Cache instances with new ClassLoader in store-by-value mode... 
0, Line, //  Initialize transient fields. 
0, Line, //  Request handling error (e.g. remote call), if we manage to set the status.. 
0, Line, //  Accessors for use in subclasses... 
0, Line, //  unsynchronized EntityManager demanded 
0, Line, //  Reflective lookup to find SessionImpl's connection() method on Hibernate 4.x/5.x 
0, Line, //  This also suppresses the 'id' attribute (which is okay for a <label/>) 
0, Line, //  abstract bean definition 
0, Line, //  3) Synthesize the AnnotationAttributes back into an annotation 
0, Line, //  Create a scoped proxy definition for the original bean name, 
0, Line, //  There is no pattern piece 
0, Line, //  Manually check that there is a warning from the 'declare warning' statement in   AnnotationAsyncExecutionAspect 
0, Line, //  6 bytes for name, flags and version, and 5 * 2 bytes for counts. 
0, Line, //  was **/*handle.vm 
0, Line, //  does not handle Z, B, C, S
0, Line, //  Comparison by date uses HttpHeaders to format the date in the error message. 
0, Line, //  Associate target with ThreadLocal. 
0, Line, //  Consider adding logic to determine the class of the typeArg, if possible.   For now, just fall back... 
0, Block, /*  numLocal =  */
0, Line, //  Always load via SpringTemplateLoader (without hot detection of template changes). 
0, Line, //  should match because exact pattern is there 
0, Line, //  MapAccessor required for this to work 
0, Line, //  Visit LocalVariableTable and LocalVariableTypeTable attributes. 
0, Line, //  to 0 because there is no 'this' in a clinit 
0, Line, //  array_value 
0, Line, //  - The offset of the RuntimeInvisibleParameterAnnotations attribute, or 0. 
0, Line, //  SPR-16506 
0, Line, //  Connection proxy closed, without ever having fetched a   physical JDBC Connection: throw corresponding SQLException. 
0, Line, //  One integration test to verify triggering of Forwarded header support.   More fine-grained tests in ForwardedHeaderTransformerTests. 
0, Line, //  assume a type 
0, Line, //  Find the pattern between padIdxStart & padIdxTmp in str between 
0, Line, //  No URL -> considering resource location as relative to the current file. 
0, Line, //  there is a current invocation 
0, Line, //  Test same words 
0, Line, //  ByteArrayOutputStream does not throw   any IOException 
0, Line, //  Look for direct name match. 
0, Line, //  Exclude pointcuts 
0, Line, //  ignore WebServiceException as probably setup issue with JAX-WS provider vs JAXB 
0, Line, //  set expected next trigger time 
0, Line, //  Look up single TransactionManagementConfigurer 
0, Line, //  Delegation to parent with explicit args. 
0, Line, //  No proxy here because the pointcut only applies to the concrete class, not the interface 
0, Line, //  Resource local transaction, need to acquire the EntityTransaction,   start a transaction now and enlist a synchronization for commit or rollback later. 
0, Line, // -------------------------------------------------------------------------   Typical methods for creating and populating external bean instances  ------------------------------------------------------------------------- 
0, Line, //  Kotlin API not available - no Kotlin support 
0, Line, //  Get Scheduler instance from SchedulerFactory. 
0, Line, //  Intentionally private 
0, Line, //  lbf.getBean("b"); 
0, Line, //  - The end offset of the StackMap[Table] attribute, or 0. 
0, Line, //  SPR-8561 
0, Line, //  Prefer regular method over bridge... 
0, Line, //  Expanding 
0, Block, /* 	 * SPR-2185 - Null model assertion causes backwards compatibility issue	  */
0, Line, //  and the connection is start()ed after the listener is registered... 
0, Line, //  Synthetic attributes always use 6 bytes. 
0, Line, //  Only URI variable (nothing to encode).. 
0, Line, //  Destroy all cached singletons in the context's BeanFactory. 
0, Line, //  Find dot before property name, ignoring dots in property keys. 
0, Line, //  Force disconnect (so we won't try to send close frame) 
0, Line, //  referenced as #a in the expression 
0, Line, //  about the count 
0, Line, //  Account for named parameters being used multiple times 
0, Line, //  Extract the source of the current task 
0, Line, //  Artemis-style broker convention for STOMP destinations 
0, Line, //  DatabaseMetaData.procedureColumnIn or possibly procedureColumnUnknown 
0, Line, //  Make framework objects available to handlers and view objects. 
0, Line, //  Check if all puts have been excluded by condition 
0, Line, //  The instruction after the JSR starts a new basic block. 
0, Line, //  Look for explicit serviceId-to-beanName mappings. 
0, Line, // consume POWER 
0, Line, //  Bind the connection holder to the thread. 
0, Line, //  From introduction interceptor, not target 
0, Line, //  SPR-17482 
0, Line, //  SPRING PATCH: prefer thread context ClassLoader for application classes 
0, Line, //  Just making sure somebody doesn't try to make SocketUtils abstract,   since that would be a breaking change due to the intentional public   constructor. 
0, Line, //  Not feasible to count bytes on potentially streaming response.   RFC 7302 allows HEAD without content-length. 
0, Line, //  calling stop() before the delay to preserve   invocation order in the 'stoppedBeans' list 
0, Line, //  target is a Payload2 instance 
0, Line, //  Remaining methods 
0, Line, // 		teslaContext.setRootObject(tesla); 
0, Line, //  Not advised; under One but not a setter 
0, Line, //  It has to be a map key in this case 
0, Line, //  Second try is the transaction attribute on the target class. 
0, Line, //  If the output frame stack is empty, pop from the input stack. 
0, Line, //  runtime subtype. 
0, Line, //  Only consider equal when proxies are identical. 
0, Line, //  Apply index to Iterator in case of a Set. 
0, Line, //  A compiler is created for each classloader, it manages a child class loader of that   classloader and the child is used to load the compiled expressions. 
0, Line, //  But can't mod first 
0, Line, //  Nothing of consequence, already forced disconnect 
0, Line, //  Attempted write as first activity on this field and property to drive testing 
0, Line, //  Try custom converter... 
0, Line, //  No-op 
0, Line, //  Expose alias for 4.1 compatibility 
0, Line, //  stack: right/left   neither were null so unbox and proceed with numeric comparison 
0, Line, //  subscribe + not a user destination 
0, Line, //  should not happen, since we check in canRead(Type) 
0, Line, //  print the url to the writer 
0, Line, //  Register the listener and fire event 
0, Line, //  Visit the MethodParameters attribute. 
0, Line, //  MethodInvoker chooses getX(int i) when passing Integer 
0, Line, //  reply (no listener for 4L) 
0, Line, //  Detect any custom bean name generation strategy supplied through the enclosing application context 
0, Line, //  Couldn't resolve anything proper - resort to UncategorizedSQLException. 
0, Line, //  Matches ValueConstants.DEFAULT_NONE (spring-web and spring-messaging) 
0, Line, //  TCP 
0, Line, //  So... we make a compromise: 
0, Line, //  Remove Level 2   Should not actually do anything since the cache was cleared in the 
0, Line, //  SPR-14988 
0, Line, //  Force a new clock (31 min later), don't use setter which would clean expired sessions 
0, Line, //  Add an introduction that implements only the methods on ScopedObject. 
0, Line, //  Tomcat's "war:file:...mywar.war*/WEB-INF/lib/myjar.jar!/myentry.txt" 
0, Line, //  Serialize all relevant superclass fields.   Superclass can't implement Serializable because it also serves as base class 
0, Line, // ---------------------------------------------------------------------------------------   JmsOperations execute methods  --------------------------------------------------------------------------------------- 
0, Line, //  Add resolved attribute and BindingResult at the end of the model 
0, Line, //  - The offset of the RuntimeVisibleTypeAnnotations attribute, or 0. 
0, Line, //  jackson-datatype-jsr310 not available 
0, Line, //  SPR-13658 
0, Line, //  because of the custom editor getValue() should return a String 
0, Line, //                  
0, Line, //  Additional, ASM specific constants used in abstract types below. 
0, Line, //  Can't compile this as we aren't going down the gettrue() branch in our evaluation 
0, Line, //  4xx 
0, Line, //  Proxy mode should create new scoped object on each method call 
0, Line, //  Here the declaring class is not public 
0, Line, //  Accessors for the resulting MessageHeaders 
0, Line, //  Since ControllerAdviceBean currently treats PriorityOrdered the same as Ordered,   OrderedControllerAdvice is sorted before PriorityOrderedControllerAdvice. 
0, Line, //  if the list is full of literals then it will be of the type unmodifiableClass   rather than HashMap (or similar) 
0, Line, //  Will do JNDI lookup to get home but won't call create 
0, Line, // ---------------------------------------------------------------------   Implementation of AnnotationConfigRegistry  --------------------------------------------------------------------- 
0, Line, //  Append 'label' at the end of the basic block list. 
0, Line, //  Handle prototypes correctly... 
0, JavaDoc, /*  * Factory that creates a JSR-310 {@link java.time.format.DateTimeFormatter}. * * <p>Formatters will be created using the defined {@link #setPattern pattern}, * {@link #setIso ISO}, and <code>xxxStyle</code> methods (considered in that order). * * @author Juergen Hoeller * @author Phillip Webb * @since 4.0 * @see #createDateTimeFormatter() * @see #createDateTimeFormatter(DateTimeFormatter) * @see #setPattern * @see #setIso * @see #setDateStyle * @see #setTimeStyle * @see #setDateTimeStyle * @see DateTimeFormatterFactoryBean  */
0, Block, /* 	 * Expect instantiation through a non-default constructor, just to be sure that Spring will fail if it tries to instantiate it,	 * and will subsequently delegate to the fallback bean instance producer. 	  */
0, Line, //  Classic option: protected ClassLoader.defineClass method 
0, Line, //  Note: exception param below isn't used 
0, Line, //  Process any @PropertySource annotations 
0, Line, //  java.corba module not available on JDK 9+ 
0, Line, //  Add user to local registry 
0, Block, /*  L3A  */
0, Line, //  SPR-17220 
0, Line, //  Note that we don't need to include isInterface in the hash computation, because it is   redundant with owner (we can't have the same owner with different isInterface values). 
0, Line, //  SPR-11044 
0, Line, //  if t.data were null, we'd know it wasn't the textual form, it was the symbol form 
0, Line, //  Servlet methods... 
0, Line, //  Use request scope to expose nestedPath to included pages too. 
0, Line, //  chain of statics ending with static method 
0, Line, //  No custom LoadTimeWeaver provided -> fall back to the default 
0, Line, //  updated after each stack_map_frame is read. 
0, Line, //  Nothing to do here. 
0, Line, //  More extensive "empty body" tests in RequestBody- and HttpEntityArgumentResolverTests 
0, Line, //  setMillis is deprecated in JDK 9 
0, Line, //  Static fields set by inner class DummyPersistenceProvider 
0, Line, //  The type conversion is possible 
0, Line, //  Please DO NOT simplify the following with AssertJ's fluent API.     We explicitly invoke methods directly on HttpHeaders here to check   the behavior of the entire contract. 
0, Line, //  Note: @Order is not inherited. 
0, Line, //  Create proxy here if we have a custom TargetSource.   Suppresses unnecessary default instantiation of the target bean:   The TargetSource will handle target instances in a custom fashion. 
0, Line, //  POST -> success 
0, Line, //  SPR-11043 
0, Line, //  will not fit into an int, needs L suffix 
0, Line, //  -----------------------------------------------------------------------------------------------   Normal instructions   ----------------------------------------------------------------------------------------------- 
0, Line, //  This test is considered successful if the following does not result in an exception. 
0, Line, //  If no server was provided then try to find one. This is useful in an environment   where there is already an MBeanServer loaded. 
0, Line, //  root context object 
0, JavaDoc, /* 	 * Sort the given source according to the given sort definition.	 * <p>Note: Contained objects have to provide the given property	 * in the form of a bean property, i.e. a getXXX method.	 * @param source input source	 * @param sortDefinition the parameters to sort by	 * @throws java.lang.IllegalArgumentException in case of a missing propertyName	  */
0, Line, //  to be ignored 
0, Line, //  All values should be booleans 
0, Line, //  Test when target implements the interface: should get interceptor by preference. 
0, Line, //  Request might have been reset (e.g. polling sessions do after writing) 
0, Line, //  = 1 invocation 
0, Line, //  1 call by default 
0, Line, //  resolve[Nested]Placeholders methods behave as usual regardless the value of 
0, Line, //  Clone the invocation to proceed three times   "The Moor's Last Sigh": this technology can cause premature aging 
0, Line, //  should still be the new bean with name Sally Greenwood 
0, Line, //  Ensure that the list is modifiable 
0, Line, //  Same lenient fallback checking as in Property... 
0, Line, //  Tell the internal bean factory to use the context's class loader etc. 
0, Line, //  gh-23576 
0, Line, //  missing method 
0, Line, //  Externally configured prefix via PathConfigurer.. 
0, Line, //  gh-23310 
0, Line, //  - The constant pool index contained in the Signature attribute, or 0. 
0, Line, //  the expressionString ran out before the suffix could entirely be found 
0, Line, //  if the list is full of literals then it will be of the type unmodifiableClass   rather than ArrayList 
0, Line, //  Static part of the pointcut is a lazy type. 
0, Line, //  Fetch UOWManager handle from JNDI, if necessary. 
0, Line, //  sourceLength excludes the first 6 bytes for access_flags, name_index and descriptor_index. 
0, Line, //  The index in the byte[] found at buffers.getLast() to be written next 
0, Line, //  Register bean processors that intercept bean creation. 
0, Line, //  A single default constructor -> clearly a standard JavaBeans arrangement. 
0, Line, //  Ensure bd is non-null due to potential concurrent modification   of the beanDefinitionMap. 
0, Line, //  Need a compound key 
0, Line, //  The instruction just after is a jump target (because ASM_GOTO_W is used in patterns   IFNOTxxx <L> ASM_GOTO_W <l> L:..., see MethodWriter), so we need to insert a frame 
0, Line, //  DecoratingNavigationHandler specified through constructor argument:   Call it with original NavigationHandler passed in. 
0, Line, //  Restore original default locale. 
0, Line, //  marshall into the existent document 
0, Line, //  Check for XML files and redirect them to the "standard" XmlBeanDefinitionReader 
0, Line, //  Read the requires_index, requires_flags and requires_version fields and visit them. 
0, Line, //  Absolute or relative?
0, Line, //  No URL -> resolve as resource path. 
0, Line, //  Uncomment the following if you encounter problems with matching against the file system   It shows file locations.  		String[] actualNames = new String[resources.length]; 
0, Line, //  cannot convert to an URI, considering the location relative   unless it is the well-known Spring prefix "classpath*:" 
0, Line, //  Probably a placeholder: let's ignore it for type matching purposes. 
0, Block, /* 	 * A new scope is entered when a function is invoked.	  */
0, Line, //  No working getDataSource method - cannot perform DataSource transaction check
0, Line, //  Retrieve object again, registering it for implicit session attribute updates.   As a bonus, we also allow for potential decoration at the getAttribute level. 
0, Line, //  Cancel all registered timers. 
0, Line, //  just leave this field and continue 
0, Line, //  was **/*.cache.html 
0, Line, //  The attribute_name_index, attribute_length and num_annotations fields use 8 bytes. 
0, Line, //  SPR-8917 
0, Line, //  Need to read super class to determine a match... 
0, Line, //  Basics 
0, Line, //  Async dispatch thread 
0, Line, //  This trigger has to be somewhere in between 2am and 3am 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods to compute offsets and to manage forward references   ----------------------------------------------------------------------------------------------- 
0, Line, //  Write as Mono if possible as an optimization hint to Reactor Netty   ChannelSendOperator not necessary for Mono 
0, Line, //  Validate nested type structure 
0, Line, //  check that further invocations simply participate 
0, Line, //  Overridden methods 
0, Line, //  needs string conversion 
0, Line, //  Compute arguments to the function 
0, Line, //  -----------------------------------------------------------------------------------------------   Other miscellaneous status fields   ----------------------------------------------------------------------------------------------- 
0, Line, //  false means prefix 
0, Line, //  Do not initialize FactoryBeans here: We need to leave all regular beans 
0, Line, //  15-04-2013 4:00 GMT+10 
0, Line, //  check message source availability 
0, Line, //  Ignore it: It wasn't a valid bean name and property,   although it did start with the required prefix. 
0, Line, //  Set computed HTTP 1.1 Cache-Control header 
0, Line, //  Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime   (e.g. through an @Bean method registered by ConfigurationClassPostProcessor) 
0, Line, //  Have empty string treated as null for elvis 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods to get the sort, dimension, size, and opcodes corresponding to a Type or descriptor.   ----------------------------------------------------------------------------------------------- 
0, Line, //  If there aren't already some parameters, we need a "?". 
0, Line, //  right is a byte 
0, Line, //  beforeCompletion not called before (probably because of JTA rollback).   Perform the cleanup here. 
0, Line, //  Generate default id... 
0, Line, //  ignore - VM is already shutting down 
0, Line, //  Proceed with database-specific checks 
0, Line, //  Calling foo(String,Integer) with (String,Integer) is exact match 
0, Line, //  SPR-9016 
0, Line, //  just handling JSR-310 specific date and time types 
0, Line, //  Build an independent copy of the arguments array. 
0, Line, //  Automatic vs explicit HTTP HEAD mapping 
0, Line, //  No response 
0, Line, //  now try to execute the tag outside a bindtag, but inside a messageTag 
0, Line, //  Printing content 
0, Line, //  Service invocations on ProxyConfig with the proxy config... 
0, Line, //  Update all affected session attributes. 
0, Line, // -------------------------------------------------------------------------   Specialized methods for fine-grained control over the bean lifecycle  ------------------------------------------------------------------------- 
0, Line, //  Verify contracts between utility methods: 
0, Line, //  the advice declared first has higher precedence 
0, Line, //  Abstract template methods 
0, Line, //  name could be a variable or a type... 
0, Line, //  SPR-16151: Smile data format uses null to separate documents 
0, Line, //  might be a different prefix 
0, Line, //  Remove resolved singleton classes from cache 
0, Line, //  Convert Collection elements. 
0, Line, //  TRADITIONAL BEAN DEFINITION READER METHODS 
0, Line, //  Build more efficiently if we can: we only need scheme, host, port for origin comparison 
0, Line, //  Hierarchy traversal... 
0, Line, //  Check cached editor for type, registered for superclass or interface. 
0, Line, //  Single-purpose return value types 
0, Line, //  SPR-12727 
0, Line, //  The thread-bound resource holder might not be available anymore,   since afterCompletion might get called from a different thread. 
0, Line, //  "read-only not supported" -> ignore, it's just a hint anyway 
0, Line, //  At this point, we need to refresh... 
0, Line, //  CaptureVariablePathElement 
0, Line, //  non-string keys and values work fine... until the security manager is introduced below 
0, Line, //  Else, either competing onDataAvailable (request vs container), or concurrent completion 
0, Line, //  var : POUND id=ID -> ^(VARIABLEREF[$id]); 
0, Line, //  BIPUSH or NEWARRAY 
0, Line, //  Cannot resolve relative persistence.xml file - let's assume it's not there. 
0, Line, //  getting the expression type to be what we want - either:   calling byteValue() on Integer.class   relying on registered type converters 
0, Line, //  Register the original bean definition as it will be referenced by the scoped proxy   and is relevant for tooling (validation, navigation). 
0, Line, //  SPR-11528 
0, Line, //  potentially not detected as a listener by getBeanNamesForType retrieval 
0, Line, //  Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those 
0, Line, //  SPR-10659: ensure header name is in the message   Unfortunately, we can't control formatting from JUnit or Hamcrest. 
0, Line, //  Currently HttpURLConnection does not support HTTP PATCH 
0, Line, //  Allow the assembler a chance to vote for bean inclusion. 
0, JavaDoc, /* 	 * Match a String against the given patterns, supporting the following simple	 * pattern styles: "xxx*", "*xxx", "*xxx*" and "xxx*yyy" matches (with an	 * arbitrary number of pattern parts), as well as direct equality.	 * @param patterns the patterns to match against	 * @param str the String to match	 * @return whether the String matches any of the given patterns	  */
0, Block, /* 	java.net.URI	javax.xml.datatype.XMLGregorianCalendarxs:anySimpleType	javax.xml.datatype.Duration	java.lang.Object	java.awt.Image	javax.activation.DataHandler	javax.xml.transform.Source	java.util.UUID		  */
0, Line, //  - The offset of the RuntimeInvisibleAnnotations attribute, or 0. 
0, Line, //  SPR-14240 
0, Line, //  Work out the target class: may be {@code null}.   The TransactionAttributeSource should be passed the target class   as well as the method, which may be from an interface. 
0, Line, //  Set necessary default properties here, as Quartz will not apply   its default configuration when explicitly given properties. 
0, Line, //  Explicit bean definition found, probably replacing an import.   Let's remove the old one and go with the new one. 
0, Line, //  Use public schema if no schema specified 
0, Line, //  Special handling of array property. 
0, Line, //  works fine 
0, Line, //  Following the JPA specification, a persistence provider can also 
0, Line, //  Is the constructor annotated with @Autowired?
0, Line, //  No @Autowired - implicit wiring 
0, Line, //  (it might still get re-merged later on in order to pick up metadata changes) 
0, Line, //  Should have only one more lookup 
0, Block, /*  checkClassVersion =  */
0, Line, //  (The number of bytes in the current buffer is in 'index'.) 
0, Line, //  - The offset of the Exceptions attribute, or 0. 
0, Line, //  After partContentReady, we can access the part content from MultipartHttpOutputMessage   and use it for writing to the actual request body 
0, Line, //  Java ClassFile versions (the minor version is stored in the 16 most significant bits, and the   major version in the 16 least significant bits). 
0, Line, //  character sequence ending comment or quote not found 
0, Line, //  Request 1 creates session 
0, Line, //  Previous task apparently executed too early...   Let's simply use the last calculated execution time then,   in order to prevent accidental re-fires in the same second. 
0, Line, // milliseconds 
0, Line, //  We got this far, exception was processed.. 
0, Line, //  Don't ignore: should fail 
0, Line, //  Enums can either be represented through a String or an enum index value:   leave enum type conversion up to the caller (e.g. a ConversionService)   but make sure that we return nothing other than a String or an Integer. 
0, Line, //  Ensure STOMP endpoints are registered 
0, Line, //  Create a pointcut for the anonymous pc and register it. 
0, Line, //  check position for OperatorOr 
0, Line, //  ... and then rotate it to the front of the months 
0, Line, //  we're relying on doOnDiscard in base class 
0, Line, //  In the first case we should not retry, in the second case we should see   if there is a better suited method. 
0, Line, //  Handle EntityManagerProxy interface. 
0, Line, // 		StaticApplicationContext ctx = new StaticApplicationContext();  		ctx.registerPrototype("testService1", TestService.class, new MutablePropertyValues());  		ctx.registerPrototype("testService2", ExtendedTestService.class, new MutablePropertyValues());  		MutablePropertyValues mpv = new MutablePropertyValues();  		mpv.addPropertyValue("serviceLocatorInterface", TestServiceLocator3.class);  		mpv.addPropertyValue("serviceMappings", "=testService1\n1=testService1\n2=testService2");  		ctx.registerSingleton("factory", ServiceLocatorFactoryBean.class, mpv);  		ctx.refresh(); 
0, Line, //  Should ignore our own broadcast to brokerChannel 
0, Line, //  (e.g. the default StaticMessageSource in a StaticApplicationContext). 
0, Line, //  Test method on inventor: throwException()   On 1 it will throw an IllegalArgumentException   On 2 it will throw a RuntimeException   On 3 it will exit normally   In each case it increments the Inventor field 'counter' when invoked 
0, Line, //  Similar to when writing regular Java code, it only knows about java.lang by default 
0, Line, //  Sort by previously determined @Order value, if applicable 
0, Line, //  New in Spring 2.5: resolve placeholders in alias target names and aliases as well. 
0, Line, //  SPR-12724 
0, Line, // ---------------------------------------------------------------------   Implementation of ListableBeanFactory interface  --------------------------------------------------------------------- 
0, Line, //  Read the BootstrapMethods attribute, if any (only get the offset of each method). 
0, Line, //  Case of a GOTO_W or JSR_W specified by the user (normally ClassReader when used to remove   ASM specific instructions). In this case we keep the original instruction. 
0, Line, //  Now been down both 
0, Line, //  Throw underlying exception 
0, Line, //  Passing (String) on call to (Integer[]) is conversion match (String to Integer) 
0, Line, //  We can skip creating a MethodInvocation: just invoke the target directly.   Note that the final invoker must be an InvokerInterceptor, so we know   it does nothing but a reflective operation on the target, and no hot   swapping or fancy proxying. 
0, Line, //  This would be unnecessary in the case of subtyping (e.g. method takes Number but Integer passed in)
0, Line, //  This is a CGLIB proxy, so we can proxy it to the target class 
0, Line, //  SPR-2728 
0, Line, //  Attribute value intentionally matches attribute name: 
0, Line, //  Load properties from file afterwards, to let those properties override. 
0, Line, //  Else we either got no holder or an empty thread-bound holder here. 
0, Line, //  Loop over all the basic blocks and visit the stack map frames that must be stored in the   StackMapTable attribute. Also replace unreachable code with NOP* ATHROW, and remove it from 
0, Line, //  No match. Don't create a custom target source. 
0, Line, // ---------------------------------------------------------------------   Implementation of TransactionExecution  --------------------------------------------------------------------- 
0, Line, //  Non-empty set of methods 
0, Line, //  To be on the safe side: explicitly delete the parts,   but only actual file parts (for Resin compatibility) 
0, Line, //  -----------------------------------------------------------------------------------------------   Bootstrap method entries management.   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-16773 
0, Line, //  Subclasses for specific, client-side, HTTP status codes 
0, Line, //  Fall back to generic setObject call with SQL type specified. 
0, Line, //  Optimization: build up a map of Class -> bridge methods in class   so that we can look up all the bridge methods in one pass for a class. 
0, Line, //  Ensure the body is drained, even if the StatusHandler didn't consume it,   but ignore exception, in case the handler did consume. 
0, Line, //  Check unadvised behaviour 
0, Line, //  All the methods in this class use the advised() template method   to obtain a transaction object, configured with the given PlatformTransactionManager   and transaction attribute source 
0, Line, //  Register Sessions and MessageConsumers. 
0, Line, //  Create empty list for easier checks when registering triggers. 
0, Line, //  see if Synchronoss NIO Multipart can read what we wrote 
0, Line, //  Read the  'provides_count' and 'provides' fields. 
0, Line, //  SPR-11657 
0, Line, //  For advice applicability check below (involving base packages, assignable types 
0, Line, //  Normal exit 
0, Line, //  Here we do not extract the labels corresponding to the attribute content. We assume they   are the same or a subset of those of the LocalVariableTable attribute. 
0, Line, //  projections and selections 
0, Line, //  Fall back to class name as cache key, for backwards compatibility with custom callers. 
0, Line, //  7.5.4.3 
0, Line, //  Read API methods to be implemented or template methods to override... 
0, Line, //  Only set parent context as parent ThemeSource if no parent ThemeSource   registered already. 
0, Line, //  Don't sweat on exceptions; assume value was modified 
0, Line, //  the suffix is missing 
0, Line, //  Will be set by advice during a method call 
0, Line, //  Try file system channel 
0, Line, //  We should suppress flushing for a read-only transaction. 
0, Line, //  A specific theme indicated, or do we need to fallback to the default?
0, Line, //  Original exception from former ConversionService call above... 
0, Line, //  (whose size depends on its path_length field). 
0, Line, //  Publish the context as a servlet context attribute. 
0, Line, //  SPR-12854 
0, Line, //  7.5.4.2 
0, Line, //  collaborator interface that makes it easy to test this aspect is   working as expected through mocking. 
0, Line, //  Search subdirectories recursively: ServletContext.getResourcePaths   only returns entries for one directory level. 
0, Line, //  Visit the frame and its content. 
0, Line, //  Spring MVC Test 
0, Line, //  Empty payload 
0, Line, //  Clearly a Topic: let's set the "pubSubDomain" flag accordingly. 
0, Line, //  Should Fail due to timeout. 
0, Line, //  If a dimension was specified, check it matches the initializer length 
0, Line, //  inadvertently mutate the state of the metadata passed to this method. 
0, Line, //  Move a basic block from the list of blocks to process to the list of processed blocks. 
0, Line, //  set the name value 
0, Line, //  Singleton or scoped - not a prototype. 
0, Line, //  Visit the non standard attributes. 
0, Line, //  no-op if already set 
0, Line, //  Methods designed for test introspection 
0, Block, /*  Do not delete! This subclassing is intentional.  */
0, Line, //  inherited class-level annotation; note: @Transactional is inherited 
0, Line, //  For opNe_SPR14863 
0, Line, //  SPR-14247 
0, Line, //  *sigh* complicated 
0, Line, //  ConversionService not tried before, probably custom editor found   but editor couldn't produce the required type... 
0, Line, //  Never format a code-as-default-message, even with alwaysUseMessageFormat=true 
0, Line, //  Values containing key/value delimiters (":", "=", " ") 
0, Line, //  Try with Locale.US 
0, Line, //  SPR-11521 
0, Line, //  no slots so presume those candidate vars were actually type names 
0, Line, //  Initialize lifecycle processor for this context. 
0, Line, //  ActiveMQ 
0, Line, //  Annotation-based resolvers 
0, Line, //  Manually validate cookie values since maxAge changes... 
0, Line, //  Choose a "straight to target" interceptor. (used for calls that are 
0, Line, //  If srcType is the NULL type, merge(srcType, dstType) = dstType, so there is no change. 
0, Line, //  Note that we need to construct a new proxy factory, 
0, Line, //  parse: @beanname @'bean.name' 
0, Line, //  probably from a placeholder 
0, Line, //  Redefined with public visibility. 
0, Line, //  Access double array 
0, Line, //  We're at the top of the nested object hierarchy,   so the present level is not a field but rather the top object.   The best we can do is register a global error here... 
0, Line, //  ArrayList containing List<Integer> to List<String> 
0, Line, //  Create and activate new context builder. 
0, Line, //  Clear remaining scheduled invokers, possibly left over as paused tasks 
0, Line, //  Check list 
0, Line, //  parameter 
0, Line, //  Reset the ConnectionHolder: It might remain bound to the thread. 
0, Line, //  trailing semicolon 
0, Line, //  Full check within synchronization, entering the BeanFactory interaction algorithm only once... 
0, Line, //  SPR-12984 
0, Line, //  "down" the annotation hierarchy. 
0, Line, //  Remove header if available 
0, Line, //  Clean up the EventLoopGroup if we created it in the constructor 
0, Line, //  7.5.4.1 
0, Line, //  Default case... 
0, Line, //  first child 
0, Line, //  Traverse the class hierarchy... 
0, Line, //  but this not, because it's testlast and not testla 
0, Line, //  If we get here, we need to create a MethodInvocation. 
0, Line, //  Already changed, don't need to change again 
0, Line, //  To be safe, check within full lock now... 
0, Line, //  Now test the pooled one 
0, Line, //  Expose the model object as request attributes. 
0, Line, //  Else fetch actual Connection and check there,   because we didn't have a default specified. 
0, Line, //  body is drained in other cases 
0, Line, //  Indicates whether this is a procedure or a function 
0, Line, //  Going to perform a refresh check - update the timestamp. 
0, Line, //  Some parsers raise a parse exception 
0, Line, //  type not public but method is 
0, Line, //  Check for Unix-style path 
0, Line, //  SPR-9406 
0, Line, //  Return a transactional Connection, if any. 
0, Line, // ---------------------------------------------------------------------   Convenience methods for toString output  --------------------------------------------------------------------- 
0, Line, //  pass primitive to reference type ctor 
0, Line, //  Works with a type pattern 
0, Line, //  exclude unlisted classes 
0, Line, //  Last-modified timestamp of file will just be read if caching with timeout. 
0, Line, //  Per target or per this. 
0, Line, //  Late enough for a re-cache attempt 
0, Line, //  Participate in LiveBeansView MBean, if active. 
0, Line, //  fall through 
0, Line, //  As per SockJS protocol content-type can be ignored (it's always json) 
0, Line, //  Selection isn't compilable. 
0, Line, //  With developer builds we get: <MyBean><string>foo</string></MyBean>   But on CI server we get: <MyBean xmlns=""><string>foo</string></MyBean> 
0, Line, //  root or empty path 
0, Line, // ---------------------------------------------------------------------------------------   Convenience methods for sending messages to and receiving the reply from a destination  --------------------------------------------------------------------------------------- 
0, Line, //  OPTIONS 
0, Line, //  We want to see everything, and allow configuration of log levels dynamically. 
0, Line, //  We need a transactional target now, according to the JPA spec.   Otherwise, the operation would get accepted but remain unflushed... 
0, Line, //  Possibly a lambda-defined listener which we could not resolve the generic event type for   -> let's suppress the exception and just log a debug message. 
0, Line, //  Set the content type. 
0, Line, //  Try with Locale.UK 
0, Line, //  Clean duplicate slashes or pathWithinPattern won't match lookupPath 
0, Line, //  test that ApplicationContextInitializers can access ServletContext properties   via the environment (SPR-8991) 
0, Line, //  The exception will be ignored by the class loader, anyway... 
0, Line, //  An exception handler to register... 
0, Line, //  TcpConnection implementation 
0, Line, //  uninitialized to let post-processors apply to them! 
0, Line, //  call to getClassFilter forces resolution... 
0, Line, //  Check whether message contains outer bean name. 
0, Line, //  Default handling of monetary values 
0, Line, //  Invocation on Session interface coming in... 
0, Line, //  so non-qualified references 'hasRole()' 'hasIpAddress()' are invoked against it); 
0, Line, //  Ideally we would expect Boolean.class instead of Object.class, but this 
0, Line, //  nothing to enhance -> return immediately 
0, Line, //  a null value will mean either the value was null or the variable was not found 
0, Line, //  advice1 was declared before advice2   so advice1 has higher precedence 
0, Line, //  If a @Configuration class gets proxied, always proxy the target class 
0, Line, //  Empty file or directory -> not considered readable... 
0, Line, //  gh-23077 
0, Line, //  Fields must be non-null to start with 
0, Line, //  The user may supply null - and that will be ok unless a primitive is expected 
0, Line, //  Check correct Session passed into SessionAwareMessageListener. 
0, Line, //  Fallback: generate a unique default bean name. 
0, Line, //  SPR-14991 
0, Line, //  Test all basic section types 
0, Line, //  Modifiable attributes 
0, Line, //  Reactor requires at least 50 to flush, Tomcat/Undertow 8, Jetty 1 
0, Line, //  make sure the marshalling does not result in errors 
0, Line, //  expression = (SpelExpression) parser.parseExpression("foo['NEW']");   o = expression.getValue(new MapHolder());   assertEquals("VALUE",o); 
0, Line, //  exponent digits 
0, Line, //  the chance of having the same reference (hashCode) twice is negligible. 
0, Line, //  We are only validating the request. The response is mocked out.   person.getName().equals("Ludwig van Beethoven") 
0, Line, //  If the type is not public then when generateCode produces a checkcast to it   then an IllegalAccessError will occur.   If resorting to Object isn't sufficient, the hierarchy could be traversed for   the first public type. 
0, Line, //  Allows post-processing of the bean factory in context subclasses. 
0, Line, //  -----------------------------------------------------------------------------------------------   Special instructions   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-12108 
0, Line, //  a bit BS, but we need to test them, as long as they don't throw exceptions 
0, Line, //  Assume key not found for some other reason   -> do NOT throw the exception to allow for checking parent message source. 
0, Line, //  Check whether the target bean is defined as prototype. 
0, Line, //  a file pattern 
0, Line, //  SPR-14992 
0, Line, //  drift over white space 
0, Line, //  Visit the instruction at this bytecode offset. 
0, Line, // ---------------------------------------------------------------------   Implementation of the Errors interface  --------------------------------------------------------------------- 
0, Line, //  Use bind error processor to create FieldErrors. 
0, Line, //  first set up the pagecontext and the bean 
0, Line, //  Try first with identity checks for greater performance. 
0, Line, //  Need to search for EntityManagerFactory beans. 
0, Line, //  For simple Class references, build the wrapper right away -   no expensive resolution necessary, so not worth caching... 
0, Block, /* 			* Need to use straight JDBC code because we need to make sure that the insert and select			* are performed on the same connection (otherwise we can't be sure that @@identity			* returns the correct value)			 */
0, Line, //  Save previous status values, for re-exposure at the end of this tag. 
0, Line, //  Handle getTargetSession method: return underlying Session. 
0, Line, //  We don't care about the object 
0, Block, /* 				 * We only expect to ever be asked to instantiate this class, so we just cut corners here.				 * A real-world implementation would obviously be different.				  */
0, Line, //  We couldn't identify it more precisely - let's hand it over to the SQLState fallback translator. 
0, Line, //  We know commentPrefixes is an empty array, so make sure commentPrefix   is set to that as well in order to honor the alias contract. 
0, Line, //  - The offset of the EnclosingMethod attribute, or 0. 
0, Line, //  Hit the method in the per clause to instantiate the aspect 
0, Line, //  In between are the constructor args 
0, Line, //  age == 2 
0, Line, //  SPR-16516 
0, Line, //  Validate the class, writing log messages as necessary. 
0, Line, //  Create 1 more which forces a time-based check (clock moved forward) 
0, Line, //  unaryExpression: (PLUS^ | MINUS^ | BANG^ | INC^ | DEC^) unaryExpression | primaryExpression ; 
0, Line, //  paths.clear(); 
0, Line, //  Must fail as annotation on interfaces should not be considered a match 
0, Line, //  Put the field_info attributes. 
0, Line, //  Be defensive: Some servlet containers provide us with invalid classes,   no matter what @HandlesTypes says... 
0, Line, //  test exact matching 
0, Line, //  are guaranteed to bind in exactly the same way. 
0, Line, //  Map array 
0, Line, //  Do nothing - a Spring-managed DataSource has its own lifecycle. 
0, Line, // ---------------------------------------------------------------------   Implementation of MessageSource interface  --------------------------------------------------------------------- 
0, Line, //  Add parameters to output content type 
0, Line, //  Package up the remaining arguments into the array 
0, Line, //  Transparently suppress a ResourceHolder that was marked as void... 
0, Line, //  Invoke create() method on EJB home object. 
0, Line, //  Skip the access_flags, this_class, super_class, and interfaces_count fields (using 2 bytes   each), as well as the interfaces array field (2 bytes per interface). 
0, Line, //  Check if need to box it for the method reference?
0, Line, //  Did the handler return a view to render?
0, Line, //  If we're allowed, we can create the factory bean and call getObjectType() early 
0, Line, //  TransactionalClass is NOT annotated or meta-annotated with @Component 
0, Line, //  is the same as that of referring to a FactoryBean within XML. See SPR-6602. 
0, Line, //  Matches the getAge() method in any class 
0, Line, //  Construct using org.springframework.protobuf.SecondMsg.newBuilder() 
0, Line, //  Create the request after changing the default locale. 
0, Line, //  T <= ? extends T 
0, Line, //  Replace volatile members 
0, Line, //  If only JTA TransactionManager specified, create UserTransaction handle for it. 
0, Line, //  Passing (Integer, Sub, String[]) on call to (String, Super, String[]) is exact match 
0, Line, //  Add it conditionally. 
0, Line, //  Cannot modify startup-time collection elements anymore (for stable iteration) 
0, Line, //  Can proceed with standard RMI lookup API... 
0, Line, // -------------------------------------------------------------------------   Methods handling compilation issues  ------------------------------------------------------------------------- 
0, Line, //  '**/**' situation, so skip one 
0, Line, //  > 4 sec wait in total 
0, Line, //  If it's a FactoryBean, we want to look at what it creates, not at the factory class. 
0, Line, //  instruction as a successor of the current block, and to start a new basic block. 
0, Line, //  Exception (if any) is already handled.. 
0, Line, //  Use the specified ClassLoader to resolve local proxy classes. 
0, Line, //  Other method_info attributes: 
0, Line, //  check not called for other types 
0, Line, //  evaluate("aVarargsMethod(new String[]{'a','b','c'})", 3, Integer.class); 
0, Line, //  but all params are available 
0, Line, //  Check superclass handles duplicate init 
0, Line, //  Now, register all regular BeanPostProcessors. 
0, Line, //  Check raw bean class, e.g. in case of a proxy. 
0, Line, //  The name of the parameter, if any 
0, Line, //  skip to flights 
0, Line, //  hierarchy map. 
0, Line, //  Check declared factory method return type on bean class. 
0, Line, //  relationalExpression : sumExpression (relationalOperator^ sumExpression)?; 
0, Line, //  instance @Bean methods within @Configuration classes must be overridable to accommodate CGLIB 
0, Line, //  should now be able to access data via the lazy proxy 
0, Line, //  Remove empty entries from the hierarchy map. 
0, Line, //  Do not close channel from here, rather wait for the current read callback   and then complete after releasing the DataBuffer. 
0, Line, //  SPR-2108 
0, Line, //  We'll search superclasses and implemented interfaces explicitly,   although it shouldn't be necessary - however, see SPR-10125. 
0, Line, //  We need AUTO or COMMIT for a non-read-only transaction. 
0, Line, //  Prepare broadcast message from remote server 
0, Line, //  6 attribute header bytes, and 2 bytes for main_class_index. 
0, Line, //  Standard NavigationHandler specified through constructor argument:   Call it through standard API, without original NavigationHandler passed in.   The called handler will not be able to redirect to the original handler. 
0, Line, //  SPRING PATCH BEGIN 
0, Line, // -------------------------------------------------------------------------   Convenience query methods for iteration and bulk updates/deletes  ------------------------------------------------------------------------- 
0, Line, //  This next code is only generated because of the registered editor, using the   registered type of the editor as guess for the content type of the collection. 
0, Line, //  Simple filter 
0, Line, //  @CacheValue 
0, Line, //  Let JPA perform its standard PersistenceProvider autodetection. 
0, Line, //  SPR-16160 
0, Line, //  Extends RemoteException 
0, Line, //  OpLT   OpLE   false - something is not < or <= null 
0, Line, //  SPR-10806 
0, Line, //  if we are this far this shouldn't happen, but...
0, Line, //  float 
0, Line, //  stackless exception 
0, Line, //  Safari needs at least 1024 bytes to parse the website.   https://code.google.com/p/browsersec/wiki/Part2#Survey_of_content_sniffing_behaviors 
0, Line, //  Must fail as annotation isn't inherited 
0, Line, //  cannot do what they're attempting. 
0, Line, //  this is a bit BS, but we need to test it 
0, Line, //  Use hashCode of Session proxy. 
0, JavaDoc, /* 	 * Sort the given List according to the given sort definition.	 * <p>Note: Contained objects have to provide the given property	 * in the form of a bean property, i.e. a getXXX method.	 * @param source the input List	 * @param sortDefinition the parameters to sort by	 * @throws java.lang.IllegalArgumentException in case of a missing propertyName	  */
0, Line, //  A context instance was injected at construction time -> use it 
0, Block, /*  Using fully qualified class names as default bean names by default.  */
0, Line, //  Invalid Accept-Language format -> just store plain header 
0, Line, //  Copy and reset the nextAttribute field so that it can also be used in ClassWriter. 
0, Line, //  Declared locally?
0, Line, //  It's a distinguished null value. Let's wrap it in a TypedStringValue   object in order to preserve the source location. 
0, Line, //  looks like 'T]' (T is map key) 
0, Line, //  baseline with standard write method 
0, Line, //  SPR-16296 
0, Line, //  SPR-9531 
0, Line, //  SchedulingTaskExecutor implementation 
0, Line, //  Use the CCI execute method with output record as parameter. 
0, Line, //  map  = LCURLY (key ':' value (COMMA key ':' value)*) RCURLY 
0, Line, //  no box needed 
0, Line, //  OK, so we need an EntityManagerFactory... 
0, Line, //  Reactor 
0, Line, //  AnnotationTypeMappings does not implement Iterable so we don't create   too many garbage Iterators
0, Line, //  Bind request parameters onto target object. 
0, Line, //  Execute receive outside of transaction. 
0, Line, //  Unregister the connector server if startup failed. 
0, Line, //  Make resolvable dependencies (e.g. ResourceLoader) available here as well... 
0, Line, //  Handler method detection 
0, Block, /*  all tests are in superclass  */
0, Line, //  Write tag, and reserve 2 bytes for num_values. Here we take advantage of the fact that the   end of an element_value of array type is similar to the end of an 'annotation' structure: an   unsigned short num_values followed by num_values element_value, versus an unsigned short   num_element_value_pairs, followed by num_element_value_pairs { element_name_index,   element_value } tuples. This allows us to use an AnnotationWriter with unnamed values to   visit the array elements. Its num_element_value_pairs will correspond to the number of array 
0, Line, //  Updates the maximum size reached by the output stack, if needed (note that this size is 
0, Line, //  end of JDBCException subclass handling 
0, Line, //  It shouldn't be corrupted, it should still work 
0, Line, //  The JDK does not contain a default editor for any of these target types. 
0, Line, //  SPR-14372: make it case-sensitive 
0, Line, //  No PropertyDescriptor found 
0, Line, //  SPR-17363 
0, Line, //  SPR-3302 
0, Line, //  Commit 
0, Line, //  -----------------------------------------------------------------------------------------------   Static methods to get abstract types from other type formats   ----------------------------------------------------------------------------------------------- 
0, Line, //  So well-known it doesn't even need an adapter. 
0, Line, //  initialCapacity is 5/4 (rounded up, to nearest power of 2) 
0, Line, //  request.setRequestURI("http://localhost:7070/example/adminhandle.vm"); 
0, Line, //  Expose interface methods (not proxy-declared overrides) for proper vararg introspection 
0, Line, //  STOMP header names 
0, Line, //  Regular EntityManager operations. 
0, Line, //  No context is the same providing an empty context path 
0, Line, //  Use the source value as-is, as it matches the target type. 
0, Line, //  Update the frame owner so that a correct frame offset is computed in Frame.accept(). 
0, Line, //  Reads the 'opens_count' and 'opens' fields. 
0, Line, //  Destination argument being null is ok for a producer 
0, Block, /*  all tests are in the superclass  */
0, Line, //  Only post-process and store if not put there already during getObject() call above   (e.g. because of circular reference processing triggered by custom getBean calls) 
0, Line, //  List of columns objects to be used in this context 
0, Line, //  Will fail, after invoking Nop1 
0, Line, //  Clear ThreadLocal, just in case. 
0, Line, //  mediaType2.getSubtype().equals(mediaType2.getSubtype()) 
0, Line, //  Try Hibernate 5.1 
0, Line, //  changing target 
0, Line, //  Declared on a superclass?
0, Line, //  AbstractDataBufferAllocatingTests.leakDetector will verify the buffer's release 
0, Line, //  The beans property may be null, for example if we are relying solely on autodetection. 
0, Line, //  Case of an element_value with a const_value_index, class_info_index or array_index field.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1. 
0, Line, // ---------------------------------------------------------------------   Implementation of HierarchicalBeanFactory interface  --------------------------------------------------------------------- 
0, Line, //  Second one is bogus 
0, Line, //  p1 should 'win' as it was registered last 
0, Line, //  now try to execute the tag outside a bindtag 
0, Line, //  Remove this unreachable basic block from the exception handler ranges. 
0, Line, //  We need an exact type match for generics 
0, Line, //  See https://github.com/oracle/graal/blob/master/sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/ImageInfo.java 
0, Line, //  Try Hibernate 5.2 
0, Line, //  If no value yet, try to get it as a name_value=xyz parameter 
0, Line, //  Use rejected value in case of error, current field value otherwise. 
0, Line, //  Subscriber methods (we're the subscriber to the write function).. 
0, Line, //  Clear all pending inserts/updates/deletes in the EntityManager.   Necessary for pre-bound EntityManagers, to avoid inconsistent state. 
0, Line, // 	| NULL_LITERAL 
0, Line, //  SPR-2368 
0, Line, //  Note that we need an ApplicationContext, not just a BeanFactory,   for post-processing and hence auto-proxying to work. 
0, Line, //  The TransactionInfo.hasTransaction() method will return false. We created it only   to preserve the integrity of the ThreadLocal stack maintained in this class. 
0, Line, //  Use properties editor to tokenize the hold string. 
0, Line, //  SPR-13406 
0, Line, //  More than one value found... no clear single value. 
0, Line, //  second: commit attempt 
0, Line, // -------------------------------------------------------------------------   Methods dealing with a plain java.sql.Connection  ------------------------------------------------------------------------- 
0, Line, //  Exceed send time.. 
0, Line, //  No need to executor.waitForCompletion() as future.get() will have the same effect 
0, Line, //  regular constructor invocation 
0, Line, //  Call again, should be cached 
0, Line, //  direct access to annotation value: 
0, Line, //  If we get here, just pass the invocation on. 
0, Line, //  Obtain EntityManagerFactory from JNDI?
0, Line, //  Still doesn't match superclass setter 
0, Block, /*  Upstream write source subscription  */
0, Line, // ---------------------------------------------------------------------------------------   Convenience methods for receiving messages  --------------------------------------------------------------------------------------- 
0, Line, //  Search for ScheduledExecutorService bean next... 
0, Line, //  Container annotation present?
0, Line, //  Detect default XML configuration files: 
0, Line, //  singleton bean, so name should be modified even after lookup 
0, Line, //  deprecated fields 
0, Line, //  Parse the type_index field. 
0, Line, //  SPR-11030 
0, Line, //  SPR-10930 
0, Line, //  But it doesn't match everything 
0, Line, //      Ensure that this in-memory database is only used by this class:   
0, Line, //  Only consider argument type if it is a simple value... 
0, Line, //  METHODS FOR CONSUMPTION IN A GROOVY CLOSURE 
0, Line, //  Now the type reference isn't on the stack, and needs loading 
0, Line, //  Not supported 
0, Line, //  SPR-16169 
0, Line, //  should not throw NSBDE 
0, Line, //  check ServletContext 
0, Line, //  Resource does not exist. 
0, Line, // 	expression      : logicalOrExpression        ( (ASSIGN^ logicalOrExpression)  	    | (DEFAULT^ logicalOrExpression)  	    | (QMARK^ expression COLON! expression) 
0, Line, //  warmup 
0, Line, //  Load custom SQL error codes, overriding defaults. 
0, Line, //  to be published once the multicaster is available... 
0, Line, //  "[Ljava.lang.String;" style arrays 
0, Line, //  exception by default 
0, Line, //  TypeReference type which can't be used in Code attribute, or which is unknown. 
0, Line, // ---------------------------------------------------------------------   Inner classes for internal use  --------------------------------------------------------------------- 
0, Line, //  Disallowing access to System#getenv means that our   ReadOnlySystemAttributesMap will come into play. 
0, Line, //  Concurrent handling started during a forward 
0, Line, //  Shouldn't fail; 
0, Line, //  (2) Or register an accessor that can understand 'p' and return the right person 
0, Line, //  Looking for a fallback... 
0, Line, //  or simply...   context.setMethodResolvers(new ArrayList<MethodResolver>()); 
0, Line, //  'local' was added first so has precedence 
0, Line, //  Return the final age produced by 3 birthdays 
0, Line, //  Copy autowire settings from original bean definition. 
0, Line, //  any 'default' ones 
0, Line, //  Else attempt to detect defaults... 
0, Line, //  Check if array already built for final argument 
0, Line, //  @Disabled("ControllerClassNameHandlerMapping") 
0, Line, //  important to make sure we don't reprocess an already processed block. 
0, Line, //  should have been set explicitly 
0, Line, //  Continue with default processing of the original exception... 
0, Line, //  Count of many times as the expression been interpreted - can trigger compilation 
0, Line, //  SELECTION 
0, Line, //  Just log it, to keep a transaction-related exception. 
0, Line, //  Explicit parse events 
0, Line, //  Now let's try it with the special target 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods to get class names, internal names or descriptors.   ----------------------------------------------------------------------------------------------- 
0, Line, //  Remove the connection holder from the thread, if exposed. 
0, Line, // ---------------------------------------------------------------------   Template methods to be implemented in subclasses  --------------------------------------------------------------------- 
0, Line, //  If this is a bridge and we know the target was called from invokespecial,   then we need to invoke_virtual w/ the bridge target instead of doing   a super, because super may itself be using super, which would bypass   any proxies on the target. 
0, Line, //  Get directly 
0, Line, //  SEND, MESSAGE, ERROR 
0, Line, //  If nothing else left, at least explicitly point to current path. 
0, Line, //  invoke method on target connection. 
0, Line, //  Generate a StackMap attribute entry, which are always uncompressed. 
0, Line, // ---------------------------------------------------------------------   Implementation of PropertyEditorRegistry/TypeConverter interface  --------------------------------------------------------------------- 
0, Line, //  Test ctor on inventor:   On 1 it will throw an IllegalArgumentException   On 2 it will throw a RuntimeException   On 3 it will exit normally   In each case it increments the Tester field 'counter' when invoked 
0, Line, //  ensure a default servlet environment exists 
0, Line, //  Bind RMI object to registry. 
0, Line, //  Use the standard evaluation context 
0, Line, //  ---------------------------------------------------------------------   Implementation of AsyncListener methods   --------------------------------------------------------------------- 
0, Line, //  Register statically specified listeners first. 
0, Line, //  Demand may have arrived since readAndPublish returned 
0, Line, //  We have a fallback text to consider. 
0, Line, //  Nothing to do: XHR transports check if session is disconnected. 
0, Line, //  Change IFEQ ... JSR to ASM_IFEQ ... ASM_JSR. 
0, Line, //  Field handling 
0, Line, //  Do not accept a null value for a FactoryBean that's not fully   initialized yet: Many FactoryBeans just return null then. 
0, Line, //  JDK dynamic proxy 
0, Line, //  Not found -> check parent, if any. 
0, Line, //  But it works if we specify the type properly 
0, Line, // strange looking interfaces are just to set up certain test conditions... 
0, Line, //  Check token type. 
0, Line, //  qualifier added, and non-default value specified 
0, Line, //  Not found in parent either. 
0, Line, //  Create a factory for independent aspect instances. 
0, Line, //  SPR-13185 
0, Line, //  isCancelled may still return false, if mono completed before the cancel 
0, Line, //  Hmm, we didn't get a clear indication... Let's assume XSD,   since apparently no DTD declaration has been found up until   detection stopped (before finding the document's root tag). 
0, Line, //  It's the transactional Connection: Don't close it. 
0, Line, //  Ignore: simply not exposing an invalid content type in HttpHeaders... 
0, Line, //  root is a map instance 
0, Line, //  "Microsoft SQL Server JDBC Driver 3.0" versus "Microsoft JDBC Driver 4.0 for SQL Server" 
0, Line, //  SPR-14383 
0, Line, //  Charset (SPR-8676) 
0, Line, //  No getObject() method -> shouldn't happen, but as long as nobody is trying to call it...
0, Line, //  This is proxied 
0, Line, //  Register the Hibernate Session's JDBC Connection for the DataSource, if set. 
0, Line, //  We're in resource-ref (prefixing with "java:comp/env") mode. Let's not bother   with property names with a colon it since they're probably just containing a   default value clause, very unlikely to match including the colon part even in   a textual property source, and effectively never meant to match that way in   JNDI where a colon indicates a separator between JNDI scheme and actual name. 
0, Line, //  No context instance was injected at construction time -> see if one   has been registered in the servlet context. If one exists, it is assumed   that the parent context (if any) has already been set and that the   user has performed any initialization such as setting the context id 
0, Line, //  CompoundExpression 
0, Line, //  New script content: Let's check whether it evaluates to a Class. 
0, Line, //  no MessageSelector...   an exception is thrown, so the rollback logic is being applied here... 
0, Line, //  Items specified, but might still be empty...
0, Line, //  Ignore - can't compare qualifiers for a manually registered singleton object 
0, Line, //  Must not be able to set empty enter message 
0, Line, //  SPR-8462 
0, Line, //  node : ((DOT dottedNode) | (SAFE_NAVI dottedNode) | nonDottedNode)+; 
0, Line, //  LongLiteral 
0, Line, //  unique candidate, cache the full type declaration context of the target factory method. 
0, Line, //  Has nested transaction 
0, Line, //  Class or MetadataReader 
0, Line, //  can only be caused by doCommit 
0, Line, //  Store the abstract type. 
0, Line, //  Attempt to predict the bean type 
0, Line, //  SPR-11649 
0, Line, //  We're looking for a regular reference but we're a factory bean that has   a decorated bean definition. The target bean should be the same type 
0, Line, //  If in memory, it's available. 
0, Line, //  no code valid, but default given 
0, Line, //  Create a fresh workbook instance for this render step. 
0, Line, //  As we're on the same connection, the 2nd request proves server response handling   did complete after the 1st request.. 
0, Line, //  those of the stack operands in the input frame of dstFrame. 
0, Line, //  compound expression 
0, Line, //  SPR-11648 
0, Line, //          
0, Line, //  We may get here (as with Hibernate). Either behaviour is valid:   throw exception on first access or on getReference itself. 
0, Line, //  evaluate data sources 
0, JavaDoc, /* 	 * Removes all headers provided via array of 'headerPatterns'. As the name suggests	 * the array may contain simple matching patterns for header names. Supported pattern	 * styles are: "xxx*", "*xxx", "*xxx*" and "xxx*yyy".	  */
0, Line, //  Bean Validation 1.1 releaseInstance method 
0, Line, //  Inequality amongst standard annotations 
0, Line, //  Add an edge from this block to the successor of the caller basic block, if this block is   the end of a subroutine and if this block and subroutineCaller do not belong to the same 
0, Line, //  -----------------------------------------------------------------------------------------------   Fields   ----------------------------------------------------------------------------------------------- 
0, Line, //  SPR-16650 
0, Line, //  Assert if it exists it is a segment 
0, Line, //  An annotation not present on the classpath is being ignored   by the JVM's class loading -> ignore here as well. 
0, Block, /*  intentionally no beans defined  */
0, Line, //  @since 4.1.2 
0, Line, //  BytesMessage contents must be unwrapped... 
0, Line, //  Leniently accept older cookies separated by a space... 
0, Line, //  apply indexes and map keys 
0, Line, //  Expose model to JSP tags (as request attributes). 
0, Line, //  3 attempts max 
0, Line, //  Subpackages are matched by ** 
0, Line, // -------------------------------------------------------------------------   Methods dealing with static SQL (java.sql.Statement)  ------------------------------------------------------------------------- 
0, Line, //  right is a long 
0, Line, //  simple implementation only support max value 
0, Line, //  the return value is the new value, not the original value 
0, Line, //  --- constructor 
0, Line, //  wibble2 should be null (cannot be initialized dynamically), there is no setter 
0, Line, //  Ignore AOP infrastructure such as scoped proxies. 
0, Line, //  All entries are serializable -> serialize the regular MessageHeaders instance 
0, Line, //  a default ViewResolver if no other resolvers are found. 
0, Line, //  No compatible reader but body may be empty.. 
0, JavaDoc, /* 		 * The most common ISO Time Format {@code HH:mm:ss.SSSXXX},		 * e.g. "01:30:00.000-05:00".		  */
0, Line, //  Read the default label and the number of table entries. 
0, Line, //  Try to parse static field into class and field. 
0, Line, //  assert that all levels have been detected 
0, Line, //  SPR-12977 
0, Line, //  SPR-16652 
0, Line, //  Access byte array 
0, Line, //  No custom editor but custom ConversionService specified? 
0, Line, //  Initialize any placeholder property sources in the context environment. 
0, Line, //  https://github.com/sockjs/sockjs-client/issues/130   sockJsSession.setAcceptedProtocol(protocol); 
0, Line, //  strIdxStart & strIdxEnd 
0, Line, //  call to getClassFilter forces resolution 
0, Line, //  Check that references survived prototype creation 
0, Line, //  last comment not closed properly 
0, Line, // ---------------------------------------------------------------------   HttpServletResponse properties  --------------------------------------------------------------------- 
0, Line, //  SPR-16651 
0, Line, //  Add attributes that may have been removed 
0, Line, //  oh well, at least we tried... 
0, Line, //  Note: when a new entry is added it is considered the MRU entry and inserted at the tail. 
0, Line, //  If the exception is handled, return a cache miss 
0, Line, //  request.setRequestURI("https://example.org/page.cache.html"); 
0, Line, //  should not be a proxy
0, Line, //  ----------------------------------------------------------------------------------------------- 
0, Line, //  CGLIB subclass methods hide generic parameters; look at the original user class. 
0, Line, //  map table. 
0, Line, //  Fallback for URLs that are not valid URIs (should hardly ever happen). 
0, Line, //  Local match found for explicitly specified local bean name. 
0, Line, //  use as a unary operator 
0, Line, //  SPR-12975 
0, Line, //  Verify that the supplied argument is assignable to the method parameter. 
0, Line, //  SPR-16521 
0, Line, //  EhCache 2.5+: Reusing an existing CacheManager of the same name.   Basically the same code as in CacheManager.getInstance(String),   just storing whether we're dealing with an existing instance. 
0, Line, //  this is fun... 
0, Line, //  Copy the constant pool binary content. 
0, Line, //  Unrelated, not to be considered as a factory method 
0, Line, //  If we get here, we need to insist on precise argument matching... 
0, Line, //  Check for existing error attribute first 
0, Line, //  Read the table labels. 
0, Line, //  Use Jackson builder in order to have JSR-310 and Joda-Time modules registered automatically 
0, Line, //  If no target bean name specified, use filter name. 
0, Line, //  Convert arguments if necessary and remap them for varargs if required 
0, Line, //  Ignore LOOKUP_PATH attribute, use our own "fixed" UrlPathHelper with decoding off 
0, Line, //  At this point, we need a collection copy in any case, even if just for finding out about element copies... 
0, Line, //  do not lose precision - use BigDecimal's own conversion 
0, Line, //  unary minus 
0, Line, //  Non-zero lower bound implies a core-max size range... 
0, Line, //  failed prior to fix for SPR-9414 
0, Line, //  If dstType is a reference type of any array dimension. 
0, Line, //  List<CharSequence> is not assignable from List<String> 
0, Line, //  This method optimizes avoiding unnecessary creation of ClassReaders   as well as visiting over those readers. 
0, Line, //  These test classes simulate a pattern of public/private classes seen in Spring Security 
0, Line, //  So there is binding work to do...
0, Line, //  Put the "opposite" opcode of baseOpcode. This can be done by flipping the least   significant bit for IFNULL and IFNONNULL, and similarly for IFEQ ... IF_ACMPEQ (with a 
0, Line, //  Special case: getEngineByName returned null but engine is present...   Let's assume it failed to initialize (which ScriptEngineManager silently swallows).   If it happens to initialize fine now, alright, but we really expect an exception. 
0, Line, //  -----------------------------------------------------------------------------------------------   Utility methods   ----------------------------------------------------------------------------------------------- 
0, Line, //  No need to handle 'match start' checking as this captures everything   anyway and cannot be followed by anything else   assert next == null 
0, Line, //  verify that we can call a method with args that are subtypes of the   target method arg types 
0, Line, //  number of times to repeat 'count' evaluations (for averaging) 
0, Line, //  Now try to recover the shared Connection and all consumers... 
0, Line, //  create mocks 
0, Line, //  Not set 
0, Line, //  Publisher 
0, Line, //  Fall back on bean name (or alias) match 
0, Line, //  Evaluate conditions in order of precedence.   See https://tools.ietf.org/html/rfc7232#section-6 
0, Line, //  SPR-9325, SPR-13860 
0, Line, //  Register the ImportRegistry as a bean in order to support ImportAware @Configuration classes 
0, Line, //  We have a given MessageSourceResolvable. 
0, Line, //  OpLT   OpLE   true - null is < or <= something 
0, Line, //  FormInserter is parameterized to ClientHttpRequest (for client-side use only) 
0, Line, //  Let server pick its own random, available port. 
0, Line, //  unadvised but can return this). May be required to expose the proxy. 
0, Line, //  Try to obtain the FactoryBean's object type from this early stage of the instance. 
0, Line, //  Dynamic matching failed.   Skip this interceptor and invoke the next in the chain. 
0, Line, //  gh-23196 
0, Line, //  Register a DisposableBean implementation that performs all destruction   work for the given bean: DestructionAwareBeanPostProcessors,   DisposableBean interface, custom destroy method. 
0, Line, //  not completely accurate but good guess 
0, Line, //  Set to null 
0, Line, //  Should fail to get proxy as exposeProxy wasn't set to true 
0, Line, //  TypedValue root = ctx.getRootObject();   supplied should override root on context 
0, Line, //  Frame writing 
0, Line, //  shouldn't happen - if it does, proceed with requestUri as-is 
0, Line, //  Create JDBCConnectionSpec using current isolation level value and read-only flag. 
0, Line, //  regular close call 
0, Line, //  Shut down the invokers. 
0, Line, //  no 
0, Line, //  Private support methods 
0, Line, //  sanity check 
0, Line, //  empty 
0, Line, //  Lifecycle implementation 
0, Line, //  Expose helpers as request attributes, if any. 
0, Line, //  JPA 2.1 method 
0, Line, //  Can still mod second object 
0, Line, //  EntityManagerHolder with an active transaction coming from JpaTransactionManager,   with no synchronized EntityManager having been requested by application code before.   Unbind in order to register a new unsynchronized EntityManager instead. 
0, Line, //  of populating type descriptor cache 
0, Line, //  static method, no args, void return 
0, Line, //  unexpectedly ran out of data 
0, Line, //  Try again in case of caching 
0, Line, //  Second call should have been cached 
0, Line, //  Check the same call will work again, but the context is empty 
0, Line, //  -- tests relating to customizing property sources ------------------------------- 
0, Line, //  Can't be shared: no type mismatch with a field 
0, Line, //  Create child ApplicationContext for views. 
0, Line, //  Trigger the NPE as originally reported in the bug 
0, Line, //  T() can only take an identifier (possibly qualified), not a literal   message ought to say identifier rather than ID 
0, Line, //  Compare weak/strong ETags as per https://tools.ietf.org/html/rfc7232#section-2.3 
0, Line, //  SPR-16526 
0, Line, //  As of 4.3, we're processing Errors thrown from handler methods as well,   making them available for @ExceptionHandler methods and other scenarios. 
0, Line, // evaluates to false 
0, Line, //  --- dotted property names 
0, Line, //  Read the opens_index, opens_flags, opens_to_count and opens_to_index fields and visit them. 
0, Line, //  referenced instruction, and to make methodVisitor visit the corresponding try catch blocks. 
0, Line, //  No HTTP OK status, and no content-length header: give up 
0, Line, //  Content phase 
0, Line, //  At this point we don't need to differentiate between initial delay set or not anymore 
0, Line, //  Allow for differentiating between the proxy and the raw Connection. 
0, Line, //  Now union with all TestBean methods 
0, Line, //  Should be automatically added as a listener
0, Line, //  It is a candidate FactoryBean - go ahead with enhancement 
0, Line, //  Let's try NIO file system providers via Paths.get(URI) 
0, Line, //  Has this effectively been overridden before (e.g. via XML)?
0, Line, //  Eagerly disconnect the Session here, to make release mode "on_close" work on JBoss. 
0, Line, //  Implicit (no method) vs explicit HTTP method mappings 
0, Line, //  Use hashCode of EntityManager proxy. 
0, Line, //  Access through stored session reference, if any... 
0, Line, //  Ensure it was an AssertionError that failed the test and not   something else like an error in the @Configuration class, etc. 
0, Line, //  list of lists of reference types 
0, Line, //  Repeated initialization with no user-customized MetadataSources -> clear it. 
0, Line, //  Previously we setProxyTargetClass(true) in the constructor, but that has too   broad an impact. Instead we now override isInfrastructureClass to avoid proxying   aspects. I'm not entirely happy with that as there is no good reason not   to advise aspects, except that it causes advice invocation to go through a   proxy, and if the aspect implements e.g the Ordered interface it will be   proxied by that interface and fail at runtime as the advice method is not   defined on the interface. We could potentially relax the restriction about   not advising aspects in the future. 
0, Line, //  we return null rather than throw an exception so that we behave well   in a chain-of-responsibility. 
0, Line, //  See whether we can find an EntityManagerFactory with matching persistence unit name. 
0, Line, //  handleNoMatch would have been invoked already 
0, Line, //  No worries, let's continue with the reflection metadata we started with... 
0, Line, //  -----------------------------------------------------------------------------------------------   Static helper methods to compute hash codes.   ----------------------------------------------------------------------------------------------- 
0, Line, //  Test for MBean server equality. 
0, Line, //  A straight MBean... Let's create a simple lazy-init CGLIB proxy for it. 
0, Line, //  Change the opcode of the jump instruction, in order to be able to find it later in   ClassReader. These ASM specific opcodes are similar to jump instruction opcodes, except   that the 2 bytes offset is unsigned (and can therefore represent values from 0 to   65535, which is sufficient since the size of a method is limited to 65535 bytes). 
0, Line, //  Transform if necessary and use the potentially transformed bytes. 
0, Line, //  Force removal since setHeader checks for equality 
0, Line, // 	@Disabled("useDefaultSuffixPattern property not supported") 
0, Line, //  LiteralPathElement 
0, Line, //  initialized when/if requested 
0, Line, //  Add programmatically registered listeners, including ones coming 
0, Line, //  Process Spring's beforeCompletion early, in order to avoid issues   with strict JTA implementations that issue warnings when doing JDBC   operations after transaction completion (e.g. Connection.getWarnings). 
0, Line, //  no "(" and nothing following 
0, Line, //  Completable 
0, Line, //  Empty holder representing "not valid". 
0, Line, //  interfaces_count is after the access_flags, this_class and super_class fields (2 bytes each). 
0, Line, //  Just in case some code happens to call uncommon Commons Logging methods... 
0, Line, //  Initialize message source for this context. 
0, Block, /* 		 * See java.beans.IndexedPropertyDescriptor#equals(java.lang.Object)		  */
0, Line, //  Implements character - int (ie. b - 1 = a) 
0, Line, //  nested properties 
0, Line, //  Confirms visibility of what is being called. 
0, Line, //  a class path resource pattern 
0, Line, //  Optimistic algorithm: instead of computing the byte length and then serializing the string   (which requires two loops), we assume the byte length is equal to char length (which is the   most frequent case), and we start serializing the string right away. During the   serialization, if we find that this assumption is wrong, we continue with the general method. 
0, Line, //  attrFoo should be overridden in concrete subclass 
0, Line, //  Message sending 
0, Line, //  Ambiguous return types found: return null to indicate "not determinable".
0, Line, //  Ask the subclass to create the View object. 
0, Line, //  Ensure @ResponseBody-style handling for values collected from a reactive type   even if actual return type is ResponseEntity<Flux<T>> 
0, Line, //  ignore, see SPR-12999 
0, Line, //  intentionally omitted: attribute = "locations" (SPR-14069) 
0, Line, //  SPR-12226 
0, Line, //  Expose this tag's status object as PageContext attribute, 
0, Line, //  Means extra call on advised 2 
0, Line, //  OperatorPower 
0, Line, //  verify the property keys have been evaluated as expressions 
0, Line, //  same as the one above for local variables). 
0, Line, //  On Java 8, the message starts with the class name: "java.lang.String cannot be cast..." 
0, Line, //  3. Send message via broker channel 
0, Line, //  Check if the Trigger is aware of an associated JobDetail. 
0, Line, //  Visit the end of the method. 
0, Line, //  No such bean 
0, Line, //  Ignore: already handled in writeFrame... 
0, Line, //  Simulate autowiring a configuration method 
0, Line, //  enum_const_value 
0, Line, //  Create a JndiObjectTargetSource that mirrors the JndiObjectFactoryBean's configuration. 
0, Line, //  Check if the inspected method has the correct number of parameters. 
0, Line, //  Make the root object the active context again for evaluating the parameter expressions 
0, Line, //  Do automatic joining if required. Excludes toString, equals, hashCode calls. 
0, Line, //  property access 
0, Line, //  Cache the merged bean definition for the time being 
0, Line, //  ConversionService 
0, Line, //  Body not empty, back to 415.. 
0, Line, //  Invalid case, but happens for includes on Jetty: silently adapt it. 
0, Line, //  subroutineId and add its successors to the list of blocks to process (unless already done). 
0, Line, //  rogue 'G' on the end 
0, Line, //  no proxy creation in progress   abstain; can't return YES, since that will make pointcut with negation fail 
0, Line, //  from ExtendedDefaultPropertiesFileDetectionTestPropertySourceTests.properties 
0, Line, //  Flush byte array to servlet output stream. 
0, Line, //  Error code that indicates successful shutdown 
0, Line, //  Skip the name_index, descriptor_index and index fields (2 bytes each). 
0, Line, //  Note: fields are ordered as in the method_info structure, and those related to attributes are   ordered as in Section 4.7 of the JVMS. 
0, Line, //  gh-22705 
0, Line, //  map2 should be null, there is no setter 
0, Line, //  Now, verify what each client has.. 
0, Line, //  SPR-10820: p2 should 'win' as it was registered last 
0, Line, //  IMPORTANT: Do not pass full property name in here - property editors 
0, Line, //  Handle getTargetConnection method: return underlying connection. 
0, Line, //  Test removal 
0, Line, //  Retrieval of bean names 
0, Line, //  SPR-11025 
0, Line, //  SPR-13545 
0, Line, //  Use a local copy to protect against other threads writing 
0, Line, //  SPR-16172 
0, Line, //  Trigger afterCommit callbacks, with an exception thrown there 
0, Line, //  Create the CacheAdvisor definition. 
0, Line, //  Level 3-A 
0, Line, //  Common media types are cached at the level of MimeTypeUtils 
0, Line, //  WildcardPathElement 
0, Line, //  property 
0, Line, //  Only one thread so only one object can have been bound 
0, Line, //  SPR-9653 
0, Line, //  itself is not subject to auto-proxying! Only its target bean is. 
0, Line, //  Exception -> Runtime -> NestedRuntime -> MyRuntimeException 
0, Line, //  Do nothing 
0, Line, //  SPR-13546 
0, Line, //  no transactional support for invalidate 
0, Line, //  class hierarchy mixed with @Transactional and @Order declarations 
0, Line, //  Static factory methods and accessors 
0, Line, //  Don't copy the attributes yet, instead store their location in the source class reader so   they can be copied later, in {@link #putMethodInfo}. Note that we skip the 6 header bytes   of the method_info JVMS structure. 
0, Line, //  Name of schema for this context 
0, Line, // ---------------------------------------------------------------------   Serialization support  --------------------------------------------------------------------- 
0, Line, //  Only considered as equal when proxies are identical. 
0, Line, //  gh-22703 
0, Line, //  Extension receivers of extension methods must be included as they appear as normal method parameters in Java 
0, Line, //  Send more data illegally 
0, Line, //  Optimization: use charAt and regionMatches instead of endsWith and startsWith (SPR-11304) 
0, Line, //  SPR-14877 
0, Line, //  Read the model and create bean definitions based on its content 
0, Line, // -------------------------------------------------------------------------   Convenience methods for storing individual objects  ------------------------------------------------------------------------- 
0, Line, //  Filter will now remove non @Anno annotated methods 
0, Line, //  A reference to the id of another bean in a parent context. 
0, Line, //  should include the profile-annotated bean with active profiles set 
0, Line, //  Check that toString doesn't cause a problem 
0, Line, //  A plain value: convert it to an array with a single component. 
0, Line, //  Check name with just dots replaced 
0, JavaDoc, /* 	 * Return the isolation level.	 * <p>Must return one of the {@code ISOLATION_XXX} constants defined on	 * {@link TransactionDefinition this interface}. Those constants are designed	 * to match the values of the same constants on {@link java.sql.Connection}.	 * <p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or	 * {@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started	 * transactions. Consider switching the "validateExistingTransactions" flag to	 * "true" on your transaction manager if you'd like isolation level declarations	 * to get rejected when participating in an existing transaction with a different	 * isolation level.	 * <p>The default is {@link #ISOLATION_DEFAULT}. Note that a transaction manager	 * that does not support custom isolation levels will throw an exception when	 * given any other level than {@link #ISOLATION_DEFAULT}.	 * @return the isolation level	 * @see #ISOLATION_DEFAULT	 * @see org.springframework.transaction.support.AbstractPlatformTransactionManager#setValidateExistingTransaction	  */
0, Line, //  Prepare target URL. 
0, Line, //  In case user the forgot to call visitEnd(). 
0, Line, //  Add rest of String, but not in case of empty input. 
0, Line, //  Fallback option: JDK 9+ Lookup.defineClass API even if ClassLoader does not match 
0, Line, //  gh-22702 
0, Line, //  The following needs to use a lambda expression instead of a method reference   for compatibility with Hibernate ORM <5.2 where connection() is defined on   SessionImplementor itself instead of on SharedSessionContractImplementor...
0, Line, //  Fallback: no BeanFactory set, or no type resolvable through it 
0, Line, //  generic resolver that says it can be used for any type 
0, Line, //  If we have relevant Constructor instance at hand, just call it   This skips "get constructors" machinery 
0, Line, //  SPR-8455 
0, Line, //  do nothing - already at the targetCapacity 
0, Line, //  Try to load via the file system, fall back to SpringTemplateLoader   (for hot detection of template changes, if possible). 
0, Line, //  Remove possible duplicates if we loaded default listeners. 
0, Line, //  SPR-9655 
0, Line, //  HttpMessageDecoder... 
0, Line, //  Double slot primitives 
0, Line, //  Note: 'map' values must be of type Integer, but the values in the map   returned by createMap() are of type java.util.List. Thus 1 cannot be   cast to a List. 
0, Line, //  Configure the mocked BeanFactory to return the DependencyDescriptor for convenience and   to avoid using an ArgumentCaptor. 
0, Line, // mock.setThrowable(new FileNotFoundException()); 
0, Line, //  OpGT   OpGE   true - something is > or >= null 
0, Line, //  Rely on default serialization, just initialize state after deserialization. 
0, Line, //  Already removed: must have been a dependent bean from another phase 
0, Line, //  Now build a new MultipartBodyBuilder, as BodyInserters.fromMultipartData would do... 
0, Line, //  The num_parameters field uses 1 byte, and each element of the parameter_annotations array   uses 2 bytes for its num_annotations field. 
0, Line, //  SPR-16177 
0, Line, //  Fancy variant with dependency registration 
0, Line, //  SPR-13416 
0, Line, //  Avoid .then() which causes data buffers to be released 
0, Line, //  Initialize other special beans in specific context subclasses. 
0, Line, //  The tests are sorted in decreasing frequency order (based on frequencies observed on 
0, Line, // ---------------------------------------------------------------------------------------   Convenience methods for receiving auto-converted messages  --------------------------------------------------------------------------------------- 
0, Line, //  This is a methodreference invocation, to compare with functionreference 
0, Line, //  ALSO CHECK CHAIN of SQLExceptions!?   also allow chain of translators? default if can't do specific?
0, Line, //  /* + /hotel => /hotel   /*.* + /*.html => /*.html   However:   /usr + /user => /usr/user 
0, Line, //  -----------------------------------------------------------------------------------------------   Methods related to subroutines   ----------------------------------------------------------------------------------------------- 
0, Line, // ---------------------------------------------------------------------   Management of default editors  --------------------------------------------------------------------- 
0, Line, //  OpLT   OpGT   false - null is not < or > null 
0, Line, //  Standard delegation to the native factory, just post-processing EntityManager return values 
0, Line, //  SPR-12198: p4 should 'win' as it was registered last 
0, Line, //  HTML and/or JavaScript escape, if demanded. 
0, Line, //  Now the expression has cached that throwException(int) is the right thing to call   Let's change 'bar' to be a PlaceOfBirth which indicates the cached reference is 
0, Line, //  Don't let calling code try to dereference the   bean factory if the bean isn't a factory 
0, Line, //  resolve with single arg 
0, Line, //  a shared scoped proxy 
0, Line, // -------------------------------------------------------------------------   Convenience finder methods for detached criteria  ------------------------------------------------------------------------- 
0, Line, //  Execute requestDestroyed callback in different thread. 
0, Line, //  SPR-13417 
0, Line, //  This is identical to the requiredSingleResult implementation but differs in the   semantics of the incoming Collection (which we currently can't formally express) 
0, Block, /*  name =  */
0, Line, //  The Code attribute has 6 header bytes, plus 2, 2, 4 and 2 bytes respectively for max_stack,   max_locals, code_length and attributes_count, plus the bytecode and the exception table. 
0, Line, //  We can not use the superclass method since it uses conversion to a File and   only a Path on the default file system can be converted to a File... 
0, Line, //  = 3 invocations 
0, Line, //  Trim leading and trailing whitespace. 
0, Block, /*  (non-Javadoc)	 * @see org.springframework.beans.factory.BeanNameAware#setBeanName(java.lang.String)	  */
0, Line, //  Level 3-B 
0, Line, //  session gets created in order to register MessageListener... 
0, Line, //  Check the media type for the resource 
0, Line, //  WebSocket and sub-protocol handling 
0, Line, //  2) Convert the annotation into AnnotationAttributes 
0, Line, //  Equal values are equal 
0, Line, //  The bytecode offset of the first explicit frame is not offset_delta + 1 but only   offset_delta. Setting the implicit frame offset to -1 allows us to use of the 
0, Line, //  server 
0, Line, //  we are using a nested path (see extendPageContext(..)), so... 
0, Line, //  SPR-15946 
0, Line, //  Special case: it returned "this". Note that we can't help   if the target sets a reference to itself in another returned object. 
0, Line, //  Don't swallow, probably misconfiguration... 
0, Line, //  ignore (see class-level doc) 
0, Line, //  Create a shared aspect instance. 
0, Line, //  Delay send since server processes concurrently   Ideally order should be preserved or receipts supported (simple broker) 
0, Line, //  Visit the RuntimeInvisibleAnnotations attribute. 
0, Line, //  Check it's a singleton 
0, Line, //  ServletConfig gets precedence 
0, Line, //  SPR-16178 
0, Block, /*  Downstream write completion subscriber  */
0, Line, //  mode="aspectj" 
0, Line, //  Preferred constructors for default construction? 
0, Line, //  Sanity check, this particular call has called the service 
0, Line, //  Get the unmerged list of attributes for the target annotation. 
0, Line, //  Host explicitly specified: only lookup possible. 
0, Line, //  madeup does not exist as a property 
0, Line, //  OperatorInstanceOf 
0, Line, //  When entering a new scope there is a new base object which should be used   for '#this' references (or to act as a target for unqualified references).   This ArrayDeque captures those objects at each nested scope level.   For example:   #list1.?[#list2.contains(#this)]   On entering the selection we enter a new scope, and #this is now the   element from list1 
0, Line, //  First try is the method in the target class. 
0, Line, //  Thrown from the FactoryBean's getObjectType implementation. 
0, Line, //  Pushes the abstract type on the output stack. 
0, Line, // generated numbers: 
0, Line, //  Subscriber<T> methods (we're the subscriber to the write source).. 
0, Line, //  'simple' object 
0, Line, //  should never happen... 
0, Line, //  It's a literal value. 
0, Block, /*  no user beans required for these tests  */
0, Line, //  The JDK does not contain a default editor for char! 
0, Line, //  although the root object is being set on the evaluation context, the value in the 'state' remains what it was when constructed 
0, Line, //  if only one operand, then this is unary plus 
0, Line, //  Component getters 
0, Line, //  obsolete RFC 850 format 
0, Line, //  this should match because of *.jsp 
0, Line, //  should throw, bad (invalid-Exception-type) serviceLocatorException class supplied 
0, Line, //  November 
0, Line, //  Commit session or acknowledge message. 
0, Line, //  Trigger post-initialization callback for all applicable beans... 
0, Line, //  Destroy the corresponding DisposableBean instance. 
0, Line, //  Shouldn't accept null target 
0, Line, //  Now test replace 
0, Line, //  NOPMD(UnusedFormalParameter) used for backward compatibility. 
0, Line, //  Sybase: internal I/O error   Sybase: unexpected I/O error   DB2: communication failure 
0, Line, //  Publisher implementation for result notifications... 
0, Line, //  Array-based vars rely on the below order.. 
0, Line, //  test## is required for @TestMethodOrder. 
0, Line, //  Process re-execution outside of the synchronized block. 
0, Line, //  Trigger commit here to let exceptions propagate to the caller. 
0, Line, //  TypeDescriptor operandTypeDescriptor = op.getTypeDescriptor(); 
0, Line, //  Do we want to register the connector with the MBean server?
0, Line, //  inline map creation not supported at the moment   evaluate("#{'a':'y','b':'n','c':'y'}.![value=='y'?key:null].nonnull().sort()", "[a, c]", ArrayList.class); 
0, Line, //  The thread-bound ConnectionHolder might not be available anymore,   since afterCompletion might get called from a different thread. 
0, Line, //  then it could be a reference pointcut 
0, Line, //  = 4 invocations on 1 and another one on 2 
0, Line, //  CONNECT 
0, Line, //  the MBean with the supplied object name does not exist... 
0, Line, //  Even though this property accessor is added after the reflection one, it specifically   names the String class as the type it is interested in so is chosen in preference to 
0, Line, // -------------------   SPR-3485 classes  ------------------- 
0, Line, //  No FlushMode change needed... 
0, Line, //  Visit the Code attribute. 
0, Line, //  Postgres-style "??", "?|", "?&" operator should be skipped 
0, Line, //  Handle aliasing... 
0, Line, //  "touchy" should not be copied: it's not defined in ITestBean 
0, Line, //  Shortcut: no searchable annotations to be found on plain Java classes and core Spring types... 
0, Line, //  Choked on some character encoding...   Leave the decision up to the caller. 
0, Block, /*  Extensions associated with the built-in message converters  */
0, Line, //  Useful predefined abstract types (all the possible CONSTANT_KIND types). 
0, Line, //  Only check if it gets past first hurdle. 
0, Line, //  misleading null. 
0, Line, //  check LocaleContext 
0, Line, //  4:30 
0, Line, //  Null replacement magic should work 
0, Line, //  6 attribute header bytes, and 2 bytes for package_count. 
0, Line, //  method reference 
0, Line, //  SPR-8809 
0, Line, //  Factory methods 
0, Line, //  Cache the concatenation of child identifiers 
0, Line, //  Nop2 didn't get invoked when the exception was thrown 
0, Line, //  remove() 
0, Line, //  Count all advice, including explicit registrations.. 
0, Line, //  Stop the entire TimerManager, if necessary. 
0, Line, // -------------------------------------------------------------------------   Lifecycle methods for starting and stopping the container  ------------------------------------------------------------------------- 
0, Line, //  RabbitMQ-style broker convention for STOMP destinations 
0, Line, //  SPR-15819 
0, Line, //  should exclude the profile-annotated bean if active profiles remains unset 
0, Line, //  BeanDefinitionRegistryPostProcessor hook apparently not supported...   Simply call processConfigurationClasses lazily at this point then. 
0, Line, //  Ignore Kotlin metadata annotations since they contain   illegal HTML characters and fail the report generation 
0, Line, //  Fall back to the plain original method in case of no resolvable match or a   negative match on a proxy class (which doesn't carry any annotations on its   redeclared methods). 
0, Line, //  Assign 
0, Block, /*  The counter property is purposefully not used in the aspect to avoid distraction	 * from the main bug -- merely needing a dependency on an advised bean	 * is sufficient to reproduce the bug.	  */
0, Line, //  Autodetect in JNDI if applicable, and check UserTransaction/TransactionManager   object that implements TransactionSynchronizationRegistry otherwise. 
0, Line, //  All cool 
0, Line, //  Copy all attributes (emulating behavior of private FeatureDescriptor#addTable) 
0, Line, //  assuming UTC instant a la "2007-12-03T10:15:30.00Z" 
0, Line, //  Now clean up the database 
0, Line, //  Ignore -> simply doesn't match. 
0, Line, //  found in nested scope 
0, Line, //  Use hashCode of Connection proxy. 
0, Line, //  Shouldn't succeed in adding unnamed parameter 
0, Line, //  Fetch cache region: If none with the given name exists, create one on the fly. 
0, Line, //  The property name contains opening prefix(es)... 
0, Line, //  advice1 was declared before advice2   so advice1 has lower precedence 
0, Line, //  Use hashCode of EntityManagerFactory proxy. 
0, Line, //  Now get attribute 
0, Line, //  the cache uses a nested index (value is a map) to keep the top level cache relatively small in size 
0, Line, //  No already registered method name, or more specific   method name specification now -> (re-)register method. 
0, Line, //  Check annotations declared on factory method, if any. 
0, Line, //  -----------------------------------------------------------------------------------------------   Constructors   ----------------------------------------------------------------------------------------------- 
0, Line, //  This listener is mapped to a specific ObjectName. 
0, Line, //  We need to remove introduction interfaces. 
0, Line, //  reflective property accessor is the only one by default 
0, Line, //  If this method_info must be copied from an existing one, the size computation is trivial. 
0, Line, //  no escaping -> ctr name 
0, Line, //  Restructure 
0, Line, //  Read the 'requires_count' and 'requires' fields. 
0, Line, //  We keep HandlerMappings in sorted order. 
0, Line, //  Dynamically create the objects if the user has requested that optional behavior 
0, Line, //  IMPORTANT: Do not pass full property name in here - property editors   must not kick in for map keys but rather only for map values. 
0, Line, //  Check result state: It might indicate a Throwable to rethrow. 
0, Line, //  internal helpers 
0, Line, //  Handling the nested array case here.   If vararg is [[I then we want [I and not [I; 
0, Line, //  mode="proxy" 
0, Line, //  ContentNegotiatingResolver in the registry: elevate its precedence! 
0, Line, //  Use Hibernate's own transaction timeout mechanism on Hibernate 3.1+   Applies to all statements, also to inserts, updates and deletes! 
0, Line, //  Override thread context ClassLoader to work around naive Quartz ClassLoadHelper loading. 
0, Line, //  The following declaration simply verifies that @Autowired on the constructor takes   precedence. 
0, Line, //  Some parsers raise an exception 
0, Line, //  default: same as non-Ordered 
0, Line, //  Resource pattern matching available. 
0, Line, //  We need to wrap the MetadataAwareAspectInstanceFactory with a decorator   so that it will only instantiate once. 
0, Line, //  should not be called, since we override canRead()/canWrite() 
