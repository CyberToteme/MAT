1, JavaDoc, /*      * Chooses a new boolean value for the cell when its type is changing.<p>     *     * Usually the caller is calling setCellType() with the intention of calling     * setCellValue(boolean) straight afterwards.  This method only exists to give     * the cell a somewhat reasonable value until the setCellValue() call (if at all).     * TODO - perhaps a method like setCellTypeAndValue(int, Object) should be introduced to avoid this      */
1, Line, //  Complex file   TODO 
1, Line, //  Sometimes, the grpprl does not contain data at every offset. I have no idea why this happens. 
1, JavaDoc, /* @todo handle table sprms from complex files */
1, Line, //  FIXME (byte array properties not yet implemented): dsi.setDocparts(P_DOCPARTS); 
1, Line, //  FIXME (byte array properties not yet implemented): assertNull(dsi.getDocparts());   FIXME (byte array properties not yet implemented): assertNull(dsi.getHeadingPair()); 
1, Line, //  TODO clone some more properties ?  
1, Block, /*  TODO: handle rect path  */
1, Line, // TODO -- implement these as needed  BrtFileVersion(128), //file version 
1, Line, // TODO: depending on the formatId getDateTimeText() should return formatted date  assertEquals("08/12/08", notesHdd.getDateTimeText()); 
1, JavaDoc, /*  * Test Freeform object. * The Freeform shape is constructed from java.awt.GeneralPath. * Check that the get/set path accessors are consistent. * (TODO: verification of Bezier curves is more difficult due to rounding error.  Figure out a test approach for that) * * @author Yegor Kozlov  */
1, Line, //  TODO: Can these ever have formatting on them? 
1, Line, //  "A .. B" not valid syntax for "A:B"   and there's no other valid expression that fits this grammar 
1, Line, //  PDXNAN(0x006F,0x0C65,"PDXnan"), // invalid combo 
1, Line, //  Copy merged regions that are fully contained on the row   FIXME: is this something that rowShifter could be doing? 
1, JavaDoc, /* @todo handle large PAPX from data stream */
1, Block, /*  TODO update body element, update xwpf element, verify that         * incoming paragraph belongs to this document or if not, XML was         * copied properly (namespace-abbreviations, etc.)          */
1, JavaDoc, /*  *	Test to see if Range.insertBefore() works even if the Range contains a *	CharacterRun that uses Unicode characters. * * TODO - re-enable me when unicode paragraph stuff is fixed!  */
1, Line, //  Some files seem to lie about their unicode status, which      is very very pesky. Try to work around these, but this 
1, Line, //  TODO - check the formula once tables and    arrays are properly supported 
1, Line, //  TODO: handle LCID codes 
1, Line, //  TODO: use new properties 
1, Line, //  TODO Update this to expose first and last sheet indexes 
1, Line, //  We get an error when we parse [Content_Types].xml   because it's not a valid URI. 
1, Line, //  TODO Work out how to report this, given we can't change the method signature... 
1, JavaDoc, /*  * TODO: document me *  * @author Sergey Vladimirov (vlsergey {at} gmail {dot} com)  */
1, Line, //  FIXME: is this something that rowShifter could be doing? 
1, Line, // TODO: default "autobreaks" is different in HSSF and XSSF 
1, Line, //  We need a new CTXf for the main styles   TODO decide on a style ctxf 
1, Line, // TODO: implement more dashing styles 
1, Block, /*          * HACK: Detect compressed images. In reality there should be some way         * to determine this from the first 32 bytes, but I can't see any         * similarity between all the samples I have obtained, nor any         * similarity in the data block contents.          */
1, Line, //  TODO: handle palette colors and alpha(?) value 
1, Line, //  TODO: check size   TODO: check size   TODO: check size 
1, Line, //       assertRefPtgA1('V', getPtgs(cell), 6); // FIXME! 
1, Line, //  Excel's # with value 0 will output empty where Java will output 0. This hack removes the # from the format. 
1, Line, //  Todo - check text too, once bug fixed 
1, Line, //  TODO: check if we can break here, i.e. if a page can have more than 1 break on the same id 
1, JavaDoc, /*      * Apply a custom filter     *     * <p>     * A custom AutoFilter specifies an operator and a value.     * There can be at most two customFilters specified, and in that case the parent element     * specifies whether the two conditions are joined by 'and' or 'or'. For any cells whose     * values do not meet the specified criteria, the corresponding rows shall be hidden from     * view when the filter is applied.     * </p>     *     * <p>     * Example:     * <blockquote><pre>     *  AutoFilter filter = sheet.setAutoFilter(CellRangeAddress.valueOf("A1:F200"));     *  filter.applyFilter(0, FilterOperator.GreaterThanOrEqual", "0.2");     *  filter.applyFilter(1, FilterOperator.LessThanOrEqual"", "0.5");     * </pre></blockquote>     * </p>     *     * @param columnIndex 0-based column index     * @param operator the operator to apply     * @param criteria top or bottom value used in the filter criteria.     *     * TODO YK: think how to combine AutoFilter with with DataValidationConstraint, they are really close relatives     * void applyFilter(int columnIndex, FilterOperator operator, String criteria);      */
1, Line, //  TODO - this data seems to require two extra bytes padding. not sure where original file is.   it's not bug 38607 attachment 17639 
1, Line, //  FIXME: this function is a self-fulfilling prophecy: this test will always pass as long 
1, Line, // FIXME: XSSFCell and HSSFCell expose different interfaces. getErrorCellString would be helpful here 
1, Block, /*         * Exponent sign handling is complex.        *        * In DecimalFormat, you never put the sign in the format, and the sign only        * comes out of the format if it is negative.        *        * In Excel, you always say whether to always show the sign ("e+") or only        * show negative signs ("e-").        *        * Also in Excel, where you put the sign in the format is NOT where it comes        * out in the result.  In the format, the sign goes with the "e"; in the        * output it goes with the exponent value.  That is, if you say "#e-|#" you        * get "1e|-5", not "1e-|5". This makes sense I suppose, but it complicates        * things.        *        * Finally, everything else in this formatting code assumes that the base of        * the result is the original format, and that starting from that situation,        * the indexes of the original special characters can be used to place the new        * characters.  As just described, this is not true for the exponent's sign.        * <p>        * So here is how we handle it:        *        * (1) When parsing the format, remove the sign from after the 'e' and put it        * before the first digit of the exponent (where it will be shown).        *        * (2) Determine the result's sign.        *        * (3) If it's missing, put the sign into the output to keep the result        * lined up with the output. (In the result, "after the 'e'" and "before the        * first digit" are the same because the result has no extra chars to be in        * the way.)        *        * (4) In the output, remove the sign if it should not be shown ("e-" was used        * and the sign is negative) or set it to the correct value.         */
1, Line, //  FIXME: forgot to reassign!  cols = sheet1.getCTWorksheet().getColsArray(0); 
1, Line, //  ExpPtg is used for array formulas and shared formulas.   it is currently unsupported, and may not even get implemented here 
1, JavaDoc, /*      * To avoid accident changes to the template, you should be able     *  to create a SXSSFWorkbook from a read-only XSSF one, then     *  change + save that (only). See bug #60010     * TODO Fix this to work!      */
1, Line, //  It's a special formula condition.   TODO: Check whether the condition cell contains a formula and return #VALUE! if it doesn't. 
1, Line, //  TODO - would be nice to remove this 
1, Line, //  This override is used only in order to test failing for HSSF. Please remove method after code is fixed on hssf,    so that original method from BaseTestSheetShiftColumns can be executed.  
1, Line, //  int, not short ... :( 
1, Line, //  TODO - add getFormat() to interface PictureData and genericise wb.getAllPictures() 
1, Line, //  TODO - remove 've == null' condition once AreaEval is fixed 
1, Line, //  TODO - remove this method 
1, Line, //  POI uses UnknownPtg when the encoded Ptg array seems to be corrupted.   This seems to occur in very rare cases (e.g. unused name formulas in bug 44774, attachment 21790)   In any case, formulas are re-parsed before execution, so UnknownPtg should not get here 
1, Line, //  Hack the FAT so that it goes 0->1->2->0 
1, Line, //  TODO - shouldn't BlankEval.INSTANCE be used always instead of null?   null seems to occur when the blank cell is part of an area ref (but not reliably) 
1, Line, //  TODO Is CommonCrawl 265 = 0x109 the one above or below? 
1, Line, // TODO, read byte to figure out the type of error 
1, Line, //  TODO: handle PaintStyle 
1, Line, //  this already failed! Hex2Dec did not correctly handle RefEval 
1, Line, // TODO column styles are not yet supported by XSSF 
1, Line, //  TODO Add support for removing these kinds of nested runs,    which aren't on the CTP -> R array, but CTP -> XXX -> R array 
1, Line, //  Oh dear, something has gone wrong... 
1, Line, //  not implemented ... also not in the specs 
1, Line, //  fix header size, sometimes this is invalid 
1, Line, //  TODO How best to warn of a short read? 
1, JavaDoc, /*  * This class is a friendly wrapper on top of the more scary HSLFSlideShow. * * TODO: - figure out how to match notes to their correct sheet (will involve * understanding DocSlideList and DocNotesList) - handle Slide creation cleaner  */
1, Line, //  TODO - no idea if this is right 
1, Line, //  TODO: convert the data to the cell format 
1, Line, //  TODO - when does this occur? 
1, JavaDoc, /*     * To ensure we can create a file >2gb in size, as well as to    *  extend existing files past the 2gb boundary.    *    * Note that to run this test, you will require 2.5+gb of free    *  space on your TMP/TEMP partition/disk    *    * Note that to run this test, you need to be able to mmap 2.5+gb    *  files, which may need bigger kernel.shmmax and vm.max_map_count    *  settings on Linux.    *    * TODO Fix this to work...     */
1, Line, //  This bug is currently open. This test will fail with "expected error not thrown" when the bug has been fixed.   When this happens, change this from @Test(expected=...) to @Test 
1, Line, // FIXME: change to protected if/when SXSSFHyperlink class is created 
1, JavaDoc, /*  *	Test to see if Range.replaceText() works even if the Range contains a *	CharacterRun that uses Unicode characters. * * TODO - re-enable me when unicode paragraph stuff is fixed!  */
1, JavaDoc, /*  * Represents autofiltering for the specified worksheet. * * <p> * Filtering data is a quick and easy way to find and work with a subset of data in a range of cells or table. * For example, you can filter to see only the values that you specify, filter to see the top or bottom values, * or filter to quickly see duplicate values. * </p> * * TODO YK: For now (Aug 2010) POI only supports setting a basic autofilter on a range of cells. * In future, when we support more auto-filter functions like custom criteria, sort, etc. we will add * corresponding methods to this interface.  */
1, Line, //  FIXME: remove try, catch, and testPassesNow, skipTest when test passes 
1, Block, /*  FIXME copied from {@link org.apache.poi.ss.TestWorkbookFactory}  */
1, Line, //  TODO - check contents 
1, JavaDoc, /*  * This handles reading and writing a stream within a *  {@link POIFSFileSystem}. It can supply an iterator *  to read blocks, and way to write out to existing and *  new blocks. * Most users will want a higher level version of this,  *  which deals with properties to track which stream *  this is. * This only works on big block streams, it doesn't *  handle small block ones. * This uses the new NIO code *  * TODO Implement a streaming write method, and append  */
1, Line, //  FIXME: Move these constants into an enum 
1, Line, // FIXME: should be false, no need to create rows where src is only to copy them to dest 
1, Line, //  TODO add support for TargetMode.EXTERNAL relations. 
1, Line, //  TODO - DOLLAR() function impl is NQR   result should be StringEval, with leading '$' and thousands separators 
1, JavaDoc, /* 	 * Sets the URL of the link	 * TODO: Figure out if we should always set both	  */
1, Line, //  FIXME: this class implements a lot of path joining and splitting logic that   is already implemented in java.nio.file.Path.   This class should heavily leverage Java library code to reduce the number of lines of code that POI has to maintain and test 
1, Line, //  The directory lacks a name! 
1, Line, // don't really need this. spec is confusing regarding this  sprm 
1, Line, //  TODO - Current examples(3) from junits only have zero length username.  
1, Line, //  TODO: handle relative coordinates 
1, Line, //  TODO .xls version available too, add HSSF support then check  
1, Line, //  TODO calculation of tint might be incorrect 
1, Line, //  Dummy implementation - not used! 
1, Line, //  not sure why this is only 2 bytes, but it is... go figure 
1, Line, //  TODO Implement the rest of this, see bug #57184 
1, Line, //  TODO - what about NameX ? 
1, Line, // TODO: implement this 
1, Line, //  TODO - make writing possible 
1, Line, //  FIXME: Array Formula set with Sheet.setArrayFormula() instead of cell.setFormula() 
1, Line, //  TODO: check for XXE 
1, Line, //  TODO Add support for Even/Odd headings and footers 
1, Line, //  FIXME: _sheetName may be null, depending on the entry point.   Perhaps it would be better to declare _sheetName is never null, using an empty string to represent a 2D reference. 
1, Line, //  TODO - no Random - tests should be completely deterministic 
1, Line, //  FIXME: may want to defer to the TempFile with a persistent file creation strategy to the test output dir 
1, Line, //  TODO Figure out if we're in 1900 or 1904   EXCEL functions round up nearly a half second (probably to prevent floating point 
1, Block, /*         // FIXME: Array Formula set with Sheet.setArrayFormula() instead of cell.setFormula()        assertEquals("[Array Formula] N10 cell type", CellType.FORMULA, cell.getCellType());        assertEquals("[Array Formula] N10 cell formula", "{SUM(H10:J10*{1,2,3})}", cell.getCellFormula());        cell = CellUtil.getCell(destRow2, col);        // FIXME: Array Formula set with Sheet.setArrayFormula() instead of cell.setFormula()        assertEquals("[Array Formula] N11 cell type", CellType.FORMULA, cell.getCellType());        assertEquals("[Array Formula] N11 cell formula", "{SUM(H11:J11*{1,2,3})}", cell.getCellFormula());      */
1, Line, //  TODO repeat above code for missing charts: Bubble, Doughnut, OfPie and Stock 
1, Line, //  TODO Decode this properly 
1, Line, //  0x8??? ones are outlook specific, and not standard MAPI   TODO See http://msdn.microsoft.com/en-us/library/ee157150%28v=exchg.80%29   for some   info on how we might decode them properly in the future 
1, Line, //  Formula based strings   TODO Find some then test 
1, JavaDoc, /*  * Implementation of the DMin function: * Finds the minimum value of a column in an area with given conditions. *  * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */
1, Line, //  workaround for too wide pens ... just arbitrary reduce high values ... 
1, Line, //  TOOD: implement Non-Cmap-Lookup correctly 
1, Line, //  Comes from Iterators etc.   TODO Decide if we can handle these better whilst    still sticking to the iterator contract 
1, Line, //  TODO: very non-optimal 
1, Line, //  TODO: add trailing \u0000?  
1, Line, //  FIXME: What happens if level is in between two levels (an even number)? 
1, JavaDoc, /*      * Get the raw value flags. TODO Also provide getters for the flag meanings      */
1, Line, //  FIXME: test failing case 
1, JavaDoc, /*     * Note - this test runs several times, to ensure that things    *  don't get broken as we write out and read back in again    * TODO - Make this work with 3+ runs     */
1, Line, //  TODO - support charts properly in usermodel 
1, Line, //  Workaround for XMLBEANS-512 - ensure that when we parse    the file, we start with a fresh XML Parser each time,    and avoid the risk of getting a SaxHandler that's in error 
1, Line, //  TODO: ok to ignore? 
1, Line, //  TODO ... read from graphics context??? 
1, Line, //  TODO Re-check sheet contents   TODO Re-check formula evaluation 
1, Line, //  TODO Fix the exception this incorrectly triggers  assertEquals(" $   - ",  cfUS.apply(Double.valueOf(0)).text);   TODO Fix these to not have an incorrect bonus 0 on the end   assertEquals(" "+pound+"   -  ", cfUK.apply(Double.valueOf(0)).text);  assertEquals(" -    "+euro+"  ", cfFR.apply(Double.valueOf(0)).text); 
1, JavaDoc, /*  * TODO Bring more of the logic over from XWPFParagraph  */
1, Line, //  TODO: assertEquals("Minimum row number is 0.", e.getMessage()); 
1, Line, //  FIXME (byte array properties not yet implemented): si.setThumbnail(P_THUMBNAIL); 
1, JavaDoc, /*      * Builds a Picture object for a Picture stored as     *  Escher.     * TODO We need to pass in the PICF data too somehow!      */
1, Line, //  Index the Parent Group chunks for easy lookup   TODO Is this the right way? 
1, Line, //  TODO Support IconSet + Other CFs with 2 rules          assertEquals(2, cf.getNumberOfRules());          cr = cf.getRule(0);          assertIconSetPercentages(cr, IconSet.GYR_3_TRAFFIC_LIGHTS_BOX, 0d, 33d, 67d);          cr = cf.getRule(1);          assertEquals(ConditionType.FORMULA, cr.getConditionType());          assertEquals(ComparisonOperator.NO_COMPARISON, cr.getComparisonOperation());          // TODO Why aren't these two the same between formats? 
1, Line, //  TODO Look up more of these in the latest [MS-XLS] doc and move to getBiffName 
1, Line, //  TODO: better exception class 
1, Line, //  TODO: check why we always clear this ... 
1, Line, //  TODO - enable XSSF test 
1, Line, //  TODO: to be validated ...   like anisotropic, but use x-axis as reference 
1, Line, //  Tricky, not stored directly in poifs   TODO 
1, Line, // TODO add other shape types which can not contain text 
1, Block, /*  find a better solution  */
1, Line, //  TODO Decode the value into an offset   TODO Look up the chunk based on that 
1, JavaDoc, /*      * Test of getPath method, of class DConRefRecord.     * @todo different types of paths.      */
1, Line, //             // TODO - trivial differences in ContinueRecord break locations              // Sample data should be checked against what most recent Excel version produces.              // maybe tweaks are required in ContinuableRecordOutput              assertArrayEquals(origData, ser_output);          } 
1, JavaDoc, /*  @todo handle cell shading */
1, Line, //  TODO: good to ignore? 
1, Line, //  TODO: is "velvetSweatshop" the default password? 
1, Line, //  FIXME (byte array properties not yet implemented): assertEquals(P_, dsi.getHeadingPair()); 
1, Block, /*                  * too bad, this start field mark doesn't have corresponding end                 * field mark or separator field mark in fields table                  */
1, Line, //  TODO Load element with XMLBeans or dynamic table   TODO Check every element/namespace for compliance 
1, Line, //  something went wrong. just print the whole stack trace 
1, Line, //  To do: Excel places restrictions on the available operations within a list formula.   Some things like union and intersection are not allowed. 
1, Line, //  TODO: actually evaluate the formula / NPE checks 
1, Line, // Given that we basically iterate through the rows in order,  For a performance improvement, it would be better to return an instance of  an iterator and use that instance throughout, rather than recreating one and  having to move it to the right position. 
1, Line, //  TODO - do we need "Workbook.records.remove(...);" similar to that in Workbook.removeName(int namenum) {}? 
1, Line, //  Tricky:   fourth arg supplied but evaluates to blank   this does not get the default value 
1, Line, //  bad because zero is not a valid row number   this should get parsed as "B1" 
1, Line, //  TODO - Handle CRC checking on the output side 
1, Line, //  WARNING - this is wrong!   The file name should be showing, but bug #45970 is fixed 
1, Line, //  not available here, unless it exists and is unimplemented in cfRuleRecord 
1, Line, //  TODO: support inline table style 
1, Line, //  TODO Shouldn't it become [2] like the others? 
1, Line, //  TODO Detect if it is multi-valued, since if it is   then even fixed-length strings store their multiple   values in another chunk (much as variable length ones) 
1, Line, //  TODO avoid StringIndexOutOfBounds 
1, Line, //  TODO Some files, such as TestVisioWithCodepage.vsd, are currently   triggering this for values that don't look like codepages   See Bug #52258 for details 
1, Line, //  TODO - are these ~Field used / necessary 
1, JavaDoc, /*      * TODO - parse conditional format formulas properly i.e. produce tRefN and tAreaN instead of tRef and tArea     * this call will produce the wrong results if the formula contains any cell references     * One approach might be to apply the inverse of SharedFormulaRecord.convertSharedFormulas(Stack, int, int)     * Note - two extra parameters (rowIx &amp; colIx) will be required. They probably come from one of the Region objects.     *     * @param formula  The formula to parse, excluding the leading equals sign.     * @param sheet  The sheet that the formula is on.     * @return <code>null</code> if <tt>formula</tt> was null.      */
1, Line, //  can this clumsy generic syntax be improved? 
1, Line, //  TODO: check if issuerName is different on getTBSCertificate   issuerName = PrincipalUtil.getIssuerX509Principal(certificate).getName().replace(",", ", "); 
1, JavaDoc, /*      * @param fcStart The start of the text for this property, in characters.     * @param fcEnd   The end of the text for this property, in characters.     * @param buf     FIXME: Old documentation is: "grpprl The property description in compressed form."      */
1, Line, //  TODO: calculate integrity hmac while reading the stream   for a post-validation of the data 
1, Line, //  workaround for not having the vmlDrawing filled 
1, Line, //  not implemented ... only for OLE objects in the specs 
1, Line, //  see 2.3.4.9 Password Verification (Standard Encryption)   ... The number of bytes used by the encrypted Verifier hash MUST be 32 ...   TODO: check and trim/pad the hashes to 32 
1, Line, //  TODO Shouldn't we use XWPFNumbering or similar here?   TODO Make it easier to change 
1, JavaDoc, /*      * Chooses a new boolean value for the cell when its type is changing.<p>     *     * Usually the caller is calling setCellType() with the intention of calling     * setCellValue(boolean) straight afterwards.  This method only exists to give     * the cell a somewhat reasonable value until the setCellValue() call (if at all).     * TODO - perhaps a method like setCellTypeAndValue(CellType, Object) should be introduced to avoid this      */
1, Line, //  TODO: update this test for meaningful functional behavior 
1, JavaDoc, /*  @todo handle word defined table styles */
1, JavaDoc, /*      * Determines if there is a page break at the indicated row     * @param row FIXME: Document this!     * @return FIXME: Document this!      */
1, Line, //  TODO Identify if we're doing 1900 or 1904 date windowing 
1, Line, //  TODO - not a real Ptg   0x01   0x02   0x03   0x04   0x05   0x06   0x07   0x08   0x09   0x0a   0x0b   0x0c   0x0d   0x0e   0x0f   0x10   0x11   0x12   0x13   0x14   0x15   0x16 
1, Line, // HACK: do a "cheat" clone, see Record.java for more information 
1, Block, /*              * it is not very good, but what can do without breaking current             * API? --sergey              */
1, Line, //  as the integrity hmac needs to contain the StreamSize,   it's not possible to calculate it on-the-fly while buffering   TODO: add stream size parameter to getDataStream() 
1, Line, //  TODO - c2 unused but changing next line ('c'->'c2') causes test to fail 
1, Line, //  TODO: what is the reaction for readOnly=false and styles.isEmpty()? 
1, JavaDoc, /* 	 * Formats the given numeric of date cells contents as a String, in as	 * close as we can to the way that Excel would do so. Uses the various	 * format records to manage this.	 *	 * TODO - move this to a central class in such a way that hssf.usermodel can	 * make use of it too	 * 	 * @param cell the cell	 * 	 * @return the given numeric of date cells contents as a String	  */
1, Line, //  XOR-Obfuscation   TODO: XOR-Obfuscation is currently flawed - although the de-/obfuscation initially works,   it suddenly differs from the result of encrypted files via Office ...   and only very small files can be opened without file validation errors 
1, Line, //  Workaround   sheet.addIgnoredErrors(new CellReference(cell.getRowIndex(), cell.getColumnIndex(), false, false),          IgnoredErrorType.NUMBER_STORED_AS_TEXT); 
1, JavaDoc, /*      * Normalize a URI/part name     * TODO: find a better way ...      */
1, Line, //  TODO: The colors don't match 100% the results of Powerpoint, maybe because we still   operate in sRGB and not scRGB ... work in progress ... 
1, Line, //  Work out what to add the picture to, then add both the    picture and the relationship for it   TODO Should we have an interface for this sort of thing? 
1, Line, //  XXX: shall we support fill? 
1, Line, //  TODO: case-sensitive? 
1, Line, //  TODO: find out how we can find the mastersheet base on the slide layout type, i.e.   getSlideRecord().getSlideAtom().getSSlideLayoutAtom().getGeometryType() 
1, Line, //  TODO: close() re-writes the sample-file?! Resort to revert() for now to close file handle... 
1, Line, //  TODO Fix this to convert line to equivalent value, or deprecate this in 
1, Line, //  TODO: implement support for denormalized XMLs (see   OpenOffice part 4: chapter 3.5.1.7) 
1, JavaDoc, /*      * Check if cell range A contains cell range B (B <= A)     *      * TODO: move this into {@link CellRangeAddressBase}     *      * @param crA cell range A     * @param crB cell range B     * @return true if cell range A contains cell range B      */
1, Line, //  Check for bits that only apply when attached to a core document   TODO Make this nicer by tracking the XWPFFootnotes directly 
1, JavaDoc, /*      * TODO - would not be required if calling code used RecordStream or similar      */
1, Line, //  TODO: handle srcUnit 
1, Line, //  TODO: What is this? 
1, Line, //  TODO - simplify logic using a generalised record ordering 
1, Line, //  FIXME: (performance optimization) this should be moved outside the for-loop so that comments only needs to be iterated over once. 
1, Line, //  FIXME: serves same purpose as org.apache.poi.xssf.usermodel.XSSFEvaluationSheet$CellKey 
1, Line, //  FIXME: can these be merged with {@link CellType}?   are the numbers specific to the HSSF formula record format or just a poor-man's enum? 
1, JavaDoc, /*      * FIXME:     * bug 58779: Closing an XMLSlideShow that was created with {@link SlideShowFactory#create(File)} modifies the file     *     * @param filename the sample filename or full path of the slideshow to check before and after closing     * @param ss the slideshow to close or revert      */
1, Line, //  XXX: temporary workaround for old Word95 document 
1, Line, //  TODO - check the contents 
1, Line, //  tricky: indexing outside of A10:A12 
1, Line, //  This is not a very useful test as written. It is not worth the execution time for a unit test 
1, Line, //  TODO: implement! 
1, Line, //  TODO This should be 2, but we don't support CFEX formattings yet, see #58149 
1, Line, //  TODO: Check for NaN 
1, Line, //  TODO: fix me 
1, Line, //  TODO: support rich text fragments 
1, Line, //  TODO: dead fields? 
1, Line, //  TODO: some documents fail currently...  XSSFFormulaEvaluator evaluator = new XSSFFormulaEvaluator(wb);  evaluator.evaluateAll(); 
1, Line, //  TODO Are these right? 
1, Line, //  TODO: any properties??? 
1, Line, //  FIXME (byte array properties not yet implemented): assertEquals(P_, dsi.getDocparts()); 
1, Line, // this is a complete hack.  The challenge is that there  can be many 0 length or junk streams that are uncompressed  look in the first 20 characters for "Attribute" 
1, Line, // TODO: it is possible to have an SDT that contains a cell in within a row  need to modify this code so that it pulls out SDT wrappers around cells, too. 
1, Line, //  TODO: implement setting bullet color to null 
1, Line, // TODO: Convert this to generate an AreaReference 
1, Line, //  TODO: fails XMLExportTest, is this ok? 
1, Line, //  FIXME (byte array properties not yet implemented): dsi.setHeadingPair(P_HEADING_PAIR); 
1, JavaDoc, /*      * tests that the create record function returns a properly      * constructed record in the case of a continued record.     * TODO - need a real world example to put in a unit test      */
1, Line, //  casting here is wrong, but there's no other way of getting the value,   as it doesn't seem to be exposed by complex types (even though this   is a mixed type) 
1, Line, //  TODO - prune this method out of the hierarchy 
1, Line, //  wrong size 
1, Line, //  TODO: check why original bitmaps scale/behave differently to vector based images 
1, Line, //  TODO Could we do the read-only case with MapMode.PRIVATE instead?   See https://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.MapMode.html#PRIVATE   Or should we have 3 modes instead of the current boolean -     read-write, read-only, read-to-write-elsewhere?  
1, Line, //  TODO: find out character style for empty, but bulleted/numbered lines 
1, JavaDoc, /*      * Retrieves the region at the row/column indicated     * @param main FIXME: Document this!     * @return The Break or null if no break exists at the row/col specified.      */
1, Line, //  this is not implemented yet 
1, Line, //  TODO - refactor cell reference parsing logic to one place.   Current known incarnations:     FormulaParser.GetName()     CellReference.parseSheetName() (here)     AreaReference.separateAreaRefs()     SheetNameFormatter.format() (inverse) 
1, Line, //  FIXME (byte array properties not yet implemented): assertEquals(P_THUMBNAIL, si.getThumbnail()); 
1, Line, //  TODO: fix line width calculation 
1, Line, //  NOTE: This is currently based on current behavior of POI, somehow   what POI returns in the calls to collapsed/hidden is not fully matching    the examples in the spec or I did not fully understand how POI stores the data internally... 
1, Line, //  I do not really like it!! 
1, Line, //  TODO - replace no-arg constructor with this logic 
1, JavaDoc, /*      * Determines if there is a page break at the indicated column     * @param column FIXME: Document this!     * @return FIXME: Document this!      */
1, Line, //  hack because I can't figure out how to get XMLBeans to parse a sub-element in a standalone manner 
1, JavaDoc, /*                      * TODO: make sense of the remaining bytes                     * According to the spec they consist of:                     * 1. 16-byte  GUID: This field MUST equal                     *    {0xF4815879, 0x1D3B, 0x487F, 0xAF, 0x2C, 0x82, 0x5D, 0xC4, 0x85, 0x27, 0x63}                     * 2. Serial version, this field MUST equal 0 if present.                     * 3. URI Flags                      */
1, Line, //  TODO: implement second operation based on playback device context 
1, JavaDoc, /* 	 * TODO - use simple JDK methods on {@link File} instead:<br>	 * {@link File#getParentFile()} instead of {@link FileHelper#getDirectory(File)	 * {@link File#getName()} instead of {@link FileHelper#getFilename(File)	  */
1, Line, //  TODO implement or throw exception if not supported 
1, Line, //  TODO - RowRecord column boundaries need to be updated for cell comments too 
1, Line, // The token_1_columns and token_2_rows do not follow the documentation.  The number of physical rows and columns is actually +1 of these values.  Which is not explicitly documented. 
1, Line, //  TODO - do we need "this.records.remove(...);" similar to that in this.removeName(int namenum) {}? 
1, Line, //  FIXME: this may be faster if it looped over array formulas directly rather than looping over each cell in   the region and searching if that cell belongs to an array formula 
1, Line, //  TODO: is immutable ??? 
1, Line, // passing HSSFRichTextString is incorrect 
1, Line, //  workaround for IBM JDK assigning the classname to the lowercase instance provided by Definer!?!   I could not find out why that happens, the wrong assignment seems to be done somewhere deep inside Ant itself   or even in IBM JDK as Oracle JDK does not have this problem. 
1, Line, //  Check the CF colours   TODO 
1, Line, //  FIXME: should be protected   FindBugs, category MALICIOUS_CODE, FI_PUBLIC_SHOULD_BE_PROTECTED   A class's finalize() method should have protected access, not public 
1, Line, //                     // TODO - would like to keep the chart aggregate packed, but one unit test needs attention                      records.add(chartAgg); 
1, JavaDoc, /*      * A protected sheet with comments, when written out by     * POI, ends up upsetting excel.     * TODO Identify the cause and add extra asserts for     * the bit excel cares about      */
1, JavaDoc, /*      * TODO - while this is internally consistent, I'm not     *  completely clear in all cases what it's supposed to     *  be doing... Someone who understands the goals a little     *  better should really review this!      */
1, JavaDoc, /*  * A variable length {@link PropertyValue} that is backed by a {@link Chunk} * TODO Provide a way to link these up with the chunks  */
1, Block, /*         //TODO: figure out why this isn't working        data[0] = (byte)0xF9;        data[1] = (byte)0xD8;        assertCharEquals('\u88CF', data);      */
1, Line, //  TODO: implement TextCFException10 structure 
1, Line, //  TODO - update OOO document to include this value 
1, Block, /*              * YK: reading the ClipboardData packet (VT_CF) is not quite             * correct. The size of the data is determined by the first four             * bytes of the packet while the current implementation calculates             * it in the Section constructor. Test files in Bugzilla 42726 and             * 45583 clearly show that this approach does not always work. The             * workaround below attempts to gracefully handle such cases instead             * of throwing exceptions.             *             * August 20, 2009              */
1, Line, //  TODO - this code probably never executes 
1, JavaDoc, /*      *      * @return the blur radius of the shadow     * TODO: figure out how to make sense of this property when rendering shadows       */
1, Line, //  TODO - problems with OBJ sub-records stream   MS spec says first sub-record is always CommonObjectDataSubRecord,   and last is always EndSubRecord. OOO spec does not mention ObjRecord(0x005D).   Existing POI test data seems to violate that rule. Some test data   seems to contain garbage, and a crash is only averted by stopping at   what looks like the 'EndSubRecord' 
1, Line, //  @deprecated 3.15 beta 2. getVerticalAlignment will only work on VerticalAlignment enums instead of codes in the future. 
1, Block, /* 	 * TODO - these are all formulas which currently (Apr-2008) break on ooxml 	  */
1, Line, //  FIXME (byte array properties not yet implemented): static final byte[] P_THUMBNAIL = new byte[123]; 
1, Line, //  TODO - if we are confident that this sanity check is not required, we can remove 'value' from plain value cache entry 
1, Line, // TODO: simplify this to get ibody elements in order 
1, Line, //  TODO: replace it, by applyTransform???? 
1, Line, //  This one defines it   TODO Save it somewhere 
1, JavaDoc, /*  * This enumeration value indicates the type of vertical alignment for a cell, i.e., * whether it is aligned top, bottom, vertically centered, justified or distributed. *  * <!-- FIXME: Identical to {@link org.apache.poi.ss.usermodel.VerticalAlignment}. Should merge these to * {@link org.apache.poi.common.usermodel}.VerticalAlignment in the future. -->  */
1, Line, //  TODO - bug elsewhere in POI - something wrong with encoding of NOT() function 
1, Line, //  FIXME: remove type casting when copyCellFrom(Cell, CellCopyPolicy) is added to Cell interface 
1, Block, /*  This is case-sensitive. Is that correct?  */
1, Line, //  can you believe it? excel returns nper as a fraction!?? 
1, Line, //  Some files from Crystal Reports lack the is16BitUnicode byte    the remaining fields, which is naughty 
1, Line, //  TODO this needs to be migrated out into section code 
1, Line, //  TODO should we have this stuff in the FormulaEvaluator? 
1, Line, // Had to add this and TIME_ZONE_PAT to handle tz with colons.  When we move to Java 7, we should be able to add another  date format to DATE_FORMATS that uses XXX and get rid of this  and TIME_ZONE_PAT   TODO Fix this after the Java 7 upgrade 
1, JavaDoc, /*      * Make sure the DN is encoded using the same order as present     * within the certificate. This is an Office2010 work-around.     * Should be reverted back.     *     * XXX: not correct according to RFC 4514.     *     * @return when true, the issuer DN is used instead of the issuer X500 principal      */
1, Line, //  TODO: check if approximation via rotating only the bounds (instead of the shape) is sufficient 
1, Line, //  This includes text booleans "TRUE" and "FALSE".  They are not valid. 
1, JavaDoc, /*  * This class performs a D* calculation. It takes an {@link IDStarAlgorithm} object and * uses it for calculating the result value. Iterating a database and checking the * entries against the set of conditions is done here. * * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */
1, Line, //  TODO Fix up for Word 6/95 
1, Line, // TODO: What is this? 
1, JavaDoc, /*      * Convert a string to {@link java.net.URI}     *     * If  part name is not a valid URI, it is resolved as follows:     * <p>     * 1. Percent-encode each open bracket ([) and close bracket (]).</li>     * 2. Percent-encode each percent (%) character that is not followed by a hexadecimal notation of an octet value.</li>     * 3. Un-percent-encode each percent-encoded unreserved character.     * 4. Un-percent-encode each forward slash (/) and back slash (\).     * 5. Convert all back slashes to forward slashes.     * 6. If present in a segment containing non-dot (?.?) characters, remove trailing dot (?.?) characters from each segment.     * 7. Replace each occurrence of multiple consecutive forward slashes (/) with a single forward slash.     * 8. If a single trailing forward slash (/) is present, remove that trailing forward slash.     * 9. Remove complete segments that consist of three or more dots.     * 10. Resolve the relative reference against the base URI of the part holding the Unicode string, as it is defined     * in ?5.2 of RFC 3986. The path component of the resulting absolute URI is the part name.     *</p>     *     * @param   value   the string to be parsed into a URI     * @return  the resolved part name that should be OK to construct a URI     *     * TODO YK: for now this method does only (5). Finish the rest.      */
1, JavaDoc, /*      * Determines if there is a page break at the indicated column     *     * @param column FIXME: Document this!     * @return FIXME: Document this!      */
1, Line, // TODO: move test file to framework and fix this 
1, JavaDoc, /* 	 * The example file attached to bugzilla 45046 is a clear example of Name records being present	 * without an External Book (SupBook) record.  Excel has no trouble reading this file.<br>	 * TODO get OOO documentation updated to reflect this (that EXTERNALBOOK is optional).	 *	 * It's not clear what exact steps need to be taken in Excel to create such a workbook	  */
1, Line, //  TODO Fix this, we are randomly adding a 0 at the end that shouldn't be there  assertEquals(" $    -   ", dfUS.formatRawCellContents( 0.0, -1, "_-$* #,##0.00_-;-$* #,##0.00_-;_-$* \"-\"??_-;_-@_-")); 
1, Line, //  TODO Add methods to allow adding a HyperlinkRun or a FieldRun 
1, Line, //  then iterate through the scratchpad renderers     this could be nicely implemented via a j.u.ServiceLoader, but OSGi makes things complicated ...   https://blog.osgi.org/2013/02/javautilserviceloader-in-osgi.html 
1, Line, //  TODO Discover if these older documents can ever hold Unicode Strings?    (We think not, because they seem to lack a Piece table)      What we have here is a wretched hack.  We need to figure out    how to get the correct charset for the doc. 
1, JavaDoc, /* 	 * Number rendering examples as observed from Excel.	 * TODO - some are currently disabled because POI does not pass these cases yet	  */
1, Line, //  copy attributes, as they might be removed by merging with the new column   TODO: check if this fix is really necessary or if the sweeping algorithm   in addCleanColIntoCols needs to be adapted ... 
1, Line, // TODO: figure out why these two aren't passing  assertContains(txt, "\u2019\u0078 block2");//make sure smart quote is extracted correctly 
1, Line, //  disabled test from superclass   TODO - support shifting of page breaks 
1, Line, //  TODO: check for recursive loops, when color getter also reference   a different color type 
1, JavaDoc, /*  * Types of ignored workbook and worksheet error. *  * TODO Implement these for HSSF too, using FeatFormulaErr2, *  see bugzilla bug #46136 for details  */
1, Line, //  TOOD: get a real example file ... to actual test the FBSE entry   not sure where the foDelay block is 
1, Line, //  TOOD:   - set width according unit type   - provide logic for different start and end cap   - provide standard caps like diamondd   - support custom caps 
1, JavaDoc, /*  * Format a value according to the standard Excel behavior.  This "standard" is * not explicitly documented by Microsoft, so the behavior is determined by * experimentation; see the tests. * <p> * An Excel format has up to four parts, separated by semicolons.  Each part * specifies what to do with particular kinds of values, depending on the number * of parts given: * <dl> * <dt>One part (example: <tt>[Green]#.##</tt>)</dt> * <dd>If the value is a number, display according to this one part (example: green text, * with up to two decimal points). If the value is text, display it as is.</dd> *  * <dt>Two parts (example: <tt>[Green]#.##;[Red]#.##</tt>)</dt> * <dd>If the value is a positive number or zero, display according to the first part (example: green * text, with up to two decimal points); if it is a negative number, display * according to the second part (example: red text, with up to two decimal * points). If the value is text, display it as is.</dd> *  * <dt>Three parts (example: <tt>[Green]#.##;[Black]#.##;[Red]#.##</tt>)</dt> * <dd>If the value is a positive * number, display according to the first part (example: green text, with up to * two decimal points); if it is zero, display according to the second part * (example: black text, with up to two decimal points); if it is a negative * number, display according to the third part (example: red text, with up to * two decimal points). If the value is text, display it as is.</dd> *  * <dt>Four parts (example: <tt>[Green]#.##;[Black]#.##;[Red]#.##;[@]</tt>)</dt> * <dd>If the value is a positive number, display according to the first part (example: green text, * with up to two decimal points); if it is zero, display according to the * second part (example: black text, with up to two decimal points); if it is a * negative number, display according to the third part (example: red text, with * up to two decimal points). If the value is text, display according to the * fourth part (example: text in the cell's usual color, with the text value * surround by brackets).</dd> * </dl> * <p> * A given format part may specify a given Locale, by including something *  like <tt>[$$-409]</tt> or <tt>[$&pound;-809]</tt> or <tt>[$-40C]</tt>. These *  are (currently) largely ignored. You can use {@link DateFormatConverter} *  to look these up into Java Locales if desired. * <p> * In addition to these, there is a general format that is used when no format * is specified. *  * TODO Merge this with {@link DataFormatter} so we only have one set of *  code for formatting numbers. * TODO Re-use parts of this logic with {@link ConditionalFormatting} / *  {@link ConditionalFormattingRule} for reporting stylings which do/don't apply * TODO Support the full set of modifiers, including alternate calendars and *  native character numbers, as documented at https://help.libreoffice.org/Common/Number_Format_Codes  */
1, JavaDoc, /*      * TODO - (May-2008) fix subclasses of AreaPtg 'AreaN~' which are used in shared formulas.     * see similar comment in ReferencePtg      */
1, Line, //  TODO: write text? 
1, Line, //  TODO Identify what excel doesn't like, and check for that 
1, JavaDoc, /*  * Helper class to handle the Visio compatible *  streaming LZW compression. * Need our own class to handle keeping track of the *  code buffer, pending bytes to write out etc. *   * TODO Fix this, as it starts to go wrong on *  large streams   */
1, Line, //  Excel supports 2+ part conditional data formats, eg positive/negative/zero,    or (>1000),(>0),(0),(negative). As Java doesn't handle these kinds    of different formats for different ranges, just +ve/-ve, we need to     handle these ourselves in a special way.   For now, if we detect 2+ parts, we call out to CellFormat to handle it   TODO Going forward, we should really merge the logic between the two classes 
1, JavaDoc, /*      * TODO: Additionally, the lbPlyPos (position_of_BOF) field of the BoundSheet8 record MUST NOT be encrypted.     *     * @return <code>true</code> if record type specified by <tt>sid</tt> is never encrypted      */
1, Line, //  TODO Refactor this to fetch dir then do the rest 
1, Line, //  TODO - use a stronger typed exception for this condition   expected during successful test 
1, Line, //  TODO: check for SVG copying 
1, Line, // this is pure hackery for specifying the font  this happens to work on this test file, but you need to 
1, Line, //  why?  Why ask why?  But don't drink bud dry as its a really   crappy beer, try the czech "Budvar" beer (which is the real   budweiser though its ironically good...its sold in the USs   as czechvar  --- odd that they had the name first but can't   use it)... 
1, Line, //  FIXME: replace with org.apache.commons.collections.map.CaseInsensitiveMap 
1, Line, //  TODO Fix this, we are randomly adding a 0 at the end that shouldn't be there  assertEquals("     -   ", dfUS.formatRawCellContents(0.0, -1, "_-* #,##0.00_-;-* #,##0.00_-;_-* \"-\"??_-;_-@_-")); 
1, Line, //  TODO: check if paragraph/chars can be handled the same ... 
1, Line, //  TODO sometimes last byte is non-zero 
1, Line, //  TODO Should the colours be slightly different between formats? Would CFEX support help for HSSF? 
1, Line, //  TODO - adjust data validations 
1, Line, //  TODO: check if this is Java 9 compatible ... 
1, Line, //  TODO Return a more specialised form of this, see bug #56752   Should include the cached values, for in case that book isn't available 
1, Line, //  Get more text   TODO 
1, Block, /* 		 * ex47747-sharedFormula.xls is a heavily cut-down version of the spreadsheet from		 * the attachment (id=24176) in Bugzilla 47747.  This was done to make the sample		 * file smaller, which hopefully allows the special data encoding condition to be		 * seen more easily.  Care must be taken when modifying this file since the		 * special conditions are easily destroyed (which would make this test useless).		 * It seems that removing the worksheet protection has made this more so - if the		 * current file is re-saved in Excel(2007) the bug condition disappears.		 *		 *		 * Using BiffViewer, one can see that there are two shared formula groups representing		 * the essentially same formula over ~20 cells.  The shared group ranges overlap and		 * are A12:Q20 and A20:Q27.  The locator cell ('first cell') for the second group is		 * Q20 which is not the top left cell of the enclosing range.  It is this specific		 * condition which caused the bug to occur		  */
1, Line, //  TODO to move a table from one sheet to another   CTWorksheet.getTableParts needs to be updated on both sheets 
1, JavaDoc, /*  * Implementation for the Excel function IF * <p> * Note that Excel is a bit picky about the arguments to this function, *  when serialised into {@link Ptg}s in a HSSF file. While most cases are *  pretty chilled about the R vs V state of {@link RefPtg} arguments, *  for IF special care is needed to avoid Excel showing #VALUE. * See bug numbers #55324 and #55747 for the full details on this. * TODO Fix this...  */
1, Line, // force all children to commit their changes into the underlying OOXML Package   TODO Shouldn't they be committing to the new one instead? 
1, Line, //  Trigger the onDocumentRead for all the child parts   Otherwise we'll hit issues on Styles, Settings etc on save   TODO: Refactor this to not need to access protected method   from other package! Remove the static helper method once fixed!!! 
1, Line, //  TODO - probably shouldn't initialize area ref when text is really a cell ref   Need to fix some named range stuff to get rid of this 
1, Line, //  TODO: find out, how to set this value 
1, Line, //  @Ignore("TODO Work out why the Thu 21st vs Monday 25th problem is occurring and fix") 
1, JavaDoc, /*  * Collection of convenience chunks for standard parts of the MSG file. *  * Not all of these will be present in any given file. *  * A partial list is available at: * http://msdn.microsoft.com/en-us/library/ms526356%28v=exchg.10%29.aspx *  * TODO Deprecate the public Chunks in favour of Property Lookups  */
1, Line, //  TODO Streaming write support   TODO  then convert fixed sized write to use streaming internally   TODO Append write support (probably streaming) 
1, Line, //  TODO - what about values between (10<sup>14</sup>-0.5) and (10<sup>14</sup>-0.05) ? 
1, JavaDoc, /*      * TODO Fix these so that they work      */
1, Line, //  workaround for office 2007 pretty-printed .rels files 
1, Line, // TODO use the correct SpreadsheetVersion 
1, Line, //  XXX: sprm code 0x6428 is sprmPBrcBetween80, but accessed property linked to sprmPBrcBar80 (0x6629) 
1, Line, //  TODO Provide a way to get the one with the filename 
1, JavaDoc, /*      * Should be able to write then read formulas with references     *  to cells in other files, eg '[refs/airport.xls]Sheet1'!$A$2     *  or 'http://192.168.1.2/[blank.xls]Sheet1'!$A$1 .     * Additionally, if a reference to that file is provided, it should     *  be possible to evaluate them too     * TODO Fix this to evaluate for XSSF     * TODO Fix this to work at all for HSSF      */
1, Line, //  not sure why we allow this, COUNTIFS() is only available   in OOXML, it was introduced with Office 2007 
1, Line, //  column F: formula   TODO formulas are not yet supported  in SXSSF  cell.setCellFormula("SUM(A" + (rowIndex+1) + ":E" + (rowIndex+1)+ ")"); 
1, JavaDoc, /*  * Simple interface describing both {@link XWPFParagraph} * and {@link XWPFSDT} * <p> * TODO Should this be based on / extend {@link Paragraph}?  */
1, Line, //  This lacks the 8 byte header size 
1, Line, //  TODO: support headers 
1, Line, // YK: TODO document each alignment option 
1, Line, //  Need to extend the stream   TODO Replace this with proper append support   For now, do the extending by hand... 
1, Line, //  @deprecated 3.15 beta 2. getHorizontalAlignment will only work on HorizontalAlignment enums instead of codes in the future. 
1, JavaDoc, /*      * Does this HSSFPatriarch contain a chart?     * (Technically a reference to a chart, since they     * get stored in a different block of records)     * FIXME - detect chart in all cases (only seems     * to work on some charts so far)      */
1, Line, //  TODO Is this right? 
1, JavaDoc, /* 	 * debug only	 * TODO - encapsulate	  */
1, Line, //  TODO: should this be supported?   shape.setShapeType(-1);   assertEquals(-1, shape.getShapeType());   shape.setShapeType(-1);   assertEquals(-1, shape.getShapeType()); 
1, Block, /*       * TODO - make HSSFComment more consistent when created vs read from file.      * Currently HSSFComment has two main forms (corresponding to the two constructors).   There      * are certain operations that only work on comment objects in one of the forms (e.g. deleting      * comments).      * POI is also deficient in its management of RowRecord fields firstCol and lastCol.  Those      * fields are supposed to take comments into account, but POI does not do this yet (feb 2009).      * It seems like HSSFRow should manage a collection of local HSSFComments       */
1, Line, //  TODO - what does '-1' mean here?  error check, bail out gracefully! 
1, Line, //  TODO: handle vflip/hflip 
1, Line, //  TODO - render full row and full column refs properly 
1, Line, //  FIXME (byte array properties not yet implemented): static final byte[]  P_HEADING_PAIR = new byte[123]; 
1, Line, //  TODO: init classId directly in the constructor when old statics have been removed from ClassID 
1, Line, //  TODO - this test probably isn't testing much anymore 
1, Line, //  TODO: anything else, we don't handle yet, such as top 10 
1, Line, //  index seems like what index the cellstyle is in the list of styles for a workbook.   not good to compare on! 
1, Line, //  FIXME: if cell belongs to a merged region, some of the merged region may have fallen outside of the random access window   In this case, getting the column width may result in an error. Need to gracefully handle this. 
1, Line, //  TODO - instantiable superclass  arbitrarily selected; may need to increase 
1, Block, /*  * Notes: * Duplicate x values don't work most of the time because of the way the * math library handles multiple regression. * The math library currently fails when the number of x variables is >= * the sample size (see https://github.com/Hipparchus-Math/hipparchus/issues/13).  */
1, Line, //  TODO - find a way to choose the correct date format 
1, Line, //  TODO This isn't right, but it's what we currently generate.... 
1, Line, //  currently not implemented 
1, Line, //  TODO: charset conversion (see ecma spec)  
1, Line, //  {   /*   * Page 31:   *   * main document must be found by examining the piece table entries   * from the 0th piece table entry from the piece table entry that   * describes cp=fib.ccpText.   */   // TODO: review   return new Range( _cpSplit.getMainDocumentStart(),   _cpSplit.getMainDocumentEnd(), this );   }     /*   * Page 31:   *   * "In a non-complex file, this means text of the: main document   begins   * at fib.fcMin in the file and continues through   * fib.fcMin+fib.ccpText."   */   int bytesStart = getFileInformationBlock().getFcMin();     int charsStart = getTextTable().getCharIndex( bytesStart );   int charsEnd = charsStart   + getFileInformationBlock().getSubdocumentTextStreamLength(   SubdocumentType.MAIN ); 
1, Line, //  FIXME: Most cells are not merged, so calling getCellWidth twice re-computes the same value twice.   Need to rewrite this to avoid unnecessary computation if this proves to be a performance bottleneck. 
1, Line, //  FIXME: replace with wb.close() when bug 58779 is resolved 
1, Line, //  FIXME (byte array properties not yet implemented): static final byte[]  P_DOCPARTS = new byte[123]; 
1, Line, //  it doesn't work to use just a color with transparency ... 
1, JavaDoc, /*  * Utilities to read hex from files. * TODO - move to test packages  */
1, Line, //  TODO Test for tick not bullet 
1, Line, //  TODO: check font group defaulting to Symbol 
1, Line, //  todo validate formula here, before changing the cell? 
1, Line, //  TODO: handle tile settings, currently the pattern is always streched 100% in height/width 
1, Line, // 	undocumented 
1, Line, //  TODO These values are suspected to be wrong... 
1, JavaDoc, /*      * A factory method allowing to create a conditional formatting rule     * with a cell comparison operator<p>     * TODO - formulas containing cell references are currently not parsed properly     *     * @param comparisonOperation - a constant value from     *		 <tt>{@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator}</tt>: <p>     * <ul>     *		 <li>BETWEEN</li>     *		 <li>NOT_BETWEEN</li>     *		 <li>EQUAL</li>     *		 <li>NOT_EQUAL</li>     *		 <li>GT</li>     *		 <li>LT</li>     *		 <li>GE</li>     *		 <li>LE</li>     * </ul>     * </p>     * @param formula1 - formula for the valued, compared with the cell     * @param formula2 - second formula (only used with     * {@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator#BETWEEN}) and     * {@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator#NOT_BETWEEN} operations)      */
1, Line, //  Note: Removal doesn't currently reset the first column.  It probably should but it doesn't. 
1, Line, // It hurts, hurts, hurts to create a new byte array for every record.  However, on a large Excel spreadsheet, this parser was 1/3 faster than  the ooxml sax parser (5 seconds for xssfb and 7.5 seconds for xssf.  The code is far cleaner to have the parser read all  of the data rather than having every component promise that it will read 
1, Line, //  Manually check to make sure file isn't corrupted   TODO: develop a process for occasionally manually reviewing workbooks   to verify workbooks are not corrupted 
1, Line, //  TODO How does XSSF encode this? 
1, Line, //  TODO: HorribleProxy can't convert array input params yet 
1, Line, //  TODO - full column references not rendering properly, absolute markers not present either 
1, Line, //  FIXME: Java 7+: use java.nio.Files#createTempDirectory 
1, Line, //  TODO - keep looping? Do we expect multiple matches? 
1, Block, /*      * TODO: data tables are stored at the workbook level in XSSF, but are bound to a single sheet.     *       The current code structure has them hanging off XSSFSheet, but formulas reference them     *       only by name (names are global, and case insensitive).     *       This map stores names as lower case for case-insensitive lookups.     *     * FIXME: Caching tables by name here for fast formula lookup means the map is out of date if     *       a table is renamed or added/removed to a sheet after the map is created.     *     *       Perhaps tables can be managed similar to PivotTable references above?      */
1, Line, //  TODO Fix this to not have an extra 0 at the end  assertEquals(pound+"   -  ", formatter.formatCellValue(zero)); 
1, Line, //  ignore... not implemented 
1, Line, //  TODO - check the formula once tables and 
1, JavaDoc, /*      * TODO: fix and enable      */
1, Line, //  @Ignore("TODO Work out why the Fri 22nd vs Monday 25th problem is occurring and fix") 
1, Line, //  XXX: It should be possible to derive this without concatenating the array, too. 
1, Block, /*      * This is the default Watermark paragraph; the only variable is the text message     * TODO: manage all the other variables      */
1, Line, // TODO defaults are different in HSSF and XSSF  assertTrue(sheet.getRowSumsBelow());  assertTrue(sheet.getRowSumsRight()); 
1, Line, //  FIXME: whitespace wasn't stripped 
1, Line, //  todo: test a manipulation on a package part, which is not signed   ... maybe in combination with #56164  
1, Line, //  TODO - is this right? 
1, Line, //  FIXME this should be changed to private and the class marked final once HSSFDateUtil can be removed 
1, Line, // TODO: default "guts" is different in HSSF and XSSF 
1, Line, //  work around issues with dates like 1989, which appear as "89" here 
1, Block, /*  TODO:             * The object specified by this record MUST be deleted from the EMF Object Table.             * If the deleted object is currently selected in the playback device context,             * the default object for that graphics property MUST be restored.              */
1, Line, //  TODO run more than once 
1, Line, //  TODO: if decimalPoint is null (-> index == -1), return the whole list? 
1, Line, //  TODO Add in the rest of the types 
1, Line, // YK: TODO: this is only a prototype 
1, Line, //  TODO: support formulas 
1, Line, //  TODO - add similar sanity check to ensure that Sheet.serializeIndexRecord() does not write mis-aligned offsets either 
1, Line, //  TODO: we've already scanned the records, why should this work any better now? 
1, Line, // TODO: remove old one 
1, Line, //  TODO: add other axis types 
1, Line, //  TODO - convert this to a RecordAggregate 
1, Line, // TODO: range checking  TODO: fill this out 
1, Line, //  TODO Make sense of the raw offset value 
1, Line, //  TODO Create according XWPFComment class, extending POIXMLDocumentPart 
1, Line, //  TODO: we need to find the two points for gradient - the problem is, which point at the outline   do you take? My solution would be to apply the gradient rotation to the shape in reverse   and then scan the shape for the largest possible horizontal distance 
1, Line, //  TODO move parseBoolean to OperandResolver 
1, Line, //  TODO: handle reset auto number indexes 
1, Line, //  TODO: Do these have a good home like o.a.p.openxml4j.opc.PackageNamespaces and PackageRelationshipTypes?   These constants should be common to all of POI and easy to use by other applications such as Tika 
1, Line, //  TODO Correct this, so that the filename is shown too, see bug #56742   This is what Excel itself shows  assertEquals("'56737.xls'!NR_Global_B2", cRefWName.getCellFormula()); 
1, Line, //  TODO verify the constructors 
1, Line, //  FIXME: breaks if address contains a sheet name or dollar signs from an absolute CellReference 
1, Line, //  TODO: check if that list can be replaced by idx = Math.max(idx,themeIdx) 
1, Line, //  ugly typecast - TODO - make spreadsheet version more easily accessible 
1, Line, //  FIXME: (performance optimization) this should be moved outside the for-loop so that hyperlinks only needs to be iterated over once. 
1, Line, //  workaround for IBMs cipher not resetting on doFinal 
1, Line, // TODO combine testRepeatingRowsAndColums() for HSSF and XSSF 
1, Line, //  TODO: there may be a better way to delegate this 
1, Line, //  TODO: check if this is atomic ... as transform() is probably called synchronized, it doesn't matter anyway 
1, Line, //  TODO: check for duplicate 
1, Line, //  TODO: this is not implemented ... please provide a sample, if it   ever happens to you, to come here ... 
1, Line, //  FIXME: This could be moved into LookupFunctionsTestCaseData.xls, which is tested by TestLookupFunctionsFromSpreadsheet.java 
1, Line, //  workaround for a call by XSLFSheet.importContent:   if we have already the same amount of child shapes 
1, Line, //  TODO - move these constants to test class (the only consumer) 
1, Line, //  column E: boolean   TODO booleans are shown as 1/0 instead of TRUE/FALSE 
1, Line, //  Get the hyperlinks   TODO: make me optional/separated in private function 
1, Line, //  TODO  support other types of objects 
1, Line, //  FIXME: we grew a column? 
1, Line, //  FIXME: These might affect the time zone due to daylight savings:  assertCalendarEquals(JAPAN_CALENDAR, LocaleUtil.getLocaleCalendar(2016, 00, 01));  assertCalendarEquals(JAPAN_CALENDAR, LocaleUtil.getLocaleCalendar(2016, 00, 01, 00, 00, 00)); 
1, Line, //  TODO: it seems HSSFSheet does not correctly remove comments from rows that are overwritten 
1, Line, //  FIXME: use org.apache.commons.collections.map.CaseInsensitiveMap 
1, Line, //  FIXME: if srcRows contains gaps or null values, clear out those rows that will be overwritten   how will this work with merging (copy just values, leave cell styles in place?) 
1, Line, //  some Records do not implement clone ?!    equals instead of instanceof is on purpose here to only skip exactly this class and not any derived ones 
1, Line, //  TODO: fix gradient types, this mismatches with the MS-ODRAW definition ...   need to handle (not only) the type (radial,rectangular,linear),   the direction, e.g. top right, and bounds (e.g. for rectangular boxes) 
1, Line, //  FIXME: is special behavior needed if srcRows and destRows belong to the same sheets and the regions overlap? 
1, JavaDoc, /*      * A factory method allowing to create a conditional formatting rule     * with a cell comparison operator<p>     * TODO - formulas containing cell references are currently not parsed properly     *     * @param comparisonOperation - a constant value from     *		 <tt>{@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator}</tt>: <p>     * <ul>     *		 <li>BETWEEN</li>     *		 <li>NOT_BETWEEN</li>     *		 <li>EQUAL</li>     *		 <li>NOT_EQUAL</li>     *		 <li>GT</li>     *		 <li>LT</li>     *		 <li>GE</li>     *		 <li>LE</li>     * </ul>     * </p>     * @param formula1 - formula for the valued, compared with the cell     * @param formula2 - second formula (only used with     * {@link org.apache.poi.ss.usermodel.ComparisonOperator#BETWEEN}) and     * {@link org.apache.poi.ss.usermodel.ComparisonOperator#NOT_BETWEEN} operations)      */
1, Line, //  TODO Do properly 
1, Line, //  This one uses a shared formula   TODO Retrieve the shared formula and tweak it to     match the current cell 
1, Line, //  FIXME: return Collections.unmodifiableList? 
1, JavaDoc, /*      * TODO: figure out why it fails with "RecordFormatException: 0 bytes written but getRecordSize() reports 80"      */
1, JavaDoc, /*  * Counts the number of cells that contain numeric data within *  the list of arguments. * * Excel Syntax * COUNT(value1,value2,...) * Value1, value2, ...   are 1 to 30 arguments representing the values or ranges to be counted. * * TODO: Check this properly matches excel on edge cases *  like formula cells, error cells etc  */
1, Line, // TODO apply the dataformat for this cell 
1, JavaDoc, /* @todo verify the constructors */
1, Line, //  partB contains SHEET_NAME_DELIMITER   TODO - are references like "Sheet1!A1:Sheet1:B2" ever valid?     FormulaParser has code to handle that. 
1, Line, // TODO analyze textCfException when have some test data 
1, JavaDoc, /*      * Resolves a cell or area reference dynamically.     * @param workbookName the name of the workbook containing the reference.  If <code>null</code>     * the current workbook is assumed.  Note - to evaluate formulas which use multiple workbooks,     * a {@link CollaboratingWorkbooksEnvironment} must be set up.     * @param sheetName the name of the sheet containing the reference.  May be <code>null</code>     * (when <tt>workbookName</tt> is also null) in which case the current workbook and sheet is     * assumed.     * @param refStrPart1 the single cell reference or first part of the area reference.  Must not     * be <code>null</code>.     * @param refStrPart2 the second part of the area reference. For single cell references this     * parameter must be <code>null</code>     * @param isA1Style specifies the format for <tt>refStrPart1</tt> and <tt>refStrPart2</tt>.     * Pass <code>true</code> for 'A1' style and <code>false</code> for 'R1C1' style.     * TODO - currently POI only supports 'A1' reference style     * @return a {@link RefEval} or {@link AreaEval}      */
1, Line, //  Ensure we get the right colours for these themes   TODO fix   assertEquals("FFEEECE1", wb.getTheme().getThemeColor(2).getARGBHex());   assertEquals("FF1F497D", wb.getTheme().getThemeColor(3).getARGBHex()); 
1, Line, //  TODO - "-1" is a special value being temporarily used for whole row and whole column area references.   so these checks are currently N.Q.R. 
1, Block, /*  FIXME (3): Ensure that at most "length" bytes are read.  */
1, Line, //  FIXME: CellReference is inconsistent 
1, Line, //  this is a bit of a hack, but it works 
1, Line, // TODO make the two variable below private! 
1, Line, //  TODO - junit to prove last arg must be srcColumnIndex and not srcRowIndex 
1, JavaDoc, /*      * Test disabled pending a fix in the formula evaluator     * TODO - create MissingArgEval and modify the formula evaluator to handle this      */
1, Line, //  TODO: check how to clone 
1, Line, //  TODO Delocalize specialized marshallers 
1, Line, //  TODO: This seems far more complex than it needs to be 
1, Line, //  TODO - this is messy   Not the most efficient way but the other way was causing too many bugs 
1, Line, //  create a new container   TODO: ... is this case really happening? 
1, Line, //  This bug is currently open. When this bug is fixed, it should not throw an AssertionError 
1, Line, //  TODO: determine master shape 
1, Line, // TODO: figure out how to convert SEG_QUADTO into SEG_CUBICTO 
1, Line, //  TODO Support OOXML-Strict, see bug #57699   xlsxStrict 
1, JavaDoc, /*  @todo handle paragraph postioning */
1, Line, //  TODO: this could/should be delegated to the Enum type, but that's in the usermodel package,   we may not want evaluation code there.  Of course, maybe the enum should go here in formula,   and not be returned by the SS model, but then we need the XSSF rule to expose the raw OOXML   type value, which isn't ideal either. 
1, Line, //  not implemented 
1, Line, //  Out flag is the wrong way round!   Length wise, we're 3 longer than we say, so the max len is 19   Endian wise, we're little endian, so 0x1234 is pos 0x312 
1, Line, //  TODO: eventually use caching here 
1, JavaDoc, /*      * Shifts rows between startRow and endRow n number of rows.     * If you use a negative number, it will shift rows up.     * Code ensures that rows don't wrap around<p>     *      * Additionally shifts merged regions that are completely defined in these     * rows (ie. merged 2 cells on a row to be shifted).<p>     *      * TODO Might want to add bounds checking here     *     * @param startRow               the row to start shifting     * @param endRow                 the row to end shifting     * @param n                      the number of rows to shift     * @param copyRowHeight          whether to copy the row height during the shift     * @param resetOriginalRowHeight whether to set the original row's height to the default     * @param moveComments           whether to move comments at the same time as the cells they are attached to      */
1, Line, //  FIXME: this looks very similar to getCellWithMerges below. Consider consolidating.   We should only be checking merged regions if useMergedCells is true. Why are we doing this for-loop? 
1, Line, //  Finally check the colours on the styles   TODO fix   assertEquals("FFEEECE1", cA4_EEECE1.getCellStyle().getFillForegroundXSSFColor().getARGBHex());   assertEquals("FF1F497D", cA5_1F497D.getCellStyle().getFillForegroundXSSFColor().getARGBHex()); 
1, Line, //  TODO: find a real charset mapping solution instead of hard coding for Wingdings 
1, Line, //  TOOD: check for correct placeholder handling - see org.apache.poi.hslf.model.Placeholder 
1, Line, //  TODO: inspect the CompObj record for more details, i.e. the content type 
1, Line, //  FIXME: A better exception class (IOException?) and message should be raised   indicating that the document could not be written because the output stream is closed.   see {@link org.apache.poi.openxml4j.opc.ZipPackage#saveImpl(java.io.OutputStream)} 
1, Line, //  TODO - 2 seems wrong (Jun 2008).  Maybe this method is not relevant 
1, Line, // FIXME: currently fails 
1, Block, /*              * TODO DO not use a coded constant, find the constant in the OOXML             * classes instead, as the child of type CT_Paragraph is defined in the             * OOXML schema as 'p'              */
1, Line, //  this is confusing: the rule is not connected to the sheet, changes are not applied 
1, Line, //  TODO: handle new HS_* enumeration values 
1, Line, //  TODO - fix case of negative subpattern differing from the    positive one by more than just the prefix+suffix, which    is all DecimalFormat supports...          assertEquals("(12.3)", dfUS.formatRawCellContents(-12.343, -1, p2dp_n1dp));          assertEquals("(12.3)", dfUS.formatRawCellContents(-12.343, -1, p2dp_n1dp_z0)); 
1, Line, //  TODO: Add DocumentProperties#equals ??? 
1, JavaDoc, /*  * Default Paragraph style, from which other styles will override * TODO Share logic with {@link XWPFParagraph} which also uses CTPPr  */
1, Line, //  @deprecated 3.15 beta 2. getFillPattern will only work on FillPatternType enums instead of codes in the future. 
1, Line, //  FIXME: inconsistent case-sensitivity 
1, JavaDoc, /*      * Why doesnt JUnit have a method like this for doubles?      * The current impl (3.8.1) of Junit has a retar*** method     * for comparing doubles. DO NOT use that.     * TODO: This class should really be in an abstract super class     * to avoid code duplication across this project.     * @param message     * @param baseval     * @param checkval      */
1, Line, //  TODO: instead of returning a BufferedImage, we might return a pair of raw data + image renderer   instead, so metafiles aren't pixelated, but directly written to the output graphics context 
1, Line, //  TODO Need to fetch / use format strings 
1, Line, //  sheet BOFs for sure   TODO - find out about chart BOFs 
1, Line, //  TOOO: tell the batik guys to use secure parsing feature 
1, Line, //  TODO: some documents fail currently...   Note - as of Bugzilla 48036 (svn r828244, r828247) POI is capable of evaluating   IntersectionPtg.  However it is still not capable of parsing it.   So FormulaEvalTestData.xls now contains a few formulas that produce errors here.  HSSFFormulaEvaluator evaluator = new HSSFFormulaEvaluator(wb);  evaluator.evaluateAll(); 
1, Line, //  TODO: find out where this -1 value comes from at #57820 (link to ms docs?) 
1, Line, //  TODO: calculate bounding rectangle on anchor and set off/ext correctly 
1, Line, //  TODO - what about MemNoMemPtg? 
1, Line, //  It is not wise to have such a wide catch clause - Exception is very   close to being at the top of the inheritance hierarchy - though it   will suffice for this example as it is really not possible to recover   easilly from an exceptional set of circumstances at this point in the   program. It should however, ideally be replaced with one or more 
1, Line, //  TODO: There's probably a better way to do this 
1, Line, //  TODO: Verify that the version syntax is valid by parsing with a version-aware parser like   org.apache.maven.artifact.versioning.DefaultArtifactVersion 
1, Line, //  TODO: placement id only "SHOULD" be unique ... check other placeholders on sheet for unique id 
1, Line, //  FIXME: add more tests to compare calendars, ignoring whether the set dates are equal 
1, Line, //  And sometimes they write out garbage :( 
1, Line, //  FIXME: use junit4 parametrization 
1, Line, //  TODO: check if a hyperlink already exists 
1, Line, //  FIXME: Verify that the footnote reference is w:endnoteReference, not w:footnoteReference 
1, Line, //  TODO: fix font height calculation    the height is given as font size + ascent + descent   as an approximation we reduce the height by a static factor  
1, Line, //  TODO - the last 2 bytes of formula data (8,0) seem weird.  They encode to ConcatPtg, UnknownPtg   UnknownPtg is otherwise not created by any other test cases 
1, Line, //  hack to pass boolean by ref into inner class 
1, Line, //  RGB Color   RGB Color   TODO: Add Pattern constants to record 
1, Line, //  FIXME: replace with SXSSFHyperlink if it ever gets created 
1, JavaDoc, /*      * Call this whenever cell values change in the workbook, so condional formats are re-evaluated      * for all cells.     * <p>     * TODO: eventually this should work like {@link EvaluationCache#notifyUpdateCell(int, int, EvaluationCell)}     * and only clear values that need recalculation based on the formula dependency tree.      */
1, Line, //       assertRefPtgA1('V', getPtgs(cell), 4); // FIXME! 
1, JavaDoc, /* 	 * From [MS-ODRAW].pdf sec 2.2.1<p>	 * TODO - make EscherRecordHeader {@link LittleEndianInput} aware and refactor with this	  */
1, Line, //  FIXME dsi.getHeadingPair(); 
1, Line, // TODO: figure out what this should be? 
1, Line, //  FIXME: add more tests to compare calendars, ignoring whether the dates are equal 
1, JavaDoc, /*      * A factory method allowing to create a conditional formatting rule with a formula.<br>     *     * The formatting rules are applied by Excel when the value of the formula not equal to 0.<p>     * TODO - formulas containing cell references are currently not parsed properly     * @param formula - formula for the valued, compared with the cell      */
1, Line, //  TODO: the link of the XLSF classes to the xml beans objects will   be broken, when the elements are parsed a second time.   Unfortunately, the xml schema type can't be set of the alternate   content element 
1, Line, //  the hyperlink extends over this text run, increase its length   TODO: the text run might be longer than the hyperlink 
1, JavaDoc, /*      * If a formula references cells or named ranges in another workbook,     *  but that isn't available at evaluation time, the cached values     *  should be used instead     * TODO Add the support then add a unit test     * See bug #56752      */
1, Line, //  TODO Are these getters correct? 
1, JavaDoc, /*  * Common interface for things that can occur * where a run (text with common stylings) can, * eg {@link XWPFRun} or {@link XWPFSDT}. * TODO More methods to follow shortly! * <p> * TODO Make this based on {@link CharacterRun}  */
1, JavaDoc, /*  @todo revisit this  */
1, Line, //  TODO Why isn't this seen as 10? 
1, Line, // TODO: needs test 
1, Line, // FIXME: how many tables are there in this spreadsheet?  FIXME: what is the table name?  FIXME: what is the table name? 
1, Line, // but is it really? shouldn't autosizing column E use "" from E1 and SHORT from E2? 
1, Line, //  TODO: documentation and behavior do not match here! 
1, Line, //  TODO Is this completely correct? 
1, Line, //  TODO - refactor cell reference parsing logic to one place.   Current known incarnations:      FormulaParser.GetName()     CellReference.separateRefParts()      AreaReference.separateAreaRefs() (here)     SheetNameFormatter.format() (inverse) 
1, Line, //  TODO: this only works for non-rotated tables 
1, Line, //  TODO - what does this line do? 
1, Line, //  TODO: reading cell comments via Sheet does not work currently as it tries    to access the underlying sheet for this, but comments are stored as   properties on Cells... 
1, Line, // remove nodes which are empty in order to keep the output xml valid   FIXME: what should be done if currentNode.getTextContent() is null? 
1, Line, //  TODO: implement 
1, Line, //  Mixed icons - Column U   TODO Support EXT formattings 
1, Line, //  TODO Provide a wrapper round STHighlightColor, then expose getter/setter    for the highlight colour. Ideally also then add to CharacterRun interface 
1, Line, //  FIXME: what should be done if complexTypeName is null? 
1, Line, //  TODO: are these readable by some of the formats? 
1, JavaDoc, /* 	 * Changes the chart's title, but only if there	 *  was one already.	 * TODO - add in the records if not	  */
1, JavaDoc, /*  * Implementation of the DSum function: * Finds the total value of matching values in a column in an area with given conditions. *  * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */
1, Line, //  TODO: log error 
1, Block, /*  bug 59775: XSSFHyperlink has wrong type if it contains a location (CTHyperlink#getLocation)     * URLs with a hash mark (#) are still URL hyperlinks, not document links      */
1, JavaDoc, /*      * Problem with evaluation formulas due to     * NameXPtgs.     * Blows up on:     * IF(B6= (ROUNDUP(B6,0) + ROUNDDOWN(B6,0))/2, MROUND(B6,2),ROUND(B6,0))     * <p>     * TODO: delete this test case when MROUND and VAR are implemented      */
1, Line, //  TODO Do this better 
1, Line, //  TODO: fix those cases, but ignore them for now ... 
1, Line, //  don't rely on wmf dimensions, use dimension of anchor   TODO: check pixels vs. points for image dimension 
1, Line, //  TODO: depending on fill focus, rotation with shape and other escher properties   there are still a lot of cases where we get the gradients wrong 
1, Line, //  TODO: check for merged cols 
1, Line, //  TODO - make all these fields private 
1, Line, //  TODO: Not sure how to format this. -- DN 
1, Line, //  TODO - is this the best way to represent 'EMPTY'? 
1, JavaDoc, /*      * Sets a page break at the indicated row     * @param row FIXME: Document this!      */
1, Line, //  TODO: check min/max orientation 
1, Line, //  TODO - maybe same logic required for other/all built-in name records          workbook.cloneDrawings(clonedSheet.getSheet()); 
1, JavaDoc, /*      * bug 58779: Closing an XSSFWorkbook that was created with WorkbookFactory modifies the file     * FIXME: replace this method with wb.close() when bug 58779 is resolved.     *     * @param wb the workbook to close or revert      */
1, JavaDoc, /*      * Check that we can correctly decode the whole file     * TODO Fix what looks like a padding issue      */
1, Line, //  TODO fix calculation of tint  assertEquals(new Color(137, 137, 137), r2.getFontColor()); 
1, Line, //  TODO: to be validated ... 
1, Line, //  TODO: does this make sense? 
1, Line, //  TODO: add further members for other properties like:   - ATTACH_ADDITIONAL_INFO   - ATTACH_CONTENT_BASE   - ATTACH_CONTENT_LOCATION   - ATTACH_DISPOSITION   - ATTACH_ENCODING   - ATTACH_FLAGS   - ATTACH_LONG_PATHNAME   - ATTACH_SIZE 
1, Line, //  TODO: what does extended mean? 
1, Line, //  FIXME dsi.getDocparts(); 
1, Line, //  FIXME: Merge with org.apache.poi.ss.usermodel.ComparisonOperator and rewrite as an enum 
1, Line, // TODO: check shapeId in the cloned sheet 
1, Line, //  FIXME: this method would be more useful if it could convert any Color to an HSSFColor   Currently the only benefit of this method is to throw an IllegalArgumentException   instead of a ClassCastException. 
1, Line, //  TODO Discover if the timezone is stored somewhere else or not 
1, Line, //  TODO: find out, how to determine this value 
1, Line, //  TODO: apply scaling of drawing context to offset 
1, Line, //  FIXME: is this correct? Should it be starting out with 0 or 1 text paragraphs? 
1, Line, //  TODO Fix this 
1, Line, //  TODO Nicer column fetching 
1, JavaDoc, /*     * Gets 160 bytes through then starts going wrong...    * TODO Fix this     */
1, Line, //  TODO YK: Formulas in rows 16 and 17 operate with ArrayPtg which isn't yet supported   FormulaEvaluator as of r1041407 throws "Unexpected ptg class (org.apache.poi.ss.formula.ptg.ArrayPtg)" 
1, Line, //  TODO should be moved to a sub-class 
1, Line, //  TODO - put unknown OBJ sub-records in a different class   unknown sids in the range 0x0004-0x0013 are probably 'sub-records' of ObjectRecord   those sids are in a different number space. 
1, JavaDoc, /*  @todo verify the constructors  */
1, JavaDoc, /*  * Streaming version of Drawing. * Delegates most tasks to the non-streaming XSSF code. * TODO: Potentially, Comment and Chart need a similar streaming wrapper like Picture.  */
1, Line, // FIXME: This cast can be avoided. 
1, Line, //  TODO: investigate if this is just an EMF-hack or if other formats are also embedded in EMF 
1, Line, //  TODO: remove padding bytes between placeable WMF header and body? 
1, JavaDoc, /*  * <p> * 9 Jan 2010 * </p> * <p> * // TODO insert Javadoc here! * </p> * * @author epp  */
1, Line, //  TODO Check we get a helpful error about the max size 
1, JavaDoc, /*  * Implementation of the DMax function: * Finds the maximum value of a column in an area with given conditions. *  * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */
1, Line, //  TODO - POI crashes if the formula is added before this sheet   RuntimeException("Zero length string is an invalid sheet name")   Excel doesn't crash but the formula doesn't work until it is   re-entered 
1, Line, //  21.17 cm / 2.54 cm/inch * 72dpi * 20 = 12000   15.88 cm / 2.54 cm/inch * 72dpi * 20 = 9000   TODO YK: The Picture is cropped but HWPF reads the crop parameters all zeros 
1, Line, // FIXME: Need to confirm if this is not a formula.   empirical testing shows Excel saves explicit lists surrounded by double quotes,  
1, Block, /*              * Make sure the DN is encoded using the same order as present             * within the certificate. This is an Office2010 work-around.             * Should be reverted back.             *              * XXX: not correct according to RFC 4514.              */
1, Line, //  TODO Check sheet contents   TODO Check formula evaluation 
1, Line, //  TODO: this is actually never executed ... 
1, Block, /*                      * too bad, this separator field mark doesn't have                     * corresponding end field mark in fields table                      */
1, Line, //  TODO - consider deleting this class and letting CellEvaluationFrame take care of itself 
1, Line, //  This is where excel really gets it wrong   Special numbers like Infinity and NaN are interpreted according to   the standard rules below. 
1, Line, // TODO: figure out how to map runs/text pieces to fonts  for now, if there's a non standard codepage in one of the fonts 
1, Line, //  TODO is any token transformation required under the various ref operators? 
1, Line, //  draw borders (three 3x3 grids) 
1, Line, // TODO: move to LittleEndian? 
1, Line, //  there is a special case of this record that has only 14 bytes...undocumented! 
1, JavaDoc, /*  * Supports reading and writing of variant data.<p> * * <strong>FIXME (3):</strong> Reading and writing should be made more * uniform than it is now. The following items should be resolved: * * <ul> * * <li>Reading requires a length parameter that is 4 byte greater than the * actual data, because the variant type field is included. * * <li>Reading reads from a byte array while writing writes to an byte array * output stream. * * </ul>  */
1, Line, //  0x17 - 0x24 reserved for international and undocumented   TODO - one junit relies on these values which seems incorrect 
1, Block, /*  something is wrong, ignoring this mark along with start mark  */
1, Line, //  TODO Correct this! 
1, Line, //  workaround if a path has been started and no MoveTo command   has been specified before the first lineTo/splineTo 
1, Line, // hack. internal variable EscherClientAnchorRecord.shortRecord can be  initialized only in fillFields(). We need to set shortRecord=false; 
1, JavaDoc, /* 		 * Changes the series' title, but only if there		 *  was one already.		 * TODO - add in the records if not		  */
1, Line, //                 ValueEval ve = OperandResolver.getSingleValue(args[3], srcRowIndex, srcColumnIndex);                  // TODO R1C1 style is not yet supported 
0, Line, //  formulaSize + f2unknown_int 
0, Line, //  end of palette options 
0, Line, //  already on the next header, quit searching 
0, Line, //  From Excel help: 
0, Line, //  the bug reproduces, if this call fails with NullPointerException 
0, Line, //  scaling 
0, Line, //  3 circles div 4: 3 x 360 / 4 = 270 
0, Line, //  get comment, or create if it does not exist   NOTE - only occurs if getCellComment is called first 
0, Line, //  calling createCell on an existing cell should return the existing cell and modify the cell value and style. 
0, Block, /*  test the lower and upper limits of the chunk ids  */
0, Line, //  and then iterate through them. 
0, Line, //     public CellStyle setColumnStyle(int column, CellStyle style); 
0, Line, //  Check that they contain the same data 
0, Line, //  This line caused the error. 
0, Line, //  NOTE: XWPFDocument.createEndnote() delegates directly         to XWPFEndnotes.createEndnote() so this tests         both creation of new XWPFEndnotes in document         and XWPFEndnotes.createEndnote(); 
0, Line, //  not expected normally, id of a custom format should be greater   than BuiltinFormats.FIRST_USER_DEFINED_FORMAT_INDEX 
0, Line, //  can be null 
0, Line, // apply custom font to the text in the comment 
0, Line, //  confirm that HSSFPatriarch.getChildren() returns two picture shapes  
0, Line, //  represented by the B cell. 
0, Line, //  Now set up a grid for the table, cells will fit into the grid 
0, Line, //  Fetch the SlideListWithTexts in the most up-to-date Document Record     As far as we understand it:   * The first SlideListWithText will contain a SlideAtomsSet   for each of the master slides   * The second SlideListWithText will contain a SlideAtomsSet   for each of the slides, in their current order   These SlideAtomsSets will normally contain text   * The third SlideListWithText (if present), will contain a   SlideAtomsSet for each Notes   These SlideAtomsSets will not normally contain text     Having indentified the masters, slides and notes + their orders,   we have to go and find their matching records   We always use the latest versions of these records, and use the   SlideAtom/NotesAtom to match them with the StyleAtomSet 
0, Line, //  ranges have a horizontal border in common   make sure columns are identical: 
0, Line, //  Theme cells come first 
0, Line, //  false, true 
0, Line, // setting a duplicate name should throw IllegalArgumentException 
0, Line, //  It's the 7 date fields. We think it's in UTC... 
0, Line, //  sprmPBrcLeft80   
0, Line, //  (pivot table) View Item   (pivot table) Row/Column Field IDs   (pivot table) Line Item Array 
0, Block, /* String cellRef = */
0, Line, //  The BS_NULL style SHOULD be used to specify a brush that has no effect 
0, Line, // set up a transformer 
0, Line, //  Now, add the picture to the workbook. Note that unlike the similar   method in the HSSF Examples section, the image type is checked. First,   the image files location is identified by interrogating the URL passed   to the method, the images type is identified before it is added to the 
0, Line, //  add dummy entry for object ind ex 0, as emf is 1-based 
0, Line, //  Link at 20 
0, Line, //  Custom properties are part of the document info stream 
0, Line, //  from bug 59686 
0, Line, //  A 32-bit unsigned integer that specifies the 32-bit-aligned number of bytes of data   in the record-specific data that follows. This number does not include the size of 
0, Line, // lv3 
0, Line, //  2% in the MSFT example 
0, Line, //  The Powerpoint 97 version, major and minor numbers   byte[] ppt97FileVer = new byte[] { 8, 00, -13, 03, 03, 00 }; 
0, Line, //  this line is intended to compute how "July" would look like in the current locale 
0, Line, //   3 * len = ascii + unicode 
0, Line, // conversion relative to [0,0] should return the original formula 
0, Line, //  create three DocumentProperty instances and add them to the 
0, Line, //  1980 is our pivot year (so this is an expected "failure") 
0, Line, //  field_5_indention_options 
0, Line, //   it need outputting itself? 
0, Line, //             "sample_pptx_grouping_issues.pptx",              "54542_cropped_bitmap.pptx",              "54541_cropped_bitmap.ppt", 
0, Line, //  Formula referencing an area in a different sheet 
0, Line, //  Check it'll fit into the space in the record 
0, Line, //  Insert a row in the middle of both merged regions. 
0, Block, /*  (non-Javadoc)     * leave the map alone, if it needs resetting, reusing this class is probably a bad idea.     * @see org.apache.poi.ss.formula.EvaluationSheet#clearAllCachedResultValues()     *      * @since POI 3.15 beta 3      */
0, Line, //  XAdES-X-L 
0, Line, //  For example, 400 is normal and 700 is bold. If this value is zero, a default weight can be used. 
0, Line, //  _VBA_PROJECT, it seems, will always come last 
0, Line, //  create new workbook 
0, Block, /*          * In text there can be fields, bookmarks, may be other structures (code         * below allows extension). Those structures can overlaps, so either we         * should process char-by-char (slow) or find a correct way to         * reconstruct the structure of range -- sergey          */
0, Line, //  It's not much data, so ask POIFSDocument to do it for us 
0, Line, //  at this point FormulaRecordAggregate#isPartOfArrayFormula() should return false 
0, Line, // Keep the first marker character! 
0, Line, //  If we have this, it really has the email 
0, Line, //  column A: default number format 
0, Line, //  Add a directory with filtered contents, not the same 
0, Line, //  rotation 
0, Line, //  ******************************************************************************   for manual mass parsing and rendering tests of .wmfs use HemfPictureTest.paint() !   ****************************************************************************** 
0, Line, //  we potentially need to adjust the column/row information in the shape   the same way as we do in setRow()/setColumn() 
0, Block, /*  Read the POI filesystem's property set streams:  */
0, Line, //  normalized ppt 
0, Line, //  on sheet1   on sheet2  
0, Line, //  the array 
0, Line, //  first draw a solid background line (depending on bkmode) 
0, Line, //  Negative rows not allowed 
0, Line, //  also mark row style as being used 
0, Line, //  All the text to be found in the file 
0, Line, //  Reading directly from XLS file 
0, Line, //  text rotation 
0, Line, //  Handle negative days of the week, that pull us across 
0, Line, //  init client data 
0, Block, /*  Section count  */
0, Line, //  scan for characters greater than 255 ... if any are   present, we have to use 16-bit encoding. Otherwise, we   can use 8-bit encoding 
0, Line, //   visio cheats on re-using a block 
0, Line, //  Check the records are the same 
0, Line, //  need to add +1 to the last run of the last paragraph 
0, Line, //  Jumps   Next stream 
0, Line, //  Now add a formula that refers to our new workbook 
0, Block, /*  This exception will be thrown if the directory already                 * exists. However, since we have full control about directory                 * creation we can ensure that this will never happen.  */
0, Line, //  TODO: Find object to match nrec.getShapeId() 
0, Line, //  Check via the iterator 
0, Line, //  A 32-bit unsigned integer that specifies the format version number.   If the Signature field specifies encapsulated PostScript (EPS), this value MUST be 0x00000001; 
0, Line, //  abort: close the file input stream 
0, Line, //  number format in CellStyles should be restored to default number format 
0, Line, //  create a table with 5 rows and 7 columns 
0, Line, //  variable length header   page 24, point 2.4.2.2 
0, Line, //  ODF / ODS - Stream 
0, Line, //  --------------- Internal helpers on rich text properties ------- 
0, Block, /* import org.junit.BeforeClass;import java.util.Date;import java.math.BigInteger;import java.security.KeyPairGenerator;import java.security.SecureRandom;import java.security.cert.Certificate;import sun.security.x509.AlgorithmId;import sun.security.x509.CertificateAlgorithmId;import sun.security.x509.CertificateIssuerName;import sun.security.x509.CertificateSerialNumber;import sun.security.x509.CertificateSubjectName;import sun.security.x509.CertificateValidity;import sun.security.x509.CertificateVersion;import sun.security.x509.CertificateX509Key;import sun.security.x509.X500Name;import sun.security.x509.X509CertImpl;import sun.security.x509.X509CertInfo; */
0, Line, //  check removing repeating rows and columns        
0, Line, // setting border to none removes the <right> element 
0, Line, //  just some sample data.  These values vary a lot 
0, Line, //  Previous attachment or a new one? 
0, Line, // System.err.println("drawing west"); 
0, Line, //  formatted as '10.0000' 
0, Line, //  Colors should match 
0, Line, //  If we get here, we're not dealing with a formula,    so handle things as a normal rich text cell 
0, Line, //  use values close to, but within the limits 
0, Line, //  borders 
0, Line, //   and the length is usually the last 4 bits) 
0, Line, //  compressed token 
0, Line, // Strings are equal, but one or the other has formatting runs 
0, Line, //  undocumented 
0, Line, // !! This assumes there is a numerator and a denominator, but these are actually optional 
0, Line, // the check for duplicates is case-insensitive 
0, Line, //  set inside horizontal border 
0, Line, //  you can leave out parameters, they are simply ignored 
0, Line, //  Grab the document size, 0x1c -> 0x1f 
0, Line, //  Check for the normal Office core document 
0, Line, //  check that the overall workbook serializes with its correct size 
0, Line, // Loop through and add all values from array list   use a fixed seed to always produce the same file which makes comparing stuff easier 
0, Line, //  otherwise this line will only set the formula cached result; 
0, Line, //  remove all sheet relations 
0, Line, // Relative path notation - for EXCEL lib folder - fallback 
0, Block, /*              * A 32-bit unsigned integer that specifies either the index of a LogPalette object             * in the EMF Object Table or the value DEFAULT_PALETTE, which is the index             * of a stock object palette from the StockObject enumeration              */
0, Line, //  application/x-tika-old-excel 
0, Line, //  first pass: read in data, compute xbar and ybar 
0, Line, //  Properties 
0, Line, //  verify results 
0, Line, //  Check it now has two slides 
0, Line, //  Check via the message date 
0, Line, // Test 2D and 3D Area Ptgs (Pxg for OOXML Workbooks) 
0, Line, //  previously was used by cellLoc, but not anymore 
0, Line, //  determine the FileInformationBLock size 
0, Line, //   Office sometimes produces, but is strict on generation 
0, Line, //  Compare expected values with values return by the package 
0, Line, //  in this case, excel ignores the row move 
0, Line, //  This should go at the end 
0, Line, // these are all used only during parsing, and they are mutable! 
0, Line, //  Grab the length, and the first option byte 
0, Line, //  Check one bit in detail   Check that we get back foreground=0 for the theme colours, 
0, Line, //  width div 6 
0, Line, //  Ready for Formula use! 
0, Line, //  Try built-in JVM one first, standalone if not 
0, Line, //  current value matches next value, skip both 
0, Line, //  fallback to empty image 
0, Line, // ftp://ftp.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WindowsBestFit/bestfit950.txt 
0, Line, //  other sheet 
0, Block, /*          * Page 35:         *          * "Associated with each interval is a BTE. A BTE holds a four-byte PN         * (page number) which identifies the FKP page in the file which         * contains the formatting information for that interval. A CHPX FKP         * further partitions an interval into runs of exception text."          */
0, Line, //  Create for each XML-part in the Package a PartClass 
0, Line, //  See if it's a multi-sheet range, eg Sheet1:Sheet3!A1 
0, Line, //  end options bitfields 
0, Line, //  And another bit 
0, Line, //  Move the comment 
0, Line, // append space...this assumes that rPh always comes after regular <t> 
0, Line, //  get the hotspot diagnostic MBean from the platform MBean server 
0, Line, //    Moving to an earlier point in the array   
0, Line, //  It's a text starts-with condition. 
0, Line, //  Re-test 
0, Line, //  step = -1 is illegal 
0, Line, //  also remove any comments associated with this row 
0, Line, // Sheet#getRowBreaks() returns an empty array if no row breaks are defined 
0, Line, //  These request space-padding, based on the cell width   There should always be one space after, variable (non-zero) amount before   Because the Cell Width isn't available, this gets emulated with    4 leading spaces, or a minus then 3 leading spaces 
0, Line, //  Check the types on everything 
0, Line, //  Is it an absolute file reference? 
0, Line, //  width div 8 
0, Line, // columns D-F have custom width 
0, Line, //  bug 60029 
0, Line, //  removing the only selected sheet 
0, Line, //  do this second, as tables are sheet-specific, but named ranges are not, and may not have a sheet name given. 
0, Line, //  Just the Source File/Folder and Destination Folder were   passed to the main method. 
0, Line, //  +1 for 1-based, +1 for next row 
0, Line, //  POI's behavior should match this behavior 
0, Block, /*  * Row-level policies   */
0, Line, //  use the combined handler for HSSF/XSSF 
0, Line, // ////////////////////////////// From File ///////////////////////////// 
0, Line, //  add or remove columns on the right side of the table 
0, Line, // TODO: default "fit-to-page" is different in HSSF and XSSF 
0, Line, // assertFalse(sheet.getFitToPage()); 
0, Line, //  width div 3 
0, Line, //  formula size   unknownInt  tRef(T2)   ?? 
0, Line, //  Create next zip entry 
0, Line, //  ANSI_VAR_FONT - A variable-width font   Charset: ANSI_CHARSET   PitchAndFamily: FF_DONTCARE + VARIABLE_PITCH 
0, Line, //  'Worksheet Protection Block' (after 'Page Settings Block' and before DEFCOLWIDTH) 
0, Line, //       .fontheight      = c8        .attributes      = 0             .italic     = false             .strikout   = false             .macoutlined= false             .macshadowed= false        .colorpalette    = 7fff        .boldweight      = 190        .supersubscript  = 0        .underline       = 0        .family          = 0        .charset         = 0        .namelength      = 5        .fontname        = Arial 
0, Line, //  parse the value 
0, Line, //  ByteArrayOutputStream is very unlikely throwing a IO exception (maybe because of OOM ...) 
0, Line, //  nothing happens with empty row-area 
0, Line, //  double percent OK 
0, Line, //  Look for a new font we have 
0, Line, //  width div 2 
0, Line, //  4 byte release version 
0, Line, //  in some cases this seems to be garbage (non spaces) 
0, Line, //  removing a sheet that is not active, and not the only selected sheet 
0, Line, //  Can't find it 
0, Line, //  Blip stored in delay stream, which in a word doc, is   the main stream 
0, Line, // Check that the cells are not somehow linked 
0, Line, //  remaining case: moved sheet was higher than active before and is lower now => active is one more 
0, Line, //  Do we have a comments relationship? (Only ever one if so) 
0, Line, //  An array of 32-bit unsigned integers that specifies the point count for each polygon. 
0, Line, //  the first one because it's the patriach). 
0, Line, //  paragraph is 54 long 
0, Line, //  sheet.setArrayFormula creates rows and cells for the designated range 
0, Line, //  Set another, is fine 
0, Line, //  ooxml file isn't 
0, Line, //  Change the positions of the first groups, 
0, Line, //  width div 5 
0, Line, //  Then time based ones too 
0, Line, //  55	39	39	57.5 
0, Line, //  At present (Oct-2008), most unit test samples have (subRecordData.length % 2 == 0) 
0, Line, //  TODO ChartFormatRecord.class, 
0, Line, //  boundary of the brush. 
0, Line, //  == null)   return 0;     final EscherContainerRecord shape = _picfAndOfficeArtData.getShape();   EscherOptRecord optRecord = shape.getChildById( (short) 0xF00B ); 
0, Line, //  Int - 2 
0, Line, //  If there's a gap in the cells, then fire 
0, Line, //  VLookup on a name in another file 
0, Line, //  width div 4 
0, Line, //  attrs = 0   colour palette = x7fff 
0, Line, //  of the cell. 
0, Line, //  Complex data for Array #325 
0, Line, //  TSP signer cert path building 
0, Line, //  Excel's min positive value is several orders of magnitude larger than Java's (Java 8: 4.9e-324, Excel 2016 on Windows 10: 2.2259157957E-308) 
0, Line, //  no denominator follows the slash, drop the fraction idea 
0, Line, //  fall-through to pick up height 
0, Line, //  minor increment   cross over 
0, Block, /* 		 * Clear this streams buffer, in case flush() is called a second time		 * Fix bug 1921637 - provided by Rainer Schwarze		  */
0, Line, //  first operand is actually the function name 
0, Line, //  First up, no policy given, uses default 
0, Line, //  else assume number 
0, Line, //  Complex data for Array #326 
0, Line, // From the spec: An optional unsigned integer that MUST be 3 if present   but some files has 4 
0, Line, //   putting it past the leap year, adjust 
0, Line, //  verify behavior of isDocumentEntry 
0, Line, //  cover some deprecated methods and other smaller stuff... 
0, Line, //  Whatever happens, write out that record tree 
0, Line, //  autoSize will fail if required fonts are not installed, skip this test then 
0, Line, // don't care about this 
0, Line, //  InputStream fis = new ByteArrayInputStream(pfxFileBytes); 
0, Line, // now test against a workbook containing cell comments 
0, Line, // adding one here because 0 indicates a global named region; doesnt make sense for print areas 
0, Line, //  Microsoft Admin Template? 
0, Line, //  Font*2 
0, Line, //  See spec at 2.5.198.63 PtgFuncVar 
0, Line, //  rounding caused carry 
0, Line, //  can't set the font to wingdings so use the   default bullet character 
0, Line, //  clean up the re-saved file 
0, Line, // only set to default if there is no extended format index already set 
0, Block, /*  new part is now ready to rumble  */
0, Line, //  Check all pictures 
0, Line, //  wrong type error 
0, Line, //  Open the temp file 
0, Line, //  280: EXPONDIST   281: FDIST   282: FINV   283: FISHER 
0, Line, //  Should now hold them 
0, Line, //  Save the content 
0, Line, //  dependent.  In BIFF12, "IW123" is not a valid named range name, but in BIFF8 it is. 
0, Line, //  test if inserted EscherMetafileBlip will be read again 
0, Line, //  Prefer the comment record if it has text in it 
0, Line, //  http://stackoverflow.com/questions/9128737/fastest-way-to-set-all-values-of-an-array 
0, Line, //  (3) If it's missing, put the sign into the output to keep the result 
0, Line, //  Done 
0, Line, //  Write out the Workbook stream 
0, Line, //  Now set the flags 
0, Line, // Relative path notation - down 
0, Line, //  Create cell 
0, Line, //  Check the SBAT (Small Blocks FAT) was properly processed 
0, Line, //  used to specify that date is invalid 
0, Line, //  fib.setCcpEdn(fib.getCcpEdn() + adjustment);   } 
0, Line, // valid time formats - all should have 11:23 in output 
0, Line, //  use POI's evaluator as an extra sanity check 
0, Line, //  Not defined, oh well 
0, Line, //  line end width 
0, Line, //  if oldIndex > newIndex then this sheet moved left and sheets between newIndex and oldIndex moved right 
0, Line, //     boolean alignToBaseline = false; 
0, Line, //  Look up the new positions of our preceding UserEditAtomOffset 
0, Line, //  Must be an integer 
0, Line, //  Check the same but with saving to a file 
0, Line, //  expected for some files 
0, Line, //  size defined below 
0, Line, //  327: QUARTILE 
0, Line, //  Check it has content types for rels and xml 
0, Line, //  The latest spec doc says this is always zero! 
0, Line, // sp record 
0, Line, //  C2   D2 
0, Line, //  Next up, SEARCH on its own 
0, Line, //  default text in master placeholders is not visible 
0, Line, //  expected on the second time that _testDataProvider.writeOutAndReadBack(SXSSFWorkbook) is called   if the test makes it this far, then we know that XSSFName sheet indices are updated when sheet   order is changed, which is the purpose of this test. Therefore, consider this a passing test. 
0, Line, //  Don't trust colIx boundaries as read by other apps 
0, Line, //  Having sorted out the masters, that leaves the notes and slides 
0, Line, //  If we got something to print out, do so 
0, Line, //  312: PEARSON   313: RSQ 
0, Line, // Absolute path notation - same device 
0, Line, //  A 32-bit unsigned integer that specifies the size of region data, in bytes. 
0, Line, //  Special case for reset to the start 
0, Line, //  If we're on cells, and this cell isn't in the same    row as the last one, then fire the 
0, Line, //  look for the stripe containing c, accounting for the style element stripe size   could do fancy math, but tables can't be that wide, a simple loop is fine   if not in this type of stripe, return null 
0, Line, //  row is moved down by the shifting 
0, Line, //  for testing invalid invocations 
0, Line, //  Also handles HPSF bits 
0, Line, //  merge records are removed from within the MergedCellsTable, 
0, Line, //  the next three paragraphs form an auto-numbered list 
0, Line, //  Now, we do the character ones 
0, Line, // can send the builtin name directly in 
0, Line, //  How long a code sequence is, and where in the 
0, Line, //  pred '<>' matches empty string but not blank cell 
0, Line, //  reading 4 byte data from a 5 byte buffer 
0, Line, //  used when cell close element is seen. 
0, Line, //  Ensure now have first style 
0, Line, //  rotated text occupies at least five times less horizontal space than normal text 
0, Line, //  low order 16 bits of picture size - can be ignored 
0, Line, // removes leading equals sign if present 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#setExplicitListValues(java.lang.String[])	  */
0, Block, /*      * The following definitions are for property IDs in the first     * (and only) section of the Summary Information property set.      */
0, Line, //  Next is a file 
0, Line, //  page reference 
0, Line, //  uses evaluateFormulaCell() 
0, Line, //  now add css for each used style 
0, Line, //  Row 3-19 
0, Line, //  Remark : Originally the latest parameter was :   contentType.toLowerCase(). Change due to a request ID 1996748. 
0, Line, //  Copy over all the other nodes to our new poifs 
0, Line, //  Check it has the icon, and the right number of thresholds 
0, Line, //  old excel formats are not supported here 
0, Line, //  test the second file. 
0, Line, //  Option B (preferred for new code): 
0, Line, //  normally posInChunk is 0, i.e. on the next chunk (-> index-1)   but if called on close(), posInChunk is somewhere within the chunk data 
0, Line, //  eeAtom.setSubType(ExOleObjAtom.SUBTYPE_EXCEL); 
0, Line, //  adding included fields 
0, Block, /* OutputStream out = new FileOutputStream("C:\\temp\\58084.xlsx");        target.write(out);        out.close(); */
0, Line, //  Check now as expected 
0, Line, //  Slide.SlideAtom.notesId references the corresponding notes slide. 
0, Line, //  file handler ignored this file 
0, Line, //  excel NaN bits: 0xFFFF0420003C0000L   java NaN bits :0x7ff8000000000000L 
0, Line, //  If requested, add in the hyperlinks   Ideally, we'd do these inline, but the hyperlink    positions are relative to the text area the    hyperlink is in, and we have yet to figure out 
0, Line, //  And the 3rd 
0, Line, //  I decided to be consistent in this way. 
0, Line, //  506 == 0x01FA; 510 == 0x01FE 
0, Line, //  Props back in 1 block 
0, Line, // according to the spec, REFERENCE_CONTROL_B(0x33) should have the  same structure as REFERENCE_CONTROL_A(0x2F).  However, it seems to have the int(length) record structure that most others do. 
0, Line, //  Biff 2 / Excel 2, pre-OLE2   Biff 3 / Excel 3, pre-OLE2   Biff 4 / Excel 4, pre-OLE2   Biff 5 / Excel 5   Biff 5 / Excel 5   Biff 5 / Excel 95 
0, Block, /*      * bug 59208     * Purpose: test all valid boolean-like values     * exercise isCTOnOff(CTOnOff) through all valid permutations      */
0, Line, //  decrypt the protected file - in this case it was encrypted with the default password 
0, Line, //  parse the document with cursor and add   the XmlObject to its lists 
0, Line, //  error values and string values not counted 
0, Line, //  System.err.println(cVal.getProperty() + " = " + cVal + " -> "   + HexDump.toHex(cVal.data)); 
0, Line, //  area is moved up => overwritten area is [startColumn + n, startColumn + n + movedColumns] 
0, Line, //  write header texts and determine footer text 
0, Line, //  Optimise 
0, Line, //   10 (Unknown) and an 18 
0, Line, //  No data so nothing to copy 
0, Line, //  Check reading from File and Stream 
0, Block, /*      * According to ECMA-376 default position is RIGHT.      */
0, Line, //  Otherwise Excel gets unhappy   check all remaining flag bits (some are not well understood yet) 
0, Line, //  If this attribute is omitted, then a value of 0.05 inches is   implied 
0, Line, //  cleaning states of nested levels to reset numbering 
0, Line, //  blue 
0, Line, //  Reference to a single cell in a different workbook 
0, Line, //  Check that, for B1, D1, F1 and G1, the references to A1 
0, Line, //  top 
0, Line, //  falling back to BitmapImageRenderer, at least it gracefully handles invalid images 
0, Block, /*  (non-Javadoc)	 * @see java.io.OutputStream#write(int)	  */
0, Line, //  standard prefix, defined in the spec 
0, Line, //  if fc is null, use transparent color to get color of background 
0, Line, // unset solid and pattern fills if they are set 
0, Line, //  even though we don't have an assertion for it 
0, Line, //  For tracking what we've written out, used if we're    going to be preserving nodes 
0, Line, //  Make sure we got what we expected, should be of  
0, Block, /*  Create the POI file system the property set is to be written to.  */
0, Line, //  Should still have two SLTWs 
0, Line, //  Compute the low-order word of the new key: 
0, Line, //  DKGRAY_BRUSH - A dark gray, solid color brush   BrushStyle: BS_SOLID   Color: 0x00404040 
0, Line, //  save a detached  copy to avoid XmlValueDisconnectedException, 
0, Line, //  single-cell array formulas behave just like normal cells -   changing cell type removes the array formula and associated cached result 
0, Line, //  character set identifier 
0, Line, //  Increase the position by the on disk size 
0, Line, // unused doesn't exist as stFile[1] != 2 
0, Line, //  -> one dimensional shapes only 
0, Line, //  Simple numbers 
0, Line, //  one or both formulas are in error, not evaluating to a number, so the validation is false per Excel's behavior. 
0, Line, //  verify that excess bits are stripped off 
0, Line, //  The messes things up on everything but a Mac, so translate them to \n 
0, Line, //  ensure that this works for vlookup as well 
0, Line, //  "PK\003\004"   version required: 4.5   flags: 8 = data descriptor used   compression method: 8 = deflate   file modification time & date   CRC-32   compressed file size   uncompressed file size   filename length   extra flags size 
0, Line, //  first check that it is in one of the regions defined for this format 
0, Line, //  distance to start of false parameter/tFuncVar. +4 for tAttrSkip after true 
0, Line, //  Shift rows 3 and 4 up and write to temp file 
0, Line, //  not yet failed 
0, Line, //  1 Jan 1901 is 366 days after 31 Dec 1899 
0, Line, //  If the input stream is null then we try to get it from the   package. 
0, Line, // Create cell  Cell cell = row.createCell(0); 
0, Line, //  set this cell to the first cell style we defined 
0, Line, //  Check if number format already exists 
0, Line, //             confirm(feA, c, "INDIRECT(\"Sheet1!IW1\")", ErrorEval.REF_INVALID); // bad column              confirm(feA, c, "INDIRECT(\"Sheet1!A65537\")", ErrorEval.REF_INVALID); // bad row          } 
0, Line, //  Check the rules / values in detail 
0, Line, //  Clear out cached details 
0, Line, // Caching of previously calculated factorial for speed 
0, Line, //  Due to bug 46479 we should call setCellValue() before setCellType(),   but bug 61148 showed a case where it would be better the other   way around, so for now we call setCellValue() a second time to 
0, Line, //  SlideHeadersFootersContainer 
0, Line, //  Check it's all there 
0, Line, //  Zero height or width raises #REF! error 
0, Line, //  multi-column, multi-row area 
0, Block, /*  these are for pivot tables only  */
0, Line, //  same state it's left in if fed a package which has no SST part. 
0, Line, //  these two are not implemented in r 
0, Line, //  fully equal - exit here 
0, Line, // TestStylesTable.class, //converted to junit4 
0, Line, //  Should be able to create two tempfiles with same prefix and suffix 
0, Line, //  confirm that the pictures are in the Sheet's drawing 
0, Line, //  Fill it 
0, Line, //  NumberOfObjects (2 bytes):  A 16-bit unsigned integer that specifies the number   of graphics objects that are defined in the entire metafile. These objects include 
0, Line, //  A style of null means resetting back to the default style 
0, Line, // //////////////// Others 
0, Line, //  Handle it ourselves 
0, Line, //  Find our top level children   Note - we don't handle children of children yet, as 
0, Line, // lv2 
0, Line, //  Try to get an existing definition of this 
0, Line, //  Retrieve the properly backed block 
0, Line, //  At this point we have the username as us ascii 
0, Line, //  Copied for now from DataValidationEvaluator.ValidationEnum.FORMULA#isValidValue() 
0, Line, //  Set the reference for the named range for worksheet 'sheet2' 
0, Line, // BOF  INTERFACEEND with extra two bytes   EOF 
0, Line, //  bug 51891 
0, Line, // header row 
0, Line, //  A 32-bit unsigned integer that specifies the index of the palette object in the EMF Object Table 
0, Line, //  -2 means that the scope of this name is Workbook and the reference applies to the entire workbook. 
0, Line, // at this point the master formula is gone, but we are still able to evaluate dependent cells 
0, Line, //  Decide what to attach it to, based on the levels and IDs 
0, Line, //  Grab the rgb values 
0, Line, //  Display the record 
0, Line, //  Now check the XSSFColor 
0, Line, // create a new workbook 
0, Line, //  now change a cell value that's an input for the rules 
0, Line, //  We've spare ones from 181 to 255 
0, Line, //  Check we format the English one correctly 
0, Line, //  This simplifies a few combinations, so we actually always try to copy len bytes   regardless if encryptionOffset is greater than 0 
0, Line, //  round back and forth - points -> master -> points 
0, Line, //  pictures keyed by file name 
0, Line, //  This is actually a spreadsheet! 
0, Line, //  fake SID   first rec len 15 
0, Line, //  #1 pass - determine row heights, the height values might be too low or 0 ... 
0, Line, //  Note use of the cell border width constant. Testing with an image   declared to fit exactly into one column demonstrated that it's   width was greater than the width of the column the POI returned.   Further, this difference was a constant value that I am assuming   related to the cell's borders. Either way, that difference needs   to be allowed for in this calculation. 
0, Block, /*  char 2   */
0, Line, //  If you create a header/footer, then remove it again, word    will leave \r\r. Turn these back into an empty string, 
0, Line, //  ... to be continued 
0, Line, //  The target column is at either end of the multi-column ColumnInfo   ci   we'll just divide the info and create a new one 
0, Line, //  Copy merged regions that are contained within the copy region 
0, Line, //  Finally, update the cells to point at their new extended format records 
0, Line, //  destination rows are completely outside ref 
0, Line, //  Make sure hyperlink in overwritten row is deleted 
0, Line, //  Page 55 of public specification begins 
0, Line, //  Filter each entry. 
0, Line, //  from OPCPackage 
0, Line, //  The new SlideListWithText should go in    just before the EndDocumentRecord 
0, Line, //  Link at 10 
0, Line, // take the first match 
0, Line, //  line breaks 
0, Block, /*          * since we updated all references in FIB and etc, using new arrays to         * access data          */
0, Line, //  SlideShowDumper calls IOUtils.toByteArray(is), which would fail if a different size is defined 
0, Line, //  3rd is normal, so lacks a CharFlagsTextProp 
0, Line, //  there aren't cells for this, just a single row 
0, Line, //  First try via the proper chunk 
0, Line, //  ignore some file types, images, other formats, ... 
0, Line, //  sprmCCv -- 0x6870 
0, Line, //  blipId is rId2 of both pictures 
0, Line, //  if this directory is empty, we can delete it 
0, Line, //  Handle extra 1 paragraph styles at the end 
0, Line, //  We should have the same style-objects for these two columns and rows 
0, Line, // simple test that adds a load of regions
0, Line, //  exit if can't break any more 
0, Line, //  line properties are not set by default 
0, Line, //  verify that it can be accessed now 
0, Line, //  sprmCFBiDi 
0, Line, //  Check the updated times     2007-06-20T20:57:00+13:00 
0, Line, //  Format 
0, Line, //  the 5th slide has a picture and a texture fill 
0, Line, //  This data came from attachment 23347 of bug 46693 at offset 0xAA43 
0, Line, //  Check the header has the right points in it 
0, Line, // _txtrun.setRunType(TextHeaderAtom.HALF_BODY_TYPE);  _txtrun.getRichTextRuns()[0].setFlag(false, 0, false); 
0, Line, //  These are other entities that may be used in the 
0, Line, //  overlap which could theoretically be merged, but isn't because the implementation was buggy and therefore was removed 
0, Line, // everything except spRecord.shapeId must be the same 
0, Line, //  although xmlsec has an option to ignore line breaks, currently this   only affects .rels files, so we only modify these   http://stackoverflow.com/questions/4728300 
0, Line, //  Open as a proper zip stream 
0, Line, //  *** RegionDataHeader ***   A 32-bit unsigned integer that specifies the size of this object in bytes. This MUST be 0x00000020. 
0, Line, //  logic from Integer.compare() 
0, Line, // //////////////// 
0, Line, //  The flag byte is treated as its 8 individual    bits, which tell us if the following 8 codes 
0, Line, //  We've now called getDrawingPatriarch() so    everything will be all screwy 
0, Line, //  display tabs at the bottom 
0, Line, //  Get a list of all of the Excel spreadsheet files (workbooks) in   the source folder/directory 
0, Line, //  simple case - expand area by shifting bottom downward 
0, Line, //  now try adding 2 properties 
0, Line, //  A 32-bit unsigned integer that specifies the number of entries in the palette after resizing. 
0, Line, //  ensure that any lingering writer is closed 
0, Line, //  A 16-bit field that MUST be ignored. 
0, Line, //  poi-ooxml: org.apache.poi.openxml4j.opc.PackageProperties#NAMESPACE_DC 
0, Line, //  Create some cells, some numeric, some not 
0, Line, //  Create a new BATBlock 
0, JavaDoc, /*          * Special Default/Normal/Automatic color.<p>         * <i>Note:</i> This class is NOT in the default Map returned by HSSFColor.         * The index is a special case which is interpreted in the various setXXXColor calls.          */
0, Block, /* 	 * Open Packaging Convention (Annex F : Standard Namespaces and Content	 * Types)	  */
0, Line, //  clearer. 
0, Line, //  use min() to gracefully handle cases where the length-property and the array-length do not match   we saw some such files in circulation 
0, Line, //  Add the relationship between the package and the thumbnail part 
0, Line, //  97 -> 98 -> end 
0, Line, //  Save the contents of the atom, until we're asked to go and 
0, Line, //  Now find the chunks within it 
0, Line, //   ascii, and again as unicode laster on 
0, Line, //  Acquire a resource that is needed to read the next level of openZipEntrySourceStream 
0, Line, //  All done, return our last code 
0, Line, // test new workbook 
0, Line, //  add tests for direct setting - add row 4 to deepest group 
0, Line, //  #1 pass - determine cols and rows 
0, Line, //  just output field value 
0, Line, //  Create the font and save it. Themes Table supplied later 
0, Line, //  height 
0, Line, //  Check if the part name URI starts with a forward slash [M1.4] 
0, Block, /* FontRecord font = */
0, Line, //  any value is valid if the list contains a blank value per Excel help 
0, Line, //  Excel seems to have 'normal' comparison behaviour around zero (no rounding)   even -0.0 < +0.0 (which is not quite the initial conclusion of bug 47198) 
0, Line, //  Confirm first few bytes of ContinueRecord 
0, Line, //  X=balance, Y=ok 
0, Line, //  lighter 80% 
0, Line, //  test with more than we have 
0, Line, // saveWorkbook(wb, fileName); 
0, Line, // uncomment below line if only primary axis required and comment above line   the line chart on primary axis 
0, Line, //  different paragraph mask, because of sanitizing 
0, Line, //  .... 
0, Line, // existing cells are invalidated 
0, Line, //  with funny sheet name 
0, Line, //  verify some border-case combinations of startDate and month-increase 
0, Line, //  flags. Define the type of the hyperlink: 
0, Line, //  legend entry has no (indirect) paragraph properties 
0, Line, //  prepare embedded data 
0, Line, // private short             field_4_name_length;  private short             field_5_comment_length; 
0, Line, //  MissingArg -> BlankEval -> zero (as formula result) 
0, Line, //  Keep this code in sync with {@link ColumnShifter#shiftMergedRegions} 
0, Line, //  Grab all the chunks 
0, Line, //  check read OK 
0, Line, //  Split into header and contents 
0, Line, //  Setup links for the sheets 
0, Line, //  Create the comment and set the text+author 
0, Line, //  left 
0, Line, // test file derives from Common Crawl 
0, Line, // cached formula result 
0, Line, //  X=shift, Y=shift 
0, Line, //  Add the thumbnail part to this package. 
0, Line, //  Starts empty 
0, Line, //  Create a content 
0, Line, //  shift due to crop 
0, Line, //  BinaryTagData seems to contain records, but it 
0, Line, //  An EmfPlusARGB object that specifies the center color of the path gradient brush, which is the color   that appears at the center point of the brush. The color of the brush changes gradually from the 
0, Line, //  check that we really are located on a user edit atom 
0, Block, /*  If there is already an entry with the same name, remove it.  */
0, Line, //  Print the cell reference 
0, Line, //  ignore password protected files if password is unknown 
0, Line, //  First four bytes are the number 
0, Line, //  line style of cat axis 
0, Line, //  Don't copy all relations blindly, but only the ones we know about 
0, Line, //  removing the entry would mess up the sheet index in Formula of NameRecord 
0, Line, //  plain area refs should be ok too 
0, Line, //  A1, B1, D1 
0, Line, //  example for debugging individual functions/operators:   processFunctionGroup(data, SS.START_OPERATORS_ROW_INDEX, "ConcatEval");   processFunctionGroup(data, SS.START_FUNCTIONS_ROW_INDEX, "Text"); 
0, Line, //  font.color only   blue 
0, Line, //  Clean up 
0, Line, //  avoid running on files leftover from previous failed runs 
0, Line, //  Create a map from the STVerticalJc.Enum values to the XWPF-level enums 
0, Line, //  condition's string 
0, Line, //  Per Excel help, "duplicate" means matching value AND format   https://support.office.com/en-us/article/Filter-for-unique-values-or-remove-duplicate-values-ccf664b0-81d6-449b-bbe1-8daaec1e83c2 
0, Line, //  Find the new size of the escher children; 
0, Line, //  Level one, id 36867, type 6 
0, Line, //  Condition 1: Formula Is   =$B2>75   (Blue Fill) 
0, Line, //  HSSFWorkbooks require a name to be added to Workbook defined names table 
0, Line, //  chart records 
0, Line, //  strict OOXML likely not fully supported, see #57699   this code is similar to POIXMLDocumentPart.getPartFromOPCPackage(), but I could not combine it   easily due to different return values 
0, Line, //  no duplicate found => use this one 
0, Line, //  encoded length   IntPtg(1) 
0, Line, //  SummaryInformation 
0, Line, //  extract encrypted ooxml file and write to custom encrypted zip file  
0, Line, //  no fields to initialise 
0, Line, //  Process all the (used) FATs from this XFAT 
0, Line, //  Do we need to position within it? 
0, Block, /* import org.apache.poi.ss.util.CellReference;import org.apache.poi.xssf.usermodel.XSSFCreationHelper;import org.apache.poi.xssf.usermodel.XSSFHyperlink;import org.apache.poi.xssf.usermodel.XSSFWorkbook; */
0, Line, //  exceed the requested size. 
0, Line, // Excel 2013 path where the file was stored in wbpart 
0, Line, //  ....and that the footer object captured above contains two 
0, Line, //  Note - 64 is a special "auto" one with no rgb equiv 
0, Line, // absolute references 
0, Line, //  SizeLow (2 bytes):  A 16-bit unsigned integer that defines the low-order word   of the number of 16-bit words in the entire metafile.   SizeHigh (2 bytes):  A 16-bit unsigned integer that defines the high-order word 
0, Line, //  Extend it 
0, Line, //  as we processed the full stream already, we can close the filesystem here   otherwise file handles are leaked 
0, Line, //  Use a category axis for the bottom axis. 
0, Line, //  Extend it past the 2gb mark 
0, Line, //  delegate the query to the sheet evaluator which has access to internal ptgs 
0, Line, //  Ensure trailing \n's are NOT stripped, it is legal to set a text with a trailing '\r' 
0, Line, //  was formula cell before - no change of type 
0, Line, //  Check it still works 
0, Line, //  but if it ever did, care must be taken:   tAttrSpace comes *before* the operand it applies to, which may be consistent   with how the formula text appears but is against the RPN ordering assumed here 
0, Line, //  inherit the font size from the master style 
0, Line, //  Has a separator but no trailer 
0, Line, //  Check "!", "$", "&", "'", "(", ")", "*", "+", ",", ";", "=" 
0, Line, //  otherwise the format seems to depend on OS settings (default date format) 
0, Line, //  the cell comments in sheetComments.getCellComments() do not have the client anchors set 
0, Line, //  millimetres and in EMUs 
0, Line, //  Now strip them out -- we only need their interpretation, not their presence 
0, Line, //   rather than in random filesystem order 
0, Line, //  scale knots to [0, 1] based on first/last knots 
0, Line, //  Set up references to the other file 
0, Line, //  Found <sheetData/> 
0, Line, //  A 32-bit signed integer that specifies the logical width of the source rectangle. 
0, Line, //  Mark us as being a formula if not already 
0, Block, /*          * contains coordinates of comments we iterate over          */
0, Line, //  See https://issues.apache.org/jira/browse/IO-203 for why we use read() rather than delegating to skip() 
0, Line, //  CellAddress=C4, will be overwritten (deleted) 
0, Line, //  this will never happen, we have already evaluated the formula 
0, Line, //  anchor.setDx1(0); 
0, Line, //  2 initial shorts 
0, Line, //  315652.8287 
0, Line, //  writing is not yet implemented... handlePOIDocument(diagram); 
0, Line, //  that refers to formula with a unicode (non-ASCII) sheet name formula 
0, Line, //  remove all rows which will be overwritten 
0, Line, //  check for data bar 
0, Line, //  Raw data is not compressed. 
0, Line, // throw new POIXMLException("Unexpected page relation: " + part); 
0, Line, //  Grab the data from the part stream 
0, Line, //  bitfields for fill palette options 
0, Line, //  start of image = BMP header length + dib header length + color tables length 
0, Line, //  POI does the same for consistency, but this is not critical 
0, Line, //  we need to re-populate this CTCell 
0, Block, /*          * Add ds:References that come from signing client local files.          */
0, Line, //  For each possible entry, see if we match the mask   If we do, decode that, save it, and shuffle on 
0, Block, /*  Open the file with the buffer  */
0, Block, /* CTCell[] cArray = ((XSSFRow)row).getCTRow().getCArray();            assertEquals(0, cArray.length); */
0, Line, //          Excel uses the stored text representation from the XML apparently, in tests done so far 
0, Line, // @Ignore("Bug 59733 - shiftRows() causes org.apache.xmlbeans.impl.values.XmlValueDisconnectedException") 
0, Line, //  disable all output for now...          Sheet sheet = wb.getSheetAt(0);           
0, Line, //  Constructor arguments specify   the line widths for the strokes 
0, Line, //  Create a value and check it 
0, Line, //  add alpha channel 
0, Line, //  How close the sizing should be, given that not all    systems will have quite the same fonts on them 
0, Block, /*  Execute the get... methods.  */
0, Line, // noinspection unchecked 
0, Line, //  now try adding 1 property 
0, Line, //  First in a nested message 
0, Line, //  Copy over, and pop the child in at the end 
0, Line, //  B is zero, so A is definitely greater than B 
0, Line, //  POI currently doesn't render spaces in formulas 
0, Line, //  "List" Data Validation type 
0, Line, //  fields of subsequent META_ESCAPE_ENHANDED_METAFILE escape records. 
0, Line, //  "registered" symbol 
0, Line, //  Allowable column range for EXCEL2007 is (0..16383) or ('A'..'XDF') 
0, Line, //  A string of 32 Unicode characters that defines the character set of the font.   If the length of this string is less than 32 characters, a terminating NULL MUST be present, 
0, Line, //  Check our cached values were correctly evaluated 
0, Line, //  the offset, i.e. starting address, of the byte where the bitmap data can be found 
0, Line, //  this may happen when the master cell of a shared formula is changed 
0, Line, //  The number of special quantifiers 
0, Line, //  Ensure they match 
0, Line, //  Good, we don't have 5 from 7 onwards 
0, Line, //  Note - Excel does not seem to represent this condition with an error code 
0, Line, //  Add every cell to its row 
0, Line, //  calculate border fit 
0, Line, //  AUTOMATIC is not add to list 
0, Block, /*  Create a subordinate directory. The first step is to                     * ensure that the parent directory exists:  */
0, Line, // persist reference 
0, Line, //  True values: "true", "1", "on" 
0, Line, //  A 32-bit signed integer that specifies the height in pixels of the area occupied by the bitmap. 
0, Line, //  = 2007-06-21T09:59:00.123Z 
0, Line, // assertEquals(0x030018D9, uea.getPPTVersion() ); 
0, Block, /*  Start mark seems to be missing  */
0, Line, //  Generate a unique new filename  
0, Line, // BUG-61295 -- avoid OOM on corrupt file.  Build list instead  of allocating array of length "length".  If the length is corrupted and crazily big but < Integer.MAX_VALUE,  this will trigger a RuntimeException "Buffer overrun" in lei.checkPosition 
0, Line, //  If it has a location, it's internal 
0, Line, //  forecolor index   backcolor index 
0, Line, //  4. Try to re-use patriarch later 
0, Line, //  skip the first 512 bytes - they are MAC specific crap 
0, Line, //  get the best-fit width of rows currently in the random access window 
0, Line, //  otherwise temporarily write all subsequent data to a buffer 
0, Line, //  if the row contains cells included in a multi-cell array formula 
0, Line, //  Update our SlideAtomsSets with this 
0, Line, //  column is unchanged if merged regions are ignored (Excel like behavior) 
0, Line, //  There is a very odd xmlbeans bug when changing the row    arrays which can lead to corrupt pointer   This call seems to fix them again... See bug #50795  noinspection ResultOfMethodCallIgnored 
0, Line, //  indentLevel is only valid for paragraph collection 
0, Line, //  Now with one that triggers on NoteRecord 
0, Line, //  Check core too 
0, Line, //  Write something that uses a main stream 
0, Line, // percentile has to be between 0 and 1 - here we test less than zero 
0, Line, // else - just a plain string with no interpretation. 
0, Line, // update formulas on the parent sheet 
0, Line, // 		records.add(createEndRecord()); 
0, Line, //  case CellType.STRING 
0, Line, // Getting NAmed Range 
0, Line, //  From a real file (embedded SWF control)   <ExOleObjStg info="16" type="4113" size="347" offset="4322" header="10 00 11 10 5B 01 00 00 ">.... 
0, Line, //  Excel would probably have put tMissArg here 
0, Line, //  Just slides, no notes 
0, Line, //  so result does not have a minus sign 
0, Line, //  Modified at has a -13 timezone but no milliseconds     2007-06-20T07:59:00-13:00 
0, Line, // save extended and custom properties 
0, Line, //  don't indent xml documents, the indent will cause errors in calculating the xml signature   because of different handling of linebreaks in Windows/Unix 
0, Line, //  If it starts with [$-...], then could be a date, but 
0, Line, //  Check it's really visio 
0, Line, //  Test 
0, Line, //  not a shared/array/table formula 
0, Line, //  sprmCDispFldRMark -- 0xCA62 
0, Line, //  is this row in the target-window where the moved rows will land? 
0, Line, //  formula value cell 
0, Line, // 211: LENB 
0, Line, //  index number format record   11 bytes length 
0, Line, //  no circ-ref-error because A1 result is cached 
0, Line, //  Check that asking for the same font    multiple times gives you the same thing. 
0, Line, //  don't parse the document parts, if its class can't be determined   or if it's a package relation of another embedded resource 
0, Line, // Sanity checks 
0, Line, //  Mark the fact that we've now loaded up the properties 
0, Line, //  horizontal   vertical 
0, Line, //      be converted to Unicode hex string representation 
0, Line, // BUG-60343 
0, Line, //  some cases require this close here 
0, Line, //  clear whatever was there 
0, Line, // sortTopLeftToBottomRight swapped firstRow and lastRow because firstRow is absolute 
0, Line, //  end public class ShortField 
0, Line, //  get our plex of PieceDescriptors 
0, Line, //  Holds metadata on where things are in our document 
0, Line, // ----------------   Note - From now on the demonstrated POI behaviour is not optimal  ---------------- 
0, Line, //  span in order to be presented at the required size. 
0, Line, //  check sheet-index with index out of bounds => throws exception 
0, Line, //  Rich test file with Chinese + English text in it 
0, Line, //  writing 8 byte values to a 9 byte buffer 
0, Line, //         this.cell2 = calcCell(sheet, cell1, size.getCx(), size.getCy()); 
0, Block, /*  Retrieve the section the property set already contains.  */
0, Line, //  The x-coordinate of the ending vertex on an arc. 
0, Line, //  store everything from end of last match to end of string 
0, Line, //  Look at the low level xml elements 
0, Line, //  This is an array of PhRuns (see page 881) 
0, Line, //  check other borders 
0, Line, // cells A3 and A4 don't contain hyperlinks anymore 
0, Line, //  _lfoMac is the size of the array 
0, Line, //  Insert a numbered multi-level list into cell A7. Note that the   same ArrayList as constructed for the plain multi-level list 
0, Line, //  Write a very small new document, will populate the ministore for us 
0, Line, //  There is no 4! 
0, Line, //  SHOULD be set to the default (NULL) clip region. 
0, Line, //  Relying on the fact that by default the cellType is set to 0 which   is different to {@link CellType#BLANK} hence the following method call correctly   creates a new blank cell. 
0, Line, //  The delete was somewhere in the middle of us 
0, Line, //  test variable length property 
0, Line, //  deleting shared formula cell 
0, Line, //  now treat same data as 3 columns, 4 rows 
0, Line, //  The newline is lost for shared formulas 
0, Block, /*  After adding a custom property the size must be 1 and it must be         * possible to extract the custom property from the map.  */
0, Line, //  Find the cell at 0,0 
0, Line, //  Check by index as well for sanity 
0, Line, //  use this stream as a buffer for the levels since their size varies. 
0, Line, //  End of row/cell records for the current sheet   Note - It is important that this code does not inadvertently add any sheet   records from a subsequent sheet.  For example, if SharedFormulaRecords   are taken from the wrong sheet, this could cause bug 44449. 
0, Line, // reading sample xls 
0, Line, //  create a corrupted zip file by truncating a valid zip file to the first 100 bytes 
0, Line, //  A 32-bit unsigned integer that specifies the number of elements in the CompoundLineData field. 
0, Line, // everything worked out.  Great! 
0, Line, //  If we've run out of data, output anything that's 
0, Line, //  rotate in the value range 1 to 7 
0, Line, //  set up format records 
0, Line, // 10 characters wide 
0, Block, /*  A document summary information set stream by default does have custom properties.  */
0, Line, //  A 32-bit unsigned integer that specifies the size of the DIB bits. 
0, Line, //  Confirm this example really does have SharedFormulas. 
0, Line, //  columns are ANDed   Whether the condition column matches a database column, if not it's a   special column that accepts formulas. 
0, Line, //  read as many bytes as possible, up to the required number of bytes 
0, Block, /*  Check whether a property with this name is in the map already.  */
0, Line, //  and associated point types that are defined by this object. 
0, Block, /*  Compare the sections:  */
0, Line, //  DefaultRowHeightRecord.sid is next 
0, Line, //  add overhead of broken strings 
0, Line, //  secondly try the thread local default 
0, Line, //  The external FunctionPtg is the last Ptg added to the stack   During formula evaluation, this Ptg pops off the the appropriate number of   arguments (getNumberOfOperands()) and pushes the result on the stack 
0, Line, //         thickness++; 
0, Line, //  Grab text from SlideListWithTexts entries 
0, Line, //  remove summary, if previously available 
0, Line, //  between each character's baseline and the x-axis of the device. 
0, Line, //  Row 6 is blank / string formula / number / number / string formula 
0, Line, //  should be assertSame, but a new HSSFCellStyle is returned for each getCellStyle() call.    HSSFCellStyle wraps an underlying style record, and the underlying 
0, Line, //  e.g. src/examples/src/org/apache/poi/ss/examples/formula/mortgage-calculation.xls Sheet1!B4 
0, Line, //  feb 
0, Line, //  = 0; 
0, Line, //  ftCmo.setObjectId(oleShape.getShapeId()); ... will be set by onCreate(...) 
0, Line, //  operate: postSign 
0, Line, //  324: ZTEST 
0, Block, /*              * Transform the text using a scale so that it's height is increased by a multiple of the leading,             * and then rotate the text before computing the bounds. The scale results in some whitespace around             * the unrotated top and bottom of the text that normally wouldn't be present if unscaled, but             * is added by the standard Excel autosize.              */
0, Line, //  Page 53 of public specification begins 
0, Line, //  Check its children 
0, Line, //  length   option   string 
0, Line, //  level3, level2, level1 
0, Line, //  look at all cell-ranges 
0, Line, //  OOO calls this 'nFmlaLen' 
0, Line, //  Should the column's width simply be expanded? 
0, Line, //  verify TSP signer signature 
0, Line, //  And the base file too 
0, Line, //       {          TableCellDescriptor[] rgtc = newTAP.getRgtc();   
0, Line, //  Second is 28 long, centre aligned and normal spacing 
0, Line, //  skip the first child record, it is group descriptor 
0, Line, //  Now begin processing the contents 
0, Line, //  Is the name a valid R1C1 cell reference? 
0, Line, //  else rules for adjusting area may also depend on the destination of the moved rows 
0, Line, //  One row, most things are 0, physical is 1 
0, Line, //  References to a .xlsx file 
0, Block, /*  Check rule M1.7  */
0, Line, //  No theme, has colours 
0, Line, //  Iterations specifies the number of times the hashing function shall be iteratively run (using each 
0, Line, //  Record the match between slide id and these notes 
0, Line, //   say about possible slide IDs 
0, Line, //  However the range A1:B4 also includes the current cell A4.  If the other parameters   were 4 and 1, this would represent a circular reference.  Prior to v3.2 POI would   'fully' evaluate ref arguments before invoking operators, which raised the possibility of   cycles / StackOverflowErrors. 
0, Line, // we cannot remove rows with cells included in a multi-cell array formula 
0, Line, //  Update the text length for its Paragraph and Character stylings   * reset the length, to the new string's length   * add on +1 if the last block 
0, Line, // split to 3 records 
0, Line, //  identical picture was already added to the SlideShow 
0, Line, //  else source columns include none of the columns of the area ref   check for clashes with destination 
0, Line, //  WINDOW2 should always be present, so shouldn't have got this far 
0, Line, //         OutputStream out = new FileOutputStream("/tmp/testZoom.docx");          doc.write(out);          out.close(); 
0, Line, //  actually continue a number record anyhow. 
0, Line, //  Do we have a comment for this cell? 
0, Line, //  ref is outside source columns   check for clashes with destination 
0, Line, //  Ask for another block 
0, Line, //  The image size must be 0 or greater   (0 is allowed, but odd, since we do wind on by the header each 
0, Line, //   all the ptgs give back the right things 
0, Line, // do nothing 
0, Block, /*          * BoundingBox (8 bytes):  The destination rectangle, measured in logical units, for displaying         * the metafile. The size of a logical unit is specified by the Inch field.          */
0, Line, //   in any of the BATs, so we need another BAT 
0, Line, //  Add a slide 
0, Line, //  Check direct 
0, Line, //  Loop over all the cells in the file, and identify any user defined 
0, Line, //  Try to add comments to Sheet 1 
0, Line, //  property has no children 
0, Line, //  A is 2006-01-24 (2nd day of week) 10:26:15.205 
0, Line, //  Now write out to a byte array 
0, Line, //  A 32-bit unsigned integer that specifies the first scan line in the array. 
0, Line, //  XSSFWorkbooks store formula names as strings. 
0, Line, //  Now make it a single cell 
0, Line, //  read <sheet name="Sheet6" sheetId="4" r:id="rId6"/>   and add XSSFSheetRef(id="rId6", name="Sheet6") to sheetRefs 
0, Line, //  variables for use in other methods. 
0, Line, //  00 00 
0, Line, //  This formula SHOULD also be used to calculate the size of aData when DIBHeaderInfo is a   BitmapInfoHeader Object, using values from that object, but only if its Compression value is   BI_RGB, BI_BITFIELDS, or BI_CMYK.   Otherwise, the size of aData MUST be the BitmapInfoHeader Object value ImageSize. 
0, Line, //  The value for this should be 4 
0, Line, //  get the best fit width of rows already flushed to disk 
0, Line, //  note - can't exit loops upon finding null because of potential previous deletes 
0, Line, //  Plain Text - Stream 
0, Line, //  Write and read it 
0, Line, // 			Range range = daDoc.getRange();  			Section section = range.getSection(0);  			Paragraph para = section.getParagraph(2);  			String text = para.getCharacterRun(0).text() + para.getCharacterRun(1).text() +  			para.getCharacterRun(2).text();   
0, Line, //  this is a three byte int so it has to be handled special 
0, Line, //  Size is 20+user len + revision len(4) 
0, Line, //  Acquire the final level resource. If this is acquired successfully, the zip package was read successfully from the input stream 
0, Line, //  Pass-through methods 
0, Line, //  Something's up with turning the text pieces into paragraphs   Fall back to ripping out the text pieces 
0, Line, //  Check each in turn 
0, Line, //  Grab where the data lives 
0, Line, //  Get each font record, so we can do deletes 
0, Line, //  NOTE: Creating the footnote does not automatically         create a first paragraph. 
0, Line, //  check for unsupported characters and add a fallback font for these 
0, Line, //  If no more 13s and 14s, just zap 
0, Line, //  Doesn't have any slides 
0, Line, //  Find the entry, and get an input stream for it 
0, Line, //  each 4th century is a leap year 
0, Line, // file_opts  address length 
0, Line, //  display horizontal scrollbar 
0, Line, //  usually we deal with length units and only very few degree units: 
0, Line, //  Values (1 byte):  An 8-bit unsigned integer that defines how the palette entry is to be used.   The Values field MUST be 0x00 or one of the values in the PaletteEntryFlag Enumeration table. 
0, Line, // MATH-996/POI-55419 
0, Line, //  Vertical aligned special case 
0, Line, //  (GREEN + RED + BLUE + CORAL) + YELLOW(2*2) 
0, Line, //  takes a long time... 
0, Line, //  A4 is string and not counted   A5 is blank and not counted 
0, Line, //  call our own read 
0, Line, //   (Unknown/Custom) 32955 -> Wed Dec 15 2010 @ 14:46:31 UTC 
0, Line, //  remove existing background 
0, Line, //  set a higher max allocation limit as some test-files require more 
0, Line, //  set the values for one row 
0, Line, //  can ignore, rest of tokens for this expression are in OK RPN order 
0, Line, //  Formats 
0, Line, //  conditional formatting 
0, Line, // left 
0, Line, //  change the password on the first sheet 
0, Line, //  typically goes after the Country record 
0, Line, //  for old word files we should still support extracting text 
0, Line, //  write once more 
0, Line, //         assertEquals(IndexedColors.LIGHT_CORNFLOWER_BLUE.index, fmt4.getFillBackgroundColor()); 
0, Line, //  also adjust order of Records, calculate the position of the Boundsheets via getBspos()... 
0, Line, //  side of the rectangle to attach the connector: left=1, bottom=2,right=3, top=4 
0, Line, //  check with string operand 
0, Line, //  Open the file up 
0, Line, // everything except id and DgRecord.lastMSOSPID and DgRecord.Instance must be the same 
0, Line, // continue the for-loop 
0, Line, //  And grab the 4 byte values 
0, Line, //  pred '' matches both blank cell but not empty string 
0, Block, /* RANDOM */
0, Line, //  Excel 2013 behavior: ??? 
0, Block, /*          * lfoMac (4 bytes): An unsigned integer that specifies the count of         * elements in both the rgLfo and rgLfoData arrays. -- Page 424 of 621.         * [MS-DOC] -- v20110315 Word (.doc) Binary File Format          */
0, Line, //  Now get the index by the sheet, not the name 
0, Line, //  Save content in the specified output stream 
0, Line, //  Get a reference to a sheet and check to see if it contains   any rows. 
0, Line, //  bug 57840 
0, Line, //  Saving relationship part 
0, Line, //  Ask again, will still get 181 as not written to 
0, Line, //  Make sure both hyperlinks were added to the sheet 
0, Line, //  throw more useful exceptions for known wrong file-extensions 
0, Line, //  remove all runs 
0, Line, //  Check that it is seen correctly 
0, Line, //  These are slides 1+2 -> 256+257 
0, Line, //  test illegal offsets and lengths 
0, Block, /*  WriteProtectRecord wprotect = */
0, Line, //  Next is an internal doc link 
0, Block, /*          * plcffndRef (footnote reference position table) Written immediately         * after the stsh if the document contains footnotes         *          * plcffndTxt (footnote text position table) Written immediately after         * the plcffndRef if the document contains footnotes         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Line, //  Performance optimization: explicit boxing is slightly faster than auto-unboxing, though may use more memory   NOSONAR   NOSONAR 
0, Line, //  key not found. 
0, Line, //  skip it 
0, Line, //  TransformMatrix field. 
0, Line, //  rounding propagation 
0, Line, //  Check it isn't already taken 
0, Line, //  application/vnd.ms-tnef 
0, Line, //  NumberOfEntries (2 bytes):  A 16-bit unsigned integer that defines the number of objects in   aPaletteEntries. 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#getValidationType()	  */
0, Line, //  Construct an HSSFCellStyle and set it's data formt to use the 
0, Line, // newCell.getCellStyle().cloneStyleFrom(cellStyle); 
0, Line, //             assertEquals("MOD(ROW($T2),2)=1", cr.getFormula1());          }          assertEquals(null, cr.getFormula2()); 
0, Line, //  Check OPC compliance rule M4.1 
0, Line, // create summary sheet 
0, Block, /*          * The PlfLfo structure contains the list format override data for the         * document. -- Page 424 of 621. [MS-DOC] -- v20110315 Word (.doc)         * Binary File Format          */
0, Line, //  private final IBody part;   private final XWPFDocument document;   private List<XWPFParagraph> paragraphs = new ArrayList<>();   private List<XWPFTable> tables = new ArrayList<>();   private List<XWPFRun> runs = new ArrayList<>();   private List<XWPFSDT> contentControls = new ArrayList<>(); 
0, Line, //  Row 17 has a single string in D17 
0, Line, //  first try with our default image renderer 
0, Line, //  Check it's one of ours 
0, Line, //  X=shift, Y=balance 
0, Line, //  Make sure unaffected rows are not shifted 
0, Line, //  page 11, point 2.1.2 
0, Line, //  Have this Java date turned back into an Excel one 
0, Line, //  can this particular case be verified? 
0, Line, //  Grab our 4x pre-data 
0, Line, //  test STOP 
0, Line, //  use x-scaling for both, reposition y accordingly 
0, Line, //  avoid infinite iteration 
0, Line, //  Ensure it really is a slide record 
0, Line, // average 2 args per function 
0, Line, //  level one, id 36871, type 6 
0, Line, //  We ran out of places to put digits before we ran out of digits; put this aside so we can add it later   pos was decremented at the end of the loop above when the iterator was at its end 
0, Line, //  do nothing for Sheet base class. This will be overridden for SXSSFSheets. 
0, Block, /*  No, the current document is not a property set stream. We                     * copy it unmodified to the destination POIFS.  */
0, Line, //  Now, build up TextRuns from pairs of TextHeaderAtom and   one of TextBytesAtom or TextCharsAtom, found inside   EscherTextboxWrapper's in the PPDrawing 
0, Line, //  remove first 22 bytes if file starts with magic bytes D7-CD-C6-9A   see also http://de.wikipedia.org/wiki/Windows_Metafile#Hinweise_zur_WMF-Spezifikation 
0, Line, //  Should be the 1st one 
0, Line, //  first check if Unsafe has the right method, otherwise we can 
0, Line, //  ObjRecord.sid, size=70   ftCmo 
0, Line, // check number of cols 
0, Line, //  skip reserved1/2 fields 
0, Block, /*          * Property to disable text rebuilding. In this mode changing the text         * will lead to unpredictable behavior          */
0, Line, //     fail("Best fit width time per cell exceeded 50000 ns: " + bestFitWidthTimePerCell_ns + " ns");  } 
0, Line, //  Walk on down for the case of container records 
0, Line, //  else: ignore the character 
0, Line, //  line spacing 80 
0, Line, //  destination rows are completely outside area ref 
0, Line, //  Should only have a master SLWT 
0, Line, //  object data needs to be initialized 
0, Line, //  Append new child to the end 
0, Block, /* int usKeyValue =  */
0, Line, //  check 1900 and 1904 date windowing conversions 
0, Line, //  Document - late version 
0, Line, //  Check cached values 
0, Line, //  Generic filename in all cases 
0, Line, //  Zap the target file, in case of an earlier run 
0, Line, //  in the unit-test just try to write out the file more than once and see if we can still parse it 
0, Line, //  Nothing in rawCode before, so this byte    isn't in the buffer dictionary   Output it un-compressed 
0, Line, //   MAPI property, grab the details of it 
0, Block, /*  check/create default entries - for bug54803  */
0, Line, //  Given the width of the image, what should be it's co-ordinate? 
0, Line, //  bug 60246: validate name does not allow DOT in named ranges 
0, Line, //  simple shape 
0, Line, //  options   record id   remaining bytes   options   record id   remaining bytes 
0, Line, // if this byte here == 7, it _may_ signify existence of  an altername font name 
0, Line, //  Add a default set of thresholds 
0, Line, //  just outside 'subnormal' range 
0, Line, //  this listener wasn't already listening for this   document -- add the listener to the set of   listeners for this document 
0, Line, //  this one moved 
0, Line, //  But the evaluator knows the sheet, so it 
0, Line, //  only numbers are counted 
0, Line, //  Is it already in numeric form? 
0, Line, //  the references appear in the package signature or the package object   so we can use the default digest algorithm 
0, Line, //  declare doubles for values 
0, Line, //  x (2 bytes): A 16-bit signed integer that defines the horizontal (x) coordinate of the point. 
0, Line, //  PowerPoint rotates shapes relative to the geometric center 
0, Line, //  We need to invoke this even if text from this piece is not being   deleted because the adjustment must propagate to all subsequent   text pieces i.e., if text from tp[n] is being deleted, then   tp[n + 1], tp[n + 2], etc. will need to be adjusted.   The superclass is expected to use a separate sentry for this. 
0, Line, //  info fields as indicated by the mask.   -1 means the bit is not set 
0, Line, //  check and change row of location 
0, Line, //  Set Row Color : Blue 
0, Block, /* 	  18, 00,	  1B, 00,	  20, 00,	  00,	  01,	  0B, 00,	  00,	  00,	  00,	  00,	  00,	  07,	  3B 00 00 07 00 07 00 00 00 FF 00 ]	  */
0, Line, // If sheet Id  is omitted, it is assumed to be the same as the value of the previous cell. 
0, Line, // build a tree of POIXMLDocumentParts, this document being the root 
0, Line, //  Wrap and store 
0, Line, //  3D refs 
0, Line, //  And the next block 
0, Line, //  parse column quantifier 
0, Line, //  expand:   colapsed bit must be unset   hidden bit gets unset _if_ surrounding groups are expanded you can determine     this by looking at the hidden bit of the enclosing group.  You will have     to look at the start and the end of the current group to determine which     is the enclosing group 
0, Line, //   Minimum and Maximum RGB values are used in the HSL calculations 
0, Line, //  no 45 ?! 
0, Line, //  the stroke applies both to the shadow and the shape 
0, Line, //  all plain records have been already added,   only new records need to be decrypted (tbd #35897) 
0, Line, //  null does work 
0, Line, //  initialized to zeros by JVM 
0, Line, //  If it has children, show them 
0, Line, //  we've found a full match! 
0, Line, //  wingdings doesn't contain high-surrogates, so chars are ok 
0, Line, //  Try to parse it as a name 
0, Line, //  Change slightly, and re-test 
0, Line, //  MUST be concatenated to represent the entire embedded EMF file. 
0, Line, //  Won't have preserve 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getShowErrorBox()      */
0, Line, //  workbook not encrypted (typical case) 
0, Line, //  Custom Icon+Format - Column T 
0, Line, //  Will have fat then properties stream 
0, Block, /*  char 8   */
0, Line, //  the VerifierHashSize field, which MUST be 20 
0, Line, //  refresh the slides 
0, Line, //  Pop structure into Structure HSSFSheet 
0, Line, //  YK: don't know why, but XmlBeans converts leading tab characters to spaces 
0, Line, //  changing B1, so A1 cached result should be cleared 
0, Line, //  NOTE it's ok to create any other row. 
0, Line, //  Tell parent aware records of their parent 
0, Line, //  331: TRIMMEAN   332: TINV 
0, Line, //  Free the memory 
0, Line, //  fall through, read embedded blip now 
0, Block, /*          * Reserved (4 bytes):  A field that is not used and MUST be set to 0x00000000.          */
0, Line, //  first find any external book block that contains the name: 
0, Line, //  page 12, point 2.1.3 
0, Line, //  touch empty marker file 
0, Line, // character styles 
0, Line, //  Adding specific types if any exist 
0, Line, //  strings are extended character strings 
0, Line, //  300 - 7.2 - 7.2 - 36 
0, Line, //  assertEquals("FirstSheet!$A:$A,FirstSheet!$1:$3", nr1.getRefersToFormula()); 
0, Line, // set custom width for D-F 
0, Line, //  Update our cached copy of the bytes that make up the PPT stream 
0, Line, // noinspection ObjectEqualsNull 
0, Line, //  Show the bug - evaluate another cell from the loop first 
0, Line, //  Check the stream store 
0, Line, //  In FS order initially 
0, Line, //  marshal XAdES-X-L 
0, Line, //  The byte order of the result shall be reversed [password "Example": 0x64CEED7E becomes 7EEDCE64],   and that value shall be hashed as defined by the attribute values. 
0, Line, //  Set the table style. If the style is not defined, the table style 
0, Line, //  In case B, there are 5 different stylings 
0, Line, //  verify behavior of isDirectoryEntry 
0, Line, //  We are a container record 
0, Line, //  No opt record, can't have chart 
0, Line, //  Create the cache if needed 
0, Line, //  4 missing args, C5 is blank  
0, Line, //  A1:E1 should be removed   A2:C2 will be A1:C1 
0, Line, //  1-based index of a shadow style within the style matrix 
0, Block, /*          * Note - to observe behaviour without caching, disable the call to         * updateValue() from FormulaCellCacheEntry.updateFormulaResult().          */
0, Block, /*  Write:  */
0, Block, /* procedure Assignment;var Name: string[8];begin   Name := GetName;   Match('=');   Expression;end;     * */
0, Line, //  Value for OptionalRating is declared optional (minOccurs=0) in 55864.xlsx 
0, Line, //  If there were gaps, output the missing rows 
0, Line, //  but we at least have unit-tests which will indicate this when run on Windows 
0, Line, //  Find the number deleted to that    point, and adjust 
0, Line, //  Excel silently truncates double values to integers 
0, Line, //  These are all subtypes of Filter, we think... 
0, Line, //  nothing in common: at most they could be adjacent to each other and thus form a single bigger area   
0, Line, // rotated text 
0, Line, // !! We don't do this for real, we just put in 3 of them 
0, Line, //  PowerPoint Document - OpenXML file format 
0, Line, //  Main unchanged, ministore has a second 
0, Line, //  Colours Red->Yellow->Green - Column F 
0, Line, //  A part of a specification 
0, Line, //  (4) In the output, remove the sign if it should not be shown or set it to 
0, Line, // expected 
0, Line, //  are all other characters valid? 
0, Line, //  If Size is zero, this field MUST be zero bytes in length. If Size is   nonzero and the CodePage property set's CodePage property has the value CP_WINUNICODE   (0x04B0), then the value MUST be a null-terminated array of 16-bit Unicode characters,   followed by zero padding to a multiple of 4 bytes. If Size is nonzero and the property set's   CodePage property has any other value, it MUST be a null-terminated array of 8-bit characters   from the code page identified by the CodePage property, followed by zero padding to a   multiple of 4 bytes. The string represented by this field MAY contain embedded or additional   trailing null characters and an OLEPS implementation MUST be able to handle such strings. 
0, Line, //  wrap the stream in a FilterInputStream to close the POIFSFileSystem   as well when the resulting OPCPackage is closed 
0, Line, //  name is taken => try next one 
0, Line, //   Formula needs all values between 0 - 1. 
0, Block, /*  Excel V14 / 2010 - document  */
0, Line, //  Will be 0 if no drawing objects in document 
0, Line, //  bar space 
0, Line, //  First we need to parse the content type part 
0, Line, //  Generate a unique ID is id parameter is null. 
0, Line, //  A Sprm is at least 2 bytes long 
0, Line, //  Don't getChar() as the space has already been eaten and recorded by SkipWhite(). 
0, Line, //  Create a memory part 
0, Line, //  avoid OOM in Gump run 
0, Line, //  private final static int TABLE_STYLE = 3;   private final static int NUMBERING_STYLE = 4; 
0, Line, //  colour   pattern 
0, Line, //  Grab the first bytes of this stream 
0, Line, //   are compressed or un-compressed 
0, Line, //  Re-fetch the pictures and check 
0, Line, //  also acceptable: Table1!B1 
0, Line, //  Will get ids 7, 8 and 9, as we already have 1-6 
0, Block, /*              * create a new cursor, that points to the START token of the just             * inserted paragraph              */
0, Line, //  notably cell refs and area refs 
0, Line, //  SYSTEM_FONT - A font that is guaranteed to be available in the operating system 
0, Line, //  nothing found   normal case 
0, Line, //  Returns -1 if no column is found for the given index 
0, Line, //  Work our way through all the codes until we    find the right one. Visio starts from the end 
0, Line, //  Check for corrupt / lying ones 
0, Line, //  Condition 2: Row is even, blue 
0, Line, //  add tests for direct setting 
0, Line, //  A 32-bit unsigned integer that specifies the number of points and associated point types that 
0, Line, //  ignore some other ways of corrupted files 
0, Line, //  create a row and put some cells in it 
0, Line, //  end = overflow.get(0).getStart() + fcMin; 
0, Line, //  12th digit 
0, Line, //  Turn on comment extraction, will then be 
0, Line, //  Check the core properties - will be found but empty, due    to the expansion being too much to be considered valid 
0, Line, //  In the integer part, commas at the end are scaling commas; other commas mean to show thousand-grouping commas 
0, Line, //  if the removed slide had notes - remove references to them too 
0, Line, //  bug 60003 
0, Line, //  start with height - offset, then keep adding row heights until the next one puts us over h 
0, Line, //  first dry-run to calculate the total height of the text 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createDateConstraint	 * (int, java.lang.String, java.lang.String, java.lang.String)	  */
0, Line, //  mask is 0x1000   line spacing 80 
0, Line, //  If the BOF record was just serialized then add the IndexRecord 
0, Line, //  transposed version of TestXSSFSheetShiftRows.testBug54524() 
0, Line, //  parsed any options, expect exactly one remaining arg (filename) 
0, Block, /*  Read the origin POIFS using the eventing API. The real work is done         * in the class ModifySICopyTheRest which is registered here as a         * POIFSReader.  */
0, Block, /*  --------------------------------------------------------------------------  */
0, Line, //  Initialization required in order to make the document readable by MSExcel 
0, Line, //  need to tell all cells that were previously used, but no longer are,    that they are not consumed by this cell any more 
0, Line, //  defaults 
0, Block, /*  Value Containter  */
0, Block, /* box10to20c  */
0, Line, //  simple error propagation: 
0, Line, //  Try one for java 1.4 
0, Line, //  "Name is too long" when setting username   "Buffer overrun" 
0, Line, //  Step through each of the files in the source folder and for each   open the workbook, convert it's contents to CSV format and then   save the resulting file away into the folder specified by the   contents of the destination variable. Note that the name of the   csv file will be created by taking the name of the Excel file,   removing the extension and replacing it with .csv. Note that there   is one drawback with this approach; if the folder holding the files   contains two workbooks whose names match but one is a binary file   (.xls) and the other a SpreadsheetML file (.xlsx), then the names   for both CSV files will be identical and one CSV file will, 
0, Line, //  test handling if some presets are not found 
0, Line, //  2 level recursion 
0, Line, //  c => cell 
0, Line, //  a continuation record with 3 bytes of data 
0, Line, //  No Calibri 
0, Line, //  Now check the low level stuff, and check that's all    been set correctly 
0, Line, // TXO (and 2 trailing CONTINUE records) 
0, Line, //  now we have an additional 8208 bytes, which is an exact 
0, Line, //  Check we can write it out and read it back as-is 
0, Line, //  check to see if we have enough room for an FC, the grpprl offset, 
0, Line, //  Reset to a fresh run so we test case of run not having vertical alignment at all 
0, Line, //  Sanity Checking - we're always 12 bytes long 
0, Line, //  by default, line break has the font properties of the last text run 
0, Line, //  However, the ministore data only covers blocks to 183 
0, Line, //  One hyperlink is a real one, one is just to the top of page 
0, Line, // serialize and verify that the serialized data is the same as the original 
0, Line, //  verify the values to ensure future changes keep the returned information equal 
0, Line, //  ignore empty polys and dummy start point (moveTo) 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getShowErrorBox()	  */
0, Line, //  Third is 25 long, right aligned and normal spacing 
0, Line, //  the invariant part of this record. 
0, Line, //  Create a new document - ignoring the order of the old entries 
0, Line, //  2.3.3 EncryptionVerifier ...   An array of bytes that contains the encrypted form of the    hash of the randomly generated Verifier value. The length of the array MUST be the size of    the encryption block size multiplied by the number of blocks needed to encrypt the hash of the    Verifier. If the encryption algorithm is RC4, the length MUST be 20 bytes. If the encryption    algorithm is AES, the length MUST be 32 bytes. After decrypting the EncryptedVerifierHash   field, only the first VerifierHashSize bytes MUST be used. 
0, Line, //  Check without comments 
0, Line, //   from all of IF check, True and False are V 
0, Line, //  create password record 
0, Line, //  SET Verifier TO 0x0000 
0, Line, // 0x0fa1 RT_StyleTextPropAtom 
0, Line, //  Check that the CurrentUserAtom points to the right UserEditAtom 
0, Line, //  the font, such as bold and italic. This value MUST be composed of FontStyle flags 
0, Line, // Create workbook and worksheet 
0, Line, //  Evaluation order:   arg0 lookup_value, arg1 table_array, arg3 range_lookup, find lookup value, arg2 row_index, fetch result 
0, Line, //  chart legend has no (indirect) paragraph properties 
0, Line, // fall through! 
0, Line, //  Text should be sheet based 
0, Line, //  the dimensions for this image are different than for XSSF and SXSSF 
0, Line, //  create a pivot table on a different sheet, case insensitive 
0, Line, //  see Bugzilla 51187 
0, Line, // Only allow column resizing if editing is allowed 
0, Line, //  one specific message is expected 
0, Line, //  Check it before save 
0, Line, //  https://support.office.com/en-us/article/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3 
0, Line, // name sales_1 refers to Commission(Sheet0!$A$1) 
0, Line, //  Save and re-load, and check still there 
0, Line, //  to preserve order. 
0, Line, //  rounding mode is half-up 
0, Line, //  structured format 
0, Line, //  Note, if the row does not already exist on the sheet then create   it here. 
0, Line, //  Get the index for this font, if it is not to be removed (typeface == null) 
0, Line, // "(#,##0_);[Red](#,##0)" 
0, Line, // only shift if the region outside the shifted rows is not merged too 
0, Line, //  A 32-bit signed integer that specifies the angle, in tenths of degrees,   between the escapement vector and the x-axis of the device. The escapement vector is   parallel to the baseline of a row of text.     When the graphics mode is set to GM_ADVANCED, the escapement angle of the string can 
0, Line, //  Internal target   If it isn't absolute, resolve it relative 
0, Line, //  compute and cache them 
0, Line, //  options byte present always (even if no character data) 
0, Line, //  enough space in current record, so just read it out 
0, Line, //  see http://stackoverflow.com/questions/4436397/3des-des-encryption-using-the-jce-generating-an-acceptable-key 
0, Line, //  evaluate third arg and convert from 1-based to 0-based index 
0, Line, // DOCUMENTARE MEGLIO IL DISCORSO DEL LIVELLO 
0, Line, //  hyperlink is internal and is not related to other parts 
0, Line, //  abort: close the zip input stream 
0, Line, // adding the same font twice 
0, Line, //  is this window is hidden 
0, Line, //  0x7FFF0000 is the maximum for 32-bit zips, but less still works 
0, Line, //  15 chars at end of current record 
0, Line, //  Check the initial order 
0, Line, //  Set a new default row height in twips and test getting the value in points 
0, Line, //  Now via MAPIMessage 
0, Line, //  Shift 3 to front 
0, Line, // 		assertEquals(trB.getRawText().substring(0, 30), rtrB.getRawText()); 
0, Line, //  Now turn on stripping 
0, Line, //  First up, do we have any spare ones? 
0, Line, //  Read a fifth of it, and check all's correct 
0, Line, //  removing the password again 
0, Line, // set the print area for the first sheet 
0, Line, //  The library implementation returns 0 for an input sequence like [1, 0]. So this check is necessary. 
0, Line, // two rows, one column 
0, Line, //  show error box 
0, Line, //  value didn't change 
0, Line, //  note - does match blank 
0, Line, // If the leftmost bit is 0 -- number is positive. 
0, Line, //  literal list, using array constructor 
0, Line, //  this should not match the criteria '<>aa'   this should match 
0, Line, // 				} 
0, Line, //  Now try a few built-in non date formats 
0, Line, // import org.checkerframework.checker.nullness.qual.NonNull; 
0, Line, // //////////////// Visio 
0, Line, //  small hack to try to make this test stable, previously it failed whenever the two written ZIP files had different file-creation   dates stored.   We try to do a loop until the current second changes in order to avoid problems with some date information that is written to the ZIP and thus   causes differences 
0, Line, //  This is a RPHSSub (see page 894) 
0, Line, // github-55 
0, Line, //  Test weird variants 
0, Line, //  to another chunk which holds the data itself 
0, JavaDoc, /*      * Creates a {@link ClassID} from a human-readable representation of the Class ID in standard      * format {@code "{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"}.     *      * @param externalForm representation of the Class ID represented by this object.      */
0, Line, //  Should throw exception about invalid POIFSFileSystem 
0, Line, //  An 8-bit unsigned integer that specifies the weight of the font. 
0, Line, //  Check the whole text 
0, Line, //  end public interface LittleEndianConsts 
0, Line, //  rebuild top level message from embedded message 
0, Line, //  non-Javadoc: When possible, code should be implemented in the ColumnShifter abstract class to avoid duplication with   {@link org.apache.poi.xssf.usermodel.helpers.XSSFColumnShifter} 
0, Line, //  Handle the PlcfHdd 
0, Line, //  sprmCLidBi  
0, Line, //  Second is 28 long, blue and italic 
0, Block, /*  ********** START extension of Property **********  */
0, Line, //  update the FIB.CCPText field (this should happen once per adjustment,   so we don't want it in   adjustForInsert() or it would get updated multiple times if the range   has a parent)   without this, OpenOffice.org (v. 2.2.x) does not see all the text in   the document 
0, Line, //  First 16 bytes is header stuff 
0, Block, /*  Read back:  */
0, Line, //  check for empty placeholder value 
0, Line, //  less optimal, but should work OK just the same. Often occurs in junit tests. 
0, Line, //  Word format only 4 bytes 
0, Line, //  Each cell width is 3120 in 1440ths of an inch, or 1/3rd of 6.5" 
0, Line, //  the document 
0, Line, // test header 
0, Line, //  encrypt last record 
0, Line, //  first evaluation call when ouput is desired, so iit. this evaluator instance 
0, Line, //  Has one section 
0, Line, //  Now do another complex file 
0, Line, //  write an unencrypted workbook to disk, but any temporary files are encrypted 
0, Line, //  Set the cells contents and style. 
0, Line, //  MAX to one cell over 3 workbooks, absolute row reference 
0, Block, /*  CTLineProperties ln =  */
0, Line, // Last row of the hyperlink  First column of the hyperlink 
0, Line, //  Should be able to close a document multiple times, though subsequent closes will have no effect. 
0, Line, // right 
0, Line, //  level 2: body placeholder on the master slide 
0, Line, //  Update cell and row counts as needed 
0, Line, //  If there's a trailer, there's a separator 
0, Line, //  Calculations!B1 
0, Line, // URL 
0, Line, //  Set when a header/footer element is seen 
0, Block, /*          * plcfendRef (endnote reference position table) Written immediately         * after the previously recorded table if the document contains endnotes         *          * plcfendTxt (endnote text position table) Written immediately after         * the plcfendRef if the document contains endnotes         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getConstraint()	  */
0, Line, //  Now check the spreadsheet itself 
0, Line, //  Color is an sRGB value specified by red, green, and blue fields. 
0, Line, //  second x   second y 
0, Line, //  x is text that is not a number 
0, Line, //  Pad with the default Alpha 
0, Line, //  set model 
0, Line, //  Excel 
0, Line, // cchFile (2 bytes) 
0, Line, //  Check things match on text length 
0, Line, //  or control of the bit patterns used to encode NaNs in evaluations. 
0, Line, // @Ignore("bug 56454: Incorrectly handles merged regions that do not contain column 0") 
0, Line, //  Should have a style defined for each type 
0, Line, //  Check the default styles 
0, Line, //  Note that the length doesn't include the 8 byte atom header 
0, Line, //  bug 60685: fall back so that the rest of the document can be read 
0, Line, //  in units of .05 of a point 
0, Line, //  Set Column Color : Red 
0, Line, //  if size is uneven we will have to add one so the first grpprl 
0, Line, //  percent of a bracketed expression 
0, Line, //  contents of brackets not numeric 
0, Line, //  482 == 0x01E2; 490 == 0x01E6 
0, Line, //  Check that the UserEditAtom's point to right stuff 
0, Line, //  Set number, x and y 
0, Line, //  it doesn't have any styles 
0, Line, //  re-read the saved file and make sure headers in the xml are in the original order 
0, Line, //  this can be found and means nothing 
0, Line, //  Manually check the output file with Excel to see if the diagonal border is present  OutputStream fos = new FileOutputStream("/tmp/53564.xls");  wb.write(fos); 
0, Line, //  London vs Copenhagen, should differ by an hour 
0, Line, //  Check we still have comments where we should do 
0, Line, // //// Case 11: Evaluate "Table1[[#Totals],[col]]" //////// 
0, Line, //  m11 (scaleY) = eM22 (Vertical scaling component) 
0, Line, //  font.color only 
0, Line, //  Grab a new copy of slideshow C 
0, Line, //  see test file DataValidationEvaluations.xlsx 
0, Line, //  The size and format of this data is determined by information in the DIBHeaderInfo field. If   it is a BitmapCoreHeader, the size in bytes MUST be calculated as follows: 
0, Line, // Set a unicode footer 
0, Line, //  request processing 
0, Line, //  Are HSSFHyperlink.label and XSSFHyperlink.tooltip the same? If so, perhaps one of these needs renamed for a consistent Hyperlink interface   assertEquals("label", xlink.getTooltip()); 
0, Line, //  create with default name 
0, JavaDoc, /* 	 * Gets the stream ID containing the actual data.  The data itself	 * can be found under a top-level directory entry in the OLE2 filesystem	 * under the name "MBD<var>xxxxxxxx</var>" where <var>xxxxxxxx</var> is	 * this ID converted into hex (in big endian order, funnily enough.)	 *	 * @return the data stream ID. Possibly <code>null</code>	  */
0, Line, //  flags 'volatile' and 'space', can be combined.   OOO spec says other combinations are theoretically possible but not likely to occur. 
0, Line, //  sprmPDxaRight -- 0x845d 
0, Line, //  Try with a cell reference 
0, Line, //  0x12 Unused   0x13 GKPIDDSI_SHAREDDOC - Must be False   0x14 GKPIDDSI_LINKBASE - Must not be written   0x15 GKPIDDSI_HLINKS - Must not be written 
0, Line, //  Check the structure matches 
0, Line, //  array arguments must be evaluated relative to the function defining range 
0, Line, //  From a real file 
0, Line, //  --- src/java/org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java  (revision 1766745)   +++ src/java/org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java  (working copy)   @@ -208,6 +208,13 @@        protected int invokeCipher(int posInChunk, boolean doFinal) throws GeneralSecurityException {            byte plain[] = (_plainByteFlags.isEmpty()) ? null : _chunk.clone();     
0, Line, // copied from XWPFDocument...should centralize this code  to avoid duplication 
0, Line, //  autofit layout, and this requires fixed layout 
0, Line, //  the main-method sets these properties, we need to revert them here to not affect other tests 
0, Line, //  third char run is 16 long 
0, Line, //  check the text length after deletion 
0, Line, //  Code adapted from Xalan's org.apache.xml.utils.PrefixResolverDefault.getNamespaceForPrefix() 
0, Line, //  see office open xml part 4 - 5.1.2.2.30 and 5.1.2.2.32 
0, Line, //  This is really odd, but excel still sometimes    outputs a file like this all the same 
0, Line, //  bar border color different from fill 
0, Line, //  mask is 0x020001   char flags 0x0001 = bold 
0, Line, //  write out the revision mark authors table. 
0, Line, //  Move comments from the source row to the    destination row. Note that comments can    exist for cells which are null   If the row shift would shift the comments off the sheet   (above the first row or below the last row), this code will shift the   comments to the first or last row, rather than moving them out of 
0, Line, //         assertEquals(IndexedColors.RED.index, fmt2.getFontColorIndex()); 
0, Line, //  determine the size needed for the upxs. They always fall on word 
0, Line, //  Reserved (18 bytes): This field MUST be ignored. 
0, Line, //  Write the file out 
0, Line, //  Style records always follow after    the ExtendedFormat records 
0, Line, // //// Case 14: Evaluate "Table1[[#Headers],[col1]:[col2]]" //////// 
0, Line, //  blue   third char run is 16 long 
0, Line, //  First thing to do is update the raw bytes of the contents, based    on the properties 
0, Line, //         out = new FileOutputStream(new File(tmpDirName, "out.xls"));          wb.write(out);          out.close(); 
0, Line, //  Update the atom header 
0, Line, //  this allows to trigger a heap-dump at this point to see which memory is still allocated  HeapDump.dumpHeap("/tmp/poi.hprof", false); 
0, Line, // boolean value 
0, Line, //  These should reference themes 2 and 3 
0, Line, //  3. new index is lower than old one => sheets get moved up 
0, Line, //  end option bitfields 
0, Line, //  (For more information, consult the Windows API Programmer's reference ) 
0, Line, //  Cell show "2016年12月" 
0, Line, //  Sometimes escaped 
0, Line, //  0" "?/?;?/?     - length of -ve part was used   0 "#"\#\#?/? - length of text was used 
0, Line, //  if there's a reference to the placeholder color,   stop evaluating further and let the caller select   the next style inheritance level 
0, Line, //  Now process the various entries 
0, Line, //  Get the sheet to be removed 
0, Line, //  Note: If date2day==31, it STAYS 31 if date1day < 30.   Special fixes for February: 
0, Line, //  width; a point on the arc. 
0, Line, // if the denom is 0, fall back to the default: tmpExact=100 
0, Line, //  Note - two different spellings depending on version used...! 
0, Line, //  no contents: cell.setCellValue("sometext"); 
0, Line, //  Check with a file that has no headers 
0, Line, //  7 bytes of data (stored as an int, short and byte here) 
0, Line, //  write out and read back in to trigger some more validation 
0, Line, //  Is it an allowed substitution? 
0, Line, //  Update our comment, if there is one 
0, Block, /*      * Accessors      */
0, Line, //  The y-coordinate of the ending vertex of a polyline. 
0, Block, /*  CacheAreaEval is only temporary value representation, does not equal sheet selection                 * so any attempts going beyond the selection results in BlankEval                  */
0, Line, //  Findbugs: URF_UNREAD_FIELD. Do not delete without understanding how this class works.  private XSSFSheet xssfSheet; 
0, Line, //  But if we write out with nodes preserved, will be there 
0, Line, //  Requested spacers with "_" are replaced by a single space.   Full-column-width padding "*" are removed.   Not processing fractions at this time. Replace ? with space.   This matches CSV output. 
0, Line, //  And the same on the temp file 
0, Line, //  create a path, rotate it about its center 
0, Line, //  basic numbers 
0, Line, //  auto 
0, Block, /* c2 = */
0, Line, //  a couple of digits more accuracy than strictly required 
0, Line, //  y 
0, Line, //  date formatted as 'm'   'mmm' is wider than 'm'   date formatted as 'mmm'   'mmm/dd/yyyy' is wider than 'mmm'   date formatted as 'mmm/dd/yyyy'   date formula formatted as 'mmm' 
0, Line, // one row down and one cell right 
0, Line, //  Same, no change 
0, Line, //  Extend if needed 
0, Line, //  Step through the elements of the ArrayList that was used to hold   all of the data recovered from the Excel workbooks' sheets, rows   and cells. 
0, Line, // mask 
0, Line, //  http://mirrors.apple2.org.za/apple.cabi.net/Graphics/PICT.and_QT.INFO/PICT.file.format.TI.txt 
0, Line, //  we currently only populate the dimension during writing out 
0, Line, //  no next already 
0, Line, // string is expressed directly in the cell definition instead of implementing the shared string table. 
0, Line, //  cell records 
0, Line, //  multiplying zero by any negative quantity yields minus zero 
0, Line, //  test fixed length property 
0, Line, //  cell can be potentially empty ... 
0, Line, //  Message should have 54 
0, Line, //  Nothing special about this ID   So, do the usual thing which is by type 
0, Line, // group shape  group shape 
0, Line, //  bug 57721 
0, Block, /* 		// Encode it again using our engine		byte[] comp = lzw.compress(new ByteArrayInputStream(testTrailerDecomp));		// Check it's of the right size		assertEquals(339, comp.length); */
0, Line, //  text file isn't 
0, Line, // sheet name with spaces 
0, Line, //  Get raw contents from a known file 
0, Line, //  string to boolean 
0, Line, //  A 32-bit unsigned integer that specifies the way to use the path.   The value MUST be in the RegionMode enumeration 
0, Line, //  Write the main data out 
0, Line, //  Now, a slightly longer file with numeric formulas 
0, Line, //  x 
0, Line, //  Now grab all the SLWTs 
0, Line, //  or (byte) -91 (which is 165 - 256) 
0, Line, //  Check they all agree 
0, Line, //  Check "-", ".", "_", "~" 
0, Line, //  Special cases based on the ID 
0, Line, //  Second format part ('0.000') is used for negative numbers 
0, Line, //  Attachment/Recipient counter. 
0, Line, //  Icons : 4 traffic lights - Column K 
0, Line, //  this part is different for HSSF and XSSF 
0, Line, //  int charStartAt = translator.getCharIndex( bytesStartAt );   int charEndAt = translator.getCharIndex( bytesEndAt, charStartAt   ); 
0, Line, //  if so do we have storage at getHugeGrpprlOffset()   int hugeGrpprlOffset = papx.getHugeGrpprlOffset(); 
0, Line, //  Normal case. Length is in characters 
0, Line, //  fall-through 
0, Line, //  Create row if it does not exist. 
0, Line, //  same for LocalDateTime 
0, Line, //  First cell should have one paragraph 
0, Line, //  ignore password protected files 
0, Line, //  Check it's now the same as a 
0, Line, //  Save it to a different file 
0, Line, //  Save, re-open, ensure it's all still there 
0, Line, // <-- FAILS EVALUATION 
0, Line, //  Get the right core record 
0, Line, //  as there were no paragraphs yet, initialize the text body 
0, Line, //  Adding Comment to cloned Sheet 3 
0, Line, //  Mark it as being a Data Bar 
0, Line, //  compare aggregate.serialize() with raw bytes from the record stream 
0, Line, //  evaluate formulas and re-autosize 
0, Line, //  row major order 
0, Line, //  IF(TRUE,D2:D5,D2) or  OFFSET(D2:D5,0,0) would work too 
0, Line, // using absolute references because they don't get copied and pasted anyway 
0, Line, // derive this from the font information! 
0, Line, //  Ignore, just means it didn't contain    a format we support as yet 
0, Line, //  removing an already empty cell just falls through 
0, Line, //  Sheets 3 and 5 now 
0, Line, //  cap and the fill of the arrow cap. 
0, Line, //  xmlns="http://schemas.openxmlformats.org/package/2006/relationships"> 
0, Line, //  further confirmation that B2 was not cleared due to changing D1 above 
0, Line, //  Inline string <is><t>...</t></is> pair 
0, Line, //  Create the references 
0, Line, //  URL Moniker 
0, Line, //  Do we have any embedded pictures? 
0, Line, //  now create a custom format with Pound (\u00a3) 
0, Line, //  Try to evaluate without references, won't work 
0, Line, //  clone sheet corrupts it 
0, Line, //  Condition 1: Row divides by 10, red (will beat #1) 
0, Line, //  Pivot Table Additional Info 
0, Line, //     {        tabMap.put(Integer.valueOf(tabPositions[x]), Byte.valueOf(tabDescriptors[x]));      }   
0, Line, //  there was a problem in the code which locates the existing print titles name record 
0, Line, //  to adjust index after deletion 
0, Line, // size must == 2  number of modules 
0, Line, //  the last record before the drawing block 
0, Line, //  Add two more styles 
0, Line, //  A1:A5 should be moved to B1:B5 
0, Line, //  2 missing args, C5 is blank  
0, Line, //  Fetch the 2 byte value, that is safe to ignore for some types of text 
0, Line, //  nothing to update 
0, Line, //  "ABCD" 
0, Line, // try a string cell 
0, Block, /*  A 16-bit unsigned integer that specifies the version number of the system. This MUST be 0x0300.  */
0, Line, //  middle knots/control points 
0, Line, //  SP @ 14   SP @ 20 
0, Line, //  ConversationTopic = Test 
0, Line, //  Should we do anything special with these non    Container records? 
0, Line, //  HSSFDataFormatter to do the work for us 
0, Line, //   18 00 
0, Line, //  lastPrinted 
0, Line, //  Should have version, codepage, class and MAPI 
0, Line, //   use this to grab the revision 
0, Line, //  rounding 
0, Line, //  Sorting Options   .WK? File Conversion Information  Standard Column Width   Window Zoom Magnification   Scenario Output Data 
0, Line, //  fib.setCcpText(fib.getCcpText() + adjustment);   }   
0, Line, // set up workbook 
0, Line, //  Get the header 
0, Line, //  Load in again and re-test 
0, Line, //  Get the row's height in millimetres 
0, Line, //  Don't cache a circular ref error result if this cell is not the top evaluated cell.   A true circular ref error will propagate all the way around the loop.  However, it's   possible to have parts of the formula tree (/ parts of the loop) to evaluate to   CIRCULAR_REF_ERROR, and that value not get used in the final cell result (see the   unit tests for a simple example). Thus, the only CIRCULAR_REF_ERROR result that can   safely be cached is that of the top evaluated cell. 
0, Line, //  implicitly track the columns 
0, Line, // Configure the pivot table 
0, Line, //  31.03.2013 01:59:00,000   31.03.2013 02:00:00,000 (this time does not exist in TZ CET, but EXCEL does not care)   31.03.2013 02:01:00,000   31.03.2013 02:59:00,000   31.03.2013 03:00:00,000 
0, Line, //  tArray   tInt(3)   tFuncVar(MAX) 2-arg   Array data: 1 col, 1 row   elem (type=string, len=1, "5") 
0, Line, //  record contains a DIB. 
0, Line, // Insert the newlycreated Gridset record at the end of the record (just before the EOF) 
0, Line, //  CSPName may not always be specified 
0, Line, //  test with longer name, just small enough file 
0, Line, //  read from the zip input stream 
0, Line, //  Remove any children off the current style, to    avoid orphaned nodes 
0, Line, //  indirect defined name   indirect defined name pointinh to other sheet 
0, Line, //  Set the raw colour, not the adjusted one 
0, Line, //  Remove MergedRegions in dest row 
0, Line, //  If the paragraph is the first paragraph in the footnote,    ensure that it has a footnote reference run. 
0, Line, //  old bottom column of area has moved up deep within the area, and exposed a new bottom column 
0, Line, // M (1000), CM (900), D (500), CD (400), C (100), XC (90), L (50), XL (40), X (10), IX (9), V (5), IV (4) and I (1). 
0, Line, //  total size 
0, Line, //  type 
0, Line, //  of 16-bit words in the header. 
0, Line, // the count of items is less by one 
0, Line, //  we clamp the values, as it possible to come up with more than 100% sat/lum 
0, Line, //  Update the rich text strings to point at    the new locations of the fonts   Remember that one underlying unicode string 
0, Line, //  Has 2 fonts 
0, Line, //  Write out and re-check 
0, Line, //  Need to walk forward to find the first non-blank row 
0, Line, //  The document 
0, Line, //  During construction the cellStyle may be null for a Blank cell. 
0, Line, //  Save and re-load, still there 
0, Line, //  advance 2 rows 
0, Line, //  the guides in the shape definitions are all defined relative to each other,   so we build the path starting from (0,0). 
0, Line, //  make a hole 
0, Block, /*  Write the summary information stream and the document summary         * information stream to the POI filesystem.  */
0, Line, // POI-61045 -- in practice, there can be an extra 2 bytes 
0, Block, /*  No width value set  */
0, Line, //  Has no Excel Sheets 
0, Line, //  Needs to come from an XBAT 
0, Line, //  see TestXSSFBugs.bug54764()   see TestXSSFBugs.bug54764() 
0, Line, //  Sanity check to detect garbage string lengths   16 million chars? 
0, Line, //  MINIMUM ELEMENTS FOR A TABLE 
0, Block, /* XDDFLineChartData lines = (XDDFLineChartData) chart.createData(ChartTypes.LINE, lineCategories,                    leftValues); */
0, Line, //  process our events based on the document input stream 
0, Line, //  Test the sum 
0, Line, //  therefore, over-write the other. 
0, Line, //  special: geometry sections (key: index, value: section) 
0, Line, //  Some inline text elements get returned not as    themselves, but as CTEmpty, owing to some odd    definitions around line 5642 of the XSDs   This bit works around it, and replicates the above    rules for that case 
0, Line, //  Excel thinks 2/29/1900 is a valid date, which it isn't 
0, Line, //  as long as there are 3 or more digits between 
0, Line, //  If we get here, we didn't break 
0, Line, //  by the PenUnit field. If a zero width is specified, a minimum value is used, which is determined by the units. 
0, Line, //  read optional cached text value 
0, Line, //  normal number of data bytes 
0, Line, //  Excludes support 
0, Line, //  check paragraphs 
0, Line, //  Bug 58315: there are files where there is no pr-entry for a RichTextString 
0, Line, //  lined up with the output. 
0, Line, //  Cell show "12/08/16" 
0, Line, //  verify cell format without the conditional rule applied 
0, Line, //  get table row properties (trPr) 
0, Line, // undocumented 
0, Line, //  If we've just finished with the cells, then fire the 
0, Line, //  this object's parent Entry 
0, Line, //  get the cells in this row 
0, Line, //  Optimise styles 
0, Line, //  if multiple HSSFHyperlinks refer to the same record 
0, Line, //  A 32-bit unsigned integer that specifies the offset, in bytes from the start 
0, Line, //  this can happen when the client code has created a row,   and then removes/replaces it before adding any cells. (see bug 46312) 
0, Line, //  is there a change necessary for the current row? 
0, Line, //  else - typical case A and B is not close to threshold 
0, Line, //  len=5, 16bit   character data    padding byte 
0, Line, //  Valid scale values range from 10 to 400 
0, Line, //  277: CONFIDENCE 
0, Line, //  242 == 0200F2; 246 == 0x00F6 
0, Line, //  Update size if needed 
0, Line, // A4  B4 
0, Line, //  Create some styles, no change 
0, Line, //  initialize xwpfchart object 
0, Line, // get custom style 
0, Line, // names cannot be blank and must begin with a letter or underscore and not contain spaces 
0, Line, //  #1) these borders will all be medium in default color 
0, Line, //  special type used by Tika 
0, Line, //  re-allocate cells array as required. 
0, Line, //  records were assembled in standard order, so this simple check is OK 
0, Line, //  InputStream 
0, Block, /*  No, it is not a summary information. We don't care                             * about its internals and copy it unmodified to the                             * destination POIFS.  */
0, Line, //  And now build the piece 
0, Line, //  heights. 
0, Line, // now paragraph attributes 
0, Line, //  Image should be in it's own run, or in a run with the end-of-special marker 
0, Line, //  Remove any double quotes 
0, Line, //  See bug #59786 - we'd really like a test file to confirm if this    is the right properties + if this is truely general or not! 
0, Line, // Excel only indexes the first 128 buckets. 
0, Line, //  From PCT to NIL: 
0, Line, //  Having determined if and how to resize the rows, columns and/or the   image, create the ClientAnchor object to position the image on   the worksheet. Note how the two ClientAnchorDetail records are   interrogated to recover the row/column co-ordinates and any insets.   The first two parameters are not used currently but could be if the   need arose to extend the functionality of this code by adding the 
0, Line, //  We start with 30 Rows. 
0, Block, /*              * Part already existed, but was not related so far. Create             * relationship to the already existing part and update             * POIXMLDocumentPart data.              */
0, Line, //  zeNew.setMethod(ze.getMethod()); 
0, Line, //  there are two test-files that have no body... 
0, Line, // test against strings of different length 
0, Line, // un-register the single-cell array formula from the parent sheet through public interface 
0, Line, //  check length-limits 
0, Line, //  Note - if moving highIx down (due to lookup<vector[newMid]),   this execution path only moves highIx it down as far as newMid, not midIx, 
0, Line, //  was c1 before verify 
0, Line, //  We have relaxed this check, so we can read the file anyway 
0, Line, //  crc32 is checked within zip-stream 
0, Line, //  preserve original exception 
0, Line, //  A2:C2 
0, Line, //  Check text in the rich runs 
0, Line, //  empty cell at left-top corner 
0, Line, //  There was a previous match, find the new minimum. 
0, Line, //  uniform scaling, can use target values directly 
0, Line, //  max axis value 
0, Line, // must be 0; 
0, Line, //  A 32-bit Boolean value that specifies whether the arrow cap is filled. 
0, Line, //  Write the slideshow out to a byte array 
0, Line, //   buffer dictionary or not 
0, Line, // let's create a few tables for the test 
0, Line, //  get margin components 
0, Line, //  Update column and row count 
0, Line, //  Assign it; treat invalid options as "default" POI-60293 
0, Line, //  row 1 
0, Line, //  bug 60128 
0, Line, //  Bingo, data contains this property 
0, Line, //  Ensure it isn't a XLSB file, which we don't support 
0, Line, //  Dummy write out, so the position winds on properly 
0, Line, //  Now do 4 character styles 
0, Line, //  end package scope class LocalProperty 
0, Line, //  Should never happen 
0, Line, // read in sample 
0, Line, //  relativization against root 
0, Line, //  Bits: font,align,bord,patt,prot   0 = Horizontal alignment modified   0 = Vertical alignment modified   0 = Text wrapped flag modified   0 = Text rotation modified   0 = Justify last line flag modified   0 = Indentation modified   0 = Shrink to fit flag modified   Normally 1, 0 = Merge Cell flag modified   0 = Cell locked flag modified   0 = Cell hidden flag modified   0 = Left border style and colour modified   0 = Right border style and colour modified   0 = Top border style and colour modified   0 = Bottom border style and colour modified   0 = Top-left to bottom-right border flag modified   0 = Bottom-left to top-right border flag modified   0 = Pattern style modified   0 = Pattern colour modified   0 = Pattern background colour modified   Always 111 (ifmt / ifnt / 1)   Undocumented bits   Bits: font,align,bord,patt,prot   1 = Record contains font formatting block   1 = Record contains alignment formatting block   1 = Record contains border formatting block   1 = Record contains pattern formatting block   1 = Record contains protection formatting block   0 = Text direction modified 
0, Line, //  This used to throw an error before - #42794 
0, Line, //  Mark it as being a Color Scale 
0, Line, //  row 0 
0, Line, //  Have the datasource updated 
0, Line, //  or bottom of the area ref there will be a change 
0, Line, //  check that it re-serializes to the same data 
0, Line, //  Set the reference for the named range for worksheet 'sheet1' 
0, Line, //  size extra 
0, Line, // master style for text with type=TextHeaderAtom.OTHER_TYPE 
0, Line, //  23-08-2016 08:51:01 which is 42605.368761574071 as double was parsed 
0, Line, //  flip if necessary 
0, Line, //  Save the data, ready for the calling code to do something    useful with it 
0, Block, /*  store first series as template and find last series index  */
0, Line, // Load existing excel with some chart on it having primary and secondary axis. 
0, Line, //  Windows 10, 15.6" 3840x2160 
0, Line, //  update the FIB.CCPText + friends fields 
0, Line, //  Check as expected currently 
0, Line, //  in Pre 3.12: setting bold=false doesn't change the internal state 
0, Line, //  if the string parses as a number, it is OK 
0, Line, //  Check now 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#getFormula2()	  */
0, Line, //  Flag to see if need to 
0, Line, //  Having very small numbers leads to different formatting, Excel uses the scientific notation, but POI leads to "0" 
0, Line, //  Next 32 -> 13 
0, Line, //  contains 2 bytes of data: 0x0001 or 0x0003 
0, Line, //  row 2 
0, Line, //  add all the insertions as text 
0, Line, //  Records ~12000 seem to be related to the Comments used in PPT 2000/XP 
0, Line, //  perhaps this testcase belongs on TestHSSFName 
0, Line, //  The playback device context is restored by popping state information off a stack that was created by   prior SAVEDC records 
0, Line, //  shape is grouped and the anchor is expressed in the coordinate system of the group  
0, Line, //  height   options 1 
0, Line, //  See 17.18.40 ST_HighlightColor (Text Highlight Colors) 
0, Line, //  create a workbook to test with 
0, Line, // default column width measured in characters 
0, Line, //  System.err.println("Paragraph " + x + " is now " +   papx.getStart() + " -> " + papx.getEnd()); 
0, Line, //  317: PROB 
0, Line, //  Check that we can read the right data pre-write 
0, Line, //  don't add the hyperlink now to text paragraph records 
0, Line, //  no need to save EOF in field 
0, Line, //  check for signed/unsigned shorts #58069 
0, Line, //         OutputStream os = new FileOutputStream("output.xlsm"); 
0, Line, // file can be written to 
0, Block, /*  char 14  */
0, Line, //  Set when V start element is seen 
0, Line, //  Now check the first paragraph in total 
0, Line, //  footer can be more than 256 bytes 
0, Line, //  unknown 104f 
0, Line, //  A 32-bit unsigned integer that specifies the spacing, orientation, and quality of rendering for the 
0, Line, //  Note - order is important for these instance-of checks 
0, Line, //  Process the value contents as required, now we have it all 
0, Line, //  We don't check the type of the operands. 
0, Line, // NOSONAR, it's a bit complex but monolith method, does not make much sense to divide it 
0, Line, //  Extract the text as a String 
0, Line, //  times.  Without caching, each subsequent cell take about 4 times longer to evaluate. 
0, Line, //  Row number must be between 0 and last row 
0, Line, //  Ask CellFormat to get a formatter for it 
0, Line, //  write the text to the docstream and save the piece descriptor to   the 
0, Line, //  Create Styles if it is missing 
0, Line, //  Piccolo is disabled for POI builts, i.e. JAXP is used for parsing   so only user code using XmlObject/XmlToken.Factory.parse   directly can bypass the entity check, which is probably unlikely (... and not within our responsibility :))    DEFAULT_XML_OPTIONS.setLoadEntityBytesLimit(4096); 
0, Line, //  Remove the print area on Sheet0 and change the print area on Sheet1 
0, Line, //  With date is null   Via string is blank 
0, Line, //  Note - incrementing loop variable here 
0, Line, //  suppress IOException for interface method 
0, Line, // not found in the master sheet. Use the hardcoded defaults. 
0, Line, //  Go for the 2nd chunk in the stream 
0, Line, // see 2.3.3 PROJECTwm Stream: Module Name Information  multibytecharstring 
0, Line, //  Now test 
0, Line, //  trigger handling 
0, Line, //  pivot only 
0, Line, //  The tab character - \t - cannot be used to create a tab space   within a cell as it is rendered as a square. Therefore, four 
0, Line, // sdtContentCell is allowed to be null:  minOccurs="0" maxOccurs="1" 
0, Line, //  this is also the default if parameter is not given 
0, Line, //         FileOutputStream fileOutput = new FileOutputStream("/tmp/57196.xlsx");          wb.write(fileOutput);          fileOutput.close(); 
0, Line, //  No print settings before repeating 
0, Line, //  Problem 3: These used to fail, now pass 
0, Line, //  is this window is an icon 
0, Line, //  application/vnd.ms-powerpoint.presentation.macroenabled.12 
0, Line, //  Grab what headers and footers have been defined   For now, we don't care about different ranges, as it    doesn't seem that .docx properly supports that    feature of the file format yet 
0, Line, //  Grab all the different bits we care about 
0, Line, //  Test methods common with XSSF are in superclass   Local methods here test HSSF-specific details of updating array formulas 
0, Line, //  PersistPtrIncrementalBlock 
0, Line, //  name and display name are different 
0, Line, //  sprmPFNumRMIns  
0, Line, //  Now try and open properly 
0, Line, //  anchor should be set, after updateCellAnchor is through 
0, Line, //  no other criteria matches a blank cell 
0, Line, //  It's not worth compressing only 1 or two bytes,    due to the overheads 
0, Line, //  creating a row in place of another should remove the existing data,   check that the cell is gone now 
0, Line, //  Found from PersistPtrHolder 
0, Line, //  fib.setCcpTxtBx(fib.getCcpTxtBx() + adjustment);   } 
0, Line, // serialize and check that the data is the same as in r1 
0, Line, //  sprmPBrcTop80  
0, Line, //  Remove the core part 
0, Line, //  ignore exceptions from old parsers that don't support these features   (https://bz.apache.org/bugzilla/show_bug.cgi?id=62692) 
0, Line, //  Now all of them 
0, Line, //  Paragraphs should match with lines 
0, Line, //  the current element is not pushed to the stacked, i.e. it's the last 
0, Line, //  306 == 0x132; 310 == 0x0136 
0, Line, //         assertEquals(IndexedColors.YELLOW.index,r1pf.getFillBackgroundColor()); 
0, Line, //  email, path to file and url must be valid URIs 
0, Line, //  Now set another 
0, Line, //  The first short at the offset is the size of the grpprl. 
0, Line, //  create cell if it does not exist 
0, Line, //  from extractAttachments 
0, Line, //  integer, or integer portion uses all 11 allowed digits 
0, Line, //  calls System.exit(): SlideIdListing.main(new String[0]); 
0, Line, //  first comment works 
0, Line, //  Now strip out any remaining '#'s and add any pending text ... 
0, Line, // serialize and read again. The file should be readable and contain no shapes 
0, Line, //  we are not currently matching, replacing, or unbuffering 
0, Line, //   live within any merged regions 
0, Line, //  Get row that does not exist yet 
0, Line, //  Save the file and re-read it 
0, Line, //  cross over 
0, Line, //  line width 
0, Line, //  Create the comment and set the text-author 
0, Line, //  Merge in the built in formats if we haven't already 
0, Line, //  see #61633 
0, Line, //  A 16-bit signed integer that defines the number of bytes per scan line. 
0, Line, //  Save the completed workbook 
0, Block, /*          * ds:SignedInfo          */
0, Line, //  seems to be a valid workbook 
0, Line, //  Get structure from webservice 
0, Line, //  Change address (type is not changeable) 
0, Line, //  A 32-bit unsigned integer that defines the compression mode of the DIB.   This value MUST NOT specify a compressed format if the DIB is a top-down bitmap, 
0, Line, //  private static POILogger _logger = POILogFactory.getLogger(XSLFTextParagraph.class); 
0, Line, //  https://stackoverflow.com/questions/21855842 
0, Line, //  row inp col 0x4076 (!)   col inp col 0 
0, Line, //  So it's a relative part name, try to resolve it 
0, Line, //  In a rotated quadrant 1 (=45-135 degrees) and 3 (=225-315 degrees), which is basically a shape in a   more or less portrait orientation, Powerpoint doesn't use the normal shape anchor,   but rotate it 90 degress and apply the group transformations.   We try to revert that distortion and return the normalized anchor.   It's strange that you'll need to rotate the shape back and forth again, but you can   think of it, as if you paint the shape on a canvas. First you rotate the canvas, which might   be already (differently) scaled, so you can paint the shape in its default orientation   and later on, turn it around again to compare it with its original size ... 
0, Line, //  Check it matches 
0, Line, //  The sheet referenced can't be found, sorry 
0, Line, //  A signed integer that defines the amount by which to multiply the 
0, Line, //  VBA source files 
0, Line, //   and none of their character runs either 
0, Line, //  Find a spare key, and add that 
0, Line, //  read the workbook, adjust the SummaryInformation and write the data to a byte array 
0, Line, // This ensures that there is only one copy. 
0, Line, //  enclose 
0, Line, //  Try decreasing the upper limit below the current number of formats 
0, Line, // test that null doesn't throw NPE 
0, Line, //  Records we pick up as we process 
0, Line, //  intersected existing format runs 
0, Line, //  Create cells over the selected area 
0, Line, //   or none could be fetched 
0, Line, // re-create the sst table every time saving a workbook 
0, Line, //  extending XSLFSimpleShape is a bit unlucky ... 
0, Line, //  Allocate all 
0, Line, //  extra field len 
0, Line, //  Note that hyperlinks do not track what they point to, so this hyperlink should still refer to test!E1 
0, Line, //  check schema type loading and check if we could run in an OOM 
0, Line, //  Set link cell style (optional) 
0, Line, //  No comments for this slide 
0, Line, //  But has core details 
0, Line, //  Names don't match, not the same 
0, Line, //  Check that the "PowerPoint Document" sections have the same size 
0, Line, //  convert to 1-based 
0, Line, //  PNG   PNG   PNG   PNG 
0, Line, //  And the 2nd 
0, Line, //  Arc2D requires us to draw an arc from one point to another, so we   need to calculate the angle of the start point and end point along   the ellipse   - Derived from parametric form of ellipse: x = h + a*cos(t); y = k +   b*sin(t) 
0, Line, //  -1: first arg is used to select from a basic aggregate function 
0, Line, //  Ref - A2   Attr 
0, Line, //  also remove any comment located in that row 
0, Line, //  manipulated to accommodate the image; columns and then rows. 
0, Line, //  workbook-scoped name 
0, Line, //  exactly the opposite 
0, Line, //  comment is now in column 1 
0, Line, // the second slide uses custom per-slide headers / footers 
0, Line, //  end bitfields in cell options 
0, Block, /*              * we have start node. end offset points to next node, separator or             * end              */
0, Block, /*  else - The path is somewhere down in the POI filesystem's         * hierarchy. We need the tree node of this path's parent         * and attach our new node to it.  */
0, Line, //  German "scharfes s" is uppercased to "SS"   German "scharfes s" is uppercased to "SS"   Some German umlauts with lowercase first letter is changed to uppercase 
0, Line, //  Accounting -> 0 decimal places, default currency symbol 
0, Line, //  Check the 100(.00)% ones 
0, Line, //  Percentage values are stored as integers that are 50 times   percentage. 
0, Line, //  Get close to 32767 
0, Line, //  nothing 
0, Line, // the address is terminated by '\u0000' 
0, Line, //  The size in bytes of the FLD data structure 
0, Block, /*  only invoked locally and from the junit tests  */
0, Line, //  2. ptg refers to the moved sheet 
0, Line, //  ordered by page number 
0, Line, //  this listener has not registered before 
0, Line, //  num values   bubble series type 
0, Line, //  Typically from third party programs 
0, Line, // Create relationship between the pivot cache defintion and the workbook 
0, Line, //  It's a = condition. 
0, Line, //  First run has defaults 
0, Line, //   and the RC4 CryptoAPI encryption header structure 
0, Line, //  Should have one style 
0, Line, //  Orange "foreground", foreground being the fill foreground not the font color. 
0, Line, //  Reload, and ensure they were serialised and read correctly 
0, Line, //  If we did find all of rawCode with our new    byte added on, we can wait to see what happens 
0, Line, //  columns. 
0, Line, //  Create various cells and rows for spreadsheet. 
0, Line, //  Move somewhere spare 
0, Line, //  Check the hyperlinks 
0, Line, //  cap used at the start/end of the line to be drawn. 
0, Line, //  same as in column 4 but the font is twice larger than the default font 
0, Line, //  typical case - non-encrypted stream 
0, Line, //         assertNotNull(r.getWorkbookData());        assertNotNull(r.getSharedStringsData()); 
0, Line, //  Special case for single cell reference 
0, Line, //  perform the same check with LocalDateTime 
0, Line, //  Other one doesn't have notes 
0, Line, //  x coordinate of center point 
0, Line, //  if wordWrap == false then we return the advance to the (right) border of the sheet 
0, Block, /*          *  SET Intermediate2 TO Verifier MULTIPLED BY 2         *  SET most significant bit of Intermediate2 TO 0          */
0, Line, //  TRUE   "ABCD" 
0, Line, //  autosize not-evaluated cells, formula cells are sized as if the result is 0 
0, Line, //  Grab the data 
0, Line, //  Hex dump from bug 45784 attachment 22560 streamOffset=0x0CD1 
0, Line, //  Call should modify the contents and replace the formula with the result   returns the same cell that was provided as an argument so that calls can be chained. 
0, Line, //  Page 59 of 210 
0, Line, //  no change if after any affected row 
0, Line, //  A 32-bit unsigned integer that specifies the brush EMF Object Table index. 
0, Line, //  Data is always padded out to a 4 byte boundary 
0, Line, //  A 16-bit signed integer that defines the height of the bitmap in scan lines. 
0, Line, //  converted from TestDrawingManager(1) 
0, Line, //  special: character section 
0, Line, //  Add a second one 
0, Line, //  anchor of this group relative to the parent shape 
0, Line, //   20 or so MAPI ones 
0, Line, //  Build a formatter, and cache it 
0, Line, //  If the print setup isn't currently defined, then add it    in but without printer defaults   If it's already there, leave it as-is! 
0, Line, //  Fully mergeable      A B    1 x x   A1,A2,B1,B2 --> A1:B2 
0, Line, //  Identify and create our temp dir, if needed 
0, Line, //  Normal properties 
0, Line, //  byte   3-byte 
0, Line, //  Now move it to one 
0, Line, //  Sine Formula: "sin x y" = (x * sin( y )) = value of this guide 
0, Line, //  7 circles div 8: 7 x 360 / 8 = 315 
0, Line, //  see https://blogs.msdn.microsoft.com/officeinteroperability/2013/04/22/office-open-xml-themes-schemes-and-fonts/ 
0, Line, //  Again ensure contains character based offsets no matter what 
0, Line, //  update children index 
0, Line, // make sure all the HSSFColor constants match 
0, Line, //  master and 1 have notes 
0, Line, //  Raw text has \r instead 
0, Line, //  Casting to int should be safe here - tables larger than the   sheet (which holds the actual data of the table) can't exists. 
0, Line, //  Currently, there aren't any 
0, Line, //  we can't set font since slideshow is not assigned yet 
0, Line, //  "Sheet1" case etc   that was easy 
0, Line, //  Level 1 and 2 collapsed, Level 3 expanded,  
0, Line, //  we can append the new row at the end 
0, Line, //  so far 
0, Line, //  populate sheet cells 
0, Line, //  Not needed by POI.  Regenerated from scratch by POI when spreadsheet is written 
0, Line, //  table cells have a list of paragraphs; there is an initial   paragraph created when the cell is created. If you create a   paragraph in the document to put in the cell, it will also   appear in the document following the table, which is probably   not the desired result. 
0, Line, //  Normal, superscript for 4th, normal 
0, Line, //  Is it a new attachment? 
0, Line, //  Check the package contains what we'd expect it to 
0, Line, //  Windows Enhanced Metafile   Windows Metafile   Macintosh PICT   JFIF   PNG   Windows DIB 
0, Line, //  They should all have the same date on them 
0, Line, //  Open the copy in read/write mode 
0, Line, //  This function index represents the LEN() function 
0, Line, //  autoSize the first column and check its size before the merged region (1,0,1,1) is set: 
0, Line, //  but for num_chars causes empty string to be returned. 
0, Line, //  1 based   1 based 
0, Line, //  edit the workbook 
0, Line, //  may be 0-terminated, just trim it away 
0, Line, //  An 8-bit unsigned integer that specifies the x height of the font. 
0, Line, //  TODO - process 
0, Line, //  assumed row ranges set-up by caller: 
0, Line, //  We have to set up dates as well. 
0, Line, //  lookup and result row are different 
0, Line, //  don't try to match if the given byte-array is too short   for this pattern anyway 
0, Line, //  An optional array of 32-bit unsigned integers that defines the lengths of   dashes and gaps in the line drawn by this pen, when the value of PenStyle is   PS_USERSTYLE line style for the pen. The array contains a number of entries specified by   NumStyleEntries, but it is used as if it repeated indefinitely.   The first entry in the array specifies the length of the first dash. The second entry specifies   the length of the first gap. Thereafter, lengths of dashes and gaps alternate.   If the pen type in the PenStyle field is PS_GEOMETRIC, the lengths are specified in logical   units; otherwise, the lengths are specified in device units. 
0, Line, //  end public interface FixedField 
0, Line, //  other rows 
0, Line, //  readable + writable 
0, Line, // should read 85 rows 
0, Line, //  index should equal number of papxs that will be in this fkp now. 
0, Line, //  This encodng depends on docId, password and stream position 
0, Block, /*  **********  END  begin implementation of POIFSViewable **********  */
0, Line, //  color in percentage is in linear RGB color space, i.e. needs to be gamma corrected for AWT color   see https://en.wikipedia.org/wiki/SRGB (The forward transformation) 
0, Line, //  already exists 
0, Line, //  recordSize in DWORDs 
0, Block, /*          * Read the stream's header fields.          */
0, Line, //  Fake up a header 
0, Line, //  this paragraph is not a bullet, so reset the count array 
0, Line, //  contrived example to expose bug: 
0, Line, // macro comes from Common Crawl: 4BZ22N5QG5R2SUU2MNN47PO7VBQLNYIQ  A REFERENCE_NAME can sometimes only have an ascii string without  a reserved byte followed by the unicode string.  See https://github.com/decalage2/oletools/blob/master/oletools/olevba.py#L1516  and https://github.com/decalage2/oletools/pull/135 from (@c1fe) 
0, Line, //  save the result 
0, Line, //  nothing more to do if there are no sheets left 
0, JavaDoc, /*  * Tests Match functions as loaded from a test data spreadsheet.<p> * * Tests for bug fixes and specific/tricky behaviour can be found in the corresponding test class * (<tt>TestXxxx</tt>) of the target (<tt>Xxxx</tt>) implementor, where execution can be observed *  more easily.  */
0, Line, //  "Decimal" validation type 
0, Line, //  Build the name of the csv folder from that of the Excel workbook. 
0, Line, //  Back to normal 
0, Line, //  don't add record yet - set it in storeText 
0, Line, //  Work out how long the "data" is   This might be the actual data, or just a pointer 
0, Line, //  try to get a message id that does not exist 
0, Block, /*              * if cell style is defined (like borders, etc.) but cell text             * is empty, add "&nbsp;" to output, so browser won't collapse             * and ignore cell              */
0, Line, //  Save it 
0, Line, //   we need to output our pending code block 
0, Line, //  comment this out to get all bottom-aligned   cells 
0, Line, //  Check all of them in turn 
0, Line, //  user can pass an custom object to convert fonts 
0, Line, //  Initialise to empty 
0, Line, //  ChunkBasedPropertyValue cval = (ChunkBasedPropertyValue)val;   TODO Lookup 
0, Line, //  Check this complicated file using POIFS 
0, Line, // Check for Schema element 
0, Line, //  Get the part that holds the workbook 
0, Line, //  Try with this name 
0, Line, //  Rows being moved completely enclose the ref.   - move the area ref along with the rows regardless of destination 
0, Line, //  A 16-bit unsigned integer that specifies the WMF metafile version in terms 
0, Line, //   C: Explicit, Foreground 
0, Line, //  15 
0, Line, //  Grab records for testing with 
0, Line, //  valid prefix is 'C' 
0, Line, //  bookmark reference 
0, Line, //  pattern   format 
0, Line, //  general tests for not-equal (<>) operator 
0, Line, // String overhead 
0, Line, //  can't be asserted ... see bug 61300 
0, Line, //   dummy end-of-row records 
0, Line, //  The number of Unicode characters in the optional description string that follows. 
0, Block, /*  if connecting is possible we return true here  */
0, Line, //  mask makes multiples of 32 which optimises BigInteger.shiftRight 
0, Line, //  pad to next 2 byte boundary 
0, Line, //  Has one sheet, with values 1,2,3 in column A rows 1-3 
0, Line, //  sprmCCharScale 
0, Line, //  Internal 
0, Line, //  A 32-bit unsigned integer that specifies the size of the DIB header, if the 
0, Line, //  2-row/2-column intersection 
0, Line, //  we cannot merge cells included in an array formula 
0, Line, //  ignore all black mono-brushes 
0, Line, //  Get cell that already exists 
0, Line, //  Link still not there? Giving up. 
0, Line, //  Data size 
0, Line, // Another filter has already been created 
0, Line, //  records we happen across 
0, Line, //  always 2 
0, Line, //  MCT comes after 'Sheet View Settings' 
0, Line, //  infinity 
0, Line, //  Test with Java style M=Month 
0, Line, //  Findbugs: URF_UNREAD_FIELD. Do not delete without understanding how this class works.  this.xssfSheet = xssfSheet; 
0, Line, //  used from the outside?!? 
0, Line, //  Loop over each font, seeing if it is the same    as an earlier one. If it is, point users of the    later duplicate copy to the earlier one, and     mark the later one as needing deleting 
0, Line, //  thrown.expectCause(Matcher<ArrayComparisonFailure>); 
0, Line, //  *** sun.misc.Unsafe unmapping (Java 9+) *** 
0, Line, //  The anchor specified by the escher properties is the displayed size,   i.e. the size of the already clipped image 
0, Line, //  18 @ 88   *mask bit*   18 @ 106 
0, Line, //  Zap the un-needed user style records   removing by index, because removing by object may delete 
0, Line, // Step 2. Generate XML file. 
0, Line, //  Replace cell1 
0, Line, //  then draw any content within this shape (text, image, etc.) 
0, Line, //  ensure that the writer is closed in all cases to not have lingering writers 
0, Line, //  Should never get here 
0, Line, // "Offset=0x00000612(1554) recno=71 sid=0x00FC size=0x2020(8224)\n" + 
0, Line, //  Add another cell at the beginning 
0, Line, //  Default sample file has none 
0, Line, //  sprmCFBoldBi 
0, Line, //  Each block should only ever be used by one of the 
0, Line, //  short side div 32 
0, Line, //  the spec only refers to two possible upxs but it mentions 
0, Line, //  Default is no hyperlinks 
0, Line, //  Check POI 0 based, OOXML 1 based 
0, Line, //  OPCPackage  wb = new XSSFWorkbook(OPCPackage.open(file));  assertCloseDoesNotModifyFile(filename, wb); 
0, Line, //  First free one is 100 
0, Line, //  total size, will be determined later .. 
0, Line, //  The value MUST be in the Weight enumeration table. 
0, Line, // swap first column and last column numbers and relativity  Note: cannot just swap the fields because row relativity is stored in fields 3 and 4 
0, Line, //  Have the child pointers identified and created 
0, Line, //  false, true   false, true   false, true   false, true 
0, Line, //  MS Office can insert URIs with missing authority, e.g. "http://" or "javascript://" 
0, Line, //  blank eval translates to zero   Note - a blank eval in the lookup column/row never matches anything   empty string in the lookup column/row can only be matched by explicit empty string 
0, Line, //  3 @ 4093 
0, Line, //  When the required size is very close indded to the column size,   the calcaulation above can produce a negative value. To prevent   problems occuring in later caculations, this is simply removed 
0, Line, //  corner of the destination rectangle. 
0, Line, //  Create a base workbook 
0, Line, //  font size 20   character run is 28 long 
0, Line, //  testing based on new bug report 
0, Line, //  can we reuse existing? 
0, Line, // byte cInc = (byte)(((byte)(param & 0xfe00) >>> 4) >> 1); 
0, Line, //  Update the byte array with the latest data 
0, Line, //  0   FALSE 
0, Line, //  remove client data if the placeholder was the only child to be carried 
0, Line, //  300 - 7.2 - 7.2 - 0 
0, Line, // a new border was added to the styles table 
0, Line, // //// Case 13: Evaluate "Table1[[#Data],[col]:[col2]]" //////// 
0, Line, //  Check font count 
0, Line, //  for the sake of inheritance of the cryptoAPI classes   see 2.3.5.1 RC4 CryptoAPI Encryption Header   If set to 0x00000000, it MUST be interpreted as 0x00000028 bits. 
0, Line, //  pick out a cell from within the second shared formula group 
0, Line, //  System.err.println("Paragraph " + x + " was " + papx.getStart() + 
0, Line, //  There is also much logic inside Sheet that (if buggy) might also cause the discrepancy 
0, Line, //  Decompress it 
0, Line, // Set the columns the correct size 
0, Line, //  expand:   collapsed bit must be unset   hidden bit gets unset _if_ surrounding groups are expanded you can determine     this by looking at the hidden bit of the enclosing group.  You will have     to look at the start and the end of the current group to determine which     is the enclosing group 
0, Line, //  else some other unexpected error 
0, Block, /*  * HSSF Chart Title Format Record Type  */
0, Line, //  Padding (variable): A set of bytes that MUST be of the correct size such that the size of the    UNICODE-LP-P4 structure is a multiple of 4 bytes. If Padding is present, it MUST be exactly    2 bytes long, and each byte MUST be 0x00.             
0, Line, //  First up, we need to serialise the paragraph properties 
0, Line, //  plot area background and border line 
0, Line, //  num shapes in drawing   The last MSOSPID given to an SP in this DG 
0, Line, //  first, we need the raw data blocks 
0, Line, //  Copy over everything else unchanged 
0, Line, // Test a compressed small string that has rich text formatting 
0, Line, //  field_6_border_options bit map 
0, Line, //  Grab the core document part, and try to identify from that 
0, Line, //  Now sort these chunks lists so they're in ascending order, 
0, Line, //  Write lots, so it needs another big block 
0, Line, //  Relationships can't be changed, so remove the old one 
0, Line, //  Bug 55791: We also need to check that the resulting file name is not already taken   this can happen when removing/adding slides, notes or charts 
0, Line, //  border options bitfields 
0, Line, //  cs6 = cs2 -> 22 
0, Line, //  Runs itself is easy to update 
0, Line, //  Parents don't matter if contents + names are the same 
0, Line, //  Check the value - will be zero as it is <c><v/></c> 
0, Line, //  Strip custom text in quotes and escaped characters for now as it can cause performance problems in fractions. 
0, Line, // the first slide uses presentation-scope headers / footers 
0, Line, //  Compress it using our engine 
0, Line, //  Starts out with the default style 
0, Line, //  And another where we do an in-place write 
0, Line, //  try to find an alternative name 
0, Line, //  The header block doesn't count, so add one 
0, Line, // setting the same fill multiple time does not update the styles table 
0, Line, //  basis zero has funny adjustments to the day-of-month fields when at end-of-month 
0, Line, //  assumes parsing interprets the overloaded property right for XSSF 
0, Line, //  unused   '?' = multiple values 
0, Line, //  the BAT will be in the first spot of the new block 
0, Line, //  Note - these assignments deliberately set Feb 30 date. 
0, Line, //  wasn't already listening for everything, so drop   anything listener might have been listening for and   then add the listener to the set of omnivorous   listeners 
0, Line, //  static final File pfxFile = TempFile.createTempFile("poitest", ".pfx"); 
0, Line, //  more complicated failed 
0, Block, /*          * Completion of undigested ds:References in the ds:Manifests.          */
0, Line, //  The next three rows will hold the data that will be used to 
0, Line, //  key: id of master 
0, Line, //  1x1 corner intersection   1-row/1-column intersection 
0, Line, //  We don't support negative years yet 
0, Line, // expected flag  expected # of sheets  sid+size+data 
0, Line, //  paragraph is 25 long   paragraph reserved field 
0, Line, //  end public class EntryNode 
0, Line, // If number < -549,755,813,888 or if number > 549,755,813,887, this function returns the #NUM! error value. 
0, Line, //  An 8-bit unsigned integer that defines the number of color planes in the  
0, Line, //  set bitfields for indention options 
0, Line, // Create a unicode dataformat (contains euro symbol) 
0, Line, //  strip off trailing zeros 
0, Line, //  Browse default types 
0, Line, //  special cases when one operand is blank 
0, Line, //  same as EscherTertiaryOptRecord.RECORD_ID 
0, Line, //  the old record was never registered, ignore it 
0, Line, //  verify we can't read a short block 
0, Line, //  normal case 
0, Line, //  Should support XSSF stuff lookups 
0, Line, //  Remove when SXSSFRow.shiftCellsLeft() is implemented.  
0, Line, // length of the parent text 
0, Line, //  Now the final pass for quoted chars: Replace any \u0000 with '' 
0, Line, // If the row exists remove it, so that any cells attached to the row are removed 
0, Line, //  writing 4 byte data to a 5 byte buffer 
0, Line, //  It's really gone! 
0, Line, //  bitfields for additional palette options 
0, Line, //  the desired style does not exist in the workbook. Create a new style with desired properties. 
0, Line, //  Add mini and normal sized entries to start 
0, Line, //  check sheet-index with one more => throws exception 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.formula.EvaluationSheet#getlastRowNum()     * @since POI 4.0.0      */
0, Line, //  Another 13 comes before the next 14.   This means there's nested stuff, so we 
0, Line, //  those cells to populate the second drop down list. 
0, Line, // ////////////////////////////// From POIFS ///////////////////////////// 
0, Line, //  Check old and new are there 
0, Line, //  switch XWPF and HWPF and so forth depending on the error message 
0, Line, // length in bytes for this record 
0, Line, //  Recheck the data in all 4 streams 
0, Line, //  Setup the environment 
0, Line, //  If the shared formula range precedes the master cell then the preceding  part is discarded, e.g.   if the cell is E60 and the shared formula range is C60:M85 then the effective range is E60:M85 
0, Block, /* int bytesRemaining = */
0, Line, // 			File f = new File(System.getProperty("java.io.tmpdir") + "/testArraysAndTables-out.xls"); 
0, Line, // create relationship in document for new chart 
0, Line, //  put the last chpx's end in 
0, Line, //  formula, throws NotImplemnted? 
0, Line, //  Checksum 
0, Line, //  Actually stored as C1 to C65536 
0, Line, //  cs3 = cs1 -> 21 
0, Line, //  Tidy up 
0, Line, //  Middle 
0, Line, //  Decide what to call it 
0, Line, //  Held on the 1st bit 
0, Line, // //////////////// Word 
0, Line, //  And finally XML 
0, Line, //  Should fail if we try to add the same comment for the same cell 
0, Line, //  organize the document pieces 
0, Line, //  don't try to shoot in foot, please -- vlsergey   r2.setOptions((short) 0x9876); 
0, Line, //  verify 
0, Line, //  'stream id' field tells you 
0, Line, //  Write out the rgb values 
0, Line, //  Check the data 
0, Line, //  Clear the cached values 
0, Line, //  beat on the children allocation code 
0, Line, //  just to be dead sure test conversion in java both ways 
0, Line, //  Referenced in ZIP 
0, Line, //  make sure, that we've read all the streams ... 
0, Line, //  sprmCHresi -- 0x484e 
0, Line, //  charset, padding   name length, unicode flag 
0, Line, //  table has a single row by default; grab it 
0, Line, //  Reserved fields 
0, Line, //  Grab the unicode username, if stored 
0, Line, //  some documents contain invalid values here 
0, Line, //  pad the last chunk 
0, Line, // set the 'pre-evaluated result 
0, Line, //  Ministore has no blocks, so can't iterate until used 
0, Line, // setting indexed color 
0, Line, // case 2. cell.setCellValue((String)null); 
0, Block, /*  Part already existed, get relation id and return it  */
0, Line, //  1" 
0, Line, //  A1:E1 should move to A5:E5   A2:C2 should be removed 
0, Line, //  Check bits 
0, Line, //  depending on the value of the SOLID_COLOR flag in the Flags. 
0, Line, //  Internal reference 
0, Line, //  aspect ratio. 
0, Line, //  PT_BEZIERTO   Specifies that this point is a control point or ending point for a Bezier curve.   PT_BEZIERTO types always occur in sets of three.   The current position defines the starting point for the Bezier curve.   The first two PT_BEZIERTO points are the control points,   and the third PT_BEZIERTO point is the ending point.   The ending point becomes the new current position. 
0, Line, //  Just normal properties 
0, Line, //  be specified independently of the orientation angle of the string's characters. 
0, Line, //  Ensure none of the paragraphs refer to one that isn't there,    and none of their character runs either 
0, Line, //  RVA is for 'operand class': 'reference', 'value', 'array' 
0, Line, //  open the file input stream   NOSONAR 
0, Line, //  returns True if this row shouldn't be displayed 
0, Line, // compatibility with HSSF 
0, Line, //  Else, if the image is smaller than the space available 
0, Line, //  Won't be styled currently 
0, Line, //  We use the RecordTypes class to provide us with the right    class to use for a given type   A spot of reflection gets us the (byte[],int,int) constructor   From there, we instanciate the class 
0, Line, //  Formatted numbers   TODO        assertContains(text, "55,624");        assertContains(text, "11,743,477"); 
0, Block, /*          * Count of styles in stylesheet         *          * The number of styles in this style sheet. There will be stshi.cstd         * (cbSTD, STD) pairs in the file following the STSHI. Note: styles can         * be empty, i.e. cbSTD==0.          */
0, Line, // flags: HyperlinkRecord.HLINK_LABEL | HyperlinkRecord.HLINK_PLACE 
0, Line, //  Try to create a comments table with the same number as    the sheet has (i.e. sheet 1 -> comments 1) 
0, Line, //  Do now, as characters() may be called more than once 
0, Line, //  mask is 0x060002 
0, Line, //  when 4 digit value appears first, the format is YYYY/MM/DD, regardless of OS settings 
0, Line, // 		} 
0, Line, //  An EmfPlusGraphicsVersion object that specifies the version of operating system graphics that 
0, Line, //  The CellNumberFormatter.simpleValue() method uses the SIMPLE_NUMBER   CellFormatter defined here. The CellFormat.GENERAL_FORMAT CellFormat   no longer uses the SIMPLE_NUMBER CellFormatter.   Note that the simpleValue()/SIMPLE_NUMBER CellFormatter format   ("#" for integer values, and "#.#" for floating-point values) is   different from the 'General' format for numbers ("#" for integer   values and "#.#########" for floating-point values). 
0, Line, //  Set up a simple IF() formula that has measurable evaluation cost for its operands. 
0, Line, //  i.e. absolute from 1st row to 0th one 
0, Line, //  Check our SBAT free stuff is correct 
0, Line, //  write out the FontTable. 
0, Line, //  handle raster op   currently the raster op as described in https://docs.microsoft.com/en-us/windows/desktop/gdi/ternary-raster-operations   are not supported, as we would need to extract the destination image area from the underlying buffered image   and therefore would make it mandatory that the graphics context must be from a buffered image   furthermore I doubt the purpose of bitwise image operations on non-black/white images 
0, Line, //  using area unions 
0, Line, //  else not success? Try block did not complete normally   just print stack trace and leave original ex to be thrown 
0, Line, // ????  ???? 
0, Block, /*  Static initialization  */
0, Line, //  that is not an exact multiple of block size 
0, Line, //  No change after write 
0, Line, //  now write the file and read it back in 
0, Line, //  much simple implementation base on SubdocumentType --sergey 
0, Block, /*             The bytes for the following test:            170 : 78 : x            171 : 0 :            172 : d : <r>            173 : 35 : 5            174 : 39 : 9            175 : 0 :            176 : 2d : -            177 : 0 :            178 : 35 : 5            179 : 0 :            180 : 35 : 5            Note that we are skipping over the value "5" at offset 173.            This is an apparently invalid sequence in MS's encoding scheme            When I open the document in MSWord, I also see "\r9-55"         */
0, Line, //  having a file shorter than 8 bytes previously caused an exception 
0, Line, // Write out the file, read it in, and then check cell values 
0, Line, //  Force 'setCellType' to create a first Record 
0, Block, /*      <AnimationInfoAtom info="1" type="4081" size="28" offset="4015" header="01 00 F1 0F 1C 00 00 00 ">       00 00 00 07 04 05 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 00       00 00 00     </AnimationInfoAtom>      */
0, Line, //  except in these cases Excel really tries to render them as if they were normal numbers 
0, Line, //  Hold onto the size of this block that was serialized 
0, Line, //  Add a default header 
0, Line, // this means null value (2.5.166), do not read any bytes!!! 
0, Line, //  see [MS-OFFCRYPTO] - 2.3.3 EncryptionVerifier 
0, Line, //  grpprls must fall on word boundaries 
0, Line, //  Is empty 
0, Line, //  1 => a, not 0 => a 
0, Line, //  text.append("\nThumbnail:           " + si.getThumbnail()); 
0, Line, //  Check two aspects of the print setup 
0, Line, //  Ensure it now has one 
0, Line, //  (unnamed range) reference list 
0, Block, /*  Yes, it is a summary information. We will modify it                             * and write the result to the destination POIFS.  */
0, Line, //  getValue() is replaced with getAbsoluteValue() because loop variables i, j are   absolute indexes values, but getValue() works with relative indexes values 
0, Line, // default values 
0, Line, //  don't EVER use 1904 date windowing...tick tock.. 
0, Line, //  First up, check that we can process the header properly 
0, Line, //  this usually clears out previous content in the part... 
0, Line, //  Saving data in the ZIP file 
0, Line, //  Our initial size is 10 
0, Line, //  Change the x and y 
0, Line, //  Word Document - binary (OLE2CDF) file format 
0, Line, //  Background ... Accent 3 color 
0, Line, // What if we dont have any ranges and supbooks 
0, Line, //  In the right form for a normal chunk   We'll process this further in a little bit 
0, Line, //  Check read only advised 
0, Line, //  for the junit test not all chars are rendered 
0, Block, /*              * From: http://social.msdn.microsoft.com/Forums/en-US/3dadbed3-0e68-4f11-8b43-3a2328d9ebd5             *              * The initial value for XorArrayIndex is as follows:             * XorArrayIndex = (FileOffset + Data.Length) % 16             *              * The FileOffset variable in this context is the stream offset into the Workbook stream at             * the time we are about to write each of the bytes of the record data.             * This (the value) is then incremented after each byte is written.               */
0, Line, //  this can lead to a StringBufferOutOfBoundsException, so we will add it 
0, Line, //  FormulaShifter works well in terms of Ptgs - so convert CellRangeAddress to AreaPtg (and back) here 
0, Line, //  update named ranges 
0, Line, //  A 32-bit unsigned integer from the RecordType enumeration that identifies this record 
0, Line, //  Ensure the headers and footer were set correctly.... 
0, Line, //  Not sure if any tools write files like this, but Excel reads them OK 
0, Line, //  https://poi.apache.org/spreadsheet/quick-guide.html#Hyperlinks 
0, Line, //  sid, length   bof   flags   str-len. unicode flag   string data 
0, Line, // Absolute path notation - different device 
0, Line, //  Row is null since we deleted it. 
0, Line, //  it doesn't have any styles   second char run is 17 long 
0, Line, //  padding 
0, Line, //  Also adds 4 bytes to hold the length 
0, Line, //  The column width returned by HSSF and the width of a picture when   positioned to exactly cover one cell are different by almost exactly   2mm - give or take rounding errors. This constant allows that   additional amount to be accounted for when calculating how many   celles the image ought to overlie. 
0, Line, //  save memory by just using the cell itself as the identity key   Note - this assumes SXSSFCell has not overridden hashCode and equals 
0, Line, //  cases with three ranges 
0, Line, //  bullet is valid, so increment i 
0, Line, //  Used to blow up with an IllegalArgumentException 
0, Line, //  by default line break has the font size of the last text run 
0, Line, //  -1 just in case this column is collapsed later. 
0, Line, //  610 -- 0x0262; 614 == 0x0266 
0, Line, //  Check slide 1 is as expected 
0, Line, // numbers are treated as word breaks  nothing happens with ascii punctuation that is not upper or lower case  nothing happens with unicode punctuation (section sign) that is not upper or lower case  nothing happens with ascii punctuation that is not upper or lower case  acronyms are not special  leading whitespace is ignored 
0, Line, //  Defaults are odd 
0, Line, //  Ensure we really found a Document record earlier 
0, Line, //  1. sheet is outside moved sheets, no change necessary 
0, Line, //  Ensure that we have a BOOK entry 
0, Line, //  ignored?   lower left   lower left 
0, Line, //  Now create all the relationships   (Need to create relationships before other    parts, otherwise we might create a part before 
0, Line, //  Sanity Checking - we're always 40 bytes long 
0, Line, //  print draft quality 
0, Line, //  A 32-bit signed integer that specifies the logical x-coordinate of the upper-left 
0, Line, //  Check can't shift where would overshoot 
0, Line, //  end public interface BlockWritable 
0, Line, // Set the default style for the pivot table 
0, Line, //  attempt to overwrite a row that is already flushed to disk 
0, Line, // Excel seems to max out after 128 info records.  This isn't really documented anywhere... 
0, Line, //  the line chart on secondary axis 
0, Line, //  height. 
0, Line, //  center of rotation relative to self 
0, Line, //  skip Parentheses, Attr, etc 
0, Line, //  extract the payload 
0, Line, // Test the cell formula 
0, Line, //  "=SUMIFS(A2:A9, B2:B8, "<>Bananas", C2:C9, 1)" 
0, Line, // Add the row header to the sheet 
0, Line, //  check row numbers to make sure they are continuous and increasing (monotonic) 
0, Line, //  sometimes the placeable header is filled/aligned to dwords. 
0, Line, //  Blank 
0, Line, //  To track formats and encodings 
0, Line, //  Should find 4 slides 
0, Line, //  aim is to get these classes loaded and included in poi-ooxml-schemas.jar 
0, Block, /* 		 * Data taken from offset 0x0224 in		 * attachment 23468 from bugzilla 47001		  */
0, Line, //  short side div 2 
0, Line, // read cell info and check for missing comments 
0, Line, //  lv1 
0, Line, //  usually the shape name has its index based on the n-th embeding, but having   the prototype separate from the actual updating of the object, we use the shape id 
0, Line, // re-create the removed row and cell 
0, Line, // A2 -> 5.0   B2 -> A1 -> "hello"   A3 -> A2 -> 5.0   B3 -> B2 -> A1 -> "hello"  Sheet2!A1 -> Sheet1!A2 -> 5.0 
0, Line, //  POI 3 
0, Line, //  The default footer is an odd footer 
0, Line, //         this.background = background; 
0, Line, //  put the ending offset of the last property into the plcf. 
0, Line, //  And set with the Charset index 
0, Line, //  does match blank 
0, Line, //  HeaderSize (2 bytes):  A 16-bit unsigned integer that defines the number 
0, Line, //  sum of all values in the 1st row: 1 + 2 + 3 = 6 
0, Line, // &B == bold  &E == double underline 
0, Block, /*  Write the sections themselves.  */
0, Line, //  8 @ 28 
0, Line, //  Create a 2 block stream, will become a 3 block one 
0, Line, //  Each attachment should have 6 normal attributes, and  
0, Line, //  ensure that CTPhoneticRun is loaded by the ooxml test suite so that it is included in poi-ooxml-schemas 
0, Line, //  end of area is preserved (will remain exact same row)   the top area row is moved simply 
0, Line, //  this also removes the password for non encrypted files 
0, Line, //     .fontindex       = 0      .formatindex     = 0      .celloptions     = fffffff5            .islocked  = true            .ishidden  = false            .recordtype= 1            .parentidx = fff      .alignmentoptions= 20            .alignment = 0            .wraptext  = false            .valignment= 2            .justlast  = 0            .rotation  = 0      .indentionoptions= 0            .indent    = 0            .shrinktoft= false            .mergecells= false            .readngordr= 0            .formatflag= false            .fontflag  = false            .prntalgnmt= false            .borderflag= false            .paternflag= false            .celloption= false      .borderoptns     = 0            .lftln     = 0            .rgtln     = 0            .topln     = 0            .btmln     = 0      .paleteoptns     = 0            .leftborder= 0            .rghtborder= 0            .diag      = 0      .paleteoptn2     = 0            .topborder = 0            .botmborder= 0            .adtldiag  = 0            .diaglnstyl= 0            .fillpattrn= 0      .fillpaloptn     = 20c0            .foreground= 40            .background= 41 
0, Line, //  Check we got the sheet and the contents 
0, Line, //  Header 
0, Line, // TestXSSFReader.class, //converted to junit4 
0, Line, //  happens for GETPIVOTDATA 
0, Line, //  Find the PowerPoint bit, and get out the bytes 
0, Line, //  Store in the appropriate record 
0, Line, //  Assert 
0, Line, //  Ensure these numbers are valid 
0, Line, //  header opcode   pic size dummy 
0, Line, //  When the comment box is visible, have it show in a 1x3 space 
0, Line, //  Master sheet + master notes + 2 slides + 2 notes + document 
0, Line, //  Add a single block one 
0, Line, // get any Nums 
0, Line, //  accessing directly is an optimisation 
0, Line, //  Much guess-work going on here due to lack of any documentation.   See similar source code in OOO:   http://svn.services.openoffice.org/ooo/trunk/sc/source/filter/excel/xiescher.cxx   1223 void XclImpOleObj::ReadPictFmla( XclImpStream& rStrm, sal_uInt16 nRecSize ) 
0, Line, //  Written by Excel 2007   rawData is multiple of 12 bytes long   appears after last cell value record and before WINDOW2 or drawing records 
0, Line, //  Find the Document, and interesting things in it 
0, Line, //  Row 21 
0, Line, //  -1 for all 
0, Line, //  POI 1 
0, Line, //  As of 2015-12-27, there is no way to override a built-in number format with POI XSSFWorkbook 
0, Line, //  declare a cell object reference 
0, Line, //  Has one slide 
0, Line, //  The first paragraph added using createParagraph() should   have the required footnote reference added to the first   run. 
0, Block, /*          * The PlfLst structure contains the list formatting information for the         * document. -- Page 425 of 621. [MS-DOC] -- v20110315 Word (.doc)         * Binary File Format          */
0, Line, //  So, treat it as a regular HSLF PPT one 
0, Line, //  initialize hotspot diagnostic MBean 
0, Line, //  already read sid of next record. so current one is finished 
0, Line, //  only print slide layout, if it's a different instance 
0, Line, //  PICT zip-stream can be erroneous, so we clear the array to determine   the maximum of read bytes, after the inflater crashed 
0, Line, // collapse - 2 
0, Line, //  Row 20 
0, Line, //  for 2 columns, so now 
0, Line, //  Can't work for Read-Only files 
0, Line, //  bug 61381 
0, Line, // //// Case 17: Evaluate "Table1[[#This Row], [col1]]" //////// 
0, Line, //  add at the beginning 
0, Line, //  EncryptionVersionInfo (4 bytes): A Version structure (section 2.1.4), where    Version.vMajor MUST be 0x0004 and Version.vMinor MUST be 0x0004 
0, Line, //  - no change to the area 
0, Line, //  no-arg constructor 
0, Line, //   need to apply our normal validation rules 
0, Line, //  A 32-bit PointS Object that specifies a point for the object dimensions.   The x-coordinate is the pen width. The y-coordinate is ignored. 
0, Line, //  Change the Comment2000Atom 
0, Line, //  in order to reduce the number of false positives we run it a few times before we fail,  
0, Line, //  Only first column should move 
0, Line, // collapse - 3 
0, Line, //  Specifies that this point starts a disjoint figure. This point becomes the new current position. 
0, Line, //  The following constants declared by the Microsoft Office Visio type   library show return values for the FromPart property.   Constant Value   visConnectFromError -1   visFromNone 0   visLeftEdge 1   visCenterEdge 2   visRightEdge 3   visBottomEdge 4   visMiddleEdge 5   visTopEdge 6   visBeginX 7   visBeginY 8   visBegin 9   visEndX 10   visEndY 11   visEnd 12   visFromAngle 13   visFromPin 14   visControlPoint 100 + zero-based row index (for example, visControlPoint   = 100 if the control point is in row 0; visControlPoint = 101 if the   control point is in row 1) 
0, Line, //   it happens to be spelled. 
0, Line, //  some files have "Workbook" instead 
0, Line, //  stored with a special name 
0, Line, //  check active sheet 
0, Line, //  end of bitfields. 
0, Block, /*  Yes, the current document is a property set stream.                     * Let's create a PropertySet instance from it.  */
0, Line, //  --> Initialize from the initial code array (see below), depending on the passwords length.  
0, Line, //  An array of 16-bit signed integers that define the coordinates of the polygons.   (Note: MS-WMF wrongly says unsigned integers ...) 
0, Line, //  Now with another file only containing master text 
0, Line, //  setting a precalculated int value works as expected 
0, Line, //  Clone drawing relations 
0, Line, //  align is set in autoshape prototype 
0, Line, //  Because of missing 0-paddings in the original input files, the bytes might differ.   This fixes the comparison 
0, Line, //  previous selection should be cleared 
0, Line, // nominally 4 
0, Line, //  As currently implemented, cell value is copied but merged region is not copied 
0, Line, //  Note - for start_num arg, blank/zero causes error(#VALUE!), 
0, Line, //  bug 60260: renaming a sheet with a named range referring to a unicode (non-ASCII) sheet name 
0, Line, //  this test passes before the fix for 59814 
0, Line, //  A 16-bit unsigned integer that defines the number of planes for the target 
0, Line, //  See http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#cg 
0, Line, //  Check before the optimise 
0, Line, //  confirm default activation/selection 
0, Line, //  aka star in native 
0, Line, //  verify that we have enough data 
0, Line, //  Maybe it's a string? who knows! 
0, Line, //  Row '5' 
0, Line, //  1904 windowing 
0, Line, //  Excel Workbook - OpenXML file format 
0, Line, //  Shift it down one row 
0, Line, //  org.apache.poi.hwpf.converter 
0, Line, //  setup for this testcase 
0, Line, //  text is interesting 
0, Line, //  26 
0, Line, //  Create a new document from scratch 
0, Line, //  Notes 
0, Line, //  append the text for each footer type in the same order   they are appended in XSSFExcelExtractor 
0, Line, //  Current bug in XSSF:   Call stack:     XSSFWorkbook.write(OutputStream)     XSSFWorkbook.commit()     XSSFWorkbook.saveNamedRanges()   This dumps the current namedRanges to CTDefinedName and writes these to the CTWorkbook   Then the XSSFName namedRanges list is cleared and rebuilt   Thus, any XSSFName object becomes invalid after a write 
0, Line, //  get the page number for the first fkp 
0, Line, //  need bouncycastle provider for this one ... 
0, Line, //  when criteria is numeric 
0, Line, //  first byte needs to be 0 for unsigned BigInteger 
0, Line, //  some old files are not detected correctly 
0, Line, //  YK: in some cases records can be moved to the preceding 
0, Line, //  a file or a folder full of files. 
0, Line, //  If hyperlink is fully contained in the rows that will be overwritten, delete the hyperlink 
0, Line, //  Second child should be the ExOleObjAtom 
0, Line, //  set inside vertical border 
0, Line, //  adjust active sheet 
0, Line, //  out of range 
0, Line, // ther meaning is unknown 
0, Line, //  result of multiplying the current y-extent by the value of the yNum member. 
0, Line, //  strLen, optionFlags 
0, Line, //  toplevel shapes only 
0, Line, //  rows containing area bottom being shifted up: 
0, Line, //  Ensure it swapped over 
0, Line, //  sprmCHpsBi 
0, Block, /*  Handling the document summary information is analogous to handling             * the summary information. An additional feature, however, are the             * custom properties.  */
0, Line, //  Does nothing and ignores closing the wrapped stream 
0, Block, /*  Create a mutable property set with a section that does not have the         * formatID set:  */
0, Line, // private static final int DEFAULT_HEIGHT_BIT = 0x8000; 
0, Line, //  so make a dummy FuncVarPtg for that call. 
0, Block, /*  Print the list of sections:  */
0, Line, //  handle (a) and (b) 
0, Line, //  used to be "B3*C1-C2" 
0, Line, //  A 32-bit unsigned integer that specifies text alignment by using a mask of text alignment flags.   These are either WMF TextAlignmentMode Flags for text with a horizontal baseline,   or WMF VerticalTextAlignmentMode Flags for text with a vertical baseline.   Only one value can be chosen from those that affect horizontal and vertical alignment. 
0, Line, //  Sync the associated range 
0, Line, //  RPHSSub 
0, Block, /*  cached values  */
0, Line, // make sure that the footer only appears once 
0, Line, //  Add a new Normal Stream (Normal Streams minimum 4096 bytes) 
0, Line, //  Finally, find all our streams 
0, Line, //  sometimes there are namespaces sometimes not. 
0, Line, //  don't search for RecordTypes.StyleTextPropAtom.typeID here ... see findStyleAtomPresent below 
0, Line, //  // First up, trigger a full-recalculate   // Needed in case of deletes etc   getOverallRange();   
0, Line, //  Return the newly created drawing 
0, Line, // rows are sorted: {0, 1, 2} 
0, Line, //  see DocumentAtom.SlideSize 
0, Line, //  Ensure we can fetch those as custom ones 
0, Line, //  application/vnd.openxmlformats-officedocument.spreadsheetml.sheet 
0, Line, //  0 
0, Line, //  named range or table? 
0, Line, //  Try again in case there's multiple 
0, Line, //  Now we have blank cell A4 
0, Line, //  A 32-bit floating-point value that specifies the width of the arrow cap.   The width of the arrow cap is scaled by the width of the EmfPlusPen object that is used to draw the   line being capped. For example, when drawing a capped line with a pen that has a width of 5 pixels, 
0, Line, //  for all other argument types the result is empty string 
0, Line, //  Simple file 
0, Line, //  a test-case to test all .ppt files without executing the full TestAllFiles 
0, Line, //  Font collection should contain 3 fonts 
0, Line, //  Check this sheet has an autofilter, (which has a built-in NameRecord at workbook level) 
0, Line, //  Create an empty block 
0, Line, //  update this if a longer pattern is added 
0, Line, // this test case was triggered by Tika-1130 
0, Line, //  flush all remaining data and close the temp file writer 
0, Line, //  Save it and re-check 
0, Line, //  Relative part name 
0, Line, //  Save and manually verify that on column C we have now 13, calculated value 
0, Line, //  noHeaderFooter47244.xls was created by a slightly modified POI   which omitted the HEADER/FOOTER records 
0, Line, //  "; charset=ISO-8859-1"); 
0, Line, //  application/msword 
0, Line, //  table in the DIB header. This value MUST be in the DIBColors enumeration 
0, Line, //  verify  AutoFilterInfoRecord 
0, Line, //  get a reference to a line style within the style matrix. 
0, Line, //  If the column is wider than the image. 
0, Line, // as mentioned above, this ignores the exact space formatting in Excel 
0, Line, //  ignore header size 
0, Line, //  p;n;z;s parts 
0, Line, //  Mark as done 
0, Line, //  Is the name a valid $A$1 cell reference 
0, Line, //  Throwing exceptions is okay. 
0, Line, //  286: GAMMADIST 
0, Line, //  Shift the 4th row up into the gap in the 3rd row 
0, Line, // nominally 1 
0, Line, //  both mean the same 
0, Line, //  We're a new External Link Table, so nothing to remove 
0, Line, //  Now build up a new one 
0, Line, //  Write out and back in 
0, Line, //  i.e. when shifting down, start from down and go up, when shifting up, vice-versa 
0, Line, //  write out the CHPBinTable. 
0, Line, //  Evaluate the cells 
0, Line, //  workbookName or sheetName needs quoting   quotes go around both 
0, Line, //  Next two are for the two slides 
0, Line, //  Step down:   8 -> 4 -> 5 -> 1 -> 0 == String 
0, Line, //  exemption for #60294 
0, Line, //  this method is ALWAYS called after construction -- using   the nontrivial constructor, of course -- so this is where 
0, Line, //  THE FOLLOWING THREE LINES ARE THE MAIN CHANGE compared to the non-streaming version: use the SXSSF sheet,   not the XSSF sheet (which never contais rows when using SXSSF) 
0, Line, //  Check it didn't get changed 
0, Line, //  support for value[space]% 
0, Line, //  test cases for newer versions of Excel where d can be negative for 
0, Line, //  not [128, 0, 0] 
0, Line, // 1 property found 
0, Line, //  de-reference area ref (note formula is in C4) 
0, Line, //  Check for special cases 
0, Line, //  the new facet needs to be inserted before the current facet 
0, Line, //  Row 22 
0, Line, //  XSSF Workbook gives helpful error 
0, Line, //  Setup the inline with 0 margin 
0, Line, //  New row has last col -1 
0, Line, //  NULL_PEN - A null pen   PenStyle: PS_NULL 
0, Line, //  make sure ptg has single private constructor because map lookups assume singleton keys 
0, Line, //  Check we find a few numbers we expect in there 
0, Line, //  Create the Chunk+Pointer Factories for the document version 
0, Line, //  okay 
0, Line, //  placeholder for tAttrIf 
0, Line, //  Check it has some slides 
0, Line, //  Check the normal bits 
0, Line, //  For tracking what we've written out, so far 
0, Line, //  create a ExternalNameRecord that will describe this name 
0, Line, //  V4 and V5 never has trailers 
0, Line, //  the code here seems to depend on complexData already being   sized correctly via the constructor 
0, Line, //  Open the workbook and then create the FormulaEvaluator and   DataFormatter instances that will be needed to, respectively,   force evaluation of forumlae found in cells and create a   formatted String encapsulating the cells contents. 
0, Line, // Getting its reference 
0, Line, //  http://www.oracle.com/technetwork/articles/javase/dig-signature-api-140772.html 
0, Line, //  File  wb = new SXSSFWorkbook(new XSSFWorkbook(file));  assertCloseDoesNotModifyFile(filename, wb); 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getValidationConstraint()      */
0, Line, //  Check sizes 
0, Line, //  we've fully matched the pattern and are returning bytes from the replacement 
0, Line, //  this is an if statement without a false param (as opposed to MissingArgPtg as the false param)  i++; 
0, Line, // test reading/serializing of a PNG blip 
0, Line, //  Update the r:id 
0, Line, //  but these extractors modify the document,   which is a no-go for this Word 6.0 file 
0, Line, //  sheet1 A1 
0, Line, //  longer time spans 
0, Line, //   isn't tagged as doing so. Try stepping in anyway 
0, Line, //  Last one is blank 
0, Line, //  URI fragment 
0, Line, //  for some file-types also run OPCFileHandler 
0, Line, //  The negative number format has the negative formatting required,   e.g. minus sign or brackets, so pass a positive value so that   the default leading minus sign is not also output 
0, Line, //  valid prefix is 'D' 
0, Line, // //// Evaluate "Table1[[#Data],[col]]" //////// 
0, Line, //  And how long it is   (Un-compressed codes are 1 byte each, compressed codes 
0, Line, //  2 == "0.".length() 
0, Line, //  A fairly complex file 
0, Line, //  calls System.exit(): PPDrawingTextListing.main(new String[0]); 
0, Line, //  Normally seems to be 1 
0, Line, //  Create the bottom border style so we know what a border is supposed to look like 
0, Line, //  Records ~12050 seem to be related to Document Encryption 
0, Line, //  Set a new default row height in points and test getting the value in twips 
0, Line, //  Now try to change it 
0, Line, // short -- no need to safely allocate 
0, Line, //  DEFAULT_PALETTE   The default palette that is defined for the current output device. 
0, Line, //  No link recorded, nothing we can do 
0, Line, //  check table size (+1 for the header row) 
0, Line, //  DC_BRUSH   The solid-color brush that is currently selected in the playback device context. 
0, Block, /*  original line  */
0, Line, //  sometimes binary format has XML-format-extension... 
0, Line, //  the two strokes to use 
0, Line, //  create the time-stamp 
0, Line, //  If the source is the root, then the relativized 
0, Line, // The rowNum is 0 based 
0, Line, // label 
0, Line, //  2 rows   TRUE 
0, Line, // == is intentionally not .equals()!  == is intentionally not .equals()! 
0, Line, //  manually check the file to make sure the cell is rendered as "<poundsymbol>5"   Verified with LibreOffice 4.2.8.2 on 2015-12-28 
0, Line, //  don't let text overlay the bullet and advance by the bullet width 
0, Line, //  findColumnIndex should return -1 if no column header name matches 
0, Line, //  note: BigInteger for extra safety 
0, Line, //  already set, when we would try to change the locale by then 
0, Line, //  Really no special quantifiers 
0, Line, //  rethrow exception 
0, Line, //  sum of all values in the 3rd column: 3 + 6 + 9 = 18 
0, Line, //  Create as appropriate 
0, Line, //  spit out the final grpprl 
0, Line, //  Shift the 2nd row up to the first one 
0, Line, //  Without reassignment here, an XmlValueDisconnectedException may occur 
0, Line, //  Create the workbook with 1 sheet which contains 3 rows 
0, Line, //  magenta 
0, Line, //  the pattern could not be parsed correctly,   so fall back to the default number format 
0, Line, //  Tell the currently evaluating cell frame that it has a dependency on the specified 
0, Line, //  Delete both the files 
0, Line, //  more than 32 title fail for HSSFWorkbook 
0, Line, //  end public interface BATManaged 
0, Line, //  A 32-bit unsigned integer that specifies the number of entries. 
0, Line, //  1st read works 
0, Line, // begin of interface implementation 
0, Line, //  Check current text 
0, Line, //  TODO track the XFs and Format Strings 
0, Line, //  create named range for a single cell using areareference 
0, Line, //  validation methods should detect a problem with previously added merged regions (runs in O(n^2) time) 
0, Line, //  All records 
0, Line, //  Would adding module.read(in) here be correct? 
0, Line, //  Condition 1: Formula Is   =A2=A1   (White Font) 
0, Line, //  if your series have missing values like https://stackoverflow.com/questions/29014848   chart.displayBlanksAs(DisplayBlanks.GAP); 
0, Line, //  Change the current setting 
0, Line, //  Write out, read, and check 
0, Line, //  line spacing 80   paragprah is 28 long 
0, Line, // ////////////////////////////// From Stream ///////////////////////////// 
0, Line, //  Write out empty header / footer records if these are missing 
0, Line, //  ./p:sp/p:txBody/a:lstStyle/a:lvl1pPr 
0, Line, //  Check we don't break loading the pictures 
0, Line, //  0:default mode, 1:fallback mode 
0, Line, //  Normal, red, normal, blue+bold, normal 
0, Line, //  else - rows have moved completely outside the area ref,   or still remain completely within the area ref 
0, Line, //  Skip the header row, therefore "+ 1" 
0, Line, //  Same paragraph styles 
0, Line, //  unused from this point down 
0, Line, //  Array data 
0, Line, //  it may also make sense to have an @Internal method to convert STPatternType.Enum   but may cause errors if poi-ooxml.jar is not on the classpath 
0, Line, //  Prepare for this row 
0, Line, //  note - when quoted, sheetName can   start/end with whitespace 
0, Line, //  Integer integer = Integer.valueOf(row.getRowNumber()); 
0, Line, //  Background 2, darker 10%   YK: PPT shows slightly different color: new Color(221, 217, 195) 
0, Line, //  Check the properties 
0, Line, //  Greek "mu" symbol 
0, Line, //  (1). See that there is a problem with the old case-sensitive property comparator 
0, Line, //  comment in row 0 is gone 
0, Line, // OK string appears to be equal but now lets compare formatting runs 
0, Line, //  populate cells B1..F1 with simple formulas instead of plain values so we can use 
0, Line, //  make this column a bit wider 
0, Line, //  Convert, setup and return 
0, Line, //  create the row record on the fly now. 
0, Line, //  zero length   unicode options byte 
0, Line, //  From a real file (embedded SWF control) 
0, Line, //  when called by user code, fix the size to be valid for the header 
0, Line, // do we need to store sheetId, too? 
0, Line, //  A bit that specifies whether the newEAFontRef field of the TextCFException10 structure that contains this CFMasks exists.   A bit that specifies whether the csFontRef field of the TextCFException10 structure that contains this CFMasks exists.   A bit that specifies whether the pp11ext field of the TextCFException10 structure that contains this CFMasks exists. 
0, Line, //  sprmCRsidProp 
0, Line, //  Icons : 3 signs - Column I 
0, Line, //  + or - directly next to a number is parsed with the number 
0, Line, // Read the number of rich runs if rich text. 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createNumericConstraint	 * (int, java.lang.String, java.lang.String)	  */
0, Line, //  Make copy since CellRangeAddress is mutable. 
0, Line, //  ExternalFunction is a FreeRefFunction, nominally 255 
0, Line, //  identify the source file 
0, Line, //  POI column 3, OOXML column 4 
0, Line, //  track new columns 
0, Line, //  Prepare to copy 
0, Line, //  setting line width to zero unsets the W attribute 
0, Line, //  4 sheets, move a sheet from pos 2 to pos 0, i.e. current 0 becomes 1, current 1 becomes pos 2  
0, Line, //  deletes are automagically propagated 
0, Line, //  currently not supported 
0, Block, /*  find where the deleted area overlaps with this text piece  */
0, Line, //  check by index 
0, Line, //  Decide where we're going to put them 
0, Line, //  Then Text 
0, Line, //  update mode for closePath handling below 
0, Line, //  Columns moved include the last column of the area ref, but not the first   btw: (aFirstColumn < _firstMovedIndex) 
0, Line, //    
0, Line, //  Text Objects can have simple reference formulas   (This bit not mentioned in the MS document) 
0, Line, //  Is it a formula one? 
0, Line, //  To enable newlines you need set a cell styles with wrap=true 
0, Line, //  '? = multiple values 
0, Line, //  While we have text in need of paragraph stylings, go ahead and   grok the contents as paragraph formatting data 
0, Line, // build a tree of POIXMLDocumentParts, this workbook being the root 
0, Line, //  IntPtg(0)   DividePtg 
0, Line, // the char that is logically trailing in Big5 encoding 
0, Line, //  special case, if last text paragraph or run is empty, we will reuse it 
0, Line, //  Copy in the RTF constants  
0, Line, //  Validate the header on the front of the RTF 
0, Line, //  mask out random crap in upper byte 
0, Line, //  Serialize and read again 
0, Line, //  call getTextHeight, when table is not fully populated 
0, Block, /*      * Open {@code doc3} for reading and check summary information     * and document summary information. All properties removed before must not     * be found in the property streams of {@code doc3}.      */
0, Line, //  doesn't happen 
0, Line, //  also acceptable: Table!C3 
0, Line, //  no instance of this class 
0, Line, //  Columns are 0 based 
0, Line, //  A 32-bit unsigned integer that specifies the number of elements in the DashedLineData field. 
0, Line, //  Row '96' 
0, Line, //   FAT, XFAT or Property Table. Ensure it does 
0, Line, //  just dollars ? can this happen? 
0, Line, //  the total may have been padded to the nearest quad-byte length 
0, Line, //  starting with JDK 9 such unimportant whitespaces may be trimmed 
0, Line, //  any error in an array item propagates up 
0, Line, //  Will be properties on an attachment or recipient 
0, Line, //  Try to read numCharacterRuns, see bug 50060 
0, Line, //  height div 3 
0, Line, //  0 is the empty default 
0, Block, /*  manually assemble a new image package part */
0, Line, //  Valid ones first 
0, Line, //  Ensure they're the same 
0, Line, //  add overhead of six records 
0, Block, /*  check if a series was found  */
0, Line, //  reverse angle for awt 
0, Line, //  remember the initial transform 
0, Line, //  Verify the chart was copied 
0, Line, //  Format of this bit appears to be l=<id>-<time>-<number>   ID may contain hyphens. 
0, Line, //  name index increased by one 
0, Line, //  Get the details on this font 
0, Line, //  Formula referencing one cell 
0, Line, // no idea what these 3 bytes do 
0, Line, //  Caller will save the resultant POIFSFileSystem to the stream/file 
0, Line, //  check replace with longer text 
0, Line, //  Process external hyperlinks for the sheet, if there are any 
0, Line, //  height div 2 
0, Line, //  nothing useful to be done for this case 
0, Line, //  Handle any encoding aliases, where outlook describes it differently 
0, Line, // now we can use all methods to modify charts in XWPFDocument 
0, Line, //  hack to tell the difference between formula and plain value   perhaps the API could be improved: onChangeFromBlankToValue, onChangeFromBlankToFormula 
0, Line, //  use "MS PGothic" if available (Windows only) ... 
0, Line, //  Bug 60329: style with missing StyleID throws NPE 
0, Line, // validated 
0, Line, //  Change Font size and name 
0, Line, //  Unsigned Integers 
0, Line, //  TSP signer certificates retrieval 
0, Line, //  EmfPlusBoundaryPathData object; otherwise, this field MUST contain an EmfPlusBoundaryPointData object. 
0, Line, //  then draw the (dashed) line 
0, Line, //  present in both but NULL except in cell records 
0, Line, //  Build up the model level Slides and Notes 
0, Line, //  arguments/result for this function 
0, Line, //  If result is shorter than field, pretend there are leading zeros 
0, Line, //  internal margins for the text box 
0, Line, // the span is now splitted into three parts  <cols>    <col min="2" max="2" customWidth="true" width="12.0" />    <col min="3" max="3" customWidth="true" width="12.0" hidden="true"/>    <col min="4" max="4" customWidth="true" width="12.0"/>    <col min="7" max="7" customWidth="true" width="10.85546875" hidden="true"/>  </cols> 
0, Line, //  181 onwards is free 
0, Line, //   non unicode text in the file 
0, Line, //  sprmCPropRMark -- 0xCA57 
0, Line, //  0 0x01 - Reserved bit must be 0 
0, Line, //  Check first 8 bytes 
0, Line, //  redirect standard out during the test to avoid spamming the console with output 
0, Block, /*  Read the custom properties. If there are no custom properties yet,             * the application has to create a new CustomProperties object. It will             * serve as a container for custom properties.  */
0, Line, //  Column 1 has a font with regular colours 
0, Line, //  in order to verify that there is no third param, we need to check   if we really have the IF next or some other FuncVarPtg as third param, e.g. ROW()/COLUMN()! 
0, Line, //  Write the workbook to a file 
0, Line, //  Create the header 
0, Line, //  Fill it in 
0, Block, /* long hsShtat = */
0, Line, // At one point in development there were three copies of the text. 
0, Line, //  sum of the frequency bins should add up to the number of data values 
0, Line, //  i.e. from down to up if shifting down, vice-versa otherwise 
0, Line, //  numbering to be used at each level 
0, Line, //  The intersection operator is a space.  We track whether the run of    whitespace preceding "look" counts as an intersection operator. 
0, Line, //  Only the first two format parts can have conditions 
0, Line, //  Get the persist reference for the document persist object 
0, Line, //  read all available bytes and not just "stringLength * 1(ansi)/2(unicode)"   in case we need to deal with surrogate pairs 
0, Line, //  Check some numbers 
0, Line, //  Not found 
0, Block, /*  Read the property set streams from the POI filesystem just         * created.  */
0, Line, //  org.apache.poi.hwpf.extractor 
0, Line, // left margin is custom, all others are default 
0, Line, //  only evaluate non empty row 
0, Line, //  level 3: title placeholder on the slide layout 
0, Line, //  Note: Values in arrays are in ascending order since LOOKUP expects that in order to work properly  		 column  		 A B C  	   +-------   row 1 | P Q R 
0, Line, // import org.apache.poi.hssf.record.Feat11Record;  import org.apache.poi.hssf.record.Feat12Record; 
0, Line, //  wrap to avoid temp warning method about auto-closing input stream 
0, Line, //  Types taken from http://msdn.microsoft.com/en-us/library/microsoft.exchange.data.contenttypes.tnef.tnefattributetype%28v=EXCHG.140%29.aspx 
0, Line, // make it red 
0, Line, //  first check a file with 1900 Date Windowing 
0, Line, //  And another file 
0, Line, //  remove any existing paragraphs 
0, Line, //  Check this one for being a duplicate    of an earlier one 
0, Line, //  If we've reached the end of the sheet data, output any    comments we haven't yet already handled 
0, Line, //  no point leaving the flag erroneously set 
0, Line, //  Not a valid fraction formats (too many #/# or ?/?) - hence the strange expected results 
0, Line, //  move the cells 
0, Line, // lazily computed 
0, Line, //  97 -> 98 -> 100 -> end 
0, Line, //  for faster binary search 
0, Line, //  Third is 25 long and red 
0, Line, //  Now, write it out, and read it back in again fully 
0, Line, //  drop time portion if present 
0, Line, //  Increment the mask bit count, we've done another code 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getSuppressDropDownArrow()      */
0, Line, // 490  495  990  99  49 
0, Line, // fetching sheets by name is case-insensitive 
0, Line, //  16 bit unsigned integer 
0, Line, //  Get the master persists 
0, Line, //  A 32-bit unsigned integer that defines the brush, the content of which is determined by   the SOLID_COLOR bit in the Flags field.   If SOLID_COLOR is set, BrushId specifies a color as an EmfPlusARGB object.   If clear, BrushId contains the index of an EmfPlusBrush object in the EMF+ Object Table. 
0, Line, // &D == date 
0, Line, //  Write out normally, will loose the macro stream 
0, Line, //  If the specified partis flagged as deleted, we make it   available 
0, Block, /*  cloneSheet() not implemented  */
0, Line, //  awesome ;) 
0, Line, //  Use the sheetname and process 
0, Line, //  The target column is at either end of the multi-column ColumnInfo ci   we'll just divide the info and create a new one 
0, Line, //  Clear 
0, Line, //  Save it to the same file - not allowed 
0, Line, //  verify signature 
0, Block, /*  Create the new entry.  */
0, Line, //  Change the string 
0, Line, //  A 32-bit signed integer that defines the units of the SrcRect field. 
0, Line, //  Propagate isUsed for duplicates and always set user styles to being used to never optimize them away 
0, Line, //  NULL MUST be present, after which the remainder of this field MUST be ignored. 
0, Line, // sample data to fill the sheet. 
0, Line, //  The format of records in a powerpoint file are:     <little endian 2 byte "info">     <little endian 2 byte "type">     <little endian 4 byte "length">   If it has a zero length, following it will be another record  		<xx xx yy yy 00 00 00 00> <xx xx yy yy zz zz zz zz>   If it has a length, depending on its type it may have children or data   If it has children, these will follow straight away  		<xx xx yy yy zz zz zz zz <xx xx yy yy zz zz zz zz>>   If it has data, this will come straigh after, and run for the length        <xx xx yy yy zz zz zz zz dd dd dd dd dd dd dd>   All lengths given exclude the 8 byte record header   (Data records are known as Atoms) 
0, Line, //  Create a cell at A2 and insert a plain list - that is one 
0, Line, //  TRUE=TRUE=2=2  evaluates to FALSE 
0, Line, //  check we found the time properly 
0, Line, //  height div 8 
0, Line, //  Findbugs: URF_UNREAD_FIELD. Do not delete without understanding how this class works. 
0, Line, //  An array of 32-bit unsigned integers that specify the output spacing between the origins of adjacent   character cells in logical units. The location of this field is specified by the value of offDx   in bytes from the start of this record. If spacing is defined, this field contains the same number   of values as characters in the output string.     If the Options field of the EmrText object contains the ETO_PDY flag, then this buffer   contains twice as many values as there are characters in the output string, one   horizontal and one vertical offset for each, in that order.     If ETO_RTLREADING is specified, characters are laid right to left instead of left to right.   No other options affect the interpretation of this field. 
0, Line, //  Column C   Column G 
0, Block, /*              * also for backward-compatibility with prev. versions of POI             * --sergey              */
0, Block, /*  Execute the test task.  */
0, Line, //  A signed integer that defines the vertical extent of the viewport in device units. 
0, Line, // insert header row 
0, Line, //  Read the reserved bytes  
0, Line, //  init built-in formats 
0, Line, //  not a valid string value, but not blank 
0, Line, //  check the two fonts 
0, Line, //  Some badly designed methods - eg the servlet API - overload length   such that "-1" means stream finished 
0, Line, //   PowerPoint stream 
0, Line, //  the hmacs of the file always differ, as we use PKCS5-padding to pad the bytes   whereas office just uses random bytes   byte integrityHash[] = d.getIntegrityHmacValue(); 
0, Line, //  Now, check ISNUMBER / ISTEXT / ISNONTEXT 
0, Line, //  natural order   natural order 
0, Line, //  first line indentation   hanging indentation: the first line start at the left margin 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#setOperator(int)	  */
0, Line, //  Read the Excel file and verify its content 
0, Block, /*  Parameters for test case  */
0, Line, //  create anchor 
0, Line, //  Put things back 
0, Line, //  dump the first few bytes 
0, Line, //  x2 on sheet2 defines "x=2" 
0, Line, //  Then invalid ones 
0, Line, //  column D: red bold text on yellow background 
0, Line, //  First two slides have comments 
0, Line, //  #2 pass - assign shape to table cells 
0, Line, //  crappy names are because this is really one big short field (2byte)   but the docs inconsistently use it as 2 separate bytes 
0, Line, //  check that parsed Ptg array converts back to formula text OK 
0, Line, //  ignore endCap for now 
0, Line, //  Updating cell formula, causing it to become unshared 
0, Line, //  one more continuation record with 1 byte of data 
0, Line, //  A 32-bit unsigned integer that defines the number of color indexes that are 
0, Line, //  The workbook overrides this default format 
0, Line, //  scan through the image to find the black box after the truncated data 
0, Line, //  height div 5 
0, Line, //  the index of the closest remaining sheet to the one just deleted 
0, Line, //  create test InputStream 
0, Line, //  One more mini-block will be used 
0, Line, //  Add in to the list of Slides 
0, Line, // First row of the hyperlink  Last row of the hyperlink 
0, Line, //  Excludes 4 byte header 
0, Line, //  Do the save 
0, Line, //  this line is intended to compute how "November" would look like in the current locale 
0, Line, // For each column, create a cache field and give it en empty sharedItems 
0, Line, //  See if we can get a suitable encoding for any 
0, Line, //  A 32-bit unsigned integer that specifies the offset, in bytes, from the 
0, Line, //  ds:Reference with external digest value 
0, Line, //  with format "yyyy-dd-MM HH:mm:ss" into "2016-23-51 08:51:01". 
0, Line, //  Add Subtract Formula 
0, Line, //  Reset to a fresh run so we test case of run not having property at all 
0, Line, //  assigned to the class level member 
0, Line, //  all top level records are position dependent 
0, Line, //  Row index 1 -> 11 (row "2" -> row "12") 
0, Line, //  Excel (2007) seems to choose 16bit regardless of whether it is needed 
0, Line, //  EvaluationListener to check which parts of the first formula get evaluated 
0, Line, //  store grpprl at hugeGrpprlOffset   grpprl.length-2 because we don't store the istd   System.arraycopy( grpprl, 2, dataStream, hugeGrpprlOffset +   2,   grpprl.length - 2 ); 
0, Block, /*          * The shape id of the ole object seems to be a legacy shape id.         *         * see 5.3.2.1 legacyDrawing (Legacy Drawing Object): Legacy Shape ID         * that is unique throughout the entire document. Legacy shape IDs         * should be assigned based on which portion of the document the drawing         * resides on. The assignment of these ids is broken down into clusters         * of 1024 values. The first cluster is 1-1024, the second 1025-2048 and         * so on.         *         * Ole shapes seem to start with 1025 on the first sheet ... and not         * sure, if the ids need to be reindexed when sheets are removed or more         * than 1024 shapes are on a given sheet (see #51332 for a similar         * issue)          */
0, Line, //  height div 4 
0, Line, //  URI fragemnts (those starting with '#') are not encoded 
0, Line, //  BIFF header 
0, Line, //  now via wb.setSheetName 
0, Line, //  Replace any newlines with spaces, otherwise it    breaks the output 
0, Line, //  Base properties. 
0, Line, //  Set the default name of the table.  This must not conflict with any defined names. 
0, Line, //  http://services.globaltrustfinder.com/adss/tsa 
0, Line, //  check the file size first, in case we are working on uncompressed streams 
0, Line, // Can there be more than one BOF for a sheet? If not then we can 
0, Line, //  emfs are sometimes truncated, read as much as possible 
0, Line, //  Ensure that core properties are added if missing 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#setExplicitListValues(java.lang.String[])	  */
0, Line, //  Normally should happen only in developement phase, so just throw   exception 
0, Line, // re-create the removed cell 
0, Line, //  test reading zero 
0, Line, //  Custom/Unknown, skip 
0, Line, //  set up the fc 
0, Line, //  Check to ensure that a row was recovered from the sheet as it is   possible that one or more rows between other populated rows could be   missing - blank. If the row does contain cells then... 
0, Line, //  TRUE 
0, Line, //         assertEquals(IndexedColors.RED.index, fmt3.getFontColorIndex()); 
0, Line, //  column B: #,##0 
0, Line, //  check replace with shorter text 
0, Line, //  extract encrypted ooxml file and write to custom encrypted zip file 
0, Line, //  TextObjectRecord.sid   size 18 
0, Line, //  create a new file 
0, Line, //  Custom Validation type 
0, Line, //  bits 5-6 in the _flags specify the type   of selection behavior this list control is expected to support 
0, Line, //  Match so far, good 
0, Line, //  same as star_16, but twice in native 
0, Line, //   yet to add 
0, Line, //  start of this record to the source bitmap bits. 
0, Line, //  0xf020 space   0xf021 exclam   0xf022 universal   0xf023 numbersign   0xf024 existential   0xf025 percent   0xf026 ampersand   0xf027 suchthat   0xf028 parenleft   0xf029 parentright   0xf02a asteriskmath   0xf02b plus   0xf02c comma   0xf02d minus sign (long -)   0xf02e period   0xf02f slash   0xf030 0   0xf031 1   0xf032 2   0xf033 3   0xf034 4   0xf035 5   0xf036 6   0xf037 7   0xf038 8   0xf039 9   0xf03a colon   0xf03b semicolon   0xf03c less   0xf03d equal   0xf03e greater   0xf03f question   0xf040 congruent   0xf041 alpha (upper)   0xf042 beta (upper)   0xf043 chi (upper)   0xf044 delta (upper)   0xf045 epsilon (upper)   0xf046 phi (upper)   0xf047 gamma (upper)   0xf048 eta (upper)   0xf049 iota (upper)   0xf04a theta1 (lower)   0xf04b kappa (upper)   0xf04c lambda (upper)   0xf04d mu (upper)   0xf04e nu (upper)   0xf04f omicron (upper)   0xf050 pi (upper)   0xf051 theta (upper)   0xf052 rho (upper)   0xf053 sigma (upper)   0xf054 tau (upper)   0xf055 upsilon (upper)   0xf056 simga1 (lower)   0xf057 omega (upper)   0xf058 xi (upper)   0xf059 psi (upper)   0xf05a zeta (upper)   0xf05b bracketleft   0xf05c therefore   0xf05d bracketright   0xf05e perpendicular   0xf05f underscore   0xf060 radicalex (doesn't exist in unicode)   0xf061 alpha (lower)   0xf062 beta (lower)   0xf063 chi (lower)   0xf064 delta (lower)   0xf065 epsilon (lower)   0xf066 phi (lower)   0xf067 gamma (lower)   0xf068 eta (lower)   0xf069 iota (lower)   0xf06a phi1 (lower)   0xf06b kappa (lower)   0xf06c lambda (lower)   0xf06d mu (lower)   0xf06e nu (lower)   0xf06f omnicron (lower)   0xf070 pi (lower)   0xf071 theta (lower)   0xf072 rho (lower)   0xf073 sigma (lower)   0xf074 tau (lower)   0xf075 upsilon (lower)   0xf076 piv (lower)   0xf077 omega (lower)   0xf078 xi (lower)   0xf079 psi (lower)   0xf07a zeta (lower)   0xf07b braceleft   0xf07c bar   0xf07d braceright   0xf07e similar '~'   0xf07f not defined 
0, Line, //  vertical center 
0, Line, //  ensure that we are initialized 
0, Line, //  QualifyingProperties 
0, Line, //  height div 6 
0, Line, //  make sure we are still readable 
0, Line, //  Ensure the value presence / absence is consistent for the new type 
0, Line, //  verify proper behavior with non-zero index 
0, Line, //  It is fine for the other values to be zero 
0, Line, //  One block of text within that 
0, Line, //  No border set 
0, Line, //     is getting on for black magic... 
0, Line, //  end watermark paragraph 
0, Line, //  Open via a HWPFDocument 
0, Line, //  Had valid print settings before repeating 
0, Line, //  unset the space before on null input 
0, Line, //  Decompress 
0, Line, //  data from these fields comes after the Ptg data of all tokens in current formula 
0, Line, //  Last view is now of the slide 
0, Line, //  cached for performance, used to format numeric cells for string comparisons.  See Bug #61764 for explanation 
0, Line, //  Try by type 
0, Line, // IRR-NPV relationship: NPV(IRR(values), values) = 0 
0, Block, /*  Place the property into the section.  */
0, Line, //  Bug 57165: We also need to check that the resulting file name is not already taken   this can happen when moving/cloning sheets 
0, Line, // GUID is zero 
0, Line, //  shouldn't happen, but just in case 
0, Line, //  adds two new rercords 
0, Line, // 6 characters wide 
0, Line, //  boolean criteria 
0, Line, //  copyRowFrom should update existing destRow, rather than creating a new row and reassigning the destRow pointer   to the new row (and allow the old row to be garbage collected)   this is mostly so existing references to rows that are overwritten are updated 
0, Line, //  Evaluate specific cells and check results 
0, Line, //  this cast might look strange - if the setters would be public, it will become obsolete 
0, Block, /*  Read the POIFS:  */
0, Line, //  current indent level for evalution; negative value for no output 
0, Line, //  cells 
0, Line, //  so the sheet record count should not change 
0, Line, // expanded 
0, Line, //  Files and descriptions 
0, Line, //  verify behavior of getEntry 
0, Line, //  Set modification flags to 1: by default options are not modified 
0, Line, //     private NPOIFSFileSystem poifs; 
0, Line, //  Filter everything 
0, Line, //         assertEquals(IndexedColors.GREEN.index, fmt1.getFontColorIndex()); 
0, Line, //  XAdES-EPES 
0, Line, //  "ABCD"   "E" 
0, Line, //  no default implementation -- skip 
0, Line, //  int fcMin = docStream.getOffset(); 
0, Line, //  Identified bug 46898 
0, Line, //  get default 
0, Line, //   than that for the last number 
0, Line, // Also acceptable: SUM($H10:I$3), but this AreaReference isn't in ascending order 
0, Line, //  field info 
0, Line, // The first user-defined format starts at 164. 
0, Line, //   so it gets properly cached 
0, Line, // &F == workbook file name 
0, Line, //  ArcTan Formula: "at2 x y" = arctan( y / z ) = value of this guide 
0, Line, //  Should now be the same 
0, Line, //  note that months in Calendar are zero-based, in LocalDateTime one-based 
0, Line, //  97 should now be the end, and 98 free 
0, Line, //  and the offset where the bitmap starts 
0, Line, //  Optimize 
0, Line, //  Copy over start and end, ignoring the 16 byte date field in the middle 
0, Line, //  How much to skip for the num pointers + any extra data? 
0, Line, //  default character properties for paragraphs with level=1 
0, Line, // Getting it sheet name 
0, Line, //  Size ranges due to different fonts on different machines 
0, Line, //  SIDs from earlier BIFF versions 
0, Line, //  Visio - ooxml 
0, Line, //  Note - XmlBeans handles entity encoding for us, 
0, Line, //  test the source 
0, Line, //  Merge destCell's hyperlink to srcCell. Since destCell does have a hyperlink, this should copy destCell's hyperlink to srcCell. 
0, Line, //  literal 
0, Line, //  the positioning 
0, Line, //  Then HTML 
0, Line, //  shortening due to rounding 
0, Line, // ruler internals 
0, Line, //  Use style 
0, Line, //  horizontal 
0, Line, //  The value MUST be in the FamilyType enumeration table. 
0, Line, //  y coordinate of first point on ellipse 
0, Line, //  A is number 1 
0, Line, //  (21 is mini fat, 22 is first mini stream block) 
0, Line, // o_groupsNumber++; 
0, Line, //  x% 
0, Block, /* 		 * Pattern for media type.		 *		 * Don't allow comment, rule M1.15: The package implementer shall		 * require a content type that does not include comments and the format		 * designer shall specify such a content type.		 *		 * comment = "(" *( ctext | quoted-pair | comment ) ")"		 *		 * ctext = <any TEXT excluding "(" and ")">		 *		 * TEXT = <any OCTET except CTLs, but including LWS>		 *		 * LWS = [CRLF] 1*( SP | HT )		 *		 * CR = <US-ASCII CR, carriage return (13)>		 *		 * LF = <US-ASCII LF, linefeed (10)>		 *		 * SP = <US-ASCII SP, space (32)>		 *		 * HT = <US-ASCII HT, horizontal-tab (9)>		 *		 * quoted-pair = "\" CHAR		  */
0, Line, //  unique to this shape on the page? 
0, Line, //  first/second control point 
0, Line, //  Iterating over the hours exposes any rounding issues. 
0, Line, // remove the reference in the calculation chain 
0, Line, //  as per BIFF8. (some old versions used 0x223) 
0, Line, //  dealing with splines makes this more complex 
0, Line, //  Shift front 1 back 
0, Line, //  [wbB]BSheet1!B2 references (among other things) [wbA]AnotherSheet!A1:B2 
0, Line, //  POI appends a trailing slash tpo avoid "Expected authority at index 13: javascript://"   https://issues.apache.org/bugzilla/show_bug.cgi?id=53734 
0, Line, //  Verify comments are in the position expected 
0, Line, // short circuit if fraction is 0 or 1 
0, Line, //  unset old values   assuming no value for first is no values at all 
0, Line, //  Simple strings 
0, Line, //  Check rule M4.1 -> A format consumer shall consider more than   one core properties relationship for a package to be an error   (We just log it and move on, as real files break this!) 
0, Line, //  Create row 
0, Line, //  sprmPDtap -- 0x664a 
0, Line, //  Try on headers 
0, Line, //             retval.records.supbookpos = retval.records.bspos + 1;              retval.records.namepos    = retval.records.supbookpos + 1;          } 
0, Line, //  assertArrayEquals(adOrig.getIntegrityHmacValue(), adReload.getIntegrityHmacValue()); 
0, Line, //  fast saved only  applySprmPChgTabs (newPAP, varParam, opSize); 
0, Line, //  [A1]   adjusted to [A]  A 
0, Line, //   Docs "official" 
0, Line, //  Write collapse field 
0, Line, //  This is in contrast to the code below,, where NumberEvals values (for   example 0.01) *do* resolve to equivalent boolean values. 
0, Line, //  ignore; 
0, Line, //  It's a code, translate it if necessary 
0, Line, //  sprmCBrc 
0, Line, //  vertical alignment 
0, Line, //  A is at 0x92, 0x92 
0, Line, //  the "minor" axis, so this ratio does not have to be greater than 1. 
0, Line, //  Easy inline string 
0, Line, //  Open it read only, then close and delete - allowed 
0, Line, //  sheet name with digit in the first position always requires delimiting 
0, Line, //  can happen for older XML Parsers, e.g. we have a CI Job which runs with Xerces XML Parser 
0, Line, //  size of the row gutter to the left of the rows   size of the column gutter above the columns   maximum outline level for row gutters   maximum outline level for column gutters 
0, Line, //  Now a simpler file 
0, Line, //  create a dummy sheet consisting of our test data 
0, Line, //  Check that with a valid font, it's still ok 
0, Line, //  Have a new one added 
0, Line, //  this should be 12 as XSSFSimpleShape creates a default paragraph (no text), and then we added to that 
0, Line, //  Strip off the null terminator if present 
0, Line, //  Exports elements and attributes mapped with tables 
0, Line, //  only allow a ConnectException because of timeout, we see this in Jenkins from time to time... 
0, Line, //  Reserved data 
0, Line, //  Invert first/last row, but refer to same area 
0, Line, //  Both 
0, Line, //  This one is allowed too 
0, Line, //  cast is safe, the iterator is just defined using the interface 
0, Line, //  check that the information was added successfully to the filesystem object 
0, Line, //  StreamSize (8 bytes): An unsigned integer that specifies the number of bytes used by data   encrypted within the EncryptedData field, not including the size of the StreamSize field.   Note that the actual size of the \EncryptedPackage stream (1) can be larger than this   value, depending on the block size of the chosen encryption algorithm 
0, Line, //  Skip over the header row 
0, Line, //  in the xmlsec jar file 
0, Line, //  And the macro itself 
0, Line, //  Check the first one, links to 56737.xlsx 
0, Line, //  note this should return the raw formula result, not the "unwrapped" version that returns a single value. 
0, Line, //  as we haven't prepended the password length into the input array 
0, Line, //  All use the default base style 
0, Line, //    General codepage: Message codepage property. 
0, Line, //  Case of a package created from scratch 
0, Line, //  AttrPtg.class, // [volatile ] // POI doesn't do this yet (Apr 2009)   len 19   [A1:B2]   [C3:D4] 
0, Line, // notify sheets 
0, Line, //  Copy each cell from the source row to 
0, Line, //  'refersToFormula' has not been set yet 
0, Line, //  Add the default thresholds 
0, Line, //  Give a generic error if the OLE2 signature isn't found 
0, Line, //  Strip the [] wrapper, if still present 
0, Line, //           {              short[] brcLeft = rgtc[x].getBrcLeft (); 
0, Line, //  this won't have sheet references because we built the cell references without them 
0, Line, //  calc settings block 
0, Line, //  evaluate formula for cell refs then get their values 
0, Line, // assertTrue("isSetCollapsed", !col.isSetCollapsed() || !col.getCollapsed());  assertFalse("getCollapsed", col.getCollapsed()); 
0, Block, /*  handle case where MDETERM is operating on an array that that is not completely filled */
0, Line, //  Copy the new file over the old one if save() succeed 
0, Line, //  Re-check VLOOKUP one 
0, Line, //  are automatic page breaks visible 
0, Line, //  2^0   2^1   2^2   2^3   2^4   2^5   2^6   2^7   2^8   2^9   2^10   2^11   2^12   2^13   2^14   2^15 
0, Line, //  assure they are in place:      [BOFRecord]      [CountryRecord]      [SUPBOOK Internal References  nSheets= 3]      [SUPBOOK Add-In Functions nSheets= 1]      [EXTERNALNAME .name    = ISODD]      [EXTERNSHEET]      [EOFRecord] 
0, Line, //  Add the new Column 
0, Line, //  Note - nChars is 8-bit 
0, Line, //  Each cell conatins a fixed number of co-ordinate points; this number   does not vary with row height or column width or with font. These two   constants are defined below. 
0, Line, //  real data from a real file! 
0, Line, //  We assume we can continue, even in degraded mode ... 
0, Line, //  This encoding depends on docId, password and stream position 
0, Line, //  Don't close re-used test resources! 
0, Line, //  Save this into the filesystem 
0, Line, //  with one difference; a number prefixed to the items text. 
0, Line, //  Following row 0, we should have 1, 2, then dummy, then 20+21+22 
0, Line, //  Write out our children, and stuff them into the Escher layer 
0, Line, // 495  499   995  999 
0, Line, //  true, true   false, true   false, true   false, true   false, true 
0, Line, //  Create a SlideAtomsSets, not caring if they're empty 
0, Line, //  Copy the data, ready to pass to PictureData 
0, Line, // name of the zip entry holding sheet data, e.g. /xl/worksheets/sheet1.xml 
0, Line, // If this number argument is non numeric, this function returns the #VALUE! error value. 
0, Block, /*  Create a mutable property set as a copy of the original read-only             * property set.  */
0, Line, //  Remove row from index 2 
0, Line, //  Check they were set correctly 
0, Line, //  Now we can fetch the character and paragraph properties 
0, Line, //         checkRecordsTogether(records, sheetRecords); 
0, Line, //  With a cell that's not in a merged region, we'll get that 
0, Line, //  first see what slide layouts are available by default 
0, Line, //  GUID stream 
0, Line, //  01 18 27 00 03 20 00 00 E8 03 08 08 0C 20 03 00 ..'.. ....... .. 
0, Line, //  Now the current edit offset 
0, Line, //  set this to the white on red cell style   we defined above 
0, Line, // above  right  bottom 
0, Line, // too small 
0, Line, //  adding a duplicate or overlapping merged region should not   raise an exception with the unsafe version of addMergedRegion. 
0, Line, //  Go for the first if we can't otherwise decide... 
0, Line, //  read in the main stream. 
0, Line, //  unused1, unused2 - Undefined and MUST be ignored. 
0, Line, //  bug 56781: name validation only checks for first character's validity and presence of spaces 
0, Line, //  Used only for piece table grpprl's not for PAPX 
0, Line, //  Starts empty, other that Properties and BAT 
0, Line, //  defaults for placeholders are defined in the slide master 
0, Line, //  The header has up to 109 BATs, and extra ones are referenced    from XBATs 
0, Line, //  swap start and end if out of order 
0, Line, //  multi-cell formula   rows 3-5 don't exist yet 
0, Line, //  It's a >/>= condition. 
0, Line, //  normal way to interfere with, so we need to add the namespace under the hand ... 
0, Line, //  Enumeration 
0, Line, //  except that the sign bit is ignored 
0, Line, //  Look it up for the external workbook 
0, Line, // 7 bits reserved + 1 bit type 
0, Block, /* XSLFPictureShape shape = */
0, Line, //  A 32-bit floating-point value that specifies the width of the line drawn by the pen in the units specified 
0, Line, //  Check for the english text in the mixed line 
0, Line, //  Check text properties first - should be unchanged 
0, Line, //  expand table 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#createErrorBox(java.lang.String, java.lang.String)	  */
0, Line, // writing to disk; reading in and verifying palette 
0, Block, /*      * The following definitions are for property IDs in the first     * section of the Document Summary Information property set.      */
0, Line, //  Check can't shift more than we have 
0, Line, //  Change 
0, Line, //         out = new FileOutputStream(new File(tmpDirName, "out_optimised.xls"));          wb.write(out);          out.close(); 
0, Line, // but this disagrees with file above 
0, Line, //  Two calls means two elements, no clever collapsing just yet. 
0, Block, /*  Constants for margins  */
0, Line, //  this '==' matches +0.0 and -0.0 
0, Line, //  Now custom ones 
0, Line, //  A 32-bit unsigned integer that specifies the size in bytes of this record in the 
0, Line, // Don't known to handle... 
0, Line, //  Save that requested portion of the data  
0, Line, //  use a local object first to not assign a partly constructed object   in case of failure 
0, Line, //  Attachments doesn't have them 
0, Line, //  The first weight of the NURBS. 
0, Line, //  Serialize escher records into one big data structure and keep note of ending offsets. 
0, Line, //  The XBAT count makes no difference, as we flatten in memory 
0, Line, //  Iterator order should be fixed when iterator is created 
0, Line, //  rectangle that can be drawn around the image stored in the metafile. 
0, Line, //  assert that the comments are created properly after reading back in 
0, Line, //  on a word boundary 
0, Line, // this shows up only as a phonetic run and should not appear  in the extracted text 
0, Line, //  It's based on a normal one 
0, Line, //  Get the record data. 
0, Line, //  image/gif http://www.w3.org/Graphics/GIF/spec-gif89a.txt 
0, Line, //  LogFontExDv Object 
0, Line, // special case for files saved in Office 2007 
0, Line, //  Read the buffer again 
0, Line, //  Row 2 
0, Line, //  Removing root element 
0, Line, //  result = name1.compareTo(name2); 
0, Line, //  Set the the repeating rows and columns on the third sheet. 
0, Line, //  don't alert for expanded sizes smaller than 100k 
0, Line, //  are defined by this object. 
0, Line, //  Check we can find the entries we expect 
0, Line, //  non-null not equal null, returns true 
0, Line, //  the "fractional % 1" captures integer values in improper fractions 
0, Line, // length then null terminator. 
0, Line, //  Check that the row's height will accommodate the image at the required   dimensions. If the height of the row is LESS than the required height   of the image, decide how the application should respond - resize the 
0, Line, // i.e. POI has already included them in the slide's getTextParagraphs() 
0, Line, // The test file requires that JCE unlimited be installed.  If it isn't installed, skip this test. 
0, Line, //  An 8-bit unsigned integer that specifies the proportion of the font. 
0, Line, // this tests that we're ignoring text shapes at depth=0 
0, Line, //  A 16-bit signed integer that defines the horizontal (x) coordinate of the point. 
0, Block, /*              * The order of sheets is defined by the order of CTSheet elements in workbook.xml              */
0, Line, //  the id could already be taken after insertion/deletion of different tables 
0, Line, //  0-7 duplicates of 8-15 for compatibility (OOXML spec pt.1 sec. 18.8.27) 
0, Line, //  Used to throw a NPE 
0, Line, //  Check print areas after re-reading workbook 
0, Line, //  Row 1 
0, Line, //  remove unneccessary infos, so we don't need to specify the type 
0, Line, //  +1 for index record 
0, Line, //  All the embedded directories we spotted 
0, Line, //  windows 10, 1080p, MS Office 2016, system text scaling 100% instead of default 125%   Windows 10, 15.6" 3840x2160 
0, Line, //         } 
0, Line, //  dest rows overlap top of area   - truncate the top 
0, Line, //  Looks like it ought to be 19... 
0, Line, //  ??? 0x20 -> 0x23 
0, Block, /*  XML markup  */
0, Line, // See 59830.xls for this record. 
0, Line, //  Update the Workbook stream in the file 
0, Line, //  finished with additive expression 
0, Line, //  A 32-bit unsigned integer that specifies a brush style for the pen from the WMF BrushStyle enumeration     If the pen type in the PenStyle field is PS_GEOMETRIC, this value MUST be either BS_SOLID or BS_HATCHED.   The value of this field can be BS_NULL, but only if the line style specified in PenStyle is PS_NULL. 
0, Line, //  For now, create the initial style in a low-level way 
0, Line, //  create cells with num patterns 
0, Line, //  DEC2HEX 
0, Line, //  the buffered image might be rescaled, so we need to calculate a new src rect to take   the image data from 
0, Line, //  Because of custom properties, match on ID not literal property object 
0, Line, //  the shape. 
0, Line, // check the low-level stuff 
0, Line, //  Padding (variable): A set of bytes that MUST be of correct size such that the size of the UTF-8-LP-P4   structure is a multiple of 4 bytes. If Padding is present, each byte MUST be 0x00. If    the length is exactly 0x00000000, this specifies a null string, and the entire structure uses    exactly 4 bytes. If the length is exactly 0x00000004, this specifies an empty string, and the    entire structure also uses exactly 4 bytes 
0, Line, //  URL 
0, Line, // ??        textFormatter[0x2E] = new SimpleDateFormat("[h]:mm:ss"); 
0, Line, //  don't search twice and potentially skip items 
0, Line, //  Check the chart on the 2nd sheet 
0, Line, //   and one shouldn't go in after that! 
0, Line, //  now apply a named style to a new cell 
0, Line, //  bitmap file-header, corresponds to a   Windows  BITMAPFILEHEADER structure 
0, Line, // dump first 100 bytes of the atom data 
0, Line, //   This only works for Excel since OpenOffice or LibreOffice Calc does not support literal numeric data series. 
0, Line, //  The mask, between 1 and 255, which is used when 
0, Line, //  Build the Offset-Picture lookup map 
0, Line, // move merged regions completely if they fall within the new region boundaries when they are shifted 
0, Line, //  pred '=' matches blank cell but not empty string 
0, Block, /*          * IF (Verifier BITWISE AND 0x4000) is 0x0000         *    SET Intermediate1 TO 0         * ELSE         *    SET Intermediate1 TO 1         * ENDIF          */
0, Line, //  Now create the ClientAnchorDetail object, setting the from and to 
0, Line, //  "ROUNDUP(3987*0.2, 2) currently fails by returning 797.41") 
0, Line, //                 throw new EvaluationException(ErrorEval.CIRCULAR_REF_ERROR);              }          /*          Circular references are not dealt with directly here, but it is worth noting some issues.            ANY one of the return statements in this method could return a cell that is identical          to the one immediately being evaluated.  The evaluating cell is identified by srcCellRow,          srcCellRow AND sheet.  The sheet is not available in any nearby calling method, so that's          one reason why circular references are not easy to detect here. (The sheet of the returned          cell can be obtained from ae if it is an Area3DEval.)            Another reason there's little value in attempting to detect circular references here is          that only direct circular references could be detected.  If the cycle involved two or more          cells this method could not detect it.            Logic to detect evaluation cycles of all kinds has been coded in EvaluationCycleDetector          (and FormulaEvaluator).           */          } 
0, Line, //  sometimes it fails on machines that are busy at the moment.   
0, Line, //  indicate that this sheet is now done 
0, Line, //  Get the header. 
0, Block, /*  Create the tree model with a root node. The latter is         * invisible but it must be present because a tree model         * always needs a root.         *         * The tree's root node must be visible to all methods.          */
0, Line, // don't care, named ranges are not allowed to include structured references 
0, Line, //  don't switch the font group for a few default characters supposedly available in all fonts 
0, Line, //  see issue #61841 for impact on VLOOKUP in particular 
0, Line, //  all columns are equally sized 
0, Line, //  Handle case of a corrupt last record, whose claimed length    would take us passed the end of the file 
0, Line, //  beginning of the line cap and the end of the line. 
0, Line, //  5 shorts + 1 byte 
0, Line, //  if the Compression value specifies JPEG or PNG format. 
0, Line, //  use HwmfEmbeddedType literal for conversion 
0, Line, //  The value is a 64 bit Windows Filetime 
0, Line, //  Format number conditionally using a thousands separator. 
0, Line, //           } 
0, Line, //  int remainingBytes = LittleEndian.getInt( data, offset + 4 ); 
0, Line, //  Bug 52233: Ensure that we have a col-array even if write() removed it 
0, Line, //  Ensure character offsets are really characters 
0, Line, //  Try and find the next sheet name that is unique 
0, Line, // verify that records cached in  TextRun and EscherTextboxWrapper are the same 
0, Line, //  duplicate found, increase the number and start iterating again 
0, Line, //  Wrap and return 
0, Line, //  font height = xc8 
0, Line, //  test properties of embedded message 
0, Line, //  Row 0 
0, Line, // test handling of non-standard header/footer options 
0, Line, //  Save parts. 
0, Line, //  size=0x0004   unused 
0, Line, //  Construct double from condition. 
0, Line, //           the Encryption Matrix 
0, Line, //  A fairly simple file - ooxml 
0, Line, //  A number specification   Note: careful that in something like ##, that the trailing comma is not caught up in the integer part 
0, Line, //  Load back the XSSFWorkbook just to check nothing explodes 
0, Line, //  seems to be always present regardless of author text 
0, Line, //  X=balance, Y=shift 
0, Line, //         setShapeType(inverse ? ShapeType.LINE_INV : ShapeType.LINE);      }            /**       * Gets the orientation of the line, if inverse is false, then line goes       * from top-left to bottom-right, otherwise inverse equals true        *       * @return inverse the orientation of the line       */      public boolean isInverse() {          return (getShapeType() == ShapeType.LINE_INV);      } 
0, Line, //  An array of SmartTagIndex that specifies the indices. 
0, Line, //  later. 
0, Line, //  1996 
0, Line, // adding one here because 0 indicates a global named region; doesn't make sense for print areas 
0, Line, //  200x200 pixels 
0, Line, //  matches Excel's rendering. 
0, Line, //  workbook.setPrintArea(0, reference); 
0, Line, //  Calibri is not available on *nix systems, so we need to use another similar free font 
0, Line, //  Copy the input file in the output directory 
0, Line, // remember "special" bits. 
0, Line, //  private static final BitField _weekday = BitFieldFactory.getInstance(0xe000); 
0, Line, //  assign new embedding 
0, Line, //  set repeating rows and columns twice for the first sheet 
0, Line, //  Write out the Property Streams 
0, Line, //  percentage 
0, Block, /* If an HSSFUserException user exception is thrown, ignore it. */
0, Line, //  what's this do?? 
0, Line, //  use a user set page no, instead of auto 
0, Line, // A4:B7 should be elongated by 1 row  C4:B7 should be elongated by 1 row 
0, Line, //  LinkTable can start with either of these 
0, Line, //  write collapse field 
0, Line, //  Note: Cell references start from the second row... 
0, Line, //  Bytes -> Chars 
0, Line, //  POI saves images as image1.png, image2.png, etc. 
0, Line, //  Ask DataFormatter to handle the String for us 
0, Line, //  sprmPFDyaAfterAuto 
0, Line, //  Handling for special kinds of records follow 
0, Line, //  Now a much more complex document 
0, Line, //  only use the bytes that could be read 
0, Line, //  collapse columns - 1 
0, Line, //  okay so there ISN'T a column info record that covers this column   so lets create one! 
0, Line, //  TODO const 
0, Block, /* 	  20 00	  00	  01	  1A 00 // sz = 0x1A = 26	  00 00	  01 00	  00	  00	  00	  00	  00 // unicode flag	  07 // name	  29 17 00 3B 00 00 00 00 FF FF 00 00 02 00 3B 00 //{ 26	  00 07 00 07 00 00 00 FF 00 10                   //  }	  20 00	  00	  01	  0B 00 // sz = 0xB = 11	  00 00	  01 00	  00	  00	  00	  00	  00 // unicode flag	  07 // name	  3B 00 00 07 00 07 00 00 00 FF 00   // { 11 }   */
0, Line, //  Is this document too old for us? 
0, Line, //  SP @ 26   SP @ 32 
0, Line, //  remove the border and verify state 
0, Line, //  A workbook stream is never empty, so crash instead   of trying to keep track of nesting level 
0, Line, //  Write the PowerPoint streams to the current FileSystem   No need to do anything to other streams, already there!  
0, Line, //  First at low level 
0, Block, /*          * sttbfBkmk (table of bookmark name strings) Written immediately after         * the previously recorded table, if the document contains bookmarks.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 27 of 210          */
0, Line, // Specifies the file type. It must be set to the signature word BM (0x4D42) to indicate bitmap. 
0, Line, //  A 32-bit unsigned integer whose definition MUST be in the MapMode enumeration 
0, Line, // Need to include the insets in the calculation of the row height to use. 
0, Line, //  change [wbA]AnotherSheet!A1 (from 2 to 3) 
0, Line, //  layout does not have anchor info either, it is in the slide master 
0, Block, /*  (non-JavaDoc), inherit JavaDoc from EvaluationSheet     * @since POI 3.15 beta 3      */
0, Line, //  Grab the SlideAtomSet's, which contain    a SlidePersistAtom and then a bunch of text    + related records 
0, Line, //  Test again the last row number which should be 2 
0, Line, //  A completely unknown formula name (not saved in workbook) should still be parseable and renderable 
0, Line, //  use a new line at the paragraph break 
0, Line, //  no exceptions 
0, Line, //  see https://stackoverflow.com/questions/39196145 for problems with SunMSCAPI   and why we can't sign the calculated digest 
0, Line, //  see SlideAtom.USES_MASTER_SLIDE_ID 
0, Line, //  Write out and back in again   This used to break 
0, Line, //  Always find 4 two byte entries. Sometimes find 9 
0, Line, //  outline group) 
0, Line, //  Ensure it has some date letters in it 
0, Line, //  make sure there is no exceptions 
0, Line, //  First up, fields can be nested...   A field can be 0x13 [contents] 0x15   Or it can be 0x13 [contents] 0x14 [real text] 0x15 
0, Line, //  Last useful one is the unique slide identifier 
0, Line, //  Check the RGB part (no tint) 
0, Line, //  How about with parameters? 
0, Line, //  update formulas on other sheets that point to rows that have been moved on this sheet 
0, Line, //  row is after and things are moved down 
0, Block, /* private */
0, Line, //  First up, grab the "Current User" stream 
0, Line, //  Cache values to speed up performance of   getStartRowNumberForBlock / getEndRowNumberForBlock, see Bugzilla 47405 
0, Line, //  ... and the content if it has not been added yet. 
0, Line, //  red 
0, Line, //  s.setStart( CPtoFC(node.getStart()) );   s.setEnd( CPtoFC(node.getEnd()) ); 
0, Line, //  Create another worksheet 'sheet2' in the new workbook 
0, Block, /*  The class has no renderer, try the superclass, if any.  */
0, Line, //  Now change all subsequent ones 
0, Line, //  new row inherits  default height from the sheet 
0, Line, //   without concurrency issues 
0, Line, //  max axis value   major increment 
0, Line, //  Check the cached values 
0, Line, //  See if we know about the type of it 
0, Line, //  update formulas on this sheet that point to rows which have been moved 
0, Line, //  verify limits 
0, Line, //  Keep track of any shape records created so we can match them back to the object id's. 
0, Line, //  Low level contents of the file 
0, Line, //  Finally, save the record 
0, Line, //  100/32768 ~= 0.003 
0, Line, //  Check that the text sizes are still as expected 
0, Line, //  font index is 1   font size 24 
0, Line, // address length 
0, Line, // K11 
0, Line, //  unicode flag  
0, Line, //  Biff 2 and 5+ share the same SID, due to a bug... 
0, Line, //  And some more, attributes will be copied from previous run 
0, Line, // another weird feature of powerpoint: for picture id we must add 0x4000. 
0, Line, //  set top border 
0, Line, //  First up, is this an internal date format? 
0, Line, //  check for the optimization 
0, Line, //  Check we can get at all the contents 
0, Line, //  by default we do nothing here 
0, Line, //  Set value 
0, Line, //  ignored 
0, Block, /*  Write the number of sections in this property set stream.  */
0, Block, /* 		 * Sanity check. Always advance the cursor by the correct value.		 *		 * getRecordSize() must return exactly the same number of bytes that was written in fillFields.		 * Sometimes it is not so, see an example in bug #44770. Most likely reason is that one of ddf records calculates wrong size.		  */
0, Line, //  These values are specific to BIFF8 
0, Line, //  This happens three times in test sample file "29982.xls"   Also several times in bugzilla samples 46840-23373 and 46840-23374 
0, Line, // there may be some efficiencies, but this should do for now. 
0, Line, // cchFile (2 bytes)  char type  count = 30 
0, Block, /*  Print the number of sections:  */
0, Line, //  320: HARMEAN 
0, Line, //  The styles should have been updated for the new sizes 
0, Line, //  Int 
0, Line, //  application/vnd.ms-word 
0, Line, // Set a unicode header (you guessed it the euro symbol) 
0, Line, //  width is roughly proportional to the number of characters 
0, Line, //  Excel encodes the sum of a single argument as tAttrSum 
0, Line, //  Peek at the first few bytes to sanity check 
0, Line, //  getCachedFormulaResult() returns 0 for not evaluated formula cells 
0, Line, //  note that the Date and Calendar examples use a zero day of month which is invalid in LocalDateTime  
0, Line, //  Check the non-CF colours in Columns A, B, C and E 
0, Block, /*              * Microsoft Office Word 97-2007 Binary File Format (.doc)             * Specification             *              * Page 78 of 210             *              * sprmCPropRMark (opcode 0xCA57) is interpreted by moving the first             * parameter byte to chp.fPropRMark, the next two bytes to             * chp.ibstPropRMark, and the remaining four bytes to             * chp.dttmPropRMark.              */
0, Line, //  Grab the hslf.record type 
0, Line, // short 
0, Line, //  titles on slide2 
0, Line, // Set 0 or 255 index of ColumnStyle. 
0, Line, //  Now repeat with 4096 block sizes 
0, Line, // Gnumeric produces spreadsheets without styles 
0, Line, //  (see links in applyColorTransform() for more info) 
0, Line, //  set some variables in the FileInformationBlock. 
0, Line, // let's check also that returns the correct table 
0, Line, //  assert that we can write/read it in memory 
0, Line, //  try in the middle 
0, Line, //  font size 20   colour blue 
0, Line, //  Remove colour formatting if present 
0, Line, //  Shuffle from ARGB to RGBA 
0, Line, //  Done reading from input stream   Ok to return now 
0, Line, //  Microsoft Base Cryptographic Provider is limited up to 40 bits   http://msdn.microsoft.com/en-us/library/windows/desktop/aa375599(v=vs.85).aspx 
0, Line, //  create 2 fonts objects 
0, Line, //  275: CHIINV 
0, Line, //  wb.setActiveSheet(0); 
0, Line, // calglin Cell.setCellFormula(null) for a non-formula cell 
0, Line, //  Ensure the text lengths are as we'd expect to start with 
0, Line, //  If the core properties part does not exist in the part list,   we save it as well 
0, Line, //  write out EncryptionInfo 
0, Line, //  <p:ph idx="1"/> 
0, Line, // 	        FileOutputStream fos = new FileOutputStream("embed.xls");  	        wb.write(fos);  	        fos.close();          } 
0, Line, //  Record specific dumps 
0, Line, //  to remove the array formula 
0, Line, //  end public interface DocumentEntry 
0, Line, //  some record types may get skipped (e.g. DBCellRecord and ContinueRecord) 
0, Line, //  Set cell color : +2(user style + proxy of it) 
0, Line, //  character run is 96 long 
0, Line, //  Unknown directory, skip silently 
0, Line, //  remove all slides, corresponding notes should be removed too 
0, Line, //  FALSE 
0, Line, //  before getting the workbook size we must tell the sheets that   serialization is about to occur. 
0, Line, //  This one isn't allowed 
0, Line, // expect: baseText (phoneticText) 
0, Line, //  val axis 1 (left) 
0, Line, //  Check we get the right extractors now 
0, Line, //  An array of EmfPlusPointF objects that specify the output position of each character glyph.   There MUST be GlyphCount elements, which have a one-to-one correspondence with the elements   in the Glyphs array.     Glyph positions are calculated from the position of the first glyph if the REALIZED_ADVANCE flag in 
0, Line, //  parentIndex equal 0xFFF indicates no inheritance from a cell style XF (See 2.4.353 XF) 
0, Line, //  local refs on other sheets are unaffected 
0, Line, //  paragraph reserved field   mask is 0x1800 
0, Line, //  i've no idea.. possible values are 1 for down, 2 for up and 3 for both...0 for none..   maybe a diagnal line? 
0, Line, //  sprmPDxcLeft 
0, Line, //  Check the contents of the formulas 
0, Line, //  Entry stream 
0, Line, // Default value = 1 will be used  
0, Line, //  lacking row count, evaluated will be right 
0, Line, //  There might be a few more bytes, which are a reserved field 
0, Line, //  if basis is invalid the result is #NUM! 
0, Line, //  we want to draw the shape from the top-left 
0, Line, //  never happens - blanks eventually get translated to zero 
0, Line, //  So we don't confuse users, give them back    the same object every time, but create    them lazily 
0, Line, //  Table column names with special characters need a single quote escape 
0, Line, // This is the border to paint when there is no border  and the cell has focus 
0, Line, //  what the ?? 
0, Line, //  TODO - AttrPtg.class, // Excel prepends this 
0, Block, /*      * Unlike TestFormulaFromSpreadsheet which this class is modified from, there is no     * differentiation between operators and functions, if more functionality is implemented with     * array formulas then it might be worth it to separate operators from functions     *      * Also, output matrices are statically 3x3, if larger matrices wanted to be tested     * then adding matrix size parameter would be useful and parsing would be based off that.      */
0, Line, //  Tack it onto the end of our chain 
0, Line, //  point number 
0, Line, //  Should have added 2 more blocks to the chain 
0, Line, //  no block size, because its a streaming cipher 
0, Line, //  Icons : Default - Column H, percentage thresholds 
0, Line, //  Get the name of it 
0, Line, //  0x200 - Undefined and MUST be ignored 
0, Line, //  and with an enum 
0, Line, //  check if we were created by POIFS otherwise create a new dummy POIFS for storing the package data 
0, Line, //  8 bytes cached number is a 'special value' in this case 
0, Line, //  How many hyperlinks do we really have? 
0, Line, //  We add up to three columns for each existing one: non-overlap   before, overlap, non-overlap after. 
0, Line, //  and finally update cryptoapi setting 
0, Line, //  Check the sheet offsets 
0, Line, //  invalid dx array 
0, Block, /*          * reserve already occupied drawing ids, so reserving new ids later will         * not corrupt the document          */
0, Line, //  Try with explicit rows / columns 
0, Line, //  Each mapping in this Map has a key consisting of a   POIFSReaderListener and a value cosisting of a Set of   DocumentDescriptors for the documents that POIFSReaderListener 
0, Line, //  Update the best fit column widths for auto-sizing just before the rows are flushed 
0, Line, //  DataObjectFormat 
0, Line, //  hugeGrpprlOffset );   
0, Line, //  The StringBuffer's contents are the source for the contents   of the cell. 
0, Line, //  Check by the names 
0, Line, //  After the second of a given type,    it seems to be 4 bytes giving the start,    then 4 bytes giving the length, then 
0, Line, //  propid, complex ind   size of complex property   propid, complex ind   value   propid, complex ind   size of complex property 
0, Line, //  https://math.stackexchange.com/questions/2772737/how-to-transform-arbitrary-rectangle-into-specific-parallelogram 
0, Line, // all we know is that the the length of <code>NoteStructureSubRecord</code> is always 22 bytes 
0, Line, // custom format 1  custom format 2 
0, Line, //  Add one more mini-stream, and check 
0, Line, //  interpreted ascii 
0, Line, //  add empty property elements otherwise Powerpoint doesn't load the file ... 
0, Line, //  by shifting rows... 
0, Line, //   and background=64 for the auto colouring 
0, Line, //  must be external function 
0, Line, //  false, true   false, true 
0, Line, //  Previously only one was inserted MB 23 May 2010 
0, Line, //           {              short[] brcRight = rgtc[x].getBrcRight (); 
0, Line, //  parent sheet 
0, Line, //  Set which area the table should be placed in 
0, Line, // single-cell array formulas behave just like normal cells - we can change the cell type 
0, Line, //  Add another cell, specifying the cellType 
0, Line, //  Is this a new code (un-compressed), or    the use of existing codes (compressed)? 
0, Line, //  Use them to build up the SSlideLayoutAtom 
0, Line, //  It fails with 4-part format because the call to CellFormat ignores 'use1904Windowing' 
0, Line, //  lighter 60% 
0, Line, //  dest rows overlap bottom of area   - truncate the bottom 
0, Line, //  These should work without throwing an Exception 
0, Line, //  remember the initial transform and restore it after we are done with the drawing 
0, Block, /*          * From the spec:         * For a multi-cell formula, the c elements for all cells except the top-left         * cell in that range shall not have an f element;          */
0, Line, //  by default set hide object off 
0, Line, //  Basic checks 
0, Line, // return new ArrayEval().evaluate(srcRowIndex, srcColumnIndex, args[0], args[1]); 
0, Line, //  prior to the fix the line below failed with 
0, Line, //  no methods 
0, Line, //  the POIFSDocument this property is associated with 
0, Line, // Read the size of extended data if present. 
0, Line, //  File via POIFileStream (java.nio) 
0, Line, //  ContinueRecord.sid   size 3   unicode compressed   'AB'   ContinueRecord.sid   size 16 
0, Line, //  Handle the case of it being garbage 
0, Line, // should not happen if the input argument is valid 
0, Line, //  add dummy move-to at start, to handle invalid emfs not containing that move-to 
0, Line, //  parameters 2, 2, -1 should mean : move row range [2-2] one level up 
0, Line, //  ffff 
0, Line, //  Check case where top input is of the wrong type 
0, Line, //  the POIFSReaderListeners who listen to all POIFSReaderEvents 
0, Line, //  optimisation 
0, Line, //  scan breadth-first, so parent-relations are hopefully the shallowest element 
0, Line, //  second string 
0, Line, //  do some goofy math to demonstrate decimals 
0, Line, //  for testing only 
0, Line, //  TextBytesAtom 
0, Line, // the UNC or local path to a video file. 
0, Line, // Relative path notation - up 
0, Line, //  Everything is fine at this point, cell is red 
0, Line, //  string criteria 
0, Line, //   Calculate the Hue 
0, Line, // cell A1 has a link to 'Target Sheet-1'!A1 
0, Block, /*          * An array of LVLs is appended to the PlfLst. lcbPlfLst does not         * account for the array of LVLs. -- Page 76 of 621 -- [MS-DOC] --         * v20110315 Word (.doc) Binary File Format          */
0, Line, //  N.B. assuming sign bit is zero 
0, Block, /*  Put the custom property into this map.  */
0, Line, //  Read all of it again, check it began at the start again 
0, Line, //  Add 6 fonts, some duplicates 
0, Block, /*                  * ECMA-376 Part 2 - 3rd edition                 * 13.2.4.16 Manifest Element                 * "The producer shall not create a Manifest element that references any data outside of the package."                  */
0, Line, //  Next part of expanded record handling 
0, Line, //  into many non-shared formulas), but if they ever were, the same rules would apply. 
0, Line, // System.setProperty("org.apache.poi.util.POILogger", "org.apache.poi.util.SystemOutLogger"); 
0, Line, //  Now we can have the ExternSheetRecords, 
0, Line, //  Now manually clear all, will see the new value 
0, Line, //  Next up is a set of flags, but only bit 3 is used! 
0, Block, /*  End XML markup  */
0, Line, // assign the comment to the cell 
0, Line, //  Formula for center of ellipse by Junichi Yoda & nashwaan:   -> From http://visguy.com/vgforum/index.php?topic=2464.0     x1,y1 = start; x2,y2 = end; x3,y3 = control point     x0 =   ((x1-x2)*(x1+x2)*(y2-y3)-(x2-x3)*(x2+x3)*(y1-y2)+D^2*(y1-y2)*(y2-y3)*(y1-y3))/(2*((x1-x2)*(y2-y3)-(x2-x3)*(y1-y2)))   y0 =   ((x1-x2)*(x2-x3)*(x1-x3)/D^2+(x2-x3)*(y1-y2)*(y1+y2)-(x1-x2)*(y2-y3)*(y2+y3))/(2*((x2-x3)*(y1-y2)-(x1-x2)*(y2-y3)))   radii along axis: a = sqrt{ (x1-x0)^2 + (y1-y0)^2 * D^2 }   
0, Line, //  this is kind of a hack, as picture/ole shapes can have a shape type of "frame"   but rendering is handled like a rectangle 
0, Line, //  It's all low bytes 
0, Line, //  application/vnd.ms-outlook 
0, Line, //  ShapeId is different 
0, Line, //  Unhelpful low-level error, sorry 
0, Line, //  check that valid formula does not throw exception 
0, Line, //  Sanity Checking 
0, Line, //  This would add the random value in the middle of the filename so that test runs wouldn't overwrite files 
0, Line, //  although not documented, we need the same padding as with agile encryption   and instead of calculating the missing bytes for the block size ourselves   we leave it up to the CipherOutputStream, which generates/saves them on close()   ... we can't use "NoPadding" here     see also [MS-OFFCRYPT] - 2.3.4.15   The final data block MUST be padded to the next integral multiple of the   KeyData.blockSize value. Any padding bytes can be used. Note that the StreamSize   field of the EncryptedPackage field specifies the number of bytes of    unencrypted data as specified in section 2.3.4.4. 
0, Line, //  Excel treats date 0 as 1900-01-00; EOMONTH results in 1900-01-31 
0, Line, //  initialize the hotspot diagnostic MBean field 
0, Line, //  object data was already set 
0, Line, //  Check that the cells now contain 
0, Line, //  Ensure we're getting a sensible length 
0, Line, //  cross tests with pv 
0, Line, //  V4 and V5 never has separators 
0, Line, //  Document shouldn't have any image relationships 
0, Line, //  width of '0' is less then width of '10'   columns 1, 2 and 3 should have the same width   columns 1, 2 and 3 should have the same width   10.0000 and '10.0000' 
0, Line, // end class 
0, Line, //  if the next user edit atom offset is already known, we would go into an endless loop 
0, Line, //  Zip + 4 format 
0, Line, //  Grab current size 
0, Line, //  any arbitrary constant will do 
0, Line, //  samples from http://www.excelfunctions.net/Excel-Ceiling-Function.html   and https://support.office.com/en-us/article/CEILING-function-0a5cd7c8-0720-4f0a-bd2c-c943e510899f 
0, Line, //  once again with removing one cell 
0, Line, //  Does it exist via the external book block? 
0, Line, //  Shift the second row down 1 and write to temp file 
0, Line, //  A 32-bit unsigned integer that specifies the graphics mode from the GraphicsMode enumeration 
0, Line, //  One sheet 
0, Line, //  The y-coordinate of a control point. 
0, Line, //  sprmPShd -- 0xc64d 
0, Line, //  c2 remains the master formula 
0, Line, //  Test that defaultRowHeight is a truncated short: E.G. 360inPoints -> 18; 361inPoints -> 18 
0, Line, //  Excel and LibreOffice behavior: ignore merged cells for auto-sizing.   POI behavior: evenly distribute the column width among the merged columns.                 each column must be auto-sized in order for the column widths                 to add up to the best fit width. 
0, Line, // should be [0.0, 1.0, null, 2.0, 3.0, 4.0, 6.0, null] 
0, Line, //  Write out and read back in again 
0, Line, // the second sheet is of type 'chartsheet' 
0, Line, //  A3:A5 
0, Line, //  start just after BOF record (INDEX is not present in this list) 
0, Line, //  'true' is wider than '0'   10 and '10' should be sized equally   formula result is unknown, the width is calculated  for '0' 
0, Block, /*                      * We don't know how to handle all cases in HTML, but at                     * least simplest case shall be handled                      */
0, Line, //  default height is 20 points 
0, Line, //  Re-evaluate and check 
0, Line, //  underline, family   charset, padding 
0, Line, //  Check all names fit within range, and use    DeletedArea3DPtg 
0, Line, //  negative zero *is* less than positive zero, but not easy to get out of calculations 
0, Line, //  Build a tree of POIXMLDocumentParts, this workbook being the root 
0, Line, //  weird: m\\/d\\/yyyy  
0, Line, //  Turn the Type and ID into helper objects 
0, Line, //  note name 'A' 
0, Block, /*              * Maybe the BuildFileTest was subclassed and there is             * no initialized project. So we could avoid getting a             * NPE.             * If there is an initialized project getTargets() does             * not return null as it is initialized by an empty             * HashSet.              */
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createIntegerConstraint(int, java.lang.String, java.lang.String)	  */
0, Line, //  Test overwriting an existing row 
0, Line, //  the rest seem to be mutually exclusive 
0, Line, //  The ref IDs are 4 and 6 
0, Line, //  solid 
0, Line, //  Core properties 
0, Line, //  compute slope.. 
0, Line, //  Cell opts ...   Alignment 20 
0, Line, //   and update the format record for this 
0, Line, //  axis type 
0, Block, /*  ======= Name pointing to deleted sheet ======  */
0, Line, // length of the document link including trailing zero 
0, Line, //  simple state machine for keeping track of what we are doing 
0, Line, //  full row ranges are not parsed properly yet.   These cases currently work in svn trunk because of another bug which causes the  
0, Line, //  Finally, check we can do a similar 512byte one too 
0, Line, //  rectangular inclusive-inclusive bounds, in device units, of the smallest 
0, Line, //  from POIFS 
0, Line, //  Check if the part name URI is absolute 
0, Line, //  last cell # + 1 
0, Line, //  no border style and STBorderStyle.NONE are equivalent   POI prefers to unset the border style than explicitly set it STBorderStyle.NONE 
0, Line, //  Second cell of array formula, NOT OK for xlsx files 
0, Line, // "poifs/protected_agile.docx", 
0, Line, //  the first record after the drawing block 
0, Line, //  create a blank slide and import content from the 4th slide of themes.pptx 
0, Line, //  be sure to reset cached value 
0, Line, //  because it is included in a merged region (Excel like behavior) 
0, Line, //  "=SUMIFS(A2:A9, B2:B9, "=A*", C2:C9, 1)" 
0, Line, //  It isn't bold or italic 
0, Line, //  Create a workbook 
0, Line, //  Now the Escher bits 
0, Line, //  process the byte array 
0, Line, //  Check the relations on it   Note - rId3 is a self reference 
0, Block, /*  next index in the records list where the new series can be inserted  */
0, Line, //  next is the 'Worksheet Protection Block' 
0, Line, //  copy of parent logic; we need to call our own read() instead of super.read(), which delegates instead of calling our read 
0, Line, //  check the result 
0, Line, //  if the target(x) is a string, but parses as a number   it may still count as a match, only for the equality operator 
0, Line, //  I feel too lazy to check if this isreqd :-/  
0, Line, //  0.5%	3%	1%	4% 
0, Line, //  20 short fields (rwFirst ... itblAutoFmt) 
0, Line, //  Copy the font 
0, Line, //  Arial, as unicode 
0, Line, //  Create a worksheet 'sheet1' in the new workbook 
0, Line, //  placeholder text for slide numbers 
0, Line, //         	targetWorkbook.write(os); 
0, Line, //  nFormats 
0, Line, //  Finish 
0, Line, //  Performance optimization: explicit boxing is slightly faster than auto-unboxing, though may use more memory 
0, Line, //  may be -1 (0xFFFF)   may be -1 (0xFFFF) 
0, Line, //  11 bytes length   formula of link   index to ref entry in extern sheet 
0, Line, // max shapeId in the slide   number of shapes in the slide  insert 3 shapes and make sure the Ids are properly incremented 
0, Block, /*              *  The first row simply contains the numbers 1 - 300.             *  The second row simply refers to the cell value above in the first row by a simple formula.              */
0, Line, //  corrupt file, cannot read header 
0, Line, //  need to avoid instanceof, to work around a 1.6 compiler bug 
0, Line, //  then set it on a normal slide 
0, Line, //  OpenOffice inserts 0xB3 instead of 0xAD.   protected static final byte[] SEGMENTINFO_CUBICTO2 = new byte[]{0x00, (byte)0xB3}; 
0, Line, //  Cell Formula with Area Reference 
0, Line, //  int versions of above, using 0-based indices 
0, Line, //  zero is FALSE, everything else is TRUE 
0, Line, //  Hint about the raw excel value 
0, Line, //             // this is too simplistic 
0, Line, //  Check hyperlinks again 
0, Line, //  Copy docs 
0, Line, //  314 == 0x013A; 318 == 0x013E 
0, Line, //  Log, but don't change, rather than breaking 
0, Line, // we can probably cache this information, but this should be a sparsely used function 
0, Line, //  account for footer row(s) in auto-filter range, which doesn't include footers 
0, Line, //  An 8-bit unsigned integer that specifies the set of character glyphs.   It MUST be a value in the WMF CharacterSet enumeration.   If the character set is unknown, metafile processing SHOULD NOT attempt   to translate or interpret strings that are rendered with that font.   If a typeface name is specified in the Facename field, the CharSet field 
0, Line, //  character run is 96 long   mask is 0x030004 
0, Line, //  Set all the default values 
0, Line, // Offset=0x0008DB37(580407) recno=160 sid=0x003C size=0x1048(4168) 
0, Line, //  Now add an orphaned one 
0, Line, //  formulas are just literal constants "1".."5" 
0, Line, //  Strings 
0, Line, //  boolean ppt2007 = sc.findFirstOfType(RecordTypes.RoundTripContentMasterId.typeID) != null; 
0, Line, //  Get the document 
0, Line, //  ftSbs (currently UnknownSubrecord) 
0, Line, //  The master persists 
0, Line, //  row0 will be shifted on top of row1, so this URL should be removed 
0, Line, //  a new name is inserted in the end of the SupBookRecord, after the last name 
0, Line, //  there are special cases where this can be, see comments in constructor above 
0, Line, // link to a file in the current directory 
0, Line, //  name is not an internal or external name 
0, Line, //  A value that identifies the type of metafile. The value for an EMF+ metafile is 0xDBC01. 
0, Line, //  now we can validate the cell 
0, Line, //  E4 to G9 of sheet 4 make up the table 
0, Line, // int ifmtLength = 2; 
0, Line, //  We start with 3 text runs, each with their own set of styles,   but all sharing the same paragraph styles 
0, Line, //  the replacement is empty, go straight to NOT_MATCHED 
0, Line, // swallow 
0, Block, /* 	 * URI Characters definition (RFC 3986)	  */
0, Line, // sometimes in older Excel 97 .xls files,  the requested length is wrong.  Read all available characters. 
0, Line, //  unquoted sheet names must start with underscore or a letter 
0, Line, //  manipulate 
0, Line, //   left, center or right. Not exhaustive 
0, Line, //  Document and CustomXML parts totally different [Julien C.] 
0, Line, //  TextProp order is according to 2.9.20 TextPFException, 
0, Line, //  INDIRECT is a special case 
0, Line, // Sheet0 
0, Line, // standard 24-byte tail of a file link 
0, Line, //  If we don't do this, we get ".6e5" instead of "6e4" 
0, Line, //  end public interface POIFSReaderListener 
0, Line, //  Default 
0, Line, //  connection start 
0, Line, //  Workbook + Named Range only 
0, Line, //  " -> " + sepx.getEnd()); 
0, Line, //  Work out what MAPIProperty this corresponds to 
0, Line, //  a failed invocation of Cell.setCellFormula leaves the cell 
0, Line, //  Set everything up 
0, Line, //  Set our type 
0, Line, // calculate the correct pos as our run/irun list contains hyperlinks and fields so is different to the paragraph R array. 
0, Line, //  Start again! 
0, Line, // style table is not set, remember fontIndex and set the run properties later,  when setStylesTableReference is called 
0, Line, //  Finish up the row 
0, Line, //  the calculation chain in XSSF is empty in a newly created workbook, so we cannot check if it is correctly updated 
0, Line, // HSSF: 171 
0, Line, //  Test that validates the table header value can be parsed from a document 
0, Line, //  else not '~?' or '~*' 
0, Line, //  character run is 25 long 
0, Line, //  They want time, that's normal 
0, Line, //  bytes 
0, Line, //  report exceptions if there were any 
0, Line, //  Should have two sheets 
0, Line, //  Round trip and check 
0, Line, //  make sure formula in sample is as expected 
0, Line, // 	public LinkedList<ExcelAntSet> getSetters() {  		return setters;  	} 
0, Line, //  equal within 1% 
0, Line, //  second and third sheets miss DefaultColWidthRecord 
0, Line, //  Create style. But don't use it. 
0, Line, //  second part is not compatible with an area ref e.g. A1:OFFSET(B2, 1, 2)   reset and let caller use explicit range operator 
0, Line, //  get 1st paragraph in cell's paragraph list 
0, Line, //  Usually stringRec is null here (in agreement with what the formula rec says).   In the case where an extra StringRecord is erroneously present, Excel (2007)   ignores it (see bug 46213). 
0, Line, //  make sure that cached start and end cell references   can be synchronized with the underlying CTTable 
0, Line, //  As per OOO documentation Sec 3.2.4 "Token Class Transformation", "Step 1"   All direct operands of value operators that are initially 'R' type will   be converted to 'V' type. 
0, Line, //  usually text height == 88, but font rendering is plattform dependent 
0, Line, //  field, only the first VerifierHashSize bytes MUST be used. 
0, Line, //  transformation is applied reversed ... 
0, Line, //  the underlying writer is GZIPSheetDataWriter 
0, Line, //  Update the new positions based on    deletes that have occurred between    the start and them 
0, Line, //  backwards because theoretically this is one short field 
0, Line, //  287: GAMMAINV 
0, Line, //  Special handling for whole-column references   Represented internally as x$1 to x$65536    which is the maximum range of rows 
0, Line, //  level list item...... 
0, Line, //  avoid bombing out during exception handling 
0, Line, //  Often, but not always has an unused short at the end 
0, Line, //  Check IDs are still right 
0, Line, // This is actually the 4th quadrant 
0, Line, //   whole of the stream 
0, Line, //  keep the dcontext state, if the next record is an EMF+ record   only reset it, when we are processing EMF records again 
0, Line, //  not sure where that last byte comes from 
0, Line, //  Set headers 
0, Line, //  skip until the next quote 
0, Line, //  File link or URL.   Absolute path.   Has label/description. 
0, Line, // Can't seem to find this documented but from the biffviewer it is clear that  Excel only records the indexes for the first 128 buckets. 
0, Line, //  the line cap to be used at the start/end of the line to be drawn. 
0, Line, //  border type 
0, Line, // at start of next cell or end of row, return the cellAddress if it equals currentRow and col 
0, Line, //  Regular numeric style formats 
0, Line, //  Custom formats - check text is stripped, including multiple spaces 
0, Line, //  Get the text from the Quill Contents 
0, Line, //  Check the type 
0, Line, // the top-left cell of a merged region is not regarded as merged 
0, Line, //  Shifting back up again, now two rows 
0, Block, /*  Check the command-line arguments.  */
0, Line, //  Fill up to hold 109 BAT blocks 
0, Line, //  ensure that the stream is properly closed here if an Exception   is thrown while opening 
0, Line, //  set the "needs recalculate" by default to avoid Excel handling conditional formatting incorrectly   see bug 52122 for details 
0, Line, //  Feed in the stuff from  chunks_parse_cmds.tbl 
0, Line, //  Get the ID of the first slide 
0, Line, //  docs say 406...because of a bug Microsoft support site article #Q184647)   double + short + int 
0, Line, //  check that neither valid nor invalid formula throw an exception 
0, Line, // Length of special info run. 
0, Line, //  application/vnd.ms-officetheme 
0, Line, //  solid fill 
0, Line, //  LogFontPanose Object 
0, Line, //  version number of new picture   header opcode 
0, Line, //  verify circular refs are still detected properly 
0, Line, //  A 32-bit unsigned integer that specifies the type of metafile that is embedded in the 
0, Line, //  Get complex data 
0, Line, //  only try to get the TC entries if they exist... 
0, Line, //  Start xxx 
0, Line, //  that more may be added in the future 
0, Line, //  adjacent address are merged 
0, Line, //  2. Try to re-get the patriarch 
0, Line, //  check for padding 0 bytes. 
0, Line, //  all rows have the same height 
0, Line, //  Act   evaluate SUM('Skye Lookup Input'!A4:XFD4), cells in range each contain "1" 
0, Line, //  Bugzilla 50033 
0, Line, //  formula is parsed with slightly different RVA rules: (root node type must be 'reference') 
0, Line, //  An XForm object that defines a two-dimensional linear transform in logical units.   This transform is used according to the ModifyWorldTransformMode to define a new value for 
0, Line, //  org.apache.poi.hwpf.model 
0, Line, //  Test that renaming named ranges doesn't break our new named range map 
0, Line, //  Grab the edit offset 
0, Line, //  And check the contents 
0, Line, //  First up, try with a few built in date formats 
0, Block, /*  **********  END  implementation of DirectoryEntry **********  */
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#getOperator()	  */
0, Line, // Substitute the template entries with the generated sheet data files 
0, Line, //  Tell the base workbook to close, does nothing if  
0, Line, //  Write into the new FileSystem 
0, Line, //  region may not be the one that contains the target, if a conditional formatting rule applies to multiple regions 
0, Line, //  Just notes, no slides 
0, Line, //  must be an expression, then.  Overloading by Excel in the file formats. 
0, Line, //  sometime emfs remove object table entries before they set them   so ignore requests, if the table entry doesn't exist 
0, Line, //  ADTL Palette 0 
0, Line, //  do nothing...nothing changed. 
0, Line, //  clone the sheet drawing along with its relationships 
0, Line, //  WRONG! 
0, Line, //  Remove the relationships part 
0, Line, //  plus pne   plus pne 
0, Line, //  Ask, will get 181 
0, Line, //  It MUST be the UnitPixel value of the UnitType enumeration 
0, Line, //  current y-extent. 
0, Line, //  by the time this gets called, all other document parts should   have been loaded, so it's safe to build the document structure 
0, Line, //  here it is useful to add the cause to not loose the original stack-trace 
0, Line, //  Use POIFS to query that lot 
0, Line, //  A 32-bit unsigned integer that specifies how to handle edge conditions with a value from the WrapMode enumeration 
0, Line, //  A 32-bit unsigned integer that specifies the number of polygons. 
0, Line, //  <a:sysClr val="windowText" lastClr="000000"/> 
0, Line, //  Create a new workbook 
0, Line, //  trailing newlines are ignored 
0, Line, //  Ensure the escher layer knows about the added records 
0, Line, // this file derives from common crawl: see Bug 60677 
0, Line, //  the schema type loader is cached per thread in POIXMLTypeLoader.   So create a new Thread and change the context class loader (which would normally be used)   to not contain the OOXML classes 
0, Line, //  fallback for unsupported glyphs 
0, Line, //  Get the Core Properties 
0, Line, //  Moving to an earlier point in the array   Grab everything between the two points 
0, Line, //  only non-null if a subshape 
0, Line, //  Check they have what we expect 
0, Line, //  A SlideShow with three slides 
0, Line, //  Area3DPxg [sheet=Table ! A2:A7] 
0, Line, //  WHITE_BRUSH - A white, solid-color brush   BrushStyle: BS_SOLID   Color: 0x00FFFFFF 
0, Line, //  Check range bounds against grid max 
0, Line, //  Note boundaries - skip outer quotes 
0, Line, //  Need to walk backward to find the last non-blank row   NOTE: n is always negative here 
0, Line, //  Border Styles, in BorderStyle/STBorderStyle enum order 
0, Line, //  interestingly, in testing, a validation value of the string "TRUE" or "true"    did not match a boolean cell value of TRUE - so apparently cell type matters   also, Excel validation is case insensitive - "true" is valid for the list value "TRUE" 
0, Line, //  Because we don't properly know about all the details of the old    section properties, and we're trying to decode them as if they    were the new ones, we sometimes "need" more data than we have. 
0, Line, //  step over column name chars until first digit for row number. 
0, Block, /*  use "0" for the id. See ECM-576, 20.2.2.3  */
0, Line, //  additionally try the other getText() methods 
0, Line, //  For now, only consider the first one 
0, Line, //  302: WEIBULL 
0, Line, //  Pick a predictable format + location + timezone 
0, Line, //  Marshall the properties inside a XML   Document 
0, Line, //  boolean values when the target(x) is a string 
0, Line, //  cells C4:C6 are not included in array formula, 
0, Line, //  18 @ 4078 
0, Line, //  01 18 31 00 03 20 00 00   E8 03 06 08 07 08 08 08 09 10 01 00 0C 20 04 00   00 00 00 88 1E 00 00 00 
0, Line, // remove all 
0, Line, // check that setting formula result works 
0, Line, // bad module.offset, try brute force 
0, Line, //  Create a workbook with one sheet and size the first three somewhat   larger so we can fit the chemical structure diagram in. 
0, Block, /*          * We skip the signing certificate itself according to section         * 4.4.3.2 of the XAdES 1.4.1 specification.          */
0, Line, //  after shifting, the two named regions should still be there as they   are fully inside the shifted area 
0, Line, //   all our bits 
0, Line, //  =============== Private methods ======================== 
0, Line, //  Grab our 7x pre-data 
0, Line, //  removed sheet was the active one, reset active sheet if there is still one left now 
0, Line, //  Custom formats with text 
0, Line, //  by creating Cells out of order we trigger the handling in onDocumentWrite() 
0, Line, //  Note String comparisons are case insensitive 
0, Line, //  361: AVERAGEA 
0, Block, /*          * An array of LFO structures. The number of elements in this array is         * specified by lfoMac. -- Page 424 of 621. [MS-DOC] -- v20110315 Word         * (.doc) Binary File Format          */
0, Line, // the check below failed prior to fix of Bug #47804 
0, Line, //  Should now have a mini-fat and a mini-stream 
0, Line, //  add list data on same sheet 
0, Line, //  Grab the guts record, adding if needed 
0, Line, // getDefaultColumnWidth returns width measured in characters  getColumnWidth returns width measured in 1/256th units 
0, Line, // set font 2 to 10 point type 
0, Line, //  This can be part of date, elapsed, or number 
0, Line, //  This is observable in version 3.0 
0, Line, //  draw line decorations 
0, Line, //  Check the digital signature part   Won't be there in this file, but we    need to do this check so that the    appropriate parts end up in the    smaller ooxml schemas file 
0, Line, // reserved 
0, Line, //  Good, well supported 
0, Line, //  case CellType.BOOLEAN 
0, Line, //  when running in Gump, the VM is very slow, so we should allow much more time 
0, Line, //  If this part has been created from scratch and/or the data buffer is   not   initialize, so we do it now. 
0, Line, //  record in bytes, including the 12-byte record header and record-specific data. 
0, Line, //  Re-open and check 
0, Line, //  workbook scope only 
0, Line, //  Happy day flow - evaluate A1 first 
0, Line, // revert to a blank cell 
0, Line, //  Strip the sheet name,   CTWorksheet.getTableParts defines in which sheet the table is 
0, Line, //  Get a clean filesystem to start with 
0, Line, // options_field+first_formula_size+first_unused+sec_formula_size+sec+unused; 
0, Line, //  if cell values have changed, clear cached format results 
0, Line, //  Finish up 
0, Line, //  Setup our header block 
0, Line, //  the document to be considered valid. 
0, Line, //  increment the count for this level 
0, Line, // first byte 
0, Line, //  Microsoft Office Word 97-2007 Binary File Format (.doc) Specification 
0, Line, //  Extract using the model code 
0, Line, //  Anchor entirely within one cell. 
0, Line, //  2 bytes blank 
0, Line, //  Raw Pictures contained in the pictures stream 
0, Line, // draw a thick black border on the row at the bottom using BLANKS 
0, Line, //  This condition commented out, as Word seems to set outline levels even for     paragraph with other styles than Heading 1..9, even though specification     does not say so. See bug 49820 for discussion. 
0, Line, //  recurse to continue matching 
0, Line, //  String stream 
0, Line, //  0xFC000000 MUST be zero and MUST be ignored 
0, Line, //  This value MUST be less than or equal to 8,192. 
0, Line, //  match 
0, Line, //  Note - CommonCrawl shows there's more variation in these than          the documentation suggests, so accept common clusters around          the "correct" value as well 
0, Line, //  Grab the SlidePersistAtom with the highest Slide Number.   (Will stay as null if no SlidePersistAtom exists yet in 
0, Line, //  Open from the temp file in read-write mode 
0, Line, //  TODO Test the indent 
0, Line, //  Grab the base name of the font they've asked about 
0, Block, /*              * plcflst (list formats) Written immediately after the end of the             * previously recorded, if there are any lists defined in the             * document. This begins with a short count of LSTF structures             * followed by those LSTF structures. This is immediately followed             * by the allocated data hanging off the LSTFs. This data consists             * of the array of LVLs for each LSTF. (Each LVL consists of an LVLF             * followed by two grpprls and an XST.)             *              * Microsoft Office Word 97-2007 Binary File Format (.doc)             * Specification; Page 25 of 210              */
0, Line, //  The condition to apply. 
0, Line, //  write out the SectionTable. 
0, Line, //  Should have two virtual chunk commands, a 
0, Line, //  restore the transform 
0, Block, /*          * JSR105 ds:Signature creation          */
0, Line, //  y   width 
0, Line, //  4 @ 152 
0, Line, //  end public class DocumentNode 
0, Line, //  Phone number format 
0, Line, //  fallback to the usual suspects 
0, Line, //  it's wrap text property should be set to 'true' 
0, Line, //  Performance optimization: build sheet cache the first time this is called   to avoid re-creating the XSSFEvaluationSheet each time a new cell is evaluated   EvaluationWorkbooks make not guarantee to synchronize changes made to   the underlying workbook after the EvaluationWorkbook is created. 
0, Line, //  OOXML Strict is not yet supported, see bug #57699 
0, Line, //  Via set defaults 
0, Block, /*          * Add a merge area          */
0, Line, //  Flag: cccUUUUU    c1a: offset 0 / 0x000    c1b: length 6+2  -> {\rtf1\a    c2a: offset 16 / 0x010    c2b: length 1+2  ->  def    c3a: offset 182 / 0xb6    c3b: length 0+2  -> la    n   g   1   0   2 
0, Line, //  when reading the picture elements, each time a segment is read, the cipher needs   to be reset (usually done when calling Cipher.doFinal) 
0, Line, //         CellStyle cs = workbook.createCellStyle();          cs.setShrinkToFit(false);          row.createCell(0).setCellStyle(cs); 
0, Line, //  The hyperlinks may come before the fonts,    or slightly in front 
0, Line, //  Write the PPT stream into the POIFS layer 
0, Line, //  every quote must be followed by another 
0, Line, //  A 32-bit unsigned integer that specifies the value in the LineJoin enumeration, which specifies how   to join two lines that are drawn by the same pen and whose ends meet. At the intersection of the two 
0, Line, // int len = _sections.size(); 
0, Line, //  ID information taken from http://msdn.microsoft.com/en-us/library/microsoft.exchange.data.contenttypes.tnef.tnefattributetag%28v=EXCHG.140%29.aspx 
0, Line, //  If an error occurs while reading the next level of openZipEntrySourceStream, free the acquired resource 
0, Line, //  aptg is part of a formula in a cell that was just copied to another row   aptg row references should be updated by the difference in rows that the cell was copied   No other references besides the cells that were involved in the copy need to be updated   this makes the row copy significantly different from the row shift, where all references   in the workbook need to track the row shift 
0, Line, //  Confirm expected size of first record, and ushort strLen. 
0, Line, // each slide uses its own master 
0, Line, //  from stream 
0, Line, //  no need to write a single empty MergeCellsRecord 
0, Line, //  Plus check core details are there 
0, Line, //  And the others 
0, Line, // convert <t>string</t> into a text run: <r><t>string</t></r> 
0, Block, /*  This name is not visible in Word 2010 anywhere  */
0, Line, //  Excel Workbook - either binary or OpenXML 
0, Line, //  Then by String 
0, Line, //  no exception at this point 
0, Line, //  As an additional check, recover the defauls footer and   make sure that it contains two paragraphs of text and that 
0, Block, /*              * Microsoft Office Word 97-2007 Binary File Format (.doc)             * Specification             *              * Page 78 of 210             *              * sprmCDispFldRMark (opcode 0xCA62) is interpreted by moving the             * first parameter byte to chp.fDispFldRMark, the next two bytes to             * chp.ibstDispFldRMark, the next four bytes to             * chp.dttmDispFldRMark, and the remaining 32 bytes to             * chp.xstDispFldRMark.              */
0, Line, // Bug54686 patch sets default behavior of # #/## if there is a failure to parse 
0, Line, //  Wind on our length + our header 
0, Line, //  Initially has Properties + BAT but nothing else 
0, Line, //  Set up defaults. 
0, Line, //  Update the new position 
0, Line, //  note - no moniker GUID   "\\\\MyServer\\my-share\\myDir\\PRODNAME.xls" 
0, Line, //  check attributes of paragraphs 
0, Line, //  Set value to the first cell 
0, Line, //  now check again 
0, Line, //  user defined function   in the token tree, the name is more or less the first argument 
0, Line, //  Find our children 
0, Line, //  Get the table 
0, Line, //  OOO calls this SHEETLAYOUT 
0, Line, //  the slide, or only master slide's ones do) 
0, Line, //  Shift 3 forward 
0, Line, //  do not clear the part here 
0, Line, //  Horizontal flipping applies only to shape outline and not to the text in the shape. 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getEmptyCellAllowed()	  */
0, Line, //  Check slide 2 is as expected (was re-ordered from 3) 
0, Line, //  Allocate a block if needed, otherwise figure    out what the next block will be 
0, Line, //  Determine the maximum overall level 
0, Line, //  X=ok, Y=balance 
0, Line, //  sprmPFInnerTtp  
0, Line, //  The spec says that there should be 6 bytes at the    end, which must be there and must be zero   However, sometimes Excel forgets them... 
0, Line, //  Check the MID Ptgs in Row 2 have V RefPtgs for A1 
0, Line, //  other files containing ole10native records ... 
0, Line, //  Sanity check the length 
0, Line, //  testNames.xls contains a VB function called 'myFunc' 
0, Block, /*  Accesseurs  */
0, Line, //  Note: structured references are evaluated and resolved to regular 3D area references. 
0, Line, //  A 32-bit unsigned integer that defines the size, in bytes, of the image.   If the Compression value is BI_RGB, this value SHOULD be zero and MUST be ignored.   If the Compression value is BI_JPEG or BI_PNG, this value MUST specify the size of the JPEG 
0, Line, //  remove these elements if present as it results in invalid content when opening in Excel. 
0, Line, //  cached for performance, used with cell text comparisons, which are case insensitive and need to be Locale aware (contains, starts with, etc.)  
0, Line, //  Special Handling of 1035=PPDrawingGroup and 1036=PPDrawing 
0, Line, //  it has to be continuous digits 
0, Line, //       favor of setSpacingLine(double, LineSpacingRule) 
0, Line, //  In case A, all has the same spacing and alignment 
0, Line, //  Do the fiddly namespace bits on the inline   (We need full control of what goes where and as what) 
0, Line, //  Trigger flattening of user model and corresponding update of dgg record. 
0, Line, //  necessary to substitute a TrueType font with another name. 
0, Line, //  the safe version of addMergedRegion should throw when trying to add a merged region that overlaps an existing region 
0, Line, //  skip header 
0, Line, //  An EmfPlusPath object that specifies the boundary of the brush. 
0, Line, //  Finds the record at a given position 
0, Line, //  make sure that the number is positive 
0, Line, //  skip any top frames inside junit.framework.Assert 
0, Line, //  this is probably always zero 
0, Line, //  Has 2 headers 
0, Line, //  result.put(Integer.valueOf(0x0406), result.get(Integer.valueOf(0x06))); 
0, Line, //  actually ordered, so iteration order is predictable 
0, Line, //  2 0x04 - reserved bit must be 0 
0, Line, //  for OOXML we need to set formula1 to the quoted csv list of values (doesn't appear documented, but that's where Excel puts its lists)   further, Excel has no escaping for commas in explicit lists, so we don't need to worry about that. 
0, Line, //  This document has 15 styles 
0, Line, //  Set the type of the icon set 
0, Line, //  Line ending in its own run each time! 
0, Line, //  /p:sldMaster/p:txStyles/p:titleStyle/a:lvl1pPr 
0, Line, //  null cell A5 is shifted 
0, Line, //  ======================   Only do additional copy operations here that cannot be done with Row.copyFromRow(Row, options)   reasons: operation needs to interact with multiple rows or sheets 
0, Line, //  Turn it into an array 
0, Line, //  not quite - if written by google docs 
0, Line, //  These can be part of date, or elapsed 
0, Line, //  Reference to a named range in our own workbook, as if it 
0, Line, //  SigningCertificate 
0, Line, //  2 * (2^2) 
0, Line, // windows 1251 
0, Line, // delete the CTSheet reference from workbook.xml 
0, Line, //  iterate over shapes and check shapeId 
0, Line, //  Link our new workbook 
0, Line, //  Ensure it got the right namespaces 
0, Line, //  check for object identity 
0, Line, //  Now Look at the code 
0, Line, //  text isn't quite the format rule... 
0, Line, //  1 less than distance to end of if FuncVar(size=4). +4 for attr skip before   1 less than distance to end of if FuncVar(size=4). 
0, Line, //  Now check the contents 
0, Line, // enforces singleton 
0, Line, //  check if the cell is inside the table 
0, Line, //  Tint doesn't have the alpha 
0, Block, /*  Width is a percentage, e.g. "33.3%" or 50 times percentage value, rounded to an integer,  */
0, Line, //   then the properties at the end 
0, Line, //  create a row 
0, Line, //  between excel and java (e.g. 9.9..9E-8) 
0, Line, //     /**       * Sets the orientation of the line, if inverse is false, then line goes       * from top-left to bottom-right, otherwise use inverse equals true        *       * @param inverse the orientation of the line       */ 
0, Line, //  Grab the type 
0, Line, //  expected to change in place (although this is not a strict requirement) 
0, Line, //  Check it's now like data 
0, Line, // set top-left corner of the picture, 
0, Line, //  STD Moniker 
0, Line, //  Calculate the size of the records from the end of the BOF   and up to the RowRecordsAggregate... 
0, Line, //  default value 
0, Line, //  test some other cached value types  
0, Line, // read available styles 
0, Line, //  We need to buffer the whole file into memory when    working with an InputStream. 
0, Line, // REFERENCE_REGISTERED must come immediately after  REFERENCE_NAME to allow for fall through in special case of bug 62625 
0, Line, //  That's when we're out of both 0x13s and 0x15s 
0, Line, //  formula cell 
0, Line, //  the other bytes will be encoded, when setNextRecordSize is called the next time 
0, Line, //  set dummy size, in case of dummy dimension can't be set 
0, Line, //  Create a slideshow covering it 
0, Line, //  to row 8   from col 4   to col 6   no flags set 
0, Line, //  Grab the reference ID 
0, Line, //  unary plus is a no-op 
0, Line, //  check we found july properly 
0, Line, //  do end-work here, we don't do this in a finally as we log   Exception 
0, Line, //  Can't think of a good way to check whether a directory is actually deleted since it would require the VM to stop.   Solution: set TempFileCreationStrategy to something that the unit test can trigger a deletion" 
0, Line, //  An optional blend pattern for the path gradient brush. If this field is present, it MUST contain either 
0, Line, //  FIXME 
0, Line, //  Wind on 
0, Line, //  Can go to the end, but not past it 
0, Line, //  mapping <java AffineTransform> = <xform> 
0, Line, //  A 32-bit signed integer that specifies attributes of the character glyphs that affect the appearance of 
0, Line, //  test with just long enough name, small file 
0, Line, //  ... also need to handle invocation in case of a filled chunk 
0, Line, //  set the fc in the section descriptor 
0, Line, // simulate a continues drawing record 
0, Line, //  Check the last data block 
0, Line, // fontFmt.setFontColorIndex((short)11); 
0, Line, //  Icons : 3 symbols with backgrounds - Column L 
0, Line, //  sheet3 A1 
0, Line, //  nobody was listening for this document before 
0, Line, //  Note: These fields are protected to help with unit testing   Other classes shouldn't really go playing with them! 
0, Line, //  Normal behaviour 
0, Line, //  stay within - no change   move completely out - no change   moved exactly to top - no change   truncation at top   moved exactly to bottom - no change   truncation at bottom 
0, Line, //  range will be C1:D1 
0, Line, //  All done! 
0, Line, // The ppt object to write into. 
0, Line, //  These crazy ones are valid 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#getValidationType()	  */
0, Line, //  attempt update input at cell A2 (which is missing) 
0, Line, //  Either the save operation succeed or not, we delete the temporary file 
0, Line, //       {          shds[x].serialize(buf, 1 + (x * ShadingDescriptor.SIZE));        }        size += SprmUtils.addSpecialSprm((short)0xD609, buf, sprmList); 
0, Line, //  Do we have a pending buffer for the mini stream? 
0, Line, //  calls System.exit(): SLWTTextListing.main(new String[0]); 
0, Line, //  Try to retrieve the target part 
0, Line, //  calcMode="manual" is unset when forceFormulaRecalculation=true 
0, Line, //  recStream is exhausted; 
0, Line, //  We don't parse the contents, so    nothing will have changed 
0, Line, //  the xml signature classes will try to find a special TransformerService,   which is ofcourse unknown to JCE before ... 
0, Line, //  remove the directory after the tests 
0, Line, //  as per "Microsoft Excel Developer's Kit" book   older version of SXVDEX - doesn't seem to have a sub-total name 
0, Line, //  restart the loop given the new index 
0, Line, //  --> For each character in the password:        --> For every bit in the character, starting with the least significant and progressing to (but excluding)             the most significant, if the bit is set, XOR the keys high-order word with the corresponding word from  
0, Line, // should be 4 
0, Line, //  Note - everything but BlankEval counts 
0, Line, //  should not include "12345678" - note that the input value was negative 
0, Block, /*                  * Re-initialize the c14n else the namespaces will get cached                 * and will be missing from the c14n resulting nodes.                  */
0, Line, //  Set a date format 
0, Line, //  Jan. 1, 2000 
0, Line, //  open the zip entry source stream 
0, Line, //  90 to 270 
0, Line, //  54 chars, 21 + 17 + 16 
0, Line, //  Check the fills on them at the low level 
0, Line, //  Now check the details of one or two 
0, Line, //  Paste values only 
0, Line, //  If linespacing >= 0, then linespacing is a percentage of normal line height. 
0, Line, //  split to 3 records 
0, Line, //  Now process the date 
0, Line, //  BAT, Props, SBAT, MIni 
0, Line, // now Slide.getShapes() should return an empty array 
0, Line, //  assumes the object returned by EvaluationCell.getIdentityKey() has a well behaved hashCode+equals 
0, Line, //  Try a few likely suspects... 
0, Line, //  get next-available numberFormat index.   Assumption: gaps in number format ids are acceptable   to catch arithmetic overflow, nextKey's data type   must match numberFormat's key data type 
0, Line, //  compare the hashes 
0, Line, //  This 32-bit unsigned integer is unused and MUST be set to zero. 
0, Line, //  http://msdn.microsoft.com/en-us/library/office/gg615594(v=office.14).aspx   repeated slideIds can be overwritten, i.e. ignored 
0, Line, //    Moving to a later point in the array   
0, Line, //  3 @ 4093   *mask bit* 1,3,5 
0, Line, //  keep going, this shouldn't cancel things 
0, Line, //  22 -> 88 simple sequential stream 
0, Line, //             os.close();          } 
0, Line, //  5 -> num 
0, Line, // make some noise 
0, Line, // noinspection StatementWithEmptyBody 
0, Line, //  cs5 --> 25 -> 24 
0, Line, //  @deprecated 3.15 beta 2. getBorderStyle will only work on BorderStyle enums instead of codes in the future. 
0, Line, //  some extra checks to make sure we don't hide some other bug with the rounding 
0, Line, // if whole part has to go into the numerator 
0, Line, //  Try with one with the entities in the Content Types 
0, Line, //  e.g. XSSFEventBaseExcelExtractor passes a null-document 
0, Line, //  Read in the header 
0, Line, //  clean up the directory that POIFSDump writes to 
0, Line, //  no pane configured 
0, Line, //  default margins from slide master 
0, Line, //  special cases where docx-handling breaks, but OPCPackage handling works 
0, Line, //  for each cell in sheet, if cell belongs to an array formula, check if merged region intersects array formula cells 
0, Line, //  check if cell is on the same sheet as the table 
0, Line, //  count of bytes in sttbfffn   table stream offset for sttbfffn 
0, Line, //  Bug 59004   the adjust value are format dependent, we scale them up so they match the OOXML ones.   see https://social.msdn.microsoft.com/Forums/en-US/33e458e6-58df-48fe-9a10-e303ab08991d/preset-shapes-for-ppt?forum=os_binaryfile 
0, Block, /*  Turn the property set into a summary information property. This is         * done by setting the format ID of its first section to         * SectionIDMap.SUMMARY_INFORMATION_ID.  */
0, Line, //  Firstly, check if there are any speech marks (") in the field;   each occurrence must be escaped with another set of spech marks   and then the entire field should be enclosed within another   set of speech marks. Thus, "Yes" he said would become   """Yes"" he said" 
0, Line, //  Empty directory 
0, Line, //  We need this before we can detect Encrypted Documents 
0, Line, //  A 32-bit signed integer that specifies the logical height of the destination rectangle. 
0, Line, // "poifs/protect.xlsx",  "poifs/protected_sha512.xlsx",  "poifs/extenxls_pwd123.xlsx", 
0, Line, //  second part is not compatible with an area ref e.g. S!A1:S!B2   where S might be a sheet name (that looks like a column name) 
0, Line, //  fill the "known" image data 
0, Line, //   we seem to loose it 
0, Line, //  [G7] 
0, Line, //  With a cell that isn't defined, we'll get null 
0, Block, /*  Copy the property set to the destination POI file                     * system.  */
0, Line, //  make sure header / footer is properly linked to underlying data  
0, Line, //  The first two POINT values specify the bounding rectangle of the ellipse.   The second two POINT values specify the radial vectors for the ellipse.   The radial vectors are cast from the center of the bounding rectangle.   The path starts at the POINT where the first radial vector intersects the   bounding rectangle and goes to the POINT where the second radial vector   intersects the bounding rectangle. The drawing direction is always counterclockwise.   If the path has already been started, a line is drawn from the last POINT to   the starting POINT of the arc; otherwise, a new path is started.   The number of arc segments drawn equals the number of segments divided by four. 
0, Line, //  to hand when turning the Ptgs into a string 
0, Line, //    and its origin is the upper-left corner. Top-down bitmaps do not support compression. 
0, Line, //  old Excel files, which we only support simple text extraction of 
0, Line, //  More complicated strings 
0, Line, //  Saving the workbook should not change the sheet names 
0, Line, //  Load a different file   This file has has something in lines 1-33 
0, Line, //  name has sheet-level scope 
0, Line, //  256 colors 
0, Line, //  Now do the character stylings 
0, Line, //  Ensure the right element 
0, Line, //  Was \r\r but gets emptied 
0, Line, //  byte intbuf[] = new byte[LittleEndianConsts.INT_SIZE];   byte shortbuf[] = new byte[LittleEndianConsts.SHORT_SIZE]; 
0, Line, // set default properties for a TextBox 
0, Line, //  minor increment 
0, Line, //  m10 (shearY) = eM21 (Vertical proportionality constant) 
0, Line, //  add these to the header 
0, Line, //  Two Levels Down 
0, Line, //  Failing that try via the raw headers  
0, Line, //  Return our first spot 
0, Line, //  compare with natural sort order 
0, Line, //  none currently 
0, Line, //  Have we hit the end of the file yet? 
0, Line, //  An EmfPlusGraphicsVersion object that specifies the version of operating system graphics that was used 
0, Line, //  Open without preserving nodes 
0, Line, //  <Relationship   TargetMode="External"   Id="rIdx"   Target="http://www.custom.com/images/pic1.jpg"   Type="http://www.custom.com/external-resource"/> 
0, Line, //  Reserved; set to zero 
0, Line, //  comment-extraction and formula extraction are not well supported in event based extraction 
0, Line, //  This record seems to have different valid encodings 
0, Line, //  Normalise the format string 
0, Line, //  More checking of shared features stuff 
0, Block, /*  A tree node for the POI filesystem does not yet                 * exist.  */
0, Line, //  force recalculation of internal fields 
0, Line, // The ValueRecordsAggregate use a tree map underneath.  The tree Map uses the CellValueRecordInterface as both the  key and the value, if we dont do a remove, then  the previous instance of the key is retained, effectively using  double the memory 
0, Line, //  Tell the header that we've got our first SBAT there 
0, Line, //  We don't want #REF! errors if we copy a row that contains cells that are referred to by other cells outside of copied region 
0, Line, //  Check things parse as expected: 
0, Line, //  Look out outline details of start 
0, Line, //  Check the signature matches 
0, Line, //  index to last column and relative flags 
0, Line, //  hidden bit only is altered for this outline level.  ie.  don't uncollapse contained groups 
0, Line, //  This is the name of the HotSpot Diagnostic MBean 
0, Line, //  A1: SUM(B1: IZ1) 
0, Line, //  Get the row and it's height 
0, Line, //       assertRefPtgA1('V', getPtgs(cell), 4); // FIXME!        assertRefPtgA1('V', getPtgs(cell), 9); // FIXME! 
0, Line, //  series number   format flags 
0, Line, //  A 32-bit floating-point value that specifies the distance between the 
0, Line, //  reference ends with the delimited name.    Assume names like: "Sheet1!'A1'" are never legal. 
0, Line, // calculation chain is auxiliary, remove it as it may contain orphan references to deleted cells 
0, Line, //  last 4 bytes in block   first 4 bytes in next block 
0, Line, //  Check that they're apparently the same 
0, Line, // activeTab (Active Sheet Index) Specifies an unsignedInt  that contains the index to the active sheet in this book view. 
0, Line, //  unset points if percentage is now set 
0, Line, //  Check taken 
0, Line, //  The proper way to do hyperlinks(!) 
0, Line, //  a test-case to test this locally without executing the full TestAllFiles 
0, Line, //  Options of 0x000F means container record   However, EscherTextboxRecord are containers of records for the    host application, not of other Escher records, so treat them    differently 
0, Line, // draw a simple bar graph 
0, Line, //  that is rather small 
0, Line, //  This is fun - blue if positive time,    red if negative time or green for zero! 
0, Line, //  Ask for another, will get our first XBAT 
0, Line, //  To start with, find the most recent in the byte offset domain 
0, Line, //  Read the FAT blocks 
0, Line, //  The formula has an array with 3 rows and 5 columns 
0, Line, //  line.setLineCompound(other.getLineCompound());   line.setLineDashing(other.getLineDashing()); 
0, Line, //  Throw IllegalStateException if the argument CellRangeAddress intersects with 
0, Line, // paint the filled rectangle at the bottom left hand position 
0, Line, //  Parameters 
0, Line, //  current junits are asserting incorrect behaviour 
0, Line, //  Decode 
0, Line, //  DEVICE_DEFAULT_FONT   The default font that is provided by the graphics device driver for the current output device 
0, Line, //  Recursively delete 
0, Line, //  merge 
0, Line, //  Can't rely on field_2_numIdClusters 
0, Line, //  As expected 
0, Line, //  verify behavior of getName 
0, Line, //  all these operations are on an area ref spanning rows 20 to 25 
0, Line, //  explicit range ':' operator 
0, Line, //  The rules for generating the auto numbers are as follows. If the   following paragraph is also   an auto-number, has the same type/scheme (and startAt if defined on   this paragraph) then they are   considered part of the same group. An empty bullet paragraph is   counted as part of the same   group but does not increment the count for the group. A change of   type, startAt or the paragraph   not being a bullet resets the count for that level to 1. 
0, Line, // check we can read the trimmed record 
0, Line, //  thus search for it 
0, Line, //  the next byte index after the string ends 
0, Line, //  Grab the header 
0, Line, //  Compare the header and the text 
0, Line, //  add content to each cell 
0, Line, //  File BLIP Store Entry (FBSE) 
0, Line, //  fill in any gaps if there are empty cells with comment mixed in with non-empty cells 
0, Line, //  It helps to round the inprecise reciprocal values to i. 
0, Line, //  check for too much precision 
0, Line, //  near lowest normal number   lowest normal number   highest subnormal number   subnormal number 
0, Line, //  nothing matched => throw the exception to the outside 
0, Line, //  adjust all the affected comment-structures now   the Map is sorted and thus provides them in the order that we need here, 
0, Line, //  Check to see if we've walked off the end of the string. 
0, Line, //  axis type   x 
0, Line, //  don't try to handle Date value 0, let a 3 or 4-part format take care of it  
0, Line, //  check new location where the ref points to 
0, Line, //  across a shape, when the image is smaller than the area being filled. 
0, Line, //  But when we ask for the string, that is sorted for us 
0, Line, //  finally also write it out via the streaming interface and verify that we still can read it back in 
0, Line, //  according to exact definition of isDeleted() 
0, Line, //  Try writing just into 3 blocks worth 
0, Line, //  Has two slides 
0, Line, //  1-row/1-column intersection 
0, Line, // InputStream stream = HSSFTestDataSamples.openSampleFileStream(") 
0, Line, //  convenient access to namespace   private static final ErrorEval EE = null; 
0, Line, //  found an unread record 
0, Line, //  If a 14 comes before the next 13, then   zap from the 13 to the 14, and remove 
0, Block, /*  After adding a custom property with the same name the size must still         * be one.  */
0, Line, //  178 -> 179 -> 180 -> end 
0, Line, //  Test using an existing workbook saved by Excel 
0, Line, //  create directory if it doesn't exist 
0, Line, //  FtPioGrbit (pictFlags) 
0, Block, /*  Initialize the "byteOrder" field.  */
0, Line, //  Don't carry over matches, but keep everything     else as it was 
0, Line, // drawingNumber = #drawings.size() + 1 
0, Line, //  Clear contents cache 
0, Line, //  First 12 -> 11 
0, Line, // stored strings table 
0, Line, //  If it isn't unknown or custom, store it for lookup 
0, Line, //  Now try to turn it into id + type 
0, Line, //  Shift rows 1-3 down 3 in the current one.  This tests when 
0, Line, //  The TextPiece is already in characters, which 
0, Line, //  Write out our text 
0, Line, //  The font list comes slightly later 
0, Line, //  =myFunc("_") 
0, Line, //  Check the one referring to the previously existing workbook behaves 
0, Line, //  32768 produces an invalid XLS file 
0, Block, /*  Write double word.  */
0, Line, //  Off we go 
0, Line, //  except with a thick black border at the bottom 
0, Line, //  Can be opened at the OPC level 
0, Line, // 				sheet.createRow(rowIndex); 
0, Line, //  Then rows 4-10 are defined 
0, Line, //  The list of entries we've written out 
0, Line, //             wb.write(os); 
0, Line, //  Returns EscherContainerRecord, but really msofbtClientTextbox 
0, Line, //  check for XAdES-BES 
0, Line, //  If this attribute is omitted, then a value of 0.1 inches is implied 
0, Line, //  Get a font, and slightly change it 
0, Line, //  Static evaluator won't work, as no references passed in 
0, Line, //  Look for latest core records that are slides or notes 
0, Line, //  Create a cell at A1 and insert a single, bulleted, item into 
0, Line, //  make sense of the image data 
0, Line, //  Flags whether the string is Unicode.   Classname of the embedded OLE document (e.g. Word.Document.8) 
0, Line, //  only 2 text nodes where text is collected: 
0, Line, //  default to 0, if indentLevel is not set 
0, Line, //  For -ve numbers, gets a bit more complicated... 
0, Block, /*  Have the property streams been read yet? (Only done on-demand)  */
0, Line, //  Set the delete on exit flag, unless explicitly disabled 
0, Line, // print hex dump if failed 
0, Line, //  The compressed code sequence is held over 2 bytes 
0, Line, //  from /p:sldMaster/p:txStyles/p:otherStyle/a:lvl1pPr/a:defRPr 
0, Block, /*  @see <a href="http://msdn.microsoft.com/en-us/library/dd905225(v=office.12).aspx">2.3.5 Office Binary Document RC4 CryptoAPI Encryption</a>  */
0, Line, //  Modulo Formula: "mod x y z" = sqrt(x^2 + b^2 + c^2) = value of this guide 
0, Line, //  index in the color scheme 
0, Line, //  Connector, shapes and text boxes are all two cell anchors 
0, Line, //  value is 'denormalised' which means it is less than 2^-1022   excel displays all these numbers as zero, even though calculations work OK 
0, Line, //  Create a from part way down the byte stream 
0, Line, //  Keep this code in sync with {@link RowShifter#shiftMergedRegions} 
0, Line, //  No revision given, as not enough data. Odd 
0, Line, //  GB2312 charset 
0, Line, // add a relationship with internal target: "#Sheet1!A1" 
0, Line, //  This document is widely available on the internet as "blair.doc".   I tried stripping the content and saving the document but my version   of Word (from Office XP) strips this table out. 
0, Line, //  A 32-bit unsigned integer that specifies the index of the pattern brush 
0, Line, //  a failed invocation of Row.removeCell leaves the row   in the state that it was in prior to the invocation 
0, Line, //  Check it's of the right size 
0, Line, //  First, copy the base css 
0, Line, //  Write collapse flag (stored in a single col info record after this 
0, Line, //  Note that again, an HSSFCellStye object is required and that 
0, Line, //  this is not the same as in XSSFRelation.WORKBOOK, as it is usually used by embedded charts   referencing the original embedded excel workbook 
0, JavaDoc, /*  * Identifies both built-in and user defined formats within a workbook.<p> * See {@link BuiltinFormats} for a list of supported built-in formats.<p> * * <b>International Formats</b><br> * Since version 2003 Excel has supported international formats.  These are denoted * with a prefix "[$-xxx]" (where xxx is a 1-7 digit hexadecimal number). * See the Microsoft article * <a href="http://office.microsoft.com/assistance/hfws.aspx?AssetID=HA010346351033&CTT=6&Origin=EC010272491033"> *   Creating international number formats * </a> for more details on these codes.  */
0, Line, //  Force encoded operand class for tArray 
0, Line, //  this evaluation is done, reset indent to stop logging 
0, Line, //  A 16-bit signed integer that defines the horizontal (x-axis) coordinate, in 
0, Line, // serialize and assert against the source data 
0, Line, //  values chosen to produce rounding anomaly 
0, Block, /* Cell c2 = */
0, Line, //  values are in the range [0..100] (usually ...) 
0, Line, //  manual override for one function name which contains lowercase characters 
0, Line, //  HSL code is public domain - see https://tips4java.wordpress.com/contact-us/ 
0, Line, //  this shouldn't happen 
0, Line, //  ignore all ref strings 
0, Line, // bug59858 shows that dirstream may not be in this directory (\MBD00082648\_VBA_PROJECT_CUR\VBA ENTRY NAME)  but may be in another directory (\_VBA_PROJECT_CUR\VBA ENTRY NAME)  process the dirstream first -- "dir" is case insensitive 
0, Line, //  A 32-bit signed integer that specifies the height, in logical units, of the font's   character cell or character. The character height value, also known as the em size, is the   character cell height value minus the internal leading value. The font mapper SHOULD   interpret the value specified in the Height field in the following manner.     0x00000000 < value:   The font mapper transforms this value into device units and matches it against   the cell height of the available fonts.     0x00000000   The font mapper uses a default height value when it searches for a match.     value < 0x00000000:   The font mapper transforms this value into device units and matches its   absolute value against the character height of the available fonts.     For all height comparisons, the font mapper SHOULD look for the largest font that does not 
0, Line, // xNum 
0, Line, //  known result 
0, Line, //  ID of the OLE stream containing the actual data. 
0, Line, //  178 -> 179 -> 180, 181+ is free 
0, Line, //  add many sheets so "first visible" is relevant 
0, Line, //  The y-coordinate of the ending vertex on an arc. 
0, Line, // single-cell array formula 
0, Block, /*  ===============================================================	 *                 External Serialisation Methods	 * ===============================================================	  */
0, Line, //  Ensure we still have one section, 5 paragraphs 
0, Line, //  unset to defauls 
0, Line, //  of the number of 16-bit words in the entire metafile. 
0, Line, //  = cs1 
0, Line, //   we split one compressed bit into two 
0, Line, //  Check it still has 2 slides 
0, Line, //  3rd is right aligned + normal line spacing 
0, Line, //  A1:O1 
0, Line, //  overwrite the hyperlink at dest cell with srcCell's hyperlink   if srcCell doesn't have a hyperlink, clear the hyperlink (if one exists) at destCell 
0, Line, //  If there are specified categories, find out if this has one of them 
0, Line, //  Look up the local sheet 
0, Line, //  21 jumps to 89, then ends 
0, Line, // the correct amount. 
0, Line, //  retrieve the newly created named range 
0, Line, // Offset=0x00000612(1554) recno=71 sid=0x00FC size=0x2020(8224) 
0, Line, //  will be handled by workaround below 
0, Line, // System.setProperty("org.apache.poi.util.POILogger", "org.apache.poi.util.SystemOutLogger");  System.setProperty("poi.log.level", "3"); 
0, Line, //  incorrect margin constant 
0, Line, //  The idx attribute refers to the index of a fill style or   background fill style within the presentation's style matrix, defined by the fmtScheme element.   value of 0 or 1000 indicates no background,   values 1-999 refer to the index of a fill style within the fillStyleLst element 
0, Line, //  2017-12-01 09:54:33 which is 42747.412892397523 as double 
0, Line, // check that the added pictures are accessible after write 
0, Line, //                 // successful tests should be silent 
0, Line, //  Excel day 30000 is date 18-Feb-1982   0.7 corresponds to time 16:48:00 
0, Line, //  startPos is 1x1 area ref, numChars is cell ref 
0, Line, // none is not the same as "not set", therefore the following doesn't work any more  assertFalse(ctBorder.isSetLeft()); 
0, Line, //  Unused: UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD 
0, Line, //  create a workbook 
0, Line, //  encoded Ptg size   unknown int 
0, Line, //  reference itself 
0, Line, //  second char run is 17 long   font.color only 
0, Line, // Can't have -1 bytes read in the error message! 
0, Line, //     public final static short       OBJECT_TYPE_POLYGON            = 9;      public final static short       OBJECT_TYPE_CHECKBOX           = 11;      public final static short       OBJECT_TYPE_OPTION_BUTTON      = 12;      public final static short       OBJECT_TYPE_EDIT_BOX           = 13;      public final static short       OBJECT_TYPE_LABEL              = 14;      public final static short       OBJECT_TYPE_DIALOG_BOX         = 15;      public final static short       OBJECT_TYPE_SPINNER            = 16;      public final static short       OBJECT_TYPE_SCROLL_BAR         = 17;      public final static short       OBJECT_TYPE_LIST_BOX           = 18; 
0, Block, /*  ********** START implementation of Entry **********  */
0, Line, // /////////////////////////////////////////// 
0, Line, //  lazy initialization 
0, Line, //  one of the limits was reached, report it 
0, Line, //  Also check all use the default style 
0, Line, //  sprmPRsid -- 0x6467  
0, Line, //  only for built in styles 
0, Line, //  Grab the block size 
0, Line, //  note there is no "clear2 B2 91" here because B2 doesn't depend on C1 anymore 
0, Line, //  3072 - main SpContainer id 
0, Line, //  Now check we get the right formula back for 
0, Line, //  Add some text to the empty header 
0, Line, //  collapsed: 
0, Line, //  If written, will be the usual size 
0, Line, //  set the font 
0, Line, //  E4 to H9 of sheet 5 make up the table 
0, Line, //  base weight of font   character set identifier   index into ffn.szFfn to the name of 
0, Line, //  Write out the (new) header 
0, Line, //  Final spacer 
0, Line, //  keep the unknown records for re-serialization 
0, Line, //  very naive impl, may need to be optimized 
0, Line, //  Handle Parent-aware Records 
0, Line, //  aggregate drawing records. 
0, Line, //  = 2006-10-13T15:06:00.123+00:00 
0, Line, //  process in chunks as we have a limit on size of column now 
0, Line, //  Columns being moved completely enclose the ref.   - move the area ref along with the columns regardless of destination 
0, Block, /*  Make the tree UI element visible.  */
0, Line, //  Type is 70, or 0x46 
0, Line, // The group itself is a shape, and always appears as the first EscherSpContainer in the group container. 
0, Line, //  The argument is regular reference 
0, Line, //  Change to a non unicode author, will stop being unicode 
0, Line, //  1st is bold 
0, Line, //  Covered Scenarios:   * row copy on same sheet   * row copy between different sheets in the same workbook 
0, Line, //  read cell range address list with all affected ranges 
0, Line, //  
0, Line, //  Border 0   Palette 0 
0, Line, //  It is a null terminated string 
0, Line, //  Update for each new position 
0, Line, //  row before and things are moved up 
0, Line, //  Theme colours aren't tinted 
0, Line, //  normal exit point 
0, Line, //  validate with another office file (Excel 2013) 
0, Line, //  reset otherwise a lot of ooxml tests will fail 
0, Line, // autofilters seem to alway have this magic number 
0, Line, //  Formula referencing an area 
0, Line, //  and at last, use the default factory 
0, Line, //  Loop over until they're all gone 
0, Line, //  convert to zero based 
0, Line, //  see TextFunction.TRIM for implementation 
0, Line, // row with totals below 
0, Line, // Bug54771a.docx and Bug54771b.docx test slightly   different recursion patterns. Keep both! 
0, Line, //  sprmPBrcBottom80   
0, Line, //  With nothing set 
0, Line, //  Create a split with the lower left side being the active quadrant 
0, Line, //  add clipping in case of a source subimage, i.e. a clipped source image   some dstBounds are horizontal or vertical flipped, so we need to normalize the images 
0, Line, //  {   throw new UnsupportedOperationException(   "This Paragraph has no dataStream storage." );   }   we have some storage... 
0, Line, //  backcolor   pattern 
0, Line, //  this should only throw an error when evaluating the formula. 
0, Line, //  create a XAdES time-stamp container 
0, Line, //  Grab the picture object 
0, Line, //  Save the package in the output directory 
0, Line, //  Now add some empty ones 
0, Line, //  Chain it 
0, Line, //  For encrypted files:   The ObjectPool storage MUST NOT be present and if the file contains OLE objects, the storage   objects for the OLE objects MUST be stored in the Data stream as specified in sprmCPicLocation. 
0, Line, //  Create nameid entries. 
0, Line, //  Ensure it's not now too long 
0, Line, //  Just grab the header, not the whole contents 
0, Line, //  Now check where they crop up 
0, Line, //  Row 18 is blank 
0, Line, //  first line is chart title 
0, Line, // skip fBidi  
0, Line, //  textIdx = headerIdx + 1; 
0, Line, //  Mask of the bits in the options used to store the image format. 
0, Line, //  values 1001 and above refer to the index of a background fill style within the bgFillStyleLst element. 
0, Line, //  I have not checked Excel to know if this is a LibreOffice or a POI problem. 
0, Line, //  bool2 bitfields 
0, Line, //  assumes other object is one of us, otherwise ClassCastException is thrown 
0, Line, //  fails with IllegalArgumentException("Multiple cell comments in one cell are not allowed, cell: A1")   because createCellComment tries to create a cell at A1   (from CellAddress(anchor.getRow1(), anchor.getCell1())),   but cell A1 already has a comment (comment1).   Need to atomically create a comment and attach it to a cell.   Current workaround: change anchor between each usage   anchor.setCol1(1); 
0, Line, // First row of the hyperlink 
0, Line, //  We have a previous filled result. 
0, Line, //  Pass the themes table along to things which need to     know about it, but have already been created by now 
0, Line, //  Read FSPA and Escher information   _fspa = new FSPATable(_tableStream, _fib.getFcPlcspaMom(), 
0, Line, //  which would be more efficient. 
0, Line, //  don't try to shoot in foot, please -- vlsergey   r.setOptions((short)0x000F); 
0, Line, //  Ensure the escher layer reflects the text changes 
0, Line, //  perhaps this code should be moved to HexDump 
0, Line, //  Write the matching OBJ record 
0, Line, //  Push the time forward a bit and check 
0, Line, // the second hyperlink now belongs to A6 
0, Line, //  POIFS -> hssf 
0, Block, /* int osVersion = (int) */
0, Line, // the limit 
0, Line, //  end indention options bitmask sets 
0, Line, //  /p:sldLayout /p:cSld/p:spTree/p:sp/p:nvPr/p:ph[@type="ctrTitle"] 
0, Line, // arbitrary sanity threshold 
0, Line, //  ensure that sheets are moved up and removed sheets are not found any more 
0, Line, // Test high row bound 
0, Line, //  XXX: enrich 
0, Line, //  Sheet based name 
0, Block, /* Row: 0: Level: 3 Collapsed: false Hidden: falseRow: 1: Level: 3 Collapsed: false Hidden: falseRow: 2: Level: 2 Collapsed: false Hidden: falseRow: 3: Level: 1 Collapsed: false Hidden: falseRow: 4: Level: 0 Collapsed: false Hidden: falseRow: 7: Level: 3 Collapsed: false Hidden: trueRow: 8: Level: 3 Collapsed: false Hidden: trueRow: 9: Level: 2 Collapsed: true Hidden: trueRow: 10: Level: 1 Collapsed: true Hidden: trueRow: 11: Level: 0 Collapsed: true Hidden: falseRow: 14: Level: 3 Collapsed: false Hidden: trueRow: 15: Level: 3 Collapsed: false Hidden: trueRow: 16: Level: 2 Collapsed: true Hidden: falseRow: 17: Level: 1 Collapsed: false Hidden: falseRow: 18: Level: 0 Collapsed: false Hidden: falseRow: 20: Level: 3 Collapsed: false Hidden: trueRow: 21: Level: 3 Collapsed: false Hidden: trueRow: 22: Level: 2 Collapsed: true Hidden: trueRow: 23: Level: 1 Collapsed: true Hidden: falseRow: 24: Level: 0 Collapsed: false Hidden: falseRow: 27: Level: 3 Collapsed: false Hidden: trueRow: 28: Level: 3 Collapsed: false Hidden: trueRow: 29: Level: 2 Collapsed: false Hidden: trueRow: 30: Level: 1 Collapsed: true Hidden: trueRow: 31: Level: 0 Collapsed: true Hidden: false          */
0, Line, //  Create the store 
0, Line, // This should not happen. bug 59858 
0, Block, /*  This is the expected behaviour.  */
0, Line, //  First child is at 0x64b3 
0, Line, //  Return the size less the header 
0, Line, //  Literal Value Expression 
0, Line, //  range will be C1:C1 
0, Line, //  Save 
0, Block, /*  char 13  */
0, Line, //  Copy the data to the dictionary in the new place 
0, Line, //  is compressed unicode 
0, Line, //  Row "2" moved to row "12", and the formula has been updated. 
0, Line, //  And make it non-contiguous 
0, Line, //  Search backwards for '!' because sheet names can contain '!' 
0, Line, //  validate 
0, Line, // Get values for start row, start and end column 
0, Line, //  E1 is null 
0, Line, // Starting value from M$ empircal study. 
0, Line, //  cannot extract date if only one hyphen is in the   string... 
0, Line, //  raw hex data 
0, Line, // or new XSSFWorkbook(); 
0, Line, // inch  reserved 
0, Line, //  This test is written as expected-to-fail and should be rewritten   as expected-to-pass when the bug is fixed. 
0, Line, //  Then check our children in turn 
0, Line, //  Color is undefined. 
0, Line, //  Now read at various points 
0, Block, /*  Remove all properties supported by HPSF from the summary         * information (e.g. author, edit date, application name) and from the         * document summary information (e.g. company, manager).  */
0, Line, //  no DIR stream with offsets yet, so store the compressed bytes for later 
0, Line, //  normally this results in #VALUE!,   but errors in individual cells take precedence 
0, Line, //  record to the DIB header. 
0, Line, //  Call methods to calculate how the image and sheet should be 
0, Line, //  compare cell value to each item 
0, Line, //  maximum 9 
0, Line, //  Set 
0, Line, //  all static methods, so no need for a public constructor 
0, Line, //  Create a just-sub 2gb file 
0, Line, //  C1   D1   E1 
0, Line, //  Was this position a match? 
0, Line, //  we will not paint empty paragraphs 
0, Line, // getting cells from an empty row should returns null 
0, Line, //  delete row 0-24, row 74 - 99 && change cell 3 on row 39 to string "MODIFIED CELL!!" 
0, Line, //  row or cell does not exist 
0, Line, //  sheet1 A2 formulae 
0, Line, //  Write out and read back 
0, Line, // label_opts  link_opts 
0, Line, //  Checksum (may be wrong...) 
0, Line, //  sprmPFInTable 
0, Line, //  expected 
0, Line, //  Now repeat it with spanning multiple blocks 
0, Line, //  only one currency symbols is allowed 
0, Line, //  50 characters divided by 1/20th of a point 
0, Line, //  Open package 
0, Line, //  NOSONAR   this also catches NoClassDefFoundError, which may be due to a local class path issue   This may occur if the code is run inside a web container   or a restricted JVM   See bug 61170: https://bz.apache.org/bugzilla/show_bug.cgi?id=61170 
0, Line, // super.defaultColumnStyle(); 
0, Line, //  field_3_cell_options bit map 
0, Line, //  195: DSTDEVP 
0, Line, //  (zero hyperlinks gets numberOfPLCs=1) 
0, Line, //  The pivot table's data source is on the same sheet in A1:E7 
0, Line, //  Now ask for a free one, will need to extend the SBAT chain 
0, Line, //  A 16-bit signed integer that defines the ... coordinate 
0, Line, // remove non-existing 
0, Line, //  Complain if it's not 
0, Line, //  pattern   weight 
0, Line, //  _header.setPropertyStart has been updated on write ... 
0, Line, // wb.write(new FileOutputStream(new File("C:\\temp\\test.xlsx"))); 
0, Line, //  The start of the change is before we end 
0, Line, //  Write out our HPFS properties, with any changes 
0, Line, //  some colors 
0, Line, //  as expected 
0, Line, //  This row-shift should destroy the CF region 
0, Line, //  Delegate test 
0, Line, //  Add to the ptrData offset lookup hash 
0, Line, //  Figure out if we are to suppress either the integer or fractional part.   With # the suppressed part is removed; with ? it is replaced with spaces. 
0, Line, //  Notes of master 
0, Line, //  don't write the old one as we'll use the correct name shortly 
0, Line, //  there are 3 others besides the one at A32769:H32769 
0, Line, // calculate dx2, offset in the rightmost cell 
0, Line, //  Case 1: bullet=false, leftMargin=0, indent=0. 
0, Line, //  Do we need to do anything? 
0, Line, //  finally, if we had at least one cell we can populate the optional dimension-field 
0, Line, //  this iteration is ordered by page number 
0, Line, //  int nChars 
0, Line, //  The elements MUST be in increasing order, and their values MUST be between 0.0 and 1.0, inclusive. 
0, Line, //  Highly unlikely that this will be true but, if the width of a series   of columns is exactly equal to the required width of the image, then   simply build a ClientAnchorDetail object with an inset equal to the   total number of co-ordinate positions available in a column, a   from column co-ordinate (top left hand corner) equal to the value   of the startingColumn parameter and a to column co-ordinate equal   to the toColumn variable.   
0, Line, // plain string value 
0, Line, // or:  extends Var1or2ArgFunction { 
0, Line, //  grab UserEditAtom 
0, Line, //  Get the username length 
0, Line, //  A pseudo special Excel dates 
0, Line, //  Row 9 is empty, but with a blank at E9 
0, Line, //  Table numbers need to be unique in the file, not just    unique within the sheet. Find the next one 
0, Block, /*  Open file to decompress  */
0, Line, //  These appear in the middle of the cell records, to    specify that the next bunch are empty but styled   Expand this out into multiple blank cells 
0, Line, //  Get to a multiple of two 
0, Line, //  map of tracked columns, with values containing the best-fit width for the column   Using a HashMap instead of a TreeMap because insertion (trackColumn), removal (untrackColumn), and membership (everything)   will be called more frequently than getTrackedColumns(). The O(1) cost of insertion, removal, and membership operations   outweigh the infrequent O(n*log n) cost of sorting getTrackedColumns(). 
0, Line, //  a user edit atom is usually located 36 byte before the smallest known record offset  
0, Line, //  5 paragraphs should get us to the end of our text 
0, Line, //  Take a look in detail at the first couple of 
0, Line, // Test a small string that is uncompressed 
0, Line, //  Default name already taken, not index based, nothing free 
0, Line, //           {              short[] brcBottom = rgtc[x].getBrcBottom (); 
0, Line, // As per the equals method lets do this in stages 
0, Line, //  A 32-bit unsigned integer that specifies the size, in bytes, of the 
0, Block, /*  Set the properties.  */
0, Line, //  Check date too 
0, Line, //  subshapes if they exist 
0, Line, //  Data entries 
0, Line, //   new stream, save the start block offset 
0, Line, //  default font size 
0, Line, // create a CTRst bean attached to this SstDocument and copy the argument CTRst into it 
0, Line, //  Contents must match 
0, Line, //  http://www.techonthenet.com/excel/formulas/irr.php 
0, Line, //  The HSSF has a max of 2^16 rows and 2^8 cols 
0, Line, //  The cache hits would be 24 if fully evaluating all arguments of the   "IF()" functions (Each of the 8 formulas has 4 refs to formula cells   which result in 1 cache miss and 3 cache hits). However with the   short-circuit-if optimisation, 2 of the cell refs get skipped 
0, Line, //  multiple master, OpenType font. The maximum number of values in the array is 16. 
0, Line, //  Now re-check with preserving 
0, Line, //  relative to the height of the shape. 
0, Line, // creating custom palette 
0, Line, //  Grab the 12 bytes that is "SSlideLayoutAtom" 
0, Line, // color RGB will be extracted from theme 
0, Line, //  Set one 
0, Line, // ??        textFormatter[0x2C] = new DecimalFormat("_($*#,##0.00_);_($*(#,##0.00);_($*\"-\"??_);_(@_)"); 
0, Line, //  trying to extract width and height from pictures content: 
0, Block, /*                  * Problems reading from the actual ByteArrayInputStream should                 * never happen so this will only ever be a ZipException.                  */
0, Line, //  Empty dirs are fine 
0, Line, //  Read the first file again 
0, Line, //  expected here 
0, Line, // add a picture in this workbook. 
0, Line, //  find comment in A1 before we set the comment in B2 
0, Line, //  Textual value 
0, Line, //  If the field contains either embedded separator or EOL   characters, then escape the whole field by surrounding it   with speech marks. 
0, Line, // the Application property must be set for new workbooks, see Bugzilla #47559 
0, Line, //  as indicated by the Height value. 
0, Line, //  first/second knot 
0, Line, //  D1 is a blank cell 
0, Line, //  options 
0, Line, //  notes master aren't yet supported ... 
0, Line, //  hidden: 
0, Line, //  First is 30 long, left aligned, normal spacing 
0, Line, //  Fill Palette 20c0 
0, Line, //  Assert the repeat header is false by default 
0, Line, //  count 
0, Line, //  Truncate the password to 15 characters 
0, Line, //  A 32-bit unsigned integer that defines the brush, the content of which is   determined by the S bit in the Flags field. 
0, Line, //  Note - in Microsoft terms:    BAT ~= FAT    SBAT ~= MiniFAT    XBAT ~= DIFat 
0, Line, //         + " font " + (font == null ? "<null>" : font.getFontName())); 
0, Line, //  Updated our cached list of SlideListWithText records 
0, Line, //  Memory consumption for a HashMap and TreeMap is about the same 
0, Line, //  set properties to indent the resulting XML nicely 
0, Line, // check if the cloned sheet has drawings 
0, Line, //  logger.info("Created Row " + i); 
0, Line, //  Keep in sync with {@link ColumnShifter#removalNeeded} 
0, Line, //  simple test to at least cover some parts of the class 
0, Line, //  Update and write out the Current User atom 
0, Line, //  Report the first 5 children, to give a flavour 
0, Line, //  TODO - PowerPoint   TODO - Publisher   TODO - Visio 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#setFormula1(java.lang.String)	  */
0, Line, //  Value is only there for non-formula, non min/max thresholds 
0, Line, // sheet name with no spaces 
0, Line, //  Add a duplicate, check the right one is picked 
0, Line, // B2:C3 
0, Line, //  It SHOULD be 0x0000. 
0, Line, //  Test idea: iterate over cells in the reference worksheet, they all have the R attribute set.   For each cell from the reference sheet find the corresponding cell in the problematic file (with missing R) 
0, Line, //  Fixed by GR, we should not close it here 
0, Line, //  Write out any extra bits 
0, Block, /*  Read second word.  */
0, Line, //  bold weight = x190   supersubscript 
0, Line, //  Reset 
0, Line, //  Can't think of a good way to check whether a file is actually deleted since it would require the VM to stop. 
0, Line, //  setting spid only works with a vml drawing object   oleObj.setSpid("_x0000_s"+(1025+objectIdx)); 
0, Line, //  else as is   else signed integer 
0, Line, //  A 16-bit unsigned integer that identifies this record type 
0, Line, //  sprmPFInnerTableCell 
0, Line, //  Load individual sheets. The order of sheets is defined by the order 
0, Block, /*  See comment at top of file  */
0, Line, //  Start by finding the notes records 
0, Line, //  required for displaying the DIB. If this value is zero, all color indexes are required. 
0, Line, //  A 32-bit unsigned integer that specifies the total number of consecutive META_ESCAPE_ENHANCED_METAFILE 
0, Line, //  Red 
0, Line, //  Document to image is down a directory 
0, Line, // Test that we get null for undefined rownumber 
0, Line, //  tAttrIf 
0, JavaDoc, /*  * Tests for logical ISxxx functions as loaded from a test data spreadsheet.<p>  */
0, Line, // add CT_Drawing element which indicates that this sheet contains drawing components built on the drawingML platform. 
0, Line, //  These ones specify colours, who knew that was allowed? 
0, Line, //  meaningful only of _numberOfFlushedRows>0   meaningful only of _numberOfFlushedRows>0   meaningful only of _numberOfFlushedRows>0 
0, Line, //  invalid date formats -- will throw exception in DecimalFormat ctor 
0, Line, //  row 2 | X Y Z 
0, Line, //  Add the core records for this new Slide to the record tree 
0, Line, //  Document 
0, Line, //  Change text via rich 
0, Line, //  Check created ones get the right column 
0, Line, //  Calculate how far the image will project into the next row. Note   that the height of the last row assessed is subtracted from the 
0, Line, //  Append 
0, Line, // noinspection SillyAssignment 
0, Block, /*  * Created on May 8, 2005 *  */
0, Line, //  Add a sheet with one row 
0, Line, //  -> May be null 
0, Line, //  end public class IntMapper 
0, Block, /*  Use the convenience methods.  */
0, Line, // continued part 
0, Line, //  Column 'B' 
0, Line, //  Non-integers of non-scientific magnitude are formatted as "up to 11   numeric characters, with the decimal point counting as a numeric   character". We know there is a decimal point, so limit to 10 digits. 
0, Line, //  Odd is the default 
0, Line, //  v2 version opcode 
0, Line, //  Bump down by one, so still points    at the same sheet 
0, Block, /*  A 32-bit signed integer that defines the x coordinate, in logical coordinates,         * of the ... corner of the rectangle.          */
0, Line, //  verify behavior of isEmpty 
0, Line, //  Ensure we have Table Columns 
0, Line, //  the bar chart 
0, Line, //  file GUID   file options   shortFileName: "YEARFR~1.XLS" 
0, Line, //  Create cells 
0, Line, //  If fractional part is zero, and numerator doesn't have '0', write out   only the integer part and strip the rest. 
0, Line, //    B tAttrIf 
0, Line, // Workbook wbBack = _testDataProvider.writeOutAndReadBack(wb); 
0, Line, //  Apply the font 
0, Line, //  shifting to next piece start 
0, Line, //  Create a new RecordStream and use that 
0, Line, //  optional multiple record occurs more than one time 
0, Line, //  Everything we need is already there 
0, Line, // Set cell style  cell.setCellStyle(style); 
0, Line, //  Check the bytes are the same 
0, Line, //  reserved2 - MUST be zero and MUST be ignored. 
0, Line, //  These are represented as something like     C$1:C$65535 or D$1:F$0 
0, Line, //  isUnicode = true; 
0, Line, // Do not allow an incorrect rotation to be set 
0, Line, // bit9*2^8 + bit8*2^7 + bit7*2^6 + bit6*2^5 + bit5*2^4+ bit3*2^2+ bit2*2^1+ bit1*2^0 
0, Line, //  Font properties (maybe other too???) can have an index of -1   so we check the master for this font index then 
0, Line, //  first char run is 21 long   it doesn't have any styles 
0, Line, //  ftLbsData (currently UnknownSubrecord) 
0, Block, /*  ********** START implementation of DocumentEntry **********  */
0, Line, //  And read it back in 
0, Line, //  was used to create this object. 
0, Line, //  comment should be null but will fail due to bug 
0, Line, //   the docs on their datastructure... 
0, Line, //  HSSF has 32/255 limits as part of the Spec, XSSF has no limit in the spec, but Excel applies a 255 length limit!   more than 255 fail for all 
0, Line, //  Add same border another to same cell, should not create another style 
0, Line, // as unsigned  pad to 16-bit 
0, Line, //  Record how far along the stream we have moved 
0, Line, //  Create a package 
0, Line, //  toString on a date-formatted cell displays dates as dd-MMM-yyyy, which has locale problems with the month 
0, Line, //  already present 
0, Line, //  Seems to be written by MSAccess   contains text "[Microsoft JET Created Table]0021010" 
0, Line, //  We have a compressed sequence 
0, Line, //  The pivot table's data source is on the same sheet in A1:D4 
0, Line, //  set specified timeout if non-zero 
0, Line, //  Columns moved include the first column of the area ref, but not the last column   btw: (aLastColumn > _lastMovedIndex) 
0, Line, //  convert all LabelRecord records to LabelSSTRecord 
0, Line, //  'Page Settings Block' 
0, Line, //  things should be back to normal now 
0, Line, //  and requests to the OS to delete the file will fail. 
0, Line, //  hyperlink starts within current textrun 
0, Line, //  the property types 
0, Line, //  extractor.close(); 
0, Line, //  Figure out the values of the sub properties 
0, Line, //  LittleEndian.putInt(buf, fcOffset, papx.getEndBytes() + fcMin); 
0, Line, //  give up without doing any security critical stuff: 
0, JavaDoc, /*  * Tests lookup functions (VLOOKUP, HLOOKUP, LOOKUP, MATCH) as loaded from a test data spreadsheet.<p> * These tests have been separated from the common function and operator tests because the lookup * functions have more complex test cases and test data setup. * * Tests for bug fixes and specific/tricky behaviour can be found in the corresponding test class * (<tt>TestXxxx</tt>) of the target (<tt>Xxxx</tt>) implementor, where execution can be observed *  more easily.  */
0, Line, //  currently we ignore an eventually center setting 
0, Line, //  The last remaining sheet should always be active+selected 
0, Line, //   fonts from the start and end of the font list 
0, Line, //  Special case for the non-existant 1900 leap year 
0, Line, //  Maximum permitted row number should be 65535. 
0, Line, //  First part of expanded record handling 
0, Line, //  Life is easy when we have no footers, headers or unicode! 
0, Line, //  not sure what is the best value sample-here, only "1" did not work on some platforms... 
0, Line, //  Obsolete 
0, Line, //  Check the contents of the 2nd block 
0, Line, //  fix the usermodel container 
0, Block, /*          * Page 88:         *          * "The plcfhdd, a table whose location and length within the file is         * stored in fib.fcPlcfhdd and fib.cbPlcfhdd, describes where the text         * of each header/footer begins. If there are n headers/footers stored         * in the Word file, the plcfhdd consists of n+2 CP entries. The         * beginning CP of the ith header/footer is the ith CP in the plcfhdd.         * The limit CP (the CP of character 1 position past the end of a         * header/footer) of the ith header/footer is the i+1st CP in the         * plcfhdd. Note: at the limit CP - 1, Word always places a chEop as a         * placeholder which is never displayed as part of the header/footer.         * This allows Word to change an existing header/footer to be empty.         *          * If there are n header/footers, the n+2nd CP entry value is always 1         * greater than the n+1st CP entry value. A paragraph end (ASCII 13) is         * always stored at the file position marked by the n+1st CP value.         *          * The transformation in a full saved file from a header/footer CP to an         * offset from the beginning of a file (fc) is         * fc=fib.fcMin+ccpText+ccpFtn+cp."          */
0, Line, //  then anyway 
0, Line, // <p:ph sz="half" idx="1"/>   anchor is not defined in the shape 
0, Line, // check EscherDggRecord - a workbook-level registry of drawing objects 
0, Line, //  each polygon in the object. 
0, Line, //  Finally, write out the children 
0, Line, //  Visio - not handled yet 
0, Line, //  can't use ZipHelper here, because its in a different module 
0, Line, //  For the 2nd, should give similar answers for   the two methods, differing only in line endings 
0, Line, //  simple cache hit - immediate re-evaluation with no changes 
0, Line, //  Add to the mini stream 
0, Line, //  white 
0, Line, //  tRefN(B1) 
0, Line, //  the created path starts at (x=0, y=0).   this used to scale each path element to the path bounding box, 
0, Line, //  update each shape according to its own additional copy rules 
0, Line, //  Repeat the header 
0, Line, //  User specified shapes are interesting 
0, Line, //  check for internal references (e.g. '#Sheet1!A1') 
0, Line, //  pre-calculate all the sheet sizes and set BOF indexes 
0, Line, //  FOR EACH PasswordByte IN PasswordArray IN REVERSE ORDER 
0, Line, // create a custom data format 
0, Line, //  get a table cell properties element (tcPr) 
0, Line, //  "FG" 
0, Line, // check that EscherDgRecord is updated 
0, Line, //  check CHOOSE() 
0, Line, //  B3 is a master shared formula, C3 and D3 don't have the formula written in their f element.   Instead, the attribute si for a particular cell is used to figure what the formula expression   should be based on the cell's relative location to the master formula, e.g.   B3:        <f t="shared" ref="B3:D3" si="0">B1+B2</f>   C3 and D3: <f t="shared" si="0"/> 
0, Line, //  sprmCRgLid0 
0, Line, //  Decide how big it is 
0, Line, //  a continuation record with 3 bytes of data   one more continuation record with 1 byte of data 
0, Block, /* Cell cell = */
0, Line, //  every element from midIx to highIx was the wrong type   move highIx down to the low end of the mid values 
0, Line, // https://en.wikipedia.org/wiki/Code_page_950 
0, Line, //  Now a style on another workbook 
0, Line, //  Check ":", "@" 
0, Line, //         int field_2_numIdClusters = field_5_fileIdClusters.length + 1; 
0, Line, //  256 bytes required   257 bytes required 
0, Block, /*  Print the name of the property set stream:  */
0, Line, //  Set values 
0, Line, //  Turn each one into a XSSFHyperlink 
0, Line, //  node colors 
0, Line, //  Check contents, they should not contain the text from POI web site after colon! 
0, Line, //  Verify it has empty properties 
0, Line, //  Do nothing, user dont have to know 
0, Line, //  NOSONAR, it's more readable this way   NOSONAR, it's more readable this way 
0, Line, //  see if we have InteractiveInfo in the textrun's records 
0, Line, //  Red + green bg 
0, Line, //  Carry on reading in as normal 
0, Block, /* firstRowToShift */
0, Line, //  font size 24   colour red 
0, Line, //  Iterate over all DB entries. 
0, Block, /*              * If there is a document summry information stream, read it from             * the POI filesystem.              */
0, Line, //  ensure that we create the "build" directory as it might not be existing   in the Sonar Maven runs where we are at a different source directory 
0, Line, //  Sets type to DXA  
0, Line, //  4 sheets, move a sheet from pos 1 to pos 2, i.e. current 2 becomes 1, current 1 becomes pos 2  
0, Line, //  "up to 11 numeric characters, with the decimal point counting as a numeric character" 
0, Line, //  Move onto the next BAT 
0, Line, //  Generate a unique new filename 
0, Line, //  end public interface POIFSConstants; 
0, Line, //  check for color scale 
0, Line, //  setting dash width to null unsets the SolidFill element 
0, Line, //  always an error with 2-D area refs   Note - the type of error changes if the pRowArg is negative 
0, Line, //   Just cut it off!. 
0, Line, //       write out and give back 
0, Block, /* ptgs = */
0, Line, //  New object each time 
0, Line, //  Work out which Pictures aren't referenced by    a \u0001 in the main text   These are \u0008 escher floating ones, ones    found outside the normal text, and who 
0, Line, //  Now get those objects 
0, Line, //  Check the atom 
0, Line, //  1 row is blank.  Write to a another temp file 
0, Line, //  from protected file 
0, Block, /*  Write the section list, i.e. the references to the sections. Each         * entry in the section list consist of the section's class ID and the         * section's offset relative to the beginning of the stream.  */
0, Block, /* box9x9      */
0, Line, //  2048 - main SpContainer id 
0, Line, //  sprmCRgLid1 
0, Line, //  3 shorts + 7 bytes 
0, Line, //  use XWPF instead of HWPF and XSSF instead of HSSF as the file seems to have the wrong extension 
0, Line, //  Populate 
0, Line, //  overwrite the row 
0, Block, /*  char 3   */
0, Line, //  A 32-bit unsigned integer that specifies a level to associate with the graphics state.   The level value can be used by a subsequent EmfPlusRestore record operation to retrieve the graphics state. 
0, Line, //  TODO - introduce MarginBaseRecord 
0, Line, //  Check they're currently right 
0, Line, //  We need to add the records to the SLWT that deals   with Slides. 
0, Line, //  note - dates may not actually span Feb-29, but it gets counted anyway in this case 
0, Line, //  create a new org.apache.poi.poifs.filesystem.Filesystem 
0, Line, //  Add the references to the DBCells in the IndexRecord (one for each block)   Note: The offsets are relative to the Workbook BOF. Assume that this is   0 for now..... 
0, Line, // Dont allow column reordering 
0, Line, //  Do we know what to do with it? 
0, Line, //  Content type manager 
0, Line, // rebuild the _rows map 
0, Line, // top  right 
0, Line, //  Something else inside [] which isn't supported! 
0, Line, // int            pathLength = path.length(); 
0, Line, // wb.dumpDrawingGroupRecords(true);  wb.dumpDrawingGroupRecords(false); 
0, Line, //  end public interface Entry 
0, Line, //  small numbers 
0, Line, //  The x-coordinate of the ending vertex of an arc. 
0, Line, // Check to ensure no other names have the same case-insensitive name at the same scope 
0, Line, //  use a test file with a xml file bigger than 100k (ZipArchiveThresholdInputStream.GRACE_ENTRY_SIZE) 
0, Line, //  assertContents("message.rtf", rtf.getData()); 
0, Line, // link to http://www.lakings.com/ 
0, Line, //  Check font use in cell styles 
0, Line, //  From WithLinks.ppt 
0, Line, //  only geometry sections can have duplicate names   sections can be found in the master too, if there are no attributes here! 
0, Line, //           }          }          break;        } 
0, Line, //  Header - size or type unchanged 
0, Line, //                         final int w = bi.getWidth();                          final int h = bi.getHeight();                            int[] line = new int[w];                            WritableRaster wr = bi.getRaster(); 
0, Line, //  CURRENTLY FAILS with "Sheet0!$A$1:$C$6" 
0, Line, //  0-based 
0, Block, /*  Check if the result is a DocumentSummaryInformation stream, as         * specified.  */
0, Line, //  handle MulRK records 
0, Line, //  important - no formatting data if text is empty 
0, Block, /*  package  */
0, Line, //  ColumnInfo ci for a single column, the target column 
0, Line, //  Skip over the File ID 
0, Line, //  YK: XmlBeans silently replaces all ISO control characters ( < 32) with question marks.   the same rule applies to "not a character" symbols. 
0, Line, //  each FKP must start on a 512 byte page. 
0, Line, //  Load up again, check all links still there 
0, Line, //  Write the POI filesystem to a (temporary) file doc3 and close the latter. 
0, Line, //  A 32-bit unsigned integer that specifies the number of points in the PointData array. 
0, Line, //  large numbers 
0, Line, //  v => contents of a cell 
0, Line, //  legend 
0, Line, //  preserve space for the FileInformationBlock because we will be writing 
0, Line, //  If a table is added after getTable is called it should still be reachable by XSSFWorkbook.getTable 
0, Block, /*  int hSize =  */
0, Line, //  height basis   scale 
0, Line, //  shape width can be smaller that the sum of insets (this was proved by a test file) 
0, Line, //  First slide is 256 / 4 
0, Line, // Test a uncompressed small string that has rich text and extended text 
0, Line, //  sprmPDxcLeft1 
0, Line, //  write out the DocumentProperties. 
0, Line, //  Get the single-byte values by iterating through the Unicode characters.   For each character, if the low byte is not equal to 0, take it.   Otherwise, take the high byte. 
0, Line, // string for hyperlink 
0, Line, //  Now we know the length of the username, 
0, Line, //  must contain at least an empty paragraph 
0, Line, //  As we preserved, should also have a few other streams 
0, Line, //  Ensure we fell off the end 
0, Line, //  all shapes have a theme color="accent1" 
0, Line, //  after clearing all values it also works 
0, Line, //  This one is allowed, even if it's really odd 
0, Line, //  the sheet naming rules are vague on whether unicode characters are allowed   assume they're allowed. 
0, Line, //  row has a single cell by default; grab it 
0, Line, //  expected during normal test 
0, Line, // default format for new cells is General 
0, Line, //  When parsing the BStoreDelay stream, [MS-ODRAW] says that we 
0, Line, //  Check the relations 
0, Line, //  Check the counts now 
0, Line, //  Condition the inclusion of new line characters so as to   avoid an additional, superfluous, new line at the end of 
0, Line, //  Encryption layer is a BIFF8 binary format that can be read by POIFSFileSystem,   used for both HSLF and XSLF 
0, Line, //  Length 4 
0, Line, //  Modify core part 
0, Line, //  For anything else not directly held in as a POIFS directory 
0, Line, //  40: DCOUNT 
0, Line, //  number args converted to text 
0, Line, //  Try constructing two attributes 
0, Line, //  Properties now extends over 2 blocks 
0, Line, //  update table area 
0, Line, //  Check Rule M4.1 
0, Line, //  Simple slideshow, record order matches slide order 
0, Line, //  named ranges and tables can start with underscore or backslash   see https://support.office.com/en-us/article/Define-and-use-names-in-formulas-4d0f13ac-53b7-422e-afd2-abd7ff379c64?ui=en-US&rs=en-US&ad=US#bmsyntax_rules_for_names 
0, Line, //  try add at beginning 
0, Line, //  Excel seems to handle this by accessing past the end of the result vector. 
0, Line, //  write an encrypted workbook to disk, and encrypt any temporary files as well 
0, Line, //  we initialize our fields 
0, Line, //  range2 encloses range1, so replace it with the enclosing one 
0, Line, //  The cubic Bezier curves SHOULD be drawn using the current pen. 
0, Line, //  This causes the error 
0, Line, //  Create a cell and put a value in it. 
0, Line, //  cell has a value 
0, Line, //  Map of Entry instances, keyed by their names 
0, Line, //  Now, read each one in in turn 
0, Line, //  Find the start/end of the group. 
0, Line, // header key  hmf 
0, Line, //  occurs during successful test 
0, Line, //  All finance functions have 3 to 5 args, first 4 are numbers, last is boolean   default for last 2 args are 0.0 and false   Text boolean literals are not valid for the last arg 
0, Line, //  we did not get an exception, so it seems this is a HSSFWorkbook 
0, Line, //  Reset, should go back to only one buffer full read 
0, Line, //  The initial value is set when populating the dictionary 
0, Line, //  Start with an empty set 
0, Line, // I use varParam[0] and newTAP._itcMac interchangably 
0, Line, //  Look in children if we are a container 
0, Line, //  The subrange [19, 299] is expected to be replaced with a EscherAggregate object 
0, Line, //  ??   ??   O8   HEX2DEC   O2 
0, Line, //  Check if part already exist 
0, Line, //  just ensure that the exception is created correctly, even with unknown sids 
0, Line, //  Put back to normal 
0, Line, // Step 3. Substitute the template entry with the generated data 
0, Line, //  If it is already expanded do nothing. 
0, Line, //  Loop over our values, looking for chunk based ones 
0, Line, //  second char run is 17 long 
0, Line, // Get cell one to the right and one down from position, add both to AreaReference and set pivot table location. 
0, Line, //   to the base, and check we can get it back again 
0, Block, /*      * Some Record IDs used by POI as 'milestones' in the record stream      */
0, Line, //  First, check names 
0, Line, //  Can't use literal numbers for column sizes, as    will come out with different values on different    machines based on the fonts available.   So, we use ranges, which are pretty large, but 
0, Line, //  copy properties from last paragraph / textrun or paragraph end marker 
0, Line, //  ---- begin optimization to avoid painting background ---- 
0, Line, //  row was not parseable as an Integer, such as a BigInt   therefore name passes the not-a-cell-reference criteria 
0, Line, // remove a row only if the row has no cell and if the outline level is 0 
0, Line, //  Will show 0 if first 
0, Line, //  set new encryption settings 
0, Line, //  rect : 8 bytes (top, left, bottom, right: integer) 
0, Line, //  51 -> 103 is the next 
0, Line, //  testing 
0, Line, //  Some more cases of removing sheets 
0, Line, //  these IDs duplicate those from table1 and may be cause of https://bz.apache.org/bugzilla/show_bug.cgi?id=62906 
0, Line, //  Raw book reference, without a sheet 
0, Block, /*  1 + 2 + 5 + 9  */
0, Line, //  spanning using overlapping blocks 
0, Line, //  select the last child node only if we need to map to a single cell 
0, Line, //  Solution: set TempFileCreationStrategy to something that the unit test can trigger a deletion" 
0, Line, //  Fetch all font names 
0, Line, //  for tests 
0, Line, //  sprmCFMathPr 
0, Line, //  These are POI-specific error codes   It is desirable to make these (arbitrary) strings look clearly different from any other   value expression that might appear in a formula.  In addition these error strings should   look unlike the standard Excel errors.  Hence tilde ('~') was used. 
0, Line, // Add filter on forth column 
0, Line, // backslashes needed for unicode escape 
0, Line, //  position adjustments 
0, Line, //  Length 8 
0, Line, //  Build splat'd out text version 
0, Line, //  Add one 
0, Line, //  Now both 
0, Line, //  Word Document - OpenXML file format 
0, Line, //  read properties and pictures, with old encryption settings where appropriate  
0, Line, //  Windows 
0, Line, //  A breakpoint in ValueRecordsAggregate.handleMissingSharedFormulaRecord(FormulaRecord)   should get hit during parsing of Sheet1.   If the test spreadsheet is created as directed, this condition should occur.   It is easy to upset the test spreadsheet (for example re-saving will destroy the   peculiar condition we are testing for). 
0, Line, //  Then the rest of the CF Header details 
0, Line, // //// Case 3: Evaluate "Table1[#Totals]" //////// 
0, Line, //  Icons : 3 flags - Column M (all) 
0, Line, //  The y-coordinate of a curve's beginning control point relative to the 
0, Line, //  only set new sheet if there are still some left 
0, Line, //  sprmPDyaAfter 
0, Line, //  only copy direct backgrounds - not backgrounds of master sheet 
0, Line, //  The value MUST be from the UnitType enumeration 
0, Line, //  498 == 0x01F2; 502 == 0x01F6 
0, Line, //  Assign to us 
0, Line, //  SSSlideLayoutAtom stuff 
0, Line, //  unknown / unsupported / corrupted property, skip 
0, Line, // http://en.wikipedia.org/wiki/Future_value 
0, Line, //  reserved must be 0 
0, Line, //             "alterman_security3.pptx", 
0, Line, //  between the beginning control point and ending vertices of the arc. 
0, Line, //  the upx will always start on a word boundary. 
0, Line, //  so that the temporary files created can be disposed up by cleanup()  
0, Line, //  Check we have the right cell 
0, Line, //  sign and exponents same, but fractional bits are different 
0, Line, //  The ToPart property identifies the part of a shape to which another   shape is glued, such as its begin point or endpoint, one of its edges,   or a connection point. The following constants declared by the Visio type   library in member VisToParts show possible return values for the ToPart   property.   Constant Value   visConnectToError -1   visToNone 0   visGuideX 1   visGuideY 2   visWholeShape 3   visGuideIntersect 4   visToAngle 7   visConnectionPoint 100 + row index of connection point 
0, Line, //  Write out our HPFS properties, if we have them 
0, Line, //  TODO Properly detect Ext ones from the xml 
0, Line, //   dictionary to start at 
0, Line, // base ptg 
0, Line, //  Process any existing pictures if we haven't yet 
0, Line, //  Now we have enough information to go on. Create the arc. 
0, Line, //  expected one image 
0, Line, //  Check contents 
0, Line, // group shape 
0, Line, //  Mark any that aren't used as needing zapping 
0, Line, //  to avoid having to iterate all rows/cells in each add/remove of a row or cell 
0, Line, //  this column collapsing bug only occurs when the grouped columns are different widths 
0, Line, //  always init. to non-null just for defensive avoiding NPE 
0, Line, //  A2 will hold our test formulas 
0, Line, //  You're allowed something like dd/mm/yy;[red]dd/mm/yy    which would place dates before 1900/1904 in red 
0, Line, //  100 is our first free one 
0, Line, //  Pad to the end of the block with -1s 
0, Line, //  Save, re-load, re-check 
0, Line, //  First three rows are blank 
0, Line, //  field. This value SHOULD be zero if PenStyle does not specify PS_USERSTYLE. 
0, Line, //  Bingo. Now, where do we store it? 
0, Line, //  first check some cases that should not be a date, also call multiple times to ensure the cache is used 
0, Line, // should be [0.0, 1.0, 4.0, 5.0, 6.0, null, null, null] 
0, Line, //  Document should start with:     0F 00 E8 03 ## ## ## ##       (type 1000 = document, info 00 0f is normal, rest is document length)     01 00 E9 03 28 00 00 00       (type 1001 = document atom, info 00 01 normal, 28 bytes long) 
0, Line, // Test the header 
0, Line, //  TODO - test some specific format strings 
0, Line, //  NotesHeadersFootersContainer 
0, Line, //  Should come out with 10 slides, no notes 
0, Line, //   A: Theme Based, Foreground 
0, Line, // return trailing alone  there may be some subtleties here 
0, Line, //  Cosine Formula: "cos x y" = (x * cos( y )) = value of this guide 
0, Line, //  Don't save modifications 
0, Block, /*  pad values to 4-bytes  */
0, Line, // 		}  		return false;  	} 
0, Line, //  Check to see if name is a named range in the workbook 
0, Line, //  Verify that we have a footnote reference in the first paragraph and not   in the second paragraph. 
0, Line, //         StylesTable table = xlsToAppendWorkbook.getStylesSource();          List<XSSFCellFill> fills = table.getFills(); 
0, Line, //  Ensure the tab index 
0, Block, /*  the scope is workbook */
0, JavaDoc, /*  TODO  */
0, Line, //  final int opacity = (int) ( characterRun.getIco24() & 0xFF000000l )   >>> 24; 
0, Line, //  Name in the wrong format 
0, Line, //  there is one range from 2048 - 2387 
0, Line, //  Check number of paragraphs by counting number of newlines 
0, Line, //  Assign the comment to the cell 
0, Line, // body specifies DDE data item 
0, Line, //  An optional array of 32-bit signed integers that specify the values of the font axes of a 
0, Line, //  Interpolate between the two 
0, Line, //  (null) == (null), (null) < (non-null) 
0, Block, /*          * Read the summary information stream and the document summary         * information stream from the POI filesystem.         *         * Please note that the result consists of SummaryInformation and         * DocumentSummaryInformation instances which are in memory only. To         * make them permanent they have to be written to a POI filesystem         * explicitly (overwriting the former contents). Then the POI filesystem         * should be saved to a file.          */
0, Line, //  Ensure all indicies get updated, then -1 tested 
0, Line, //  A 32-bit floating-point value that contains the limit of the thickness of the join on a mitered corner 
0, Line, //  non-null string not less than empty cell   for completeness   just in case - not a typical possibility 
0, Block, /*  decrement usage counter  */
0, Line, //  Encoded dist for tAttrChoose includes size of jump table, but   countTokensToBeSkipped() does not (it counts whole tokens). 
0, Line, //  missingUnderBits is (0..3) 
0, Line, //  Check that the source file/folder exists. 
0, Line, //  after removing the only active/selected sheet, another should be active/selected in its place 
0, Line, //  Swap them around 
0, Line, //  Verify a few offsets: 0->50 is a stream 
0, Line, //  rId3 is mailto 
0, Line, //  When we find them, print out their IDs 
0, Line, //  If the user has chosen to overlay both rows and columns or just   to expand ONLY the size of the columns, then calculate how to lay   the image out ver one or more rows. 
0, Line, //  Bugs 60858 and 56420 show predicate can be null 
0, Line, //                 logDebug("invoke " + operation + " (nAgs=" + numops + ")"); 
0, Line, //  -- CHANGE the shift to positive once the behaviour of the above has been tested 
0, Line, //  input row 0 
0, Line, //  line cap 
0, Line, //  add a new shape and link OLE & image part 
0, Line, //  A 32-bit unsigned integer that specifies the number of graphics formats contained in this record. 
0, Line, //  Sanity Checking - we're always at least 8+10 bytes long 
0, Line, //  formula: internal quotes become double double, surround with double quotes 
0, Line, //  Partially mergeable: multiple possible merges      A B    1 x x   A1,A2,B1 --> A1:B1,A2 or A1:A2,B1 
0, Line, //  Change on comment on sheet 1, and add another into    sheet 2 
0, Line, //  Now a row only freezepane 
0, Line, //  find forward distance to first RowRecord 
0, Line, //  Bingo 
0, Line, //  Arrange 
0, Line, // creating a HWPF document 
0, Line, //  Well the format runs are equal as well!, better check the ExtRst data 
0, Line, //  supporting Extended chars 
0, Line, //  separate old version of Xerces not found => use the builtin way of setting the property 
0, Line, //  This is an unsigned byte read from the stream 
0, Block, /*  In an excel generated array formula, the formula property might be set, but the string is empty in slave cells  */
0, Line, //  Write out and read back in again, ready for    the next run of the test 
0, Line, //  Can this byte start a new rawCode, or does 
0, Line, //  format   forecolor index 
0, Line, //  priorities start at 1, if it is less, it is undefined, use definition order in caller 
0, Line, //  use extension instead of enum name, because of "jpeg" 
0, Line, //  try to parse the cell value as a double and return it  
0, Line, //  useful offsets 
0, Line, //  find the posistion of the Add-In SupBookRecord in the workbook stream, 
0, Line, //  "A1=1" should return false   "A1=\"1\"" should return true 
0, Line, //  Default $ in a different locale 
0, Block, /*  **********  END  implementation of POIFSReaderListener **********  */
0, Line, //  Attr 
0, Line, //  Check the header 
0, Line, //  Now check it's the right data 
0, Line, //  eek, undocumented text type 
0, Line, //  Ensure the minimum number of columns 
0, Line, //  some files that are broken, eg Word 95, ... 
0, Line, //  no digits at end of str 
0, Line, //     public final static short       OBJECT_TYPE_BUTTON             = 7; 
0, Line, //  no need to change anything if position is correct 
0, Line, //  and the 1 byte size of the grpprl. 
0, Line, //  Attr   CHOOSE 
0, Line, //  namespacePrefixes.put(XML_DIGSIG_NS, ""); 
0, Line, //  By String 
0, Line, //  its OK to not serialize empty page break records 
0, Line, //  Alternatively, a future implementation of evaluate could return #NAME? error to align behavior with Excel   assertEquals(ErrorEval.NAME_INVALID, ErrorEval.valueOf(evaluator.evaluate(cell2).getErrorValue())); 
0, Line, //  a red bordered box in the background, to show/verify the table dimensions 
0, Line, //  /p:sldMaster/p:txStyles/p:bodyStyle/a:lvl1pPr 
0, Line, //  '-' means empty: 
0, Line, //  These are bytes as looked up in the dictionary   It needs to be signed, as it'll get passed on to 
0, Line, //  setup first knots/weights/control point 
0, Line, //  the full size of the bmp 
0, Line, //  Row 3 -> 19 
0, Line, //  A 32-bit signed integer that specifies the saved state to restore relative to   the current state. This value MUST be negative; –1 represents the state that was most   recently saved on the stack, –2 the one before that, etc. 
0, Line, //  The 14th block is the FAT 
0, Line, //  cell will no longer be a formula cell 
0, Line, //  flatten multiple nested RefListEval 
0, Line, //  Check the flags 
0, Line, //  optional record missing 
0, Block, /*  final  */
0, Line, //  Consider extending by a bit more than requested 
0, Line, //  Regular MAPI Properties, normally on the message 
0, Block, /*  generating parameter instances  */
0, Line, //  Create, and change 
0, Line, //  Create sub workbook if required 
0, Line, //  prepare CSS classes for later usage 
0, Line, //  All errors get translated to #REF! 
0, Line, //  Open it from that temp file 
0, Line, //  But also check that another wb isn't 
0, Line, //  Tidy 
0, Line, //  Records that are interesting 
0, Line, //  sprmPDyaAbs 
0, Line, //  Return the result as a StringEval. 
0, Line, // Just one text box here 
0, Line, //  TODO: use parameter 
0, Line, //  ANSI_FIXED_FONT - A fixed-width font   Charset: ANSI_CHARSET   PitchAndFamily: FF_DONTCARE + FIXED_PITCH 
0, Line, //  because the dev kit shows the masks for it as 2 byte fields 
0, Line, //  make sure the changes to the names stick after writing out the workbook 
0, Line, // Create a new sheet then search for the sheet and make sure that the  sheetPane shows it. 
0, Line, //  policy.setCopyCellValue(true).setCopyCellStyle(true) 
0, Line, //  end draw thick black border 
0, Line, //  Special number NaN /Infinity   Normally one would not create HybridDecimal objects from these values 
0, Line, //  An invalid BorderStyle constant 
0, Line, //  dark red 
0, Line, //  each table row of the document contains data for two functions 
0, Line, //  Excel does not resolve it to a boolean. 
0, Line, //  cryptoapi (PPT only supports cryptoapi...) 
0, Line, //  A 32-bit unsigned integer that MUST be the same as Size and MUST be the   last field of the record and hence the metafile. 
0, Line, //  A 32-bit unsigned integer that specifies how to use the Color value to determine the area for   the flood fill operation. The value MUST be in the FloodFill enumeration 
0, Line, //  size of the canvas in points 
0, Line, // jmh need to do colour 
0, Line, // PageSettingsBlock 
0, Line, //  A 32-bit unsigned integer that defines the x-coordinate of the point. 
0, Line, // simulate correct answer 
0, Line, //  adding one here because 0 indicates a global named region; doesn't make sense for print areas 
0, Line, //  Set the levels onto it 
0, Line, //  default match_type is 1.0 
0, Line, //  no System.exit here, as we also run in junit tests! 
0, Line, //  Read and ensure things are where they should be 
0, Line, //  xfrm is not set, the query is delegated to the slide master 
0, Line, //  Skip over any padding 
0, Line, //  roll over all sub task elements in one loop.  This allows the   ordering of the sub elements to be considered.  
0, Line, //  The first knot of the NURBS. 
0, Line, //  Ask for it as a Java date, and have it converted 
0, Line, //  bitfields in alignment options 
0, Line, // xml part of chart in document 
0, Line, //  quoted identifier - can't concatenate anything more 
0, Line, //  sheet. 
0, Block, /*  Write the POI filesystem back to the original file. Please note that             * in production code you should take care when write directly to the             * origin, to make sure you don't loose things on error  */
0, Line, //  New cell references are also valid. 
0, Line, //  cell remains a formula cell, but the cached value is changed 
0, Line, //  github-77: mutable static fields could be changed by malicious code or by accident.   These byte arrays should be package protected. 
0, Line, //  trailing \n causes must be preserved 
0, Line, //  Couldn't be found 
0, Line, //  index < limit -- insert into the middle 
0, Line, //  // Do for each affected part 
0, Line, //  Check for the chinese only text line 
0, Line, //  iterate backwards due to possible calls to ctWorksheet.removeConditionalFormatting(j) 
0, Line, //  total height of all rows assessed so far. 
0, Line, //  else - string cannot be converted to boolean 
0, Line, //  expect RangePtg, but perhaps also UnionPtg, IntersectionPtg etc 
0, Line, //  add OLE part metadata to sheet 
0, Line, //  check for errors in predicate and return immediately using this error code 
0, Line, //  shiftedRange should not be null. If shiftedRange is null, that means   that a hyperlink wasn't deleted at the beginning of shiftRows when   identifying rows that should be removed because they will be overwritten 
0, Line, //  A string of Length Unicode characters that contains the name of the font family. 
0, Line, //  https://msdn.microsoft.com/en-us/library/dd911027(v=office.12).aspx 
0, Line, //  note behaviour changes here 
0, Line, //  check if the password has been changed 
0, Line, //  else - top area row has been replaced - both area top and bottom may move now 
0, Line, //  ooxml does have a separate cell type of 'blank'.  A blank cell gets encoded as   (either not present or) a numeric cell with no value set.   The formula evaluator (and perhaps other clients of this interface) needs to   distinguish blank values which sometimes get translated into zero and sometimes   empty string, depending on context 
0, Line, //  Wind on by 4 bytes per sheet found 
0, Line, //  ensure file-handle release 
0, Line, //             fileOut.close();          } 
0, Line, //  test if second sheet is set up 
0, Line, //  A WMF RectL object. It is not used and MUST be ignored on receipt. 
0, Line, //  If they requested spacers, with "_",    remove those as we don't do spacing   If they requested full-column-width    padding, with "*", remove those too 
0, Line, //  NOTE - only occurs if a comment is placed in A1 first 
0, Line, //  Now look for UserEditAtoms 
0, Line, //  "A1=1" should return false 
0, Line, //  apr 
0, Line, //  Check we get an error with a made up one 
0, Line, //  199: DCOUNTA 
0, Line, //  This array MUST exist if and only if the wListType field is not equal to 0. 
0, Line, // short chsDiff = (short)((param & 0xff0000) >>> 16); 
0, Line, // sortTopLeftToBottomRight swapped firstColumn and lastColumn because firstColumn is absolute 
0, Line, //  Column 'A' 
0, Line, //  Default + TNR + Courier 
0, Line, //  revert the change 
0, Line, //  Remove the character too 
0, Line, //  dummy function that returns NA   don't care about the implementation, we are not interested in evaluation   and this method will never be called 
0, Line, //  With 
0, Line, //  A3 
0, Line, //  get the rgdxaCenters 
0, Line, //  from https://support.office.com/en-us/article/DAYS360-function-B9A509FD-49EF-407E-94DF-0CBDA5718C2A 
0, Line, //  Non-index based, check if default is free 
0, Line, //  Building the info block   First 20 bits = offset number = slide ID (persistIdFld, i.e. first slide ID of a continuous group)   Remaining 12 bits = offset count = 1 (cntPersistFld, i.e. continuous entries in a group) 
0, Line, //  the cipher output stream pads the data, therefore we can't reuse the ZipEntry with set sizes   as those will be validated upon close() 
0, Line, // set cell style 
0, Line, //  row or overlay the image across a series of rows. 
0, Line, //  display vertical scrollbar 
0, Line, //  If no properties part has been found then we create one 
0, Line, //  Re-serialize and check again 
0, Line, //  Check if font belongs to workbook 
0, Line, //  in XSLF, slidenumber and date shapes aren't marked as placeholders opposed to HSLF 
0, Line, //  Grab contents 
0, Line, //  update Table 
0, Line, //  If RegionMode is RGN_COPY, this data can be omitted and the clip region 
0, Line, //  Create a spreadsheet with some formula errors in it 
0, Line, //  stay compatible with the range used by XSSF, map from ]90..180] to ]0..-90]   we actually don't need to do anything here as the internal value is stored in [0-180] anyway! 
0, Line, //  char have some space 
0, Line, //  A5 
0, Line, //  Take a look at the embedded objects 
0, Line, //  positive value means percentage spacing of the height of the first line, e.g.   the higher the first line, the bigger the space before the paragraph 
0, Line, //  Create cell style with ALIGN_CENTER_SELECTION 
0, Block, /* 			 * "A ToggleOperand value that specifies whether the text is excluded from the proofing analysis. By default, text is not excluded from the proofing analysis."			 * 			 * Word (.doc) Binary File Format. Copyright (c) 2012 Microsoft			 * Corporation. Released: October 8, 2012			  */
0, Line, //  Must be at least 24 bytes long 
0, Line, //  Move forward 
0, Line, //  Some German umlauts with uppercase first letter is not changed 
0, Line, //  used only for KEY comparison (HSSFRow) 
0, Line, //  Check to see if the font metric file was specified   as a system property 
0, Line, //  header can be more than 256 bytes 
0, Line, //  includes all data and header/footer rows 
0, Line, // count of body objects 
0, Line, //  application/vnd.openxmlformats-officedocument.wordprocessingml.document 
0, Line, //  A 32-bit value that MUST be 0x00000000 and MUST be ignored. 
0, Line, //  sometimes we hold the stream here and thus need to ensure it is closed at some point 
0, Line, //  Get the last viewed slide ID 
0, Line, //  An optional 32-bit floating-point value that specifies the distance from the start of a line to the   start of the first space in a dashed line pattern. This field MUST be present if the   PenDataDashedLineOffset flag is set in the PenDataFlags field of the EmfPlusPenData object. 
0, Block, /*  Initialize the "classID" field.  */
0, Line, //  SignedSignatureProperties 
0, Line, //  Set line.separator for bug61182   System.setProperty("line.separator", "\n"); 
0, Line, // cached result of a formula 
0, Line, //  How far up to look 
0, Line, // we must remember the position of the continue record. 
0, Line, //  Check in Content-ID field 
0, Line, //  the cell address iterator iterates in row major order 
0, Line, //  intended to crash after reading 10000 bytes 
0, Block, /*          * N.B. no need to synchronize this because: - we don't care if the buffer is created multiple times (the data         * is ignored) - we always use the same size buffer, so if it it is recreated it will still be OK (if the buffer         * size were variable, we would need to synch. to ensure some other thread did not create a smaller one)          */
0, Line, // level  length of the path ) 
0, Line, //  " -> " + papx.getEnd()); 
0, Line, //  Append this run to the paragraph.  
0, Line, //  This calcualtion of Precision does not always provide results within   Allowed Error. It compensates for loss of significant digits that occurs. 
0, Line, //  make sure special reg-ex chars are treated like normal chars 
0, Line, //  Longer link at 10 
0, Line, // simulate the bad padding at the end of the workbook stream in attachment 23483 of bug 46987 
0, Line, //  Serialise to bytes, then grab the right ones out 
0, Line, // bottom 
0, Line, //  Cells must contain at least an empty paragraph 
0, Line, //  Examine one of the paragraphs is present in all 3 formats, surrounded by markup tags 
0, Line, //  Check gone so far 
0, Line, //  allocate the buffer on the heap if we cannot map the data in directly 
0, Line, //  Give up and return a generic one 
0, Line, // The relationship Id references the part containing the drawingML definitions. 
0, Line, //  With a cell that's the primary one of a merged region, we get that cell 
0, Line, //         checkRecordsTogether(records, workbookRecords); 
0, Line, //  avoid zip bomb detection 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#setEmptyCellAllowed(boolean)      */
0, Line, //  Formula result is a string   This is stored in the next record 
0, Line, //  check for text paragraph modifications 
0, Line, //  The first section has 5 paragraphs 
0, Line, //  Might be better to separate out the n p and z formats, falling back to p when n and z are not set.   That however would require other code to be re factored.   String[] formatBits = formatStrIn.split(";");   int i = cellValue > 0.0 ? 0 : cellValue < 0.0 ? 1 : 2;    String formatStr = (i < formatBits.length) ? formatBits[i] : formatBits[0]; 
0, Line, //             FileOutputStream fileOut = new FileOutputStream("/tmp/bug48495.xlsx"); 
0, Line, //  by setting the maximum allowed ratio of miter length to line width. 
0, Line, //  Need 4 paragraph styles 
0, Line, //  Then the other 
0, Line, //  read in the table stream. 
0, Line, //  Usually (result === cce.getValue())   But sometimes: (result==ErrorEval.CIRCULAR_REF_ERROR, cce.getValue()==null)   When circular references are detected, the cache entry is only updated for 
0, Line, //  Now check if it's a container or not 
0, Line, // Test low cell bound 
0, Line, //  Evaluate and test 
0, Line, //  application/vnd.ms-excel 
0, Line, //  this sometimes causes exceptions 
0, Line, //  actual data from file saved by Excel 2007 
0, Line, //   there doesn't seem to be any use of that in Outlook 
0, Line, //  TODO: Add this reference to each slide as well 
0, Line, // make it the color at palette index 0xf (white) 
0, Line, //  Write it into a temp output array 
0, Line, //  set a positive indent of a 0.5 inch. This means "First Line" indentation:   |<---  indent -->|Here goes first line of the text   Here go other lines (second and subsequent) 
0, Line, //  digit in first pos   plain underscore OK   underscores and digits OK 
0, Line, //  first ask the context color and if not found, ask the actual color bean 
0, Line, //  Do we need to go up a directory or two from   the source to get here?   (If it's all the way up, then don't bother!) 
0, Line, // protect objs&scenarios(normal) 
0, Line, //  formula cells always have a value. If the cell is blank (either initially or after removing an 
0, Line, //  One of the spline's knots (other than the last one or the first two). 
0, Line, //  the custom line cap is based. 
0, Line, //  now hPos >= h, so end row = r, now figure offset 
0, Block, /*              * A 32-bit unsigned integer that specifies the background mode             * and MUST be in the BackgroundMode (section 2.1.4) enumeration              */
0, Block, /*              * move the cursor to the previous element until a) the next             * paragraph is found or b) all elements have been passed              */
0, Line, //  Do we have a definition for this font with just the name? 
0, Line, //  Write out our header 
0, Block, /*      * Insert a new CTCol at position 0 into cols, setting min=min, max=max and     * copying all the colsWithAttributes array cols attributes into newCol      */
0, Line, //  Now copy the contents to the stream 
0, Line, //  strLen 2   16 bytes for 2 format runs 
0, Line, //  Sometimes there's some cruft at the end 
0, Line, //  update formulas 
0, Line, //  Simple 
0, Line, //  non-Javadoc: When possible, code should be implemented in the ColumnShifter abstract class to avoid duplication with   {@link org.apache.poi.hssf.usermodel.helpers.HSSFColumnShifter} 
0, Line, //  implemented both by a cfRule "text" attribute and a formula.  Use the formula. 
0, Line, //  Required for clone methods 
0, Block, /*  deliberately avoiding this one    TestUnfixedBugs.class, */
0, Line, // if part is already committed then return 
0, Line, //  verify proper behavior with non-zero offset 
0, Line, //  Now start with one with 3 entries 
0, Line, // //// Case 7: Evaluate "Table1[#Totals]" //////// 
0, Line, //  Bump down by one, so still points at the same sheet 
0, Line, // If number < -512 or if number > 512, this function returns the #NUM! error value. 
0, Line, //  ... and to add its relationship ... 
0, JavaDoc, /*      * Add the \1OLE marker entry, which is not the Ole10Native entry.     * Beside this "\u0001Ole" record there were several other records, e.g. CompObj,       * OlePresXXX, but it seems, that they aren't necessary      */
0, Block, /*  Width is determined by content.  */
0, Line, //  Some workbooks have no shared strings table. 
0, Line, //  now check read/write mode 
0, Line, //  00none/01super/02sub   00none/01single/02double/21singleaccounting/22doubleaccounting   ?? defined by windows api logfont structure?   ?? defined by windows api logfont structure?   must be 0 
0, Line, // get default font and check against default value 
0, Line, //  check if the percentage value is scaled 
0, Line, //  else - no problems so pop current frame 
0, Line, //  Figure out our block size 
0, Line, //  Should be 19 + length + 8 + 4 big 
0, Line, //  Store it 
0, Line, //  1) corrupted xlsx (unreadable data in the first row of a shifted group) already comes about 
0, Line, //  also tell the LinkTable about the removed sheet  index hasn't change in the linktable 
0, Line, //  NOSONAR 
0, Line, //  Have we gone over the mini stream limit yet? 
0, Line, //  When it matches:     Sets the font colour to dark green     Sets the background colour to lighter green 
0, Line, // Set the rows to the correct size 
0, Line, // 	              double delta = Math.abs(expValue.getNumericCellValue()-actValue.getNumberValue());  	              double pctExpValue = Math.abs(0.00001*expValue.getNumericCellValue());  	              assertTrue(msg, delta <= pctExpValue); 
0, Line, //     assertFalse( DateUtil.isADateFormat(formatId, formats[i]) ); 
0, Line, //  sections 
0, Block, /*  Create the tree UI element.  */
0, Line, //  check content of entire textbox 
0, Line, //  Set table width to 6.5 inches in 1440ths of a point 
0, Line, //  The value should now be 3 
0, Line, //  unused3 - Undefined and MUST be ignored.   reserved1 - MUST be zero and MUST be ignored. 
0, Line, //  Rename sheet-scoped name to "name2", check everything is updated properly 
0, Line, //  TODO: apply emf transform 
0, Line, //  but bigger errors are a concern 
0, Line, //  Check them 
0, Line, //  End of Normal 
0, Line, //  Copy the style 
0, Line, //  This code relies on the padding bytes not starting with BOFRecord.sid 
0, Line, //  Note: don't change the code here, it is required for Eclipse to compile the code 
0, Line, //  Grab the pointer to the trailer 
0, Line, //  no-arg constructor is private because of undefined super call with locale 
0, Line, // String strippedFormatStr = formatStr.replaceAll("\\\\ ", " ").replaceAll("\\\\.", "").replaceAll("\"[^\"]*\"", " ").replaceAll("\\?", "#"); 
0, Line, //  verify behavior of getParent 
0, Line, //  remove the comment cell ref from the list if we're about to handle it alongside the cell content 
0, Line, //  Between the start and 0x200 we have    CHNKINK(space) + 24 bytes    0x1800    TEXT + 6 bytes    TEXT + 8 bytes    0x1800    STSH + 6 bytes    STSH + 8 bytes    0x1800    STSH + 6 bytes    STSH + 8 bytes   but towards 0x200 the pattern may    break down a little bit 
0, Line, //  Note - the standard java type conversion from double to int truncates toward zero.   but Math.floor() truncates toward negative infinity 
0, Line, // Set sources and references 
0, Line, //  supersubscript   underline, family 
0, Line, //  Process all body elements 
0, Line, //  Try both SMTP and EX files for recipient 
0, Line, //  If the third row is set to repeat, but not the second,   isRepeatHeader should report false because Word will 
0, Line, //  Look out outline details of end 
0, Line, //  A 32-bit unsigned integer that specifies the number of rectangles in the RectData field. 
0, Line, //  (Don't remove the records though) 
0, Line, //    Geometry   
0, Line, // for strict parsing; confirm that firstRow==lastRow and firstCol==colLats (2.4.28) 
0, Line, //  Then we have the indentLevel field if it's a paragraph collection 
0, Line, //  Have the evaluation done, with exceptions 
0, Line, //  yellow 
0, Line, //  Forth is left aligned + normal line spacing (despite differing font) 
0, Line, // Continue Record overhead 
0, Line, //  case-sensitive 
0, Line, // // ContentHandler methods //// 
0, Block, /* 		 * According to interface, 0.0 should be returned for		 * uninitialized double properties.		  */
0, Line, //  Fetching the array is quicker than working on the new style    list, assuming we need to read many of them (which we often do),    and assuming we're not making many changes (which we're not) 
0, Line, //  skip reserved 
0, Line, //  TODO Add CF Ex, and remove from UnknownRecord  
0, Line, //  Set the padding around text in the cells to 1/10th of an inch 
0, Line, //  Bug 51448 reported that  Evaluation Cache got messed up after 256 sheets 
0, Line, //   the form __<name>_<id><type> 
0, Line, //  Update the cell styles to point at the  
0, Line, //  If the part list is null, we parse the package to retrieve all parts. 
0, Line, // Special handling for when there's only an ascii string and a REFERENCED_REGISTERED  record that follows.  See https://github.com/decalage2/oletools/blob/master/oletools/olevba.py#L1516  and https://github.com/decalage2/oletools/pull/135 from (@c1fe) 
0, Block, /*  Cipher feedback chaining (CFB), with an 8-bit window  */
0, Line, //  Check text properties first 
0, Block, /*  The document does not have custom properties.  */
0, Line, //  workbook can be null in unit tests 
0, Line, //  Then there are 3 one block ones 
0, Line, //  Out of data, can't be any more properties to go   remember the mask and return 
0, Line, // individual column 
0, Line, //  note - values like "A$1:$C$20" don't get this far  
0, Line, // paint the border 
0, Line, //  see http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4796385 
0, Line, //  various cases with two ranges 
0, Line, //  Work up until we find a unique number (there could be gaps etc) 
0, Line, //  System.err.println("Section " + x + " is now " + sepx.getStart()   + " -> " + sepx.getEnd()); 
0, Line, //  Open a new copy of it 
0, Line, // FROM MS http://office.microsoft.com/en-us/excel-help/rate-HP005209232.aspx  Bet accuracy with 128  1.0e-8 
0, Line, //  test same functions ignoring hidden rows over a copy of the same data 
0, Line, //  added images have indexes 0,1,2....19 
0, Line, //  Returns #NUM! because the number and the multiple have different signs 
0, Line, // check for anything from rows before 
0, Line, //  Biff 2   Biff 3+ 
0, Line, // Setting its name 
0, Line, // reset to 0 for length calculation 
0, Block, /*          * Listed fields won't be treat as UnhandledDataStructure. For all other         * fields FIBFieldHandler will load it content into         * UnhandledDataStructure and save them on save.          */
0, Line, //  perform the same checks with LocalDateTime 
0, Line, //  Add it, if it doesn't exist 
0, JavaDoc, /*  * Tests that Comment2000 works properly. * TODO: Test Comment200Atom within * * @author Nick Burch (nick at torchbox dot com)  */
0, Line, //  Now, handle the other aspects like  
0, Line, // test for proper char offset conversions 
0, Line, //  Taken from bugzilla attachment 24661 (offset 0x1E73) 
0, Line, //  Mini Fat   Mini Stream   Main Stream 
0, Line, //  0 -> string   1 -> num   2 missing   3 missing   4 -> blank 
0, Line, //  else - columns have moved completely outside the area ref,   or still remain completely within the area ref 
0, Line, //  Save and re-load, without having touched the properties yet 
0, Line, //  3 @ 5 
0, Line, //  Sheet1 
0, Line, //  sprmPJc80  
0, Line, //  Now do the alternate call, which zaps the formulas 
0, Line, //  functions that are available in Excel 2007+ have a prefix _xlfn.   if you save such a .xlsx workbook as .xls 
0, Line, //  6 isVolatile 
0, Line, //  A 32-bit unsigned integer that specifies the number of palette entries. 
0, Line, //  all other operators don't need second arg 
0, Line, //  107 -> 154 is the next 
0, Line, //   consider converting all these (ptg instanceof XxxPtg) expressions to (ptg.getClass() == XxxPtg.class) 
0, Line, //  If it has children, walk them 
0, Line, //  Try to evaluate everything 
0, Line, //  if the sheet being cloned has a drawing then remember it and re-create it too 
0, Line, //  Copy in the header 
0, Line, //  confirm results 
0, Line, //  Throws exception here 
0, Line, // one row above destHeaderRow  one row below destRow3 
0, Line, //  Different styles in one paragraph 
0, Line, //  Inline string outer tag 
0, Line, //  Check the english bits 
0, Line, //  Now the result lines up like it is supposed to with the specials' indexes 
0, Line, //  Where each style has ended up, and if we need to 
0, Line, //  leap year 
0, Block, /*  ********** START extension of Entry **********  */
0, Line, //  NOTE could also throw a NullPointerException() if desired 
0, Line, // 215: DBCS (JIS in BIFF3) 
0, Line, //  Fix the line ending 
0, Line, //  Now load it and check 
0, Line, //  Add past 10 
0, Line, //  the BOFRecord can represent either the beginning of a sheet or   the workbook 
0, Line, // set page numbers in the footer 
0, Line, //  At this point start and end cell reference are cached 
0, Line, //  cData 
0, Line, // try to parse the BrtBundleSh  if there's an exception, catch it and  try to figure out if this is one of the old beta-created xlsb files  or if this is a general exception 
0, Line, //                                 // TODO: use clamp color here 
0, Line, //  E:F,9:12 
0, Line, //  An optional, 32-bit unsigned integer that identifies the type of comment record.   See the preceding table for descriptions of these record types.   Valid comment identifier values are listed in the following table.     If this field contains any other value, the comment record MUST be an EMR_COMMENT record 
0, Line, //  2 byte fields   4 short fields 
0, Line, //  between the beginning and ending vertices of the arc. 
0, Line, // Handle the special AUTOMATIC case 
0, Line, //  string. This value MUST be composed of DriverStringOptions flags 
0, Line, //  32-bit unsigned integer that specifies the value in the LineJoin enumeration that specifies how to   join two lines that are drawn by the same pen and whose ends meet. At the intersection of the two 
0, Line, //  initialize our streams for writing. 
0, Line, //  Check that the last few records are as we expect 
0, Line, //  Write out our type 
0, Line, //  verify the picture that we read back in 
0, Block, /*  only for agile encryption  */
0, Line, //  numeric value cell 
0, Line, //  but the cloned sheet's password should remain unchanged 
0, Line, //  Check again on the word one 
0, Line, // create a sheet for each month 
0, Line, //  Implementation Notes List:   --> In this third stage, the reversed byte order legacy hash from the second stage shall 
0, Line, //  Write and read back 
0, Line, //  Decode the encoded character 
0, Line, //  Should match despite time-zone 
0, Block, /*  HSSFCellStyle style = */
0, Line, //  Of course, named range names cannot have '$' 
0, Line, //  Equivalent to 0 <= CellReference.convertColStringToIndex(colStr) <= ssVersion.getLastColumnIndex() 
0, Line, // not necessarily set 
0, Line, //  do initial read to increment the read index beyond zero 
0, Line, //  Rows being moved completely enclose the area ref.   - move the area ref along with the rows regardless of destination 
0, Line, //  Validate the resizeBehaviour parameter. 
0, Line, // Sets the pivotTableDefinition tag 
0, Line, //  do not auto delete the title 
0, Line, //  attempt to add conditional formatting 
0, Line, //  Sanity Checking - including whole header, so treat    length as based of 0, not 8 (including header size based) 
0, Line, //  removeArrayFormula should return the same cells as setArrayFormula 
0, Line, //  A 32-bit unsigned integer that specifies the index of the logical font object   in the EMF Object Table 
0, Line, //  Check that after close we can no longer read 
0, Line, // make sure we return null for that instead of throwing OutOfBounds 
0, Line, // Test 2D and 3D Ref Ptgs with absolute row (Ptg row number shouldn't change) 
0, Line, //  otherwise, this value MUST be ignored. 
0, Line, // this content appears only in the glossary document  once we add processing for this, we can change this to contains 
0, Line, //  First, check for OOXML 
0, Line, //  keys are DocumentDescriptors, values are byte[]s 
0, Line, //  4 ints 
0, Line, //  Write out the children 
0, Line, //  Check we found all the conditional formatting rules we should have 
0, Line, //  We're looking for a EscherOptRecord 
0, Line, //  change existing numeric cell value 
0, Line, //  check for default result : excel implementation for 0,0   is different to Math Common. 
0, Line, //  Now change a value that should no longer affect B2 
0, Line, //  overlie. 
0, Line, //  Get two more, unchanged 
0, Line, //  only for digital signatures 
0, Line, //  Check things are as expected 
0, Line, //  boolean isStream = StreamDescriptorEntry.flagStream.isSet(entry.flags); 
0, Line, //  Close it 
0, Line, //  the source is still a valid zip archive.   prior to the fix this used to throw NotOfficeXmlFileException("archive is not a ZIP archive") 
0, Line, //  needed here due to calls to findFirstRecordLocBySid before we're done 
0, Line, //  bookmarks 
0, Line, //  Check they start as we expect 
0, Line, //  An 8-bit unsigned integer that defines the number of adjacent color bits on  
0, Line, //  Icons : 3 arrows - Column O 
0, Line, // setting the same border multiple times should not change borderId 
0, Line, //  Constants from MS-OVBA: https://msdn.microsoft.com/en-us/library/office/cc313094(v=office.12).aspx 
0, Line, //  test document write protection with password 
0, Line, //     /**       * Constructs an escher graphics object.       *       * @param escherGroup           The escher group to write the graphics calls into.       * @param workbook              The workbook we are using.       * @param forecolor             The default foreground color.       */      public EscherGraphics( HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor)      {          this(escherGroup, workbook, forecolor, 1.0f);      } 
0, Line, //  ignore anything else 
0, Line, //  Change sheet 0 to be very hidden, and re-load 
0, Line, // check that NamePtg refers to the correct NameRecord 
0, Line, //  Single chart, two sheets 
0, Line, // initialize the supeclass with a blank worksheet 
0, Line, //  See page 681 
0, Line, //  unexpected error 
0, Line, //  Try each cell individually 
0, Line, //         assertEquals(32, rec.field_1_stream_id_offset); 
0, Line, //  However, all BATs can contain 128/1024 blocks 
0, Line, //  NOTE: XWPFDocument.createFootnote() delegates directly         to XWPFFootnotes.createFootnote() so this tests         both creation of new XWPFFootnotes in document         and XWPFFootnotes.createFootnote(); 
0, Line, // set a thin border 
0, Line, //  empty row 
0, Line, //  set the bit that specifies that the default settings for the row height have been changed. 
0, Line, //  normalize angle, in case it's < -360 or > 360 degrees 
0, Line, //  Now decompress it again 
0, Line, //  If the arrow cap is not filled, only the outline is drawn. 
0, Line, //  See how long it is. If it's under 28 bytes long, we can't 
0, Line, //  A 32-bit unsigned integer that specifies the size, in bytes, of the EnhancedMetafileData field. 
0, Line, //  If target URI is empty 
0, Line, // byte hpsPos = (byte)((param & 0xff0000) >>> 8); 
0, Line, //  Use the first stroke to create an outline of the shape 
0, Line, //  if a hslf cell is merged, it won't appear in the cell matrix, i.e. it doesn't exist   therefore this is always false  
0, Line, //  Reference to a single cell in a different sheet, which needs quoting 
0, Line, //  POI is not thread-safe - so we can switch to unsynchronized xmlbeans mode - see #61350   Update: disabled again for now as it caused strange NPEs and other problems   when reading properties in separate workbooks in multiple threads   DEFAULT_XML_OPTIONS.setUnsynchronized(); 
0, Block, /*          * plcfsed (section table) Written immediately after the previously         * recorded table. Recorded in all Word documents         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 25 of 210          */
0, Line, //  Only last column should move 
0, Line, //  so we use something more reliable 
0, Line, //  contains a DIB. 
0, Line, //  Finally, we have a series of lengths + hyperlinks 
0, Line, //  just check that we do not throw Exception 
0, Line, //  The assertEquals() passes with 1-part format 
0, Line, //  save the result as new data 
0, Line, //  From DXA to AUTO: 
0, Line, //  note - same results when criteria is a string that parses as the number with the same value 
0, Block, /*         The following cases are tested (copied from FormulaParser.parseStructuredReference)           1 Table1[col]           2 Table1[[#Totals],[col]]           3 Table1[#Totals]           4 Table1[#All]           5 Table1[#Data]           6 Table1[#Headers]           7 Table1[#Totals]           8 Table1[#This Row]           9 Table1[[#All],[col]]          10 Table1[[#Headers],[col]]          11 Table1[[#Totals],[col]]          12 Table1[[#All],[col1]:[col2]]          13 Table1[[#Data],[col1]:[col2]]          14 Table1[[#Headers],[col1]:[col2]]          15 Table1[[#Totals],[col1]:[col2]]          16 Table1[[#Headers],[#Data],[col2]]          17 Table1[[#This Row], [col1]]          18 Table1[ [col1]:[col2] ]         */
0, Line, //  Has some data 
0, Line, //  area is moved up => overwritten area is [startRow + n, startRow + n + movedRows] 
0, Line, //  Excel prefers to encode 'SUM()' as a tAttr token, but this evaluator   expects the equivalent function token 
0, Block, /*  Read the names of the origin and destination POI filesystems.  */
0, Line, //  Font is Calibri 
0, Line, //  convenient access to namepace 
0, Line, //  Without a password, can't be read 
0, Line, // Initialise the Panel 
0, Line, //  In case B, all 4 sets have different alignments 
0, Line, //  '?' = multiple values 
0, Line, //  Type: 17   Addr: 014fd8bc  Offset: f8   Len: 20   Format: 54   From: 8a94 
0, Line, //  It's in the built in range 
0, Line, // reads null-terminated unicode string 
0, Line, // should never happen 
0, Line, //  documents must be at least this size to be stored in big blocks 
0, Line, //  the width of the shape. 
0, Line, // width of columns in the span 
0, Line, // github-43: https://github.com/apache/poi/pull/43 
0, Line, //  try to access some of the content 
0, Line, //  1900 windowing (LocalDateTime) 
0, Line, //  tika bug 1072 
0, Line, //  Tint doesn't have the alpha   tint = -0.34999   255 * (1 + tint) = 165 truncated 
0, Line, //  then stroke the shape outline 
0, Line, //  Now copy 
0, Line, //  Weds 
0, Line, //  These aren't really typical sheets... Let it go though,    we can handle them roughly well enough as a "normal" one 
0, Line, //  Add a default set of thresholds and colors 
0, Line, //   pending then finish 
0, Line, //  overwrite existing destRow with row-copy of srcRow 
0, Line, //  Convert both values to ints to perform the test. 
0, Line, //  use zero for null 
0, Line, // top 
0, Line, //  Deserialize 
0, Line, //  Process chunk streams into their chunks 
0, Line, //  false, true   false, true   false, true 
0, Line, //  m01 (shearX) = eM12 (Horizontal proportionality constant) 
0, Line, //  but will throw an NotImplementedFunctionException or return a #NAME? error value if evaluated. 
0, Line, // REFERENCE_ORIGINAL(0x33), 
0, Line, //  header row 
0, Line, //  Check if any rows have already been flushed out 
0, Line, //  data descriptor signature "PK\007\008"   crc-32   compressed size (zip64)   uncompressed size (zip64) 
0, Line, //  Non-indexed parts: Word is taken, Excel is not 
0, Line, //  Reference to a single cell in a different sheet 
0, Line, //  match exactly one character 
0, Line, //  create 3 cell styles 
0, Line, // top-level element in sheet.xml 
0, Line, //  For now, pretending to be an atom. Might not always be, but that    would require a wrapping class 
0, Block, /*  ----------------------------------------------------------------------  */
0, Line, //  Now get the chunk to process its commands 
0, Line, //  That's all, just return 
0, Line, //  from https://stackoverflow.com/questions/50873700/ 
0, Line, //  ony a few distinct record IDs are encountered by the existing POI test cases:   0x1065 // many   0x01C2 // several   0x0034 // few   No documentation could be found for these 
0, Line, //  without ColumnInfoRecord 
0, Line, //  end bitfields 
0, Line, //  Create main part relationship 
0, Line, //  vertical 
0, Line, //  check if enough items were performed 
0, Line, //  make sure the potentially large byte-array is freed up quickly again 
0, Line, // OBJ 
0, Line, //  Add to the map 
0, Line, // Set cell value  cell.setCellValue("r" + rnd.nextInt()); 
0, Line, //  object in the EMF Object Table 
0, Line, //  start of this record to the source bitmap header in the BitmapBuffer field. 
0, Line, //  Now moving over the 2**15 boundary 
0, Line, //  2x2 corner intersection 
0, Line, //  keep destination, i.e. do nothing 
0, Line, //  Only first row should move 
0, Line, //  Simple email first 
0, Line, //  this only works, when the paddings are mocked to be the same ... 
0, Line, //  Make this cell ref look like a 1x1 area ref. 
0, Line, //  They happen to go between the two slides in Ref terms 
0, Line, //  search for errors array by array, not pair by pair 
0, Line, //  A NURBS formula: knotLast, degree, xType, yType, x1, y1, knot1,   weight1, .. 
0, Line, //  Add another duplicate 
0, Line, // Create pivotCache and sets up it's relationship with the workbook 
0, Line, //   the dummy cell records 
0, Line, //  Have initial ones put in place 
0, Line, //  H1, MID is used in the expression IF checks, so A1 should be V 
0, Line, //    Use these to wrap error messages coming up so that we have at least   some idea where the error was located   
0, Line, //  Now move to one with indexed rgb values 
0, Line, //  Now check contents 
0, Line, //  WMF metafile in the WinMetafile field. 
0, Line, //  not [255, 255, 153] 
0, Line, //  currently disabled test case row 
0, Block, /*      * Test apply(Object value) with a Boolean as parameter      */
0, Line, // buffer to memory for multiple tries 
0, Line, //  (Avoids false positives on the rest of pattern 3) 
0, Line, //  Check on tables 
0, Line, //  assert that md5 after closing is the same, i.e. the source is left intact 
0, Line, // ************ End SXSSF-specific methods ***************// 
0, Line, //  reserved   reserved 
0, Line, //  Valid date formats -- cell values should be date formatted & not "555.555" 
0, Line, //  Check the number of text runs on interesting sheets 
0, Line, //  look up sheet by name from external workbook 
0, Line, //  the previous bytes matched part of the pattern 
0, Line, //  should really be part of workbook stream, but some apps seem to put this before WINDOW2 
0, Line, //  Fits 
0, Line, //  Add 5 
0, Line, //     protected native void incRef();      protected native void decRef(); 
0, Line, //  formula2 and value2 are mutually exclusive 
0, Line, //  File -> either 
0, Line, //  The subrange [19, 38] is expected to be replaced with a EscherAggregate object 
0, Line, //  sheet is in same workbook 
0, Line, //                   assertEquals(msg, expected.getErrorCellValue(), actual.getErrorValue());                } 
0, Line, // and again 
0, Line, // just grab the raw data 
0, Line, //  Check if this property is found in the mask 
0, Line, //  this also handles booleans 
0, Line, //  We know that FontCharset only has valid entries in it,    so we can just set the int value from it 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createTextLengthConstraint	 * (int, java.lang.String, java.lang.String)	  */
0, Line, //  https://stackoverflow.com/questions/39636138 
0, Line, //  is interested in; used to efficiently manage the registry 
0, Line, //  as tested in Excel: 
0, Line, //  A1 is a number 
0, Line, // r.setRowNum(( short ) rownum); 
0, Line, //  Reset the row and column counts - new workbook / worksheet 
0, Line, //  Find the trailer 
0, Line, //  XSSF does multi-sheet references differently, so this is the same as the first 
0, Line, //  Firstly, try with one that triggers on InterfaceHdrRecord 
0, Line, //  change a low level cell 
0, Line, //  Type: 17   Addr: 014fd84c  Offset: d4   Len: 20   Format: 54   From: 8a94 
0, Line, //  get the second 
0, Line, //  sprmPDxaWidth 
0, Line, //  Copy the properties of the one before to afterwards   Will go:    Original, until insert at point    New one    Clone of original, on to the old end 
0, Line, //  collect cells into a temporary array to avoid ConcurrentModificationException 
0, Line, //  list example will be re-used 
0, Line, //  Now write out the slideshow 
0, Line, //  Formulas 
0, Line, //  test bad number formats 
0, Line, //     return "0";   } 
0, Line, //  And with ints not bytes 
0, Line, //  decompress it using our engine 
0, Line, //  Cell Formula with Reference 
0, Line, //  First child should be the ExHyperlinkAtom 
0, Line, //  Update the main record 
0, Line, //  Make sure that XSSFTable.findColumnIndex returns the column index relative to the first   column in the table, not the column number in the sheet   column I in worksheet but 0th column in table 
0, Line, //  Manjaro Linux, 24", 1920x1080(519x292 mm), 94x94 dpi   Windows 10, 15.6" 3840x2160   Windows 10, 13.3" 1080p high-dpi   Ubuntu Xenial, 15", 1680x1050   Mac 
0, Line, //  The built-in name must consist of a single Area3d Ptg. 
0, Line, //  NumberOfMembers (2 bytes):  A 16-bit unsigned integer that is not used. 
0, Line, //  Fix line endings (Note - won't get all of them 
0, Line, //  Now do the top level chunks 
0, Line, //  Cruft at the end, as found from real files 
0, Line, //  Open the Word document file and instantiate the XWPFDocument class. 
0, Block, /*  char 12  */
0, Line, //  write the workbook to the output stream   close our file (don't blow out our file handles 
0, Line, //  replace drawing block with the created EscherAggregate 
0, Line, // number of indentation levels 
0, Line, //  used for collections 
0, Line, //  check for fill 
0, Line, //  Shift the 2nd row on top of the 0th row 
0, Line, // Indentation increment for compact rows 
0, Line, //  It's fine to go with the specified instead of the   normal 
0, Line, //  Decompress a previously found module and store the decompressed result into module.buf 
0, Line, //  dashes are in units of line width 
0, Line, // name3 and name4 refer to Sheet2 and should not be affected 
0, Line, //  Lookup between the PersitPtr "sheet" IDs, and the position 
0, Line, //  CharFlagsTextProp: 3 doesn't have, 4 does 
0, Line, //  with one difference; the bullet character prefixed to the items text. 
0, Line, //  check formulas on other sheets 
0, Line, // optimization if offset == 0 use "Normal" style 
0, Line, //  Block use should be almost the same, except the properties    stream will have grown out to cover 2 blocks   Check the block use is all unchanged 
0, Line, //  Within that, grab out the Hyperlink atoms 
0, Line, //  To: 'Ashutosh Dandavate' <ashutosh.dandavate@alfresco.com>,     'Paul Holmes-Higgin' <paul.hh@alfresco.com>,     'Mike Farman' <mikef@alfresco.com>   Cc: nickb@alfresco.com, nick.burch@alfresco.com,     'Roy Wetherall' <roy.wetherall@alfresco.com>   (No BCC shown)  
0, Line, //  Firstly, have the child added in at the end 
0, Line, //  in pixelsper-meter, of the target device for the DIB. 
0, Line, //  Can work with the special one 
0, Block, /*  **********  END  implementation of FixedField **********  */
0, Line, //  If this part is a relationship part, then delete all relationships of 
0, Line, // define position of the drawing in the slide 
0, Line, //  Work on the current one   Need to do this, as we don't handle    all the possible entries yet 
0, Line, //  More scary internal setters 
0, Line, //  check leading 0 
0, Line, //  options   record id   remaining bytes 
0, Line, // open existing file 
0, Line, //  Decompress it, removing any trailing padding as needed 
0, Line, //  some non-conformant applications don't write the magic code in 
0, Line, //  Loop over the records, printing the text 
0, Line, //  Process the excludes 
0, Line, // TODO 
0, Line, //  ensure all held resources are freed 
0, Line, //  paragraphs.add(p); 
0, Line, //  write cached data to stream 
0, Line, //  check at max record size 
0, Line, //  Call should modify the contents, but leave the formula intact 
0, Line, //  Remove range2, since it is completely inside of range1 
0, Line, // no Z, assume Z 
0, Line, //  Add the new StyleTextPropAtom after the TextCharsAtom / TextBytesAtom 
0, Block, /*  bug #60977, when writing a file multiple times,              * and there are custom properties and an existing package part,             * replace, don't append to raw document byte array              */
0, Line, // now format the results 
0, Line, //   of CTExternalReference elements in the workbook 
0, Line, //  Check the titles 
0, Line, // auto-size picture relative to its top-left corner 
0, Line, //  decrypt header and read length to be decrypted 
0, Line, //  need *something* between BOF and EOF 
0, Line, //  read in the written file 
0, Line, // 				throw new RuntimeException(e);  			}  		}   else verify record ordering by navigating the raw bytes 
0, Line, //  Check they're not being silly, and asking for a built-in one... 
0, Line, //  last record can optionally be a RoundTripCustomTableStyles12Atom 
0, Line, //  positioned up from the base line of the text. 
0, Line, // Copy from "in" to "out" up to the string "<sheetData/>" or "</sheetData>" (excluding). 
0, Line, //  skip first item 
0, Line, //  formula cell has not been evaluated yet 
0, Line, //  Ensure any underlying resources, such as open files,    will get cleaned up if the user calls #close() 
0, Line, //  compute width of the header column 
0, Line, //  End the row 
0, Line, //  actual BoolEval values get interpreted as FALSE->0 and TRUE->1 
0, Line, //  then use default setting, which is cryptoapi 
0, Line, //  Create a 2 block stream, will become a 1 block one 
0, Block, /*          * 6.4.14 fo:region-body         *          * The values of the padding and border-width traits must be "0".          */
0, Line, //  register another one 
0, Line, //  end public class IntegerField 
0, Line, //  Global Crs types do have params 
0, Line, //  Visio - binary 
0, Line, //  Should not be able to write to an output stream that has been closed 
0, Line, //                 } 
0, Line, //  Type (2 bytes):  A 16-bit unsigned integer that defines the type of metafile 
0, Line, //  invalid arguments 
0, Line, // cached formula value is set and cell's type='STR' 
0, Line, //  OLE2 - File 
0, Line, //  AttrPtg [sum ] 
0, Line, //  show us the text 
0, Block, /*  @see <a href="http://msdn.microsoft.com/en-us/library/dd925810(v=office.12).aspx">2.3.4.10 \EncryptionInfo Stream (Agile Encryption)</a>  */
0, Line, //  also mark column styles as being used 
0, Line, //  Add a row to the existing non-empty sheet 
0, Line, // get our minimum values 
0, Line, //  Create a new font and alter it. 
0, Line, //  Now check 
0, Line, //  Un-used style, can be removed 
0, Line, // fOle  fOleLink  	private static final int OPT_CLIP_FORMAT_MASK      = 0x7FE0; 
0, Block, /* 	     * The dataValue can't be taken as a mask, as sometimes certain properties	     * are explicitly set to false, i.e. the mask says the property is defined	     * but in the actually nibble the property is set to false	      */
0, Line, // private int o_groupsNumber = 0; 
0, Block, /*      * Sets the cell type to type if it is different      */
0, Line, //  Unprotected, wrong password, opens normally 
0, Line, //  place comment in A1 
0, JavaDoc, /*  * Implementation of the various ISxxx Logical Functions, which *  take a single expression argument, and return True or False.  */
0, Line, //  If there's a sheet name, strip it off 
0, Line, //  this one fails: sheet.showInPane((short)i, 0); 
0, Line, //  TODO: generate CombObj stream 
0, Line, // get default font 
0, Line, // HeaderRecord  FooterRecord  HeaderFooterRecord   DimensionsRecord   WindowTwoRecord 
0, Line, //  1 = one time, M = 1..many times, * = 0..many, 0 = optional 
0, Line, //  An optional 32-bit signed integer that specifies the distribution of the pen width with respect to   the coordinates of the line being drawn. This field MUST be present if the PenDataNonCenter flag is   set in the PenDataFlags field of the EmfPlusPenData object, and the value MUST be defined in the   PenAlignment enumeration 
0, Line, //     {        list.add(keyIT.next());      }      Collections.sort(list);   
0, Line, //  Rich test file A 
0, Line, // assign a hyperlink to A4 
0, Line, // this check works both for Escher and PowerPoint records 
0, Line, //  Check what we just read. 
0, Line, // some basic get* accessors 
0, Line, //  list all properties 
0, Line, //  Ask Scratchpad, or fail trying 
0, Line, // TestXSSFHeaderFooter.class, //converted to junit4 
0, Line, //  then with event based one 
0, Line, //  end public interface POIFSViewable 
0, Line, //  Is it XWPF? 
0, Line, //  The drawing group record always exists at the top level, so we won't need to do this recursively. 
0, Line, // According to the spec, MSOffice doesn't pay attention to this value. 
0, Line, //  Rich test file B 
0, Block, /*  Add another custom property.  */
0, Line, //  Second char style is coloured, 00 00 00 05, and 17 long 
0, Line, //  An optional EmfPlusTransformMatrix object that specifies a world space to device space transform for   the path gradient brush. This field MUST be present if the BrushDataTransform flag is set in the 
0, Line, //  Add a picture to the first paragraph 
0, Line, // sheet.setRowSumsBelow alters this field too 
0, Line, //  Blank and Null the same 
0, Line, //  Create A from scratch 
0, Block, /*  Xml elements in content type part  */
0, Line, //  Check for digit or letter 
0, Line, //  Now 4 real cells, all strings 
0, Line, // assertEquals(32.4.0, r3.getFontSize()); 
0, Line, // use 100 as the default denom if something went horribly wrong 
0, Line, //  cell with a reference value 
0, Line, //  re-align local vars in this test case 
0, Line, //  Almost at the end is some more text 
0, Line, //  always interpreted as horizontal 
0, Line, //         Iterable<HwmfEmbedded> getEmbeddings(); 
0, Line, //  multiple threads at the same time 
0, Line, //  Allocate our new BAT as the first block in the XBAT 
0, Line, //  get the first cell 
0, Line, //         headerF.getParagraphs().get(0).insertNewRun(0).setText(fText1); 
0, Line, // Need to check what the font is currently, so we can reapply it after  the range is completed 
0, Line, //   			HSSFWorkbook wb = new HSSFWorkbook();  			HSSFSheet sheet = wb.createSheet();  			HSSFRow row = sheet.createRow(rowIndex); 
0, Line, //   as that's a sign of a screwed up record 
0, Line, //  split at slash, but keep leading slash 
0, Line, //  update: now the locale will be (if not set otherwise) always Locale.getDefault() (see LocaleUtil) 
0, Line, //  On page two, has explicit styles, but on runs not on 
0, Line, //  Mini stream will get one block for fat + one block for data 
0, Line, //  Now, build the linked or dependent drop down list that will   occupy cell B1. The key to the whole process is the use of the   INDIRECT() function. In the buildDataSheet(0 method, a series of   named regions are created and the names of three of them mirror   the options available to the user in the first drop down list   (in cell A1). Using the INDIRECT() function makes it possible   to convert the selection the user makes in that first drop down   into the addresses of a named region of cells and then to use 
0, Line, //  end calc settings 
0, Line, //  1st is left aligned + normal line spacing 
0, Line, //  TODO Have a map 
0, Line, //  of all things 
0, Line, //  Don't process this just yet, need the BOFRecord 
0, Line, // the actual link, terminated by '\u0000' 
0, Line, //  value in row 10 
0, Line, //  never matches (also inconsistent with above three cases).   for example '>5' does not match '6', 
0, Line, //  probably most people will use one listener 
0, Line, //  Any subclass of OperandPtg is mutable, so it's safest to not share these instances. 
0, Line, //  Should now be the same as data_a 
0, Line, // add CTLegacyDrawing element which indicates that this sheet contains drawing components built on the drawingML platform. 
0, Line, //  Save, and re-load the file 
0, Line, //  register the user-defined function in the workbook 
0, Line, //  keep stepping over values until the right type is found 
0, Line, //  It's a </<= condition. 
0, Line, //  Discover how many sheets there are in the workbook.... 
0, Line, //  98 is actually the last block in a two block stream... 
0, Line, //  int lfoOffset = _fib.getFcPlfLfo(); 
0, Line, //  bitmask order can be different 
0, Line, //  298 == 0x12A; 302 == 0x12E 
0, Line, //  catch clauses optimised to handle more specific problems. 
0, Line, //  Setup 
0, Line, //  0x2 is reserved 
0, Line, //  Column 'D' 
0, Line, // in the serialization procedure the original structure of records must be preserved 
0, Line, // test file derives from govdocs1 147240.xls 
0, Line, //  Any picture text? 
0, Line, //  Grab the VBA project root 
0, Line, //  A 32-bit unsigned integer that specifies how to interpret values in the color 
0, Line, //  Remove all the old cells from the row we'll    be writing to, before we start overwriting    any cells. This avoids issues with cells    changing type, and records not being correctly 
0, Block, /*      * Helper - determine length of zero terminated string (ASCIIZ).      */
0, Line, //  even if R attribute is not set,   POI is able to re-construct it from column and row indexes 
0, Line, //  sprmCFSpecVanish 
0, Line, //  check no other records 
0, Line, //  still a problem parsing the number - probably out of range 
0, Line, //  Color is a regular one 
0, Block, /*  Initialize the number-to-name and number-to-length map:  */
0, Line, //  This character looks like a solid, black, loser case letter 'o' 
0, Line, //  also remove the corresponding CTCell from the _row.cArray,   it may not be at the same position right now 
0, Line, //  allow files with much lower inflation rate here as there is no risk of Zip Bomb attacks in this developer tool 
0, Block, /*         final Class<? super T> clazz;        final T instance;        final Class<R> returnType;        final String methodName;        final Class<?>[] parameterTypes;        final Object[] parameters;        final R expected;        final R actual = POITestCase.callMethod(clazz, instance, returnType, methodName, parameterTypes, parameters);        assertEquals(expected, actual);         */
0, Line, //  both do hold what is expected. 
0, Line, //  Set a default footer and capture the returned XWPFFooter object. 
0, Line, //  sprmCFItalicBi 
0, Line, //  Grab the contents 
0, Line, //  Header isn't in BATs 
0, Line, //  cross tests with fv 
0, Line, //  no instance fields 
0, Line, //  Note - observed behavior of Excel:   Error values like #VALUE!, #REF!, #DIV/0!, #NAME? etc don't cause this COUNTA to return an error   in fact, they seem to get counted 
0, Line, //  Note: when entity_expansion_limit==0, there is no limit! 
0, Line, //  Google App engine returns null for user.name, see Bug 53974 
0, Line, //  Check the contents of the 3rd block 
0, Line, //  null-termination 
0, Line, //  nope, they must have different results, because of garbage   assertEquals(   extractor2.getTextFromPieces().replaceAll("[\\r\\n]", ""),   extractor2.getText().replaceAll("[\\r\\n]", "")); 
0, Line, //   as required 
0, Line, //  NOSONAR - should not be closed here 
0, Line, //  0x03, stringLen 
0, Line, // check that the formula evaluator returns the correct result 
0, Line, //  mimic test sample from http://office.microsoft.com/en-us/excel-help/sumifs-function-HA010047504.aspx 
0, Line, //  Other thingy 
0, Line, //  Now properties 
0, Line, //  child offset is left to 0,0 
0, Line, // Expected ptg stack: [NamePtg(myFunc), StringPtg(arg), (additional operands go here...), FunctionPtg(myFunc)] 
0, Line, //  Is it XSSF? 
0, Line, // see private use area 
0, Line, //  5 more blank rows 
0, Line, //  not an auto-number bullet 
0, Line, //  Code limits to #### as that is as slow as we want to get 
0, Line, //  Look at the pictures table 
0, Line, //  only adjusted when first date is last day in Feb 
0, Line, //  Close the current zip file, so we can overwrite it on all platforms 
0, Line, //  notify all cells in this row that we are going to shift them,   it can throw IllegalStateException if the operation is not allowed, for example, 
0, Line, //  a POIFS file which is not a Workbook 
0, Line, //       buf = new byte[(itcMac * ShadingDescriptor.SIZE) + 1];        buf[0] = (byte)itcMac;        ShadingDescriptor[] shds = newTAP.getRgshd(); 
0, Line, //  the record body can take different forms.   The form is dictated by the values of 3-th and 4-th bits in field_1_option_flag 
0, Line, // by default comments are hidden 
0, Line, //  Any special record handling occurs once we have the class 
0, Line, //  sid, size   row, col, xfIndex   extra 00 byte here 
0, Line, //  all regions should still start at row 3, and elongate by 1 row 
0, Line, //  Names must match 
0, Line, //  Now create our Escher children 
0, Line, //  original contributions by Axel Richter on https://stackoverflow.com/questions/47065690   additional title formatting from https://stackoverflow.com/questions/50418856   and legend positioning from https://stackoverflow.com/questions/49615379   this would probably be an answer for https://stackoverflow.com/questions/36447925 too 
0, Line, //  Find any persist ones first 
0, Line, //  Use the built-in font metrics file off the classpath 
0, Line, //  dark green 
0, Line, //  test properties of rebuilt embedded message 
0, Line, //  set some value 
0, Line, //  demonstrate adding/naming and deleting a sheet 
0, Line, //  10 @ 4086 
0, Line, //  offset += Stshif.getSize(); 
0, Line, //  We need this trick to correctly measure text 
0, Line, //  Shift Row Breaks 
0, Line, // test that the regions were spread out over the appropriate number of records 
0, Line, //  Extract the zip entry content to put it in the part content 
0, Line, //  Print the attribute into 
0, Line, //  "<Conventional>_Sheet1" 
0, Line, //   private static final int PAP_TYPE = 1;    private static final int CHP_TYPE = 2;    private static final int SEP_TYPE = 4;    private static final int TAP_TYPE = 5; 
0, Line, //  Paranoid replacement... 
0, Line, //  The ministore should be one big block bigger now 
0, Line, //         snapToAnchor(p1, anchor);          snapToAnchor(p2, anchor); 
0, Line, //  check continue record 
0, Line, //  New size based on the same logic as ArrayList 
0, Line, //  Process the first argument as a file 
0, Line, // the font being added twice 
0, Line, //  Ditto 
0, Line, //  Check the number of arguments passed to the main method. There   must be two, three or four; the name of and path to either the folder   containing the Excel files or an individual Excel workbook that is/are   to be converted, the name of and path to the folder to which the CSV   files should be written, - optionally - the separator character   that should be used to separate individual items (fields) on the   lines (records) of the CSV file and - again optionally - an integer   that idicates whether the CSV file ought to obey Excel's or UNIX   convnetions with regard to formatting fields that contain embedded   separator, Speech mark or EOL character(s).     Note that the names of the CSV files will be derived from those   of the Excel file(s). Put simply the .xls or .xlsx extension will be   replaced with .csv. Therefore, if the source folder contains files   with matching names but different extensions - Test.xls and Test.xlsx   for example - then the CSV file generated from one will overwrite   that generated from the other. 
0, Line, //  Get the footer 
0, Line, //  the created ExternalNameRecord will be appended to it 
0, Line, //  Error constant literals all contain '#' and other special characters 
0, Line, //  Now try a problem one with drawing records in it 
0, Block, /*      * Excel uses relations on sheets to store the details of      *  external hyperlinks. Check we can create these OK,      *  then still read them later      */
0, Line, //  Try to evaluate, with the other file 
0, Line, //  scratchpad classes are not available, so we use something pre-cooked 
0, Line, //  do some strange things with it ;) 
0, Line, // style.setHidden(false); 
0, Line, //  plex which will be written later to the tableStream. 
0, Line, //  Column 0 has a font with colours from a theme 
0, Line, //  Try to make sense of the data part:   Data part is made up of a number of these sets:     32 bit info value  		12 bits count of # of entries        base number for these entries     count * 32 bit offsets 
0, Line, // private static final String BIFF8_LAST_COLUMN = SpreadsheetVersion.EXCEL97.getLastColumnName();  private static final int BIFF8_LAST_COLUMN_TEXT_LEN = BIFF8_LAST_COLUMN.length();  private static final String BIFF8_LAST_ROW = String.valueOf(SpreadsheetVersion.EXCEL97.getMaxRows());  private static final int BIFF8_LAST_ROW_TEXT_LEN = BIFF8_LAST_ROW.length(); 
0, Line, //  committing twice did add the XML twice without clearing the part in between 
0, Line, // the WordArt and text box count tests will fail  if this content is available via getTextParagraphs() of the slide in POI  i.e. when POI is fixed, these tests will fail, and 
0, Line, //  Return ###...### (255 #s) to match Excel 2007 behaviour 
0, Line, //  remove any characters that should be replaced 
0, Line, //  this code is required to make sure all the necessary classes are loaded 
0, Line, // a new fill was added to the styles table 
0, Line, // Take care of the funny 4th quadrant issue  The 4th quadrant (-1 to -90) is stored as (91 to 180) 
0, Line, //  even this #VALUE! error gets used by COUNTIF as valid criteria 
0, Line, //  Every one of these component records is optional   (The whole WorksheetProtectionBlock may not be present) 
0, Line, //  Now re-generate our CTHyperlinks, if needed 
0, Line, //  4th read blows up as it loops back to 0 
0, Block, /*  Find out whether the current document is a property set                 * stream or not.  */
0, Line, //  HSSF + XSSF   Normally just XSSF   Normally just XSSF 
0, Line, //  Use Reflection to get us the full OOXML-enabled version 
0, Block, /*  Indicate that we're done  */
0, Line, //  Not a supported type   Skip onto the EOF, then complain 
0, Line, //  TextCharsAtom 
0, Line, //  Check they were added properly 
0, Line, //  detect header 
0, Block, /*              * Per Excel help:             * https://support.office.com/en-us/article/Manage-conditional-formatting-rule-precedence-e09711a3-48df-4bcb-b82c-9d8b8b22463d#__toc269129417             * stopIfTrue is true for all rules from HSSF files, and an explicit value for XSSF files.             * thus the explicit ordering of the rule lists in #getFormattingRulesForSheet(Sheet)              */
0, Line, //  set the RowRecord empty for the moment 
0, Block, /*  Create the summary information property set in the POI file             * system. It is given the default name most (if not all) summary             * information property sets have.  */
0, Line, //  let's find one that is not undefined 
0, Line, //  Remove, goes back to default 
0, Block, /* HSSFPatriarch dg = */
0, Line, //  5.38.1 External References 
0, Block, /*  Add the POI filesystems to the tree.  */
0, Line, //  One Level Down 
0, Line, //  duplicate of 1   duplicate of 2   two have gone 
0, Line, //  A2 to A6 should be gone 
0, Line, // dive into the shape container and search for InteractiveInfoAtom 
0, Line, //  sprmPDxaLeft1 -- 0x8460 
0, Line, //  Buffers which map to a file-portion are not closed automatically when the Channel is closed   therefore we need to keep the list of mapped buffers and do some ugly reflection to try to    clean the buffer during close().   See https://bz.apache.org/bugzilla/show_bug.cgi?id=58480,    http://stackoverflow.com/questions/3602783/file-access-synchronized-on-java-object and 
0, Line, //  be nice 
0, Line, // 0x0FAC RT_StyleTextProp9Atom 
0, Line, //  Embeded bits are checked in    TestExtractorFactory 
0, Block, /*  Excel V14 / 2010 - chart  */
0, Line, //  Convert excel date format to SimpleDateFormat.   Excel uses lower and upper case 'm' for both minutes and months.   From Excel help: 
0, Line, //  sub-normal negative numbers also display as '-0' 
0, Line, //  BOF 
0, Line, //  Add a test mini stream 
0, Line, // setTheme 
0, Line, //  Check for rule M1.6, M1.7, M1.8 
0, Line, //  the desired style already exists in the workbook. Use the existing style. 
0, Line, //  Stub the sheets, so sheet name lookups work 
0, Line, //  URL, EMAIL, and FILE links anchored on a shifted cell should be moved 
0, Line, //  XSSF supports >32,767 formats 
0, Line, // add negative thickness so we go the other way 
0, Line, //  found it 
0, Line, //  Ignore, invalid format 
0, Line, //  Is it a name or a function? 
0, Line, //  init paragraphs 
0, Line, //  should be sized as 'Jan' 
0, Block, /*              * If there is a document summry information stream, read it from             * the POI filesystem, else create a new one.              */
0, Line, //  if there is a globalPrecision we will use it unless there is also   precision set at the evaluate level, then we use that.  If there   is not a globalPrecision, we will use the local precision. 
0, Line, //  multiplying or dividing minus zero by a positive quantity yields minus zero 
0, Line, //  Won't be in all list 
0, Line, //  Grab the first 512 bytes   (For 4096 sized blocks, the remaining 3584 bytes are zero) 
0, Line, //  First attachment should have 22 
0, Line, //  with explicitly empty third parameter 
0, Line, //  should really evaluate, but HSSFCell can't call HSSFFormulaEvaluator   just use cached formula result instead 
0, Line, //  sometimes there are "fake" cells which we need to exclude 
0, Line, //  Create conditional formatting, CELL1 should be yellow if CELL0 is not blank. 
0, Line, //  Absolute Value Formula 
0, Line, //  don't want to include the sheet name twice 
0, Line, //  Master - unchanged 
0, Line, //  cannot check on result because on some machines we get back false here! 
0, Line, //  base class for cell reference "things" 
0, Line, //  Building namespace 
0, Line, //  simple case - expand area by shifting top upward 
0, Line, //  font stuff 
0, Line, //  bounds checking 
0, Line, //  number of formula cells that needed to be evaluated. 
0, Line, //  And a multi block one 
0, Line, //  A 16-bit unsigned integer that specifies how to interpret the points 
0, Line, //  Check the final block too 
0, Line, //  Sort out headers and footers 
0, Line, //  Find a real RecordContainer record 
0, Line, //  customize bullets 
0, Line, //  Add something to the filtered subdir that gets ignored 
0, Line, //  (who knows what they mean though...) 
0, Line, //  If there's nothing to find, skip it 
0, Line, //  use filename instead of File object to omit full pathname in test name 
0, Line, //    C tAttrIf 
0, Line, //  And again, just to be sure 
0, Line, //  the next column. 
0, Line, //  Each polygon SHOULD be outlined using the current pen, and filled using the current brush and   polygon fill mode that are defined in the playback device context. The polygons defined by this   record can overlap. 
0, Line, // check initial position 
0, Line, //  finished with Term 
0, Line, //  Create the extractors 
0, Line, // we cannot set individual formulas for cells included in an array formula 
0, Line, //  0x0001  A bit that specifies whether the characters are bold.   0x0002  A bit that specifies whether the characters are italicized.   0x0004  A bit that specifies whether the characters are underlined.   0x0008  Undefined and MUST be ignored.   0x0010  A bit that specifies whether the characters have a shadow effect.   0x0020  A bit that specifies whether characters originated from double-byte input.   0x0040  Undefined and MUST be ignored.   0x0080  A bit that specifies whether Kumimoji are used for vertical text.   0x0100  aka "unused3" - sometimes contains the strikethrough flag    0x0200  A bit that specifies whether the characters are embossed.   0x0400  An unsigned integer that specifies the run grouping of additional text properties in StyleTextProp9Atom record.   0x0800   0x1000   0x2000   0x4000  Undefined and MUST be ignored.   0x8000  Undefined and MUST be ignored. 
0, Line, //  Delete a directory, and add one more 
0, Line, //  jumpTable   chooseOffset 
0, Line, //  Create the Shape for it 
0, Line, // set sample data 
0, Line, //  Verify we only got one block 
0, Line, // Makes repeated calls to super.read() until length is read or EOF is reached 
0, Line, // setAlternateExpression must be set in conjuction with setRowSumsBelow 
0, Line, //  Get the booleans as bytes 
0, Line, // standard 24-byte tail of a URL link. Seems to always be the same for all URL HLINKs 
0, Line, //  Save the new ptr data 
0, Line, //  ConditionalFormattingTable 
0, Line, //  some other values 
0, Line, //  see 2.4.6 MSOCDIR 
0, Block, /*          * An array of LFOData that is parallel to rgLfo. The number of elements         * that are contained in this array is specified by lfoMac. -- Page 424         * of 621. [MS-DOC] -- v20110315 Word (.doc) Binary File Format          */
0, Line, //  for XSSF also test with SXSSF 
0, Line, //  pane id 3 is always present.  see OOO sec 5.75 'PANE' 
0, Line, //  Now, build our slide 
0, Line, // add chart object to chart list 
0, Line, //  only evaluate differences 
0, Line, //  pitch request   when 1, font is a TrueType font 
0, Line, //  top of area is preserved (will remain exact same row)   the bottom area row is moved simply 
0, Line, //  non-TNEF files 
0, Line, // test that the HemfCommentEMFPlus record at offset 1 
0, Line, //  And at the start 
0, Line, // still have 3 sheets 
0, Line, // it contains only cashed result of the previous FormulaRecord evaluation 
0, Line, //  And with NPOIFS 
0, Line, //  Set the columns to repeat from column 0 to 2 on the first sheet 
0, Line, // ///////////////////////////////////// 
0, Line, //  Text 
0, Line, //  Add the Calc block and set it 
0, Line, //  ---------- POI Logger methods implemented for testing ---------- 
0, Line, // link: Sheet1!A1 
0, Line, //  Save the string into a String Record, creating one if required 
0, Line, //  Get the contents for now 
0, Line, //     {        Integer key = Integer.valueOf(LittleEndian.getInt(grpprl, offset));        Byte val = Byte.valueOf(grpprl[(LittleEndian.INT_SIZE * (addSize - x)) + x]);        tabMap.put(key, val);        offset += LittleEndian.INT_SIZE;      }        tabPositions = new int[tabMap.size()];      tabDescriptors = new byte[tabPositions.length];      ArrayList list = new ArrayList();        Iterator keyIT = tabMap.keySet().iterator(); 
0, Line, //  generic header   page 23, point 2.4.2   tag is the property id and its type 
0, Line, //  Find the base TextProp to base on 
0, Line, // Sum up the second column 
0, Line, //  Type: 16   Addr: 0143aff4  Offset: 80   Len: 54   Format: 46   From: 8a94 
0, Block, /*  * Sheet-level policies   */
0, Line, //  should be .001 
0, Line, // Save the template 
0, Line, //  Int - 2   Attr 
0, Line, //  "Whole number" validation type 
0, Line, //  47: DVAR 
0, Line, // check creation of first row 
0, Line, //  The ShapeId is not equal?    assertEquals(c.getNoteRecord().getShapeId(), c2.getNoteRecord().getShapeId()); 
0, Line, //  png,gif,jpg or null for test   -1 for all 
0, Line, //  two consecutive quotes is the escape sequence for a single one   skip this and keep parsing the special name 
0, Line, //  Most recent core records 
0, Line, //  Handle end of row 
0, Line, //  Store the 2 block one, should use 2 mini blocks, and request 
0, Line, //  Cell show "D-16" 
0, Line, //  this definitely would have failed due to 27349 
0, Line, //  can't use List.indexOf here because it checks the records for equality and not identity 
0, Line, //  unencrypted 
0, Block, /*  Ignoring a property without a name.  */
0, Line, //  Figure out the length, in bytes and chars 
0, Line, // check that 
0, Line, // string is writing double bytes. 
0, Block, /*          * Make sure we insert right after the ds:SignatureValue element, just         * before the first ds:Object element.          */
0, Line, //  Update the Slide Atom's ID of where to point to 
0, Line, //  the top evaluation frame 
0, Line, //  mask is 0x030004 
0, Line, //  Simulating badly encoded cell formula of "=/1"   Not sure if Excel could ever produce this 
0, Block, /*              * Extended properties are a predefined set of metadata properties             * that are specifically applicable to Office Open XML documents.             * Extended properties consist of 24 simple properties and 3 complex properties stored in the             *  part targeted by the relationship of type              */
0, Line, //  Iteratating over the hours exposes any rounding issues. 
0, Line, //  ODF / ODS - File 
0, Line, //  Sheet0 because it uses "Sheet" + sheets.size() as starting point! 
0, Line, //  Can only find on the right sheet ref, if restricting 
0, Line, //  often COLINFO gets encoded 1 byte short   shouldn't matter because this field is unused 
0, Line, //  Check if the part name URI ends with a forward slash [M1.5] 
0, Line, //  Search the referenced drawing in the list of the sheet's relations 
0, Line, //  Create a header with a 1 row, 3 column table   changes made for issue 57366 allow a new header or footer   to be created empty. This is a change. You will have to add   either a paragraph or a table to the header or footer for 
0, Line, //  total size is currently the size of one FC 
0, Line, //  horiz align   vert align   display mode 
0, Line, //  Billet for formula in rec 
0, Line, //  Now, do a new file from scratch 
0, Line, //  object specified by the ObjectId value in Flags field. 
0, Line, //  Check the Hyperlinks 
0, Block, /* offset += */
0, Line, //  Grab the next 16 bits of data 
0, Line, //  normal bracket, not a symbol 
0, Line, //  Update the counts and start positions  
0, Line, //  Check the details 
0, Line, //  contentControls.add(c); 
0, Block, /*              * use StdDev, aboveAverage, equalAverage to find:             * comparison value             * operator type              */
0, Line, //  Pad to next 2-byte boundary 
0, Line, //  Open the existing file, tweak one value and   re-calculate 
0, Line, // first bit == 1?  second bit == 1? 
0, Line, //  center point 
0, Line, //  add logic for hyperlinks etc, like in shiftRows()  
0, Line, //  MIN to a range of cells over 3 workbooks, absolute reference 
0, Line, //  If no password was given, use the default 
0, Line, // FuncVarPtg 
0, Line, // bullet.offset 
0, Line, //  And with a footer, also on notes 
0, Line, //  Ask for another, will get our 2nd XBAT 
0, Line, //  Fifth is 1 long, underlined and different+bigger font + red 
0, Line, //  no instance initialisation 
0, Line, //  slightly different from PowerPoint! 
0, Line, //  optional EmfPlusImageAttributes object in the EMF+ Object Table. 
0, Line, //  test legacy xored-hashed password 
0, Line, //  confirm("FIXED(1.234567890123459,15,TRUE)", "1.234567890123450"); 
0, Line, //  100 onwards is free 
0, Block, /*  for Var1or2ArgFunction:	@Override	public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {	}	@Override	public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {	}	 */
0, Line, //  natural order              int start = end - 1;                // reverse order   natural order 
0, Line, //  If you don't have an image at the end of all readers 
0, Line, //  Alignment happens after the scaling but before any offset. 
0, Block, /*  => Writing isn't yet supported...		// write out the file		File file = TempFile.createTempFile("StressTest", ".msg");		writeToFile(mapi, file);				MAPIMessage read = new MAPIMessage(file.getAbsolutePath());		assertNotNull(read.getAttachmentFiles());		assertNotNull(read.getDisplayBCC());		assertNotNull(read.getMessageDate());		 */
0, Line, //  A NURBS formula. 
0, Line, //  don't close the path 
0, Line, //  Turn the string array into a single string 
0, Line, //  Update formulas that refer to rows that have been moved 
0, Line, //  Our escher container record should contain several   SpContainers, the first of which is the group shape itself 
0, Line, //  Save this properties set 
0, Line, //  A 32-bit unsigned integer that specifies how the transform specified in Xform is used. 
0, Line, //  PT_LINETO   Specifies that a line is to be drawn from the current position to this point, which 
0, Block, /*          * Inch (2 bytes):  The number of logical units per inch used to represent the image.         * This value can be used to scale an image.         * By convention, an image is considered to be recorded at 1440 logical units (twips) per inch.         * Thus, a value of 720 specifies that the image SHOULD be rendered at twice its normal size,         * and a value of 2880 specifies that the image SHOULD be rendered at half its normal size.          */
0, Line, //    B tAttrSkip 
0, Block, /*  This is the root path of the POI filesystem. Its tree             * node is resp. must be located below the tree node of             * the POI filesystem itself. This is a tree node with the             * POI filesystem's name (this the operating system file's             * name) as its key it the path-to-node map.  */
0, Block, /*  BAD_DATE!  */
0, Line, //  Create arrays for parts attached to the workbook itself 
0, Line, //  Check the FAT was properly processed 
0, Line, //  97+98 is another 
0, Line, // basic extraction works, 
0, Line, //  ignore errors for documents with incorrect extension 
0, Block, /*  Read double word.  */
0, Line, //  Get the offset to the previous incremental save's UserEditAtom   This will be the byte offset on disk where the previous one 
0, Line, //  Note - no '!' or '?' suffix 
0, Line, //  Ensure that random square brackets remain 
0, Line, //  safe because immutable 
0, Line, //  Zero fat blocks isn't technically valid, but it'd be header only 
0, Line, // Assume identical cell styles aren't consolidated  If XSSFWorkbooks ever implicitly optimize/consolidate cell styles (such as when the workbook is written to disk) 
0, Block, /*  Read the POI filesystem.  */
0, Block, /*  TODO: NPE?        sheet.dumpDrawingRecords(false);        sheet.dumpDrawingRecords(true); */
0, Line, //  grpprl.length - 2 ); 
0, Line, // link to a place in this workbook 
0, Line, //  If height or width are omitted, it is assumed to be the same height or width as reference. 
0, Line, //  Should now have 109+127 = 236 BATs 
0, Line, //  create 50 cells (0-49) (the += 2 becomes apparent later 
0, Line, //  subtract jump table size 
0, Line, //  test deletion of sheet 0 and signing 
0, Line, //  Level 1 collapsed, Level 2 expanded, Level 3 collapsed  
0, Line, //  ignore alternate content choices, we won't know anything about their namespaces 
0, Block, /*  char 7   */
0, Block, /*          * If it's a self reference, the last one or two bytes (depending on char type) are the         * unused field. Not sure If i need to bother with this...          */
0, Line, //  after which the remainder of this field MUST be ignored. 
0, Line, // (#,##0.00_);(#,##0.00) 
0, Line, //  Excel seems to always write the DIMENSION record, but tolerates when it is not present   in all cases Excel (2007) adds the missing DIMENSION record 
0, Line, //  Bugzilla 53041: Hyperlink relations are duplicated when saving XSSF file 
0, Line, //  we need to skip row if he don't have cells at all 
0, Line, // //// Case 15: Evaluate "Table1[[#Totals],[col]:[col2]]" //////// 
0, Line, //  first, copy contents from existing war 
0, Line, //  Output after we've seen the string contents 
0, Line, //  one special case of ControlPtg 
0, Line, //  verify the various ways to construct a ZipSecureFile 
0, Line, //  need to remap the fractions, because Java doesn't like repeating fraction values 
0, Line, //  Each cell style has a unique xfs entry   Several might share the same styleXfs entry 
0, Line, //  IntPtg(1)   IntPtg(0) 
0, Line, //  This is a Phs (see page 881) 
0, Line, //  Test directly with the .SSS style 
0, Line, //  Ask for the raw values 
0, Line, // hmf 
0, Line, // reference values 
0, Line, //  cat axis 1 (bars) 
0, Line, //  Now do the padding if needed 
0, Line, //  xmlContent.setXmlStandalone(true); 
0, Line, //  date value for July 8 1901 1:19 PM 
0, Line, //  stream needs to be kept open 
0, Line, //  perform the same checks using LocalDateTime 
0, Line, //  grpprlOffset = offsetOffset + index + (grpprlOffset % 2); 
0, Line, //  uncomment to observe more intuitive behaviour   StringEval se = (StringEval)x; 
0, Line, //  no changes on row "3" 
0, Line, //  tag 
0, Block, /*           In powerpoint anchor of a shape is its top left corner.          Java graphics sets string coordinates by the baseline of the first character          so we need to shift up by the height of the textbox         */
0, Line, //  Check the new formulas: Function won't change, Reference will 
0, Line, //  Test a few simple bits off a simple header 
0, Line, //  0x400000 MUST be zero and MUST be ignored 
0, Line, //  Only test cases omit the book (expecting it not to be needed) 
0, Line, //  4 bytes, total size of record not including this field   2 bytes, unknown, mostly [02 00]   ASCIIZ, stored in this field without the terminating zero   ASCIIZ, stored in this field without the terminating zero   2 bytes, unknown, mostly [00 00]   see below   ASCIIZ, stored in this field without the terminating zero   varying size, the actual native data   some final flags? or zero terminators?, sometimes not there 
0, Line, //  levels   initialise the levelCount array - this maintains a record of the 
0, Line, //  end border option bitfields 
0, Line, //  only move 3D refs that refer to the sheet with cells being moved   (currentExternSheetIx is irrelevant) 
0, Line, //  3 --> 1 
0, Line, //  Trim trailing A 
0, Line, //  single column ColumnInfoRecord starting at index 0 
0, Line, //  The sizes and zoom ratios 
0, Line, //  Tell it its Sheet ID, if it cares 
0, Line, //  normal column condition   Should not throw, checked above. 
0, Line, //  Get the slide ID 
0, Line, // System.err.println("drawing east"); 
0, Line, // TextCFException9 + SIException 
0, Line, //  297: STANDARDIZE 
0, Line, //  Need to find a DrawingGroupRecord that contains a EscherDggRecord 
0, Line, //  Look in detail at one 
0, Line, //  Indirect.evaluate has different signature 
0, Line, //  if not found, ask the master 
0, Line, //  Overlaps with 8 - 9 (before and overlap replacements required) 
0, Line, //  Check 
0, Line, //  the cell referred to by this formula will be replaced 
0, Line, //  check that it is there now 
0, Line, //  in some locales the the decimal delimiter is a comma, not a dot 
0, Line, //  TODO: distinguish underline type 
0, JavaDoc, /*  * Default Character Run style, from which other styles will override * TODO Share logic with {@link XWPFRun} which also uses CTRPr  */
0, Line, //  Check we can round-trip - try to set a new one to a cell range 
0, Line, //  If it's a named property, rather than a standard 
0, Line, //  supports search in null or empty string 
0, Line, //  Columns moved were originally *completely* within the area ref 
0, Line, //  An optional 32-bit floating-point value that specifies the miter limit, which is the maximum allowed   ratio of miter length to line width. The miter length is the distance from the intersection of the   line walls on the inside the join to the intersection of the line walls outside the join. The miter   length can be large when the angle between two lines is small. This field MUST be present if the   PenDataMiterLimit flag is set in the PenDataFlags field of the EmfPlusPenData object. 
0, Line, // German lowercase eszett, scharfes s, sharp s 
0, Line, //  the formula returns TRUE is the formatted date in column C equals to the string in column D 
0, Line, //  Links to the three sheets, shared strings and styles 
0, Line, //  more complex case - back link into wbA 
0, Line, // save the workbook and read the property 
0, Line, //  disabled for the time being, as the results aren't promising 
0, Line, // System.setOut(new PrintStream(TestBiffViewer.NULL_OUTPUT_STREAM));   use a NullOutputStream to not write the bytes anywhere for best runtime  
0, Line, //  /p:sldMaster/p:cSld/p:spTree/p:sp/p:nvPr/p:ph[@type="body"] 
0, Line, //  x1 on sheet1 defines "x=1" 
0, Line, //  expected: the zip file is invalid   this test does not care if open() throws an exception or not. 
0, Line, //  Re-check on load 
0, Line, // low-level bean holding cell's xml 
0, Line, //  This formula should evaluate to the contents of B2, 
0, Line, //  Is the name actually on our workbook? 
0, Line, //  Test effect of setting width type to a new value 
0, Line, //  Test copy whole thing 
0, Line, //  sid=0x0409   size=0x0006 
0, Line, //  Set the level for each column 
0, Line, //  Ident 0   Border 0 
0, Line, //  Strings are equal, but one or the other has formatting runs 
0, Line, //  sprmPDxaLeft80  
0, Line, //  Verify a few next offsets 
0, Line, //  Next four bytes are the type 
0, Line, //  ignore StartElement: 
0, Line, //  reserve a slot for the record 
0, Line, //  Try evaluating all of them, ensure we don't blow up 
0, Line, //  deactivate scaling/translation in super class, by specifying the dimension of the texture 
0, Line, //  Add space required to write the DBCELL record (whose reference was just added). 
0, Line, //  Created at has a +3 timezone and milliseconds     2006-10-13T18:06:00.123+03:00 
0, Line, //  add some contents to table so that the table will need expansion 
0, Line, //  basis four has funny adjustments to the day-of-month fields when at end-of-month 
0, Line, //  application/vnd.openxmlformats-officedocument.vmlDrawing   ?!MIME_TYPES.put(Pattern.compile(".*vmlDrawing.*"), ".dwg"); 
0, Line, //  it seems much simpler -- sergey 
0, Line, //  usually doesn't happen ... 
0, Line, //  Stored in the Attachment blocks 
0, Line, //  Column 'C' 
0, Line, //  Pivot Table and Query Table Extensions 
0, Line, // first byte(s) of variable length section of std is the length of the 
0, Line, //  Check inside 
0, Line, // AbsFirstRow AbsLastRow references should't change when copied to a different row 
0, Line, //  #2) these cells will have medium outside borders and thin inside borders 
0, Line, // Create new row  Row row = worksheet.createRow(i); 
0, Line, //  these fail before the fix for 59814 
0, Line, // the header row: centered text in 48pt font 
0, Line, //  fallback to LATIN if the font for the font group wasn't defined 
0, Line, //  the spec does not specify a length-limit, however Excel reports files as "corrupt" if they exceed 255 bytes for these texts... 
0, Line, //  table size reduced -   clear all table cells that are outside of the new area 
0, Line, //  49: LINEST 
0, Line, //  See if we already have it cached 
0, Line, //  Get a new FileSystem to write into 
0, Line, // get customized font 
0, Line, //  Shift 3 to back 
0, Line, //  Check the other way 
0, JavaDoc, /*  *  Convert java DateFormat patterns into Excel custom number formats. *  For example, to format a date in excel using the "dd MMMM, yyyy" pattern and Japanese *  locale, use the following code: * *  <pre><code> *      // returns "[$-0411]dd MMMM, yyyy;@" where the [$-0411] prefix tells Excel to use the Japanese locale *      String excelFormatPattern = DateFormatConverter.convert(Locale.JAPANESE, "dd MMMM, yyyy"); * *      CellStyle cellStyle = workbook.createCellStyle(); * *      DataFormat poiFormat = workbook.createDataFormat(); *      cellStyle.setDataFormat(poiFormat.getFormat(excelFormatPattern)); *      cell.setCellValue(new Date()); *      cell.setCellStyle(cellStyle);  // formats date as '2012\u5e743\u670817\u65e5' *  </code></pre> * * TODO Generalise this for all Excel format strings  */
0, Line, //  This array MUST exist if and only if the fValidPlex flag (0x2) is set 
0, Line, //  Save, load back in again, and check 
0, Block, /*  check if a user model series object was created  */
0, Line, // save workbook 
0, Line, //  there is no way from the model to tell if the list is fixed values or formula based. 
0, Line, // workbook.dispose(); 
0, Line, //  Split out the fractional part if we need to print a fraction 
0, Line, //  we have some files that are not actually OOXML and thus cannot be tested here 
0, Line, //  Get cell that does not exist yet 
0, Block, /*  Write the summary information and the document summary information             * to the POI filesystem.  */
0, Line, //  The stability classifier is useful to reduce memory consumption of caching logic 
0, Line, //  check the exact case reported in 'bug' 43901 - notice that the cellNum is '0' based 
0, Line, //  Should Q10/Q11 be checked? 
0, Line, //  single column range 
0, Line, //  Should have two, both strings 
0, Line, //  Number, but almost certainly with a special style or format 
0, Line, //  TODO Cache these evaluation sheets so they aren't re-generated on every getSheet call 
0, Line, //  This (should) include the 8 byte header size 
0, Line, // 				OutputStream os = new FileOutputStream(f);  				wb.write(os);  				os.close(); 
0, Line, // path to the file (plain ISO-8859 bytes, NOT UTF-16LE!) 
0, Line, //  dark cyan 
0, Line, //  Don't know (and can't get) the workbook date windowing (1900 or 1904)   so assume 1900 date windowing 
0, Line, //  this should be 2 as XSSFSimpleShape creates a default paragraph (no text), and then we add a string to that. 
0, Line, //  Now handle our special cases 
0, Line, //  Check it took those changes 
0, Line, //  check by name 
0, Line, //  The y-coordinate of a curve's ending control point relative to the 
0, Line, //  calculate total size of the header and first encoded char   ushort len, at least one character byte 
0, Line, //  Often (but not always) the datasize for the sub-record 
0, Line, //  add another sheet and apply the borders to it 
0, Line, //  Image signature 
0, Line, //  For negative numbers:   - If the cell format has a negative number format, this method   is called with a positive value and the number format has   the negative formatting required, e.g. minus sign or brackets.   - If the cell format does not have a negative number format,   this method is called with a negative value and the number is   formatted with a minus sign at the start. 
0, Line, // none is not the same as "not set", therefore the following doesn't work any more  assertFalse(ctBorder.isSetRight()); 
0, Line, //  Create the Styles Table, and associate the Themes if present 
0, Line, //  fails only for useMergedCell=true 
0, Line, //  First free one is at 15 
0, Line, //  Style dxfs 
0, Line, //  Finally back to big again 
0, Line, //  These come after the real ones 
0, Line, // Now create real formula based validation. 
0, Line, // 		super(pointer, store, chunkFactory); 
0, Line, // we are now a normal formula cell 
0, Line, //  A 32-bit unsigned integer that specifies the checksum for this record. 
0, Line, //  Needs reference not value 
0, Line, //  Fits in, wait for next byte 
0, Line, // this tests consecutive runs within a cell (not a paragraph) 
0, Line, // label: 
0, Line, //  The number of elements in the array specified in the StyleEntry 
0, Line, //  test INFO 
0, Line, //  no ':' 
0, Line, //  Check it's a regular chunk 
0, Line, //  colour red   character run is 96 long 
0, Line, // // ROW VECTORS 
0, Line, //  Title is underlined 
0, Line, //  original quantity only has 53 bits of precision   these quantities may have errors in the 64th bit, which hopefully don't make any difference 
0, Line, //  Has 3 paragraphs on page one, a break, and 3 on page 2 
0, Line, // 75% scale 
0, Line, //  end of bitfields for indention options   border options 
0, Line, //  end public class LongField 
0, Line, //  undo previous increment 
0, Line, // break; 
0, Line, //  update cell references to clear the cache 
0, Line, //  record types -- palette options 
0, Line, //  Low level contents 
0, Line, //  Report where it went 
0, Line, //  Create a formula parser 
0, Line, //  SUM to one cell over 3 workbooks, relative reference 
0, Line, //  sprmPDxaLeft -- 0x845e 
0, Line, //  flag 
0, Line, // _fib.serialize(mainBuf, 0); 
0, Block, /*  Getters  */
0, Line, // If DEC2BIN requires more than places characters, it returns the #NUM! error value. 
0, Line, //  it has to be based on the 2nd row width 
0, Line, // the following three statements are required only for HSSF 
0, Line, //  set a negative indent of a 1 inch. This means "Hanging" indentation:   Here goes first line of the text   |<---  indent -->|Here go other lines (second and subsequent) 
0, Line, //  Ignore NPE 
0, Line, // read and verify the string representation 
0, Line, //  try to read the source file once again 
0, Line, //  The Styles Table should have the themes associated with it too 
0, Line, //  everything from '!' to '~' (includes letters, digits, punctuation 
0, Line, //  Is it a date? 
0, Line, //  clone so we can re-use aptg in calling method 
0, Line, //  Give up and use the null logger 
0, Block, /*  headerIdx = -1,  */
0, Line, //  CustomViewSettingsRecordAggregate blocks 
0, Line, //  Switch the arrays 
0, Line, //  first short is already read as _nFibNew 
0, Line, //  verify proper behaviour with empty byte array 
0, Line, //  device. This value MUST be 0x0001. 
0, Line, //  This is when we're in trailing zeros, and the format is '?'.   We still strip out remaining '#'s later 
0, Line, //  build a range of the columns that are overwritten, i.e. the target-area, but without   columns that are moved along 
0, Line, //  write the sepx to the document stream. starts with a 2 byte size 
0, Line, //  for negative BigInteger, top byte is negative 
0, Line, //  Create a footer with a Paragraph 
0, Line, //  TODO - junit 
0, Line, // optimization, as this may be expensive for lots of ranges 
0, Block, /*  ********** START begin implementation of POIFSViewable **********  */
0, Line, //  Save and re-load 
0, Line, //  Placeholders can't be grouped 
0, Line, //  update values 
0, Line, //  tables.add(t); 
0, Line, //  don't copy hlink properties 
0, Line, //     private void resolveRangeOverlapTest(String a, String b, String...expectedOutput) {          CellRangeAddress rangeA = CellRangeAddress.valueOf(a);          CellRangeAddress rangeB = CellRangeAddress.valueOf(b);          CellRangeAddress[] result = CellRangeUtil.resolveRangeOverlap(rangeA, rangeB);          verifyExpectedResult(result, expectedOutput);      } 
0, Block, /*  Now we know that we really have a property set. The next                         * step is to find out whether it is a summary information                         * or not.  */
0, Line, //  Now we're able to do the length of the last edited user 
0, Line, //  NOTE that for HSSF (.xls) negative shifts combined with positive ones do work as expected   
0, Line, //   have zero size and no start block 
0, Line, //  anchor of the body text is missing in the slide layout, llokup in the slide master 
0, Line, //  The 32-bit signed integers that defines the corners of the bounding rectangle. 
0, Line, //  "abc" & 2 + 3 & "def"   evaluates to "abc5def" 
0, Line, // 		setters.add( setter ); 
0, Line, //  You shouldn't save the the same file, do a close instead 
0, Line, //  Cell show "2016年12月8日" 
0, Line, //  C3 = =A1 
0, Line, //  All Style records start as "builtin", but generally    only 20 and below really need to be 
0, Line, //  Now try on footers 
0, Line, //  verify that the null-value is actually set even if there was some value in the cell before 
0, Line, //  Reset, check it goes back to where it was 
0, Line, //  all these operations are on an area ref spanning rows 10 to 20 
0, Line, //  Now write the entire document out, and read it back in... 
0, Line, //  ignore font metrics differences on windows / linux (... hopefully ...) 
0, Line, //  (Makes sure we don't accidently skip the end ones) 
0, Line, //  This is a new string -- we didn't see it among the   strings we've already collected 
0, Line, //  Check directly 
0, Line, //  value MUST match the character set of that typeface. 
0, Line, //  And how much we're using 
0, Line, //  call table delete 
0, Line, //  Ensure we actually found the parts we want to check 
0, Line, //  see java.awt.Color#darken() 
0, Line, //  Save for next time 
0, Line, //  And evaluate the other way too 
0, Line, //  Add a copy of this property 
0, Line, //  use the fib to determine the name of the table stream. 
0, Line, //  and then an ArrayList whose elements encapsulate the text 
0, Line, //  first paint the shadow 
0, Line, // the source sheet has one relationship and it is XSSFDrawing 
0, Line, //  for now only encode characters below 32, we can add more here if needed 
0, Line, //  Try to move one off a different row 
0, Line, //  original image dimensions (for formats supported by BufferedImage) 
0, Line, // This would imply that this break shall be treated as a simple line break, and break the line after that word: 
0, Line, // stFile 
0, Line, //  There are 10 SXVDEX records in the file (not uploaded) that originated bugzilla 46918   They all had the following hex encoding: 
0, Line, //  arg1 is evaluated to boolean before arg0 is decoded 
0, Line, // init exactDenom and maxDenom 
0, Line, //  digest the message 
0, Line, //  y (4 bytes): A 32-bit signed integer that defines the vertical (y) coordinate of the point. 
0, Line, //  set row height; units = twentieth of a point, 360 = 0.25" 
0, Line, //  TODO: set east asian font family - MS Office uses "MS Mincho" or "MS Gothic" as a fallback   see https://stackoverflow.com/questions/26063828 for good explanation about the font metrics   differences on different environments 
0, Line, //  mask is 0x1800 
0, Line, //  Tell them of the positions of the other records though 
0, Line, //  Sanity check the size they've asked for 
0, Line, //  If str looks like a cell reference, but is out of (row/col) range, it is a valid   named range name   This behaviour is a little weird.  For example, "IW123" is a valid named range name   because the column "IW" is beyond the maximum "IV".  Note - this behaviour is version 
0, Line, //  Freeze just one row 
0, Line, //  Set a cell value within the conditional formatting range whose rule would resolve to True. 
0, Line, //  colour blue   character run is 25 long 
0, Line, //  These are in MBD... under the root 
0, Line, //  some emf comments are truncated, so we don't use readFully here 
0, Line, //  SUM to a range of cells over 3 workbooks 
0, Line, //  Save the attribute for it 
0, Line, // step 2. Read array of CTSheet elements, wrap it in a LinkedList 
0, Line, //  metafileHeader 
0, Line, //  If the record is continuable, when the continue bit is set, this field will be present.   Continuing objects have multiple EMF+ records starting with EmfPlusContinuedObjectRecord.   Each EmfPlusContinuedObjectRecord will contain a TotalObjectSize. Once TotalObjectSize number   of bytes has been read, the next EMF+ record will not be treated as part of the continuing object. 
0, Line, //  sprmCKcd 
0, Line, //  Check the text 
0, Line, //  Last is a mailto 
0, Line, //  Sanity check names 
0, Line, // CTHdrFtr ftr = buildHdrFtr(pStyle, pars);				// MB 24 May 2010   MB 24 May 2010 
0, Line, //  DirectoryChunks have 0 byte contents 
0, Line, //  When parsing a document, look to see if you know about that type    of the current record. If you know it's a type that has children,    process the record's data area looking for more records   If you know about the type and it doesn't have children, either do    something with the data (eg TextRun) or skip over it   If you don't know about the type, play safe and skip over it (using    its length to know where the next record will start)   
0, Line, //  will never be used, since we will call method after formula evaluation 
0, Line, // 6 starting bytes  +1 is for the zero byte 
0, Line, //  int _multiple; 
0, Line, // these are in the numbered ordered list  26 = OL 2  27 = OL 2.1  28 = OL 2.2  29 = OL 2.2.1 
0, Line, //  else don't subvert original exception. just print stack trace for this one 
0, Line, // the line below failed prior to fix of Bug #47889 
0, Line, //  nasty math time 
0, Block, /* CellFormat cellFormat = new CellFormat("_-* #,##0.00_-;-* #,##0.00_-;_-* \"-\"??_-;_-@_-");        CellFormatResult result = cellFormat.apply(cellValueO);        assertEquals("    1,234.56 ", result.text); */
0, Line, //  But not a Workbook one 
0, Line, //  java.lang.IllegalStateException: EOF - next record not available 
0, Line, //  just try to trash the functionality with some byte-patterns 
0, Line, //  Check for the chinese text in the mixed line 
0, Line, //  if papersize, scale, resolution, copies, landscape 
0, Line, //  Level 3 collapsed, others expanded  
0, Line, //  all errors in the second arg translate to #VALUE! 
0, Line, //  should have been prefixed with DrawingRecord (0x00EC), but bug 46280 seems to allow this 
0, Line, //  allow to find out what the actual difference is in CI where this fails currently 
0, Line, //  Finally footer(s), if present 
0, Line, //  Copy the moved block to its new location 
0, Line, //  ok we've read a EmfPlusInteger15 
0, Line, //  154 == 0x009A; 158 == 0x009E 
0, Line, //  short-circuit if it indicates elapsed time: [h], [m] or [s] 
0, Line, //  Save it out 
0, Line, //  An EmfPlusPointF object that is not currently used. It MUST be set to {0.0, 0.0}. 
0, Line, //  use existing PersistDirectoryEntry, need to increase entry count 
0, Line, //  sprmPBrcRight80 
0, Line, //  empty string is not valid boolean   must be "TRUE" or "FALSE" 
0, Line, //  Grab the bit to move  
0, Line, //  Second level 
0, Line, //  Move onto the next SBAT 
0, Line, //  non-Javadoc: This abstract class exists to consolidate duplicated code between XSSFColumnShifter and HSSFColumnShifter   (currently methods sprinkled throughout HSSFSheet) 
0, Line, //  For +ve numbers, should be Space + currency symbol + spaces + whole number with commas + space 
0, Line, // Minimun version required to update the pivot cache 
0, Block, /*      * this test simulates the generation of bugs 60320 sample file     * as the padding bytes of the EncryptedPackage stream are random or in POIs case PKCS5-padded     * one would need to mock those bytes to get the same hmacValues - see diff below     *     * this use-case is experimental - for the time being the setters of the encryption classes     * are spreaded between two packages and are protected - so you would need to violate     * the packages rules and provide a helper class in the *poifs.crypt package-namespace.     * the default way of defining the encryption settings is via the EncryptionInfo class      */
0, Line, //  Give a general wrapped exception for the problem 
0, Line, //  Set with the Charset itself 
0, Line, // load the urls from the sheet .rels 
0, Line, //  3D relative document link 
0, Line, //  Look for certain entries in the stream, to figure it   out from 
0, Line, //  otherwise you can end up modifying the built in style and effecting not only this cell but other cells. 
0, Line, //  extract generated validation from sheet 
0, Line, //  master has notes 
0, Line, //  Delete the specified part 
0, Line, //  verify proper behavior with negative offset 
0, Line, //  Float 
0, Line, //  Check a few other bits too 
0, Line, //  If the first number in the whole format is the numerator, the   entire number should be printed as an improper fraction 
0, Line, //  immutable - OK to return this 
0, Line, //  Ensure that the changes were persisted 
0, Line, //  create a sheet, set its title then delete it 
0, Line, //  Start of file 
0, Line, //  Create a map from this XWPF-level enum to the STBorder.Enum values 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getEmptyCellAllowed()      */
0, Line, //  Our placeholder master text   This shouldn't show up in the output   String masterText =       "Click to edit Master title style\n" +       "Click to edit Master subtitle style\n" +       "\n\n\n\n\n\n" +       "Click to edit Master title style\n" +       "Click to edit Master text styles\n" +       "Second level\n" +       "Third level\n" +       "Fourth level\n" +       "Fifth level\n"; 
0, Line, //  workbook with cells missing the R attribute 
0, Line, //  must be 0 (reserved) 
0, Line, // that should be read as a byte 
0, Line, //  format flags 
0, Line, //  Check it was allocated properly 
0, Line, //  style record is the same between multiple getCellStyle() calls. 
0, Line, //  skip ";@" duplets 
0, Line, //  adding CHPX from fast-saved SPRMs 
0, Line, //  2^8 - 1 
0, Line, //  Case of a package previously open 
0, Line, //  2 short fields 
0, Line, //  So, start again 
0, Line, //  ObjRecord will appear after serializetion 
0, Line, //  Expected 
0, Line, //  alpha (%) 
0, Line, //  Nothing for us to do 
0, Line, //  hint field for gui, can/should be set to zero 
0, Line, // HSSF: 225 
0, Line, //  records chars already deleted 
0, Line, //  Try writing 3 full blocks worth 
0, Line, //  OK - differs in the 31st char 
0, Line, //  adjust for "There is no 4" 
0, Line, // or new HSSFWorkbook(); 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#getOperator()	  */
0, Line, //  replacement: 
0, Line, //  An EmfPlusARGB object that specifies the edge color to use when the WrapMode value is WrapModeClamp. 
0, Line, //  rotate the arc back to the original coordinate system 
0, Line, //  Handle anything left over 
0, Line, //  For 51875 
0, Line, //  All others EAST_ASIAN 
0, Line, // skips through the prms before we reach the piece table. These contain data  for actual fast saved files 
0, Line, //  fill color was not found, check if it is defined in the theme 
0, Line, //  val axis 2 (right) 
0, Line, //  and then deleting the row that contains the cell. 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getErrorBoxText()	  */
0, Line, //  Sanity check the property's type against the value's type 
0, Line, //  for scientific/engineering notation 
0, Line, //         optRecord.setEscherProperty(new EscherSimpleProperty(EscherProperties.LINESTYLE__LINEWIDTH, LINEWIDTH_DEFAULT)); 
0, Line, // LbsDropData  flags  the number of lines to be displayed in the dropdown  the smallest width in pixels allowed for the dropdown window  num chars  compression flag  padding byte 
0, Line, // sid+size+data 
0, Line, // second sheet 
0, Line, //  adjust insert pos to insert after 
0, Line, //  Saving the part in the zip file 
0, Line, //  Can work with POIFS 
0, JavaDoc, /*      * Shifts rows between startRow and endRow n number of rows.     * If you use a negative number, it will shift rows up.     * Code ensures that rows don't wrap around<p>     *      * Additionally shifts merged regions that are completely defined in these     * rows (ie. merged 2 cells on a row to be shifted). All merged regions that are     * completely overlaid by shifting will be deleted.<p>     *      * TODO Might want to add bounds checking here     *     * @param startRow               the row to start shifting     * @param endRow                 the row to end shifting     * @param n                      the number of rows to shift     * @param copyRowHeight          whether to copy the row height during the shift     * @param resetOriginalRowHeight whether to set the original row's height to the default      */
0, JavaDoc, /*      * MB 24 May 2010. Created this overloaded buildHdrFtr() method because testing demonstrated     * that the XWPFFooter or XWPFHeader object returned by calls to the createHeader(int, XWPFParagraph[])     * and createFooter(int, XWPFParagraph[]) methods or the getXXXXXHeader/Footer methods where     * headers or footers had been added to a document since it had been created/opened, returned     * an object that contained no XWPFParagraph objects even if the header/footer itself did contain     * text. The reason was that this line of code; CTHdrFtr ftr = CTHdrFtr.Factory.newInstance();     * created a brand new instance of the CTHDRFtr class which was then populated with data when     * it should have recovered the CTHdrFtr object encapsulated within the XWPFHeaderFooter object     * that had previoulsy been instantiated in the createHeader(int, XWPFParagraph[]) or     * createFooter(int, XWPFParagraph[]) methods.      */
0, Line, //  Identify bug 46479c 
0, Line, //  Test the last Row number it currently correct 
0, Line, //  xfrm is not set, the query is delegated to the slide layout 
0, Line, //  A 32-bit unsigned integer that specifies the value from the LineCap enumeration on which 
0, Line, //  special case 
0, Block, /*  ********** START implementation of POIFSWriterListener **********  */
0, Line, //  Note - only BlankEval counts 
0, Line, //  This value MUST be the one's-complement of the result of applying an XOR operation to all WORDs in the EMF stream. 
0, Line, // Copy the rest of "in" to "out". 
0, Line, //  Attribute MAPI 
0, Line, //  need to parse AlternateContent again,   otherwise the child elements aren't typed,   but also XmlAnyTypes 
0, Line, //  278:CRITBINOM 
0, Line, //  Find the SST record 
0, Line, //  if both parameters are invalid, remove the extension mask 
0, Line, // The leftmost bit is 1 -- this is negative number  Inverse bits [1-9] 
0, Line, //  Always matches (inconsistent with above two cases).   for example '<>123' matches '123', '4', 'abc', etc 
0, Line, //  Make redundant update, and check re-evaluation 
0, Line, // the second sheet doesn't have overridden column widths 
0, Line, //     assertEquals(632, decomp.length); 
0, Line, //  unused   '? = multiple values 
0, Line, //  Check it worked 
0, Line, //  A 32-bit unsigned integer that specifies the index of the first entry to set. 
0, Line, //  MissingArg -> BlankEval -> empty string (in concatenation) 
0, Line, //  Check some of the content 
0, Line, //  everything else is a path 
0, Line, //  Sanity Checking - including whole header, so treat 
0, Line, //  colour red 
0, Line, //  link type   reference type   options 
0, Line, // define named ranges for the inputs and formulas 
0, Line, //  out of paragraphs 
0, Line, //         	os.close();          } 
0, Line, //  normally MSODRAWING(0x00EC) would come here before SXVIEW 
0, Line, //  Grab the text 
0, Line, //  Create the POIFS document 
0, Line, //  +1 to convert to 1-based 
0, Line, //  Document to itself is the same place (empty URI) 
0, Line, //  String  wb = new SXSSFWorkbook(new XSSFWorkbook(file.getPath()));  assertCloseDoesNotModifyFile(filename, wb); 
0, Line, //  If there is no custom palette, then this creates a new one that is   a copy of the default 
0, Line, // sheet.createDrawingPatriarch() should return the same instance of XSSFDrawing 
0, Line, //  Bytes -> Bytes 
0, Line, //  Style the table 
0, Line, // this was chosen to match the earlier limitation of max denom power  it can be expanded to get closer to Excel's calculations  with custom formats # #/#########  but as of this writing, the numerators and denominators  with formats of that nature on very small values were quite 
0, Line, // p._baseStyle = _baseStyle; 
0, Line, //  2 chart sheet -> data on 1st, chart on 2nd+3rd 
0, Line, //  convert word 97 colour numbers to 0xBBRRGGRR value 
0, Line, //  Re-read the String if we're a 7 bit one 
0, Line, //  process documents 
0, Line, //  3 columns   2 rows 
0, Block, /*  Create a new POI filesystem containing the origin file's         * property set streams:  */
0, Line, // Relative path notation - for EXCEL.exe - fallback 
0, Line, //  Add another formula referencing these workbooks 
0, Line, //  A 32-bit floating-point value that specifies the amount by which to scale an EmfPlusCustomLineCap 
0, Line, //  width from millimetres into Excel's column width units. 
0, Line, //  sprmPFSideBySide  
0, Line, //  Externally defined named ranges or macro functions 
0, Line, //  assumption: the render type is exclusive 
0, Line, // re-create the sheets 
0, Line, //  BATs 
0, Line, //  write, read back and check that our text box is there 
0, Line, //  Expected values 
0, Block, /* 		 * parameter = attribute "=" value		 *		 * attribute = token		 *		 * value = token | quoted-string		  */
0, Line, // cached dgg 
0, Line, // langId 
0, Line, //  sheet2 A1 
0, Line, //  And how many bits we've already set 
0, Line, //  default charset 
0, Line, //  Recursive call. 
0, Line, //  Set the name for the named range for worksheet 'sheet2' 
0, Line, //  runs found in PPDrawing are not linked with SlideListWithTexts 
0, Line, //  write the file 
0, Line, // double marginHeader = defaultMargins[4];  double marginFooter = defaultMargins[5]; 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#setShowPromptBox(boolean)	  */
0, Line, //  474 == 0x01DA; 478 == 0x01DE 
0, Line, //  0 length header 
0, Line, //  continue without log, this is expected in some setups   NOSONAR - also catch things like NoClassDefError here   throttle the log somewhat as it can spam the log otherwise 
0, Line, //  index to ref entry in extern sheet   index to first row 
0, Line, // silently return if ImageIO failed to read the image 
0, Line, //  OR XSSFWorkbook 
0, Block, /*  not used  */
0, Line, //  Add three new ones 
0, Line, //  remove row from _rows 
0, Line, //  get inside horizontal border components 
0, Line, //  Output the old rawCode 
0, Line, //  as the code-under-test and the testcase code are written the same way (have the same bugs).  
0, Line, //  Re-open, and check 
0, Line, //  Strip header 
0, Line, //  Check text and stylings 
0, Line, //  Technically a sheet doesn't need the same number as    it's comments, and clearly someone has already pinched    our number! Go for the next available one instead 
0, Line, //  If there are not three consecutive PT_BEZIERTO points, an error results. 
0, Block, /*              * we have more property types that can be converted into Java             * objects, but current API need to be preserved, and it returns             * other types as byte arrays. In future major versions it shall be             * changed -- sergey              */
0, Line, //  Figure out what sort of Stream to create, create and return it 
0, Line, //  too many arguments 
0, Block, /*  Class ID       */
0, Line, //  unsupported crypto api header  
0, Line, //  Fetch fresh copies to test with 
0, Line, //  ensure that file handles are closed (use revert() to not re-write the file) 
0, Line, //  Check - will have un-used sectors now 
0, Line, // lazy-compute hashCode 
0, Line, //  Otherwise, check the type to see if it's text 
0, Line, //  The 7th field is day of week, which we don't require 
0, Line, //  Even page header is optional, only return 
0, Line, //  allow for format string variations 
0, Line, //  also trivial, but not as obvious ... left shift the   bits high and use that clever static method in Double   to convert the resulting bit image to a double 
0, Line, //  format   index 
0, Line, // flip vertical 
0, Line, //  A 16-bit unsigned integer that defines the fill operation to be performed. This   member MUST be one of the values in the FloodFill Enumeration table: 
0, Line, //  XSSF eventmodel (SAX) or the memory-heavy XSSF usermodel (DOM).  
0, Line, //  Create a relationship ID for this link.  
0, Line, //     Cipher cipher = null; 
0, Line, //  Now create the POIFS Version 
0, Line, //  of the ole object multiple times 
0, Line, //  initially empty 
0, Line, // Confirm that the sring will be compressed 
0, Line, //  in order to transform a bar chart into a column chart, you just need to change the bar direction 
0, Line, //  array formula), set value to 0 
0, Line, //  4 bytes (recordSize) + 2 bytes (recordFunction) 
0, Line, // finally set column widths, the width is measured in units of 1/256th of a character width 
0, Line, //  Grab the table stream. 
0, Line, //  Error handling for lookup_range arg is also unusual 
0, Line, //  Step through the rows in the sheet and accumulate a total of their 
0, Line, //   knows what else... 
0, Line, //  textMark: PRODNAME!C2 
0, Line, //  6 bytes unused 
0, Line, // MUST be 0x1 
0, Block, /*  Processing entries of the zip file  */
0, Line, //  "standard" cases 
0, Line, //  we sometimes have wrong extensions, so for some exceptions we try to handle it   with the correct FileHandler instead 
0, Line, //  in the source bitmap header. This value MUST be in the DIBColors enumeration 
0, Line, // highest allowed rows and column (XFD and 0x100000) 
0, Line, //  B1:B3 will be removed 
0, Block, /* 	   The following is a dump of the OBJ record corresponding to an auto-filter	   drop-down list. The 3rd subrecord beginning at offset 0x002e (type=0x0013)	   does not conform to the documentation, because the length field is 0x1fee,	   which is longer than the entire OBJ record.	   00000000 15 00 12 00 14 00 01 00 01 21 00 00 00 00 3C 13 .........!....<.  Type=0x15 Len=0x0012 ftCmo	   00000010 F4 03 00 00 00 00	                              0C 00 14 00 00 00 00 00 00 00 ................  Type=0x0c Len=0x0014 ftSbs	   00000020 00 00 00 00 01 00 08 00 00 00 10 00 00 00	                                                      13 00 ................  Type=0x13 Len=0x1FEE ftLbsData	   00000030 EE 1F 00 00 08 00 08 00 01 03 00 00 0A 00 14 00 ................	   00000040 6C 00	                  00 00 00 00                               l.....            Type=0x00 Len=0x0000 ftEnd	 */
0, Line, // Deserialize the record. 
0, Line, //  font belongs to different workbook 
0, Line, //  shape. 
0, Block, /*  int streamDescriptorArraySize = (int)  */
0, Line, //  Thresholds should be Min / (evenly spaced) / Max 
0, Line, //  Update pointers 
0, Line, //  Empty properties 
0, Line, //  if you ever want to change the underlying data 
0, Line, //  concrete implementations can make sense of this hint, 
0, Line, //  Check case where bottom is greater than top 
0, Line, //  Is 2006-01-24 (2nd day of week) 10:26:15.205 
0, Line, //  else Number 
0, Line, //  A 32-bit unsigned integer that specifies the units used for the EmSize field. These are typically the 
0, Line, // 16-byte link moniker: HyperlinkRecord.URL_MONIKER 
0, Line, //  sid=0x0009 
0, Line, //  reserved3 - An optional unsigned integer that MUST be zero, and MUST be ignored. It   MUST exist if and only if fPp10ext is TRUE. 
0, Line, //  Get the offset to the persist pointers   This will be the byte offset on disk where the preceding 
0, Line, //  Output the worksheet name   Works by ordering the BSRs by the location of    their BOFRecords, and then knowing that we 
0, Block, /*  Write 8 bytes.  */
0, Block, /*  Write it to a POIFS and the latter to disk:  */
0, Line, //  Add a border should create a new style 
0, Line, //  Now add a 2nd, and check again 
0, Line, //  It's not a double. 
0, Line, //  this is id of the element which is 1-based: <row r="1" ... > 
0, Line, //  Add to the lists 
0, Line, //  Grab the versions 
0, Line, //   to \r(00)\n(00)(00)(00) 
0, Line, //  examples from https://support.office.com/en-us/article/DAYS360-function-B9A509FD-49EF-407E-94DF-0CBDA5718C2A 
0, Line, //  this is the main point of bug 47198 
0, Line, //  We're now able to load steams 
0, Line, //  Need to add a new one 
0, Line, //  Now load the rest of the properties, which need to be adjusted 
0, Line, //  all other centuries are *not* leap years 
0, Line, //  (2) Determine the result's sign. 
0, Block, /* 		 * this class is currently only used here, but could be moved to a		 * common package if needed		  */
0, Line, //  generated name 
0, Line, //  apply borders to sheet 
0, Line, //  Accounting -> 0 decimal places, UK currency symbol 
0, Line, //  Add another one 
0, Line, //  Grab the colour 
0, Line, //  B is at 0x0A, 0x0E 
0, Line, //  Page 51 of public specification begins 
0, Line, //  Invalid type -> exception 
0, Line, // according to the spec, a ruby object  has the phonetic (rt) first, then the actual text (base)  second. 
0, Line, //  alignment 
0, Line, //  XSSF only. HSSF version wouldn't be so simple. And also this test is contained in following, more complex tests, so it's not really important. 
0, Line, //  a failed invocation of Row.removeCell leaves the row 
0, Line, //  line is not drawn 
0, Line, //  might need to keep track of where exactly these belong 
0, Line, //  scratchpad was not on the path, ignore and continue 
0, Line, // Test high row bound exception 
0, Line, //  Find the end of the SBAT stream, and add the sbat in there 
0, Line, //  $A:$A 
0, Line, //  Not found in this lot 
0, Line, //  If they type (including the bonus 0xF018) is 0, skip it 
0, Line, // log values to ensure these values are accessible to subclasses 
0, Line, //  create our event factory 
0, Line, //  Physical justification of the paragraph 
0, Line, //  Now turn if back off again 
0, Line, // The maximum column width for an individual cell is 255 characters 
0, Line, // Use third column (month) as columns (side by side) 
0, Line, //  ToDo - test exceptions are as expected 
0, Line, //  Make sure we just do the best we can 
0, Line, //  They should all have a 3512 byte metafile rendered version 
0, Line, //  First, check overall 
0, Block, /*  >>  0 */
0, Line, //  avoid O(N^2) performance scanning through all regions for each row 
0, Line, //  Strip out the semicolon if it's there 
0, Line, //  For position dependent records, hold where they were and now are   As we go along, update, and hand over, to any Position Dependent 
0, Line, //  Get a cell, create as needed 
0, Line, //  Throws exception because we cannot read here 
0, Line, //  name length, unicode flag   Arial, as unicode 
0, Line, //  Grab text from slide's PPDrawing 
0, Line, // EscherDgContainer and EscherSpgrContainer length exceeds the actual length of the data 
0, Line, //  Open our file without core properties 
0, Line, //  So if asked, just output uncompressed 
0, Block, /*  remove packagepart relationship  */
0, Line, //  Simply chain the call to the overloaded convertExcelToCSV(String,   String, String, int) method and ensure that certain embedded   characters are escaped in accordance with Excel's formatting   conventions 
0, Line, //   look out for the title records 
0, Line, //  Add one more, and re-check 
0, Line, //  252: FEQUENCY 
0, Line, //  161 -> 166 is the next 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#getFormula1()	  */
0, Line, // short externSheetIndex = getWorkbook().checkExternSheet(sheetIndex);  name.setExternSheetNumber(externSheetIndex); 
0, Line, // freeze the first row 
0, JavaDoc, /*      * instances evaluate the values for a region and return the positive matches for the function type.     * TODO: when we get to use Java 8, this is obviously a Lambda Function.      */
0, Line, // this works recursively to pull embedded tables from within cells 
0, Line, //  (They're a different CTPicture, under the drawingml namespace) 
0, Line, //  (2) Verify that the fixed property comparator works right 
0, Line, //   the Chinese one the same as the English one 
0, Line, //  BrushDataFlags field of the EmfPlusPathGradientBrushData object. 
0, Line, //  JUnit asserts 
0, Line, // UNC path notation 
0, Line, //  Firstly, claculate how much of the image should overlap into 
0, Line, //  skip over new line breaks (we paint 'clear' text runs not starting or ending with \n) 
0, Line, //  style cell as desired 
0, Line, //  FIXME: this method would be more useful if it could convert any Color to an XSSFColor   Currently the only benefit of this method is to throw an IllegalArgumentException   instead of a ClassCastException. 
0, Line, //  Named ranges, macro functions 
0, Line, //  Test the index   Again, the formula string will be right but 
0, Block, /*  Override content type  */
0, Line, //  If we got a duplicate which is used, mark the one we're keeping as used 
0, Line, //  BitmapInfoHeader   A 32-bit signed integer that defines the width of the DIB, in pixels.   This value MUST be positive.   This field SHOULD specify the width of the decompressed image file, 
0, Line, //  Add comments 
0, Line, //  Lots of IF cases 
0, Line, //  in this case, excel ignores the column move 
0, Line, //  Check the order 
0, Line, // "test\n" appears twice: once as the "title" and once in the text. 
0, Line, //  JDK 8 seems to add an empty locale-string to the list returned via DateFormat.getAvailableLocales()   therefore we now cater for this special locale as well 
0, Line, //  add reference to OLE part 
0, Line, //  setting dash width to null unsets the Dash element 
0, Line, //  Add core properties to part list ... 
0, Line, //  First 4 bytes from the outputstream 
0, Block, /*  End check OPC compliance  */
0, Line, // inch 
0, Line, //  Add Divide Formula 
0, Line, //  by default table cell has no borders 
0, Line, //  no fill   font size is 40pt and scale factor is 90% 
0, Line, //  It's a string. 
0, Line, //  skip 2 byte to ensure 32-bit alignment of this structure. 
0, Line, //  All other ControlPtgs and ScalarConstantPtgs cannot be used with ':' 
0, Line, //  currently not evaluating anything. 
0, Line, //  empty on purpose 
0, Line, //  An int one 
0, Line, //  end public class BitField 
0, Line, //  from row 3    to row 8 
0, Line, //  Build up all the style objects 
0, Line, //  one way (of many) to cause the discrepancy is with a badly behaved record: 
0, Line, //  update charts 
0, Line, //  range formula expressions can't start with quotes (I think - anyone have a creative counter example?) 
0, Line, //  Ensure it really is a notes record 
0, Line, //  0.1"   0.1"   0.05"   0.05" 
0, Line, //  not a valid string value, and not a blank cell (that's checked earlier) 
0, Line, //  formula1 and value1 are mutually exclusive 
0, Line, //  not the first formula cell in the group 
0, Line, //  Create lots of fonts 
0, Line, //  SignedProperties 
0, Line, //  call to handle correct/incorrect values 
0, Line, //  Add some rows and columns 
0, Line, //  explicitly initialize drawing and shapes from _spTree 
0, Line, //  there are some predefined styles 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#createErrorBox(java.lang.String, java.lang.String)      */
0, Block, /*  Default content type  */
0, Line, //  Cases that were very slow 
0, Line, //  Verify sheet 1 
0, Line, //  seems to be a valid document 
0, Line, //  basic response generation 
0, Line, //  when shifted by less than -1 negative amount (try -2) 
0, Line, //  try shape properties in slide 
0, Line, //  ignore some file-types that we do not want to handle here 
0, Line, //  2) attempt to create a new row IN PLACE of a removed row by a negative shift causes corrupted   xlsx file with  unreadable data in the negative shifted row.  
0, Block, /*  ********** START implementation of POIFSReaderListener **********  */
0, Line, //  A SlideShow with one slide 
0, Line, //  TODO - whole row refs 
0, Line, //  The argument in Excel is false when it *should* pass through the origin. 
0, Line, //  make something like <Relationships 
0, Block, /*  A 32-bit unsigned integer that specifies the index of the logical palette object             * in the EMF Object Table. This index MUST be saved so that this object can be             * reused or modified.              */
0, Block, /*  OS version     */
0, Line, //  match up variable-length properties and their chunks 
0, Line, //  97 -> 98 -> END 
0, Line, //  Unix 
0, Line, //     protected int getKeySizeInBytes() {          return getEncryptionInfo().getHeader().getKeySize() / 8;      } 
0, Line, //  B3 is in the middle of the dependency tree 
0, Block, /*  check if releasing this elements glues two segments into one  */
0, Line, //  Check that the last paragraph ends where it should do 
0, Line, //  Grab the data from the workbook stream, however 
0, Line, //  this is a naive way of handling the left, center, and right   header and footer delimiters, but it seems to be as good as   the method used by XSSFExcelExtractor 
0, Line, //  no 75 ?! 
0, Line, // length is stored at the index section in the table  and it is recorded in the first short. 
0, Line, //  Spaces are skipped 
0, Line, //  Process the last contents as required. 
0, Line, //  YK: the line below used to assert empty string which is wrong   if source and target are the same they should be relaitivized as the last segment, 
0, Line, //  Note - multiple failures are aggregated before ending. 
0, Line, //  hidden bit only is altered for this outline level.  ie.  don't un-collapse contained groups 
0, Line, //  the first line is at least two times higher than the second 
0, Block, /*          * initialize map.  Every built-in has this format:         * <styleName>         *   <dxfs>         *     <dxf>...</dxf>         *     ...         *   </dxfs>         *   <tableStyles count="1">         *     <tableStyle>...</tableStyle>         *   </tableStyles>         * </styleName>          */
0, Line, //  Not set in the file 
0, Line, //  Extended properties 
0, Line, //  Load the main stream and FIB 
0, Line, //  Verify sheet 3 
0, Line, //  A 32-bit signed integer that specifies the number of points in the BoundaryPointData field. 
0, Line, //  unknown 1022 
0, Block, /*             The "m" or "mm" code must appear immediately after the "h" or"hh"            code or immediately before the "ss" code; otherwise, Microsoft            Excel displays the month instead of minutes."           */
0, Line, //  intervening spaces between '$', '-', '+' are OK 
0, Line, //  The value MUST be in the Letterform enumeration table. 
0, Line, //  this needs patch #49658 to be applied to actually work  
0, Line, //  Verify sheet 2 
0, Line, //  if 'M' precedes 's' it should be minutes ('m') 
0, Line, //  address: "http://www.regnow.com/softsell/nph-softsell.cgi?currency=USD&item=7924-37" 
0, Line, //  Hook up the workbook evaluators to enable evaluation of formulas across books 
0, Line, //  DataValidityTable, ConditionalFormattingTable,   even PageSettingsBlock (which doesn't normally appear after 'View Settings') 
0, Line, //  set up (and check) first level   points to cellB 
0, Line, //  indent for the level 
0, Line, //  one of the other args was not an AreaRef 
0, Line, // //// Evaluate "Table1[@]" (equivalent to "Table1[#This Row]") //////// 
0, Line, //  Note - asymmetric with UnaryMinus   -"hello" evaluates to #VALUE!   but +"hello" evaluates to "hello" 
0, Line, //  shouldn't change anything at all 
0, Line, //  sheet1!A4+sheet1!C2+A2 
0, Line, //  A 32-bit signed integer that specifies the logical width of the destination rectangle. 
0, Line, //  should never come here 
0, Line, // Creates default settings for the pivot table 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#getFormula1()	  */
0, Line, //  Open directly 
0, Line, //  If there's a jump in rows, fire off missing row records 
0, Line, //  Default name free 
0, Line, //          System.err.println(i + "\t" + comp[i] + "\t" + testTrailerComp[i]);        } 
0, Line, //  Copy formula verbatim (no shifting). This is okay because copyCellFrom is Internal.   Users should use higher-level copying functions to row- or column-shift formulas. 
0, Block, /*                 final File fileIn = HSSFTestDataSamples.getSampleFile(testFile);                final File reSavedFile = new File(fileIn.getParentFile(), fileIn.getName().replace(".xls", "-saved.xls"));                FileOutputStream fos = new FileOutputStream(reSavedFile);                wb2.write(fos);                fos.close();                 */
0, Line, //  Check the various macro related bits can be found 
0, Line, //  no embedded blip 
0, Line, //  a test case that returns ErrorEval.VALUE_INVALID :   the dimensions of the first and second criteria ranges are different 
0, Line, //  A 32-bit unsigned integer that specifies the 32-bit-aligned size of the entire 
0, Line, //  protected field on XSSFShape 
0, Line, //   between class loading and first use 
0, Line, //  TODO - make POI use isVolatile 
0, JavaDoc, /*  * Tests INDIRECT() as loaded from a test data spreadsheet.<p> * * Tests for bug fixes and specific/tricky behaviour can be found in the corresponding test class * (<tt>TestXxxx</tt>) of the target (<tt>Xxxx</tt>) implementor, where execution can be observed *  more easily.  */
0, Line, //   			ERFListener erfListener = null; // new MyERFListener();  			EventRecordFactory erf = new EventRecordFactory(erfListener, null); 
0, Line, //  calculate total size of the header and first encoded char   ushort len, byte optionFlags, at least one character byte 
0, Line, //  check for DocumentEncryptionAtom, which would be at the last offset   need to ignore already set UserEdit and PersistAtoms 
0, Line, //  For some reason "am/pm" becomes AM or PM, but "a/p" becomes a or p 
0, Line, //  BitmapCoreHeader 
0, Line, //  Set some more, save + reload 
0, Line, //  JAXB: 
0, Line, //  Return how many bytes were used 
0, Line, //  encryptionInfo is set from outside 
0, Line, //  start reading 
0, Line, // Get index of the named range with the name = "NamedRangeName" , which was defined in input.xls as A1:D10 
0, Line, //  the image out across one or more columns. 
0, Line, //  Publisher 
0, Line, // column width is set in units of 1/256th of a character width 
0, Line, //  for the lower level list items. 
0, Line, //  row inp row 4   col inp row 1 
0, Block, /*  Yes: return the corresponding DirectoryEntry.  */
0, Line, //  initially it is good 
0, Line, //  DecimalFormat.DOUBLE_FRACTION_DIGITS, which is default scoped 
0, Line, //  if bullet color is undefined, return color of first run 
0, Line, //  can bins be not sorted?  bins = Arrays.stream(bins).sorted().distinct().toArray(); 
0, Line, //  remember the initial transform and restore it after we are done with drawing 
0, Line, // default resolution is 72 dpi 
0, Line, //  Try to turn a into b 
0, Line, //  New thumbnail 
0, Line, //  whole document, including additional text from shape 
0, Line, //  Save an re-load, check it appears 
0, Line, //  Invert first/last column, but refer to same area 
0, Line, //  strict OOXML 
0, Line, //  Only update the style bytes, if the styles have been potentially   changed 
0, Line, //  Actual embedded objects. 
0, Line, //  was empty, just fill it 
0, Line, //  Won't contain custom 
0, Line, //  first 11 bytes compressed = 12 bytes uncompressed 
0, Line, // next 16 bytes is a ptg aray 
0, Line, //  Already linked! 
0, Line, //  sprmPNest is only stored in grpprls linked to a piece table. 
0, Block, /*          * Even if top and bottom margins are set to 0 PowerPoint         * always sets extra space between the text and its bounding box.         *         * The approximation height = ascent*2 works good enough in most cases          */
0, Line, //  Ran out of data 
0, Line, //  just expand the inner group 
0, Line, //  Add a few edge colours in 
0, Line, //  see HwmfFont#height for details 
0, Line, // verify existing hyperlink in A3 
0, Line, //  Now get formulas not their values 
0, Line, //  Pass along the record(s) 
0, Line, //  Check slide 2 is as expected 
0, Line, //  no changes on row "1" 
0, Line, //  Note - Unlike with numbers, it seems that COUNTIF never matches 
0, Line, //  for far east languages supported only for format always 0 for US 
0, Line, //  String criteria in COUNTIF are case insensitive: 
0, Line, //  Name lookup requires some equivalent object of the Workbook within xSSFWorkbook. 
0, Line, //  [MS-DOC], v20140721, 2.6.4, sprmSNFtn 
0, Line, //  We have rows 0, 1, 2, 20 and 21   Row 0 has 1 entry, 0   Row 1 has 4 entries, 0+3   Row 2 has 6 entries, 0+5   Row 20 has 5 entries, 0-5   Row 21 has 7 entries, 0+1+3+5+6   Row 22 has 12 entries, 0+3+4+11 
0, Line, //  it seems like interface 'ArrayEval' does not even exist yet 
0, Line, //  the BOFRecord can represent either the beginning of a sheet or the workbook 
0, Line, //  Re-check the comment 
0, Line, //  item 
0, Line, //  if the presentation doesn't contain pictures - will use a null set instead 
0, Line, //  Pass on 
0, Line, //  Just check we can write them back out into a filesystem 
0, Block, /*      * Sets the CellStyle that applies to the given     *  (0 based) column.      */
0, Line, //  this is true only if all values in set were valid sheet indexes (between 0 and nSheets-1, inclusive) 
0, Line, //  dry-run in a 1x1 image and return the vertical advance 
0, Line, //  option bitfields 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#setSuppressDropDownArrow(boolean)	  */
0, Block, /*          * dop (document properties record) Written immediately after the end of         * the previously recorded structure. This is recorded in all Word         * documents         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 23 of 210          */
0, Line, //   1st block is at 0 
0, Line, //  check that setting RR&C on a second sheet causes a new Print_Titles built-in 
0, Line, //  Text paragraphs 
0, Block, /*      * Indicates that the formula evaluates to an error. The value of E is the     * current value (an error message string); the value of the V attribute is     * the last valid value.      */
0, Line, // The low-order 15 bits contain the row height.  The 0x8000 bit indicates that the row is standard height (optional) 
0, Line, //   form must actually be an absolute URI 
0, Line, //  thousands separators not allowed after '.' or 'E' 
0, Line, //  01 00 00 00 
0, Line, //  special long hyphen 
0, Line, //  Base part 
0, Line, // header 
0, Line, //  other tests 
0, Line, //  throw IllegalStateException if the argument CellRangeAddress intersects with 
0, Line, //  <-- end option flags 
0, Line, //  Alignment 20   Ident 0 
0, Line, //  XSLFSlide#createSlide() with no arguments creates a blank slide 
0, Line, // Style configurations 
0, Line, //  whitespace around this gets trimmed OK 
0, Line, //  Make URI 
0, Line, //  If it starts with [DBNum1] or [DBNum2] or [DBNum3] 
0, Line, //  Check we can evaluate it correctly 
0, Line, //  no matches 
0, Line, //  VBA project directory, process 
0, Line, //  chart.setTitleOverlay(overlay); 
0, Line, //  write out the StyleSheet. 
0, Line, //  Rename the other name to "name" and check everything again 
0, Line, // the OLE2 Class Name of the object 
0, Line, //  toString must be reliable 
0, Line, //  Save and manually verify that on column C we have 0, value in template 
0, Line, //  Try to open it and read the contents 
0, Line, //  Change the date 
0, Line, //  If we didn't, then the file is probably corrupt 
0, Line, //  Set the mask bit for us 
0, Line, //  major increment   minor increment 
0, Line, //  bit 2 reserved 
0, Line, //  1 header row + 1 data row  
0, Line, //   the 29th of Feb 1900 
0, Line, //  A 32-bit unsigned integer that specifies the type of data in the RegionNodeData field.   This value MUST be defined in the RegionNodeDataType enumeration 
0, Line, //  Prints out the records in the tree 
0, Line, // in a new record all the bits are 0 
0, Line, //  on some environments in CI we see strange failures, let's verify that the size is exactly right   this can be removed again after the problem is identified 
0, Line, //  expand columns - 1 
0, Line, //  entirely inside, matches no boundaries 
0, Line, //  =myFunc2("_") 
0, Line, //  Overwrite 
0, Line, //  data taken from bugzilla 47384 att 23830 at offset 0x13A0 
0, Line, //  get the listeners interested in that document 
0, Line, //  row is moved up by the shifting 
0, Line, //  keystore files 
0, Line, //  Strip the sheet name, 
0, Line, //  YK: preserve StorageClsid, it is important for embedded workbooks, 
0, Line, //  If we've moved onto a new row, the ensure we re-set 
0, Line, //  destination columns enclose the area (possibly exactly) 
0, Line, //  Delete the specified part from the package. 
0, Line, // TODO finish me 
0, Line, //  Latest version 
0, Line, //  Has three slides 
0, Line, //  category space   format flags 
0, Line, //  Convert the String into column and row indices then chain the   call to the overridden addImageToSheet() method. 
0, Line, //  A signed integer that defines the horizontal extent of the viewport in device units. 
0, Line, //  up to JDK 10 we did use Mockito here, but OutputStream is   an abstract class and fails mocking with some changes in JDK 11   so we use a simple empty output stream implementation instead 
0, Line, //  Distinguish between string and number. 
0, Line, //  get the last cell 
0, Block, /*          * we don't support 2003 Word extensions in STSHI (but may be we should         * at least not delete them, shouldn't we?), so our structure is always         * 18 bytes in length -- sergey          */
0, Line, //  POIFS properties corrupted   No actual contents   contains xml-entity-expansion   contains xml-entity-expansion   contains shared-string-entity-expansion 
0, Line, //  Condition 2: Cell Value Is  less than      50   (Green Fill) 
0, Line, //   if it's set 
0, Line, //  Header(s), if present 
0, Line, //  context color overrides the theme 
0, Line, //  3 uncompressed unicode chars   Continue sid   rec size 16 (1+15)   next chunk is compressed   15 chars 
0, Line, //  Now try to set them to the same values, and ensure that 
0, Line, //  POI internal error codes 
0, Line, //  554 == 0x022A; 558 == 0x022E -- long 
0, Line, //  row is part of the shifted block 
0, Line, //  Blank line before next entry 
0, Block, /*  ********************* real code follows ***************************  */
0, Line, // adding a duplicate 
0, Line, //  Create a row and put some cells in it. Rows are 0 based. 
0, Line, //  complex rules to choose lookupVector and resultVector from the single area ref 
0, Line, //  Without short-circuit-if evaluation, evaluating cell 'A1' takes 3 extra evaluations (for D1,E1,F1) 
0, Line, //  for cell 
0, Line, //  If not, ask the OLE2 code to check, with Scratchpad if possible 
0, Line, //  Use all three of the four in cell styles 
0, Line, // the 10th cell contains sum over week days, e.g. SUM(C3:I3) 
0, Line, //  Check it's as expected 
0, Line, //  A tAttrSkip 
0, Line, //  width of '0' is less then width of '10'   10 and '10' should be sized equally   formula result is unknown, the width is calculated  for '0'   10.0000 and '10.0000' 
0, Line, //  Shift 1 to end 
0, Line, //  get fcMin and fcMac because we will be writing the actual text with the   complex table. 
0, Block, /*  Write the property set stream to the POIFS.  */
0, Line, //  306: CHITEST   307: CORREL   308: COVAR   309: FORECAST 
0, Block, /*  Create a buffer for the decompressed files  */
0, Line, //  need to set the anchor before height calculation 
0, Line, //  only remove it if the current row is not part of the data that is copied 
0, Line, // should only be 1 
0, Line, //  A 32-bit unsigned integer that MUST be set to the value 0x08007664. 
0, Block, /*  Excel V14 / 2010 - workbook  */
0, Line, //  while matching, this is where the bytes go. 
0, Line, //  E8 03 08 08 0C 20 03 00 00 00 00 88 16 00 00 00 ..... .......... 
0, Line, //  Short circuit for the null logger, which 
0, Line, // Parse 
0, Line, //  runs.add(run); 
0, Line, //  Quick doesn't have them 
0, Line, //  If we haven't found out what logger to use yet,    then do so now   Don't look it up until we're first asked, so    that our users can set the system property 
0, Block, /*  int dataCRC =  */
0, Line, //  Set the name for the named range for worksheet 'sheet1' 
0, Line, //  TODO ... 
0, Line, //  Ignore the ones we know to be rubbish 
0, Line, //  may as well write original data back so as to minimise differences from original 
0, Line, //  Read 
0, Line, //  range will be C1:E1 
0, Block, /*  fixed the problem as well              * comment.setColumn(cell.getColumnIndex());             * comment.setRow(cell.getRowIndex());              */
0, Line, //  TODO Update ext_formatting_length 
0, Line, //  Process the named ranges 
0, Line, //  Add a text cell 
0, Line, //  86: TYPE 
0, Line, //  Do nothing 
0, Line, //  Check children 
0, Line, //  The code below would encode tFuncVar(SUM) which seems to do no harm 
0, Line, //  verify there was an exception while closing the file 
0, Block, /*      * Test apply(Object value) with a String as parameter      */
0, Line, //  The value MUST be in the StrokeVariation enumeration table. 
0, Line, // END OF COPIED CODE 
0, Line, //  Calculate decimal number 
0, Line, //   which is more what you'd expect 
0, Line, //  A 32-bit unsigned integer that specifies the value in the LineCap enumeration that indicates the line 
0, Line, //  password protected files without known password 
0, Line, //  'true' is wider than '0'   columns 1, 2 and 3 should have the same width   columns 1, 2 and 3 should have the same width 
0, Line, //  the source rectangle 
0, Line, //  backcolor 
0, Line, //  A 16-bit signed integer that defines the y-coordinate, in logical units, of the 
0, Line, //  Set the size on the root in terms of the number of SBAT blocks   RootProperty.setSize does the sbat -> bytes conversion for us 
0, Block, /* box10x10    */
0, Line, //  don't know how to check correct result .. for the moment, we just verify that the file can be read. 
0, Line, //  start all threads 
0, Line, //  If sheet needs to be saved, use a java.lang.ref.WeakReference to avoid garbage collector gridlock. 
0, Line, // create a blank type cell (no value) 
0, Line, //  Now try again, to get the real small block 
0, Line, //  Should only have SlideAtomSets if the second one 
0, Block, /*          * sttbSavedBy (last saved by string table) Written immediately after         * the previously recorded table.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 27 of 210          */
0, Line, //  confirm formula parsing doesn't care about argument count or type 
0, Line, // nominally 78 
0, Line, //  PropertyTable 
0, Line, //  enforced by the 8224 byte limit 
0, Line, //           byte[] oldTabArray = oldPAP.getRgdxaTab();            byte[] newTabArray = newPAP.getRgdxaTab();            byte[] newTabDescriptors = newPAP.getRgtbd();            byte[] varParam = new byte[2 + oldTabArray.length + newTabArray.length +                                       newTabDescriptors.length];            varParam[0] = (byte)(oldTabArray.length/2);            int offset = 1;            System.arraycopy(oldTabArray, 0, varParam, offset, oldTabArray.length);            offset += oldTabArray.length;            varParam[offset] = (byte)(newTabArray.length/2);            offset += 1;            System.arraycopy(newTabArray, 0, varParam, offset, newTabArray.length);            offset += newTabArray.length;            System.arraycopy(newTabDescriptors, 0, varParam, offset, newTabDescriptors.length);              size += SprmUtils.addSprm((short)0xC60D, 0, varParam, sprmList); 
0, Line, //  A 32-bit unsigned integer that specifies the size, in bytes, of the source bitmap bits. 
0, Line, //  There might be 2 more bytes, which are a reserved field 
0, Line, //  ecb - only for standard encryption 
0, Line, //  test invalid indexes OOBE 
0, Line, //  check ratio out of bounds 
0, Line, //  results. 
0, Line, //  less than three arguments 
0, Line, //  Shift 1 back 
0, Line, //  Process it as a name 
0, Line, //  each row-block has a DBCELL record.   The offset of each DBCELL record needs to be updated in the INDEX record 
0, Line, //  sheet2 B1 
0, Line, //  Get the PPT version 
0, Line, //  RETURN Verifier BITWISE XOR 0xCE4B 
0, Line, //  Construct double from ValueEval. 
0, Line, //  4 @ 152   *mask bit*   18 @ 122 
0, Line, // //////////////// Excel 
0, Line, //  NaNs   Currently these test cases are not critical, since other limitations prevent any variety in 
0, Line, //  weight   format 
0, Line, //  Sheet 1 has a header with center and right text 
0, Line, //  Style 
0, Line, //  now insert (or append) newStr 
0, Line, //  IDs 
0, Line, //  Failing because by default there are no colours left in the palette. 
0, Line, //  Save in a predictable encoding, not raw bytes 
0, Line, //  Delete overwritten hyperlinks 
0, Block, /*              * If a master has one top-level shape, a shape that inherits from             * that master inherits the descendant elements of that master             * shape. If a master has more than one master shape, a shape that             * inherits from that master inherits those master shapes as             * subshapes.              */
0, Line, //  size equals _baseLength bytes for known variables plus 2 bytes for name   length plus name length * 2 plus 2 bytes for null plus upx's preceded by 
0, Line, //  override some tests which do not work for SXSSF 
0, Line, //  A y-coordinate of a point on the infinite line; paired with x-coordinate 
0, Line, //  some other unexpected error 
0, Line, //  Ask to have the values looked up 
0, Block, /* int length =  */
0, Line, // remove the rows part 
0, Line, //  integer portion uses all 11 digits   half-up here too 
0, Line, //  Check the contents of the 1st block 
0, Line, //  test finding the right comment for a cell 
0, Line, //  setting a null password shouldn't introduce the protection element 
0, Line, // print areas are one based 
0, Line, //  Cell objects created before a row shift are still valid.   The row number of those cell references will be shifted if   the cell is within the shift range. 
0, Line, //  [MS-OGRAPH].pdf says that the data of this record is an OfficeArtFDGSL structure   as described in[MS-ODRAW].pdf sec 2.2.33 
0, Line, // per-slide headers / footers 
0, Line, //  The actual dimensions don't matter as much as having XSSF and SXSSF produce the same size drawings 
0, Line, //   header in the size 
0, Line, //  Fix the line endings 
0, Line, //  Fetch / Add the TextProp 
0, Line, //  rounds last digit 
0, Line, //  Check the SLWTs contain what we'd expect 
0, Block, /*  Retrieve the section containing the properties to modify. A             * summary information property set contains exactly one section.  */
0, Line, //  When the two-arg version of INDEX() has been invoked and the reference 
0, Line, //  the world-space to page-space transform in the playback device context. 
0, Line, //  end public class POIFSViewEngine 
0, Line, // get default cellStyles 
0, Line, //  application/vnd.ms-powerpoint.slideshow.macroenabled.12 
0, Line, //  built-ins doc uses 1-based dxf indexing, Excel uses 0 based.   add a dummy node to adjust properly. 
0, Line, //   we need to move further inside the block) 
0, Line, //  c5 should be null 
0, Line, //  now wPos >= w, so end column = c, now figure offset 
0, Line, //  402 == 0x0192; 406 == 0x0196 
0, Line, //  [len=23]   [C1]   [C1]   [0]   [B1]   [OFFSET nArgs=3]     [sum ] 
0, Line, //  if a cell is not blank then convert the old value to string 
0, Line, //  Contains two forms, one with a range and one a list 
0, Line, // if no exceptions where raised, the document is valid 
0, Block, /*          * Read the sections, which are following the header. They         * start with an array of section descriptions. Each one         * consists of a format ID telling what the section contains         * and an offset telling how many bytes from the start of the         * stream the section begins.         *          * Most property sets have only one section. The Document         * Summary Information stream has 2. Everything else is a rare         * exception and is no longer fostered by Microsoft.          */
0, Line, //  could this have trouble with double precision/rounding errors and date/time values?   do we need to allow a "close enough" double fractional range?   I see 17 digits after the decimal separator in XSSF files, and for time values,   there are sometimes discrepancies in the final decimal place.     I don't have a validation test case yet though. - GW 
0, Line, //  Should get much bigger now 
0, Line, //  Where are things? 
0, Line, //  some other sanity checks 
0, Line, //   a few sample ones 
0, Line, //  result should be an area eval "B10:B10" 
0, Line, //  Excel/MATCH() seems to have slightly abnormal handling of errors with   the last parameter.  Errors do not propagate up.  Every error gets   translated into #REF! 
0, Line, //  Try to open the workbook 
0, Line, // _x000D_ is converted into carriage return 
0, Line, //  The mini block block counts now run to 191 
0, Line, //  This document also has 22 styles 
0, Line, //  New files start with 4 built in fonts, and 21 built in styles 
0, Line, //  font files need to be downloaded first via   ant test-scratchpad-download-resources 
0, Line, //  add reference to image part 
0, Line, //  we know the offset already, so decompress immediately on-the-fly 
0, Line, //  different default style indexes for HSSF and XSSF/SXSSF 
0, Line, // &N == page numbers 
0, Line, //  Even with invalid fonts we still get back useful data most of the time...  
0, Line, //  cached for performance, to avoid reading the XMLBean every time a conditionally formatted cell is rendered 
0, Line, // of support for device-independent bitmaps (DIBs) 
0, Line, //  Apply a font 
0, Line, //  line color 
0, Line, // paragraph styles 
0, Line, //  Check drawing height 
0, Line, //  Serialize a block of cells for those rows 
0, Line, //  Retrieves core properties part 
0, Line, //   styles aren't actually being used (don't touch built-in ones) 
0, Line, //  Remove the character we're supposed    to match the space of / pad to the    column width with 
0, Line, //  First up, get the number of attributes 
0, Line, // queue the first non-header record 
0, Line, //  one extra byte for first char 
0, Line, //  Figure out the type 
0, Line, //  Reload 
0, Line, // AbsFirstColumn AbsLastColumn references should't change when copied to a different column 
0, Line, //  Formula 
0, Line, //  it's always the first element in the List 
0, Line, //  Compare in detail to b 
0, Line, //  by default even when we support it we won't   want it to be protected 
0, Line, // refer to different objects 
0, Line, //  drop down 
0, Line, //  The order of slides is defined by the order of slide atom sets in the 
0, Block, /*  copy data, to avoid instance-equality  */
0, Line, //  read-only mode works! 
0, Line, //  Shift the first row to the end 
0, Line, //  next cell found 
0, Line, //  top of area is preserved (will remain exact same column)   the bottom area column is moved simply 
0, Line, //  l1 = LittleEndian.getInt(src, o1); o1 += LittleEndian.INT_SIZE;   }   final byte[] v = new byte[l1];   System.arraycopy(src, o1, v, 0, v.length);   value = v;   break; 
0, Line, //  next 2 are special cases of OperationPtg 
0, Line, //  Do we have a notes for this? 
0, Line, //  tweak the format pattern to pass tests on JDK 1.7,   See https://issues.apache.org/bugzilla/show_bug.cgi?id=53369 
0, Line, //  the bounding rectangle is optional and only read when options are given 
0, Line, //  start with one byte 'type' code for each value 
0, Line, //  copy all values to 2nd array and a map for lookup of index 
0, Line, //  Blue (1 byte): An 8-bit unsigned integer that defines the blue intensity value for the palette entry. 
0, Line, //  paragraphs 
0, Line, //  Now 5 blank rows 
0, Line, //  Reset the text on the last run   Need to ensure it's a run that really has styles! 
0, Line, // write the modified property back to POIFS 
0, Line, //  The reported symptom of this bugzilla is an earlier bug (already fixed) 
0, Line, //  goss version of CPtoFC - this takes into account non-contiguous textpieces   that we have come across in real world documents. Tests against the example   code in HWPFDocument show no variation to Ryan's version of the code in   normal use, but this version works with our non-contiguous test case.   So far unable to get this test case to be written out as well due to   other issues. - piers     i'm commenting this out, because it just doesn't work with non-contiguous   textpieces :( Usual (as for PAPX and CHPX) call to TextPiecesTable does.   private int CPtoFC(int CP)   {   TextPiece TP = null;   
0, Line, //  remove existing hyperlink records 
0, Line, //  Ensure the print setup 
0, Line, //  fractional digits 
0, Line, //  make it bold 
0, Line, //  Try to add after a mid-record 
0, Line, //  Print the contents 
0, Line, //  Old style detection (Reserved = 0xFF) 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#setSuppressDropDownArrow(boolean)      */
0, Line, //  If we get here, then there aren't any free sectors 
0, Line, //  Fills 
0, Line, //  it grew again? 
0, Line, // the first check with blank workbook 
0, Line, //  when parsing of the given uri fails, we can either   ignore this relationship, which leads to IllegalStateException   later on, or use a dummy value and thus enable processing of the   package 
0, Line, // rich text string 
0, Line, //  Do not throw NPE 
0, Line, //  Copy attachments and recipients. 
0, Line, //  The 4096 byte LZW dictionary is pre-loaded with some common    RTF fragments. These come from RTFLIB32.LIB, which ships    with older versions of Visual Studio or the EDK 
0, Line, //  A1 = 1 
0, Line, //  Ensure that this is a font we know about 
0, Line, // (a piece of code that used to work up to POI 3.0.2) 
0, Line, // average of 1_000 and 10_000 
0, Line, //  Theme text shouldn't show up   String themeText =       "Theme Master Title\n" +       "Theme Master first level\n" +       "And the 2nd level\n" +       "Our 3rd level goes here\n" +       "And onto the 4th, such fun....\n" +       "Finally is the Fifth level\n"; 
0, Line, //  start from the beginning  
0, Line, //  second run properties 
0, Line, // //// Case 2: Evaluate "Table1[[#Totals],[col]]" //////// 
0, Line, //  Across two colums 
0, Line, //         assertEquals("Microsoft Enhanced RSA and AES Cryptographic Provider", info.getHeader().getCspName()); 
0, Line, //  Highlight Positive values - Column C 
0, Line, //  a sheet with no cell comments should return an empty map (not null or raise NPE). 
0, Line, //   document, which might be regular or fast-saved 
0, Line, //  ignore exception here 
0, Line, //  HyperlinkRecord.HLINK_URL | HyperlinkRecord.HLINK_ABS | HyperlinkRecord.HLINK_LABEL 
0, Line, //  need to remove password data 
0, Line, //  false parameter 
0, Line, // EOFRecord 
0, Line, //  Check we look up the correct style 
0, Line, //  Details checks 
0, Line, //  Textbox objects are also treated as shape objects. 
0, Line, //  Check default limit 
0, Line, //  Load 
0, Line, // create string from xml tree 
0, Block, /*  Check rule M1.8  */
0, Line, //  No attachments 
0, Line, //  Inputs!A1   Inputs!B1 
0, Line, //  don't copy endParaRPr to the run in case there aren't any other   runs   this is the case when setText() was called initially   otherwise the master style will be overridden/ignored 
0, Line, //  sprmCShd80 
0, Line, //  visibility raised for testing 
0, Line, //  no need to check for contain1. The key come from it 
0, Line, //  write the first excel file 
0, Line, //  Change the number 
0, Line, //             p_wb.write(fileOut); 
0, Line, //  check behavior with setCellFormulaValidation 
0, Line, //  Now evaluate, they should all be changed 
0, Line, //  1:1 
0, Line, //  An optional WMF RectL object that defines a clipping and/or opaquing rectangle in logical units. 
0, Line, // //// Case 6: Evaluate "Table1[#Headers]" //////// 
0, Line, //  measured in Excel 2013. Sizes may vary. 
0, Line, // sheet.createFreezePane(0, 3); 
0, Line, //  364: STDEVPA   365: VARPA   366: STDEVA   367: VARA 
0, Line, // Bug54868 patch has a hit on the first string before the ";" 
0, Line, //  Category Axis Data 
0, Line, //  Check for unreserved character "-", ".", "_", "~" 
0, Line, //  Try to find the name of the font for our symbol 
0, Line, //  Initialize the datasource 
0, Line, //   private static void handleTabsAgain(ParagraphProperties pap, SprmOperation sprm)    {      byte[] grpprl = sprm.getGrpprl();      int offset = sprm.getGrpprlOffset();      int delSize = grpprl[offset++];      int[] tabPositions = pap.getRgdxaTab();      byte[] tabDescriptors = pap.getRgtbd();        HashMap tabMap = new HashMap(); 
0, Line, //  don't bother about boiler plate text on master sheets 
0, Line, //  x   y 
0, Line, //  But not a Workbook one and not a Summary one 
0, Line, //  default to dummy name 
0, Block, /*  Not and ending mark  */
0, Line, //  maybe we don't need that as an instance variable anymore 
0, Block, /*          * Check ds:Signature node.          */
0, Line, //  extra facilitator members 
0, Line, //  special characters work 
0, Line, //  assert that the number of parts remained the same 
0, Block, /* workbook */
0, Line, //  0 -> 21 are simple 
0, Line, //  Shift from 3 back 
0, Line, //  Check we detect the string properly too 
0, Line, //  Convert it's contents into a CSV file 
0, Line, //  if we have a file-type that we can read, but no extension, we try to determine the   file type manually 
0, Line, //  rt   reserved   engine id 
0, Line, // columns for 11 weeks starting from 9-Jul 
0, Block, /*         assertEquals("[Array Formula] N7 cell type", CellType.FORMULA, cell.getCellType());        assertEquals("[Array Formula] N7 cell formula", "{SUM(H7:J7*{1,2,3})}", cell.getCellFormula());         */
0, Line, //  Now even more complex 
0, Line, //  Write out the values 
0, Line, //  Write the future header first 
0, Line, //  OOO: the 4th way Xcl stores a unicode string: not even a Grbit byte present if length 0 
0, Line, //  Make a note of the index number of the right most cell. This value   will later be used to ensure that the matrix of data in the CSV file 
0, Line, //  corner cases 
0, Line, //  A 16-bit unsigned integer that provides information about how the operation is 
0, Line, //  caused NPE on some cells 
0, Line, //  Simply replace the .xls or .xlsx file extension with .csv 
0, Line, //  prevent close of stream by transformer: 
0, Line, //  Encrypt it 
0, Block, /*  Write the new POIFS to disk.  */
0, Line, // make absolutely certain that sequential calls don't throw InvalidFormatExceptions 
0, Line, //  one blank row 
0, Line, //  We should have both sets 
0, Line, //  Multi-Sheet references are not supported 
0, Line, //  First time we've seen the module. Add it to the ModuleMap and decompress it later 
0, Line, //  Return what we find 
0, Line, //  A 16-bit unsigned integer used to validate the correctness of the embedded EMF stream. 
0, Line, //  has single digit round trip error 
0, Line, //  According to bugzilla 48332,   "SoftArtisans OfficeWriter for Excel" totally skips field 6   Excel seems to be OK with this, and assumes zero. 
0, Line, //  Check the contents of them - parse the summary block and check 
0, Line, //  Output the mask and the data 
0, Line, //  accent2 is theme1.xml is <a:srgbClr val="C0504D"/> 
0, Line, // here we are checking if part if embedded and excel then set it to chart class  so that at the time to writing we can also write updated embedded part 
0, Line, //  CONTINUABLE is not always correctly set, so we check the version field if this record is continued 
0, Line, //  Empty story 
0, Line, //  Try adding this new byte onto rawCode, and    see if all of that is still found in the 
0, Line, // 			mapi.write(stream); 
0, Line, //  We're on the end of the chain 
0, Line, //  An 8-bit unsigned integer that specifies the arm style of the font. 
0, Line, //  A tAttrIf 
0, Line, //  mask off the two low-order bits, 'cause they're not part of   the number 
0, Line, //  Strip off fields and macros if requested 
0, Line, //  units that were employed when designing the font. The value MUST be in the UnitType enumeration 
0, Line, //  An array of DashedLineDataSize floating-point values that specify the lengths of the dashes and spaces in a dashed line. 
0, Line, //  return 0;     EscherProperty property = optRecord.lookup( 0x0102 ); 
0, Line, //  (Comments in PPT97 are normal Escher text boxes) 
0, Line, // wbr.write(new FileOutputStream("c:/temp/yyy." + _testDataProvider.getStandardFileNameExtension())); 
0, Line, //  Now check we get the right stuff back 
0, Line, //  Can't delete yet, has stuff 
0, Line, //  Old or new style word document? 
0, Line, //  scale to bounding box (bug #53176) 
0, Line, //  A 32-bit unsigned integer that specifies how to interpret values in the color table 
0, Line, //  Create a new empty POIFS in the file 
0, Line, //  Check it still has 3 slides 
0, Line, //  test regular-colored (non-indexed, ARGB) sheet 
0, Line, //  moved sheet was the active one 
0, Line, //  from the workbook 
0, Line, //  area ref   spaces in area ref   special chars in sheet name   redundant sheet name quotes   case-insensitive sheet name   spaces around cell ref   spaces around cell ref   explicit arg1. only TRUE supported so far 
0, Line, //  formula to get rendered as COLUMN($A$1:$IV$2) or ROW($A$2:$IV$3)  
0, Line, //  And add to the main list 
0, Line, // body specifies an external defined name 
0, Line, //  attach the comment to the cell 
0, Line, //  This color is visible when the source rectangle processed by an EmfPlusDrawImage record is larger than the image itself. 
0, Line, //  hyperlink should still refer to test!E1 
0, Line, //  recalculate now since we already have the data bytes available anyhow 
0, Line, //  Should have used 9 blocks 
0, Line, //  is this correct? 
0, Line, // Add by Zhang Zhang test error situation when remaining bytes > avalible bytes 
0, Line, //  field_4_alignment_options bit map 
0, Line, //  check the built in list   or if the regular list   has all entries. 
0, Line, //  A 32-bit signed integer that specifies the logical y-coordinate of the upper-left 
0, Line, //  Should be 4 of them 
0, Line, //  Try evaluating both 
0, Line, //  invoking from cell C1 
0, Line, //  Top level frame, there is no 'cell' above this frame that is using the current cell 
0, Line, // remove this guard. So be safe it is left here. 
0, Line, //  Formula row references should be adjusted by destRowNum-srcRowNum 
0, Line, //  find comment in A1 
0, Line, //  We can't do much yet with latent styles 
0, Block, /*          * Invoke the signature facets.          */
0, Line, // for compatibility with HSSF we have to set column width in units of 1/256th of a character width  the column is 5 characters wide  the column is 13 characters wide 
0, Line, //  Now, create the chunk 
0, Line, //  Save, and re-load 
0, Line, //  the essense of the Newton-Raphson Method 
0, Line, //  units, of the point where drawing is to start. 
0, Line, //  check to see if we have enough room for an FC, a BX, and the   grpprl 
0, Line, //  binary data is appended without DataFormat header 
0, Line, //  Find the key, and return that 
0, Line, //  try parsing a formula pointing to a different external sheet 
0, Line, //  create cells with bad num patterns 
0, Line, // application/vnd.ms-visio.viewer 
0, Line, //  newer excel formats are 
0, Line, //  Try and read each byte in turn 
0, Line, //  this should be 3 as we overwrote the default paragraph with setText, then added 2 new paragraphs 
0, Line, //  TODO - instantiable superclass 
0, Line, //  level 1 : default title style on the master slide 
0, Line, //  try to load truncated pictures by supplying a BufferedImage   and use the processed data up till the point of error 
0, Line, //  ensure that the paragraph contains at least one character 
0, Line, // still have five records 
0, Line, //  Update references to the name 
0, Line, //  Cell show  
0, Line, //  A 32-bit unsigned integer that specifies the number of characters in the FamilyName field. 
0, Line, // formula 
0, Line, //  B1 is a string, with the wanted text in it 
0, Line, //  formula extracted from bugzilla 45234 att 22141 
0, Line, //  External reference to our own workbook's name 
0, Line, //  Check we can see some bits of it 
0, Line, //  intentionally empty 
0, Line, //  fix invalid leadings (leading == 0) 
0, Line, //  sign bit is in the same place for long and double: 
0, Line, //  Split escher records into separate MSODRAWING and OBJ, TXO records.  (We don't break on 
0, Line, //  If the stream is not closed on exception, it will keep a file descriptor to tmp, 
0, Line, //  Notes - added at start 
0, Line, //  add at the end 
0, Line, //  For To, CC and BCC, try to match the names    up with their email addresses. Relies on the    Recipient Chunks being in the same order as 
0, Line, //  Check the different kinds of formulas 
0, Line, //  A floating-point value that defines the horizontal/vertical focus scale. 
0, Line, //  grpprl = grpprl containing only a sprmPHugePapx2 
0, Line, //  do not auto-close the slideshow 
0, Line, // all of the path strings start with either 0x02 or 0x01 followed by zero or  more of 0x01..0x08 
0, Line, //  Now we have the size of the details, which is 20 
0, Line, //  Set to the value from the notes' sheet id 
0, Block, /*  ===============================================================	 *                   External Move Methods	 * ===============================================================	  */
0, Line, //  zin.available() doesn't work for entries 
0, Line, //  this is necessary so that we do not write an empty <cols/> item into the sheet-xml in the xlsx-file   Excel complains about a corrupted file if this shows up there! 
0, Line, //  A WMF RectL object that defines the destination bounding rectangle in device units. 
0, Line, //  returns an error in Excel 2007 & earlier 
0, Line, //   Get RGB values in the range 0 - 1 
0, Line, //  Spacer ones 
0, Line, //  if we didn't output OLE - output field value 
0, Line, //  4 bytes - size of contents   13/15 00 00 01 
0, Line, //  sprmCFNoProof -- 0x875 
0, Line, //  Reserved, 4 bytes, all 0 
0, Line, //  Will show as C:C, but won't know how many   rows it covers as we don't have the sheet 
0, Line, //  be escaped by preceding it with a backslash. 
0, Line, // build a tree of POIXMLDocumentParts, this presentation being the root 
0, Line, //  non-null string greater than empty cell 
0, Line, //  apparently bits 8 and 9 are unused 
0, Block, /* Sheet sheet1 = */
0, Line, //  actually, this is looking more like a number 
0, Line, // 5. Convert all back slashes to forward slashes 
0, Line, //  bitfields for options 
0, Line, //  Apply one, changes 
0, Line, //  Loop over the sets, showing what they contain 
0, Line, //  Create a workbook with print areas on 2 sheets 
0, Line, // expected order of records: 
0, Line, //  OLE embeddings relation name 
0, Line, //  Note about last param '2':   - Excel expects single row or single column when entered in UI, but process this OK otherwise 
0, Line, //  We've spare ones from 100 to 128 
0, Line, //  one more than it is 
0, Line, //  Rich test file 
0, Line, //  not [255, 102, 0] 
0, Line, //  Should be two groups and a text 
0, Line, //  specifies the size, in bytes, of the bitmap file - must add the length of the header 
0, Line, //  name refers to this sheet 
0, Block, /*  OPC Compliance methods  */
0, Line, //  default font size for text boxes 
0, Line, //  If there's any other bits of data, keep them about 
0, Line, // defensive null checks; don't know if they're necessary 
0, Line, // if highest bit !=1 then continue 
0, Line, //  A format String must be built to ensure that the contents of the 
0, Line, //  27-31 
0, Line, //  Pick a predictable date format + timezone 
0, Line, //  Row 3 (zero-based) was empty, so Row 11 (zero-based) should be empty too. 
0, Line, //  forecolor 
0, Line, // col must exist 
0, Line, //  just plain '~' 
0, Line, //  Save and re-open, ensure it still works 
0, Line, //  Get useful things from our base slideshow 
0, Line, //  unknown 
0, Line, //  This one is one of the nasty auto-locale changing ones... 
0, Line, //  This would be very complex to support 
0, Line, //  TODO: Some kind of structure. 
0, Line, //     {        Integer key = ((Integer)list.get(x));        tabPositions[x] = key.intValue();        tabDescriptors[x] = ((Byte)tabMap.get(key)).byteValue();      }        pap.setRgdxaTab(tabPositions);      pap.setRgtbd(tabDescriptors);    } 
0, Line, //  skip empty runs 
0, Line, //  Row 7 is blank / blank / number / number / number 
0, Line, //  Protected, wrong password, throws Exception 
0, Line, //  different syntax for plain area ref 
0, Line, //  It isn't a text tag 
0, Line, //  ok, it's just a plain ol' int; we can handle this   trivially by casting 
0, Line, //  truncate the bottom of the area by the moved columns 
0, Line, //    General codepage fallback: Message locale ID property. 
0, Line, //  Work out how many FAT blocks remain in the XFATs 
0, Line, //  350: ISPMT   351: DATEDIF   352: DATESTRING 
0, Line, //  8 bytes of reserved zeros (top level properties stream only) 
0, Line, //  Check we can read them correctly 
0, Line, //  character run is 1 long   mask is 0x070004 
0, Line, //  sprmCMajority50 -- 0xCA4C   unCompressCHPOperation (oldCHP, newCHP, 0x47, param, varParam,   styleSheet, opSize); 
0, Line, //  null constant 
0, Line, //  Should not throw POIXMLException: java.io.IOException: Unable to parse xml bean when reading back 
0, Line, //  only for user defined styles 
0, Line, //  true, true   true, true   true, true 
0, Line, // wb.write(new FileOutputStream("/tmp/outnocomment.xlsx")); 
0, Line, //  character run text 
0, Line, //  Ensure Paragraph Character styles match 
0, Line, //  Check some that aren't there 
0, Line, //  Did we miss any cells? 
0, Block, /*  @see <a href="http://msdn.microsoft.com/en-us/library/dd907466(v=office.12).aspx">2.3.6 Office Binary Document RC4 Encryption</a>  */
0, Line, //  0 if slide has no notes. 
0, Line, //  generate the TSP request 
0, Line, //  No bulleting info included 
0, Line, // set default properties for an autoshape 
0, Line, // assertTrue("getCollapsed", col.getCollapsed()); 
0, Line, //  Create a map from this XWPF-level enum to the STVerticalJc.Enum values 
0, Line, //  wmf files in pptx usually have their placeable header    stripped away, so this returns only the dummy size 
0, Line, //  rgb color 
0, Line, //  level1, level2, level3 
0, Line, // windows 1250 -- this test file was generated with OpenOffice  see https://bz.apache.org/ooo/show_bug.cgi?id=12445 for the inspiration 
0, Line, //  Rows moved include the first row of the area ref, but not the last row   btw: (aLastRow > _lastMovedIndex) 
0, Line, //  Plain 
0, Line, //  Top level 
0, Line, //  see also CVE-2008-3014 - https://dl.packetstormsecurity.net/papers/attack/CVE-2008-3014.pdf ;) 
0, Line, //  Ask again, will still get 100 as not written to 
0, Block, /*  A 32-bit unsigned integer that specifies the number of points in the points             * array. This value MUST be one more than three times the number of curves to             * be drawn, because each Bezier curve requires two control points and an             * endpoint, and the initial curve requires an additional starting point.             *             * Line width | Device supports wideline | Maximum points allowed             *    1       |            n/a           |          16K             *   > 1      |            yes           |          16K             *   > 1      |             no           |         1360             *             * Any extra points MUST be ignored.              */
0, Line, //  <<---- 
0, Line, //  modify anchor 
0, Block, /*          * Read a couple of bytes from the stream.          */
0, Line, //  can't have a space between the table name and open bracket 
0, Line, //  some default input values 
0, Line, //  because of tangens nature, the values left [90°-270°] and right [270°-90°] of the axis are mirrored/the same 
0, Line, //  This might be a real email, or might be 
0, Line, //  create named range for a single cell using cellreference 
0, Line, //  Check that the record re-serializes correctly 
0, Line, //  scale   index to font table 
0, Line, //  Try again at the end 
0, Line, //  "xps" - Doesn't have a core document 
0, Line, //  intervening spaces not allowed once the digits start 
0, Line, //  A 32-bit unsigned integer that specifies the total size of the EMF stream embedded in this 
0, Line, //  consume padding 
0, Line, //  Keep going 
0, Line, //  Clean up temporary resources 
0, Line, //  else no breaks 
0, Line, //  Ask, will get 100 
0, Line, //  The second knot of the spline. 
0, Line, //  Cell Formula 
0, Line, //  the correct value. 
0, Line, // if you're here, no pattern matched, throw exception 
0, Block, /*  remove POIXMLDocument from relations  */
0, Line, //  check if we should remove this row as it will be overwritten by the data later 
0, Line, //  check for EmfPlusInteger7 value 
0, Line, //  sid=0x0209 
0, Line, //  If the criteria arg is a reference to a blank cell, countif always returns zero. 
0, Line, //  if it is a plain text box then take defaults from presentation.xml 
0, Line, // JMH I am only overriding this to get a picture of the time taken to paint 
0, Line, //  end x coordinate, relative to parent 
0, Line, //  Icons : 5 arrows grey - Column P     
0, Line, //         assertEquals(IndexedColors.AUTOMATIC.index, fmt4.getFillForegroundColor()); 
0, Line, //  also adjust the number of merged regions overall 
0, Line, //  Extended phonetics data   Minimum size is 14 
0, Line, //  Turn our InputStream into something NIO based 
0, Line, //  New document won't have them 
0, Line, //  If we get here, it's got no associated proper links yet   So, add the missing reference and return 
0, Line, //  Number or string? 
0, Line, //  Start adding new codes after the constants 
0, Block, /*  ======= Name pointing to 3rd sheet ======  */
0, Line, //  no result on empty 
0, Line, //  reduce size by 2 rows and 2 columns 
0, Line, //  and also use the remaining bytes, which might contain padding bytes ... 
0, Line, //  for now expect this to fail, when we fix 57699, this one should fail so we know we should adjust   this test as well 
0, Line, // serialize and check again 
0, Line, //  If we're not using merged cells, skip this one and move on to the next. 
0, Line, //  evaluate() 
0, Line, // only shift if the region outside the shifted columns is not merged too 
0, Line, // This forces ctpicturebase to be included in the poi-ooxml-schemas jar 
0, Line, //  Santuario xmlsec 
0, Line, //  hyperlinks on this row are unaffected by the row shifting, so the hyperlinks should not move 
0, Line, //  this handling is only based on try and error ... not sure why h/xslf is handled differently. 
0, Line, //  now: also allow explicitly disable styles and there aren't any non rich text runs anymore 
0, Line, //  Same, no change, SBAT remains empty 
0, Line, //  Often, but not always has 6 unused bytes at the end 
0, Line, //  Excel counts blank values in range as not equal to any value. See Bugzilla 51498 
0, Line, //  Fix up row heights if required 
0, Line, //  Read and check 
0, Line, //  valid cell reference 
0, Line, //  Get text works with \n 
0, Line, //  A 32-bit unsigned integer that specifies the offset to the output string, in bytes,   from the start of the record in which this object is contained. 
0, Line, //  major increment 
0, Block, /*          * plcffld*** (table of field positions and statuses for annotation         * subdocument) Written immediately after the previously recorded table,         * if the ******* subdocument contains fields.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Line, //  CellAddress=B1, shifted to B4 
0, Line, //  How far through the input and output streams we are 
0, Line, //  LogPaletteEntry objects, if they exist, MUST precede this field. 
0, Line, // shift down the top row on Sheet1. 
0, Line, //  define the third style to be the default 
0, Line, //  from ms excel 
0, Line, //  adding PAPX from fast-saved SPRMs 
0, Line, //  the CipherOutputStream adds the padding bytes on close() 
0, Line, //  = 2007-06-20T07:57:00Z 
0, Line, //  Excel 2013 and LibreOffice 4.2.8.2 both treat columns with merged regions as blank 
0, Line, //  verify cannot delete the root directory 
0, Line, //  didn't find digits or '.' 
0, Line, // Offset=0x00002636(9782) recno=72 sid=0x003C size=0x010D(269) 
0, Line, //  Get the main document stream 
0, Block, /*  *************** record code follows **********************  */
0, Line, //  test Table - a complex group of shapes containing text objects 
0, Line, //  The y-coordinate of the ending vertex of an arc. 
0, Line, //  check initial state 
0, Line, //  Check if the part name does not have empty segments. [M1.3] 
0, Line, //  negative value means absolute spacing in points 
0, Line, //         resolveRangeOverlapTest("C1:D2", "C2:C3");      } 
0, Line, // Use first column as row label 
0, Line, //  check fail 
0, Line, //  sid=0x0009   size=0x0004 
0, Line, //  Border from a style direct, red 
0, Line, // need to check, else blows up on some records - bug 34435 
0, Line, //  255 clears border inherited from row 
0, Line, //  Check the second one, links to 56737.xls, slightly differently 
0, Line, //  Cell show "Thursday, December 8, 2016" 
0, Line, //  For all of the contents rows, check that DataFormatter is able 
0, Line, //  this formula evaluates to an Excel error code '#N/A' 
0, Line, //  If we didn't get a real string, don't even cache it as we can always find this out quickly 
0, Line, //  increase size by 1 row and 1 column 
0, Line, //  nextSid should be for a DVRecord.  If anything comes between the DV header record    and the DV records, Excel will not be able to open the workbook without error. 
0, Line, //  Anticipates the location of where a workbook will be written to   Note that if TEST_OUTPUT_DIR is not set, this will create temporary files   with unique names. Subsequent calls with the same argument may return a different file.   Gets a test data sample file, deleting the file if it exists.   This is used in preparation for writing a workbook out to the returned output file.   testName is a filename fragment and should not include the extension 
0, Line, //  An EmfPlusRectF object that specifies a portion of the image to be rendered. The portion of the image 
0, Line, //  SBAT still unused 
0, Line, //  sprmPFWidowControl 
0, Line, //  don't do this for very large sheets as it will take a long time 
0, Line, //  the cipher can't be final, because for the last chunk we change the padding 
0, Block, /*  * Created on May 29, 2005 *  */
0, Line, //  info of chicago project:   "... LZ compression algorithm in the format used by GNU Zip deflate/inflate with a 32k window ..."   not sure what to do, when lookup tables exceed 32k ... 
0, Line, //  Add the length+code to the buffer   (The position is the first 12 bits, the 
0, Line, //  crossing point   label frequency 
0, Line, //  expected results are on the row below 
0, Line, //  center of text relative to this shape 
0, Line, //  Reserved or invariant locale behavior 
0, Line, //  Add a new style, also rotated 
0, Line, // <-- FAILS EXPECTATIONS 
0, Line, //  Applies to a child 
0, Line, //  It MUST NOT include the size of itself or the size of the AlignmentPadding field, if present. 
0, Line, //  Expected badly behaved sheet record to cause exception 
0, Line, //  any NoteRecords that follow the drawing block must be aggregated and and saved in the tailRec collection 
0, Line, // YK: should throw an exception if requesting boolean value from a non-boolean formula 
0, Line, //  check if InputStream is still intact 
0, Line, //  Check it has the length + compressed marker 
0, Line, //  Firstly set up a sequence of formula cells where each depends on the  previous multiple 
0, Block, /*          * clx (encoding of the sprm lists for a complex file and piece table         * for a any file) Written immediately after the end of the previously         * recorded structure. This is recorded in all Word documents         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 23 of 210          */
0, Line, //  Save the CSV file away using the newly constricted file name 
0, Line, //  color in percentage is in linear RGB color space, i.e. needs to be gamma corrected for AWT color 
0, Line, //  Add another cell at the end 
0, Line, //  extraData 
0, Line, //  jan 
0, Line, //  Copy the whole lot 
0, Line, //  SIDs from newer versions 
0, Line, //  Don't check for a Zip header, as to maintain backwards    compatibility we need to let them seek over junk at the    start before beginning processing. 
0, Line, //  Change our cell record to use this style 
0, Line, //   2^3^2    evaluates to 64 not 512 
0, Line, // rwFirst, rwLast, colFirst, colLast 
0, Block, /* File file = new File("/tmp/63509.xlsx");            try(FileOutputStream outputStream = new FileOutputStream(file)) {                workbook.write(outputStream);            } */
0, Line, //  An 8-bit unsigned integer that specifies the clipping precision.   The clipping precision defines how to clip characters that are partially outside the clipping region. 
0, Block, /* 		 * Have a check between available bytes and bytesRemaining, 		 * take the available length if the bytesRemaining out of range.		  */
0, Line, //  run a number of files that might fail in order to catch    leaked file resources when using file-leak-detector while   running the test 
0, Line, //  BUT adding positive zero gives positive zero 
0, Line, //  Make sure values are saved and re-read correctly. 
0, Line, // shouldn't have a sheet w/o a SelectionRecord, but best to guard anyway 
0, Line, //  Build an input stream of it 
0, Line, //  NOT: (2 *2) ^ 2 -> int int multiply int power 
0, Line, //  removed sheet was below the active one => active is one less now 
0, Line, //  adjust cell column style 
0, Line, //  no change if before any affected row 
0, Line, //  A 32-bit unsigned integer that specifies the value in the LineCap enumeration that indicates 
0, Line, //  Add one more stream to each, then save and re-load 
0, Line, // register a new drawing group for the cloned sheet 
0, Line, //  Mini Stream + SBATs first, as mini-stream details have 
0, Line, //  131: N   140: DATEVALUE   141: TIMEVALUE   142: SLN   143: SYD   144: DDB 
0, Line, //  Check the 12(.34)% ones 
0, Line, //  the best-fit width for both flushed rows and random access window rows 
0, Line, //         remainingData  =  new byte[bytesRemaining];          System.arraycopy( data, pos + size, remainingData, 0, bytesRemaining ); 
0, Line, //  Check filtering down 
0, Line, //  calls System.exit(): TextStyleListing.main(new String[0]); 
0, Line, // a span of columns [2,4] 
0, Line, //  whole row and whole column ranges currently not supported 
0, Line, //  See note above. XSSFNames become invalid after workbook write 
0, Line, //  Stored in the file as us-ascii 
0, Line, //  Save the final package to a temporary file 
0, Line, //  De-register it 
0, Line, // //// Case 9: Evaluate "Table1[[#All],[col]]" //////// 
0, Line, //  else 
0, Line, //  verify that getEntries behaves correctly 
0, Line, //  Cell show  
0, Line, // example from Excel help 
0, Line, //  The StringBuffer's contents are the source for the contents 
0, Line, //  First pass - figure out where all the position dependent     records are going to end up, in the new scheme   (Annoyingly, some powerpoint files have PersistPtrHolders 
0, Line, //  test with -1 
0, Line, //  NOSONAR  this.mask1 = source[startIndex];  this.mask2 = source[startIndex + 1]; 
0, Line, //  Get the built in format, if there is one 
0, Line, //  Setup the inline 
0, Line, //  Check the 123(.45)% ones 
0, Line, //  A 32-bit unsigned integer that specifies the number of rectangles in this region. 
0, Line, // we are still of 'formula' type 
0, Block, /*              * OOo doesn't like ds namespaces so per default prefixing is off.              */
0, Line, //  start new PersistDirectoryEntry 
0, Line, //  anchor is not defined in the shape 
0, Line, // Removing root element 
0, Line, //  Note down the index number of the bottom-most row and   then iterate through all of the rows on the sheet starting   from the very first row - number 1 - even if it is missing.   Recover a reference to the row and then call another method   which will strip the data from the cells and build lines   for inclusion in the resylting CSV file. 
0, Line, //  Minimum Value Formula 
0, Line, //  Ensure the value passed to the formattingConvention parameter is 
0, Line, //  Compute the high-order word of the new key: 
0, Line, //  Normal smtp address 
0, Line, // passing null unsets the color 
0, Line, // stFile  unused (2 bytes as we're using double-byte chars) 
0, Line, //  mere bunk 
0, Line, //  adding blank to "abc" gives "abc" 
0, Line, //  Fill the XBAT, which means filling 127 BATs 
0, Line, //  character run is 30 long 
0, Line, //  always write 'rt' field as 0x01C1 
0, Line, //  Calculate and print the actual fraction (improper or otherwise) 
0, Line, //  Standard built in format 
0, Line, //  Load relationships if any 
0, Line, //  Excel seems to write this value, but it doesn't seem to care what it reads 
0, Line, //  Note - this is unusual for BIFF records in general, but normal for header / footer records:   when the text is empty string, the whole record is empty (just the 4 byte BIFF header) 
0, Line, // integral test: check that the read-write-read round trip is consistent 
0, Line, //  min axis value 
0, Line, //  different stream, if the file is cryptoapi encrypted 
0, Line, //  num categories   num values 
0, Line, //  Add a third one 
0, Line, //  Test changing the three sections value 
0, Line, //  A 32-bit unsigned integer that specifies the offset to the palette entries from the start of this record. 
0, Line, //  printable, but not compilable with current compiler encoding 
0, Block, /* HSSFCellStyle style = */
0, Line, //  If it's an external target, we don't 
0, Line, //  and delete the old part to replace it thereafeter 
0, Line, //  We certainly found an encoded character, check for length   now ( '%' HEXDIGIT HEXDIGIT) 
0, Line, //  Check we got the styles we'd expect 
0, Block, /*              * plflfo (more list formats) Written immediately after the end of             * the plcflst and its accompanying data, if there are any lists             * defined in the document. This consists first of a PL of LFO             * records, followed by the allocated data (if any) hanging off the             * LFOs. The allocated data consists of the array of LFOLVLFs for             * each LFO (and each LFOLVLF is immediately followed by some LVLs).             *              * Microsoft Office Word 97-2007 Binary File Format (.doc)             * Specification; Page 26 of 210              */
0, Line, //  -1 to convert definedNameIndex from 1-based to zero-based 
0, Line, //  all these operations are on an area ref spanning columns 10 to 20 
0, Line, //  And the all-in fetch 
0, Line, //  Will keep the mini stream, now empty 
0, Line, // cchFile (2 bytes)  char type = unicode 
0, Line, //  verify proper behavior with negative index 
0, Line, //  doesn't happen ... 
0, Line, //  1%	0.5%	3%	4% 
0, Line, //  First child should be the ExMediaAtom 
0, Line, //  Check the colours 
0, Line, //  relative url will be resolved to an absolute url, therefore this doesn't equals to "slide2.xml" 
0, Line, //  Look for any text in any of our pictures or drawings 
0, Block, /*  This exception will not be thrown because we already                         * checked above.  */
0, Line, //  empty row at left-top corner 
0, Block, /*  if last relation to target part was removed, delete according target part  */
0, Line, //  Old Word Documents where we can at least extract some text 
0, Line, //  account for row records in this row-block 
0, Line, //  Weds 28th April 2010 @ 12:40:56 UTC 
0, Line, //  Will have dropped to 8 
0, Line, //                 recs[9],  //HeaderFooterRecord 
0, Line, //  Write out to a byte array, and to a temp file 
0, Line, //  character run is 30 long   mask is 0x020001 
0, Line, //  some Records do not implement clone, ignore those for now 
0, Block, /*  No: We have to create the directory - or return the root's                 * DirectoryEntry.  */
0, Line, // 0 1 2 3 4 5 6 7 
0, Line, //  mismatch -> unbuffer 
0, Line, //  keep this first, as some constructors below want it 
0, Line, //  make sure that all evaluators have the same listener 
0, Line, //  we want to compare on identity here on purpose   as we want to ensure that both lists contain the   same documents, not copies! 
0, Line, //  Remember the "@" positions in last-to-first order (to make insertion easier) 
0, Line, // expandRow(rowIndex); 
0, Line, //  sprmPFDyaBeforeAuto 
0, Line, //  had one case where the re-saved could not be re-saved! 
0, Line, //  see https://bz.apache.org/bugzilla/show_bug.cgi?id=60980 
0, Line, //  Only work on user added ones, which come after 20 
0, Line, // add one for zero byte 
0, Line, //  And also write to some bytes for checking 
0, Line, //  For testing - all should be numeric 
0, Line, //  A1:E1 should be removed 
0, Line, //  add "\u5e74 \u6708 \u65e5" for Chinese/Japanese date format:2017 \u5e74 2 \u6708 7 \u65e5 
0, Line, //  Add the new slide into the last PersistPtr 
0, Line, //  Type: 14    Addr: 011eb2ac  Offset: 1dd4    Len:  14d   Format: 52  From: 24 
0, Line, //  Level 1 collapsed, others expanded, should only have 4 rows, all hidden:  
0, Line, //  bit 15 is unused 
0, Line, //  Apparently, it's the second least significant bit 
0, Line, //  Filter more 
0, Line, //  Next up, check they have the same number of children 
0, Block, /*  exception is thrown -> server not available  */
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createDateConstraint(int, java.lang.String, java.lang.String, java.lang.String)	  */
0, Line, //  how the code used to behave.  
0, Line, //  Where in the stream does the "number of pointers" offset live? 
0, Line, // 499  999 
0, Line, //  Old cell value should not have been overwritten 
0, Line, //  Function "Text" uses custom-formats which are locale specific   can't set the locale on a per-testrun execution, as some settings have been   already set, when we would try to change the locale by then 
0, Line, //  bitfields for palette options 
0, Line, // Create relationship between pivotTable and pivotCacheDefinition without creating a new instance 
0, Line, //  set equal to size of sprmPHugePapx grpprl 
0, Line, //  Excel 2010 gives 51.74384236453200 
0, Line, //  set second sheet 
0, Line, //  Now create 
0, Line, //  Create a cell at A3 and insert a numbered list into that cell.   Note that a couple of items have been added to the listItems 
0, Line, //  color in sRGB color space, i.e. same as AWT Color 
0, Line, //  Change Font size 
0, Line, //  show numbers to associate shapes with ids.. doesn't always work 
0, Line, // create a target sheet and cell 
0, Block, /* 	 * Note - the next three fields are very similar to those on	 * EmbededObjectRefSubRecord(ftPictFmla 0x0009)	 *	 * some observed values for the 4 bytes preceding the formula: C0 5E 86 03	 * C0 11 AC 02 80 F1 8A 03 D4 F0 8A 03	  */
0, Line, //  Sheet name only applies if not a global reference 
0, Line, //  mask out upper bits to produce 'wrapping' at the maximum column ("IV" for .xls and  "XFD" for .xlsx) 
0, Line, //  changed protected to public 
0, Line, //  Exact times differ slightly 
0, Line, //  make the row height bigger  (in twips - 1/20 of a point) 
0, Line, //  Verify names in wb2 
0, Line, //  old bottom row of area has moved up deep within the area, and exposed a new bottom row 
0, Line, //  For now, try filling in the fields 
0, Line, //  Update the properties streams in the file 
0, Line, //  open the zip input stream   NOSONAR 
0, Line, //  intentionally shadowing variables here   center 
0, Line, //  Doesn't fit, output 
0, Line, //  Save the raw bytes, should be raw RTF 
0, Line, //     public final static short       OBJECT_TYPE_CHART              = 5;      public final static short       OBJECT_TYPE_TEXT               = 6; 
0, Line, //  picture 
0, Line, // assumes Locale prints number decimal point as a period rather than a comma 
0, Line, //  Shift from 3 front 
0, Line, //  literal list, using formula constructor 
0, Line, //  unknown ushort   _address: "yearfracExamples.xls" 
0, Line, //  taken from libre office export, it won't open, if this is left to 0 
0, Line, //  see more details in https://issues.apache.org/bugzilla/show_bug.cgi?id=51710 
0, Line, // // COLUMN VECTORS 
0, Line, //  black 
0, Line, // adjust column width to fit the content 
0, Line, //  calls System.exit(): SlideAndNotesAtomListing.main(new String[0]); 
0, Line, //  Check it's the same now 
0, Line, //  Check now the same 
0, Line, //  Check the text has the newline 
0, Line, // Sheet worksheet = wb.createSheet("sample"); 
0, Line, // read record header 
0, Line, //  create the comment in two different ways and verify that there is no difference 
0, Line, //  we don't even support double stream files 
0, Line, //  Enable this to write out + check in Excel 
0, Line, //     [EOFRecord] 
0, Line, //   with the next byte 
0, Line, //  An optional 32-bit signed integer that specifies the shape for both ends of each dash in a dashed line.   This field MUST be present if the PenDataDashedLineCap flag is set in the PenDataFlags field of the   EmfPlusPenData object, and the value MUST be defined in the DashedLineCapType enumeration 
0, Line, //  Should have two SLTWs 
0, Line, //  16 colors 
0, Line, //  These even crazier ones are also valid 
0, Line, //  unset font size in presentation.xml. The value should be taken from master slide 
0, Line, //  need them in formatting and priority order so logic works right 
0, Line, //  Type: ff   Addr: 014fffac  Offset: 0    Len:  0   Format: 60   From: 8a94 
0, Line, // arial is the default font 
0, Line, //  Excel can read this OK 
0, Block, /*              * TAPXs are actually PAPXs so we have to make sure we are only             * trying to uncompress the right type of sprm.              */
0, Line, //  Has masses of text   Until we fixed bug #41064, this would've     failed by now 
0, Line, //  the above has been tested 
0, Line, //  A 16-bit value that MUST be 0x0000 and MUST be ignored. 
0, Line, //  We don't have enough data in the record to cover    all the properties the mask says we have 
0, Line, // Test a uncompressed small string that has rich text formatting 
0, Line, //  also ensure that all buffers are unmapped so we do not keep files locked on Windows   We consider it a bug if a Buffer is still in use now!  
0, Line, //  determine font group ranges of the textrun to focus the fallback handling only on that font group 
0, Line, // calculation chain is removed as well 
0, Line, // check the formula 
0, Line, //  A 32-bit unsigned integer that specifies the number of scan lines. 
0, Line, //  and srcRows does not contain null rows 
0, Line, //  special case exponent differs by 1.  There is still a chance that with rounding the two quantities could end up the same 
0, Line, //  Used to format numeric cell values. 
0, Line, //  HeaderBlock 
0, Line, //  Remove the part 
0, Line, //  Doesn't fit, can't be a match 
0, Line, //  If we didn't have a good match or at least except a first empty element 
0, Line, //  try to load picture in gray scale mode   fallback mode for invalid image band metadata   see http://stackoverflow.com/questions/10416378 
0, Line, //  Powerpoint 
0, Line, //  Rename the name, comment comes with it 
0, Line, //  Delete the 2nd sheet 
0, Line, //  Image size (excluding the 8 byte header) 
0, Line, //  Put our test files in a non-standard place 
0, Line, //  Paragraph with table 
0, Line, //  field_9_fill_palette_options bit map 
0, Block, /*  FIXME:  */
0, Line, //  Mark it as being an Icon Set 
0, Block, /*  Get the root directory. It does not have to be created                     * since it always exists in a POIFS.  */
0, Line, //  An optional 32-bit signed integer that specifies how to join two lines that are drawn by the same pen   and whose ends meet. This field MUST be present if the PenDataJoin flag is set in the PenDataFlags   field of the EmfPlusPenData object, and the value MUST be defined in the LineJoinType enumeration 
0, Line, //  check for previous version of file format 
0, Line, // The array of Slide's text runs must be updated when new text shapes are added. 
0, Line, //  just in case we end iteration 
0, Line, //  Next paragraph is all in one style, but a different one 
0, Line, //  bitmap. The value of this field MUST be 0x01. 
0, Line, //  create a control path and knots 
0, Block, /*  do we have to delete from this text piece?  */
0, Line, //  we should have the same color for the column styles 
0, Line, //  x coordinate of first point on ellipse 
0, Block, /*  sprmPIlfo -- 0x460B  */
0, Line, //  comes from the slide master 
0, Line, //  this would cause ClassCastException below 
0, Line, //  pattern of length 1 
0, Line, //  Check slide 3 is as expected (was re-ordered from 2) 
0, Line, //  a double is an IEEE 8-byte float...damn IEEE and their goofy standards an 
0, Line, //  Two named ranges called "name1", one scoped to sheet1 and one globally 
0, Line, //  srcRegion is fully inside the copied rows 
0, Line, //  rectangle and optionally a brush pattern, to achieve the final color. 
0, Line, // NKB Testing only that logging classes use gives no exception      Since logging can be disabled, no checking of logging      output is done. 
0, Line, //  check content of second paragraph 
0, Line, //  Now store a reference to the BAT in the required place 
0, Line, //  were defined in a different workbook 
0, Line, //  auto-filter must be registered in workboook.xml, see Bugzilla 50315 
0, Line, //  Check the fat info looks sane 
0, Line, //  Delete it 
0, Line, // where A2 is defined above 
0, Line, //  There is no summary information yet. We have to create a new one 
0, Line, //  ten column ColumnInfoRecord 
0, Line, //  The first token is empty, the second is the root node 
0, Line, // length of the address including the tail. 
0, Line, //  Check each workbook in turn, and verify that the colours 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#createPromptBox(java.lang.String, java.lang.String)      */
0, Line, //  POI apparently can't create a document from scratch,   so we need an existing empty dummy document 
0, Line, //  Final dummy cell for the end-of-row 
0, Line, //  Then the contents of all the properties 
0, Block, /*  short + short + long */
0, Line, //  We now have 2 BATs, but no XBATs 
0, Line, //  added extra facilitator members   FFN structure containing strings of font names 
0, Line, // now do not include phonetic runs 
0, Line, //  iterate through piece descriptors raw bytes and create 
0, Line, //  Doesn't have data 
0, Line, //  keep only those relationships which id is registered in the sourceIds 
0, Line, //  Special handling for whole-column references 
0, Line, //  SP @ 32 
0, Line, //  Save in ZIP   Add entry in ZIP 
0, Line, //  2nd slide is not updated 
0, Line, //  rearrange the sheets several times to make sure the names always refer to the right sheet 
0, Line, //  docs are wrong (0x231 Microsoft Support site article Q184647) 
0, Line, //  A segment of an EMF file. The bytes in consecutive META_ESCAPE_ENHANCED_METAFILE records 
0, Line, //  4 ints and 2 shorts 
0, Line, // assertEquals("123",     dfUS.formatRawCellContents(-123.321, -1, "0 ?/?;0")); 
0, Line, //  extract text from a powerpoint that has a header in the notes-element 
0, Line, //  First check it isn't on the Workbook 
0, Line, //  Via a POIFSFileSystem, will spot it's actually a .xlsx file    encrypted with the default password, and open 
0, Line, //  long side 
0, Line, //  An array of Count points that specify three points of a parallelogram.   The three points represent the upper-left, upper-right, and lower-left corners of the parallelogram.   The fourth point of the parallelogram is extrapolated from the first three.   The portion of the image specified by the SrcRect field SHOULD have scaling and shearing transforms   applied if necessary to fit inside the parallelogram. 
0, Line, //  +            _cipher.update(_chunk, 0, posInChunk, _chunk);   +            byte bla[] = { (byte)0x7A,(byte)0x0F,(byte)0x27,(byte)0xF0,(byte)0x17,(byte)0x6E,(byte)0x77,(byte)0x05,(byte)0xB9,(byte)0xDA,(byte)0x49,(byte)0xF9,(byte)0xD7,(byte)0x8E,(byte)0x03,(byte)0x1D };   +            System.arraycopy(bla, 0, _chunk, posInChunk-2, bla.length);   +            return posInChunk-2+bla.length;   +        }   +                    int ciLen = (doFinal)                ? _cipher.doFinal(_chunk, 0, posInChunk, _chunk)                : _cipher.update(_chunk, 0, posInChunk, _chunk);          --- src/ooxml/java/org/apache/poi/poifs/crypt/agile/AgileDecryptor.java (revision 1766745)        +++ src/ooxml/java/org/apache/poi/poifs/crypt/agile/AgileDecryptor.java (working copy)                @@ -300,7 +297,7 @@        protected static Cipher initCipherForBlock(Cipher existing, int block, boolean lastChunk, EncryptionInfo encryptionInfo, SecretKey skey, int encryptionMode)        throws GeneralSecurityException {            EncryptionHeader header = encryptionInfo.getHeader();   -        String padding = (lastChunk ? "PKCS5Padding" : "NoPadding");   +        String padding = "NoPadding"; // (lastChunk ? "PKCS5Padding" : "NoPadding"); 
0, Line, //  trigger bug with CArray handling 
0, Line, //  Should be yymmddhhmmssZ 
0, Line, //  Now look at another message 
0, Line, //  In first set, we get a CharFlagsTextProp and a font.size 
0, Line, //  The username gets stored twice, once as US 
0, Line, //  First paragraph is simple 
0, Line, //  rawSheetName == "Sheet1" gets this far. 
0, Block, /*  ******************* fetching methods follow *********************  */
0, Line, //  create a sheet with 300 rows (0-299) 
0, Line, // set data and extraData to empty values to avoid  downstream NPE in case someone calls getEntries on RevisionMarkAuthorTable 
0, Line, // 			// TODO - add proof spreadsheet and compare  			InputStream proofStream = HSSFTestDataSamples.openSampleFileStream("TestDataValidation.xls");  			isSame = compareStreams(proofStream, generatedContent);  		} 
0, Line, //  Add some new text 
0, Line, //  OLE2 - Stream 
0, Block, /*  Write first word.  */
0, Line, //  This is multiple consecutive number cells in one record   Exand this out into multiple regular number cells 
0, Line, //  Now check the iterator 
0, Line, //  A 32-bit unsigned integer that specifies the way to use the region. 
0, Line, //  "=SUMIFS(A2:A9, B2:B9, "<>Bananas", C2:C9, 1)" 
0, Line, //  marshal XAdES-X 
0, Line, //  Simply chain the call to the overloaded convertExcelToCSV(String,   String, String, int) method, pass the default separator and ensure   that certain embedded characters are escaped in accordance with   Excel's formatting conventions 
0, Line, //  else looks like a number 
0, Line, // Test a compressed small string that has rich text and extended text 
0, Line, //  merged regions will be copied after all the rows have been copied 
0, Line, //  allow empty cells 
0, Line, //  270: BETADIST   271: GAMMALN   272: BETAINV   273: BINOMDIST   274: CHIDIST 
0, Line, //  Various Stats formulas on ranges of numbers 
0, Line, //  Condition 1: Cell Value Is   greater than  70   (Blue Fill) 
0, Line, //  Building xml 
0, Line, //  we have no separator 
0, Line, //  Normal cases 
0, Line, // add a picture shape 
0, Line, //  get the ending fc   CHPX lastRun = _textRuns.get(_textRuns.size() - 1);   int endingFc = lastRun.getEnd(); 
0, Line, //  Build the attribute 
0, Line, //  char flags 0x060000 
0, Line, // test reading/serializing of a PICT metafile 
0, Line, //  field len, char data len 
0, Line, // row greater than 0x100000 
0, Line, //  Now we have 3 cases:   (a) the first part couldn't be displayed,   (b) only part of the text run could be displayed   (c) or all chars can be displayed (default) 
0, Line, //  populate enum maps 
0, Line, //  Write out our header, less the size 
0, Line, //  Change again, without notifying 
0, Line, //  125: CELL 
0, Line, //  there will be 2 or 3 extra tAttr tokens according to whether the false param is present 
0, Line, //  Check these stubs have the right stuff on them 
0, Line, //  Verify 
0, Line, //  Evaluate 
0, Line, //  Betweeen __SRP_0 and __SRP_1 just sort as normal 
0, Line, //  Write out the styles 
0, Line, //  Read the properties in once more 
0, Line, // Create relationship between pivotcacherecord and pivotcachedefinition 
0, Line, //  Without currency symbols 
0, Line, //  length 
0, Line, //  aptg is part of a formula in a cell that was just copied to another column   aptg column references should be updated by the difference in columns that the cell was copied   No other references besides the cells that were involved in the copy need to be updated   this makes the column copy significantly different from the column shift, where all references   in the workbook need to track the column shift 
0, Line, //  bug triggers on row index 59 
0, Line, //  only count pairs if both elements are numbers 
0, Line, //  files with XML entities 
0, Line, // noinspection ResultOfMethodCallIgnored 
0, Line, //  plain string 
0, Line, //  Core properties case-- use first CoreProperties part we come across   and ignore any subsequent ones 
0, Line, //  only the root Entry has no parent ... 
0, Line, //  Docs "official" 
0, Line, //  Findbugs: URF_UNREAD_FIELD . Do not delete without understanding how this class works.  this.sheet = sheet; 
0, Line, //  0x464D4520 (LE) 
0, Line, //  Now convert the byte offsets back into record offsets 
0, Line, //  See if we can find it 
0, Line, //  A 32-bit signed integer that defines the horizontal resolution, 
0, Line, //  is then instantiated. 
0, Line, //  get the size of the existing storage 
0, Line, //  -2147483648; 
0, Line, //  case CellType.BLANK 
0, Line, //  line color was not found, check if it is defined in the theme 
0, Line, //  Create some content. 
0, Line, //  Now properties. 
0, Line, //  marshal XAdES-C 
0, Line, //  the alternate font 
0, Line, //  Third is size 24, alt font 
0, Line, //  store the zip content in memory   let s assume it is not Go ;-) 
0, Block, /*  The following declarations are shortcuts for accessing the             * "event" object.  */
0, Line, //  else string has been spilled into next continue record 
0, Line, //  or compare the hashes of the attachment data 
0, Block, /*         final Class<? super T> clazz;        final T instance;        final Class<R> fieldType;        final String fieldName;        final R expected;        final R actual = POITestCase.getFieldValue(clazz, instance, fieldType, fieldName);        assertEquals(expected, actual);         */
0, Block, /*  @see <a href="http://msdn.microsoft.com/en-us/library/dd906097(v=office.12).aspx">2.3.4.5 \EncryptionInfo Stream (Standard Encryption)</a>  */
0, Line, //  Fetch the property value directly 
0, Line, //  An array of CompoundLineDataSize floating-point values that specify the compound line of a pen. 
0, Line, //  dark magenta 
0, Line, //  escape literal characters that would have special meaning in regex 
0, Line, //  Delete logically this part 
0, Line, //  155 -> 160 is the next 
0, Line, //  Write the summary information stream and the document summary 
0, Line, // pap.fNumRMIns 
0, Line, //  Write a 5 block file  
0, Line, //  PageSettingBlock in this file contains PLS (sid=x004D) record   followed by ContinueRecord (sid=x003C) 
0, Line, //  check reading of formulas which are shared (two cells from a 1R x 8C range) 
0, Line, //  Accounting -> 0 decimal places, US currency symbol 
0, Line, //   quoting and scientific notation 
0, Line, //             out.close();          } 
0, Line, //  and finally ensure that exporting to XML works 
0, Line, //  Grab interesting records as they come past 
0, Line, //  Reserve block 0 for the start of the Properties Table   Create a single empty BAT, at pop that at offset 1 
0, Line, //  aka arrow in native 
0, Line, //  values above 90 are mapped to the correct values for compatibility between HSSF and XSSF 
0, Line, //  none of the following properties are set in the shapes and fetched from the master shape 
0, Line, //  make sure the added header / footer records are empty 
0, Line, //  here we can only verify that setting some zoom values works, range-checking is different between the implementations 
0, Line, // the maximum number of arguments depends on the Excel version 
0, Line, //  appended to the StringBuffer. 
0, Line, //  TODO - parse 
0, Line, //  This file has two embeded excel files, an embeded powerpoint     file and an embeded word file, in that order 
0, Line, //  sprmPFInnerTtp -- 0x244c 
0, Line, //  only flush, don't close! 
0, Line, //  compensate for missing tAttrVolatile, which belongs in any formula    involving OFFSET() et al. POI currently does not insert where required 
0, Line, //  DeletedAreaRef 
0, Line, //  4th is underlined 
0, Line, //  OPC handler works / XSSF handler fails 
0, Line, //  MB   MB 
0, Line, //  end public class POIFSReaderEvent 
0, Line, //  Write out, but only the common streams 
0, Line, //  Green (1 byte): An 8-bit unsigned integer that defines the green intensity value for the palette entry. 
0, Line, //  NOSOLAR 
0, Line, //  an area ref can work as a scalar value if it is 1x1 
0, Line, //  usual case 
0, Line, // initialize drawing group id 
0, Line, //  TODO - ensure 2 sub-records (ftCmo 15h, and ftEnd 00h) are always created 
0, Line, // integer, always 2 
0, Line, // the correct order of entries in the test file 
0, Line, //  Check at our level 
0, Line, //  go 
0, Line, //  minus zero can be produced as a result of underflow 
0, Line, //  in pixels-per-meter, of the target device for the DIB. 
0, Line, //  Check we find a few string-literal dates in there 
0, Line, //  center of rotation relative to origin of parent 
0, Line, //  fills and borders are not set 
0, Line, //  How about xlsb? 
0, Line, // Set relationships id for pivotCacheDefinition to pivotCacheRecords 
0, Line, //  Check core details came through 
0, Line, //  otherwise, remove the fraction 
0, Line, //  cell appear as a bulleted item. 
0, Line, // using the findFirstXXXX methods 
0, Line, //  - build a fake styles.xml file with just this built-in 
0, Line, //  Now try to read 
0, Line, //  Can not yet set table or cell width properly, tables default to 
0, Line, //  we need to let the model re-calculate the Range before we use it 
0, Line, // by default hyperlinks are blue and underlined 
0, Line, //  Workbook based name 
0, Line, //  7-6 - reserved bits must be 0 
0, Line, //  If this row doesn't exist, nothing needs to    be done for the now empty destination row 
0, Line, //  The x-coordinate of a spline's second control point. 
0, Line, //  Sine ArcTan Formula: "sat2 x y z" = (x*sin(arctan(z / y))) = value of this guide 
0, Line, //  Remove the _ too 
0, Line, //  expected data is stored in UTF-8 in a text-file 
0, Line, //  "You may not use unions, intersections or array constants in Conditional Formatting criteria" 
0, Line, //  Reset the text on a shared paragraph 
0, Line, //   Calculate the Saturation 
0, Line, //  Based on the amount of text and whitespace used, and the default font   assume that the cell with whitespace should be at least 20% wider than   the cell without whitespace. This number is arbitrary, but should be large   enough to guarantee that the whitespace cell isn't wider due to chance.   Experimentally, I calculated the ratio as 1.2478181, though this ratio may change   if the default font or margins change. 
0, Line, //  tx.storeText(); 
0, Line, //  Data Bars - Column E 
0, Line, //  simple formula worked 
0, Line, //  repeated additions of same share package relationship 
0, Line, // revert 
0, Line, //  What's the relationship between bytes and characters? 
0, Line, //  close but no cigar 
0, Line, //  0 -> 1 -> 2 -> end 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#setErrorStyle(int)      */
0, Line, //  sprmPDyaLine 
0, Block, /*      * parses the metro bytes to a XSLF shape      */
0, Line, //  Icons : 3 symbols 2 (no background) - Column N 
0, Line, //  2 shorts + 1 byte 
0, Line, // read the image using javax.imageio.* 
0, Line, //  discard result 
0, Line, //  Create a new table with 6 rows and 3 columns 
0, Block, /*                  * Blip stored in delay stream, which in a word doc, is the main                 * stream                  */
0, Line, //  330 == 0x014A; 334 == 0x014E 
0, Line, //  optional field 
0, Line, //  ignore padding block 
0, Line, // cache the relId to hyperlink url from the sheet's .rels 
0, Line, //  row "2" is now empty 
0, Line, //  pass 
0, Line, // try the general case, where module.offset is accurate 
0, Line, //  retrieve the cell at the named range and test its contents 
0, Line, //  Note the formula, as stored in the file, has the external name index not filename 
0, Line, //  check for version 2 ... otherwise we don't read any further 
0, Line, //  storing the ops in reverse order since they are popping   whether one of the operands is an area 
0, Line, // size of the record header  size of the picture header 
0, Line, //  Text values are returned unmodified 
0, Line, //  column IDs start at 1, and increase in the order columns are added (see bug #62740) 
0, Line, // let's create a table for the test 
0, Line, // get name of the record by type 
0, Line, //  In the interest of our sanity, now sort the text pieces 
0, Line, //  Note - named ranges formulas have not been updated 
0, Line, //  always activate subsetting 
0, Line, // Add 1 to obtained number 
0, Line, //  YK: how to compare the original path1 and the value returned by XSLFFreeformShape.getPath() ? 
0, Line, //  Decide where we're going to put it 
0, Line, //  Try various ways of changing the formulas   If it stays a formula, chain entry should remain   Otherwise should go 
0, Line, //  tExp and tTbl are always 5 bytes long, and the only ptg in the formula 
0, Line, //  No mini stream, and no xbats 
0, Line, //  assertEquals(530, pLast.getEnd()); 
0, Line, //  And check some chinese bits 
0, Line, //  We need to work on a File for in-place changes, so create a temp one 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#getFormula2()	  */
0, Line, //  Setup our header block   We are a container record 
0, Line, //  Add same border to another cell, should not create another style 
0, Line, //  halfway between the beginning and ending vertices of the arc. 
0, Line, //  Finish up with all the footers 
0, Line, //  Grab the bit to be shifted 
0, Line, //  So far, mini stream will work, keep going 
0, Line, //  default will be taken from master 
0, Line, //  Write the output to a file 
0, Line, //  Delete content type 
0, Line, //  We've already figured out their new location, and   told them that 
0, Line, //  column F:  date / time 
0, Block, /*  Register the listener for all POI files.  */
0, Line, //  data taken from bugzilla 48339 
0, Line, // A B C D E F G H 
0, Line, //  Values array. It MUST be in the range 0 to 16, inclusive. 
0, Line, //  the value of -1.0 resets to the defaults (not any more ...) 
0, Line, //  this value axis crosses its category axis at max value 
0, Line, // 49  99  490  495  499  995  999   990 
0, Line, //  Check paragraph contents 
0, Line, // nominally 100 
0, Line, //  Find it now 
0, Line, // Sheet s = wb.createSheet("sheetname"); 
0, Line, //  create a numeric cell 
0, Line, //  The docs don't explain why Excel set the formula to #REF! 
0, Line, //  External 
0, Line, // Can't use ctRow.getTcList because that only gets table cells  Can't use ctRow.getSdtList because that only gets sdts that are at cell level 
0, Line, //  Must be an external function 
0, Line, //  We're onto a new row 
0, Line, //  This one has lots... 
0, Line, //  (1 -> 2, 2 -> 3) 
0, Line, //  A 32-bit unsigned integer that specifies EMF metafile interoperability. This SHOULD be 0x00010000. 
0, Line, //  is grpprl huge? 
0, Line, //  pageref run 
0, Line, //  if oldIndex < newIndex then this sheet moved right and sheets between oldIndex and newIndex moved left 
0, Line, //  Pointers to the most recent versions of the core records 
0, Line, // don't care, structured references not allowed in conditional formatting 
0, Line, //  Check now set as it should be 
0, Line, //  Fetch the right logger for them, creating 
0, Line, //  Create two paragraphs for insertion into the footer. 
0, Line, //  Quoting is very awkward.  In the Java classes, quoting is done   between ' chars, with '' meaning a single ' char. The problem is that   in Excel, it is legal to have two adjacent escaped strings.  For   example, consider the Excel format "\a\b#".  The naive (and easy)   translation into Java DecimalFormat is "'a''b'#".  For the number 17,   in Excel you would get "ab17", but in Java it would be "a'b17" -- the   '' is in the middle of the quoted string in Java.  So the trick we   use is this: When we encounter a ' char in the Excel format, we   output a \u0000 char into the string.  Now we know that any '' in the   output is the result of two adjacent escaped strings.  So after the   main loop, we have to do two passes: One to eliminate any ''   sequences, to make "'a''b'" become "'ab'", and another to replace any   \u0000 with '' to mean a quote char.  Oy.     For formats that don't use "'" we don't do any of this 
0, Line, //  assertFalse(run._isUnicode); 
0, Line, //  Check things had the right row numbers 
0, Line, //  Check the table sheet 
0, Line, //  If we get here, check it's only made up, in any case, of:    y m d h s - \ / , . : [ ] T   optionally followed by AM/PM 
0, Line, // for now, if formatString is null, silently punt  and use "General".  Not the best behavior,  but we're doing it now in the streaming and non-streaming  extractors for xlsx.  See BUG-61053 
0, Line, //  sequence of META_ESCAPE_ENHANCED_METAFILE records. 
0, Line, //  Must be at least 8 bytes long 
0, Line, //  A 32-bit signed integer that specifies the size in bytes of the BoundaryPathData field. 
0, Line, //  Build up the character runs 
0, Block, /*  Read 8 bytes.  */
0, Line, //  Get each style record, so we can do deletes 
0, Line, //  Get a list of the rows in the table 
0, Line, //  Try first with 512 block sizes, which can hold 128 entries 
0, Line, //   elapsed time patterns: [h],[m] and [s] 
0, Line, //  level 4: default text properties in the shape itself 
0, Line, //  Write in two blocks 
0, Line, //  sprmPFLocked 
0, Line, //  formula 1: "=B3=1" (formula is relative to B4) 
0, Line, //  All sheets should have one row 
0, Line, //  create ellipse 
0, Line, //  found end of functions list 
0, Line, //  records greater then 0xF000 belong to with Microsoft Office Drawing format also known as Escher 
0, Line, //  -2 bytes for sprm - 2 for size short - 2 to correct offsets being 0 based 
0, Line, // the first hyperlink now belongs to A5 
0, Line, // reference name is optional! 
0, Line, //  BLACK_PEN - A black, solid-color pen   PenStyle: PS_COSMETIC + PS_SOLID   ColorRef: 0x00000000 
0, Line, //  create picture shape, which need to be minimal modified for oleshapes 
0, Line, //   may be shared by multiple RichTextStrings! 
0, Line, // assertEquals(3, notes.length); // When we do slide masters 
0, Line, //  Jan 1 2010 
0, Line, //  Get wrong cell by row 8 & column 7 
0, Line, //  optimization to speed up the search for col infos 
0, Line, //  from extractMessageBody   from extractAttachments 
0, Line, //  changing shared formula cell to blank 
0, Line, //  V6 never has separators 
0, Line, //  bug 56295: handle missing applyFill attribute as "true" because Excel does as well 
0, Line, //  test changing a table value, to see if the caches are properly cleared   Issue 59814 
0, Line, //  Check we can't add one with invalid date 
0, Line, //                 	logger.log( POILogger.ERROR, "Mismatch in tail byte [" + i + "]"                      		+ "expected " + (expectedTail[i] & 0xFF) + " but got " + (result[i] & 0xFF));                  }              }      	} 
0, Line, //  The last knot of a spline. 
0, Line, //  if dialog is returned we can't run the test properly. 
0, Line, //  This test makes sure that if any caching is done that getTable never uses a stale cache 
0, Line, //  "/" is escaped for no reason in: mm"/"dd"/"yyyy   replace Excel quoting with Java style quoting   Quote the T is iso8601 style dates 
0, Line, //  Add some cells so we can test that the anchoring works when we   sort them. 
0, Line, //             return;          } 
0, Line, //  Visio's coordinate system is flipped, so flip the image vertically 
0, Line, // non numeric value 
0, Line, //  undefined cells never match a VALUE_IS condition 
0, Line, //  if we're short one add another.. 
0, Line, //  A 32-bit unsigned integer that specifies the number of indexes in the   color table used by the DIB 
0, Block, /*          * Signature context construction.          */
0, Line, //  font size 24 
0, Line, //  test Zip+4 format 
0, Line, //  Now process it through eventusermodel, and 
0, Line, //  196: DVARP 
0, Line, // modify the link 
0, Line, //  Now do the transfer 
0, Line, //  ability to specify that a clear 'border' be placed around the image. 
0, Line, //  Try to get it without extending the stream 
0, Line, //  If there is one, does it have a EscherDggRecord? 
0, Line, //  Do the move 
0, Line, //  Determine buffer size 
0, Line, //  Allocate and write 
0, Line, //  save memory by just using the cell itself as the identity key   Note - this assumes XSSFCell has not overridden hashCode and equals 
0, Line, //  step underlying RecordInputStream to the next record 
0, Line, //  signatureConfig.getNamespacePrefixes().get(XML_DIGSIG_NS)); 
0, Line, //  2 shorts and 4 bytes reserved 
0, Line, //  no PAPX reconstruction   assertEquals(36, pDefs.size()); 
0, Block, /*          * Construct the ds:KeyInfo element using JSR 105.          */
0, Line, //  offset = offset*2;   }   FC = FC+offset;   return FC;   } 
0, Line, //  ( -Dorg.apache.poi.util.POILogger=org.apache.poi.util.SystemOutLogger) 
0, Line, //  username in unicode 
0, Block, /* oneCell     */
0, Line, //  And the third sheet 
0, Line, // 3.3	0.8	5.5	5.5 
0, Line, //  round 
0, Line, //  Set up a new SlidePersistAtom for this slide 
0, Line, //  notes 
0, Line, //  no notes on master 
0, Line, //  slide 4 
0, Line, //  delete starting pos in original coordinates 
0, Line, //  sprmPIstd  
0, Line, // too large 
0, Line, //  password is abc 
0, Line, //  -270 to -360 
0, Line, //  Check that, in the absence of locale support, we handle 
0, Line, //  get data as doubles 
0, Line, //  handled that condition much earlier 
0, Line, //  PointAtom, assume 1st 4 bytes = X   PointAtom, assume 2nd 4 bytes = Y   PointAtom, assume 1st 4 bytes = X   PointAtom, assume 2nd 4 bytes = Y   RatioAtom, assume 1st 4 bytes = from   RatioAtom, assume 2nd 4 bytes = to 
0, Line, //   A1 should be R in the FALSE route 
0, Line, //  use y-scaling for both, reposition x accordingly 
0, Line, //  moved sheet was below before and is above now => active is one less 
0, Block, /* pass negative value for left shift */
0, Line, //  don't write 0x03, stringLen, flag, text 
0, Line, //  cached formula result calculated by Excel   should agree within 0.01% 
0, Line, //  Create references 
0, Line, //  adding the formatting makes it available 
0, Line, //  draw COLS after we know max column number 
0, Line, //  Workbook Factory gives helpful error on file 
0, Line, //  see Bugzilla 47920 
0, Line, //  string converted to boolean OK 
0, Line, //  the function's arguments are pushed onto the stack from left-to-right as OperandPtgs 
0, Line, // Header row 
0, Line, //  args = new String[] { "--out", "", }; 
0, Line, //  try setting the same formula in a cell 
0, Line, //  null test-- null cell should result in empty String 
0, Line, //  mask is 0x070004 
0, Line, //  Note - it is more usual to propagate error codes straight to the result like this:   but logical functions behave a little differently   return e.getErrorEval(); 
0, Block, /* tenthColumn */
0, Line, //  serialize, read back and check that all images are there 
0, Line, //  some files are corrupted 
0, Line, //  NOTE: Creating the endnote does not automatically         create a first paragraph. 
0, Line, //  Source of this relationship 
0, Line, //  Document should start with:     0F 00 E8 03 ## ## ## ##       (type 1000 = document, info 00 0f is normal, rest is document length)     01 00 E9 03 28 00 00 00       (type 1001 = document atom, info 00 01 normal, 28 bytes long)     80 16 00 00 E0 10 00 00 xx xx xx xx xx xx xx xx     05 00 00 00 0A 00 00 00 xx xx xx       (the contents of the document atom, not sure what it means yet)     (records then follow) 
0, Line, //   POIFS any more 
0, Line, //  write and read again 
0, Line, //  First 4 bytes - no idea, normally 0   Second 4 bytes - the id of the link (from 1 onwards)   Third 4 bytes - no idea, normally 4   Fourth 4 bytes - no idea, normally 8 
0, Line, //  4. new index is higher than old one => sheets get moved down 
0, Line, //  Each attachment should have 6 attributes 
0, Line, //  but it is still part of the group 
0, Line, //  NO-BREAK SPACE 
0, Line, //   to ourselves 
0, Line, // we can calculate the preferred size only for JPEG, PNG and BMP  other formats like WMF, EMF and PICT are not supported in Java 
0, Line, //  Now try to build the property set 
0, Line, //  Write and read 
0, Line, //  XAdES-X Type 1 timestamp 
0, Line, //  lookup and result column are different 
0, Line, //  padding byte 
0, Line, //  Mini Stream FAT   Mini Stream data   Properties gone 
0, Line, //  Broken properties? 
0, Line, //  setting cap to null unsets the Cap attribute 
0, Line, //  Message MAPI 
0, Line, //  Grab the 4 byte value that tells us what properties follow 
0, Line, //  Save and reload 
0, Line, //  if 
0, Line, //  Probably incorrect - comparing Object[] arrays with Arrays.equals 
0, Line, //  TestWordToConverterSuite.class, 
0, Line, //  Still to go:    (0x03)Internal    Objects 
0, Line, //  Try to add before a mid-record 
0, Line, //  why was this column group added? 
0, Line, //  OEM_FIXED_FONT - A fixed-width, OEM character set   Charset: OEM_CHARSET   PitchAndFamily: FF_DONTCARE + FIXED_PITCH 
0, Line, //  Try to use the value as a formattable number 
0, Line, //  forth picture 
0, Line, //  just in case - not a typical possibility 
0, Line, //  First we have a 8 byte atom header 
0, Line, //  colfield should be added for the second one. 
0, Line, //  key size for rc4: 0x00000028 - 0x00000080 (inclusive) with 8-bit increments 
0, Line, //  Do a lookup for a match in UCS_RANGES 
0, Line, //  created 
0, Line, //  comments on frompart/topart taken from pkgVisio 
0, Line, //  http://asserttrue.blogspot.de/2010/01/how-to-iimplement-custom-paint-in-50.html 
0, Line, // 			} 
0, Line, //  Need to trim off the alpha 
0, Line, //  index 
0, Line, // +1 for 1-based, +1 for next row 
0, Line, //  Grab the text and tabs of the text run   Do so in a way that preserves the ordering 
0, Line, //  Currently, we don't need to do anything special once   all the chunks have been located 
0, Line, //  Grab the data block 
0, Line, //  Now add a formula that refers to yet another (different) workbook 
0, Line, //  Slightly irregular logic for bounds checking errors 
0, Line, //  "TEST" 
0, Line, //  even row 
0, Line, //      cell will have no borders. 
0, Line, // end column of the break 
0, Line, //  All 
0, Line, //  landscape mode 
0, Line, //  x.xx% 
0, Line, //  fetch the first merged region...EXCEPTION OCCURS HERE 
0, Line, //  Some files have crazy ordering of their continue records   Check that we don't break on them (bug #42844) 
0, Line, //  We can't find it, so add it as a new one 
0, Line, //  Save and check 
0, Line, //  Reset things 
0, Line, // length of the label 
0, Line, //  Step through the ArrayList of MultilLevelListItem instances. 
0, Line, //  avoid tracking dependencies to cells that have constant definition 
0, Line, //  Check the duplicate 
0, Block, /* no instances for static classes */
0, Line, //  "E"   0 
0, Line, //  Mock up a spreadsheet to match the critical details of the sample 
0, Block, /*  Compare the property set stream with the corresponding one         * from the origin file and check whether they are equal.  */
0, Line, //  is sheet dialog sheet   whether to apply automatic styles to outlines   whether summary rows will appear below detail in outlines   whether summary rows will appear right of the detail in outlines   whether to fit stuff to the page 
0, Line, //  circle div 8: 360 / 8 = 45 
0, Line, //  Header isn't FAT addressed 
0, Line, //  Java RegExps are unhelpful, and won't do multiple group captures 
0, Line, //  At the end of a row, handle any comments for "missing" rows before us 
0, Line, //  and the adjustable arrow cap object has a height of 3, the actual arrow cap is drawn 15 pixels high. 
0, Line, //  skip bottom frames (part of junit framework) 
0, Line, //  If only name2 is __XXX then this will be placed after name1 
0, Line, //  An array of RegionNodeCount+1 EmfPlusRegionNode objects. Regions are specified as a binary tree of   region nodes, and each node MUST either be a terminal node or specify one or two child nodes. 
0, Line, //  Now, parse all our QC Bits 
0, Line, //  First child should be the atom 
0, Line, //  SmallRectStruct 
0, Line, //  Add a sheet and re-order 
0, Line, //  Setup our child records 
0, Line, //  this should now fail to insert 
0, Line, //  invoking from cell A4 
0, Line, // setting border to none removes the <left> element 
0, Line, //  And now make it bold 
0, Line, //  no need for an accessible constructor 
0, Line, // must handle sheets with quotas, see Bugzilla #47294 
0, Line, //  write out the FileInformationBlock. 
0, Line, //  marshal the XAdES-T extension 
0, Line, //  restore file order of PAPX 
0, Line, //  Create or Update the Property Set stream in the POIFS 
0, Line, //  And passed it 
0, Line, //  message bodies, saved as plain text (PtypString)   The first short (0x1000, 0x0047, 0x0037) refer to the Property ID (see [MS-OXPROPS].pdf)   the second short (0x001e, 0x001f, 0x0102) refer to the type of data stored in this entry   https://msdn.microsoft.com/endatatypes.Ex-us/library/cc433490(v=exchg.80).aspx   @see org.apache.poi.hsmf.Types.MAPIType  PidTagBody ASCII  PidTagBody Unicode  PidTagMessageSubmissionId ASCII  PidTagMessageSubmissionId Unicode  PidTagSubject ASCII  PidTagSubject Unicode 
0, Line, //  Save content type part. 
0, Line, //  check the rest; 
0, Line, //  Check it took those 
0, Line, //  reset setting to not affect other tests 
0, Line, //  18 @ 122 
0, Block, /*          *  SET Intermediate3 TO Intermediate1 BITWISE OR Intermediate2          */
0, Block, /*  Yes, the current document is a property set stream.                         * Let's create a PropertySet instance from it.  */
0, Block, /* XSSFFont font = */
0, Line, //  cloning again and removing the conditional formatting makes it good again 
0, Line, //  Setup as a copy of a known-good file 
0, Line, //  System.err.println("Section " + x + " was " + sepx.getStart() + 
0, Line, //  Extract and check 
0, Line, //  Work out what version we're dealing with 
0, Line, // getting a sheet by invalid index or non-existing name 
0, Line, // Need to clear the current formatting between the startIndex and endIndex 
0, Line, //  At what point are records continued?    - Often from within the char data of long strings (caller is within readStringCommon()).    - From UnicodeString construction (many different points - call via checkRecordPosition)    - During TextObjectRecord construction (just before the text, perhaps within the text,      and before the formatting run data) 
0, Line, //  discard master if same as base 
0, Line, //  this will only save the very last record of each type 
0, Block, /*  @see <a href="https://msdn.microsoft.com/en-us/library/dd907599(v=office.12).aspx">XOR Obfuscation</a>  */
0, Line, //  Do the auto-size 
0, Line, //  Digits at the end of a function might be due to a left-over footnote marker.   except in these cases 
0, Line, //  check for emf+ embedded pdf (poor mans style :( )   Mac Excel 2011 embeds pdf files with this method. 
0, Line, //  Now check the IF formulas 
0, Line, //  To determine size of aggregate record we have to know size of each DrawingRecord because if DrawingRecord   is split into several continue records we have to add header size to total EscherAggregate size 
0, Line, //  same results in leap years 
0, Line, // continue to dump child records 
0, Line, // from a real file 
0, Line, //  Save in-place, close, re-open and check 
0, Line, //  else source rows include none of the rows of the area ref   check for clashes with destination 
0, Line, //  Currently has a Macros stream 
0, Line, //  An 8-bit unsigned integer that specifies the output quality. The output quality defines how closely   to attempt to match the logical-font attributes to those of an actual physical font. 
0, Line, // check changes in the underlying xml bean 
0, Line, //  Gets the core properties 
0, Line, //  Create a test font and style, and use them 
0, Line, //             nvp.setHidden(true); 
0, Line, //  Starting with a multiple selection, and different active sheet 
0, Block, /*  char 11  */
0, Line, //  Type: 1f  Addr: 01540004  Offset: 347f  Len: 8e8  Format: 46  From: 4312 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getErrorStyle()      */
0, Line, //  -90 to -270 
0, Block, /*      * Open <em>doc2</em> for reading and check summary information and     * document summary information. All properties written before must be     * found in the property streams of <em>doc2</em> and have the correct     * values.      */
0, Line, // Can we make this shorter? 
0, Line, //  only one that ends in '?' 
0, Line, //  Get the slide size type 
0, Line, //  The y-coordinate of an arc's control point relative to the shape's width. 
0, Line, //  get the only row 
0, Line, //  current implementation can't return null 
0, Line, //  for row 
0, Line, //  the evaluation did not encounter errors 
0, Line, //  And it should be of something interesting 
0, Line, //  It is a series of date parts 
0, Line, // we are still an array formula 
0, Line, //  an attempt to register an existing format returns its index 
0, Line, // two level 
0, Line, //  Find the children of 0x4312 
0, Line, //  value changing 
0, Line, //  If we're now at 8 codes, output 
0, Line, //  The polyline formula 
0, Line, //  includes special non-name control characters like ! $ : , ( ) [ ] and space 
0, Line, //  To get the attachments, use ExtractorFactory 
0, Line, //  Dump 
0, Line, // to the Height field in the LogFont object in the LogFont field. 
0, Line, //  If it's clearly junk, bail out 
0, Line, //  row-level policies 
0, Line, //  the number of columns that have AutoFilter enabled. 
0, Line, //  confirm formula parsing is case-insensitive 
0, Line, //  it after we write everything else. 
0, Line, // c = r.getCell((short)1);  assertTrue("expected: A!A1+A!B1 got: "+c.getCellFormula(), ("A!A1+A!B1").equals(c.getCellFormula())); 
0, Line, // assertFalse("column absolute/relative is undefined", ref.isColAbsolute()); 
0, Line, //  Size the initial cell list such that a read only case won't waste    lots of memory, and a create/read followed by adding new cells can 
0, Line, //  specified by this rectangle is scaled to fit the destination rectangle specified by the RectData field. 
0, Line, //  A 16-bit signed integer that defines the height/width, in logical units, of the region frame. 
0, Line, // Test 2D and 3D Area Ptgs (Pxg for OOXML Workbooks)   Note: absolute row changes from last cell to first cell in order 
0, Block, /*          * not fully conform to specification, but the fastest way to make it         * work. Shall be rewritten if any errors would be found -- vlsergey          */
0, Line, //  and assert that POI reads them equally: 
0, Line, //  size=0x0006   unused 
0, Line, //  Process each record as they come in 
0, Line, //  From DXA to DXA: (value should be unchanged) 
0, Line, //  Note - the expected result row coordinates here were determined/verified   in Excel 2007 by manually testing. 
0, Line, //  do nothing 
0, Line, //  Fetch all the problems 
0, Line, // TestCellRangeAddress.class, //converted to junit4  TestCellReference.class, //converted to junit4 
0, Line, //  Add a cell, things move off -1 
0, Line, //  Working with new StyleTextPropAtom 
0, Block, /*  The Word spec has a much smaller list of "valid" values             * to what the large CommonCrawl corpus contains!              */
0, Line, //  skip over the decimal point itself 
0, Line, //  Loop over child records, looking for interesting ones 
0, Line, //  cache for performance: ~30% speedup due to caching 
0, Line, //  Insets are already applied on DrawTextShape.drawContent 
0, Line, //  Write out, re-load 
0, Line, //  a previous rule matched and wants no more evaluations 
0, Line, //  Grab the children's data 
0, Line, //  when dates are equal, result is zero 
0, Line, //  leave fields un-set 
0, Line, //  sRGB has a gamma of 2.2 
0, Line, //  Icons : 3 stars (ext) - Column Q   TODO Support EXT formattings 
0, Line, //  Normal 
0, Line, // create sheet 
0, Line, //  Styles exist in the test document in this order, EmptyCellLayoutStyle   is missing a StyleId 
0, Line, //  Change one on each 
0, Line, //  Xor-Password: abc   2.5.343 XORObfuscation   key = 20810   verifier = 52250 
0, Line, //  caused NPE prior to fix of Bugzilla #48916 
0, Line, //  With a simple 512 block file 
0, Line, //  See comment in writeScientific -- exponent handling is complex.   (1) When parsing the format, remove the sign from after the 'e' and   put it before the first digit of the exponent. 
0, Line, //  The default case is to sort names ignoring case 
0, Block, /*  Write second word.  */
0, Line, // &P == current page number 
0, Line, //  keep first 
0, Line, //  Because $, :, and ! are disallowed characters, A1-style references become just a letter-number combination 
0, Line, //  A string of 64 Unicode characters that contains the font's full name.   Ifthe length of this string is less than 64 characters, a terminating 
0, Line, //  And another, things change 
0, Line, //  reset strategy to re-create the directory 
0, Line, //  wind up and find the root master sheet which must be slide master 
0, Line, //  And the drawing bit 
0, Line, //  Try with a few less usual ones: 
0, Line, //  Other file 
0, Line, //  fix ordering in the low-level xml 
0, Line, //  Re-check 
0, Line, //  also try metadata 
0, Line, //  Create the slideshow object, for normal working with 
0, Line, //   the parent ones 
0, Line, //  Note - zero sid is somewhat unusual (compared to plain Records) 
0, Line, //  Try to figure out the type 
0, Line, //  can hold 
0, Line, //  Do not try to read encrypted files 
0, Block, /*  this field MUST be 0x0001 for add-in referencing  */
0, Line, //  need to wrap checked exception, because of LittleEndianInput interface :( 
0, Block, /*  End OPC Compliance  */
0, Line, //  re-order for sheet "third" 
0, Line, //  Check we're adding row and cell aggregates 
0, Line, //  portrait orientation 
0, Line, //  add the section descriptor bytes to the PlexOfCps. 
0, Line, //  error handling is as if the x is fully evaluated before y 
0, Line, //  Matched for so long, but no more 
0, Line, //  https://stackoverflow.com/questions/21855842   https://stackoverflow.com/questions/39636138 
0, Line, //  Do NOT return before done reading all the structured reference tokens from the input stream. 
0, Line, //  Set to 0 
0, Line, //  NOSONAR   NOSONAR 
0, Line, //  No children, wind on our real length 
0, Line, // JMH: Why +1, hell why not. I guess it made some sense to someone at the time. Doesnt  to me now.... But experience has shown that when the fore is set to AUTOMATIC then the  background needs to be incremented...... 
0, Line, //     {        tabMap.remove(Integer.valueOf(LittleEndian.getInt(grpprl, offset)));        offset += LittleEndian.INT_SIZE;;      }        int addSize = grpprl[offset++]; 
0, Line, //  when there's a dual storage entry, use it, as the outer document can't be read quite probably ... 
0, Line, //  setting sheet name later 
0, Line, //  Add a formula that refers to one of the existing external workbooks 
0, Line, //  5th Feb 2012 = 40944   1st Feb 2012 = 40940   5th Jan 2012 = 40913   5th Dec 2011 = 40882   5th Feb 2011 = 40579 
0, Line, //  Is it on our Workbook? 
0, Line, //  To prevent an exception being thrown when the required width of 
0, Line, //  ignore duplicates 
0, Line, //  The magic for EMF parts, i.e. the byte sequence for "WMFC" 
0, Line, //  commented out the cells overlap implementation, it caused endless loops, see Bug 55380   disabled for now, the algorithm will not detect some border cases this way currently!  return resolveRangeOverlap(range1, range2); 
0, Line, //  Don't close re-used test resources here 
0, Line, //  Read the properties in there 
0, Line, //  Now grab the trailer 
0, Line, //  Normally will never been invoked with the previous   implementation rule [M1.9] 
0, Line, //  Cell show "12月8日" 
0, Line, //  Check after save 
0, Line, //    RtfCompressed -> {\rtf1... 
0, Line, //  we style the second cell as a date (and time).  It is important to create a new cell style from the workbook 
0, Line, //  see bug 55982, quite a number of documents do not have a TabIdRecord and   thus there is no way to do the fixup here,   we use the same check on Tabpos as done in other places 
0, Line, //  Now make the 4th bold, italic and not underlined 
0, Line, //  note - the compressed flag may change on the fly 
0, Line, // set column widths, the width is measured in units of 1/256th of a character width 
0, Line, //  Should have 6 relations:     1 external hyperlink (skipped from list)     4 internal hyperlinks 
0, Line, //  then also do the same for some valid date formats 
0, Line, //  then do the actual moving and also adjust comments/rowHeight   we need to sort it in a way so the shifting does not mess up the structures, 
0, Line, //  left aligned   line spacing 80 
0, Line, //  New file 
0, Line, //  Font color is handled with the other colors 
0, Line, //  Tweak existing one again, to ensure really worked 
0, Line, //  TODO: use EmfPlusHatchBrushData 
0, Line, //  is this font in italics 
0, Line, //  when a bit further apart - normal results 
0, Line, // private final byte mask1;  private final byte mask2; 
0, Line, //  No column found, it's again a special column that accepts formulas. 
0, Line, //  Go looking for our interesting child    streams 
0, Line, //  Check if the part name URI is empty [M1.1] 
0, Line, //  Cosine ArcTan Formula: "cat2 x y z" = (x * cos(arctan(z / y) )) = value of this guide 
0, Line, // Trying to find reference to this sheet 
0, Line, //  Get the IDs of the master and notes 
0, Line, //  clear all the logging from the above initialisation 
0, Line, //  first char run is 21 long 
0, Line, //  an alternative would have been to for non-base Ptgs to set their operand class   from their default, but this would require the call in many subclasses because   the default OC is not known until the end of the constructor 
0, Line, //  character run is 25 long   char flags 0x060000 
0, Line, //  Has one author 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getPromptBoxText()	  */
0, Line, //  delete end point in original 
0, Line, //  B1:INDEX(B1:B3,2) evaluates to B1:B2 
0, Line, //  formula is a StringEval if the validation is by a fixed list.  Use the explicit list later. 
0, Line, //  A 32-bit field that is not used and MUST be ignored. 
0, Line, //  Add multiple border properties to cell should create a single new style 
0, Line, //  Alter 
0, Line, //  sprmCPicLocation -- 0x6A03 
0, Line, //  negative length 
0, Line, //  Level one, id 36870, type 8 
0, Line, //  Swap it over 
0, Line, //  1979 is one year before our pivot year (so this is an expected "failure") 
0, Line, //  only for far east  always 0 in US 
0, Line, //  additional to avoid 2 
0, Line, // ref (6 bytes) not used... 
0, Line, // if there was a problem with the guessed charset and the length of the  textpiece, back off to win1252. This is effectively what we used to do. 
0, Line, // now the span is splitted into 5 individual columns 
0, Line, //  = 2007-06-20T20:59:00-13:00 
0, Line, //  Has 8 number formats 
0, Line, //  Does need preserving on the 2nd part 
0, Line, //  Findbugs: URF_UNREAD_FIELD . Do not delete without understanding how this class works.  private HSSFSheet sheet; 
0, Line, //  new records don't need a mapping, as they aren't in a relation yet 
0, Line, // left edge of the chart  25% of chart's height from top edge of the chart 
0, Line, //  Now the cell is all black 
0, Line, //  Freeze the columns and rows (forget about scrolling position of the lower right quadrant). 
0, Line, //  Now check in detail 
0, Line, //  see bug 62839 
0, Line, //  Will always show up 
0, Line, //  it's important to create the referenced sheet first 
0, Line, // test file based on http://oss.sheetjs.com/test_files/RkNumber.xlsb 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getErrorStyle()	  */
0, Line, // YK:  failed until Bugzilla 53414 was fixed 
0, Line, //  continue record 
0, Line, // return a "singulariry" if ImageIO failed to read the image 
0, Line, // need for dotted borders to show up east 
0, Line, //  short, byte, byte 
0, Line, //  always use the first sheet 
0, Line, //  Might be caused by some tokens like AttrPtg and Mem*Ptg, which really shouldn't   put anything on the stack 
0, Line, //  If one or more functions fail, a single AssertionFailedError is thrown at the end 
0, Line, //  The column in the DB to apply the condition to. 
0, Line, //  field to store the hotspot diagnostic MBean 
0, Line, //  series index   series number 
0, Line, //  and/or distinguishing between tExp and tTbl. 
0, Block, /*      * Returns true if the shape has a drawable geometry associated with it      */
0, Line, //  First up, a simple file with string    based formulas in it 
0, Line, //  Is it already there? 
0, Line, //  calculate radii of ellipse 
0, Line, //  fill is not set 
0, Line, //  Excel counts column A as the 1st column, we    treat it as the 0th one 
0, Line, //  Convert to little endian unicode 
0, Line, //  None found, and not allowed to add in 
0, Line, //  EmfPlusPathGradientBrushData object. 
0, Line, // check range bounds against grid max 
0, Block, /*              * while MAX_ID is Long.MAX_VALUE, this check is pointless. But if             * someone subclasses / tweaks the limits, this check is fine.              */
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createDecimalConstraint(int, java.lang.String, java.lang.String)	  */
0, Line, //  place comment in B2, according to Bug 54920 this removes the comment in A1! 
0, Line, //  marks the start of a list of area expressions which will be naturally combined   by their trailing operators (e.g. UnionPtg) 
0, Line, //  No header is set (yet) 
0, Line, //  a completely different type of file 
0, Line, //  convert 2-d to 1-d array (row by row according to getValueIndex()) 
0, Line, //  A 32-bit unsigned integer that specifies the number of bytes in the EMF stream that remain to be   processed after this record. Those additional EMF bytes MUST follow in the EnhancedMetafileData 
0, Line, //  store everything from end of last match to start of this match 
0, Line, //  This unit test assumes that the user's locale isn't ja-JP and timezone isn't Asia/Tokyo   If this is the case, change the values to something else 
0, Line, //  paragprah is 28 long   paragraph reserved field 
0, Line, // could make sure this is larger than currentRow, according to spec? 
0, Line, //  1-based index of a line style within the style matrix 
0, Line, //  bug 33160 
0, Block, /*  Read all documents from the original POI file system and compare them         * with the equivalent document from the copy.  */
0, Line, //  don't copy default style (style index 0) 
0, Line, //  By byte 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#setEmptyCellAllowed(boolean)	  */
0, Line, //  This value MUST be composed of CustomLineCapData flags 
0, Line, //  Open the package 
0, Line, //  Figure out the number we hold 
0, Line, //  assert that the calculated value agrees with   the cached formula result calculated by Excel 
0, Line, //  Fonts are theme-based in their colours 
0, Line, // the check below failed prior to fix of Bug #47862 
0, Line, //  remove stroke 
0, Line, //  paragraph is 25 long 
0, Line, //  Biff 2 / Excel 2, pre-OLE2   Biff 3 / Excel 3, pre-OLE2   Biff 4 / Excel 4, pre-OLE2   Biff 5 / Excel 5   Biff 5 / Excel 5   Biff 5 / Excel 95   HSSFWorkbook cannot open it as well 
0, Line, //  for the streaming-variant we need to enable autosize-tracking to make it work 
0, Line, //  Try to add a formula for a new external workbook, won't be allowed to start 
0, Line, //  Range 
0, Line, //  test phone number format 
0, Line, //  We don't know all we need to about this font   Since we don't know its sizes, we can't work with it 
0, Line, //  changing from plain cell to formula cell 
0, Line, //   sprmCFUsePgsuSettings 
0, Line, // create a combobox control for each column 
0, Line, //  A y-coordinate of a point on an infinite line; paired with x-coordinate 
0, Line, //  E1, MID is used in the FALSE route, so:    A1 should be V in the IF check 
0, Line, //  set HH:MM:SS fields of cal to 00:00:00:000 
0, Line, //  Test Comment.equals and Comment.hashCode 
0, Line, //  Note - don't change built in fonts (those before 5) 
0, Line, // Strings are equal, and there are no formatting runs. -> 0  Strings are equal, but one or the other has formatting runs -> 1 
0, Line, //  lookup and result row are the same 
0, Line, //    Moving many to a later point in the array   
0, Line, // Make sure that we now say that we are a rich string 
0, Line, // test various date formats 
0, Line, //  From [MS-XLS].pdf 2.5.147 FtLbsData: 
0, Line, //  Update with the new end 
0, Line, //  Hypothetical setup of PSB records which should cause POI to crash 
0, Line, //  create date-formatted cell 
0, Line, //  verify limits-check 
0, Line, //  It's been overriden, use that value 
0, Line, // main part 
0, Line, //  check for an existing cluster, which has space available   see 2.2.46 OfficeArtIDCL (cspidCur) for the 1024 limitation   multiple clusters can belong to the same drawing group 
0, Line, //  One without, from the top 
0, Line, // the third slide uses per-slide headers / footers 
0, Line, //  ignore adding a comma after a deleted char (which was a '#') 
0, Line, //  4 shorts 
0, Line, //  3 short fields + array of shorts 
0, Line, //  must be present, see Bug 51481 
0, Line, //  field_8_adtl_palette_options bit map 
0, Line, //  99 is our FAT block 
0, Line, //  an unknown record with 0 length   a continuation record with 3 bytes of data 
0, Line, // test our maximum values 
0, Line, //  Grab the bytes of the file 
0, Line, //  Rows moved were originally *completely* within the area ref 
0, Line, //  For now, set the anchor type to do not move or resize the   image as the size of the row/column is adjusted. This could easily   become another parameter passed to the method. Please read the note 
0, Line, // count of bytes in the address including the tail 
0, Line, // Add the new sheet to the tabbed pane 
0, Line, //  first set the TabStops in the Master sheet 
0, Line, //  now ( '%' HEXDIGIT HEXDIGIT) 
0, Line, //  Must be for a real slide 
0, Line, //  map some files without extension 
0, Line, //  one special case of ScalarConstantPtg 
0, Line, //  1-based IDs 
0, Line, //  Which big block is this? 
0, Line, //  encoded as a SMTP destination in there. 
0, Line, // far from Excel's calculations 
0, Line, //  wrap around in converting a VERY large long to an int 
0, Line, //  TODO: read the content type from CombObj stream 
0, Line, //  TODO: throw appropriate exception 
0, Line, //  all other Ptgs are immutable and can be shared 
0, Line, //   should terminate if the type isn't 0xf007 or 0xf018->0xf117 
0, Line, //  _fib.getLcbPlcspaMom(), getTextTable().getTextPieces()); 
0, Line, //  We don't currently process the glossary itself   Until we do, we do need to load the glossary child parts of it 
0, Line, //  Now with a simple 4096 block file 
0, Line, //  If we have a mutable output stream, take advantage of that 
0, Line, //  standard property flags, defined in the spec 
0, Line, //  row, col, xfIndex   #DIV/0!, isError 
0, Line, //  all expanded 
0, Line, //  hash > sha1 doesn't work in excel viewer ... 
0, Line, //  sprmPShd  -- 0xc64d  
0, Line, //  double; incorrect format 
0, Line, //  Now without, will have text 
0, Line, //  map from patterns for mimetypes to the FileHandlers that should be able to   work with that file   use a Set<Pair> to have a defined order of applying the matches 
0, Line, //  Complex data follows 
0, Line, //  first copy the source xml 
0, Line, //  shortcut evaluation if reference is outside the bounds of existing data 
0, Line, //  we partially matched the pattern before encountering a non matching byte   we need to serve up the buffered bytes before we go back to NOT_MATCHED 
0, Line, //  For some reason, we have to remove the hyperlinks one by one from the CTHyperlinks array   before unsetting the hyperlink array.   Resetting the hyperlink array seems to break some XML nodes.  worksheet.getHyperlinks().setHyperlinkArray(new CTHyperlink[0]); 
0, Line, //  Check to see whether the image should occupy an exact number of   rows. If so, build the ClientAnchorDetail record to point   to those rows and with an inset of the total number of co-ordinate   position in the row.     To overcome problems that can occur with comparing double values for   equality, cast both to int(s) to truncate the value; VERY crude and 
0, Line, //  paragraph is 54 long   (paragraph reserved field) 
0, Line, //  Is it either Multi-Valued or Variable-Length? 
0, Line, //  Lots of paragraphs with only a few lines in them 
0, Line, //  valid number formats 
0, Line, //  We can see 2 by type 
0, Line, //  Check the evaluated result 
0, Line, //  whitespace gets deleted because formula is parsed and re-rendered 
0, Line, //  set the remaining active/selected sheet 
0, Line, //  Sheet 1 A5 is to another sheet 
0, Line, //  Open from a Stream 
0, Line, //  by default no such actions needed 
0, Line, //  References to try 
0, Line, //  Ensure this is one of ours 
0, Line, //  First page footer is optional, only return 
0, Line, //  _rows.getLastKey() (O(logN)) or caching last row (O(1))?   A test with 1_000_000 rows shows that querying getLastRowNum with lastKey() implementation takes ~40 ms,   and ~1.2 ms with cached implementation. 40 ms is negligible compared to the time of evaluation a million   cells, and the lastKey implementation is much more elegant and less error prone than caching. 
0, Line, //  bitfields for border options 
0, Line, // left  top 
0, Line, // fcMin = _fib.getFcMin() 
0, Line, // the number of merged regions remains the same 
0, Line, //  line end length 
0, Line, //  The resoultion of an image can be expressed as a specific number   of pixels per inch. Displays and printers differ but 96 pixels per   inch is an acceptable standard to beging with. 
0, Line, //  Get row that already exists 
0, Line, //  note however that the cached formula result (2) has not been updated. (POI differs from Excel here) 
0, Line, //  If any ExternalBookBlock present, there is always 1 of ExternSheetRecord 
0, Line, //  The only other formatting convention this class obeys is the UNIX one   where any occurrence of the field separator or EOL character will 
0, Line, //  dest columns overlap bottom of area   - truncate the bottom 
0, Line, //  need to throw away all evaluations, since we don't know how value changes may have affected format formulas 
0, Line, //  sum of all values in the 1st column: 1 + 4 + 7 = 12 
0, Line, //  An empty SlideShow 
0, Line, //  protected int verifierHashSize; 
0, Line, // noinspection UnusedDeclaration 
0, Line, // do Ole stuff 
0, Line, //  Check we got another BAT 
0, Line, //  What the next mask byte to output will be 
0, Line, //  Non-required hyphens to zero-width space 
0, Line, // try adding empty rows in an existing worksheet 
0, Line, //  How many do we have? 
0, Block, /*  documents with multiple edits need to be normalized for encryption  */
0, Line, //  we assume the cell has been evaluated, and the current formula value stored 
0, Line, //  Shift rows 6 - 11 on the spreadsheet to the top (rows 0 - 5) 
0, Line, //  unset any existing text 
0, Line, //  These two format calls return the same thing, as expected: 
0, Line, //  0.5" 
0, Line, //  Once the line is built, write it away to the CSV file. 
0, Line, // stub object to throw off list INDEX operations 
0, Line, //  Skip the header row 
0, Line, //  $B$1:$B$8 
0, Line, //  With the password, is properly processed 
0, Line, // update formulas on other sheets 
0, Line, //  +2 for INDEX and DBCELL 
0, Line, //  (At least, not unit we fix bug #56752 that is) 
0, Line, //  http://en.wikipedia.org/wiki/Internal_rate_of_return#Example 
0, Line, //  But not from the others 
0, Line, //  http://arachnoid.com/lutusp/finance.html 
0, Line, //  (the fields as they appear in the raw record:) 
0, Line, //  Change 2nd to different size and font 
0, Line, //  See bug 59958: Add cells on the fly to the evaluation sheet cache on cache miss 
0, Line, //  A 32-bit unsigned integer that specifies the number of focus scales. This value MUST be 2. 
0, Line, //  A1:E1 should be moved to A2:E2 
0, Line, //  Data 
0, Line, // collect cells holding shared formulas 
0, Line, //  the added font is the last in the list 
0, Line, // or compare the hashes of the attachment data 
0, Line, // unset highest bit  unset highest bit (if it exists?) 
0, Line, //  Excel 2010 gives 0.775280898876405 
0, Line, //  Rows are 1 to 713 
0, Line, //  Check it  
0, Line, //  Skip to the right place in it   (It should be positioned already at the start of the block, 
0, Line, //  And allocate the XBAT in the BAT 
0, Line, //  Now start on cells 
0, Line, //  Must be at least 16 bytes long 
0, Line, //  second arg converts to int by truncating toward zero 
0, Line, //  slightly more complex one failed 
0, Line, //  "0.060000000000000005" 
0, Line, //  fails as of POI 3.1 
0, Line, //  setup the stroke for this line 
0, Line, // Test 2D and 3D Ref Ptgs with absolute row 
0, Line, //  Now onto the cells 
0, Line, //  Using streaming XSSFWorkbook makes the output file invalid 
0, Line, // num lines  selected 
0, Line, //  And check a few low level bits too 
0, Line, //  salt size 
0, Line, //  Move this sheet at the first position 
0, Line, //  This rectangle is applied to the text output performed by the containing record. 
0, Line, //  mask is 0x1800   right aligned 
0, Line, //  first scan the slide relations 
0, Line, //  Check x, y, width, height 
0, Line, //  Initialize _txtrun object.   (We can't do it in the constructor because the sheet    is not assigned then, it's only built once we have    all the records) 
0, Line, // Set the third column as filter 
0, Line, //  correct behaviour 
0, Line, // Need to sort the font runs to ensure that the font runs appear in  character order 
0, Line, //  Extractor primed on the 1 page but text-box'd test data 
0, Line, //  314: STEYX 
0, Line, //  Do we read or map (for read/write)? 
0, Line, //  The value MUST be in the XHeight enumeration table. 
0, Line, //  1d shapes are interesting, they create connections 
0, Line, //  Dummy content again 
0, Line, // {--------------------------------------------------------------}  { Parse and Translate an Assignment Statement } 
0, Line, //  First slideId is always 256 
0, Line, //  Reset the text on a shared paragraph+character 
0, Line, //  Turn the list into an array 
0, Block, /*              * This is a seriously sick fix for the fact that some .xlsx files contain raw bits             * of HTML, without being escaped or properly turned into XML.             * The result is that they contain things like &gt;br&lt;, which breaks the XML parsing.             * This very sick InputStream wrapper attempts to spot these go past, and fix them.              */
0, Line, //  Each mapping in this Map has a key consisting of a   DocumentDescriptor and a value consisting of a Set of   POIFSReaderListeners for the document matching that   DocumentDescriptor; used when a document is found, to quickly 
0, Line, //  just the TXO record 
0, Line, //  General container record handling code 
0, Line, //  An 8-bit unsigned integer that specifies an italic font if set to 0x01; 
0, Line, //  this sometimes caused exceptions 
0, Line, //  FILEPASS 
0, Line, //  similar to tAttrSpace - RPN is violated 
0, Line, //  this is a new error. ok to throw 
0, Line, //  Again with Java style 
0, Line, //  Date 
0, Line, // 0x20, 0x40, 0x60   0x21, 0x41, 0x61  0x22, 0x42, 0x62   0x23, 0x43, 0x63   0x24, 0x44, 0x64   0x25, 0x45, 0x65   0x26, 0x46, 0x66   0x27, 0x47, 0x67   0x29, 0x49, 0x69   0x2a, 0x4a, 0x6a   0x2b, 0x4b, 0x6b   0x2c, 0x4c, 0x6c   0x2d, 0x4d, 0x6d 
0, Line, // id of the created border 
0, Line, //  Then the mask field 
0, Line, //  x   y   width   height 
0, Line, //  Do the normal format 
0, Line, //  For zero, should be Space + currency symbol + spaces + Minus + spaces 
0, Line, // set proxy info if any 
0, Line, //  carry up due to rounding   For clarity these tests choose values that don't round in java,   but will round in excel. In some cases there is almost no difference 
0, Line, //  _row.cArray and _cells.getCTCell might be out of sync after adding/removing cells,   thus we need to re-order it here to make the resulting file correct 
0, Block, /*              * Custom properties enable users to define custom metadata properties.              */
0, Line, //  Intentionally ignore the last column (tika-1132), for now 
0, Line, //  Create a cell and put a date value in it.  The first cell is not styled as a date. 
0, Line, //  For logging 
0, Block, /*  high ansi  */
0, Line, //  Merge hyperlink - since srcCell doesn't have a hyperlink, destCell's hyperlink is not overwritten (cleared). 
0, Line, //  If it's a FILEPASS, track it specifically 
0, Line, //  Check there's still data left to read 
0, Line, //  Then we need to clone the format string, 
0, Line, //  Copy directories 
0, Line, // multiply by 128^i 
0, Line, //  Page 54 of public specification begins 
0, Line, //  Adding / changing 
0, Line, //  "B"   "C"   "F"   "L"   "N" 
0, Line, // YK: Excel 2007 leaves this field unset 
0, Line, //  Keep going if not yet at end 
0, Line, // EscherDgg is a document-level record which keeps track of the drawing groups 
0, Line, //  21.17 cm / 2.54 cm/inch * 72dpi * 20 = 12000   15.88 cm / 2.54 cm/inch * 72dpi * 20 = 9000 
0, Line, //  else - bottom area column has been replaced - both area top and bottom may move now 
0, Line, //  or PNG image buffer, respectively. 
0, Line, //  Now try with a few sample files 
0, Line, //  Fake from the 8 bit version 
0, Line, //  boundaries. 
0, Line, //  first remove encryption 
0, Line, //  Now the file versions, 2+1+1 
0, Line, //  if the attribute does not exist, the slide is shown 
0, Line, //  currently for testing only - needs review 
0, Block, /*  Create a mutable property set and write it to a POIFS:  */
0, Line, //  represented by the Y cell. 
0, Line, //  column C: $#,##0.00 
0, Line, //  and, naturally, produces a NUM_ERROR 
0, Line, //  positons there are per millimetre 
0, Line, // !! Handle fractions: The previous set of digits before that is the numerator, so we should stop short of that 
0, Line, // 		XWPFDocument document = createDocumentFromSampleFile("test-data/document/documentProtection_no_protection.docx"); 
0, Line, //  set localeIsAdapting so subsequent checks perform correctly   (whether a specific locale was provided to this DataFormatter or DataFormatter should 
0, Line, //  following wont work properly 
0, Line, //  0 as a fraction is reported by excel as 0/1 
0, Line, //  Tick bullets 
0, Line, //  test all possible characters 
0, Line, //  this data seems to have 2 extra bytes of padding more than usual 
0, Line, //  no instances of this static class 
0, Line, // It _should_ be 0x00010000 
0, Line, //  Free it 
0, Line, //  font.color only   red 
0, Line, //  wait for all threads 
0, Line, //  right 
0, Line, //  Make sure other rows are blank (off-by-one errors) 
0, Line, //  percent of a text quantity 
0, Line, // Voila! we created a workbook from the embedded OLE data 
0, Line, //  Ignore the next 24, for now at least 
0, Line, //         {   
0, Line, //  need preceding Text[Chars|Bytes]Atom to initialize the data structure 
0, Line, //  create cells with good date patterns 
0, Line, //  Normal bullet points 
0, Line, //  This slide lacks notes   Not all have them, sorry... 
0, Line, //   add a bit without needing a resize 
0, Line, //  note - Character.isJavaIdentifierPart() would allow dollars '$' 
0, Line, //  Try adding a format beyond the upper limit 
0, Line, //  the bug is that the following relation is gone 
0, Line, // macro comes from Common Crawl: HRLOXHGMGLFIJQQU27RIWXOARRHAAAAS 
0, Line, //  Check we got bits from the main message 
0, Line, //  And should have lots of children 
0, Line, //  data written after the all tokens:   column, row 
0, Line, //  Gathers characters as they are seen. 
0, Line, //  Used to blow up with an IllegalArgumentException    when creating a FileSharingRecord 
0, Line, //  text-extraction is not possible currently for these types of files 
0, Block, /*  govdocs1 064213.doc-0.emf contains an example of extextouta  */
0, Line, //  create a new file input stream with the input file specified   at the command line 
0, Line, //  we used to process the data via a PushbackInputStream, but user code could provide a too small one   so we use a BufferedInputStream instead now 
0, Line, //  Check they're still there 
0, Line, //  getVerticalAlignment should return either an XWPFVertAlign enum or null if not set 
0, Line, //  An 8-bit unsigned integer that specifies the serif style. 
0, Line, //  Note - SharedFormulaRecords are currently not re-serialized by POI (each is extracted 
0, Line, //  single quotes (') are encoded as ('') 
0, Line, //  cat axis 2 (lines) 
0, Line, // now try turning them off 
0, Line, //  deliberately over-size   16 chars 
0, Line, //  Now set it to not bold 
0, Line, //  Figure out the Hyperlink type and destination 
0, Line, //  As per the constructor contract, always close the stream 
0, Line, //  The x-coordinate of the ending vertex on an arc relative to the width of 
0, Line, //  Somewhat user facing getters 
0, Line, //  TODO: initialize headers 
0, Line, //  this will be done, when the paragraph is saved 
0, Line, //       _pap = new ParagraphProperties();        _chp = new CharacterProperties(); 
0, Line, //  Validate 
0, Line, // sort found records by offset.  (it is not necessary but SlideShow.findMostRecentCoreRecords() expects them sorted)   offset -> record   offset -> persistId 
0, Line, //  Check if the specified part name already exists 
0, Line, //  move keyinfo into the right place 
0, Line, //  Embedded objects stored in storage records in the document stream, lazily populated. 
0, Line, //  Unprotected, no password given, opens normally 
0, Line, // 		System.err.println("'"+text.substring(text.length() - 40) + "'"); 
0, Line, // arbitrarily set, may need to increase 
0, Line, //  expected here because create() in this case expects an object of type "OPCPackage" 
0, Line, //  document summary stream   from test1-excel.doc attached to Bugzilla 52337 
0, Line, //  shifted rows 
0, Line, //  followed by the grpprl 
0, Line, //  Use the default logger if none specified, 
0, Line, //  Now check we can turn all the numeric 
0, Line, // red is the index to the color scheme 
0, Line, //               existing = getCipher(skey, header.getCipherAlgorithm(), header.getChainingMode(), header.getKeySalt(), encryptionMode, padding);            } 
0, Line, //  make sure POI properly truncates the ObjRecord data 
0, Line, //  Happens only as a result of a call to FormulaParser.parse(), with a non-built-in function name 
0, Line, //  A 32-bit unsigned integer that defines the vertical coordinate value of the rendering origin. 
0, Line, //  Check a couple at random 
0, Line, //     throw new IllegalArgumentException("srcRows must contain continuously increasing row numbers. " +              "Got srcRows[" + (index-1) + "]=Row " + prevRow.getRowNum() + ", srcRows[" + index + "]=Row " + curRow.getRowNum() + ".");   FIXME: assumes row objects belong to non-null sheets and sheets belong to non-null workbooks. 
0, Line, //  Can't go off the end 
0, Line, //  Set up some data and the formula 
0, Line, //  resize the shape to fit text 
0, Line, //  adjust all the affected comment-structures now   the Map is sorted and thus provides them in the order that we need here,  
0, Line, //  Turn the vector into an array, and return 
0, Line, //  ... group shapes have their own getXfrm() 
0, Line, // 			stream.close();  		}  	} 
0, Line, //  PowerPoint seems to store files with \r as the line break 
0, Line, //  OLE Name hasn't been specified, pass the input through 
0, Line, //  ii-CN, ja-JP, ko-KR, zh-CN,zh-HK, zh-MO, zh-SG, zh-TW 
0, Line, // Mock value 
0, Line, //  Two sheets -> two notes   Note: there are also notes on the slide master 
0, Line, //         // If there's no PlcfHdd, nothing to do 
0, Line, // check if template's merged regions are OK 
0, Line, //  Has two children 
0, Line, //  bits 4-5 reserved 
0, Line, //  Send the POIFSFileSystem object out to the underlying stream 
0, Line, //  scale window bounds to output bounds 
0, Line, //  Past the end 
0, Line, // COPIED FROM https://svn.apache.org/repos/asf/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFCell.java since the functions are declared private there 
0, Line, //  if all crop values are zero (the default) then no crop rectangle is set, return null 
0, Line, //  A 32-bit signed integer that specifies the width in pixels of the area occupied by the bitmap. 
0, Line, //  2010/06/17 23:52:19 GMT 
0, Line, // unused (2 bytes as we're using double-byte chars) 
0, Line, //  A 32-bit signed integer that specifies the height of the horizontal brush stroke, in logical units. 
0, Line, //  v2 version opcode   version number of new picture 
0, Line, //  not sure if 'equals()' works when url has a directory 
0, Line, //  32767 is okay 
0, Line, //  for formula cells we compute the cell width for the cached formula result 
0, Line, //  string startPos 
0, Line, //  The stream at 0x347f has strings   The stream at 0x4312 has a pointer to 0x347f   The stream at 0x44d3 has a pointer to 0x4312    (it's the 2nd one of 3, and the block is compressed) 
0, Line, //  set the sheet name to HSSF Test 
0, Line, //  anything but column A 
0, Line, // this is necessary to prevent overflow in the maxDenom calculation 
0, Line, //  \u2122 is the encoding of the trademark symbol ... 
0, Line, //  some scrap left over, if nAvailable > 0?   ex45582-22397.xls has one extra byte after the last record   Excel reads that file OK 
0, Line, //  check the upper edge of the IntPtg range: 
0, Line, //  Now check the real ranges 
0, Line, //  Create a file with a 2gb entry 
0, Line, //  Should be 26bc bytes un-compressed 
0, Line, // This test forces the loading of CTMoveBookmark and  CTMoveBookmarkImpl into ooxml-lite. 
0, Block, /*  unsignedSigProps =  */
0, Line, //  non-even division of _workbook_size, also non-even division of   any block size 
0, Line, //  Have it setup, with suitable defaults 
0, Line, //  plain cell ref, col is in range 
0, Line, //  No notes for this slide 
0, Line, //  A 32-bit signed integer that defines the height of the DIB, in pixels.   This value MUST NOT be zero.   - If this value is positive, the DIB is a bottom-up bitmap,     and its origin is the lower-left corner.     This field SHOULD specify the height of the decompressed image file,     if the Compression value specifies JPEG or PNG format.   - If this value is negative, the DIB is a top-down bitmap, 
0, Line, //  Default drawingNumber = #drawings.size() + 1 
0, Line, //  The commented out ones haven't been tested yet or aren't supported   by HSSFSimpleShape. 
0, Line, //  Build and decompress the Chp if required 
0, Line, //  Simple case - single link from wbA to wbB 
0, Line, //  We have one BAT at block 99 
0, Line, //  sprmCIcoBi 
0, Line, //  sprmTCellPaddingDefault -- (0xd634)   TODO: extract into CSSA structure 
0, Block, /*          * plcfbteChpx (bin table for CHP FKPs) Written immediately after the         * previously recorded table. This is recorded in all Word documents.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Line, //  nothing to do 
0, Line, //  y basis   height basis 
0, Line, //  BrcXXX1 is older Version. Brc is used   case 0x1c:   newPAP.setBrcTop1((short)param);   break;   case 0x1d:   newPAP.setBrcLeft1((short)param);   break;   case 0x1e:   newPAP.setBrcBottom1((short)param);   break;   case 0x1f:   newPAP.setBrcRight1((short)param);   break;   case 0x20:   newPAP.setBrcBetween1((short)param);   break;   case 0x21:   newPAP.setBrcBar1((byte)param);   break; 
0, Line, //  match one or more occurrences of any character 
0, Line, // parts can go missing; Excel ignores them silently -- TIKA-2134 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createTimeConstraint(int, java.lang.String, java.lang.String, java.lang.String)	  */
0, Line, //  as getShapes() 
0, Line, //  Rule M4.2 
0, Line, //  We've been writing to the stream as we've gone along   Update the details on the property now 
0, Line, //  14 @ 4082 
0, Line, //  Because the 3 first rows are missing, should have last-of-row records first 
0, Line, //  An optional 32-bit signed integer that specifies the shape for the start of a line in the   CustomStartCapData field. This field MUST be present if the PenDataStartCap flag is set in the   PenDataFlags field of the EmfPlusPenData object, and the value MUST be defined in the LineCapType enumeration 
0, Line, //   length is the last 4 bits) 
0, Line, //  To: 'Ashutosh Dandavate' <ashutosh.dandavate@alfresco.com>,     'Paul Holmes-Higgin' <paul.hh@alfresco.com>,     'Mike Farman' <mikef@alfresco.com>   Cc: nickb@alfresco.com, nick.burch@alfresco.com,     'Roy Wetherall' <roy.wetherall@alfresco.com>   Bcc: 'David Caruana' <dave.caruana@alfresco.com>,     'Vonka Jan' <roy.wetherall@alfresco.com> 
0, Line, //  0 -> 1 -> 2 -> END 
0, Line, //  Last one is always one larger 
0, Line, //  The 'Match' column will contain 'OK' if the metadata (from NumberToTextConversionExamples) 
0, Line, //  Two sheets - master sheet is separate 
0, Line, //  no flags set   row inp row 4 
0, Line, //  record to the DIB bits, if the record contains a DIB. 
0, Line, //  can do it properly 
0, Line, //  Check we got the sheet names (new formats only) 
0, Line, //  Finally we need an EoF record 
0, Line, //  Has data 
0, Line, // check we can correctly read column widths from a reference workbook 
0, Line, //  END OF 
0, Line, //  A1-style notation 
0, Line, //  Rule M4.3 
0, Block, /*         Iterator<XSSFSheet> it = wb.iterator();        XSSFSheet sh = it.next();        sh.createRow(0);         */
0, Line, //  Spot corrupt records 
0, Line, //  register the SupBookRecord in the ExternSheetRecord 
0, Line, //  Continues   Ends   Free 
0, Line, //  1 Jan 1900 is 1 day after 31 Dec 1899 
0, Line, //  might depend on empty parts being saved, e.g. some unit tests verify this currently. 
0, Line, //  set left and right margins to 200pt. This leaves 200pt for wrapping text 
0, Line, //  column not found 
0, Line, //  Set Cell Color : AQUA 
0, Line, // noinspection SimplifiableIfStatement 
0, Line, //  shall not be NPE 
0, Line, //  when anchor is initialized without parameters, the comment anchor attributes default to   "1, 15, 0, 2, 3, 15, 3, 16" ... see XSSFVMLDrawing.newCommentShape() 
0, Line, //  ----------- 
0, Line, //  finished with concat expression 
0, Line, //  roll to last when curIdx == 0 
0, Line, //  X=shift, Y=ok 
0, Line, // length of the label  label 
0, Line, //  no extractor in classpath 
0, Line, //  see if we couldn't fit some 
0, Line, //  https://stackoverflow.com/questions/24676460 
0, Block, /*  mainly to escape row failures on MDETERM which only returns a scalar  */
0, Line, //  A 32-bit unsigned integer that specifies a raster operation code.   These codes define how the color data of the source rectangle is to be combined with the color data   of the destination rectangle and optionally a brush pattern, to achieve the final color. 
0, Line, //  the sheet's drawing is not aggregated 
0, Line, //  Bug 58648: FormulaParser throws exception in parseSimpleFactor() when getCellFormula()   is called on a cell and the formula contains spaces between closing parentheses ") )" 
0, Line, //  Target converted in URI 
0, Line, //  270 to 360 
0, Line, //  and therefore need to change the cipher too 
0, Block, /*  Now create the target directory:  */
0, Line, //    Moving many to an earlier point in the array   
0, Line, //  Check we have enough data, and tweak the header size 
0, Line, //  Copy CellStyle 
0, Line, // case 3: 
0, Line, //  Now ensure that the header size is correct 
0, Line, // Sheet newSheet = wb.createSheet(sheetName); 
0, Line, //  Ensure the JCE policies files allow for this sized key 
0, Line, //  estimate pow2&pow10 first, perform optional mulShift, then normalize 
0, Line, //  Doesn't have a directory 
0, Line, //  Fourth is 96 long, underlined and different+bigger font 
0, Line, //  Draws a set of line segments and Bezier curves. 
0, Line, //  copied from org.apache.poi.sl.TestHeadersFooters because of scratchpad.ignore option 
0, Line, //  bug 46206 alludes to files which skip the DIMENSION record   when there are no row/cell records.   Not clear which application wrote these files. 
0, Line, //  org.apache.poi.hwpf.sprm 
0, Line, //  First command 
0, Line, //  gradient paint on the same point throws an exception ... and doesn't make sense   also having less than two fractions will not work 
0, Line, //  Check we can get the shapes count 
0, Line, //  For some reason, a date of 0 in Excel gets shown 
0, Line, //  Given as explicit sheet id 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#createPromptBox(java.lang.String, java.lang.String)	  */
0, Line, //  changed original data: ... 0x41 and 0x06 don't match   the bitmask text properties will sanitize the bytes and thus the bytes differ 
0, Line, //  this matches JPG, but is not long enough, previously this caused an Exception 
0, Block, /*  The class has a renderer.  */
0, Line, //  print additional information for drawings and atoms 
0, Line, //  One of which is Text 
0, Block, /*      * initialize a smaller piece of the array and use the System.arraycopy      * call to fill in the rest of the array in an expanding binary fashion      */
0, Line, //  Option A: 
0, Line, //  has exponent 
0, Line, //  save memory by just using the cell itself as the identity key   Note - this assumes HSSFCell has not overridden hashCode and equals 
0, Line, //                biggest, tenthColumn, tenthRow, box10x10, box9x9, box10to20c, oneCell 
0, Line, //   won't know to clear the cache 
0, Line, //  Rule M4.4 
0, Line, //  properties documents are read lazily, so we have to access them to verify they parse properly 
0, Block, /*      * Test apply(Object value) with a number as parameter      */
0, Line, //  Call should modify the contents 
0, Block, /*  east asia  */
0, Line, //  check if there is anything to save for some parts. We don't do this for all parts as some code 
0, Line, //  4 shorts + 1 long + 2 spurious 'nul's 
0, Line, //  Reference to a workbook scoped named range 
0, Line, //  A 16-bit signed integer that defines the width of the bitmap in pixels. 
0, Line, //  from row 3  
0, Line, //  Build up how long the code sequence is, and    what position of the code to start at   (The position is the usually the first 12 bits,  
0, Line, //  If we get here, it isn't an encrypted PPTX file 
0, Line, //  A currency symbol / string, in a specific locale 
0, Line, //  Checks whether 5 equals 4 (0)   Checks whether 5 equals 5 (1) 
0, Line, //  fake SID   first rec len 18 (15 + next 3 bytes)   total chars 18   this bit compressed 
0, Line, // DIB data is the header + dib bytes 
0, Line, //  looking for "Stacked Bar Chart"? uncomment the following line   bar.setBarGrouping(BarGrouping.STACKED); 
0, Line, //  Rule M4.5 
0, Line, //  render it 
0, Line, //  Now, update the byte level locations with their latest values 
0, Line, //  run some method on the font to verify if it is "disconnected" already 
0, Line, //  Match up the records and the SlideAtomSets 
0, Line, //  An EmfPlusRectF object that defines a portion of the image to be rendered. 
0, Line, //  Check properties are still there 
0, Line, // newly created drawing 
0, Line, //  value type is changing 
0, Block, /* 		 * token = 1*<any CHAR except CTLs or separators>		 *		 * separators = "(" | ")" | "<" | ">" | "@" | "," | ";" | ":" | "\" |		 * <"> | "/" | "[" | "]" | "?" | "=" | "{" | "}" | SP | HT		 *		 * CTL = <any US-ASCII control character (octets 0 - 31) and DEL (127)>		 *		 * CHAR = <any US-ASCII character (octets 0 - 127)>		  */
0, Line, //  This used to complain about lacking guts records 
0, Line, //  create the XAdES-T time-stamp 
0, Line, //  add mapping a second time, in case of initial caller hasn't done so 
0, Line, //  example will be re-used 
0, Line, //  The bits in RefNPtg indicate offset, not relative/absolute values! 
0, Line, //  [MS-DOC], v20140721, 2.6.4, sprmSRncEdn         
0, Line, //  Record the structure 
0, Line, //  Create them 
0, Line, //  remove range2 
0, Line, //  Best hope it's OLE2.... 
0, Line, //  the path described by this document 
0, Line, //  2nd SBAT    2nd SBAT   3rd SBAT   3rd SBAT 
0, Line, //  Need to add on the style to the font name 
0, Line, //  To make bug occur, rowIndex needs to be >= ValueRecordsAggregate.records.length 
0, Line, //  Which is the 72nd command 
0, Line, //  Only make cell references as needed. Memory is an issue 
0, Line, //  if the font group specific font wasn't defined, fallback to LATIN 
0, Line, //  corrupt/invalid 
0, Line, //  Group our children together into SlideAtomsSets   That way, model layer code can just grab the sets to use, 
0, Line, //  Strings are equal, and there are not formatting runs. 
0, Line, //  landscape orientation 
0, Line, //  false, true   true, true   false, true 
0, Line, //  Different char styles 
0, Line, //  Read part of a block 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getPromptBoxTitle()	  */
0, Line, //  B1 
0, Line, //  a very simple file 
0, Line, //  Write out our fields 
0, Line, //  only asserting accuracy to 4 fractional digits 
0, Line, //  Onto row 4 (=3) 
0, Line, //  cbExtra 
0, Line, //  Create some test data 
0, Line, // else step == 0 => nothing to shift 
0, Line, //  byteLength depends on whether we are using single- or double-byte chars. 
0, Line, // now remove the formula, the cached formula result remains 
0, Line, // this is what we'd expect  swallow 
0, Line, //  Can get the size of zip parts 
0, Line, // 5 properties found 
0, Line, // Clone the sheet multiple times 
0, Line, //  could do a check here to make sure none of the ranges overlap 
0, Line, //  Validate input 
0, Line, //  Should also check the placeholder IDs at some point 
0, Line, //  styles we did not intend to (the ones that _were_ duplicated and not the duplicates) 
0, Line, //  Grab any records that interest us 
0, Line, // Ensure that the SharedFormulaRecord has been converted 
0, Line, //  feed the corrupted zip file to OPCPackage 
0, Line, //  The ratio of an arc's major axis to its minor axis. Despite the usual   meaning of these words, the "major" axis does not have to be greater than   the "minor" axis, so this ratio does not have to be greater than 1.   Setting this cell to a value less than or equal to 0 or greater than 1000 
0, Line, //  The raw length of a code is limited to 4 bits + 2 
0, Line, //  Aqua background 
0, Line, //  Latin Hand Written 
0, Line, //  Change existing 
0, Line, //  ignore frame bounds 
0, Line, // the third sheet is of type 'chartsheet' 
0, Line, //  Passing either null or an empty ArrayList will signal that   there are no lower level items associated with the top level 
0, Line, //  nothing to skip - true param follows 
0, Line, //  100% scaling, that is, no change. See 17.3.2.43 w (Expanded/Compressed Text) 
0, Line, // coefficient to translate from WMF dpi to 72dpi 
0, Line, //  convert to zero-based 
0, Line, //  First 2 Mini blocks will be used 
0, Line, // For each drawing group PPT allocates clusters with size=1024  if the number of shapes is greater that 1024 a new cluster is allocated 
0, Line, //  On slide three, we should have:   TR:     You are an important supplier of various items that I need     .   TR:     Source: Internal focus groups   TR:     Illustrative Example     . 
0, Line, //  3rd read works 
0, Line, //  B3 
0, Block, /*         DecimalFormat format = new DecimalFormat("#.##########", new DecimalFormatSymbols(Locale.getDefault()));        double d = 3.0E-104;        assertEquals("3.0E-104", format.format(d));          */
0, Block, /* PKIFailureInfo.unacceptedPolicy */
0, Line, //  SP 21 
0, Line, //  Garbage collection may happen here 
0, Line, // binary 
0, Line, //  bug #62513 
0, Line, //  Inline Strings 
0, Line, //  String is in shared strings   String is inline in cell 
0, Line, //  If we have a comment record too, update that as well 
0, Line, //  But after guessing goes to the correct one, cp950 (Windows Traditional Chinese) 
0, Line, // GUIDs of HeaderFooterRecord and UserSViewBegin must be the same 
0, Line, // another border was added to the styles table 
0, Line, //  Without caching, evaluating cell 'A9' takes 21845 evaluations which consumes   much time (~3 sec on Core 2 Duo 2.2GHz)   short-circuit-if optimisation cuts this down to 255 evaluations which is still too high   System.err.println("Cell A9 took " + evalCount + " intermediate evaluations"); 
0, Line, //  SYMBOL is missing 
0, Line, //  What we're based on 
0, Block, /*  Print a single section:  */
0, Line, //  for simplicity just check for object identity 
0, Line, //  If the POSITION bit is clear and the COMPRESSED bit is set in the Flags field, the points   specify absolute locations with integer values. 
0, Line, //  CellAddress=Other!A1, will be unaffected 
0, Line, //  negative, and exponents differ by more than 1 
0, Line, // CTFont ctFont = createDefaultFont(); 
0, Line, //  B2 
0, Line, //  for the ClientAnchorDetail object. 
0, Line, //  picture list was updated 
0, Line, //  A 16-bit unsigned integer that defines the width of the DIB, in pixels. 
0, Line, //  Verify the style really does belong to our workbook 
0, Line, //  B5 
0, Line, //  First free one at 181 
0, Line, //  Put 3 in place of 1 
0, Line, //  also update StyleRecord and Parent-link 
0, Line, //  An 8-bit unsigned integer that specifies a strikeout font if set to 0x01; 
0, Line, //  Now some short ones 
0, Line, //  end public interface POIFSWriterListener 
0, Line, //  Check the start of the compressed version 
0, Line, //  read nameData 
0, Line, //  2) attempt to create a new row IN PLACE of a removed row by a negative shift causes corrupted   xlsx file with  unreadable data in the negative shifted row. 
0, Line, //  ByteArrayOutputStream doesn't throw IOException 
0, Line, //  create header/footer functions insert an empty paragraph 
0, Line, //  add a new text box 
0, Block, /*  Write the custom properties back to the document summary             * information.  */
0, Line, //  see http://msdn.microsoft.com/en-us/library/windows/desktop/bb931357(v=vs.85).aspx for a full list   setCspName("Microsoft Enhanced RSA and AES Cryptographic Provider"); 
0, Line, //  It MUST be one of the values in the WMF FontQuality enumeration 
0, Line, //  create the directories to the document 
0, Block, /*              * if the object that has been found is a) not a paragraph or b) is             * the paragraph that has just been inserted, as the cursor in the             * while loop above was not moved as there were no other siblings,             * then the paragraph that was just inserted is the first paragraph             * in the body. Otherwise, take the previous paragraph and calculate             * the new index for the new paragraph.              */
0, Line, //   time, so we won't get stuck) 
0, Line, //  first perform the normal write actions for the row 
0, Line, //  check new location where the ref is located 
0, Block, /*  * Cell-level policies   */
0, Block, /*  Read a test document <em>doc</em> into a POI filesystem.  */
0, Line, //  has to be percentage 
0, Line, //  no next found 
0, Line, //  only makes sense if the line is not solid 
0, Line, //  expand:   collapsed must be unset   hidden bit gets unset _if_ surrounding groups are expanded you can   determine   this by looking at the hidden bit of the enclosing group. You will   have   to look at the start and the end of the current group to determine   which   is the enclosing group   hidden bit only is altered for this outline level. ie. don't 
0, Line, //   10 (page sheet) and an 18 
0, Line, //   thankfully don't overlap! 
0, Line, //  CURRENTLY FAILS: result: "SSUnd"+scharfes   LibreOffice 5.0.3.2 behavior: "Sund"+scharfes 
0, Line, //  In case _firstRow > _lastRow or _firstCol > _lastCol 
0, Line, //  I hate using numbers in method names so I wont! 
0, Line, //  75 percent magnification 
0, Line, //  read sec formula data condition 
0, Line, //  respect to the width of the EmfPlusPen object that is used to draw the lines. 
0, Line, // make it bold 
0, Line, //  all ok 
0, Line, //  y (2 bytes): A 16-bit signed integer that defines the vertical (y) coordinate of the point. 
0, Line, // check that the rich text is set in the comment 
0, Line, //  adjust row column style 
0, Line, //  Check it serialised it back to the same data 
0, Line, //  A 32-bit floating-point value that specifies the number of pixels between the outline of the arrow 
0, Line, //  low-order bit says divide by 100, and so we do. Why?   'cause that's what the algorithm says. Can't fight city   hall, especially if it's the city of Redmond 
0, Line, // try to read image data using javax.imageio.* (JDK 1.4+) 
0, Line, //  ignore anchor elements 
0, Line, // check that the default date system is set to 1900 
0, Line, //  indent 
0, Line, //  first with normal Text Extractor 
0, Line, //  include stencil content, but try to elide stencil interiors 
0, Block, /*          * Next certificate factory trick is needed to make sure that the         * certificate delivered to the caller is provided by the default         * security provider instead of BouncyCastle. If we don't do this trick         * we might run into trouble when trying to use the CertPath validator.          */
0, Line, //  First up, check that TRUE and ISLOGICAL both behave 
0, Line, //  date value for July 8 1901 11:23 AM 
0, Line, //  the unusual case ... 
0, Line, //  Slide ID 
0, Line, //  The last weight of the NURBS. 
0, Line, //  Vary the buffer size, so that we can end up with the br in the    overflow or only part in the buffer 
0, Line, //  Set the the repeating rows and columns on the second sheet. 
0, Line, //  Swap from RGBA to ARGB 
0, Block, /*          * 2.3.4.14 DataIntegrity Generation (Agile Encryption)         *          * The DataIntegrity element contained within an Encryption element MUST be generated by using         * the following steps:         * 1. Obtain the intermediate key by decrypting the encryptedKeyValue from a KeyEncryptor         *    contained within the KeyEncryptors sequence. Use this key for encryption operations in the         *    remaining steps of this section.         * 2. Generate a random array of bytes, known as Salt, of the same length as the value of the         *    KeyData.hashSize attribute.         * 3. Encrypt the random array of bytes generated in step 2 by using the binary form of the         *    KeyData.saltValue attribute and a blockKey byte array consisting of the following bytes:         *    0x5f, 0xb2, 0xad, 0x01, 0x0c, 0xb9, 0xe1, and 0xf6 used to form an initialization vector as         *    specified in section 2.3.4.12. If the array of bytes is not an integral multiple of blockSize         *    bytes, pad the array with 0x00 to the next integral multiple of blockSize bytes.         * 4. Assign the encryptedHmacKey attribute to the base64-encoded form of the result of step 3.         * 5. Generate an HMAC, as specified in [RFC2104], of the encrypted form of the data (message),         *    which the DataIntegrity element will verify by using the Salt generated in step 2 as the key.         *    Note that the entire EncryptedPackage stream (1), including the StreamSize field, MUST be         *    used as the message.         * 6. Encrypt the HMAC as in step 3 by using a blockKey byte array consisting of the following bytes:         *    0xa0, 0x67, 0x7f, 0x02, 0xb2, 0x2c, 0x84, and 0x33.         * 7.  Assign the encryptedHmacValue attribute to the base64-encoded form of the result of step 6.           */
0, Line, //  does nothing 
0, Line, //  all other record types are not part of the PageSettingsBlock 
0, Line, // Test the cell string value 
0, Line, //  Ignored   Reserved 
0, Line, //  remove row from worksheet.getSheetData row array   Performance optimization: explicit boxing is slightly faster than auto-unboxing, though may use more memory 
0, Line, //  logical units, of the point where drawing is to start. 
0, Line, //  Display attachment names 
0, Line, //         assertEquals(".",        dfUS.formatRawCellContents(0,       -1, "# #/#;# ##/#;#.#;xxx")); // Currently shows as 0. not . 
0, Line, //  url GUID 
0, Line, //  Change some text 
0, Line, //  Find the start of the group. 
0, Line, //  Sort out the hpsf properties 
0, Line, //  CF1 has two rules: values less than -3 are bold-italic red, values greater than 3 are green 
0, Line, //  create a new sheet 
0, Line, //  with Date: 
0, Line, //  the recordsize ended before the image data 
0, Line, //  Add a run to the first paragraph:     
0, Line, //  cs1 -> 21 
0, Block, /*  retrieves 1D array from 2D array after calculations  */
0, Line, //  helper method to keep it in one place 
0, Line, //  18 @ 70   18 @ 88 
0, Line, //  if parsing for intersection fails we assume that we actually had an arbitrary   whitespace and thus should simply skip this whitespace 
0, Line, //  read panose and fs so we can write them back out. 
0, Line, // -1 means the name applies to the entire workbook 
0, Line, //  XAdES-C: complete certificate refs 
0, Line, //  error ref like MySheet!#REF! 
0, Line, //  Grab the type as hex 
0, Line, // serialize and read again 
0, Line, // Expected 
0, Block, /*  not failing, but requires more memory  */
0, Line, //  Check OPC compliance M4.1 rule 
0, Line, //  page numbers links to Word97-2007BinaryFileFormat(doc)Specification.pdf, accessible from microsoft.com  
0, Line, //  Ensure changes were taken 
0, Line, //  a formula that returns '10' 
0, Line, //  Set empty lists, ready for when they call setParentTextSize 
0, Line, // There can actually be OBJ records mixed between the continues. 
0, Line, // cached formula value 
0, Line, //  remove merged region that are replaced by the shifting,   i.e. where the area includes something in the overwritten area 
0, Line, //  Setting up the table 
0, Line, // add spns to the row 
0, Line, //  299: PERMUT 
0, Line, //  Potentially breaking the file here since we don't know exactly where to write these records 
0, Line, //  Return the result of the algorithm. 
0, Line, //  try slide layout 
0, Line, //  Found </sheetData> 
0, Line, //  Note - this is really rather nasty... 
0, Line, //  don't run this test when we are using older Xerces as it triggers an XML Parser backwards compatibility issue  
0, Line, //  create the formatter to test 
0, Line, //  create some data 
0, Line, //  Change text via normal 
0, Line, //  fails with   org.apache.poi.ss.formula.FormulaParseException: Parse error near char ... ')'   in specified formula '((1 + 1) )'. Expected cell ref or constant literal 
0, Line, //  Should never happen in production as all data are fixed
0, Line, // write ouput to a file 
0, Line, //  Try another with comments 
0, Line, // this is the sheet state #2.5.142  noinspection ResultOfMethodCallIgnored 
0, Line, //  collect pairs of ranges and criteria 
0, Line, //  then check for sprmPHugePapx 
0, Line, //  Since we haven't created this object yet we'll just put in the raw   form for the moment. 
0, Line, // undocumented what is contained in these 8 bytes.  for the non-beta xlsb files, this would be 4, not 8. 
0, Block, /* -------------- Abstract methods -------------  */
0, Line, //  Table1 stream will be used 
0, Line, //  From DXA to PCT: 
0, Line, //  Fonts 
0, Block, /*          * In case two objects ARE equal, but its not the same instance, this         * implementation will always run through the whole         * byte-array-comparison before returning true. If this will turn into a         * performance issue, two possible approaches are available:<br>         * a) Use the checksum only and take the risk that two images might have         * the same CRC32 sum, although they are not the same.<br>         * b) Use a second (or third) checksum algorithm to minimise the chance         * that two images have the same checksums but are not equal (e.g.         * CRC32, MD5 and SHA-1 checksums, additionally compare the         * data-byte-array lengths).          */
0, Line, //  if either arg is an error, that error propagates 
0, Line, // flip horizontal 
0, Line, //  <Override PartName="/_xmlsignatures/sig1.xml" ContentType="application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"/> 
0, Line, //  This is abstract in nature, so we'll use a    concrete instance to test the set methods. 
0, Line, // ************ SXSSF-specific methods ***************// 
0, Line, //  Use the system default encoding when sending to System Out 
0, Line, //  {   inline.setAttribute( "opacity",   getOpacity( characterRun.getIco24() ) );   } 
0, Line, //  comment length   disk number where file starts   internal file attributes (unused)   external file attributes (unused)   LFH offset 
0, Line, //  Adding default types 
0, Line, //  The groups in the pattern are the parts of the number 
0, Line, //  0x19   0x1c   0x1d   0x1e   0x1f 
0, Line, //  90 -> 96 is another stream 
0, Line, // A1:A2 
0, Block, /*  * Created on May 30, 2005 *  */
0, Line, //  java.util.Date uses UTC 
0, Line, // see 2.5.122 
0, Line, //  Check that each cell exists and that the formula text is set correctly on the first cell 
0, Line, //  Check the text, and its embeded images 
0, Line, //  Add some stuff into it 
0, Line, //  read back as XSSF and check that xml:spaces="preserve" is set 
0, Line, //  Save the resulting OLE2 document, and re-open it 
0, Line, //  we cannot check for UNKNOWN as we might hit valid byte-patterns here as well 
0, Line, //  Bug #62740, the logic was just re-using the existing max ID, not incrementing beyond it. 
0, Block, /*              * We need at least 2 certificates for the XAdES-C complete certificate             * refs construction.              */
0, Line, // only add the aggregate once 
0, Line, //  Set the date 
0, Line, //  still null 
0, Block, /*  **********  END  extension of Property **********  */
0, Line, //  Look for bits we're interested in 
0, Line, //  Simple data follows 
0, Line, //  check to see if we can just get the resources from the classpath 
0, Line, // assertArrayEquals(expected, actual); 
0, Line, //  data validation's number types 
0, Line, //  Everything's happy, so save the name 
0, Line, //  SlideShow<?,?> ppt = new XMLSlideShow(); 
0, Line, //  test adding a row to a table, issue 59814 
0, Line, //  sum only if all of the corresponding criteria specified are true for that cell. 
0, Line, //  don't copy font index on copy constructor - it depends on the FontCollection this record is in 
0, Line, //  With sheet names too 
0, Line, //  "=SUMIFS(B2:E2, B3:E3, ">=40", B4:E4, "<10")" 
0, Line, //  other things 
0, Line, //  write out the Complex table, includes text. 
0, Line, //  Check it has the usual bits 
0, Line, //                 start--;                        // reverse order 
0, Line, //  ??? 
0, Line, //  RK: Invalid dates are 255 #s. 
0, Line, //  OpenXML4J files 
0, Line, // these test newlines and tabs in paragraphs/body elements 
0, Line, //  ref to NotesMaster, 0 if none   ref to HandoutMaster, 0 if none 
0, Line, //  default 100 iterations 
0, Line, //  result of multiplying the current x-extent by the value of the xNum member. 
0, Line, //  placeholder for first skip attr 
0, Line, // names cannot be blank or contain any of /\*?[] 
0, Line, //  YK: formatIndex can be -1, for example, for cell in column Y in test-data/spreadsheet/45322.xls   return null for those 
0, Line, //  only main range 
0, Line, //  Set the complex flag - POI doesn't usually manipulate this flag 
0, Line, //  try with an invalid startBlock to trigger an exception   to validate that file-handles are closed properly 
0, Line, // 				// YK: The original version asserted expected values against File#getAbsolutePath():  				assertTrue(expectedValue.get(filename).equalsIgnoreCase(f2.getAbsolutePath()));  				// This comparison is platform dependent. A better approach is below  			} 
0, Line, //  Check it still has 1 slide 
0, Line, //  Check we can read it 
0, Line, //  Basic (non rich) test file 
0, Line, //  y coordinate of second point on ellipse 
0, Block, /*  first test the defaults  */
0, Line, //  A 16-bit unsigned integer that defines the height of the DIB, in pixels. 
0, Line, // bottom  inch 
0, Line, //  It can be one or more of the WMF ClipPrecision Flags 
0, Line, //  apparently bit 25 is unused 
0, Line, //  non-error cases 
0, Line, //  Second is a PDF 
0, Line, //  Rich test file C - has paragraph styles that run out before 
0, Line, //  set it to the thick black border style 
0, Line, //  A 32-bit floating-point value that specifies the height of the arrow cap.   The height of the arrow cap is scaled by the width of the EmfPlusPen object that is used to draw the   line being capped. For example, when drawing a capped line with a pen that has a width of 5 pixels, 
0, Line, //  BuiltInGuide throws IllegalArgumentException if key is not defined 
0, Line, //  Workbook scoped name, not actually external after all 
0, Line, //  this formula is inspired by the offending formula of the attachment for bug 45376   IF(DATE(YEAR(A1),MONTH(A1)+1,1)<=$D$3,DATE(YEAR(A1),MONTH(A1)+1,1),NA()) etc 
0, Line, //  Check the two groups too 
0, Line, //  All done 
0, Line, //  check pass 
0, Line, //  broken files 
0, Line, //  The first certificate is presumably the signer. 
0, Line, //  Should not be able to write a document that has been closed 
0, Line, //  Do XWPF charts need similar treatment? 
0, Line, // JMH: Do this ridiculous conversion, and let HSSFCellStyle  internally migrate back and forth 
0, Line, // PPT doen't increment the number of saved shapes for group descriptor and background 
0, Line, //  that cell. 
0, Line, //  All the others 
0, Line, //  with PAP reconstructon 
0, Line, //  left margin 
0, Line, //  METAVERSION100 = 0x0100, METAVERSION300 = 0x0300 
0, Line, //  ===========================================================    Start of style related getters and setters   =========================================================== 
0, Block, /*  Check whether this directory has already been created.  */
0, Line, //  Find the spot 
0, Line, //  Look for the DrawingGroup record 
0, Line, // noinspection ConstantConditions 
0, Line, //  Sheet 2 has a footer, but it's empty 
0, Line, //  Make sure cells on other sheets are not affected 
0, Line, //  with 1900 windowing, excelDate is Jan. 1, 2000   with 1904 windowing, excelDate is Jan. 2, 2004 
0, Line, //  loop over the tracked columns, because there are fewer tracked columns than cells in this row 
0, Line, //  Retrieves PackagePart object from the package 
0, Line, //  appears after last cell value record and before WINDOW2 
0, Line, //  Finish and tidy 
0, Line, //  skip 4 frames of reflection invocation 
0, Line, //  for format which start with "[DBNum1]" or "[DBNum2]" or "[DBNum3]" could be a Chinese date 
0, Line, //  index of cell style in style table   row height in twips (1/20 point)   row zero-height (this is somehow different than being hidden)   Outlining level of the row, when outlining is on   use Boolean to have a tri-state for on/off/undefined 
0, Line, //  Size=0, *2 
0, Line, // cloned sheet is a deep copy, adding rows or merged regions in the original does not affect the clone 
0, Line, //   formula cells, so we can see it updates properly 
0, Line, //  only store cells in the base, not rows -- because rows are handled   specially for geometry sections 
0, Line, //  taken from a msdn blog:   http://blogs.msdn.com/b/openspecification/archive/2009/05/08/dominic-salemno.aspx 
0, Line, //  Check the comments 
0, Line, //  The value MUST be in the ArmStyle enumeration table. 
0, Line, // Test the sheetname 
0, Line, //  create a sheet with a text box 
0, Line, //  An 8-bit unsigned integer that specifies the family type. 
0, Line, // change the name of the 3rd sheet 
0, Line, //  Pesky XmlBeans bug - see Bugzilla #49934 
0, Line, // the bean holding the reference to the formula to be deleted 
0, Line, //  Last view type 
0, Line, //  normalize signed zero 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createValidation(org.apache.poi.ss.usermodel.DataValidationConstraint, org.apache.poi.ss.util.CellRangeAddressList)	  */
0, Line, // access to a arbitrary row 
0, Line, // update id of the drawing in the cloned sheet 
0, Line, // comment1 and  comment2 are different objects 
0, Line, //  Can not be reached. 
0, Line, //  assert something more interesting 
0, Line, // TestCellReference.class, //converted to junit4 
0, Line, //  runs intersecting startIndex and endIndex remain 
0, Line, //  TODO: DIB, PICT 
0, Line, //  Finally read the Small Stream FAT (SBAT) blocks 
0, Line, //  If our sheet has hyperlinks, have them add    any relationships that they might need 
0, Line, //  Create a cell and put a value in it.   first row are column titles 
0, Line, // CTHdrFtr hdr = buildHdrFtr(pStyle, pars);				// MB 24 May 2010   MB 24 May 2010 
0, Line, //  No theme set, nothing to do 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#setShowErrorBox(boolean)	  */
0, Line, //  And check it's as expected 
0, Line, //  Add an ignored doc, no notice is taken 
0, Line, //  add a third picture 
0, Line, //  account for cell value records after those 
0, Line, //  Off the end 
0, Line, //  For array references it is handled in other evaluation steps, but we need to handle this here for references to subtotal-functions 
0, Line, //  Get the embeddings for the workbook 
0, Line, // assertContains(txt, "We are able to");//not sure if we can get this easily? 
0, Line, //  An EmfPlusARGB object that specifies the color at the starting/ending boundary point of the linear gradient brush. 
0, Line, //  Check the named range definitions 
0, Line, //  Start to load up our standard structures. 
0, Line, //  TSP response parsing and validation 
0, Line, //  Rule [M4.1]: The format designer shall specify and the format producer   shall create at most one core properties relationship for a package.   A format consumer shall consider more than one core properties   relationship for a package to be an error. If present, the   relationship shall target the Core Properties part.   Note - POI will read files with more than one Core Properties, which 
0, Line, //             evaluator.clearAllCachedResultValues(); 
0, Line, //  cross check with fv 
0, Line, //             "54541_cropped_bitmap2.ppt", 
0, Line, //  But not the attached message 
0, Line, //  first PSB record encountered - read all of them: 
0, Line, //  Read the File ID 
0, Block, /*  Removing the custom property must return the remove property and         * reduce the size to 0.  */
0, Line, //  else rules for adjusting area may also depend on the destination of the moved columns 
0, Line, // XSSFCreationHelper helper = workbook.getCreationHelper();  cell.setHyperlink(helper.createHyperlink(0)); 
0, Line, //  everything else (including string and boolean values) counts as zero 
0, Line, //  Copy the format 
0, Line, //  found in the dictionary, so output that compressed 
0, Line, // Copy the worksheet data to "out". 
0, Line, //  Write out to a byte array 
0, Line, // copy rgdxaCenter 
0, Line, //  For each element in the ArrayList, get the text for the high 
0, Line, //  #3 pass - update merge info 
0, Line, //  destination rows enclose the area (possibly exactly) 
0, Line, //  Test methods common with HSSF are in superclass   Local methods here test XSSF-specific details of updating array formulas 
0, Line, //  min axis value   max axis value 
0, Line, //  the relationship element 
0, Line, //             rightMargin = 0d;          } 
0, Line, //  Grab the first 512 bytes   (For 4096 sized blocks, the remaining 3584 bytes are zero)   Then, process the contents 
0, Line, //  may need to grow - fill intervening palette entries with black 
0, Line, //  positive value means percentage spacing of the height of the last line, e.g.   the higher the last line, the bigger the space after the paragraph 
0, Line, //  from this 'row' ArrayList one at a time and to write the Strings   away to a StringBuffer thus assembling a single line for inclusion   in the CSV file. If a row was empty or if it was short, then   the ArrayList that contains it's data will also be shorter than   some of the others. Therefore, it is necessary to check within   the for loop to ensure that the ArrayList contains data to be   processed. If it does, then an element will be recovered and 
0, Line, //  First test that setting RR&C for same sheet more than once only creates a 
0, Line, //  process the first sheet 
0, Line, //  Check the search chunk, see if it's 
0, Line, //   it's a newly created one 
0, Line, //  Grab the info field 
0, Line, //  note the call to the "unwrapped" version, which returns a single value 
0, Line, //  non-Javadoc: This abstract class exists to consolidate duplicated code between   {@link org.apache.poi.hssf.usermodel.helpers.HSSFRowShifter} and   {@link org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter}   (currently methods sprinkled throughout HSSFSheet) 
0, Line, //  https://stackoverflow.com/questions/32010765 
0, Block, /* nil */
0, Line, //  ftLbs 
0, Line, //  ensure that a memory based package part does not have lingering data from previous commit() calls 
0, Block, /*      A     B    C      D   E         * 1 LONG  LONG        LONGMERGE         * 2       SHORT SHORT     SHORT          */
0, Line, //  start watermark paragraph 
0, Line, //  Add this new SlidePersistAtom to the SlideListWithText 
0, Line, // Zero or more characters 
0, Line, //  this will usually cause a 'FALSE' result except for ISNONTEXT() 
0, Line, //  First is a link to poi 
0, Block, /*  **********  END  implementation of POIFSWriterListener **********  */
0, Line, //  Version (2 bytes):  A 16-bit unsigned integer that defines the metafile version. 
0, Line, //  20 pt from the previous paragraph   3 lines after the paragraph 
0, Line, //           {              short[] brcTop = rgtc[x].getBrcTop (); 
0, Line, //  of the identifier field in an EMR_COMMENT_PUBLIC record. The offset MUST be 32-bit aligned. 
0, Line, //  reducing this metric 8. 
0, Line, //  Sheet 2 has comments 
0, Line, //  0x19 Unused 
0, Line, //  bitfields 
0, Line, //  The simple operators consider all zeros to be the same 
0, Line, //  sprmPDxaLeft180  
0, Line, //  If we get here, then the rawCode + this byte weren't   found in the dictionary 
0, Block, /*  **********  END  implementation of DocumentEntry **********  */
0, Line, //  Friendly objects for people to deal with 
0, Line, //  no change because range would be turned inside out   dest truncates top (even though src is from inside range)   complex: src encloses bottom, dest encloses top 
0, Line, // 00000000 15 00 12 00 01 00 01 00 11 60 00 00 00 00 00 0D .........`......  00000010 26 01 00 00 00 00 00 00 00 00                   &......... 
0, Line, //  the other is matched with a CustomViewSettingsRecordAggregate having UserSViewBegin with the same GUID 
0, Block, /*  ======= Name pointing to 1st sheet ======  */
0, Line, //  Image type + 0xF018 
0, Line, //  anything else is not valid argument 
0, Line, //  Is it the one that defines the shared, or uses it? 
0, Line, //  Set for the appropriate text sizes 
0, Line, //  Add another mini stream 
0, Line, // bullet offset  text offset (should be greater than bullet offset)  bullet character 
0, Line, //    the character ones do 
0, Line, //  re-hash 
0, Line, // test all the regions were indeed added 
0, Line, //  starts from decimal point 
0, Line, //  Now pass on to our child 
0, Line, //  Now make sense of those properties 
0, Line, //  Peek inside the underlying record 
0, Line, //  Check for the attribute value => 'dcterms:W3CDTF' 
0, Line, //  An empty picture record (length 0) will take up 8 bytes 
0, Line, //  Dk2, lighter 40% (tint is about 0.39998)   31 * (1.0 - 0.39998) + (255 - 255 * (1.0 - 0.39998)) = 120.59552 => 120 (byte)   73 * (1.0 - 0.39998) + (255 - 255 * (1.0 - 0.39998)) = 145.79636 => -111 (byte) 
0, Line, //  columns and the inset. 
0, Line, //  NOSONAR   ensure file-handle release 
0, Line, //   how to tie that together. 
0, Line, //  when criteria is an expression (starting with a comparison operator) 
0, Line, //  C1 
0, Line, //  Create the Property Set 
0, Line, //  named range list 
0, Line, //  check rules list for null, although current implementation will return an empty list, not null, then do what you want with results 
0, Line, //  known result in excel 
0, Line, //  An escape we can let it handle because it can't have a '%' 
0, Line, //  sprmCRsidRMDel 
0, Line, // add expected failures here: 
0, Line, //  Now zap the empty 4th row - won't do anything 
0, Line, //  now check a file with 1904 Date Windowing 
0, Line, //  then calculate min/max cell-numbers for the worksheet-dimension 
0, Line, //  A 16-bit signed integer that defines the height/width, in logical coordinates,   of the ellipse used to draw the rounded corners. 
0, Line, //  what other similar functions 
0, Line, //  An ExternalBlock for Add-In functions was not found. Create a new one. 
0, Line, // DBCells are serialized before row records. 
0, Line, //  some old documents have "WORKBOOK" or "BOOK" 
0, Line, //  allow function definitions to change only if both previous and the new items have footnotes 
0, Line, //  Relationship ID 
0, Line, // _book can be omitted by test cases   just use BIFF8 
0, Line, //  SharedFormulaRecord occurs after the first FormulaRecord of the cell range.   There are probably (but not always) more cell records after this   - so don't fire off the LastCellOfRowDummyRecord yet 
0, Line, //  unable to parse file -- not ExcelToFoConverter fault 
0, Line, //  the file. 
0, Line, //         FileOutputStream fileOut = new FileOutputStream("/tmp/55640.xlsx"); 
0, Line, // 18 
0, Line, //  Read it 
0, Line, //   group shape on slide3 
0, Line, //  assume match 
0, Line, //  Create a >2gb file 
0, Line, //  Check the same 
0, Line, //  private static POILogger log = POILogFactory.getLogger(HSSFPatriarch.class); 
0, Line, //  https://stackoverflow.com/questions/21855842   https://stackoverflow.com/questions/29014848   https://stackoverflow.com/questions/39636138 
0, Line, //  rId2 is file 
0, Block, /*  Create an input stream containing the bytes the property set             * stream consists of.  */
0, Line, //  #59743 - disable Threshold handling for SXSSF copy   as users tend to put too much repetitive data in when using SXSSF :) 
0, Line, //  STEditAs.ABSOLUTE corresponds to ClientAnchor.DONT_MOVE_AND_RESIZE 
0, Line, //  Remaining 12 bits = offset count 
0, Line, //  Replace with one still big enough for a main stream, but one block smaller 
0, Line, //  colored major grid lines 
0, Line, //  Are we the first SBAT? 
0, Line, //  And none of them are continue ones 
0, Line, //  For the text coming in from the SlideAtomsSet:   Build up TextRuns from pairs of TextHeaderAtom and    one of TextBytesAtom or TextCharsAtom 
0, Line, //  A NumberOfPolygons array of 16-bit unsigned integers that define the number of points for 
0, Line, //  Loop over the wrappers, showing what they contain 
0, Line, //  Out flag has the normal meaning   Length wise, we're 2 longer than we say, so the max len is 18   Endian wise, we're big endian, so 0x1234 is pos 0x123 
0, Line, //  Get the colum's width in millimetres 
0, Line, //  make it obvious 
0, Line, //  Grab the version number, 0x1a -> 0x1b 
0, Line, //  Reorder CTSheets 
0, Line, //  the xor key for method 1 is part of the verifier for method 2   so we simply chop it from there 
0, Block, /*      * Cells that cannot be formatted, e.g. cells that have a date or time     * format and have an invalid date or time value, are displayed as 255     * pound signs ("#").      */
0, Line, //  Print out any missing commas if needed 
0, Line, //  Add paragraphs to the cells 
0, Line, //  s.setCodepage(CodePageUtil.CP_UNICODE); 
0, Line, //  try slide master 
0, Line, //  Reserved (4 bytes): A value that MUST be 0x00000040 
0, Line, //  normal case: compute slope/intercept 
0, Block, /*      * Getters and setters      */
0, Line, //  Check sheet names 
0, Line, //  Create a style and use it 
0, Line, // now remove the created breaks 
0, Line, //  preserve the fSpec setting from the original CHP 
0, Line, //  SigningTime 
0, Line, // //// Case 16: Evaluate "Table1[[#Headers],[#Data],[col]]" //////// 
0, Line, // out of borders  out of borders 
0, Line, //  Check all comes out right 
0, Line, //  Verify we only got one SBAT block 
0, Line, //  this only really counts when writing because FILEPASS is read early 
0, Line, //  expected sheet-id not found   EXPECTED_ADDITIONAL_FAILURES.add("spreadsheet/52348.xlsx");   EXPECTED_ADDITIONAL_FAILURES.add("spreadsheet/59021.xlsx");   zip-bomb 
0, Line, //  All rows should have one column 
0, Line, //  Loop over the codes, outputting what they correspond to 
0, Line, //  Check we can decrypt it 
0, Line, //  Messages may have their bodies saved as plain text, html, and/or rtf. 
0, Line, //  newline 
0, Line, //  /O=..../CN=em@ail 
0, Line, // make sure we do the maximum value of the Int operator 
0, Line, //  overrides 
0, Line, //  Various CountAs on Strings 
0, Line, //  Then we have a whole bunch of stuff, which grows    with the number of hyperlinks 
0, Line, //  ... I don't know, why commit is protected ... 
0, Line, //  Re-check ref one 
0, Block, /*          * Saved drawings must have the following namespaces set: <xdr:wsDr         * xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main"         * xmlns:xdr=         * "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing">          */
0, Line, //  Attr   Ref - A3 
0, Line, //  there seems to be currently no generic way to check the setting... 
0, Line, //  light grey 
0, Line, //  Note the lack of - sign! 
0, Line, // 				POIFSFileSystem fs = new POIFSFileSystem(new ByteArrayInputStream(baos.toByteArray()));  				erf.processRecords(fs.createDocumentInputStream("Workbook")); 
0, Line, //  x coordinate of second point on ellipse 
0, Line, // fix for stupid ol Windows 
0, Line, //  Check it evaluates correctly 
0, Line, //  Step 1. Create a template file. Setup sheets and workbook-level objects such as   cell styles, number formats, etc. 
0, Line, //  convert to canonical file, to make any subsequent error messages 
0, Line, //  weird Excel behaviour on second arg 
0, Line, //  #3) these cells will all be medium weight with different colors for the       outside, inside horizontal, and inside vertical borders. The center 
0, Line, //  some specific whitespace chars below 0x21: 
0, Line, // search the referenced drawing in the list of the sheet's relations 
0, Line, //  167 -> 172 is the next 
0, Line, //  Attr   Ref - A4 
0, Line, //  See SHAREDFEATURES_   Should always be one 
0, Line, //  FFN structure containing strings of font names 
0, Line, //  Finally look for the notes master 
0, Line, //  offset dummy - filled later 
0, Line, //  Where each font has ended up, and if we need to 
0, Line, //  Now grab the children's data 
0, Block, /*  Get the directory entry for the target stream.  */
0, Line, //  we keep the cached data in ThreadLocal members in order to   avoid multi-threading issues when different workbooks are accessed in  
0, Line, // title has center alignment 
0, Line, //  bug 56295: ensure that the fills is available and set correctly 
0, Line, // YK: files produced by OO violate the condition below 
0, Line, //  cyan 
0, Line, //  inset the left hand or bottom edge of the image. 
0, Line, //  sample XLSX with the same text-contents as the text-file above 
0, Line, //  Apply the styles 
0, Line, //  Create main document part 
0, Line, //  Check if cell belongs to workbook   (checked in setCellStyleProperty) 
0, Line, //  12th digit of integer -> scientific 
0, Line, //  now the color should be equal for those two columns and rows 
0, Line, //  the actual thread-safe temp-file strategy 
0, Line, //  same workbook re-saved in Excel 2010, the R attribute is updated for every cell with the right value. 
0, Line, //  Can be multiple of these - add to list(s) 
0, Line, //  Find PPDrawings at any second level position 
0, Line, //  In third set, it's just a font.size and a font.color 
0, Line, //  section.clear(); 
0, Line, //     Image transformImage(Image image, Rectangle rectangle, Rectangle rectangle1, ImageObserver imageobserver, Color color1)      {          logger.log(POILogger.WARN,"transformImage() not supported");          return null;      }        Image transformImage(Image image, int ai[], Rectangle rectangle, ImageObserver imageobserver, Color color1)      {          logger.log(POILogger.WARN,"transformImage() not supported");          return null;      } 
0, Line, //  change [wbB]BSheet1!B3 (from 50 to 60) 
0, Line, //  all OK 
0, Line, //  [D4:E5] 
0, Line, //  If we haven't already identified out font metrics file, 
0, Line, //  test signing with single opened package 
0, Line, //  This value MUST be 0x00000001. 
0, Line, //  Now find it on our sheet 
0, Line, //  bug 60845   Do not compare the representing strings but the properties   Reason:     The strings are different if the XMLObject is a fragment (e.g. the ones from cloneStyle)     even if they are in fact representing the same style 
0, Line, //  arg0 is evaluated to text first 
0, Line, //  as per "MICROSOFT OFFICE EXCEL 97-2007 BINARY FILE FORMAT SPECIFICATION" pdf 
0, Line, //  desx is not supported. Not sure, if it can be simulated by des3 somehow 
0, Line, //   "+mj-lt".equals(typeface) || "+mn-lt".equals(typeface) 
0, Line, //  2049 - existing shape id 
0, Line, //  Try each password in turn, reporting progress 
0, Line, //  All chunks are now processed, have the ChunkGroup 
0, Line, //  Good, we can't fit 5 in starting at 7 
0, Line, //  degenerate case: nothing to join   degenerate case: one thing to join, no trailing comma 
0, Line, //  Check there really is a record at this number 
0, Line, //  rather than allowing users to continue updating rows that are no longer part of the sheet 
0, Line, //   but not of their anchors 
0, Line, //  Good, valid combination 
0, Line, //  Cell show "12/8" 
0, Line, //  Check critical things in the Ptg array encoding. 
0, Line, //  Check text all matches up properly 
0, Line, //  false parameter not present   1 less than distance to end of if FuncVar(size=4). 
0, Line, //  RETURN_NULL_AND_BLANK - same as default 
0, Line, //  The 16-bit signed integers that defines the corners of the bounding rectangle. 
0, Line, //  then storing the String into the csvLine ArrayList. 
0, Line, //  To it 
0, Line, //  Using a HashSet instead of a TreeSet because we don't care about order. 
0, Line, //  no need to round because we have at least 8 bits of extra precision 
0, Line, //  CellFormat requires callers to identify date vs not, so do so 
0, Block, /*  ********************* getter/setter follows ***********************  */
0, Line, //  Check for the 'xsi:type' attribute 
0, Line, //  a formula that returns true 
0, Line, //  zero terminated string that records name of font, cuurently not 
0, Line, //  Check that the text sizes are as expected 
0, Line, //  automatic index 
0, Line, //  smallest non-zero number (subnormal) 
0, Line, //  is the end of the second file also. 
0, Line, //  Let's iterate over the test setup. 
0, Line, //  The argument is structured reference 
0, Line, //  cloning the conditional formatting manually makes it bad again 
0, Block, /*    */
0, Line, //  Open the workbook 
0, Line, //  No marker symbol on the chart line. 
0, Line, //  comples path consisting of a rectangle and an ellipse inside it 
0, Line, //  not enough occurrences found - leave unchanged 
0, Line, //  the grpprl size byte and the grpprl. 
0, Block, /*          * plcfBkmkl (table recording limit CPs of bookmarks) Written         * immediately after the plcfBkmkf, if the document contains bookmarks.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Line, // @NotNull 
0, Line, //  Handle extra 1 char styles at the end 
0, Line, //  verify TSP signer certificate 
0, Line, //  upper-left corner of the rectangle. 
0, Line, //  per Excel, a blank value for a numeric validation constraint formula validates true 
0, Line, // nothing 
0, Line, //  explicit list was provided 
0, Line, //  Write out destination file          FileOutputStream fileOut = new FileOutputStream("/tmp/46515.xls");          wb.write(fileOut);          fileOut.close(); 
0, Line, //  Problem 1: See TestUnfixedBugs#test49612()   Problem 2: TestUnfixedBugs#test49612() 
0, Line, //  field 
0, Line, //  YK: Excel doesn't write NaN but instead converts the cell type into {@link CellType#ERROR}. 
0, Line, // set cached formula value 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getShowPromptBox()      */
0, Line, //  Use this to read in the properties 
0, Line, //  Truncate to header + flag + data for flag 
0, Line, //  link to a URL 
0, Line, // 				((DrawingRecord) _lastRecord).appendContinueRecord(contRec.getData()); 
0, Line, //  please contribute a real sample file, which is binary rc4 encrypted   ... at least the output can be opened in Excel Viewer  
0, Line, //  private static float DEFAULT_COLUMN_WIDTH = 9.140625f; 
0, JavaDoc, /*      * Sets the default font on ctStyles DocDefaults parameter     * TODO Replace this with specific setters for each type, possibly     * on XWPFDefaultRunStyle      */
0, Line, //  print mono/b&w, colorless 
0, Line, //  check max entry size ouf of bounds 
0, Line, //  Check the 0(.00)% ones 
0, Line, // an, add, remove, get(0) would null pointer 
0, Line, // "com.sun.org.apache.xerces.internal.util.SecurityManager", 
0, Line, //  null the remaining bytes 
0, Line, //  A valid BorderStyle constant, as a Short 
0, Line, //  It's escaped, don't worry 
0, Line, //  We need to get hold of the text that makes up the 
0, Line, //  First page header is optional, only return 
0, Line, //  PieceDescriptor objects 
0, Line, //  Can be null 
0, Line, //  lower-right corner of the rectangle. 
0, Line, //  3073 - existing shape id 
0, Line, //  weren't obtained from the print consider them 
0, Line, //  In second set, we get a CharFlagsTextProp and a font.size and a font.color 
0, Line, // Create 
0, Line, // last column PLUS ONE 
0, Line, //  Now check the style names 
0, Line, //  Check it now has empty core properties 
0, Line, //  blocksize   blocksize   blocksize   keysize   hashsize 
0, Line, //  4 -> 11 then end 
0, Line, //  A 32-bit unsigned integer that specifies the size of the DIB bits, if the record 
0, Line, //  #61881 - for now we only check the first char 
0, Line, //  Read initial file in 
0, Line, //  First, try to find it as a User Defined Function 
0, Line, // long startTime = System.currentTimeMillis(); 
0, Block, /*      * Microsoft Office Word 97-2007 Binary File Format (.doc) Specification;     * Page 60 of 210      */
0, Line, // if there's no relationship id, silently skip the sheet 
0, Block, /*  * READ ONLY ACCESS... THIS IS FOR COMPATIBILITY ONLY...USE LABELSST! public  */
0, Line, //  Should have 3 root relationships 
0, Line, //  translate the result to the canvas coordinates in points 
0, Line, //  string to error code 
0, Line, //  delete format runs that fit between startIndex and endIndex 
0, Line, //  version 
0, Line, // type of the text 
0, Line, //  write out the list tables 
0, Line, //  loop until either only one item is left or we did not merge anything any more 
0, Line, // get default font, then change 2 values and check against different values (height changes) 
0, Line, //  TODO - seems like the sign bit of this field might be used for some other purpose   see example file for test case "TestBugs.test19599()" 
0, Block, /*  Width is an integer number of 20ths of a point (twips)  */
0, Line, //  LTGRAY_BRUSH - A light gray, solid-color brush   BrushStyle: BS_SOLID   Color: 0x00C0C0C0 
0, Line, //  Moving to a later point in the array   Grab everything from after the toMove block, to the new point 
0, Line, //  process module, skip __SRP and _VBA_PROJECT since these do not contain macros 
0, Line, //  ******************************* 
0, Line, //  Check the formulas 
0, Line, //  If offsets are omitted, it is assumed to be 0. 
0, Line, //  search for unicode characters 
0, Line, //  Replace ever "%" with a "%%" so we can use printf 
0, Line, //  if srcCell doesn't have a hyperlink and destCell has a hyperlink, don't clear destCell's hyperlink 
0, Line, //  Save in the escher layer 
0, Line, //  Make longer, take 1 block at the end 
0, Line, //  Try writing 5, should extend 
0, Line, //  Starts with no header 
0, Line, //  This value MUST be defined in the BitmapDataType enumeration 
0, Line, //  Even more trickiness:   Note - even if the StringEval represents a number value (for example "1"), 
0, Line, //  Workbook Factory gives helpful error on package 
0, Line, //  YK: width of not-evaluated formulas that return data is not determined   POI seems to conevert '0' to Excel date which is the beginng of the Excel's date system 
0, Line, //  Refer to a different area 
0, Line, //  mask is 0x1000 
0, Line, //  default copy policy 
0, Line, //  this ID value seems to have significance to Excel >= 2010; see https://issues.apache.org/bugzilla/show_bug.cgi?id=55409 
0, Line, //   records we happen across 
0, Line, //  The ratio of an arc's major axis to its minor axis. Despite the usual   meaning of these words, the "major" axis does not have to be greater than 
0, Line, //  Check reading the formula 
0, Line, //  try various forms of corruption 
0, Line, // A1:B2 
0, Line, //  single row range 
0, Line, // default behavior: include phonetic runs 
0, Line, //  Special cases for vertically aligned text 
0, Line, // Creating another new Named Range 
0, Line, //  We now have 109 BATs, but no XBATs 
0, Line, //  DataFormat is not copied unless policy.isCopyCellStyle is true 
0, Line, // calcChain should be gone 
0, Line, //  Copy the spearator character and formatting convention into local 
0, Line, //  Approximative threshold to decide whether test is PASS or FAIL:    shortCellValue ends up with approx column width 1_000 (on my machine),    longCellValue ends up with approx. column width 10_000 (on my machine)    so shortCellValue can be expected to be < 5000 for all fonts    and longCellValue can be expected to be > 5000 for all fonts 
0, Line, //  Notes of master - unchanged 
0, Line, //  Claim one of them and return it 
0, Line, // single-cell array formulas behave just like normal cells 
0, Line, //  Flag:  UccUUccU   5     c2a: offset 6 / 0x006    c2b: length 4+2  -> \ansi\a    c3a: offset 7 / 0x007    c3b: length 2+2  -> nsi   c    p    c6a: offset 221 / 0x0dd    c6b: length 0+2  -> g1    c7a: offset 224 / 0x0e0    c7b: length 0+2  -> 25   2 
0, Line, //  Type is 104, or 0x68 
0, Line, //  A 32-bit unsigned integer that specifies the size in bytes of the 
0, Line, //  test again with including formulas and cell-comments as this caused some bugs 
0, Line, //  Write out, and check 
0, Line, //  This field MUST be set to zero. 
0, Line, //  5.38.2 'Internal References' 
0, Line, //  Figure out where they are now 
0, Line, //  And check correct sheet settings found 
0, Line, //  else not 'External References' 
0, Block, /*  Initialize the sections. Since property set must have at least         * one section it is added right here.  */
0, Line, //  The count of items in the array is specified by count. 
0, Line, //  Formula is a String result not a Numeric one 
0, Line, // 			return true;  		}  		System.err.println("Diff from proof: "); 
0, Line, //  Use the current CTAbstractNum if it exists 
0, Line, //  Give a special string, based on ~, to make clear this isn't a standard Excel error 
0, Line, //  structured reference is trying to reference a row above or below the table with [#This Row] or [@] 
0, Line, //  result is correct 
0, Line, //  Now look higher up 
0, Line, //  Verify that the changes are non-volatile 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getShowPromptBox()	  */
0, Line, //  Save and re-check 
0, Line, //  Have the header processed 
0, Line, //  Will have been padded though 
0, Line, //  C1 is a string, with different text 
0, Line, //  provide ZipEntrySource to poi which decrypts on the fly 
0, Line, //  prepare each property for writing 
0, Line, // //// Case 12: Evaluate "Table1[[#All],[col1]:[col2]]" //////// 
0, Line, //  If this part is a zip package part (read only by design) we convert   this part into a MemoryPackagePart instance for write purpose. 
0, Line, //  }   int FC = TP.getPieceDescriptor().getFilePosition();   int offset = CP - TP.getCP(); 
0, Line, // Set the uncompressed bit 
0, Line, //  Check that protection block is together, and before DIMENSION 
0, Line, //  Two charts, three sheets 
0, Line, //  probably not happening with write access - not sure how to handle the default read-write access ... 
0, Line, //  5 is the active / selected sheet 
0, Block, /*  Part doesn't exist, create a new one  */
0, Line, //  Now check on the sheet 
0, Line, //  4-7 reserved   end bitfields 
0, Line, // &C == centered 
0, Line, //  Merged across multiple rows   Microsoft Excel 2013 does not copy a merged region unless all rows of   the source merged region are selected 
0, Line, //   then it could be a date 
0, Block, /*  * Created on May 23, 2005 *  */
0, Line, //  Write them out 
0, Line, //  Finally, add it to the string 
0, Line, //  [wbA]ASheet1!A2 references (among other things) [wbB]BSheet1!B2 
0, Line, // preserve URI fragments 
0, Line, //  We should have 21 BATs in the XBAT 
0, Line, //  Add it in at the end 
0, Line, // srcCell is null 
0, Line, //         {            permuteIstd (newPAP, varParam, opSize);          } 
0, Line, //  old top row of area has moved deep within the area, and exposed a new top row 
0, Line, //  in this array 
0, Line, //  there are choice and fallback OleObject ... we prefer the one having the objectPr element, 
0, Line, //  sprmCIstd (0x4A30) 
0, Line, //  Decode the stream to bytes 
0, Line, // none is not the same as "not set", therefore the following doesn't work any more  assertFalse(ctBorder.isSetTop()); 
0, Line, // OK lets do this in stages to return a quickly, first check the actual string 
0, Line, //  Set the values for the table 
0, Line, // verify our settings 
0, Line, //  add XAdES ds:Object 
0, Line, //  apply rotation and flipping 
0, Line, //  Build the property for it 
0, Line, //  Read them back in again 
0, Line, //  Check Basics 
0, Line, //  output to console 
0, Line, //  Even page footer is optional, only return 
0, Line, // this.tpt = tpt; 
0, Line, //  size without crop 
0, Line, //  Copy cell value (cell type is updated implicitly) 
0, Line, //  Border from a theme, brown 
0, Line, //  see https://support.office.com/en-us/article/COUNTBLANK-function-6a92d772-675c-4bee-b346-24af6bd3ac22   "Cells with formulas that return "" (empty text) are also counted." 
0, Line, //  RTR 2 had f3 (unchanged), f5 (=f2) and f6 (moved down) 
0, Line, //  comment exists 
0, Line, //  assertEquals("Checking hour = " + hour, date.getTime().getTime(),                DateUtil.getJavaDate(excelDate).getTime()); 
0, Line, //  Write out and read back, should still be valid 
0, Line, //  ftEnd 
0, Block, /*              * Without revocation data service we cannot construct the XAdES-C             * extension.              */
0, Line, //  enforce singleton 
0, Line, //  nothing to check 
0, Line, //  Build the PictureData object from the data 
0, Line, //         decRef(); 
0, Block, /*  converts 1D array to 2D array for calculations  */
0, Line, //  cryptoapi 
0, Line, //  junit is only using hamcrest-core, so instead of adding hamcrest-beans, we provide the throwable   search with the basics...   see https://stackoverflow.com/a/47703937/2066598 
0, Line, //  Fetch the level 
0, Line, //  And output the byte 
0, Line, //  sheet-level policies 
0, Line, //  formula in the follower cell is rebuilt 
0, Line, //  Check the dates 
0, Line, //  Copy over 
0, Line, //  test signing with separate opened packages 
0, Line, //  the amount of vertical white space before the paragraph 
0, Line, //  Neither defined nor reserved 
0, Line, //  Indent level is not written for master styles 
0, Line, //  whether to display outline symbols (in the gutters) 
0, Line, //  Verification 
0, Line, //  translate all of the points to the same angle as the ellipse 
0, Line, // the temp file will be deleted when JVM terminates 
0, Line, //  DCTerms namespace only use with 'created' and 'modified' elements 
0, Line, //  Three attributes 
0, Line, // register a picture 
0, Line, //  output all full lines in the middle 
0, Line, // run.setText("xxx",14);  fail("Position wrong"); 
0, Line, //  y coordinate of center point 
0, Line, //  check what happens if the file is passed as "Object" 
0, Line, //  transparent 
0, Line, //  should never happen in practice 
0, Line, //  index to first row   index to last row 
0, Line, //  Finally check on message 
0, Line, //  De-crement by one the last column value. 
0, Block, /*  char 4   */
0, Line, //  Workbook has drawing stuff, but this sheet doesn't 
0, Line, //  =sum(C:C) -> 6 
0, Line, //  Overlaps with 13 - 16750 (before, overlap and after replacements required) 
0, Line, //  Save, load, check 
0, Line, //  when shifting down, sort higher row-values first 
0, Line, //  First up is the size, in 4 bytes, which is fixed   Then is the header 
0, Line, //  It's not an int. 
0, Line, //  recursively walk group-shapes 
0, Line, //  mask is 0x030004   char flags 0x0004 = underlined 
0, Line, //   without getting confused 
0, Line, //  SP 10 
0, Line, //  this file has incorrect default content-types which caused problems in Apache POI   we now handle this broken file more gracefully 
0, Line, //  read the original sheet header order 
0, Line, //  Now with an existing file 
0, Line, //  name of the symbol that this was derived from 
0, Line, //  Have we done this string already? 
0, Line, //  Write it back out, and re-read 
0, Line, //  sprmPFInnerTableCell -- 0x244b 
0, Line, //  end of the group so reset the count for this level 
0, Line, //  Test cleaning cols 
0, Line, //  Any other type of embedded object. 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createTimeConstraint	 * (int, java.lang.String, java.lang.String, java.lang.String)	  */
0, Line, // //// Case 4: Evaluate "Table1[#All]" //////// 
0, Line, //  event based extractor does not have a document 
0, Line, //  options   recordid   remaining bytes 
0, Line, // //////////////// Powerpoint 
0, Line, //  Hyperlinks should all be to #_ftn1 or #ftnref1 
0, Line, //  sub-normal numbers 
0, Line, //  else - usual case   delete single element (without re-hashing) 
0, Line, //  Add some more 
0, Line, //  Just copy over 
0, Line, //  visible size 
0, Line, // link length 
0, Line, //  Grab the start and end, which are in characters 
0, Line, //  3% in the MSFT example 
0, Line, //  sid=x236, 16 bytes long 
0, Line, //  [sum ] 
0, Line, //  Create 2 comments for A1 and A" cells 
0, Line, //  we have a xml file 
0, Line, //  label frequency   tick mark frequency 
0, Line, //  and add a row to summary 
0, Line, //   to format the cells to the same value as the one next to it 
0, Line, //  some other error ?? 
0, Line, //  This used to break, until bug #43116 was fixed 
0, Line, //  *** sun.misc.Cleaner unmapping (Java 8) *** 
0, Line, //  re-create the sub-range so we can delete it 
0, Line, // provided in bug-44886 
0, Line, //  gracefully handle missing CellRef here in a similar way as XSSFCell does 
0, Line, //  The different kinds of geometry 
0, Line, //  First up, fetch the number of characters this applies to 
0, Line, //  Create the record 
0, Line, //  The overt symptom of the bug   DBCELL record pos is calculated wrong if VRA comes before RRA 
0, Line, // 	private static boolean compareStreams(InputStream isA, byte[] generatedContent) {    		InputStream isB = new ByteArrayInputStream(generatedContent);    		// The allowable regions where the generated file can differ from the   		// proof should be small (i.e. much less than 1K)  		int[] allowableDifferenceRegions = {   				0x0228, 16,  // a region of the file containing the OS username  				0x506C, 8,   // See RootProperty (super fields _seconds_2 and _days_2)  		};  		int[] diffs = StreamUtility.diffStreams(isA, isB, allowableDifferenceRegions); 
0, Line, // ??        textFormatter[0x29] = new DecimalFormat("_(*#,##0_);_(*(#,##0);_(* \"-\"_);_(@_)");  ??        textFormatter[0x2A] = new DecimalFormat("_($*#,##0_);_($*(#,##0);_($* \"-\"_);_(@_)");  ??        textFormatter[0x2B] = new DecimalFormat("_(*#,##0.00_);_(*(#,##0.00);_(*\"-\"??_);_(@_)"); 
0, Line, //  YK: Formula data can span into continue records, for example,   when containing a large array of strings. See Bugzilla 50244 
0, Line, // cell style for hyperlinks 
0, Line, // selectPath("declare namespace r='http://schemas.openxmlformats.org/officeDocument/2006/relationships' $this//[@embed]"); 
0, Line, //  SP 15 
0, Line, // Gracefully handle records that we don't know about,  that happen to be continued 
0, Line, // try to assign an invalid name to the 2nd sheet 
0, Line, //  horizontal center 
0, Line, //  copy from source copy, original source might be overridden in process! 
0, Line, //  make method visible for this package 
0, Line, //  see https://issues.apache.org/bugzilla/show_bug.cgi?id=55611 
0, Line, //  SUM over a range 
0, Line, //  this length does not include any extra array data 
0, Line, //  stream pointer to the SST record   don't really understand this yet. 
0, Line, //  Check our BAT knows it's free 
0, Line, //  Get without recursing 
0, Line, // Create cachefield/s and empty SharedItems - must be after creating references 
0, Line, //  Boolean 
0, Line, //  We use 12 bit codes:   * 0-255 are real bytes   * 256-4095 are the substring codes   Java handily initialises our buffer / dictionary 
0, Line, //  With a cell elsewhere in the merged region, get top-left 
0, Line, //  Build the sheet that will hold the data for the validations. This   must be done first as it will create names that are referenced 
0, Line, //  Enable, shows up 
0, Line, //  $C1+C$2 
0, Line, //  properties specific to shapes 
0, Line, //  12:45 on 27th April 2012 
0, Line, //  If none, do a thread-safe creation 
0, Line, //  bug occurs if the formula record has been associated   with the first shared formula group 
0, Line, //  A 32-bit unsigned integer that specifies the PenStyle.   The value MUST be defined from the PenStyle enumeration table 
0, Line, //  Should always give us a string  
0, Line, //  Java months are 0 based! 
0, Line, //  This time is typically ~800ms, versus ~7800ms to iterate getMergedRegion(int). 
0, Line, //  information stream to the POI filesystem. 
0, Line, //  plus 3 bytes minus 2 for the length 
0, Line, //  Compare each field in ctColor.   Cannot compare ctColor's XML string representation because equivalent   colors may have different relation namespace URI's 
0, Line, //  another CONTINUE 
0, Line, //  Mow many co-ordinate positions are there per millimetre? 
0, Line, //  Should never be 
0, Line, //  unwrapped single value 
0, Line, //  create the masters 
0, Line, //  compute radius 
0, Line, //  An 8-bit unsigned integer that specifies the stroke variation for the font. 
0, Line, //  ignore these here for now 
0, Line, //  fields uninitialised 
0, Line, //   people in To + CC + BCC. 
0, Line, //  copy Grpprl from dataStream 
0, Line, //  360: PHONETIC 
0, Line, //  Not actually sheet based at all - is workbook scoped 
0, Line, //  Simple reference to a name in another file 
0, Line, //  Indices used for built-in formats may be overridden with   custom formats, such as locale-specific currency.   See org.apache.poi.xssf.usermodel.TestXSSFDataFormat#test49928()    or bug 49928 for an example.   This is why we need to check stylesSource first and only fall back to   BuiltinFormats if the format hasn't been overridden. 
0, Line, //  -90 to 90 
0, Line, //  D2 
0, Block, /* 		 * Change the category to "POI example". Any former category value will		 * be lost. If there has been no category yet, it will be created.		  */
0, Line, // The pictstream can be truncated halfway through a picture.  This is not a problem if the pictstream contains extra pictures  that are not used in any slide -- BUG-60305 
0, Line, //  empty (happens on the right hand side when there is an odd number of functions) 
0, Line, //  Check no style is there 
0, Line, //  shape's height. 
0, Line, //  test samples: 45538_classic_Footer.xls, 45538_classic_Header.xls 
0, Line, // 				throw new RuntimeException(e); 
0, Line, //  SP @ 26 
0, Line, //  D5 
0, Line, //  Check is was stored correctly 
0, Line, //  paragraph is 97 long 
0, Line, //  Check to see if the sourceFolder variable holds a reference to 
0, Line, //  first add 20 images to the slide 
0, Line, //  read from the file input stream 
0, Line, //  there are actually TextBoxRecords without extra data - see #54722 
0, Line, //         CertificateFactory certificateFactory = CertificateFactory.getInstance("X.509");          certificate = (X509Certificate) certificateFactory                  .generateCertificate(new ByteArrayInputStream(certificate                          .getEncoded())); 
0, Line, //  else some unexpected error 
0, Block, /*  Create an empty property.  */
0, Line, //  =CHOOSE(2,A2,A3,A4) 
0, Line, //  Now try writing through to 192, check that the SBAT and blocks are there 
0, Line, //  Starts out with 5 entries:    _VBA_PROJECT_CUR    SummaryInformation <(0x05)SummaryInformation>    DocumentSummaryInformation <(0x05)DocumentSummaryInformation>    Workbook    CompObj <(0x01)CompObj> 
0, Line, // Not more than one until more created 
0, Line, //  There is an empty byte between each top-level record in a Word doc 
0, Line, //  read internal and external coordinates from spgrContainer 
0, Line, //  Append the email address in <>, assuming    the name wasn't already the email address 
0, Line, //  what happens with level below 1 
0, Line, //  create hyperlink pointing to a page, which isn't available at the time of importing the content 
0, Line, //  We use the getInputStream() method from java.util.zip.ZipFile   class which return an InputStream to this part zip entry. 
0, Line, //  Update the start position if needed 
0, Line, //  numeric criteria 
0, Line, // none is not the same as "not set", therefore the following doesn't work any more  assertFalse(ctBorder.isSetBottom()); 
0, Line, //  There are 19 images in the picture, but some are 
0, Line, //  Check that this too added empty properties without error 
0, Line, //  Start walking the file, looking for the records 
0, Line, //  Existing file 
0, Line, // the value is not set and cell's type='N' which means blank 
0, Line, //  title slide 
0, Line, //  One with, from the top 
0, Line, //  If no such record has been set, the default alignment is TA_LEFT,TA_TOP. 
0, Line, //  Remove sheet1, we should only have sheet2Name now 
0, Line, //  Look up the sheet, if present 
0, Line, // 			// bug report mentions 'Editing the formula in excel "fixes" the problem.' 
0, Line, //  a FileInputStream does not support "marking" 
0, Line, //   cells into strings without error 
0, Line, //  If in doubt, go for the default 
0, Line, //  If table name is modified after getTable is called, the table can only be found by its new name 
0, Line, //  cast to long to preserve bit 31   (sign bit for ints) 
0, Block, /* int reserved = */
0, Line, //  B is 2006-01-24 (2nd day of week) 21:25:03.725 
0, Line, //  sprmPDyaFromText 
0, Block, /*          * plcfbtePapx (bin table for PAP FKPs) Written immediately after the         * plcfbteChpx. This is recorded in all Word documents.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Line, // header with month titles 
0, Line, //  always overwrite the font info properties when a font data given   as the font info properties are assigned generically when only a typeface is given 
0, Line, //  Embedded Object 
0, Line, //  No comments there yet 
0, Block, /* CTP p = */
0, Line, // once you create a multi-cell array formula, you cannot change the type of its cells 
0, Line, // then we'll decrement instead of increment. 
0, Line, //  chooseOffset   Ref - A2 
0, Line, // parse these at some point. 
0, Line, //  It is this outline of the outline that will be filled in 
0, Line, //  loop through HeaderFooterRecord records having not-empty GUID and match them with 
0, Line, //  evaluate twice to confirm caching looks OK 
0, Line, // shouldn't do 1-row merge 
0, Line, //  An array of WMF PointL objects that specifies the points for all polygons in logical units.   The number of points is specified by the Count field value. 
0, Line, //  Rows are moving down 
0, Line, //  convert to list of object-arrays for @Parameterized 
0, JavaDoc, /* 	 * get the font family (TODO)	 *	 * @return family	  */
0, Line, //  Could it be a visio one? 
0, JavaDoc, /*      * Returns a human-readable representation of the Class ID in standard      * format {@code "{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"}.     *      * @return String representation of the Class ID represented by this object.      */
0, Line, //  no cells to check 
0, Line, //  Crazy special case   Length is in bytes, from the start   Hyperlink appears to be empty 
0, Line, //  Red (1 byte): An 8-bit unsigned integer that defines the red intensity value for the palette entry. 
0, Line, //  keep aspect ratio for height 
0, Line, //  322: KURT   323: SKEW 
0, Line, //  The x-coordinate of a control point. 
0, Line, //  internally values below zero are stored differently 
0, Line, //  color index 
0, Line, //  Rows and cells 
0, Line, //  iterate over shapes and re-generate shapeId 
0, Block, /*  ********** START implementation of FixedField **********  */
0, Line, //  TRUE > FALSE 
0, Line, //  fails at formula "=MEHRFACH.OPERATIONEN(E$3;$B$5;$D4)" 
0, Line, //  A condition specification 
0, Line, //  now go through all the textruns and check for hyperlinks 
0, Line, //  replace '/' to make test work equally on Windows and Linux 
0, Line, //  Our test value 
0, Line, //  creates a new Paragraph, cursor is positioned inside the new   element 
0, Line, //  For var-arg (and other?) functions, the metadata does not list all the parameter   operand classes.  In these cases, all extra parameters are assumed to have the   same operand class as the last one specified. 
0, Line, //  Placeholder EMFs for clients that don't support the OLE components. 
0, Line, //  WordToFoUtils.setBorder(regionBody, sep.getBrcTop(), "top");   WordToFoUtils.setBorder(regionBody, sep.getBrcBottom(), "bottom");   WordToFoUtils.setBorder(regionBody, sep.getBrcLeft(), "left");   WordToFoUtils.setBorder(regionBody, sep.getBrcRight(), "right"); 
0, Line, //  FILE_TAIL - unknown byte sequence 
0, Line, //  Easy, normal v text tag 
0, Line, //  Check it now has two SLWTs 
0, Line, //  =====================================================================   Case 1: Existing code uses XSSFSheet for-each loop   =====================================================================   Original code (no longer valid) 
0, Line, //  Now the number of Placeholder Texts 
0, Line, //  international format   international format   international format 
0, Line, //  Something else, oh dear... 
0, Line, //  bubble series type   num bubble values 
0, Line, //  correct saltHash for default password (and docId/saltHash) 
0, Line, //  Have it processed 
0, Line, //  Now overall 
0, Line, //  indexed color 
0, Line, // remove the sheet that needs to be reordered and place it in the spot we want 
0, Line, //                 a1 = true;              } 
0, Line, //  For some reason, there are two types that don't have a    separator despite the flags that indicate they do 
0, Line, //  last knot 
0, Line, //  Looks to be a truncated block   This isn't allowed, but some third party created files    sometimes do this, and we can normally read anyway 
0, Line, //  "Time" validation type 
0, Line, //  Check the current element 
0, Line, //  Create a header and a footer 
0, Line, //  lazily populated. This should only be accessed through getTableCache   keys are lower-case to make this a quasi-case-insensitive map 
0, Line, //  special case for MMMMM = 1st letter of month name 
0, Line, //  Every one of these component records is optional   (The whole PageSettingsBlock may not be present) 
0, Block, /*  char 1   */
0, Line, //  category data type   values data type 
0, Line, //  add second slide with different order in object creation 
0, Line, //  this method seems safer on Android than getFactory() 
0, Line, //  expected during successful test   no negative index in the range message 
0, Line, //  2nd is centre aligned (default) + normal line spacing 
0, Line, //  this code is based on the libre office implementation.   The MS-OFFCRYPTO misses some infos about the various rotation sizes  
0, Line, //  decrease the shape width from 300 pt to 100 pt 
0, Line, //  Try it can be opened 
0, Line, //  Add back, returns 
0, Line, // options: HyperlinkRecord.HLINK_URL | HyperlinkRecord.HLINK_ABS | HyperlinkRecord.HLINK_LABEL 
0, Line, //  This value MUST be composed of BrushData flags 
0, Line, //  This is some odd Outlook 2002 thing, skip 
0, Line, //  dvEmpty.xls is a simple one sheet workbook.  With a DataValidations header record but no    DataValidations.  It's important that the example has one SHEETPROTECTION record.   Such a workbook can be created in Excel (2007) by adding datavalidation for one cell 
0, Line, //  Row '11' 
0, Block, /*  */
0, Line, //  row "2" 
0, Line, //  single  Print_Titles built-in record 
0, Line, //  check if the next char is garbage and limit the len if necessary 
0, Line, //  8 byte 'not used' field 
0, Line, //  Seems POI accepts longer numbers than Excel does, excel trims the   number to 15 digits and removes the "9" in the formula itself.   Not the fault of FIXED though. 
0, Line, //  Return, without the leading = 
0, Line, //  cs4 --> 24 -> 23 
0, Line, //  Record this as the last row we saw 
0, Line, //  end package scope class POIFSReaderRegistry 
0, Line, //  Add some more tables, and check 
0, Line, //  TargetMode (default value "Internal") 
0, Line, //  The custom number format should be entirely removed from the workbook 
0, Line, //  test conversion of cell from text to boolean 
0, Line, //  SP @ 20 
0, Line, //  They are intended for specifying a font when the specified typeface is not available. 
0, Line, //  rewriting changes the size 
0, Line, //  Theme color references are NOT positional indices into the color scheme,   i.e. these keys are NOT the same as the order in which theme colors appear   in theme1.xml. They are keys to a mapped color. 
0, Line, // noinspection SuspiciousMethodCalls 
0, Line, //  not xml, may be an image or other binary format 
0, Line, // column greater than XFD 
0, Line, //  Check case where both inputs are of wrong type 
0, Line, //  Process each record in turn, looking for interesting ones 
0, Line, //  fetch the unsafe instance and bind it to the virtual MH: 
0, Line, //  http://doc.optadata.com/en/dokumentation/application/expression/functions/financial.html 
0, Line, //  Remove all hyperlinks from a saved workbook 
0, Line, //  Image one 
0, Line, // 16-byte GUID. Seems to be always the same. Does not depend on the hyperlink type 
0, Line, // there should be a relation to this drawing in the worksheet 
0, Line, //  Aggregates don't have a sid   We could step into them, but for these needs we don't care 
0, Line, //  In this case, the image will overlap part of another column and it is   necessary to calculate just how much - this will become the inset 
0, Line, //  The default Style is already "none"   Therefore the new style already exists as Id=0  assertTrue(borderId > 0); 
0, Line, // This will ensure that a run does not split a continue 
0, Line, //  Maximum number of persist objects written 
0, Line, //  Re-fetch the mini store, and add it a second time 
0, Line, //  simple expansion of top   rows containing area top being shifted down: 
0, Line, //  do a quick check if there is work to do to not incur the overhead if not necessary anyway 
0, Line, //  in pixel 
0, Line, //  target line   line of a scatter chart from 0 (min) to 1 (max) having value of target 
0, Line, //  If this doesn't apply, no color change is expected 
0, Line, //  Now grab their underling object 
0, Line, //  Find how many SlideListWithTexts we have   Also, grab the Environment and PPDrawing records 
0, Line, //  Custom name was stored 
0, Line, //  Check drawing width 
0, Line, //  Will it fit in a 8 bit atom? 
0, Line, //  Last slide is 257 / 6 
0, Line, //  font size 20   colour red 
0, Line, // the point of this is to trigger the addition of  some common visio classes -- ConnectsType 
0, Line, //  Get the target URI, excluding any relative fragments 
0, Line, // commentTextAtom is missing 
0, Line, //  Handle any "missing" cells which had comments attached 
0, Line, //  Spaces muck things up a bit.  It would be clearer why the following cases are   reasonable if POI encoded tAttrSpace in the right places. 
0, Line, //       } 
0, Line, //  TODO - this seems to occur when IntersectionPtg is present   This example file "IntersectionPtg.xls"   used by test: TestIntersectionPtg.testReading()   has 10 bytes unused at the end of the formula   10 extra bytes are just 0x01 and 0x00   LittleEndianByteArrayInputStream in = new LittleEndianByteArrayInputStream(byteEncoding);   Ptg.readTokens(encodedTokenLen, in);   int nUnusedBytes = _byteEncoding.length - in.getReadIndex(); 
0, Line, //  Get an element from the ArrayList that contains the data for   the workbook. This element will itself be an ArrayList   containing Strings and each String will hold the data recovered 
0, Line, //  Color is a tint of white or black 
0, Line, //  Now, have them moved to the right place 
0, Line, //  Find where the next SlidePersistAtom is 
0, Line, //  300 - 10 - 10   first line is NOT indented   other lines are indented by leftMargin (the value of indent is not used) 
0, Line, //  in an earlier release the hashMagic (aka DigestAlgorithmIdentifier) contained only   an object identifier, but to conform with the header generated by the   javax-signature API, the empty <associated parameters> are also included 
0, Line, //  missing, we add it 
0, Line, //  Remove the 2nd 
0, Line, //  ensure that this works for SUM 
0, Line, //   the column counter 
0, Line, //  If an array is square or is taller than it is wide (more rows than columns), LOOKUP searches in the first column. 
0, Line, //  reserved 
0, Line, // index of cell in row 
0, Line, //  the opc spec allows case-insensitive filename matching (see #49609) 
0, Line, //  Where +ve has a fraction, but -ve doesn't, we currently show both 
0, Line, //  defined names may begin with a letter or underscore or backslash 
0, Line, //  not necessary for HeapByteBuffer, avoid lots of log-output on this class 
0, Line, //  MergedCellsTable usually here 
0, Line, //  list delimiter is the nul char 
0, Line, //  Aggregate drawing records 
0, Line, //  Text Box. Print out first 8 bytes of data, then 8 4 later 
0, Line, // drawing = ((XSSFSheet)sheet).createDrawingPatriarch(); 
0, Line, //  short xf index   str len + flag 
0, Line, //  Check they have what we expect in them 
0, Line, //  Two fonts 
0, Line, //  bug 55668: don't try to store null-string when formula   results in empty/null value 
0, Line, //  If we get here, then there aren't any    free sectors in any of the SBATs   So, we need to extend the chain and add another 
0, Line, //   2^200% -> 2 not 1.6E58 
0, Line, //  Don't swap them around 
0, Line, //   the same regular image 
0, Line, // Set autoformat properties 
0, Line, //  If array covers an area that is wider than it is tall (more columns than rows), LOOKUP searches for the value of lookup_value in the first row. 
0, Line, //  any date format will do 
0, Line, //  too few arguments 
0, Line, //  From real files 
0, Line, //  first run properties 
0, Line, //  indentation before text 
0, Line, //  horizontal position   vertical position 
0, Line, //  center of text relative to text block 
0, Line, //  Now the ppt un-encrypted header token (4 bytes) 
0, Line, //  This isn't all that consistent, but it's the best we can really manage... 
0, Line, //  move table without resizing, shouldn't change row or column count 
0, Line, //  destination rows are within area ref (possibly exact on top or bottom, but not both)   - no change to area 
0, Line, //  /p:sldMaster/p:cSld/p:spTree/p:sp/p:nvPr/p:ph[@type="title"] 
0, Line, // 	} 
0, Line, //  Next up, grab the data that makes up the 
0, Line, //  encryption info doesn't exist anymore   SoftMaker Freeoffice produces such invalid files - check for "SMNativeObjData" ole stream 
0, Line, // This also happens when you save this document as text from MSWord. 
0, Line, //  check the cache first 
0, Line, //  Read back in as-is 
0, Line, //  Generate a single Text Piece Table, with a single Text Piece    which covers all the (8 bit only) text in the file 
0, Line, //  How odd. RecordTypes normally substitutes in    a default handler class if it has heard of the record    type but there's no support for it. Explicitly request    that now 
0, Line, //  The second print titles name record has getSheetNumber()==4 
0, Line, //  Now ask for a free one, will need to extend the file 
0, Line, //  Name that looks similar to a cell reference but is outside the cell reference row and column limits 
0, Block, /*  There is no document summary information yet. We have to create a                 * new one.  */
0, Line, //  First child should be the ExVideoContainer 
0, Line, //  Check it now has three slides 
0, Line, //  assume sheets are accessible via case-insensitive name 
0, Line, //  First is 30 long, bold and font size 
0, Line, //  use a NullOutputStream to not write the bytes anywhere for best runtime 
0, Line, // 256 is because the width is in 256ths of a character 
0, Line, // tmp.delete(); 
0, Line, //   processing each bit of the flag byte in turn 
0, Line, // stFile starts here: 
0, Line, //  Has chart on 1st sheet?? 
0, Line, //  Initialise the masks list 
0, Line, // //////////////// Publisher 
0, Line, //  If we're overwriting, free any remaining blocks 
0, Line, //  old top column of area has moved deep within the area, and exposed a new top column 
0, Line, //  skip rows before the start of this group 
0, Line, //  check for empty text - only output a bullet if there is text, 
0, Line, //  reset replace counter 
0, Line, // noinspection deprecation - for performance reasons! 
0, Line, // A1:C3 
0, Line, //  print over then down 
0, Line, //  18 @ 106   17 @ 11 
0, Line, // Now its not shared! 
0, Line, //  do we need to shift this part? 
0, Block, /*  Fill the property with appropriate settings so that it specifies the         * document's title.  */
0, Line, //  If workbook does not contain any data tables matching the provided name, getTable should return null 
0, Block, /* OPCPackage p = */
0, Line, // 			// make sure that RRA and VRA are in the right place  			// (Aug 2008) since the VRA is now part of the RRA, there is much less chance that  			// they could get out of order. Still, one could write serialize the sheet here,  			// and read back with EventRecordFactory to make sure... 
0, Line, //  Should only ever be one of each of these 
0, Line, //  is applied to an image being drawn. This value MUST be one of the values defined in the following table. 
0, Line, //  typically file name 
0, Line, // Set the value that is rendered for the cell  also applies the format 
0, Line, //  high bounds check fail gives #REF! if arg was explicitly passed 
0, Line, //  Assign it for easy lookup, as best we can 
0, Line, //  btWin32   btMacOS   rgbUid   tag   size   cRef   foDelay   unused1   cbName (@ index 33)   unused2   unused3 
0, Line, //  The distance from the arc's midpoint to the midpoint of its chord. 
0, Line, //  Setup the fields to read and write the counts and starts 
0, Line, //  0xc 
0, Line, // Comment comment = null; 
0, Line, //  options: UNC_PATH | LABEL | TEXT_MARK | ABS | FILE_OR_URL   label: "My Label" 
0, Line, //  Save, re-load and re-check 
0, Line, //  Data Consolidation Information 
0, Line, //  this means the cell reference in the test is bad. 
0, Line, //  is square. 
0, Line, //  all other combinations of value types are silently ignored 
0, Line, //  invoke TSP service 
0, Line, //  public static int RESERVED1_BIT       = 1 << 1;   public static int RESERVED2_BIT       = 1 << 3;   public static int RESERVED3_BIT       = 1 << 5;   public static int RESERVED4_BIT       = 1 << 7;   public static int RESERVED5_BIT       = 1 << 9;   public static int RESERVED6_BIT       = 1 << 11;   public static int RESERVED7_BIT       = 1 << 13 | 1 << 14 | 1 << 15; 
0, Line, //  end alignment options bitfields 
0, Line, //  Test directly with the .000 style 
0, Line, //  and still have them be the same 
0, Line, //  Copy this into a temp file, so we can play with it 
0, Line, //  Make sure we don't put in any extra new lines 
0, Line, //  Check master text is there 
0, Line, //  across subnormal threshold (some mistakes when close) 
0, Line, //  pad to next 2-byte boundary (requires 0 or 1 bytes)   6 for 3 shorts: sid, dataSize, idOffset 
0, Line, //  adding blank to 1.0 gives 1.0 
0, Block, /*  Create a array for the current entry  */
0, Line, //  Set the color to black (no theme). 
0, Line, //  Certain file format writers skip the row number   Assume no gaps, and give this the next row number 
0, Line, //  two HeaderFooterRecord records, the first one has zero GUID (16 bytes at offset 12) and belongs to the PSB, 
0, Block, /*  if connecting is not possible this will throw a connection refused exception  */
0, Line, //  and the other way around, use HWPF instead of XWPF and so forth 
0, Line, //  Now check the contents are as expected 
0, Line, //  A 32-bit unsigned integer that specifies the region type. This SHOULD be RDH_RECTANGLES (0x00000001) 
0, Line, //  Should always be zero 
0, Line, //  Notes record were corrupt, so don't expect any 
0, Line, //  A 32-bit unsigned integer that specifies the format of the pixels that make up the bitmap image. 
0, Line, //  Grab out our data 
0, Line, //  check that invalid formula does throw exception 
0, Line, //  Fallback exception 
0, Line, //  Check the values went in 
0, Line, //  save and recreate the workbook from the saved file 
0, Line, //  there is a @  The rowNum is 0 based 
0, Line, //  process cells backwards, because of shifting 
0, Line, //  is this comment part of the current row? 
0, Line, //  get property table from the document 
0, Line, // Complex escher record 
0, Line, //  Check the text is as we'd expect 
0, Line, //  chunkSize is irrelevant 
0, Line, //  18 @ 4078   18 @ 70 
0, Line, //  currently linux and mac return quite different values 
0, Line, // make sure it is so 
0, Line, // filter covers two columns 
0, Line, //  The default style shouldn't be added back to the styles source because it's built-in 
0, Line, //  Should have 5 attachments 
0, Line, // Test an uncompressed rich text string  Note that we can only ever get to a maximum size of 8227 since an uncompressed 
0, Line, //  else - top area column has been replaced - both area top and bottom may move now 
0, Line, //  note - cannot use IntPtg for negatives 
0, Block, /*  Read the document summary information.  */
0, Line, //  Presence / absence checks 
0, Line, //  then it could be a Chinese date 
0, Line, //  The y-coordinate of the ending vertex of a cubic Bezier curve relative to 
0, Line, //  write the header data with the properties declaration 
0, Line, //  area is moved down => overwritten area is [endColumn + n - movedColumns, endColumn + n] 
0, Line, //  if the file after closing is different, then re-set    the file to the state before in order to not have a dirty SCM    working tree when running this test 
0, Line, //  Icons : 5 ratings - Column S 
0, Line, //  Capture the text, as long as it isn't    simply an empty string 
0, Line, //  m12 (translateY) = eDy (The vertical translation component, in logical units.) 
0, Line, //  from protected POIFS 
0, Line, //  Shift end 1 forward 
0, Line, //  so we need to use setRule() explicitly! 
0, Line, //  Multiply Divide Formula 
0, Line, //  the underlying writer is SheetDataWriter 
0, Line, //  Should be 7th one 
0, Line, //  FALSE   "FG" 
0, Line, //  Eliminate any post-translation 
0, Line, //  to maintain topLeft:bottomRight order 
0, Block, /*  Print the number of properties in this section.  */
0, Line, //  no change because no overlap: 
0, Line, //  Ditto for our PersistPtr 
0, Line, //  else - find smallest greater than or equal to 
0, Line, //  check over max record size 
0, Line, //  created without got none 
0, Line, //  You don't get tinted indexed colours, sorry... 
0, Line, //  For 'm' after 'h', output minutes ('m') not month ('M') 
0, Line, //  'View Settings' (4 records) 
0, Line, //  for formulas, we want to keep the type and only have an ERROR as formula value 
0, Line, //  Check for the sheet index match, if requested 
0, Line, //  Shift 1 to front 
0, Line, //  something doesn't match so stop 
0, Line, //  index to font table 
0, Line, // replacement: 
0, Line, //  Return this uncompressed one, or null if that isn't their either 
0, Line, //  One rich block of text in that - text is all the same style 
0, Line, //  Number of bytes the data part uses 
0, Line, //  this is called by EscherPropertyFactory which happens to call it with empty parts   if a part is initial empty, don't allow it to contain something again 
0, Block, /*  no-op  */
0, Line, // //////////////// Mail/TNEF 
0, Line, // don't check if it's not within the shifted area 
0, Line, //  Nothing definitive was found, so we figure out it deductively 
0, Line, //  Has a theme, which has the colours on it 
0, Line, //  remove quotes and back slashes 
0, Line, // noinspection deprecation 
0, Line, //  A 32-bit unsigned integer that specifies the data in the OptionalData field. 
0, Line, //  Check the text lengths are still right 
0, Line, //  case CellType.NUMERIC 
0, Line, //  If the table is the first body element of the footnote then   a paragraph with the footnote reference should have been   added automatically. 
0, Line, //  Exports elements and attributes mapped with simpleXmlCell 
0, Line, //  A 16-bit signed integer that defines the vertical (y) coordinate of the point. 
0, Line, // actually found in document 
0, Line, //  CryptoAPI 
0, Line, //  returns this object as a line that extends between the boundaries of 
0, Line, //  we have to handle a few cases here 
0, Line, //  Create a pivot table on this sheet, with H5 as the top-left cell.. 
0, Line, //  B7   B8   B68   B69 
0, Line, //  A 32-bit unsigned integer that specifies the PenStyle. 
0, Line, //  Grok the flags, stored as bits 
0, Line, //  ConditionalFormattingTable goes here 
0, Line, //  test WARNING 
0, Line, // 								afp.setClass(Ptg.CLASS_ARRAY); 
0, Block, /*              * "A Shd80 structure that specifies the background shading for the text. By default, text is not shaded."             *              * Word (.doc) Binary File Format. Copyright (c) 2011 Microsoft             * Corporation. Release: Tuesday, March 15, 2011              */
0, Block, /*  Not 0.0 because POI sees date "0" minus one month as invalid date, which is -1!  */
0, Line, // the name array is smaller so searching through it should be faster than 
0, Line, //  Which contains our text 
0, Line, //  Mini stream should be at big block zero 
0, Line, //  bug 45565: text within TextBoxes is extracted by ExcelExtractor and WordExtractor 
0, Line, //  Excel displays fraction: 51/512 
0, Line, //  We have rows 0, 1, 2, 20 and 21   Row 0 has 1 entry   Row 1 has 4 entries   Row 2 has 6 entries   Row 20 has 5 entries   Row 21 has 7 entries   Row 22 has 12 entries 
0, Line, //  Solid (continuous) pen   PS_DASH system   dash style   PS_DOT system   dash style   PS_DASHDOT system dash style   PS_DASHDOTDOT system dash style   square dot style   dash style   long dash style   dash short dash   long dash short dash   long dash short dash short dash 
0, Line, //  in "e" formats,% and trailing commas have no scaling effect 
0, Line, //  The row height and cell width are set here to ensure that the 
0, Line, //  None set 
0, Line, //  don't add a sprm if we're looking at an ico = Auto 
0, Line, //  A 32-bit unsigned integer that defines the horizontal coordinate value of the rendering origin. 
0, Line, //  Won't contain unknown 
0, Line, //  alignment: 1 does have, 2 doesn't 
0, Line, // A 16-bit signed integer that defines the number of points in the array. 
0, Line, //  the original file contains a following value: 2009-07-20T13:12:00Z 
0, Line, //  fib.setCcpFtn(fib.getCcpFtn() + adjustment);   } 
0, Line, //   Calculate the Luminance 
0, Line, //  access some more content (we had cases where writing corrupts the data in memory) 
0, Line, //  add a marshaller that will throw an exception on save 
0, Line, //  special case for the field_1_position_of_BOF (=lbPlyPos) field of   the BoundSheet8 record which must be unencrypted 
0, Block, /*          * HWmf (2 bytes):  The resource handle to the metafile, when the metafile is in memory. When         * the metafile is on disk, this field MUST contain 0x0000. This attribute of the metafile is         * specified in the Type field of the META_HEADER record.          */
0, Line, //  represented by the A cell. 
0, Line, //  When formatting 'value', double to text to BigDecimal produces more   accurate results than double to Double in JDK8 (as compared to   previous versions). However, if the value contains E notation, this   would expand the values, which we do not want, so revert to 
0, Line, //  The could below should catch "archive is not a ZIP archive" 
0, Line, //  Trailing ' 
0, Line, //  (Remember that excel row (n) is poi row (n-1) 
0, Line, //  GenericPropertyNode property = new GenericPropertyNode(   tpt.getCharIndex( sepx.getStartBytes() ),   tpt.getCharIndex( sepx.getEndBytes() ), sed.toByteArray() ); 
0, Line, //  Length 24 
0, Line, //  width   height 
0, Line, //  Work back until we find it 
0, Line, //  If the source cannot be acquired, abort (no resources to free at this level) 
0, Line, //  Hide all the columns until the end of the group 
0, Line, //  cell does not fit on end of current row 
0, Line, //  the file at test-data/spreadsheet/49219.xls has ExternalNameRecords without actual data,    we did handle this during reading, but failed during serializing this out, ensure it works now 
0, Line, //  only handle non-null properties  
0, Line, //  delete additional target line series legend entry 
0, Line, //  If it starts with something like [Black] or [Yellow], 
0, Line, //  records that contain the embedded EMF metafile. 
0, Line, //  the data sources 
0, Line, //  anything else is false, such as text 
0, Line, //  last line can't be current, can it? 
0, Line, // valid date formats -- all should have "Jul" in output 
0, Line, //  from protected stream 
0, Line, //  outlineLevel 
0, Line, //  41484.999994200 = 23:59:59,499   41484.9999942129 = 23:59:59,500  (but sub-milliseconds are below 0.5 (0.49999453965575), XLS-second results in 59)   41484.9999942130 = 23:59:59,500  (sub-milliseconds are 0.50000334065408, XLS-second results in 00) 
0, Line, //  wrongData has the ObjRecord data as would have been written by v3.1  
0, Line, //  =index(C:C,2,1) -> 2 
0, Line, // 				throw new AssertionFailedError("Identified bug 46312");  			}  		} 
0, Line, // adjust indices of names ranges 
0, Line, // try a numeric cell 
0, Line, //  Check we get valid data for the two 
0, Line, //  Save and re-load it 
0, Line, //  application/vnd.ms-powerpoint 
0, Line, //  powerpoint generates AlternateContent elements which cNvPr elements aren't recognized   ignore them for now 
0, Line, //  verify proper behavior with null stream 
0, Line, //  JDK 8 adds an empty locale-string, see also https://issues.apache.org/jira/browse/LANG-941 
0, Line, // document-level container which stores info about all links in a presentation 
0, Line, //  Extract the text from the file as a vector 
0, Line, //  clear all cells in the range 
0, Line, //  Check defaults 
0, Line, //  a merged region already in this sheet 
0, Line, //    General codepage fallback: Charset on a content type header. 
0, Block, /*  Getters and setters  */
0, Line, //  Master 
0, Line, //  clear the offsets and sizes in our FileInformationBlock. 
0, Line, // date 
0, Line, //  Close the whole filesystem, and open it once more 
0, Line, //  A 32-bit floating-point value that specifies the limit of the thickness of the join on a mitered 
0, Line, //                 CTP p0 = body.getPArray(0); 
0, Line, //  in CN=... format 
0, Line, //  The POI Documents to work on 
0, Line, //  cell does not have a comment 
0, Line, //  SP @ 14 
0, Line, //  Only last row should move 
0, Line, //  this is necessary in Excel to actually make Workbook.setActiveCell() take effect 
0, Line, //  Create a pivot table on this sheet, with H1 as the top-left cell.. 
0, Line, //  Grab the de-compressed contents for later 
0, Line, //  Within NameRecords, it's ok to have the formula    part point at deleted sheets. It's also ok to    have the ExternSheetNumber point at deleted    sheets.   However, the sheet index must be adjusted, or    excel will break. (Sheet index is either 0 for    global, or 1 based index to sheet) 
0, Line, //  String msg = "Row[rownum="+mrow.getRowNum()+"] contains cell(s) included in a multi-cell array formula. You cannot change part of an array.";   assertEquals(msg, e.getMessage()); 
0, Line, //  Create a new Xf with the same contents 
0, Line, //  CalcChain has lots of entries 
0, Line, //  fields in BOTH style and Cell XF records 
0, Line, //  6 + 1 for Ptg 
0, Line, //  Not mergeable      A B    1 x     A1,B2 --> A1,B2 
0, Line, //  is it correct? 
0, Line, //  size of header and color table, for start of image data calculation 
0, Line, //  start with the assumption that the font is able to display the chars 
0, Line, //  Note - backward iteration 
0, Line, //  add overhead of SST record 
0, Line, //  Excel seems write values 2, 10, and 260, even though spec says "must be zero" 
0, Line, //  Find the versions of the core records we'll want to use 
0, Line, //  Mid way through 
0, Line, //  enforcing singleton 
0, Line, //  spaces around sheet name (with or without quotes makes no difference) 
0, Line, //  should be 1.0055, but has IEEE rounding 
0, Line, //  darker 25% 
0, Line, //  Good, it was detected 
0, Line, // Relative path notation - for alternative EXCEL.exe - fallback 
0, Line, // Test simple subtotal over one area 
0, Line, //         bytesRemaining -= size;          remainingData  =  new byte[bytesRemaining];          System.arraycopy( data, pos + size, remainingData, 0, bytesRemaining ); 
0, Line, //  would really love to know what goes in here. 
0, Line, //  Repeat as many times as you have data 
0, Line, //  "𝝊𝝋𝝌𝝍𝝎𝝏𝝐𝝑𝝒𝝓𝝔𝝕𝝖𝝗𝝘𝝙𝝚𝝛𝝜𝝝𝝞𝝟𝝠𝝡𝝢𝝣𝝤𝝥𝝦𝝧𝝨𝝩𝝪𝝫𝝬𝝭𝝮𝝯𝝰𝝱𝝲𝝳𝝴𝝵𝝶𝝷𝝸𝝹𝝺"; 
0, Line, //  Format, using the nice new 
0, Line, // directory can be null when creating new documents 
0, Line, //  increase insets, the wrapping width should get smaller 
0, Line, //  Keep just the first 6 bytes.  The rest is no good to us anyway. 
0, Line, //  keep searching to return the last persistent object with that refId 
0, Line, //  This is now the new end 
0, Line, //  The message should have 4 attributes  
0, Line, //  but we can read the conditional formatting itself 
0, Line, //  end bitfields for additional palette options   fill palette options 
0, Line, //  current value matches next value, add one 
0, Line, //  now check for the password 
0, Line, //  remove all conditional formatting for comparing BIFF output 
0, Line, //  link slide and notes slide with each other 
0, Line, //  should be ignored?!?, see MS-PPT ExOleObjAtom, but Libre Office sets it ... 
0, Line, //  Update the Document+Properties streams in the file 
0, Block, /*          * http://www.codecomments.com/archive281-2004-3-158083.html         *          * Algorithm proposed by Patrick TJ McPhee:         *          * read 2 bytes make sure they are 'ffd8'x repeatedly: read 2 bytes make         * sure the first one is 'ff'x if the second one is 'd9'x stop else if         * the second one is c0 or c2 (or possibly other values ...) skip 2         * bytes read one byte into depth read two bytes into height read two         * bytes into width else read two bytes into length skip forward         * length-2 bytes         *          * Also used Ruby code snippet from:         * http://www.bigbold.com/snippets/posts/show/805 for reference          */
0, Line, //  skip this if the current value matches the next one, or is the last one and matches the previous one 
0, Line, //  In case A, there is a single styling of the characters 
0, Line, //  3 int fields 
0, Block, /*  char 6   */
0, Line, //  CTHyperlinks is regenerated from scratch when writing out the spreadsheet   so don't worry about maintaining hyperlinks and CTHyperlinks in parallel.   only maintain hyperlinks 
0, Line, //  Just return if so and reset 'look' to something to keep   SkipWhitespace from spinning 
0, Line, //  the relationship Target 
0, Line, // Set CellStyle and RowStyle and ColumnStyle 
0, Line, //  else - No intersection and no shared border: do nothing  
0, Line, //  Prevent instantiation 
0, Line, //  m$ doc calls this fWantAdvise 
0, Line, //  sprmPNumRM 
0, Line, //  this is from an open bug/discussion over handling localization for number formats 
0, Line, //  clone needed? 
0, Line, //  to report errors and loose data while reading the workbook 
0, Line, //  see if this piece uses unicode.  From the documentation: If the second most significant bit  is clear, then this indicates the actual file offset of the Unicode character (two bytes). If the  second most significant bit is set, then the actual address of the codepage-1252  compressed version of the Unicode character (one byte), is actually at the offset indicated  by clearing this bit and dividing by two. 
0, Line, //  You can add multiple spans for one row 
0, Line, //  Save with leading = 
0, Line, // the first item in the calculation chain is the former second one 
0, Line, //  Allocate it, then ask again 
0, Line, //  start with value blank, but expect construction to be immediately   followed by a proper call to setValue() 
0, Line, //  compute angle of ellipse 
0, Line, //  The y-coordinate of the last control point of a NURBS. 
0, Line, //  get number of rows where row index < rownum   --> this tells us where our row should go 
0, Line, //  not supported -> remove 
0, Line, // wb.getAllPictures() should return the same instance across multiple calls 
0, Line, //  skew the angles for AWT output 
0, Line, // setting border to none removes the <bottom> element 
0, Line, //  And the rest until the end of the big block is zeros 
0, Line, //  Now reset, and try on a small bit 
0, Line, //  Check if a segment ends with a dot ('.') character. [M1.9] 
0, Line, //   preceded by a SupBookRecord 
0, Line, //  Update our header with the size   Don't forget to knock 8 more off, since we don't include the 
0, Line, //  Row '23' 
0, Line, //  Check the core 
0, Line, //  And that's it! 
0, Line, //  First goes the number of characters we affect   MasterStyles don't have this field 
0, Line, // sanity check 
0, Line, //  Try to evaluate them 
0, Line, //  A 32-bit unsigned integer that defines this record as a WMF Comment record. 
0, Line, //   2 x  
0, Line, //  This value MUST be greater than zero. 
0, Line, //  data taken from bugzilla 44774 att 21790 
0, Line, //  Ensure we can change them with other timezones and still read back OK 
0, Line, //  Nothing to do 
0, Line, //  Sanity check 
0, Line, //  sometimes the wmfsize is smaller than the amount of already successfully read bytes   in this case we take the lastLen as-is, otherwise we truncate it to the given size 
0, Line, //  png,gif,jpg or null for test 
0, Line, // add it again! 
0, Line, //  Check we can get the formula without breaking 
0, Line, //  so read what's left of the current record 
0, Line, //  only move 3D refs that refer to the sheet with cells being moved 
0, Line, //  to match Excel's E-notation 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#setFormula2(java.lang.String)	  */
0, Line, //  Should just be a single core document, complain if not 
0, Line, //  write the second excel file 
0, Line, //  B1   input row 1 
0, Line, //  scRGB has a linear gamma of 1.0, scale the AWT-Color which is in sRGB to linear RGB   see https://en.wikipedia.org/wiki/SRGB (the reverse transformation) 
0, Line, //  just an annotation, no code needed 
0, Line, //  TODO Rounding 
0, Line, //  Have everything recomputed 
0, Line, // BitFields: (last row relative, last col relative, last column number) 
0, Line, //  provide ExcelExtractor also in OOXML module, because scratchpad is not necessary for it 
0, Line, //  Switch to newStyle, style is now un-used 
0, Line, //  records to be aggregated 
0, Line, // extract all pictures contained in the presentation 
0, Line, //  for some combinations we expected exceptions 
0, Line, //  add 6 more than they need for use the next iteration     commented - buffer shall not contain any additional bytes --   sergey   byte[] newBuf = new byte[_offset + addition + 6]; 
0, Line, //   in read-write mode, not read-only mode 
0, Line, //  With the finalised uri, should be fine 
0, Line, //  csD -> cs1 -> 21 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#setOperator(int)	  */
0, Line, //  Condition 4: Row divides by 3, grey background 
0, Line, //  This re-assignment to the XSSFNames is not necessary if wb.write is not called. 
0, Line, //  Remaining 15 bits of field 2 
0, Line, // for a single-cell reference return A1 instead of A1:A1  for full-column ranges or full-row ranges return A:A instead of A,  and 1:1 instead of 1          
0, Line, //  set the cell's string value to "TEST" 
0, Line, //  A 16-bit signed integer that defines the vertical (y-axis) coordinate, in logical 
0, Line, //  The ministore itself is made up of 23 big blocks 
0, Line, //  String header looks wrong (probably missing)   OOO doc says this is optional anyway.   reconstruct data 
0, Line, //  update sheet index of sheet-scoped named ranges 
0, Line, // Create a unicode sheet name (euro symbol) 
0, Line, // 45  95  450  950  995 
0, Line, //  table(....)[][] 
0, Line, //  should be empty 
0, Line, //  currentOffset is now the location of the DBCELL record for this row-block 
0, Line, //  we don't evaluate HSSF filters yet 
0, Line, //  If there's no author, may be double padded 
0, Block, /*  For writing the property set into a POI file system it has to be             * handed over to the POIFS.createDocument() method as an input stream             * which produces the bytes making out the property set stream.  */
0, Line, //  ... so because being a stack, we will remove all entries having a greater index than the stackIndex 
0, Line, //  third char run is 16 long   font.color only 
0, Line, //  link to another slide 
0, Line, //  Pick off the last one 
0, Line, //  not modified 
0, Block, /*  Change the author to "Rainer Klute". Any former author value will             * be lost. If there has been no author yet, it will be created.  */
0, Line, //  Find all the embedded directories 
0, Block, /*          * Allow signature facets to inject their own stuff.          */
0, Line, //  Applying flip second time restores the original not-flipped transform 
0, Line, //  Check the data is unchanged and the right length 
0, Line, //  Remember - there is no 4! 
0, Line, //  setting standalone doesn't work with xmlbeans-2.3 & 2.6   ed.documentProperties().setStandalone(true); 
0, Line, //  Check our formula records 
0, Line, //  ... 
0, Line, //  TODO Last seen data 
0, Line, //  Replicates record order from Excel 2007, though this is not critical 
0, Line, //  Reals 
0, Line, //  implemented both by a cfRule "text" attribute and a formula.  Use the text. 
0, Line, //  Only care about the first few really though 
0, Line, // both substring and length rely on char, not codepoints.  This test confirms that the substring calls in HwmfText  will not truncate even beyond-bmp data.  The last character (Deseret AY U+1040C) is comprised of 2 utf16 surrogates/codepoints 
0, Line, //  currently (Oct 2008) POI handles this by exploding the whole shared formula group 
0, Line, // colon in tz 
0, Line, //  as per BIFF8 spec   Typically from third party programs   Typically odd Crystal Reports exports   Another third party program special 
0, Line, //  As a workaround, have a few extra 0 bytes on the end! 
0, Line, //  Some bug in StyleTextPropAtom rewriting means this will fail   We need to identify and fix that first  assertSlideShowWritesOutTheSame(hssB, pfsB); 
0, Block, /*  int headerLength =  */
0, Line, //  the exact example from the bugzilla description: 
0, Line, //  otherwise try at least to perform extracting tests on these old files 
0, Line, //  some files like equations don't have a valid filename,   but somehow encode the formula right away in the ole10 header 
0, Line, //  Now, load via Usermodel and re-check 
0, Line, //  Find and EscherTextboxRecord's, and wrap them up 
0, Line, //  Might be in the name field, check there 
0, Line, //  Remove the override definition for the specified part. 
0, Line, //  but A1 still uses D1, so if it changes... 
0, Line, //  the image is very close indeed to the column size. 
0, Line, //  check that we can still create a tempfile 
0, Line, //  application/vnd.openxmlformats-officedocument.drawingml.chart+xml   ?!MIME_TYPES.put(Pattern.compile(".*drawingml.*"), ".dwg"); 
0, Line, //  the following two lines turn off writing CDATA   see Bugzilla 48936 
0, Line, // JMH Look at when this method is called. Should it return a HSSFCell? 
0, Line, //  Set empty paragraph and character styles 
0, Line, //  clear cells 
0, Line, //  no password given, no encryption record exits -> done 
0, Line, //  do something with this at some point 
0, Line, // assume that the doc is in that codepage. 
0, Line, //  HSSFWorkbooks fail when writing out workbook 
0, Line, //  dest columns overlap top of area   - truncate the top 
0, Line, //  V6 stores it a 32 bit number at the offset 
0, Line, //  301: TDIST 
0, Line, // this works recursively to pull embedded tables from tables 
0, Line, //  TODO: deep copy of certList 
0, Line, //  fall through and look for other construction methods 
0, Line, //  {   TP = _text.get(i);   
0, Line, //  Save the byte into the dictionary 
0, Line, //  externalSheetIndex 0 -> AnotherSheet 
0, Line, //  HSSF returns one sheet higher than normal, and various bits 
0, Line, //  ideally assertSame, but XSSFCell creates a new XSSFCellComment wrapping the same bean for every call to getCellComment. 
0, Line, //  Standard formats 
0, Line, //  default rendering options 
0, Line, //  with PAPX reconstruction 
0, Line, //  Check they're all available 
0, Line, //  Slide 
0, Line, //  A value that SHOULD be set to zero and MUST be ignored upon receipt. 
0, Line, //  Write and re-load once more, to check that's ok 
0, Line, //  Find the record 
0, Line, //  Array Formula 
0, Line, //  JDK xmlsec 
0, Line, //  Values 
0, Line, //  Set cal to now ... only set to fixed date for debugging ... 
0, Line, // expand - 3 
0, Block, /*          * Completion of undigested ds:References.          */
0, Line, //   fail("not implemented"); 
0, Line, //  Check the document styles 
0, Line, //  header and verifier have to have the same cipher algorithm 
0, Line, //  and that the other name is unaffected 
0, Line, //  continue without log, this is expected in some setups   NOSONAR - also catch things like NoClassDefError here 
0, Line, //  metafile. This value MUST be a multiple of 4 bytes. 
0, Line, //  The default maximum size of extracted text 
0, Line, //  Ignore empty strings 
0, Line, //  Assume it has children, rather than being corrupted 
0, Line, //  array sizes must match 
0, Line, //  increment reference count for pictures 
0, Line, //  application/x-mspublisher 
0, Line, //  detect if this ppt was saved in Office2007 
0, Line, //  A!C6   A!C7   A!C67   A!C68 
0, Line, //  Create a ByteArrayOutputStream to hold everything in 
0, Line, //  POI saves images as image1.png, image2.png, etc.   added images have indexes 0,1,2....19 
0, Line, //  Grab our aggregate record, and wire it up 
0, Line, //  Built in formats 
0, Line, // expand - 2 
0, Line, //  but the problem is observable in rows 2,3,4 
0, Block, /*  Node found in map, just return it.  */
0, Line, //  Applies to one cell only 
0, Block, /* 		 * Read the custom properties. If there are no custom properties yet,		 * the application has to create a new CustomProperties object. It will		 * serve as a container for custom properties.		  */
0, Line, //  A 16-bit signed integer that defines the bitmap type. 
0, Line, //  Reset, and check the available goes back to being the 
0, Line, //  MaxRecord (4 bytes):  A 32-bit unsigned integer that specifies the size of the 
0, Line, //  a class to record a list of temporary files that are written to disk   afterwards, a test function can check whether these files were encrypted or not 
0, Line, //  0x17 - 0x24 reserved for international and undocumented 0x25, "(#,##0_);(#,##0)"  start at 0x26  jmh need to do colour 
0, Line, //  Shift 3 back 
0, Line, //  draw text 
0, Line, //  EncryptedVerifierHash: An array of bytes that contains the encrypted form of the hash of   the randomly generated Verifier value. The length of the array MUST be the size of the   encryption block size multiplied by the number of blocks needed to encrypt the hash of the   Verifier. If the encryption algorithm is RC4, the length MUST be 20 bytes. If the encryption   algorithm is AES, the length MUST be 32 bytes. After decrypting the EncryptedVerifierHash 
0, Line, //  rectangular bounding box of picture, at 72 dpi 
0, Line, // create the cell that will have the validation applied 
0, Block, /*  Format         */
0, Line, //  We now know how many unique special records we have, so init 
0, Block, /*          * Try to find PictureData with this checksum. Create new, if none         * exists.          */
0, Line, //  XBats 
0, Line, //  see http://stackoverflow.com/questions/5637650/overriding-protected-methods-in-java 
0, Line, //  iteration's result as the input for the next iteration). 
0, Line, //  We can't find the date, sorry... 
0, Line, //  Add the new picture in 
0, Line, //  1904 windowing (LocalDateTime) 
0, Line, //   all zero running from 24 bytes in to the end 
0, Line, //  empirically tested in Excel - 0=false, any other number = true/valid 
0, Line, //  rounding issues); use UTC here to prevent daylight saving issues for HOUR 
0, Block, /*          * [M2.4] : The package implementer shall require that the Content Types         * stream contain one of the following for every part in the package:         * One matching Default element, One matching Override element, Both a         * matching Default element and a matching Override element, in which         * case the Override element takes precedence.          */
0, Line, //  All done and added 
0, Block, /*              * refer to the section on PAPX in the spec. Places a size on the             * front of the PAPX. Has to do with how the grpprl stays on word             * boundaries.              */
0, Line, //  And check the values - blank 
0, Block, /* lastRowToShift */
0, Line, // Titles shown at the top of each page when printed 
0, Line, //  assertArrayEquals(aehOrig.getEncryptedHmacValue(), aehReload.getEncryptedHmacValue()); 
0, Line, //  Character is uppercase letter, find relative value to A 
0, Line, //  see https://stackoverflow.com/questions/36063375 
0, Line, //  test formula format 
0, Line, // bar chart data. The first value is the bar color, the second is the width 
0, Line, //  guess this is OK if the string length is zero 
0, Line, //  End of normal5124 
0, Line, //  Last cell should have one paragraph 
0, Line, //  data 
0, Line, //  Dump the contents of scher to screen. 
0, Line, //  Core Workbook records go first 
0, Line, //  optionally occurs if there are  references in the document. (4.10.3) 
0, Block, /*          * in this mode we preserving PAPX/CHPX structure from file, so text may         * miss from output, and text order may be corrupted          */
0, Line, //  So far we've been in sector counts, turn into bytes 
0, Line, //  Update 
0, Line, //  generated in Word 
0, Line, // TestFormulaShifter.class, //converted to junit4 
0, Line, //  Set the width of the column by converting the required image 
0, Line, //  A 32-bit unsigned integer that specifies an index in the EMF+ Object Table for an EmfPlusPen object   to use for drawing the EmfPlusPath. The value MUST be zero to 63, inclusive. 
0, Line, //  Now at high level 
0, Line, // a new border has been added 
0, Line, // ///////////////  Output the XML 
0, Line, //  the POIFSFileSystem we belong to 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.hssf.usermodel.PictureData#getData()      */
0, Line, //  calling createCell on a non-existing cell should create a cell and set the cell value and style. 
0, Line, //  rethrow to report errors correctly (we need to catch it here,   as we also catch RuntimeException below!): 
0, Line, //    HTML and text body encoding: Internet CPID property.   UTF-8 is ignored for text body. This seems to be a special Outlook behavior. 
0, Line, //  reset to not affect other tests 
0, Line, //  Header row should be copied 
0, Line, //  END OF CLASS 
0, Line, //  Create columns in reverse order 
0, Line, //  Make sure it is possible to create a conditional formatting rule   with every type of Border Style 
0, Line, //  Grab all the remaining data, and ignore it 
0, Line, //  untrackedColumns stores columns have been explicitly untracked so they aren't implicitly re-tracked by trackAllColumns 
0, Line, //  org.apache.poi.hwpf.usermodel 
0, Line, //  Handle matching things if we cross workbooks 
0, Line, //  reserved1   reserved2 
0, Line, //  handle both cases correctly. There is surely a better way to do this, though... 
0, Line, //  Will go one place higher as XBAT added in 
0, Line, //  Check they're as expected 
0, Line, //  The cell wanted is in this merged range   Return the primary (top-left) cell for the range 
0, Line, //  mailto:ebgans@mail.ru?subject=Hello,%20Ebgans! 
0, Line, //  The angle of an arc's major axis relative to the x-axis of its parent. 
0, Line, //  missing media type and subtype 
0, Line, //  Ensure the destination is free 
0, Line, //  Firstly by byte 
0, Line, //  options: TARGET_FRAME | ABS | FILE_OR_URL   targetFrame: "_blank" 
0, Line, //  serialize to byte array 
0, Line, //  Should be a reasonable guess. 
0, Line, // set print area from column a to column c (on first row) 
0, Line, //  Need to process the argument of SUM with transformFunctionNode below 
0, Line, //  Figure out how big it is 
0, Line, //  Happy day flow 
0, Line, //  Now parse the first 512 bytes, and produce 
0, Line, //  short side 
0, Block, /*  Check whether we have exactly two command-line arguments.  */
0, Line, //  Going to have to do it a slower way, because we have   to update the length come the end 
0, Line, //  For now, pretend to be an atom 
0, Line, //  Icons : 3 traffic lights 2 - Column J 
0, Line, //  (Also need to tell it where it is) 
0, Line, //  check for corrupted user edit atom and try to repair it 
0, Line, //  be setting the overlapMM value to zero. 
0, Line, //  link to slide - relative reference 
0, Line, //   to itself 
0, Line, //  bug 60260: shift rows or rename a sheet containing a named range 
0, Line, //  ... -1 is a rounding error 
0, Line, //  don't know why this record doesn't seem to get encrypted 
0, Line, //  record length not yet known ... 
0, Line, //  then fill the shape interior 
0, Line, //  destination columns are completely outside area ref 
0, Line, //  Make sure placeholder text does not come out 
0, Line, //  limit wrong calculated ole entries - (bug #57080)   standard encryption always uses aes encoding, so blockSize is always 16    http://stackoverflow.com/questions/3283787/size-of-data-after-aes-encryption 
0, Line, //  Grab the record data 
0, Line, //  field_7_palette_options bit map 
0, Line, //  284: FISHERINV 
0, Line, //  Set Cell Color : GREEN 
0, Line, // swallow what's left 
0, Line, //  if the frame references a chart, associate the chart with this instance 
0, Line, //  No really. Someone clearly forgot to read 
0, Line, //  find ExternalBlock for Add-In functions and remember its index 
0, Line, //  Save and re-open, both still there 
0, Line, //  handle (b) and (c) 
0, Line, //  and to the specified directory. 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getPromptBoxTitle()      */
0, Line, //  finish with 0x04 (int) ??? 
0, Line, //  Excel re-writes these to point to no sheet 
0, Line, //  Copy a test file over to our temp location 
0, Line, //  Array header 
0, Line, // re-creating a row does NOT add extra data to the parent 
0, Line, //  where does this 4 come from??? 
0, Line, //  Check that the filesystem can give us back the same bytes 
0, Line, //  remove the formula cells in C4:C6 
0, Line, //  Check the stream as-is 
0, Line, // if the text is already set, it should be overridden, not added twice! 
0, Line, //  C5:D7 will be shifted down with same size 
0, Line, //  This is the one class that's directly using printf, so it can't use   the default handling for quoted strings and special characters.  The   only special character for this is '%', so we have to handle all the   quoting in this method ourselves. 
0, Line, //  Implementation detail: POI natively prefers <w:b w:val="false"/>,   but should correctly read val="0" and val="off" 
0, Line, //  Do a full evaluate, as per our docs 
0, Line, //  And escher pictures 
0, Line, //  currently throws NPE because unknown function "currentcell" causes name lookup  
0, Line, //  CREATE_NULL_AS_BLANK - creates as needed 
0, Line, //  bug 52063: LOOKUP(2-arg) and LOOKUP(3-arg) 
0, Line, //  bug 59983:  Wrong update of shared formulas after shiftRow 
0, Block, /*                  * if it just empty fo:inline without "id" attribute doesn't                 * making sense to add it to DOM                  */
0, Line, //  Open the newly created file to check core properties saved values. 
0, Line, //  Actually move 
0, Line, //  The value MUST be in the WMF Ternary Raster Operation enumeration 
0, Line, // unmodified 
0, Line, //  map file extensions to the actual mappers 
0, Line, //  Allocate a few 
0, Block, /*  Byte order     */
0, Line, //  no instance data 
0, Line, //  Serialise the bulk of the String   The writeString handles tricky continue stuff for us 
0, Line, //  Ensure thaat the folder the user has chosen to save the CSV files   away into firstly exists and secondly is a folder rather than, for 
0, Line, //  Now, build records based on the PowerPoint stream 
0, Line, //  above regarding the behaviour of image resizing. 
0, Line, //  remember file base, which needs to be closed too 
0, Line, //  5 shorts + 6 bytes 
0, Line, // long 
0, Line, // 			File dir = new File("c:/temp");  			File effDocFile = new File(dir, SOURCE_DOC_FILE_NAME);  			processFile(effDocFile, outFile);  			return;  		} 
0, Line, // padding bytes 
0, Line, // a span of columns [1,5] 
0, Line, //  append a forward slash to avoid parse exception 
0, Line, //  These formula contents are a guess... 
0, Line, //  300 - 10 - 10 - 36 
0, Line, //  check for internet, no error means it works 
0, Block, /*  Read a custom property.  */
0, Line, //  The x-coordinate of the curve's control point relative to the shape's   width; a point on the arc. The control point is best located about 
0, Line, //  password protected files without password   ... currently none ... 
0, Line, //  create basic XML container structure 
0, Line, //  Get all the data into a single array 
0, Line, //  Add the offset to the first cell for the row into the   DBCellRecord. 
0, Line, //  skip reserved. 
0, Line, //  cell-level policies 
0, Line, // however in LittleEndian order, this is the first encountered. 
0, Line, //  find chart in the slide 
0, Line, //  3 @ 4093   8 @ 28 
0, Line, //  Should have 1 master 
0, Line, // should be original picture width and height expressed in EMUs 
0, Line, // set font 1 to 12 point type 
0, Line, //                 wb.write(fileOut); 
0, Line, //  xls file is 
0, Line, //  All collapsed  
0, Line, // 16-byte link moniker: HyperlinkRecord.FILE_MONIKER 
0, Line, //  Create the drawing entry for it 
0, Line, //  even an empty string is not equal the empty cell, only another empty cell is, handled higher up 
0, Line, //  The x-coordinate of the arc's control point; a point on the arc. The   control point is best located about halfway between the beginning and   ending vertices of the arc. Otherwise, the arc may grow to an extreme   size in order to pass through the control point, with unpredictable 
0, Line, //  And some near a few of them 
0, Line, //  no notes on slide 
0, Line, //  Found one 
0, Line, //  don't include the text if reviewing is enabled and this is a deleted run 
0, Block, /*  char 9   */
0, Line, //  Multiple calls to autoSizeColumn need to look up the best-fit width   of rows already flushed to disk plus re-calculate the best-fit width   of rows in the current window. It isn't safe to update the column   widths before flushing to disk because columns in the random access   window rows may change in best-fit width. The best-fit width of a cell   is only fixed when it becomes inaccessible for modification.   Changes to the shared strings table, styles table, or formulas might   be able to invalidate the auto-size width without the opportunity   to recalculate the best-fit width for the flushed rows. This is an   inherent limitation of SXSSF. If having correct auto-sizing is   critical, the flushed rows would need to be re-read by the read-only 
0, Block, /*  Compare the property set stream with the corresponding one             * from the origin file and check whether they are equal.  */
0, Line, //  comodoca request fails, if default policy is set ... 
0, Line, //  2nd read works 
0, Line, //  see constants above 
0, Line, //  Self-referential external reference 
0, Line, //  "Offset=0x0008BB19(572185) recno=159 sid=0x00FF size=0x201A(8218)\n" + 
0, Line, //  CellAddress=A1, shifted to A4 
0, Line, //  StreamSize (8 bytes): An unsigned integer that specifies the number of bytes used by data    encrypted within the EncryptedData field, not including the size of the StreamSize field.    Note that the actual size of the \EncryptedPackage stream (1) can be larger than this    value, depending on the block size of the chosen encryption algorithm 
0, Line, //  Note - Excel does not strictly require -1 and +1 
0, Line, // assertNotNull(new CellFormatPart("_-* \"\"??_-;_-@_-")); 
0, Line, //  initialise PSB with some records, but not the header / footer 
0, Line, //  Fetch the rest of the block if needed 
0, Line, //  then compare magnitudes (IEEE 754 has exponent bias specifically to allow this) 
0, Line, //  These two format calls should return the same thing but don't: 
0, Block, /*  handle case where MMULT is operating on an array that is not completely filled */
0, Line, //  Note: documentation does not define a default, return ListAutoNumber.ARABIC_PLAIN (1,2,3...) 
0, Line, //  Store it for lookup 
0, Line, //  Error 
0, Line, // Range of cells which the shared formula applies to 
0, Line, //  should agree within 0.01% 
0, Line, //  Some fonts support plain/bold/italic/bolditalic variants   Others have different font instances for bold etc 
0, Line, //  Check if the specified part is not a relationship part 
0, Block, /*              * Check if the argument is a function. Certain names can be either a cell reference or a function name             * depending on the contenxt. Compare the following examples in Excel 2007:             * (a) LOG10(100) + 1             * (b) LOG10 + 1             * In (a) LOG10 is a name of a built-in function. In (b) LOG10 is a cell reference              */
0, Line, // create 50 cells 
0, Line, //  lots of notes before us 
0, Block, /*  Read first word.  */
0, Line, //  Internal picture, nothing to return 
0, Line, //  setting an evaluation of function arguments with the intersect operator (space) 
0, Line, //  overwrite range1 with first result 
0, Line, // all slides use the first master slide 
0, Line, //  Make sure copyRowFrom actually copied row (this is tested elsewhere) 
0, Line, //  To update the iruns, find where we're going 
0, Line, //  0xf0a0 not defined / euro symbol   0xf0a1 upsilon1 (upper)   0xf0a2 minute   0xf0a3 lessequal   0xf0a4 fraction   0xf0a5 infinity   0xf0a6 florin   0xf0a7 club   0xf0a8 diamond   0xf0a9 heart   0xf0aa spade   0xf0ab arrowboth   0xf0ac arrowleft   0xf0ad arrowup   0xf0ae arrowright   0xf0af arrowdown   0xf0b0 degree   0xf0b1 plusminus   0xf0b2 second   0xf0b3 greaterequal   0xf0b4 multiply   0xf0b5 proportional   0xf0b6 partialdiff   0xf0b7 bullet   0xf0b8 divide   0xf0b9 notequal   0xf0ba equivalence   0xf0bb approxequal   0xf0bc ellipsis   0xf0bd arrowvertex   0xf0be arrowhorizex   0xf0bf carriagereturn   0xf0c0 aleph   0xf0c1 Ifraktur   0xf0c2 Rfraktur   0xf0c3 weierstrass   0xf0c4 circlemultiply   0xf0c5 circleplus   0xf0c6 emptyset   0xf0c7 intersection   0xf0c8 union   0xf0c9 propersuperset   0xf0ca reflexsuperset   0xf0cb notsubset   0xf0cc propersubset   0xf0cd reflexsubset   0xf0ce element   0xf0cf notelement   0xf0d0 angle   0xf0d1 gradient   0xf0d2 registerserif   0xf0d3 copyrightserif   0xf0d4 trademarkserif   0xf0d5 product   0xf0d6 radical   0xf0d7 dotmath   0xf0d8 logicalnot   0xf0d9 logicaland   0xf0da logicalor   0xf0db arrowdblboth   0xf0dc arrowdblleft   0xf0dd arrowdblup   0xf0de arrowdblright   0xf0df arrowdbldown   0xf0e0 lozenge   0xf0e1 angleleft   0xf0e2 registersans   0xf0e3 copyrightsans   0xf0e4 trademarksans   0xf0e5 summation   0xf0e6 parenlefttp   0xf0e7 parenleftex   0xf0e8 parenleftbt   0xf0e9 bracketlefttp   0xf0ea bracketleftex   0xf0eb bracketleftbt   0xf0ec bracelefttp   0xf0ed braceleftmid   0xf0ee braceleftbt   0xf0ef braceex   0xf0f0 not defined   0xf0f1 angleright   0xf0f2 integral   0xf0f3 integraltp   0xf0f4 integralex   0xf0f5 integralbt   0xf0f6 parenrighttp   0xf0f7 parenrightex   0xf0f8 parenrightbt   0xf0f9 bracketrighttp   0xf0fa bracketrightex   0xf0fb bracketrightbt   0xf0fc bracerighttp   0xf0fd bracerightmid   0xf0fe bracerightbt   0xf0ff not defined 
0, Line, //  there are some WMF implementation using this record as a MFCOMMENT or similar   if the commentIdentifier doesn't match, then return immediately 
0, Line, //  Condition 3: Row divides by 5, bold 
0, Line, //  EXCLUDED.put("44958_1.xls", RecordInputStream.LeftoverDataException.class); 
0, Line, // style name and aliases string 
0, Line, //  lazy getter 
0, Line, //  common case   field_2_n16 seems to be 5 here   The formula almost looks like tTbl but the row/column values seem like garbage. 
0, Line, //  Underscores not the right place, something's wrong 
0, Line, //  reset stream (not only) in case we were interrupted by plain stream parts   this also needs to be set to prevent an endless loop 
0, Line, //  only validate first part 
0, Line, //  Check the script one 
0, Line, //  msg files with non-standard encodings 
0, Line, //  Check its children too 
0, Line, // read the reference sound file 
0, Line, // Create cell style 
0, Line, //  If this record is ever implemented, change to one that isn't!   This is checking the "unhandled default" stuff works 
0, Block, /*  (non-JavaDoc) Created directory path is <JAVA_IO_TMPDIR>/poifiles/prefix0123456789  */
0, Block, /*  char 10  */
0, Line, //  Ensure the text is what we should now have 
0, Line, //  draw a thick black border on the row at the bottom using BLANKS 
0, Line, //  don't bother about files we cannot read - they are different bugs 
0, Line, //  Sheet 1 doesn't (yet) 
0, Line, // @Test 
0, Line, //  In some cases, the salt value of the EncryptionVerifier is the next chunk of data 
0, Line, // check that EscherDggRecord is updated 
0, Line, //  SET Verifier TO Intermediate3 BITWISE XOR PasswordByte 
0, Line, //  An optional EmfPlusFocusScaleData object that specifies focus scales for the path gradient brush.   This field MUST be present if the BrushDataFocusScales flag is set in the BrushDataFlags field of the 
0, Line, //  mar 
0, Line, //  password protected files 
0, Line, //  confirm the evaluation result too 
0, Line, //  Turn data_a into data_b 
0, Line, //  [MS-DOC], v20140721, 2.6.4, sprmSNFtnRef 
0, Line, //  Reserved 
0, Line, // add 3 row breaks 
0, Line, //  range [6-4] is illegal 
0, Line, // percentile has to be between 0 and 1 - here we test more than 1 
0, Line, //  Check we can get the english text out of that 
0, Line, //  Formulas on rows that weren't shifted: 
0, Line, //  See bug 59719 
0, Line, //  sometimes there are missing bytes after the imageData which will be 0-filled 
0, Line, //  into order, if they're not already 
0, Line, //  initialize with default value; msonfcLCRoman 
0, Line, //  with Calendar: 
0, Line, //  formula 1 length 
0, Line, // get chart number 
0, Line, //  Should always be zero   Should always be zero 
0, Line, //  Keep in sync with {@link RowShifter#removalNeeded} 
0, Line, //  Paragraph style should be sum of text length 
0, Block, /*  Test an empty custom properties set.  */
0, Line, //  author not found -> add new author 
0, Line, //  cached formula result calculated by Excel 
0, Block, /*              * there is an effect on Bug45743.doc actually. writeoutreadback             * changes byte offset of chars (but preserve string offsets).             * Changing back to original lines - sergey              */
0, Line, //  bar space   category space 
0, Line, //  tick mark frequency   options 
0, Line, //  Do we need to store as a mini stream or a full one? 
0, Line, //  always OK to set functions to return 'value' 
0, Line, //  Non-breaking hyphens are stored as ASCII 30 
0, Line, //  Test row creation with non consecutive index 
0, Line, //  Set when cell start element is seen; 
0, Line, //  make sure the resulting number of executions is correct 
0, Line, //  log forging escape 
0, Line, //  we know it is a number in the proper range, now check if it is an int   can't get here without a valid numeric value 
0, Line, //  cell containing a formula with COUNTIF 
0, Line, //         FileOutputStream out = new FileOutputStream("/tmp/51451.xlsx");          wb.write(out);          out.close(); 
0, Line, // If this argument contains a decimal value, this function ignores the numbers to the right side of the decimal point. 
0, Line, //  some convenience factory methods 
0, Line, //  but setting a precalculated STRING value fails totally in SXSSF 
0, Line, //  The first knot of a spline. 
0, Line, //  index of color value   options 2       -- strange upper bits supposed to be 0'd 
0, Line, //  Borders 
0, Line, //  Field Codes (w:instrText, defined in spec sec. 17.16.23)    come up as instances of CTText, but we don't want them    in the normal text output 
0, Line, //  newer duplicate user defined styles 
0, Line, // CustomViewSettingsRecordAggregate 
0, Line, //  Grab the document stream 
0, Line, // <-- works 
0, Line, //  A10:C12 
0, Line, //  A signed integer that defines the vertical extent of the window in logical units. 
0, Line, //   that that is now used if no policy given 
0, Line, //  Return the comment, or null if not known 
0, Line, //  Check the encryption details 
0, Line, //  The focus scale MUST be a value between 0.0 and 1.0, exclusive. 
0, Line, //  CHOOSE 
0, Line, //  CT* classes don't handle "mc:AlternateContent" elements, so get the Dxf instances manually 
0, Line, //  spaces are used to simulate that character. 
0, Line, //  Serialize 
0, Line, //  Check bytes weren't the same 
0, Line, //  was plain cell before - no change of type 
0, Line, //  not implemented yet: case SxNamePtg.sid:       return new SxNamePtg(in);       // 0x18 
0, Line, //  If they give a date in 1900 in Jan/Feb, with the days 
0, Line, //  Check still right 
0, Line, //  skew 
0, Line, // 			System.err.println(result);  		} 
0, Line, //  Ensure they are the right (latest) version of each 
0, Line, //  first copy unchanged 
0, Line, //  8 bytes of reserved zeros 
0, Line, //  extract text from a powerpoint that has a footer in the master-slide 
0, Line, //  Is it a different Zip-based format? 
0, Line, // end of interface implementation 
0, Line, //  rlen = (int)LittleEndian.getUInt(pictstream, offset+4); 
0, Line, //  Performance issue. If we encapsulated management of min/max in this   class then we could keep trackedCols as state,   making this log(N) rather than Nlog(N). We do this for the initial   read above. 
0, Line, //  start and end cell references 
0, Line, //  UserSViewEnd 
0, Line, //  Otherwise children must match 
0, Line, //  End 
0, Line, // Well the format runs are equal as well!, better check the ExtRst data 
0, Line, //  all these operations are on an area ref spanning columns 20 to 25 
0, Line, //  For now, we think these are shorts 
0, Line, //  This used to throw an error before 
0, Line, //  NB: If a table cell does not include at least one block-level element, then this document shall be considered corrupt. 
0, Line, //  Read several blocks work 
0, Line, // Creating new Named Range 
0, Line, //  Basic 2 page example 
0, Line, //  ignore event 
0, Line, //  sprmPFInTable -- 0x2416 
0, Line, // now load the hyperlinks from the bottom of the sheet 
0, Line, //  read first formula data condition 
0, Line, //  don't alert for small expanded size 
0, Line, // serialize and read again. 
0, Line, //  Add a link, check it does 
0, Line, //  get the Workbook (excel part) stream in a InputStream 
0, Line, //  Has 2 fills 
0, Line, //  tell _workbookRecordList about the 2 new records 
0, Line, //  Extra field:   ZIP64 field signature   size of extra field (below)   uncompressed size 
0, Line, //  Raw XML - File 
0, Line, //  all others are plain BIFF records 
0, Line, //   last block is at 89 
0, Line, // don't care? 
0, Line, //  -2 to skip EOF record 
0, Line, //  234 == 0x00EA; 238 == 0x00EE 
0, Line, //  produces #N/A 
0, Line, //  m02 (translateX) = eDx (The horizontal translation component, in logical units.) 
0, Line, //  we'll need multiple editions for the different formats 
0, Line, //  Get the ExObjList 
0, Line, //   of CTSheet elements in the workbook 
0, Line, //  startPos with fractional digits 
0, Block, /*  ********** START implementation of DirectoryEntry **********  */
0, Line, // BitFields: (first row relative, first col relative, first column number) 
0, Line, //  may 
0, Line, //  Bug 57456: some Excel Sheets send 0 as field=1, but have some random number in field_2, 
0, Block, /* ... */
0, Line, //  this updates FontPos for us 
0, Line, // char type = unicode 
0, Line, //  String  wb = new XSSFWorkbook(file.getPath());  assertCloseDoesNotModifyFile(filename, wb); 
0, Line, //  Wrap and return (non-cachable - CellFormat does that) 
0, Line, //  Buffer underrun - requested 512 bytes but 192 was available 
0, Line, //  fix up firstCol and lastCol indexes 
0, Line, //  Check the length was as expected 
0, Line, //  also remove any hyperlinks associated with this row 
0, Line, //  invalid level 
0, Line, //  date formatted as 'm'   'mmm' is wider than 'm'   date formatted as 'mmm'   'mmm/dd/yyyy' is wider than 'mmm'   date formatted as 'mmm/dd/yyyy' 
0, Block, /* String oldVal = */
0, Line, //  back slashed have been replaced with forward 
0, Line, //  . is a special regexp char 
0, Line, //  Check basics 
0, Line, //  is not compressed unicode 
0, Line, //  Init the arrays that we can 
0, Line, //  re-calculate cell references 
0, Line, //  Series Text 
0, Line, //  Check for unreserved character like define in RFC3986 
0, Line, //  Do our best with some edge cases 
0, Line, //  Numbers 
0, Line, //  If only name1 is __XXX then this will be placed after name2 
0, Line, //             wb.write(out); 
0, Line, //  A 32-bit unsigned integer that specifies the size of the buffer of rectangles in bytes. 
0, Line, //  aes has always a block size of 128 - only its keysize may vary 
0, Line, // sheet Id of a sheet the cell belongs to 
0, Line, //  Our data is always 512 big no matter what 
0, Line, //  Test IF-Equals Formula Evaluation (bug 58591) 
0, Line, //  this should be 4 as XSSFSimpleShape creates a default paragraph (no text), and then we added 3 paragraphs 
0, Line, //  What colours they should show up as 
0, Line, //  References to a range (area) of cells: 
0, Line, //  New list starting at 10 
0, Block, /*  Try do handle this document as a property set. We receive         * an exception if is no property set and handle it as a         * document of some other format. We are not concerned about         * that document's details.  */
0, Line, // containsRow  containsColumn 
0, Line, //  odd row 
0, Line, //  additionally, you can adjust the axes 
0, Line, //  Save as our custom properties 
0, Line, // never null 
0, Line, // 51519 
0, Block, /*         assertEquals("321 / ?/?",   dfUS.formatRawCellContents(321.321, -1, "# #/# ?/?"));        assertEquals("321 / /",     dfUS.formatRawCellContents(321.321, -1, "# #/# #/#"));        assertEquals("321 ?/? ?/?",   dfUS.formatRawCellContents(321.321, -1, "# ?/? ?/?"));        assertEquals("321 ?/? / /",   dfUS.formatRawCellContents(321.321, -1, "# ?/? #/# #/#")); */
0, Line, //  Now add in on 2, should go to the front 
0, Line, //  no PAP reconstruction   assertEquals( 7, r.numParagraphs() ); 
0, Line, //  Check the contents too 
0, Line, //  test growth 
0, Line, //  all three of the following attributes are palette options 
0, Line, //  Will need to be in the main stream 
0, Line, //  only close the filesystem, if we are based on the root node.   embedded documents/slideshows shouldn't close the parent container 
0, Line, //  Check the mini stream was added, then the main stream 
0, Line, //  test conversion of cell from boolean to text 
0, Line, //  a bit trickier 
0, Line, //  we should have the same color for the row styles 
0, Line, //  Continue sid   rec size 7 (1+6)   this bit uncompressed   3 uncompressed unicode chars 
0, Line, // if all else fails 
0, Line, //  specified in page 25 
0, Line, // columns A-C have default width 
0, Line, //  See Bugzilla 53984   see Bugzilla 50426 
0, Line, //  in unicode 
0, Line, //  the destination rectangle, having the same dimension as the source rectangle 
0, Line, //  object with respect to the width of the graphics pen that is used to draw the lines. 
0, Block, /*      * Write all properties supported by HPSF to the summary information     * (e.g. author, edit date, application name) and to the document     * summary information (e.g. company, manager).      */
0, Line, //  Check the header was written properly 
0, Line, //  currently EMF is better supported than EMF+ ... so if there's a complete set of EMF records available,   disable EMF+ rendering for now 
0, Line, //  hyperlink ends before end of current textrun 
0, Line, // should still match defaults; 
0, Block, /*                  * if cell style is defined (like borders, etc.) but cell text                 * is empty, add "&nbsp;" to output, so browser won't collapse                 * and ignore cell                  */
0, Line, //  sum of all values in the 2nd row: 4 + 5 + 6 = 15 
0, Line, // <cols>    <col min="1" max="1" customWidth="true" width="10.0" />    <col min="2" max="2" customWidth="true" width="15.0" />    <col min="3" max="3" customWidth="true" width="20.0" />    <col min="4" max="4" customWidth="true" width="25.0" />    <col min="5" max="5" customWidth="true" width="30.0" />  </cols> 
0, Line, //  might as well evaluate the sucker... 
0, Line, //  should actually be 0.6   should actually be -0.6 
0, Line, //  this updates XfPos for us 
0, Line, //  Apply additional horizontal/vertical offset after alignment.   Values are as percentages. 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.formula.EvaluationSheet#isRowHidden(int)     * @since POI 4.1.0      */
0, Block, /*  Add a custom property.  */
0, Line, //  This value MUST be in the ModifyWorldTransformMode enumeration 
0, Line, // Maximum length of the password is 15 chars. 
0, Line, //  This value is not an integer index into the dash pattern array. 
0, Line, // Cell A1 = getCell(sheet, 2, 2); 
0, Line, //  Check the new headers still have their text 
0, Line, //  An 8-bit unsigned integer that specifies the midline of the font. 
0, Line, //  Apply 
0, Line, //  Cell Formula with Reference spanning multiple rows 
0, Line, //  Turn on 
0, Line, //  These are inconsistent settings, so ditch 'em 
0, Line, // this doesn't test the exact code path for this issue, but  it does test for a related issue, and the fix fixes both.  We should try to add the actual triggering document  to our test suite. 
0, Line, //  check for icon set 
0, Line, //  boundary color to the center color as it moves from the boundary to the center point. 
0, Line, //  Icons : 4 ratings - Column R 
0, Line, //  Not evaluated yet 
0, Line, // handle sdtbody without an sdtpr 
0, Line, //  New list 
0, Line, //  dummy url 
0, Line, //  Move on to the next one, if we're not at the end yet 
0, Line, // numFmtId in xml terms  the second byte is ignored 
0, Line, //  Section / line? 
0, Line, //  fill 
0, Line, // noinspection EmptyTryBlock,unused 
0, Line, //  Check the formatting 
0, Line, //  modified 
0, Line, //  see 18.8.19 fgColor (Foreground Color) 
0, Block, /*  transfer series to record list  */
0, Line, //  Create a workbook, row and cell to test with 
0, Line, //  first try to find the factory over the rendering hint 
0, Block, /*          * The following error is thrown when shifting the 3rd row on top of the 0th row         * If the rows are not created, the error does not occur        org.apache.xmlbeans.impl.values.XmlValueDisconnectedException            at org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1258)            at org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTRowImpl.getR(Unknown Source)            at org.apache.poi.xssf.usermodel.XSSFRow.getRowNum(XSSFRow.java:363)            at org.apache.poi.xssf.usermodel.TestXSSFSheetShiftRows.bug59733(TestXSSFSheetShiftRows.java:393)          */
0, Line, //  Biggr block size, back to real BATs 
0, Line, // cut off the record header 
0, Line, //   it if that's required 
0, Line, //  check all rows in case of merged rows 
0, Block, /* 		ex45978-extraLinkTableSheets.xls is a cut-down version of attachment 22561.		The original file produces the same error.		This bug was caused by a combination of invalid sheet indexes in the EXTERNSHEET		record, and eager initialisation of the extern sheet references. Note - the workbook		has 2 sheets, but the EXTERNSHEET record refers to sheet indexes 0, 1 and 2.		Offset 0x3954 (14676)		recordid = 0x17, size = 32		[EXTERNSHEET]		   numOfRefs	 = 5		refrec		 #0: extBook=0 firstSheet=0 lastSheet=0		refrec		 #1: extBook=1 firstSheet=2 lastSheet=2		refrec		 #2: extBook=2 firstSheet=1 lastSheet=1		refrec		 #3: extBook=0 firstSheet=-1 lastSheet=-1		refrec		 #4: extBook=0 firstSheet=1 lastSheet=1		[/EXTERNSHEET]		As it turns out, the formula in question doesn't even use externSheetIndex #1 - it		uses #4, which resolves to sheetIndex 1 -> 'Data'.		It is not clear exactly what externSheetIndex #4 would refer to.  Excel seems to		display such a formula as "''!$A2", but then complains of broken link errors.		 */
0, Line, //  [1,2,0,1,2,0,...,0,1]   Changes first element to 2   [1,2,3,4,...,99,100] 
0, Line, //  area is moved down => overwritten area is [endRow + n - movedRows, endRow + n] 
0, Line, //  bounds or deleting them 
0, Line, //  undocumented attribute to research functions!~ 
0, Line, // b) first 2 subtotals don't consider the value of nested subtotal in A3 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getErrorBoxTitle()	  */
0, Line, //  Open a writer onto the CSV file. 
0, Line, //  some values in column E 
0, Line, //  search for non-printable characters 
0, Line, //  Formatted numbers   TODO            assertContains(text, "100.00%");            assertContains(text, "155.00%");            assertContains(text, "1,125");            assertContains(text, "189,945");            assertContains(text, "1,234,500");            assertContains(text, "$169.00");            assertContains(text, "$1,253.82"); 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getPromptBoxText()      */
0, Line, //  find an unused part name 
0, Line, //  another switch: the fWantAdvise bit specifies whether the body describes   an external defined name or a DDE data item 
0, Line, //  if the merged-region and the overwritten area intersect, we need to remove it 
0, Line, //  0x30 is supported by uncompressCHP(...) 
0, Line, //  usermodel needs to set this 
0, Line, //  remove thousands separators 
0, Line, // multi-cell array formula 
0, Line, //  single column ColumnInfoRecord 
0, Line, //  identical up to the 32nd char 
0, Line, // Set the value that is rendered for the cell 
0, Line, //  the next 4 bytes are unused 
0, Line, //  some values in column D 
0, Line, //  { // grpprl.length-2 because we don't store the istd   throw new UnsupportedOperationException(   "This Paragraph's dataStream storage is too small." );   } 
0, Line, //  Set to the start of the file 
0, Line, //  Java is 0 based 
0, Line, // default font 
0, Line, //  A 32-bit signed integer that defines the vertical resolution, 
0, Line, // collapsed 
0, Line, //  Finally we need to clone the font, 
0, Line, //  change [wbA]ASheet1!A3 (from 100 to 80) 
0, Line, //  most simple operators convert -0.0 to +0.0 
0, Line, //  The package open is instantaneous, as it should be. 
0, Line, //  Create the trailer and separator, if required 
0, Line, //  Row 5 has string, formula of string, number, formula of string 
0, Line, //  If the link was not found, rebuild the list (maybe a new link was added into the document) and check again. 
0, Line, //  If not, check with the font style added 
0, Line, //  it doesn't have any styles   first char run is 21 long 
0, Line, //  They can come in any order, which is just nasty   Work backwards from the end, picking the last    on off each time as we go 
0, Line, // goto isn't a real formula element should not show up 
0, Line, //  Now test the default strip flag 
0, Line, //  We certainly found an encoded character, check for length 
0, Line, //  remove any remaining illegal references in _rows.cArray 
0, Line, //  note - these (non-combinable) enum values are sparse. 
0, Line, //  create a new workbook 
0, Line, //  adjust active sheet if necessary 
0, Line, //  Create a new textbox, and give it lots of properties 
0, Line, //  we need to add null-records, otherwise the index references to other existing don't work anymore 
0, Line, //  encoded length 
0, Line, //  Make it easy when debugging to see what isn't the doc 
0, Line, //  FileOutputStream out = new FileOutputStream("/tmp/test48877.xlsx");   wb.write(out);   out.close(); 
0, Line, // b) the maximum denominator can be calculated from the formatString 
0, Line, //  Found in CommonCrawl corpus but not in the docs... 
0, Line, // test file with gaps in the sheetId sequence 
0, Line, //  second pass: compute summary statistics 
0, Line, //  Is it XSLF? 
0, Line, //  validated 
0, Line, //  A 32-bit unsigned integer that specifies the point size at which font  hinting is performed. If set to zero, font hinting is performed at the point size corresponding 
0, Line, //  cell C10 
0, Line, //  pivot table records 
0, Line, // read again 
0, Line, //  store test from TestSheetUtil here as it uses XSSF 
0, Line, //  ... therefore falling back to classloading attempts 
0, Line, //  Neither defined nor reserved   Neither defined nor reserved   Neither defined nor reserved 
0, Line, //  Find records of interest 
0, Line, //  Demonstrate bug 44525:   Well... not quite, since isActive + isSelected were also added in the same bug fix 
0, Line, //  Found <sheetData/ 
0, Line, //  get inside vertical border components 
0, Block, /*  Register name and ID in the dictionary. Mapping in both directions is possible. If there is already a   */
0, Line, //  Build the first data validation to occupy cell A1. Note   that it retrieves it's data from the named area or region called   CHOICES. Further information about this can be found in the 
0, Line, //  Check they are as expected for the test doc 
0, Line, //  https://en.wikipedia.org/wiki/BMP_file_format #  Bitmap file header 
0, Line, //  Find the interesting ones in there 
0, Line, // slide 3 
0, Line, //  changed level 
0, Line, //  Extractor primed on the test data 
0, Line, //  Reference to just one sheet 
0, Line, //  Try to treat it as a local sheet 
0, Line, //  Check that properties table was given block 0 
0, Line, //  since we don't know how to handle these yet :( 
0, Line, // have to remove/add it back 
0, Line, //  no data fields 
0, Line, //  A 32-bit unsigned integer that specifies the stretch mode and MAY be   in the StretchMode enumeration. 
0, Line, //  1981 is one year after our pivot year (so this starts working) 
0, Line, //  set foreground fill to red 
0, Line, // slide 2 
0, Line, //  They are slides 1+2 
0, Line, //  but only when "newMid == highIx-1"? slightly weird.   It would seem more efficient to always do this. 
0, Line, //  Comes out as NaN if treated as a number   And as XYZ if treated as a string 
0, Line, //  fake sid 
0, Line, //  trailing white spaces must be url-encoded, see Bugzilla 53282 
0, Line, //  serialize the PSB to see what records come out 
0, Line, //  Get the type 
0, Block, /* biggest     */
0, Line, // level 
0, Line, // contains a reference to the cell where the hyperlink is anchored, getRef()  what the hyperlink refers to 
0, Line, //  when the arg is an area, choose the top left cell 
0, Line, //  Currently still sees the Master Sheet, but might not in the future 
0, Line, // slide 1 
0, Line, // length of the path ) 
0, Line, //  Write collapse flag (stored in a single col info record after this outline group) 
0, Line, //  Now alter a few of them 
0, Line, //  helper method to break a recursion loop introduced because of an IBMJCE bug, i.e. not resetting on Cipher.doFinal() 
0, Line, //  Handle missing column 
0, Line, //  line ends, a line join makes the connection look more continuous. 
0, Line, //  m00 (scaleX) = eM11 (Horizontal scaling component) 
0, Line, //  Optimise, should remove the two un-used ones and the one duplicate 
0, Line, //  Check it has what we'd expect 
0, Line, //  Check byte level with b 
0, Line, //  options   index number format record 
0, Line, //  Protected, correct password, opens fine 
0, Line, // according to #2.4.304 
0, Line, //  Might not have all formatting it should do! 
0, Line, // getRows(); 
0, Line, //  construct out HSSFRequest object 
0, Line, //  Levels taken from http://msdn.microsoft.com/en-us/library/microsoft.exchange.data.contenttypes.tnef.tnefattributelevel%28v=EXCHG.140%29.aspx 
0, Line, //  pick the first non-default, non-symbol charset 
0, Line, //  put the starting offset of the property into the plcf. 
0, Line, //  verify behavior of getEntryCount 
0, Line, //  calculate the correct pos as our run/irun list contains   hyperlinks 
0, Line, //  Shifting all but first line down to test comments shifting 
0, Line, //  Find the location of the PersistPtrIncrementalBlocks and 
0, Line, //  otherwise, it MUST be set to 0x00. 
0, Line, //  needs clone() inside this getter?   needs clone() inside this getter? 
0, Line, // Who says that this can only ever be compressed unicode??? 
0, Line, //  Write the placeholder IDs 
0, Line, //  Sheet 3 starts with a drawing 
0, Line, //  check for 'free ref' functions first 
0, Line, //  Copy properties from properties stream. 
0, Line, //   2nd block is at 1 
0, Line, //  calls to user-defined functions within the workbook   get a Name token which points to a defined name record 
0, Line, //  maximum number of iterations is exceeded 
0, Line, //  Make the selection 
0, Line, //  The following is taken from the Libre Office implementation   It seems that the encrypt and decrypt method is mixed up   in the MS-OFFCRYPTO docs 
0, Line, //  We already have it! 
0, Line, //  Calculate the group numbers of important groups.  (They shift around   when the pattern is changed; this way we figure out the numbers by   experimentation.) 
0, Line, //  move EncryptionRecord to last slide position 
0, Line, //   new locations of the fonts 
0, Line, //  Remove all relationship parts associated 
0, Line, //  all the rest are "reserved" 
0, Line, //  how many strings are included in the string table   size in bytes of the extra data 
0, Line, //  This used to fail with an OutOfMemory 
0, Line, //  col inp col 0 
0, Line, //  not affected 
0, Line, //  49928.xlsx has been saved with a poundFmt that overrides the default value (dollar) 
0, Line, //  Save and re-open 
0, Line, //  An 8-bit unsigned integer that specifies an underlined font if set to 0x01; 
0, Line, //  1%	1.3%	2.1%	2% 
0, Line, //  All coordinates need to be converted to Master units (576 dpi) 
0, Line, //  corrupt file, negative image size 
0, Line, //  get the ending fc   int endingFc = _paragraphs.get(_paragraphs.size() - 1).getEnd(); 
0, Block, /* 	 * Layout must have reasonable default values and must not throw	 * any exceptions.	  */
0, Line, //  else - bottom area row has been replaced - both area top and bottom may move now 
0, Line, //  rebuild document paragraphs structure 
0, Line, //  catch all exceptions here as we are only interested in file-handle leaks 
0, Line, // Special info mask of this run; 
0, Line, //    1 slide layout 
0, Line, //  Overriden content types 
0, Line, //  Write out our children 
0, Line, //  UserEditAtoms 
0, Line, // First create value based validation; 
0, Line, //  sprmPDyaBefore 
0, Line, //  sprmPRsid 
0, Line, //  OK to return this because immutable 
0, Line, //  Our first BAT block has spares 
0, Line, //  Ensure none of the paragraphs refer to one that isn't there, 
0, Line, //  Date is prior to 3/1/1900, so adjust because Excel thinks 2/29/1900 exists   If Excel date == 2/29/1900, will become 3/1/1900 in Java representation 
0, Line, //  Ones that are odd and we won't change 
0, Line, //   as the non existant 1900-01-00 
0, Line, //  ref is outside source rows   check for clashes with destination 
0, Line, //  integrityHMAC needs to be updated before the encryption document is created 
0, Line, //  removes leading and trailing quotes from a quoted string 
0, Line, //  Tangent Formula: "tan x y" = (x * tan( y )) = value of this guide 
0, Line, //  Put in some dummy content 
0, Line, //  NOSONAR - also catch things like NoClassDefError here   throttle the log somewhat as it can spam the log otherwise 
0, Block, /*  assert shape properties when reading shapes from a existing workbook  */
0, Line, //   read it 
0, Line, //  PT_CLOSEFIGURE   A PT_LINETO or PT_BEZIERTO type can be combined with this value by using the bitwise operator OR   to indicate that the corresponding point is the last point in a figure and the figure is closed. 
0, Line, //  Move the cell to the new position 
0, Line, //  numeric quantities follow standard boolean conversion rules   for strings, only "TRUE" and "FALSE" (case insensitive) are valid 
0, Line, //  add list data on another sheet 
0, Line, //  from https://stackoverflow.com/questions/51530552/   customize the chart 
0, Line, //  also verify general POIFS-stuff 
0, Line, //  Should've found one 
0, Line, //  else - numeric value parses OK 
0, Line, //  One using the only-recently-documented encryption header type 4, 
0, Line, //  SlideShow primed on the test data 
0, Line, //  Save, load and re-check 
0, Line, //  A 32-bit unsigned integer that specifies the width of the line drawn by the pen.   If the pen type in the PenStyle field is PS_GEOMETRIC, this value is the width in logical   units; otherwise, the width is specified in device units. If the pen type in the PenStyle field is 
0, Line, //  Based on regular expression defined in JavaDoc at {@link java.lang.Double#valueOf}   modified to remove support for NaN, Infinity, Hexadecimal support and floating type suffixes 
0, Line, //  Find the child records in the escher data 
0, Line, //  Get the row's height in millimetres and add to the running total. 
0, Line, //  Produce an overall summary 
0, Line, //             b.append("w"); 
0, Block, /*          *  m  = merged region         *  f  = array formula         *  fm = cell belongs to a merged region and an array formula (illegal, that's what this tests for)         *           *   A  B  C         * 1    f  f         * 2    fm fm         * 3    f  f          */
0, Line, //  Check it's the right length 
0, Line, //  sprmPAnld80  
0, Line, //  Now Add a mini stream 
0, Line, //  byte 
0, Line, //  Add a bigger Normal Stream 
0, Line, //   the correct values 
0, Line, //  File Moniker 
0, Line, //  To make the image occupy the full width of the column, convert   the required width of the image into co-ordinates. This value   will become the inset for the ClientAnchorDetail class that 
0, Line, //   the destination row 
0, Line, // add the same entry again 
0, Line, //  Update the size (header bytes 5-8) 
0, Line, //  8 bytes unused: 
0, Line, // Strings are equal, so now compare formatting runs. 
0, Line, //  Strings get interned... 
0, Line, //  And should have 54 MAPI attributes on it 
0, Line, //  https://bz.apache.org/bugzilla/show_bug.cgi?id=60980 
0, Line, //  now check text properties 
0, Line, //  shape 
0, Line, //  Now check the compressed intermediate version 
0, Line, //  for each interface 
0, Line, //  Create one big buffer 
0, Line, //  'assignment-style formula in a macro sheet' 
0, Line, //  Excel and DataValidationConstraint parser ignore (strip) whitespace; quotes should still be intact 
0, Line, //  char flags 0x0001 = bold   font size 20 
0, Line, //  pack.originalPackagePath = file.getAbsolutePath(); 
0, Line, //  Check text on first slide 
0, Line, //  String does not resolve to a number. Raise #REF! error. 
0, Line, //  be sure to blank cell, in case it is currently a formula 
0, Line, //  y = mx + c 
0, Line, //  comment is now in row 1 
0, Block, /*          * bytelength is the length of the string in bytes, which depends on whether the string is         * made of single- or double-byte chars. This is given by charType, which equals 0 if         * single-byte, 1 if double-byte.          */
0, Line, //  Formula referencing one cell in a different sheet 
0, Line, //  ignore me 
0, Line, //  based on https://gist.github.com/EmmanuelOga/48df70b27ead4d80234b 
0, Block, /*          * Saved chart space must have the following namespaces set:         * <c:chartSpace         * xmlns:c="http://schemas.openxmlformats.org/drawingml/2006/chart"         * xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main"         * xmlns:r=         * "http://schemas.openxmlformats.org/officeDocument/2006/relationships">          */
0, Line, //  the value of -1.0 resets to the defaults 
0, Line, //  calls System.exit(): SLWTListing.main(new String[0]); 
0, Line, //  Now check on a rich text run 
0, Line, //  the same style prior to modifying the style 
0, Line, //  If font is not set we must set the default one 
0, Line, //  Do we need to change the grouping character?   eg for a format like #'##0 which wants 12'345 not 12,345 
0, Line, //  10 + 1 for Ptg 
0, Line, //  Excel probably wouldn't mind, but there is much logic in this class   that assumes the column info records are kept in order 
0, Line, //  Clean columns and test a clean worksheet 
0, Line, //  special handling for SlideShow-Theme-files,  
0, Block, /*          * Read the header fields of the stream. They must always be         * there.          */
0, Line, //  Adding Comment to new created Sheet 2 
0, Line, //  Read from temp file and check the number of cells in each 
0, Line, //  destination columns are within area ref (possibly exact on top or bottom, but not both)   - no change to area 
0, Line, //  First we need to clone the extended format    record 
0, Line, //  TODO - test the type 12s 
0, Line, // create drawing 
0, Line, //  Wind on the position marker 
0, Line, //  The string is always 112 characters (padded with spaces), therefore   this record can not be continued. 
0, Line, //  make sense of the part data 
0, Line, // refers to A1 but on Sheet2. Should stay unaffected. 
0, Line, //  Add them in 
0, Line, // @Override 
0, Line, //  Performance optimization for bug 57840: explicit boxing is slightly faster than auto-unboxing, though may use more memory 
0, Line, //   (1 / 2) - (3 * 4) 
0, Line, //  Took approx. 600ms on a decent Laptop in July 2016 
0, Line, //  level 2: title placeholder on the master slide 
0, Line, //  test number formats 
0, Line, //  some corrupted documents currently can cause this excpetion 
0, Line, //  didn't find it 
0, Line, //  we need to do it now separately ... 
0, Line, //  The degree of a spline (an integer from 1 to 25). 
0, Line, //  Normal charset 
0, Line, //  no instances of this class 
0, Block, /*     The records below are records that would appear in a simple bar chart    The first record links to the series title (linkType = 0).   It's    reference type is 1 which means that it links directly to data entered    into the forumula bar.  There seems to be no reference to any data    however.  The formulaOfLink field contains two 0 bytes.  This probably    means that there is no particular heading set.============================================Offset 0xf9c (3996)rectype = 0x1051, recsize = 0x8-BEGIN DUMP---------------------------------00000000 00 01 00 00 00 00 00 00                         ........-END DUMP-----------------------------------recordid = 0x1051, size =8[AI].linkType             = 0x00 (0 ).referenceType        = 0x01 (1 ).options              = 0x0000 (0 )    .customNumberFormat       = false.indexNumberFmtRecord = 0x0000 (0 ).formulaOfLink        =  (org.apache.poi.hssf.record.LinkedDataFormulaField@95fd19 )[/AI]    The second record links to the series data (linkType=1).  The    referenceType = 2 which means it's linked to the worksheet.    It links using a formula.  The formula value is    0B 00 3B 00 00 00 00 1E 00 01 00 01 00.    0B 00   11 bytes length    3B (tArea3d) Rectangular area        00 00 index to REF entry in extern sheet        00 00 index to first row        1E 00 index to last row        01 00 index to first column and relative flags        01 00 index to last column and relative flags============================================Offset 0xfa8 (4008)rectype = 0x1051, recsize = 0x13-BEGIN DUMP---------------------------------00000000 01 02 00 00 00 00 0B 00 3B 00 00 00 00 1E 00 01 ........;.......00000010 00 01 00                                        ...-END DUMP-----------------------------------recordid = 0x1051, size =19[AI].linkType             = 0x01 (1 ).referenceType        = 0x02 (2 ).options              = 0x0000 (0 )    .customNumberFormat       = false.indexNumberFmtRecord = 0x0000 (0 ).formulaOfLink        =  (org.apache.poi.hssf.record.LinkedDataFormulaField@11b9fb1 )[/AI]    The third record links to the series categories (linkType=2).  The    reference type of 2 means that it's linked to the worksheet.    It links using a formula.  The formula value is    0B 00 3B 00 00 00 00 1E 00 01 00 01 00    0B 00   11 bytes in length        3B (tArea3d) Rectangular area        00 00 index to REF entry in extern sheet        00 00  index to first row        00 1F  index to last row        00 00 index to first column and relative flags        00 00 index to last column and relative flags============================================Offset 0xfbf (4031)rectype = 0x1051, recsize = 0x13-BEGIN DUMP---------------------------------00000000 02 02 00 00 69 01 0B 00 3B 00 00 00 00 1F 00 00 ....i...;.......00000010 00 00 00                                        ...-END DUMP-----------------------------------recordid = 0x1051, size =19[AI].linkType             = 0x02 (2 ).referenceType        = 0x02 (2 ).options              = 0x0000 (0 )    .customNumberFormat       = false.indexNumberFmtRecord = 0x0169 (361 ).formulaOfLink        =  (org.apache.poi.hssf.record.LinkedDataFormulaField@913fe2 )[/AI]This third link type does not seem to be documented and does not appear tocontain any useful information anyway.============================================Offset 0xfd6 (4054)rectype = 0x1051, recsize = 0x8-BEGIN DUMP---------------------------------00000000 03 01 00 00 00 00 00 00                         ........-END DUMP-----------------------------------recordid = 0x1051, size =8[AI].linkType             = 0x03 (3 ).referenceType        = 0x01 (1 ).options              = 0x0000 (0 )    .customNumberFormat       = false.indexNumberFmtRecord = 0x0000 (0 ).formulaOfLink        =  (org.apache.poi.hssf.record.LinkedDataFormulaField@1f934ad )[/AI] */
0, Line, //   duplicate floating ones 
0, Line, // sheet1.setRowGroupCollapsed(7,false); 
0, Line, //  Error values also returned unmodified 
0, Line, //  make sure we start at 0 
0, Line, // "IV" for .xls and  "XFD" for .xlsx 
0, Line, //  duplicate slide and chart before applying "destructive" tests to it 
0, Line, //  For now, we don't support localised currencies, so simplify if there 
0, Line, // show that LocaleUtil has no effect on these tests 
0, Line, //  unused 
0, Line, //  outlook30 has chunks for all 3 body formats 
0, Line, //  Check we get the right font name for the indicies 
0, Line, //  Bits (4 bytes): This field MUST be ignored. 
0, Line, //  Strip off the locale information, we use an instance-wide locale for everything 
0, Line, //  Or do it on one line. 
0, Line, //  restore the coordinate system 
0, Line, //  try at the end 
0, Line, // Windows notation for drive letters 
0, Line, // 						"value D4 #BLANK#", "value E4 #BLANK#", 
0, Line, //  XML is 1 based, POI is 0 based 
0, Line, //  A 32-bit unsigned integer that specifies number of glyphs in the string. 
0, Line, //  test with just long enough file 
0, Line, //  Find our FontCollection record 
0, Line, //  don't close underlying ZipOutputStream 
0, Line, //  need to compare it again, in case a run has been added after 
0, Line, //  ClaimedRole 
0, Line, //  New filesystem and store to use 
0, Line, //  Now, look at the one we changed, wrote out, and read back in 
0, Line, //  If this attribute is omitted, then a value of 0.05 inches is implied 
0, Line, //  put some values in the cells to make the evaluation more interesting 
0, Line, //  TextDirection.STACKED is not supported 
0, Line, // write data rows 
0, Line, //  A 16-bit unsigned integer that defines the format of each pixel, and the 
0, Line, //  Set the rows to repeat from row 0 to 2 on the second sheet. 
0, Line, //  A 16-bit unsigned integer that defines the number of polygons in the object. 
0, Line, //  Found <sheetData> 
0, Line, //  index should equal number of CHPXs that will be in this fkp now. 
0, Line, // subsequent call of Picture#resize() will operate relative to it 
0, Line, //  special case, empty trailing text run 
0, Line, //  a signed integer that defines the x/y-coordinate, in logical units. 
0, Line, //  same wb   across workbooks 
0, Line, //  sort lower-row values first when shifting up 
0, Line, //  Smallest double 
0, Line, //  reserved   reserved   reserved   reserved 
0, Line, //  or new HSSFWorkbook() 
0, Line, //  remove "fake" cell 
0, Line, //  special characters from the ooo document 
0, Line, //  JaCoCo Code Coverage adds it's own field, don't look at this one here 
0, Line, //  first row on the sheet   last row   supposed to be zero   array of offsets to DBCELL records 
0, Line, //  this '==' matches +0.0 and -0.0   Excel converts -0.0 to +0.0 for '*', '/', '%', '+' and '^' 
0, Block, /*  The variant type is not supported yet. However, if the value         * is a byte array we can write it nevertheless.  */
0, Line, // here we test where there are errors as part of inputs 
0, Line, //  Add a few pictures 
0, Line, //  Can't represent 0.0 or -0.0 with NormalisedDecimal 
0, Line, //  Change cs1, hash will alter 
0, Line, //  +1 to include delimiter 
0, Line, //  the coordinate system of this group of shape 
0, Line, //  Set initial values 
0, Line, // end deleted sheet 
0, Line, //  inside 
0, Line, //  to iterations. 
0, Line, // XSSFTestDataSamples.writeOut(wb, "bug 54084 for manual review"); 
0, Line, //  Make the header no longer repeating 
0, Line, //  may specify no special formatting for that value partition, but that's display logic 
0, Line, // 45  95  450  950  995  490  495  990  99  49  49  99  490  495  499  995  999   990  495  499   995  999  499  999 
0, Line, //  Either an EmfPlusRect or EmfPlusRectF object that defines the bounding box of the image. The portion of 
0, Line, //  <a:sysClr val="window" lastClr="FFFFFF"/> 
0, Line, //  Create it 
0, Line, //  Check that the SBAT is empty 
0, Line, //  CellAddress=D21, will be unaffected 
0, Line, //  Now read the XFAT blocks, and the FATs within them 
0, Line, //  Row 16 has a single string in B16 
0, Line, //  2 * Area3DPtg.SIZE + UnionPtg.SIZE 
0, Line, //  corner of the source rectangle. 
0, Line, //  remove just the first picture 
0, Line, //  add any extra results beyond the first 
0, Line, //  A 128-bit WMF RectL object, which specifies bounding rectangle, in device units 
0, Line, //  if there are borders on the west or east then   the second line shouldn't cross them 
0, Line, //  no-op, expected to throw but we need to assert something more 
0, Line, //  The value MUST be defined from the PenStyle enumeration table 
0, Line, //  border type   options 
0, Block, /*  ===============================================================	 *                   Internal Move Helpers	 * ===============================================================	  */
0, Line, //  split, but keep delimiter 
0, Line, //  shall we discard cbLSD and mpstilsd? 
0, Line, //  some sheets do not have rowNum set in the XML, Excel can read them so we should try to read them as well 
0, Line, // The scope of this one is Sheet2. Should stay unaffected. 
0, Line, //  the simple approach via _sh does not work as it creates rows in the XSSFSheet and thus causes   corrupted .xlsx files as rows appear multiple times in the resulting sheetX.xml files   return _sh.removeArrayFormula(cell); 
0, Line, //  Try writing 1, should truncate 
0, Line, //  Write, read, check 
0, Line, // contains 6 HemfCommentEMFPlus records within it 
0, Line, //  colour 
0, Line, //  Read them in 
0, Line, // create CTRow attached to the parent object 
0, Line, //  picture data 
0, Line, //  +1 -> for one past the last index 
0, Line, //  Attr   jumpTable 
0, Line, //  attempt to overwrite a existing row in the input template 
0, Line, //  return true; 
0, Line, //  This sample data was created by setting the 'user name' field in the 'Personalize'    section of Excel's options to \u30A2\u30D1\u30C3\u30C1\u65CF, and then    creating a cell comment. 
0, Block, /*  Check OPC Compliance  */
0, Line, //  return empty path if either GEOMETRY__VERTICES or GEOMETRY__SEGMENTINFO is missing, see Bugzilla 54188 
0, Line, //  SUM(sheet1!B3:C3) 
0, Line, //  This fails in Java 10 because our reflection injection of the ThresholdInputStream causes a   ClassCastException in ZipFile now   The relevant change in the JDK is http://hg.openjdk.java.net/jdk/jdk10/rev/85ea7e83af30#l5.66 
0, Line, //  Note: we expect that all the complex types are defined at root level 
0, Line, //  Second is size 20, default font 
0, Line, //  identity   contains 
0, Line, //  Print the record's details 
0, Line, //  Icons : 3 flags - Column M2 Only 
0, Line, //  Performance optimization: explicit boxing is slightly faster than auto-unboxing, though may use more memory   NOSONAR 
0, Line, // this relies on readChunk's readFully to skipFully 
0, Line, //  With Slides, Notes and Master Text 
0, Line, //  excess decimals are simply rounded away 
0, Line, // Set source for the pivot table 
0, Line, // cells are now sorted 
0, Line, //  create the Formula-Cell 
0, Line, //  verify can delete empty directory 
0, Line, //  our variable names stolen from old TV sets. 
0, Line, //  cross over   options 
0, Line, //  define two custom user-defined functions 
0, Line, //  This should work fine 
0, Line, //  non-colored sheets do not have a color 
0, Line, //  SP @ 8   SP @ 14 
0, Line, //  DC_PEN   The solid-color pen that is currently selected in the playback device context. 
0, Line, //  5.38.3 'Add-In Functions' 
0, Line, //  (Document, Notes, Slide etc) 
0, Line, // HeaderRecord  FooterRecord   DimensionsRecord   WindowTwoRecord 
0, Line, //  By r:id 
0, Line, //  If it's a position aware record, tell it where it is 
0, Line, //  true type font and no font substitution 
0, Line, //  A 32-bit unsigned integer that specifies the number of child nodes in the RegionNode field. 
0, Line, //  Nexts and counts 
0, Line, //  things that parse OK but would *evaluate* to an error 
0, Line, //  expect consuming formula cached result to get cleared 
0, Line, //  get B3 and evaluate it in the cell 
0, Block, /*  **********  END  extension of Entry **********  */
0, Line, //  <-works 
0, Line, //  Delete some part to have a valid document 
0, Line, //  keep searching - sometimes there's another record 
0, Line, //  --------------- Friendly getters / setters on rich text properties ------- 
0, Line, //  Is it a single local sheet, or a range? 
0, Line, //  overlap that cannot be merged 
0, Line, //  instantiate the following classes so they'll get picked up by   the XmlBean process and added to the jar file. they are required   for the following XWPFTableCell methods. 
0, Line, //  can lead to unpredictable results. 
0, Line, // Test 2D and 3D Ref Ptgs (Pxg for OOXML Workbooks) 
0, Line, //  Allocate almost all the blocks 
0, Line, //  github-43   https://github.com/apache/poi/pull/43 
0, Line, //  add between B and D 
0, Line, //  level 5: text properties are defined in the text run 
0, Line, //  Reset and try changing an intermediate value 
0, Line, //  -- CHANGE the shift to positive once the behaviour of 
0, Line, //  Get the sizes and zoom ratios 
0, Line, //  7-11 
0, Line, //  mask is 0x070004   char flags 0x0004 = underlined 
0, Line, //  Check the reading of blocks 
0, Line, //  for password '5ecret'   for password '5ecret' 
0, Line, // sheet index  start column  end column  start row  end row 
0, Line, //  Paste styles only 
0, Line, //  The first row will hold the data for the first validation. 
0, Line, //  The Source File/Folder, Destination Folder, Separator and   Formatting Convnetion were passed to the main method. 
0, Line, //  Check all the colours 
0, Line, //  quotes not allowed like that   spaces not allowed   characters above ASCII are not allowed 
0, Line, //  First is for master  assertEquals(-2147483648, notes.get(0)._getSheetNumber());  // When we do slide masters 
0, Line, //  grow with 50% extra 
0, Line, //   PersistPtrFullBlock or PersistPtrIncrementalBlock starts 
0, Line, //  Zap from rows 1 and 3 
0, Line, // assert the correct month form, as in the original Excel format 
0, Line, //  set the text piece position to the current docStream offset. 
0, Line, //  Remove the run from the low-level XML 
0, Line, //  sign & validate 
0, Line, //  POIFS 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createFormulaListConstraint	 * (java.lang.String)	  */
0, Line, //  Set the 'pre-evaluated result' for the formula   note - formulas do not preserve text formatting. 
0, Line, //  also test longer string 
0, Line, //  do to keep the algorithm homogeneous...you can't 
0, Line, //  Now another file, expect multiple headers    and multiple footers 
0, Line, //  surely shorter than an int... 
0, Line, //  The x-coordinate of the ending vertex of a polyline. 
0, Line, //   hyperlink, then the end point of the text. 
0, Line, //  in the normal runs, and go in there 
0, Block, /* 		 * Data taken from two example files		 * ex42564-21435.xls		 * bug_42794.xls (from bug 42794 attachment 20429)		 * In both cases, this data is found at offset 0x0C1C.		  */
0, Line, // MSODRAWING 
0, Line, //  plus julian leap days in prior years   minus prior century years   plus years divisible by 400   leap days in previous 1900 years 
0, Line, //  http://bugs.java.com/view_bug.do?bug_id=4724038 for related discussions 
0, Line, //  ignore exceptions from old parsers that don't support this API (https://bz.apache.org/bugzilla/show_bug.cgi?id=62692) 
0, Line, //  edge-case when the pattern length is 1 we go straight to replacing 
0, Line, //    are two) 
0, Line, //  copy sheet's relations 
0, Line, // if any format has '?', then replace the fraction with spaces 
0, Line, //  operate 
0, Line, // fos.close(); 
0, Line, //  test what happens if we close the Workbook before we write it out 
0, Line, //  do this to reuse the out-of-bounds logic and message from XSSFWorkbook 
0, Line, //  anchor.setCol1(2); 
0, Line, //  disjunct 
0, Line, //  The version of operating system graphics. This value MUST be defined in the GraphicsVersion enumeration 
0, Line, //  Seems to be: 
0, Line, //  Create two cells, will return one higher 
0, Line, //  character run 
0, Line, //  Jump our little way along, creating records as we go 
0, Line, //  Our first one should be a document atom 
0, Line, //  Copy properties from MSG file system. 
0, Line, //  or output warning to stderr 
0, Line, //  need to convert the short to unsigned short as the indexes can be up to 64k   ideally we would use int for this index, but that would need changes to some more    APIs 
0, Line, //  must only be used to create empty documents, do not use it for parsing! 
0, Line, //  Add new properties 
0, Line, //  A 32-bit unsigned integer that specifies the size, in bytes, of the source bitmap header. 
0, Line, //  Applies to us 
0, Line, //  A problem could occur if the image is sized to fit into one or   more columns. If that occurs, the value in the toColumn variable   will be in error. To overcome this, there are two options, to   ibcrement the toColumn variable's value by one or to pass the   total number of co-ordinate positions to the third paramater   of the ClientAnchorDetail constructor. For no sepcific reason,   the latter option is used below. 
0, Line, //  unset percentage if points is now set 
0, Line, //  simplification 
0, Line, //  small optimization: don't go via StringBuilder if not necessary,    the encodings are very rare, so we should almost always go via this shortcut.  
0, Line, //  Grab interesting bits 
0, Line, // remove the columns part 
0, Line, //  Something about continues... 
0, Line, // options: HyperlinkRecord.HLINK_URL | HyperlinkRecord.HLINK_LABEL 
0, Line, //  Check the formats are as expected 
0, Line, //  Fetch the stream ID 
0, Line, //  Add it into the list + records 
0, Line, //  Date - try two ways to find it 
0, Line, //  Now check what sheet looks like after move 
0, Line, //   re-start its HSSFFontCache 
0, Line, //  in the state that it was in prior to the invocation 
0, Line, //  NOTE: XWPFDocument.removeFootnote() delegates directly to          XWPFFootnotes. 
0, Line, //  <Default Extension="sigs" ContentType="application/vnd.openxmlformats-package.digital-signature-origin"/> 
0, Line, //  verify: signature 
0, Line, // setting border to none removes the <top> element 
0, Line, // let's check also that returns the correct paragraph 
0, Line, //  Should have WordDocument and 1Table 
0, Line, //  default 
0, Line, //  in EMF the index must > 0 
0, Line, //  but SubtractEval does not convert -0.0, so '-' and '+' work like java 
0, Line, // Array to hold Key Values 
0, Line, //  and the adjustable arrow cap object has a width of 3, the actual arrow cap is drawn 15 pixels wide. 
0, Line, //  shall not fail with assertions on 
0, Line, //  AttrPtg.class, // [volatile ] // POI doesn't do this yet (Apr 2009)   len 57   [A1]   [0]   [0]   [OFFSET nArgs=3]   [B2:C3] 
0, Line, //  backcolor index 
0, Line, //  XSSFWorkbooks fail when creating and setting the cell address of the comment 
0, Line, // Only open this file with Excel 2013 to keep binary specific to that version 
0, Line, //  Simulating cell formula of "= 4" (note space)   The same Ptg array can be observed if an excel file is saved with that exact formula 
0, Line, //  Try to write-out and read again, should only work 
0, Line, //  A 32-bit unsigned integer that specifies the size of the DIB header. 
0, Line, //  Both A and B close to threshold - weird results 
0, Line, // set default properties for a picture 
0, Line, //  GRAY_BRUSH - A gray, solid-color brush   BrushStyle: BS_SOLID   Color: 0x00808080 
0, Line, //  sprmCHpsMul -- 0x4A4D 
0, Line, //  Add another 
0, Line, //  329: PERCENTRANK 
0, Line, //  SansSerif is a better choice than Dialog 
0, Line, // YK: should return Collections.unmodifiableList(pictures); 
0, Line, //  Add a new duplicate, and two that aren't used 
0, Line, // Set the text alignment of the cell 
0, Line, // not sure what the byte after the _chs does 
0, Line, //  We should be 3 characters bigger, as 
0, Line, //  anchor is set in constructor based on numRows/numCols 
0, Line, //  sprmPOutLvl  
0, Line, //  document link anchored on a shifted cell should be moved   Note that hyperlinks do not track what they point to, so this 
0, Line, //  The next block of data to be written out, minus 
0, Line, //  the test file contains a wrong ole entry size, produced by extenxls   the fix limits the available size and tries to read all entries 
0, Line, // set the cell format see HSSFDataFormat for a full list 
0, Line, //  Can only decode properly later when you know the codepage 
0, Line, // numeric value 
0, Line, //  actual msg reported in bugzilla 47229 is different   because that seems to be using a version from before svn r646666 
0, Line, //   length as based of 0, not 8 (including header size based) 
0, Line, //  this shouldn't happen, since we are Cloneable 
0, Line, //  func is last RPN token in all these formulas 
0, Line, //  "-scale", "1.333333333", 
0, Line, //  PowerPoint Document - binary file format 
0, Line, //  write out, read back, and test refrain... 
0, Line, //  check that default is true 
0, Line, //  sanity check our row 
0, Line, //  tRefNA 
0, Line, //  The line segments SHOULD be drawn using the current pen. 
0, Line, // dump the structure of the powerpoint document 
0, Line, //  Block 184 should exist 
0, Line, //  First cell of array formula, OK 
0, Line, //  We need to decompress it below 
0, Line, //  although sunjc2 supports md2, hmac-md2 is only supported by bouncycastle 
0, Line, //  Build a formatter for this simplified string 
0, Line, //  Root property tells us about the Mini Stream 
0, Line, //  This value MUST be composed of PenData flags 
0, Line, //  Note that text pieces don't have to be stored in order! 
0, Line, // Arbitrarily set.  May need to increase. 
0, Line, // total number of shapes in the ppt  max number of shapeId 
0, Line, //  Smart Tags can be nested many times.   This implementation does not preserve the tagging information 
0, Line, //  loop until we find a null-terminated end 
0, Line, //  String schemaFilename = Configuration.getPathForXmlSchema()+   File.separator + "opc-relationships.xsd"; 
0, Line, //  if we are based on an outline, there are no further records to be parsed from the wrapper 
0, Line, //  Chars -> Chars 
0, Line, //  "=SUMIFS(B2:E2, B3:E3, ">3%", B4:E4, ">=2%")" 
0, Line, //  Look up an External Link Table for this name 
0, Line, //  Release one 
0, Line, // 1_000; 
0, Line, //  'would be' error msg changed at svn r703620   "Illegal length - asked for -126 but only 130 left!"   "Bad requested string length (-126)" 
0, Block, /* Cell a5 = */
0, Line, //  else - must be plain function 
0, Line, //  shape factory methods 
0, Line, //  cache entry doesn't exist. nothing to do 
0, Line, //  Get the index for the right most cell on the row and then   step along the row from left to right recovering the contents   of each cell, converting that into a formatted String and 
0, Line, //  The boundary of the path gradient brush, which is specified by either a path or a closed cardinal spline.   If the BrushDataPath flag is set in the BrushDataFlags field, this field MUST contain an 
0, Line, //  in the mostRecentCoreRecords array 
0, Line, //  to be performed, and about the structure of the record. 
0, Line, //  A 32-bit floating-point value that specifies the scale factor to apply along   the axis to convert from page space units to .01mm units.   This SHOULD be used only if the graphics mode specified by iGraphicsMode is GM_COMPATIBLE. 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createFormulaListConstraint(java.lang.String)	  */
0, Line, //  Has +ve, -ve and zero rules 
0, Line, //  Ask getFontAt() to build it for us, 
0, Line, //  create a string cell (see why += 2 in the 
0, Line, //  circle div 2: 360 / 2 = 180 
0, Line, //   the output stream 
0, Line, //  RegionNode MUST contain at least one element. 
0, Line, //  throws NumberFormatException if rowRef is not convertible to an int   -1 to convert 1-based to zero-based 
0, Line, //  ArrayList 
0, Line, //  Flush the package 
0, Line, //  If we've already seen any of the "slide" IDs for this   PersistPtr, remove their old positions 
0, Line, //  See http://xmlgraphics.apache.org/fop/0.95/metadata.html 
0, Line, //  FAILS before fix for #63292 
0, Line, //   starts, or 0 if this is the first one 
0, Line, //  This field MUST exist if and only if the containing Obj?s cmo.ot is equal to 0x14. 
0, Line, //  First match, just set the value. 
0, Line, //      // x is text that is not a boolean       return false;   }   testValue = boolToInt(val.booleanValue()); 
0, Line, // UNC paths have \u0003 chars as path separators. 
0, Line, //  paragraph is 30 long 
0, Line, //  Merged 
0, Line, //  Comment is rId6 
0, Line, //  This used to be an error but now parses.  Union has the same behaviour. 
0, Line, // arbitrary limit on size of strings to read, etc. 
0, Line, //  It doesn't have any core properties yet 
0, Line, // Setting its reference 
0, Line, //  helper methods to adjust list of presets for other tests 
0, Block, /*  int length =  */
0, Line, //  Could it be an OOXML-Strict one? 
0, Line, //  A single FAT block can address 128/1024 blocks 
0, Line, //  xadesv141::TimeStampValidationData 
0, Line, //  expected during successful test 
0, Line, //  ADTL Palette 0   Fill Palette 20c0 
0, Line, //  add TargetMode attribute (as it is external link external) 
0, Line, //  Write out the record data 
0, Line, // //// Case 1: Evaluate "Table1[col]" //////// 
0, Line, // out.format("<link href=\"excelStyle.css\" rel=\"stylesheet\" type=\"text/css\">%n"); 
0, Block, /*              * [MS-DOC]             *              * Page 104 of 622             *              * A signed 32-bit integer that specifies either the position in the             * Data Stream of a picture or binary data or the name of an OLE             * object storage.              */
0, Line, //  to create this object. 
0, Line, //  A WMF PitchAndFamily object that specifies the pitch and family of the font.   Font families describe the look of a font in a general way. 
0, Line, //  create the PropertyTable 
0, Line, //  shape doesn't support CTApplicationNonVisualDrawingProps 
0, Line, //  Look for bits associated with the runs 
0, Line, //  Encrypted is normally BOF then FILEPASS   May sometimes be BOF, WRITEPROTECT, FILEPASS 
0, Line, // now ref is CellRangeAddress(1, 2, 10, 4) 
0, Line, //  rotation of key values is application dependent - Excel = 2 / Word = 7  
0, Line, //  not a sign, so it's a digit, and therefore a positive exponent 
0, Line, //  Truncate to header + flag + data for flag + flag + data 
0, Line, //  Excel 2010 gives -1.23152709359606 
0, Line, //  Act 
0, Line, //  None or more than four parameters were passed so display  a Usage message. 
0, Line, //  xmlbeans adds line-breaks depending on the system setting, so we get different   test results on Unix/Mac/Windows   if the xml documents eventually change, this test needs to be run with the   separator set to the various system configurations 
0, Line, //  test createCell(row, column, value) (no CellStyle) 
0, Line, //  This bit used to crash 
0, Line, //  An unsigned integer specifies the count of items in rgSmartTagIndex. 
0, Line, //  compare signs 
0, Line, // there are two options:  a) an exact denominator is specified in the formatString 
0, Line, // First record in drawing layer MUST be DrawingRecord 
0, Line, //  options 1   index of color value 
0, Line, //  0 means DEFLATE compression   0xFE means no compression 
0, Line, //   that reference slides after the PersistPtrHolder) 
0, Line, //   to all zeros 
0, Line, //  Open 
0, Line, //  update the widths   for-loop over the shorter of the number of cells in the row and the number of tracked columns 
0, Line, // assertTrue(sheet.getAutobreaks()); 
0, Line, //  if empty, return not allowed flag 
0, Line, //  docId   saltData 
0, Line, //  use cached formula result if it's the right type: 
0, Line, //  Now with 
0, Block, /* Font b = */
0, Line, //  BinaryRC4 
0, Line, //  Check we can call getText without error 
0, Line, //  Abort if first record is of type 0000 and length FFFF, 
0, Block, /*  Evaluation is not supported  */
0, Line, //  Xfs 
0, Block, /* 	 * According to ECMA-376 default position is RIGHT.	  */
0, Line, // YK: PPT reports a slightly different color: r=189,g=239,b=87 
0, Line, // we must set location for internal hyperlinks 
0, Line, //  Oh dear, this isn't allowed...   The word file seems to be corrupted   Switch to using the nil style so that    there's a chance we can read it 
0, Block, /*  Register a listener for *all* documents.  */
0, Line, //  An unsigned 32-bit integer that specifies the number of colors specified in the SurroundingColor field. 
0, Line, //  Cnstants that defines how many pixels and points there are in a   millimetre. These values are required for the conversion algorithm. 
0, Line, //  The y-coordinate of the ending vertex on an arc relative to the height of 
0, Line, //  drawing2 is a clone of drawing1 
0, Line, //  the name was not found in the list of external names   check if the Workbook's UDFFinder is aware about it and register the name if it is 
0, Line, //  Now look at a non-empty one 
0, Line, //  The current offset stores us, but the next one is free 
0, Line, //  so they don't get this far 
0, Line, //  check if we expect failure for this file 
0, Line, //  we are going to add text by paragraphs. Clear the default placehoder text before that 
0, Line, //  extra header/footer settings supported by Excel 2007 
0, Line, // first bit only. 
0, Line, //  Wind on by the atom length, and check we're not at the end 
0, Line, //  generate session key 
0, Line, //  Now, do the same thing for our slides 
0, Line, //  Loop over all the slides we know about   Find where they used to live, and where they now live 
0, Line, //  run with the file provided in the Bug-Report 
0, Line, //  Input processing and error checks. 
0, JavaDoc, /*      * TODO      */
0, Line, //  some broken Workbooks miss this... 
0, Block, /* package */
0, Line, //                 fileOut.close();              } 
0, Line, //  this is called by user code, if the complexData is empty/null, allocate a space for a valid header   be aware, that there are complex data areas with less than 6 bytes 
0, Line, //  x.x% 
0, Line, //  Type: 0d  Addr: 014ff644  Offset: 4312  Len: 48  Format: 54  From: 44d3 
0, Line, //  Remove the last 
0, Line, //  includes column header 
0, Line, //  And check again. 
0, Line, //  Look for SlidePersistAtoms, and report what they have to 
0, Line, //  A 32-bit unsigned integer that specifies the number of rectangles in the RectData member. 
0, Line, //  below are shape types only found in native 
0, Line, //  One slide 
0, Line, //  Remove thrown.* when bug 58779 is resolved   In the mean time, this function will modify SampleShow.pptx on disk. 
0, Line, //  also sets method to POST. 
0, Line, //  Add at the place of the supplied record 
0, Line, //  Tidy and return (null if no match) 
0, Line, //  These should be the properties for the message itself 
0, Line, //  always present 
0, Line, // //// Case 18: Evaluate "Table1[[col]:[col2]]" //////// 
0, Line, //  root spContainer + 2 spContainers for shapes 
0, Line, //  ignore metafileDataSize, which might ignore a (placeable) header in front 
0, Line, //  Check it has 0x347f 
0, Line, //  Now read in the value(s) 
0, Line, //  no need to log a NullPointerException here 
0, Line, //  agg.escherRecords = new ArrayList(); 
0, Line, //  Has 1 border 
0, Line, //  NOTE: XWPFDocument.removeEndnote() delegates directly to          XWPFEndnotes. 
0, Line, //  numeric cell with a custom style 
0, Line, //  Outlook30 has some 
0, Line, //  make it ready for reading 
0, Line, //  Condition 1: Formula Is   =ISERROR(C2)   (White Font) 
0, Line, //  user code reported in Bugzilla #49529 
0, Line, //  crossing point 
0, Block, /*  **************************************************************************  */
0, Line, //  DocumentSummaryInformation 
0, Line, //  Check the header details - will have the sbat near the start, 
0, Line, //  Note for area SUMPRODUCTs, string values are interpreted as zero   even if they would parse as valid numeric values 
0, Line, //  assertTrue(wb.dispose()); 
0, Line, //  20-24 
0, Line, //  skip fibRgFcLcbBlob (read later at fillVariableFields) 
0, Line, //  ignored here 
0, Line, //  Try to retrieve the part inputstream from the URI 
0, Line, //  Theme file doesn't have any textual content 
0, Line, //  Check it has key parts 
0, Line, //  if source and target are the same they should be resolved to the last segment,   Example: if a slide references itself, e.g. the source URI is   "/ppt/slides/slide1.xml" and the targetURI is "slide1.xml" then   this it should be relativized as "slide1.xml", i.e. the last segment. 
0, Line, //  Retrieves relationship part, if one exists 
0, Line, //  E: Explicit Background, Foreground all Black 
0, Line, //  Ref - A4   Attr 
0, Line, // count = 30 
0, Line, //  shall not appear without FIELD_BEGIN_MARK 
0, Line, //  Change it 
0, Line, // 16-bit GUID. Seems to be always the same. Does not depend on the hyperlink type 
0, Line, //  If we're not asked to do anything, return now 
0, Line, //  Write out and read once more, just to be sure 
0, Line, //  Excel also supports "m before h is month" 
0, Line, //  this line caused XmlValueOutOfRangeException , see Bugzilla 3965 
0, Line, //  EOF 
0, Line, // //////////////////////////////////////// 
0, Line, //  Set the color 
0, Line, //  no need to rotate back and forth, just apply scaling inverted 
0, Line, //  by default DONT save backups of files...just loose data 
0, Line, //  Now the next pass for quoted characters: Remove '' chars, making "'a''b'" into "'ab'" 
0, Line, //  plain area ref   note - area ref is normalised 
0, Line, //  Link and re-try 
0, Line, //  Simple text 
0, Line, //  since arrays are 0-based 
0, Line, //  start x coordinate, relative to parent 
0, Line, //  8 bytes header + 20 bytes to flags + 2 bytes flags = 30 bytes 
0, Line, //  collect zero or more DEFINEDNAMEs id=0x18, 
0, Line, //  Unicode string format. 
0, Line, //  open an empty document 
0, Line, //  brushes, pens, and the other objects 
0, Line, //  Create a new named range for worksheet 'sheet2' 
0, Line, //  Set CellStyle and RowStyle and ColumnStyle 
0, Line, //  Good, they're not the same 
0, Line, //  The stored data size in the simple block excludes the header size 
0, Line, //  Special Value to indicate an uninitialized Cell 
0, Line, //  Evaluate what we have 
0, Line, //  false param present 
0, Line, //  Remember - POI column 0 == OOXML column 1 
0, Line, //  Otherwise, our tests wouldn't work! 
0, Line, //  both low and high indexes point to values assumed too low and too high. 
0, Line, //  BUG 60845 
0, Line, //  need to set class id 
0, Line, // ascii -> unicode mapping for module names  preserve insertion order 
0, Line, // Test high cell bound 
0, Line, //  Some custom formats 
0, Line, //   delete the record for it. Start off with no change 
0, Line, //  Embedded OPC documents relation name 
0, Line, //  Do we need to re-compute the free? 
0, Line, //  Pesky XmlBeans bug - see Bugzilla #49934   it never happens when using the full ooxml-schemas jar but may happen with the abridged poi-ooxml-schemas 
0, Line, //  Write out 
0, Line, //  can have the "poifiles" subdir 
0, Line, // copy rgtc 
0, Line, //  Don't tolerate unusual boolean encoded values (unless it becomes evident that they occur) 
0, Line, //         assertEquals("D 67.10", cell.getStringCellValue()); 
0, Line, //  we use ImageIO in one of the tests here so we should ensure that the temporary directory is created correctly 
0, Line, //  Now the stream 
0, Line, // B1 uses VBA in the formula 
0, Line, //  multiple of 16 bytes 
0, Line, //  False values: "false", "0", "off" 
0, Line, //  an EmfPlusBlendColors object, or an EmfPlusBlendFactors object, but it MUST NOT contain both. 
0, Line, // multiple calls of createDrawingPatriarch should return the same instance of XSSFDrawing 
0, Line, //  30 chars 
0, Line, //  Check we found our formats 
0, Line, //  Check the charts on the 2nd sheet 
0, Line, //  usual shape? 
0, Line, //  Entries gone 
0, Line, //  Decide where to get the formula string from 
0, Line, //  Add another slide, goes in at the end 
0, Line, //  special case for files saved in Office 2007 
0, Line, //  YK: Mimic Excel and silently truncate sheet names longer than 31 characters 
0, Line, //  Create the thumbnail part name 
0, Line, //  179 chars, 30 + 28 + 25 
0, Line, //  wb is usually an SXSSFWorkbook, but must also work on an XSSFWorkbook   since workbooks must be able to be written out and read back   several times in succession 
0, Line, //  sprmPItap -- 0x6649 
0, Line, //  Cell show  
0, Line, //  X=ok, Y=ok 
0, Line, //  Rows moved include the last row of the area ref, but not the first   btw: (aFirstRow < _firstMovedIndex) 
0, Line, //  Owing to the way the loop above works, the rowNumber will have been 
0, Line, // red  bold  italic 
0, Line, // Version of the application which "updated the spreadsheet last" 
0, Line, //  rgbUid 1/2 
0, Line, // default column width is measured in characters  multiply 
0, Line, //  Decide on what to do, based on how the lengths match up 
0, Line, //  paragraph is 30 long   paragraph reserved field 
0, Line, //  recurse into the new level group 
0, Line, //  Unicode 
0, Line, //  Only set these if you know what you're doing! 
0, Line, //   for the theme-applied cells in Column A are correct 
0, Line, //  "PK\001\002"   version made by: 4.5   version required: 4.5   flags: 8 = data descriptor used   compression method: 8 = deflate   file modification time & date   CRC-32   compressed size   uncompressed size   filename length 
0, Line, //  An Empty Properties part has been added in the save/load 
0, Line, // The act of adding the string to the SST record may have meant that  an existing string was returned for the index, so update our local version 
0, Line, //  Check the new footers have their new text too 
0, Line, //  finished with predicate expression 
0, Line, //  all other values are rounded up to the next integer 
0, Line, //  Check upper limit 
0, Line, //  else z = value of this guide 
0, Line, //  Tell HSSFWorkbook that it needs to 
0, Line, // Selecting cols 
0, Line, //  Excel displays fraction: 461/512 
0, Line, //  0x17 
0, Line, //  now we use a newly generated salt/verifier and check   if the file content is still the same 
0, Line, //  assert the table is empty 
0, Line, //  verify cannot delete non-empty directory 
0, Line, //  reapply style and local PAPX properties 
0, Line, //  "Buffer overrun" 
0, Line, // read so it doesn't get shifted again 
0, Line, //  A 32-bit unsigned integer that specifies the size of region data in bytes 
0, Line, //  use a simple state machine to figure out what we are doing 
0, Line, //  Get an InputStream from the package part and pass that   to the create method of the WorkbookFactory class. Update   the resulting Workbook and then stream that out again   using an OutputStream obtained from the same PackagePart. 
0, Line, //  And these are ones we probably shouldn't allow, 
0, Line, // styles table 
0, Line, //  When parsing a document, look to see if you know about that type    of the current record. If you know it's a type that has children,    process the record's data area looking for more records   If you know about the type and it doesn't have children, either do    something with the data (eg TextRun) or skip over it   Otherwise, check the first byte. If you do a BINARY_AND on it with    0x0f (15) and get back 0x0f, you know it has children. Otherwise    it doesn't 
0, Line, //  corner by setting the maximum allowed ratio of miter length to line width. 
0, Line, //  A 32-bit signed integer from the WrapMode enumeration that specifies how to repeat the texture image 
0, Line, //  ok, we have the start, and all knots... do something with this 
0, Line, //  find referenced CTColor in the theme 
0, Block, /*          * It's possible to set up repeating rows and columns in your printouts by using the setRepeatingRowsAndColumns() function in the Workbook object.         *         * This function Contains 5 parameters:         * The first parameter is the index to the sheet (0 = first sheet).         * The second and third parameters specify the range for the columns to repreat.         * To stop the columns from repeating pass in -1 as the start and end column.         * The fourth and fifth parameters specify the range for the rows to repeat.         * To stop the columns from repeating pass in -1 as the start and end rows.          */
0, Line, //  update row height in the table properties 
0, Line, //  see TestXSSFBugs.bug54764()   see TestXSSFBugs.bug54764()   POIFS properties corrupted   No actual contents   contains xml-entity-expansion   contains xml-entity-expansion   contains shared-string-entity-expansion 
0, Line, //  UsrExcl(0x0194)   FileLock   RRDInfo(0x0196)   RRDHead(0x0138) 
0, Line, //  See https://support.office.com/en-us/article/SUBTOTAL-function-7b027003-f060-4ade-9040-e478765b9939   "If there are other subtotals within ref1, ref2,... (or nested subtotals), these nested subtotals are ignored to avoid double counting." 
0, Line, // create sheets with cells having (different) numbers 
0, Line, //  from testing, Excel only operates on numbers and dates (which are stored as numbers) in the range.   numbers stored as text are ignored, but numbers formatted as text are treated as numbers. 
0, Line, //     public final static short       OBJECT_TYPE_GROUP_BOX          = 19; 
0, Line, //  increment the number of persistent objects 
0, Line, //  Copy file data to the newly created part 
0, Line, //  should builder be replaced with CellCopyPolicy setters that return the object   to allow setters to be chained together? 
0, Line, //  currently we only identify TextShapes as placeholders 
0, Line, //  Strip leading and trailing quotes if needed 
0, Line, //  Only replace the grouping character if it is not the default   grouping character for the US locale (',') in order to enable   correct grouping for non-US locales. 
0, Line, //   arrays are properly supported 
0, Line, //  draw stuff 
0, Line, //  first row is for title 
0, Line, //  sprmPFTtp 
0, Line, //  register for all 
0, Line, //  zeros for row/col/offsets          this.cell1 = calcCell(sheet, EMPTY_MARKER, position.getCx(), position.getCy());          this.cell2 = calcCell(sheet, cell1, size.getCx(), size.getCy()); 
0, Block, /*      <ExControl info="15" type="4078" size="218" offset="76" header="0F 00 EE 0F DA 00 00 00 ">       <ExControlAtom info="0" type="4091" size="4" offset="84" header="00 00 FB 0F 04 00 00 00 ">         00 01 00 00       </ExControlAtom>       <ExOleObjAtom info="1" type="4035" size="24" offset="96" header="01 00 C3 0F 18 00 00 00 ">         01 00 00 00 02 00 00 00 01 00 00 00 00 00 00 00 02 00 00 00 00 96 13 00       </ExOleObjAtom>       <CString info="16" type="4026" size="44" offset="128" header="10 00 BA 0F 2C 00 00 00 ">         53 00 68 00 6F 00 63 00 6B 00 77 00 61 00 76 00 65 00 20 00 46 00 6C 00 61         00 73 00 68 00 20 00 4F 00 62 00 6A 00 65 00 63 00 74 00       </CString>       <CString info="32" type="4026" size="62" offset="180" header="20 00 BA 0F 3E 00 00 00 ">         53 00 68 00 6F 00 63 00 6B 00 77 00 61 00 76 00 65 00 46 00 6C 00 61 00 73         00 68 00 2E 00 53 00 68 00 6F 00 63 00 6B 00 77 00 61 00 76 00 65 00 46 00         6C 00 61 00 73 00 68 00 2E 00 39 00       </CString>       <CString info="48" type="4026" size="44" offset="250" header="30 00 BA 0F 2C 00 00 00 ">         53 00 68 00 6F 00 63 00 6B 00 77 00 61 00 76 00 65 00 20 00 46 00 6C 00 61         00 73 00 68 00 20 00 4F 00 62 00 6A 00 65 00 63 00 74 00       </CString>     </ExControl>      */
0, Line, //  The surrounding colors are colors specified for discrete points on the boundary of the brush. 
0, Line, //  One XBAT block holds 127/1023 individual BAT blocks, so they can address    a fairly hefty amount of space themselves 
0, Line, //  Check if this part is a relationship part 
0, Line, //  Remove thrown.* when unit test for XSLF SlideShowFactory.create(OPCPackage) is implemented 
0, Line, //  Remove the run from our high level lists 
0, Line, //  [MS-DOC], v20140721, 2.6.4, sprmSNEdnRef 
0, Block, /*  See documentation for sprmPIlfo (0x460B)  */
0, Line, //  No change, SBAT remains empty 
0, Line, //  get/set alignment modifies the cell's style 
0, Line, //  sid=0x0409 
0, Line, // do what Graphics does by maintaining the stack, etc.! 
0, Line, //  reset the user locale and time zone so that tests do not interfere with each other   the other and better way would be to run each test in its own thread since   LocaleUtil uses per-thread settings.   Helpful, but not ASL 2.0 licensed:   http://www.codeaffine.com/2014/07/21/a-junit-rule-to-run-a-test-in-its-own-thread/ 
0, Line, //  Errors 
0, Line, //  save the worksheet as-is using SXSSF 
0, Line, //  complex 
0, Line, //  The same colour 
0, Line, //  Check under max record size 
0, Block, /* 	 * Accessor methods are not trivial. They use lazy underlying bean	 * initialization so there can be some errors (NPE, for example).	  */
0, Line, //  <- annotation is necessary to override expected exception 
0, Line, //  For compressed stores, we require all of the data 
0, Line, //  Save part in zip 
0, Line, //  Cell content 2016-12-8 as an example   Cell show "12/8/2016" 
0, Line, //  short side div 16 
0, Line, //  As number and string 
0, Line, //  otherwise use general format 
0, Line, //  shrink 50% 
0, Line, //  Need to have different counters for cell rows and    row rows, as you sometimes get a RowRecord in the    middle of some cells, and that'd break everything 
0, Line, //  can't compare row heights because of variable test heights 
0, Line, //  copy drawing contents 
0, Line, //  gradient is repeated. 
0, Line, //  Compare the original and newly saved document 
0, Line, //  If there's only one, it's easy 
0, Line, //  destination columns are completely outside ref 
0, Line, //  B1 was used to evaluate A1 
0, Line, //  The backing array should work out fine for us 
0, Line, //  copy a hyperlink via the copy constructor 
0, Line, //  If possible, do first 4 and last 4 bytes 
0, Line, //  HyperlinkTable (not aggregated by POI yet)   DataValidityTable 
0, Line, //  Now look for the interesting records in there 
0, Line, //  the 15 
0, Line, //  Check main 
0, Line, //  Now add some text to one group, and some more 
0, Line, //  but the escape is not present in the column definition 
0, Line, //  ensure that temp-dir exists because ImageIO requires it 
0, Line, //  And add us to the buffer + dictionary 
0, Line, //  mask is 0x020001 
0, Line, //   on our way past 
0, Line, // arbitrarily selected; may need to increase 
0, Line, //  Pivot Table Extensions 
0, Line, // default color for comments 
0, Line, //  PowerPoint seems to store files with \r as the line break   The messes things up on everything but a Mac, so translate   them to \n 
0, Line, //  Round trip 
0, Line, // other columns but C and G are not hidden 
0, Line, // Range of cells which the formula applies to. 
0, Line, //  end public class DirectoryNode 
0, Line, // unset highest 2 bits 
0, Line, //  sign bit is in the same place for long and double 
0, Line, //  sprmPDxaFromText 
0, Line, // formula referring all sheets created below 
0, Line, //  indent appropriately for the level 
0, Line, //  doesn't happen yet because formulas cannot be modified from the master workbook 
0, Line, //  Note - formula size is not immediately before encoded formula, and does not include any array constant data 
0, Line, //  Ensure it does contain our original modifications 
0, Line, //  Nice and easy 
0, Block, /*  ---------------------------------------------------------------------  */
0, Line, //  remove all but first paragraph 
0, Line, //  An optional EmfPlusTransformMatrix object that specifies a world space to device space transform for   the pen. This field MUST be present if the PenDataTransform flag is set in the PenDataFlags field of   the EmfPlusPenData object. 
0, Line, //  getIndex() returns short, which is not sufficient for > 32767   we should really change the API to be "int" for getIndex() but   that needs API changes 
0, Line, //  A1:B2 
0, Line, //  Core type doesn't have any params 
0, Line, //  Another builtin fun one 
0, Line, //  And Excel style 
0, Line, //  of this record to the source bitmap header. 
0, Line, //  Ensure we have what we expect on the root 
0, Line, //  Typically odd Crystal Reports exports 
0, Line, //  Return the created record 
0, Line, //  Re-process the named ranges 
0, Line, //  A 32-bit unsigned integer that is reserved and MUST be ignored. 
0, Line, //  one less now   check that nearby cell of the same group still has the same formula 
0, Line, //  Remove when SXSSFRow.shiftCellsRight() is implemented. 
0, Line, //  Now add in on 3, should go to front 
0, Block, /*  Read a test document <em>doc1</em> into a POI filesystem.  */
0, Line, //  Empty text 
0, Line, // note, if subject contains white spaces, make sure they are url-encoded 
0, Line, // assertContains(content, "Attribute TestMacro.VB_Description = \"This is a test macro\""); 
0, Line, //  Make a POIFSFileSystem from the contents, and close the stream 
0, Line, //  non-Javadoc: When possible, code should be implemented in the RowShifter abstract class to avoid duplication with   {@link org.apache.poi.hssf.usermodel.helpers.HSSFRowShifter} 
0, Line, //  Mark our position, and read another whole buffer 
0, Line, // 	                  assertEquals(msg, expValue.getErrorCellValue(), actValue.getErrorValue());  	              } 
0, Line, //  We only digest a part once. 
0, Line, //  Sheet 1 A2 is on same sheet 
0, Line, // 				File tempFile = TempFile.createTempFile("testExtFunc", ".xls");  				FileOutputStream fout = new FileOutputStream(tempFile);  				wb.write(fout);  				fout.close(); 
0, Line, //  restore byte value 
0, Line, //  transitions around the E98,E99,E100 boundaries 
0, Line, //  clone for chart-sheets is not supported 
0, Line, // this should be the case because of the constructor 
0, Line, //  Check a few core things are present 
0, Line, //  Set the text to be as it is now 
0, Line, //  A valid BorderStyle constant, as an Enum 
0, Line, //  A 32-bit unsigned integer that specifies whether a transform matrix is present in the 
0, Line, //  update header data 
0, Line, //  300 - 10 - 10 - 36 - 6.4   first line is indented   other lines are not indented 
0, Line, //  Check if chart was shallow copied or deep copied 
0, Line, //  use revert to not re-write the input file 
0, Line, //  It should be light green 
0, Line, //  only create a header, if we need to, i.e. the placeholder type is eligible 
0, Block, /*         setCellFormula(sheet, 0, 0, "B1*C1");        sheet.getRow(0).createCell(1).setCellValue("A");        setCellFormula(sheet, 1, 0, "B1*C1");        sheet.getRow(1).createCell(1).setCellValue("A");        setCellFormula(sheet, 0, 3, "SUMIFS(A:A,A:A,A2)");  */
0, Line, //  Write out the same for the supplied slideshow 
0, Line, //  Special characters 
0, Line, // hmf  left 
0, Line, // first short should == length! 
0, Line, //  If the partlist is null, then we parse the package. 
0, Line, // check 
0, Line, //  old word format 
0, Line, //  confirm next key change 
0, Line, //  Grab the offsets for each of the sheets 
0, Line, //  Do an in-place replace via an InputStream 
0, Line, //  Note: this behavior deviates from Microsoft Excel,   which will not overwrite a cell in destination row if merged region extends beyond the copied row.   The Excel way would require:  assertEquals("[Merged across multiple rows] R7:S8 merged region", "Should NOT be overwritten", cell.getStringCellValue());  assertFalse("[Merged across multiple rows] R7:S8 merged region",          sheet.getMergedRegions().contains(CellRangeAddress.valueOf("R7:S8"))); 
0, Line, // Test low row bound 
0, Line, //  Compare each bit in our flag byte in turn: 
0, JavaDoc, /*  * This acceptor only allows traversal to shapes that have useful data * associated with them, and tries to elide details that aren't useful when * analyzing the content of a document. * * Useful is subjective of course, and is defined as any of: * * - Has non-empty text - Is a 1d shape, such as a line - User specified shapes * - The outline of stencil objects - TODO  */
0, Line, //  Cell show "8-Dec-16" 
0, Line, //  Build an input stream of it, and read back as a POIFS from the stream 
0, Line, //  make sure the formula parses OK first 
0, Line, //  Notes - added later but not changed 
0, Line, //  the only supported so far 
0, Line, //  sprmPDxaRight80   
0, Line, //  Check that things that aren't in aren't in 
0, Line, //  increment the object ID seed 
0, Line, //  table size increased -   clear all cells below the table that are inside the new area 
0, Line, //  simple expansion of top   columns containing area top being shifted down: 
0, Line, //  unsupported; 
0, Line, //  lets hope no one uses this anymore 
0, Line, //  Check what we have now 
0, Line, // the first slide uses per-slide headers / footers 
0, Line, //   without having to try to match the children together 
0, Line, //  add columns 
0, Line, //  now the first sheet is at index 1 
0, Line, //  reverse iteration because args were pushed in-order 
0, Line, //  A 32-bit unsigned integer that specifies the number of characters in the string. 
0, Line, //  2000 version 
0, Line, //  all other chars OK 
0, Line, //  Font 0   Format 0 
0, Line, //  create comments and vmlDrawing parts if they don't exist 
0, Line, //  Write the geometry 
0, Line, // wildcard values 
0, Line, // there can be multiple HeaderFooterRecord records belonging to different sheet views 
0, Line, //  Move backward 
0, Line, //  not defined 
0, Line, // construct a new ArrayRecord with the same contents as r1 
0, Line, //        
0, Line, //  Wrap the OutputSteam as a channel 
0, Line, //  2 colors 
0, Line, //  Relationship type 
0, Line, //  Ensure there's a spot in the file for it 
0, Line, //  iterate across the row for all the evaluation cases 
0, Line, //  Complex type evaluation (currently only for extraction of check boxes) 
0, Line, //  This value MUST be composed of BrushData flags. 
0, Line, //  Finally row 3 
0, Line, //  for example, the string "apples" and the string "APPLES" will match the same cells. 
0, Line, //  Finally delete its relationship part if one exists 
0, Line, //  6.5	19.5	6	6.5 
0, Line, //  =====================================================================   Case 2: Existing code creates an iterator variable   =====================================================================   Original code (no longer valid) 
0, Line, //  removing the whole protection structure 
0, Line, //  one or more PSB records found after some intervening non-PSB records 
0, Line, //  Some apps generate multiple ExternSheetRecords (see bug 45698). 
0, Line, //  else biasedExponentB is 1 
0, Line, //  read in the data stream. 
0, Line, //  Note - must create distinct instances because they are assumed to be mutable. 
0, Line, //  Must be at least 4 bytes long 
0, Line, //  If the part is a relationship part, we don't save it, it's   the source part that will do the job. 
0, Line, //  Get the document's embedded files. 
0, Line, //  when the MergedCellsTable is found in the right place, we expect those records to be contiguous 
0, Line, //  key found 
0, Line, //             ser_output[11000] = 'X';          } 
0, Line, //  InputStream -> either 
0, Line, // First column of the hyperlink  Last column of the hyperlink 
0, Line, //  From this figure, determine how many co-ordinat positions to 
0, Line, // Getting Sheet Name for the reference 
0, Line, //  layout   tblpro.addNewTblLayout().setType(STTblLayoutType.AUTOFIT); 
0, Line, //  We have no children to start with 
0, Line, //  This override is used only in order to test failing for HSSF. Please remove method after code is fixed on hssf,    so that original method from BaseTestSheetShiftColumns can be executed.    After removing, you can re-add 'final' keyword to specification of original method.  
0, Line, //  layout can be null if the entire word at the current position   does not fit within the wrapping width. Try with requireNextWord=false. 
0, Line, //  make sure continuing PLS is still OK 
0, Line, // not quite sure 
0, Line, //  Setup the default rgb values 
0, Line, // super(documentStream, tableStream, offset, size, fcMin, charset); 
0, Line, //  Confirm user style name 
0, Line, //  We need predictable dates for testing! 
0, Line, //  Verify comments are in the position expected after the shift 
0, Line, //  also close the POIFSFileSystem here as we read all the data   while decrypting 
0, Line, //  srcCellRow and srcCellColumn are ignored by SUMPRODUCT 
0, Line, //  each plane. 
0, Line, //  only care about elements 
0, Line, //  Note - no range simplification here. An expr like "A1:B2:C3:D4:E5" should be   grouped into area ref pairs like: "(A1:B2):(C3:D4):E5"   Furthermore, Excel doesn't seem to simplify   expressions like "Sheet1!A1:Sheet1:B2" into "Sheet1!A1:B2" 
0, Line, //  text len   010672AT0 MUNI,[RTG_MOODY_UNDERLYING,RTG_SP_UNDERLYING] 
0, Line, //  Rows are moving up 
0, Line, //  field_2_numIdClusters = LittleEndian.getInt( data, pos + size ); 
0, Line, //  link to slide . absolute reference   this is kind of a hack, as we might link to pages not yet imported,   but the underlying implementation is based only on package part names,   so this actually works ... 
0, Line, //  breaks files with slash in their name on Linux:   file = file.replace('\\', '/'); // ... failures/handlers lookup doesn't work on windows otherwise 
0, Line, //  write out the saved-by table. 
0, Line, //  Verify that the changes were made 
0, Line, //  go through all formula cells 
0, Line, // //// Case 8: Evaluate "Table1[#This Row]" //////// 
0, Line, //  must always be string   even if match str is wild, but contains only digits   e.g. '4*7', NumberEval(4567) does not match 
0, Line, //  add notes slide to presentation 
0, Line, // TestHSSFComment.class, //converted to junit4 
0, Line, //  part is not related with this POIXMLDocumentPart 
0, Line, //  application/vnd.ms-visio.drawing 
0, Line, //  Claiming an existing block, ensure there's no loop 
0, Line, //  PAPXs can contain table sprms if the paragraph marks the end of a   table row 
0, Line, //  ... failures/handlers lookup doesn't work on windows otherwise 
0, Line, //  verify whitespaces in different places 
0, Line, //  How far through the output we've got   (This is normally used &4095, so it nicely wraps) 
0, Line, //  the DocumentProperty backing this object 
0, Line, //  the rest is unused 
0, Line, //  adapt to the current user locale as the locale changes) 
0, Line, //  easy to see this cannot be a valid date 
0, Line, //  the conditional formatting is not automatically added when it is created... 
0, Line, //  short side div 4 
0, Line, //  for example PSGraphics2D or PDFGraphics2D would call gsave() / grestore 
0, Line, //  rows 
0, Line, //  is first character valid? 
0, Line, //  We'll also want to be able to turn the slide IDs into a position 
0, Line, //  More trickiness:   Empty string is not the same as BlankEval.  It causes #VALUE! error 
0, Block, /*  ******************* adding methods follow *********************  */
0, Line, // check it is not in built-in formats 
0, Line, // remove a third from the beginning 
0, Line, //  active cell behavior is undefined if not set.   HSSFSheet defaults to A1 active cell, while XSSFSheet defaults to null. 
0, Line, //  Handle new row 
0, Line, //  setup: key material, signature value 
0, Line, // make private in 4.2 
0, Line, //  End of normal4096 
0, Line, //  A 32-bit signed integer that specifies the object clamping behavior. It is not used until this object 
0, Line, //  current x-extent. 
0, Line, //  1-row/1-column intersection   2x2 corner intersection 
0, Block, /*              * Line using Ryan's FCtoCP() conversion method - unable to observe             * any effect on our testcases when using this code - piers              */
0, Line, //  Formulas _never_ evaluate to blank.  If a formula appears to have evaluated to   blank, the actual value is empty string. This can be verified with ISBLANK(). 
0, Line, //   but would need a better regexp 
0, Line, //  $B$65536 
0, Line, //  Assumptions 
0, Line, //  short side div 6 
0, Line, //  either a null name was given, or there is no such name 
0, Line, //  was formula cell before - now a plain value 
0, Line, //  POIFSFileSystem always closes the stream 
0, Line, //  Value Operator Ptgs and Control are base tokens, so token will be unchanged   but any child nodes are processed according to desiredOperandClass and callerForceArrayFlag 
0, Line, //  Ask it to get block 184 with creating, it will do 
0, Line, //  scale output bounds to image bounds 
0, Line, //  2 bytes reserved 
0, Line, //  green 
0, Line, //  unknown 33 
0, Line, //  0 -> 51 is one stream 
0, Line, // cchFile (2 bytes)  char type = ansi 
0, Line, //  Delete a mini stream, add one more 
0, Line, //  is this font has a line through the center   some weird macintosh thing....but who understands those mac people anyhow   some weird macintosh thing....but who understands those mac people anyhow 
0, Line, //  _rels type doesn't have any params 
0, Line, //  read all remaining bytes and wrap into a LittleEndianInput 
0, Line, // //// Case 10: Evaluate "Table1[[#Headers],[col]]" //////// 
0, Line, //  first check dimensions 
0, Line, //  minParams same as max since these are not var-arg funcs 
0, Line, //  Should have stopped at the SXVIEW record 
0, Line, //  Configure the document 
0, Line, //  Serialize a block of rows.   Hold onto the position of the first row in the block 
0, Line, //  Initially has Properties + BAT but not SBAT 
0, Line, //  Normally claims a size of 8 
0, Line, //  Test via DataFormatter 
0, Line, //  else - another sheet substream starting here 
0, Line, //  without PAPX reconstruction   assertEquals( 12, r.numParagraphs() ); 
0, Line, // pointer to native ruby VALUE 
0, Block, /*  Set the codepage. If both custom properties and section have a         * codepage, the codepage from the custom properties wins, else take the         * one that is defined. If none is defined, take ISO-8859-1.  */
0, Line, // This name is not visible in Word anywhere. 
0, Line, //  Check raw details on the one with 
0, Line, //  PS_COSMETIC, this value MUST be 0x00000001. 
0, Line, //  Store us in the header 
0, Line, //  Check that the column's width will accommodate the image at the   required dimension. If the width of the column is LESS than the   required width of the image, decide how the application should   respond - resize the column or overlay the image across one or more 
0, Line, //  short side div 8 
0, Line, //  Join as c, l, r 
0, Line, //  Do a raw set, no adjusting at the XSSFColor layer either 
0, Line, //  RTF 
0, Line, //  Create the Freeze Pane 
0, Line, //  Copy hyperlink 
0, Line, //  start replacing 
0, Line, //  not bit-mapped   not bit-mapped 
0, Line, //  fib.setCcpHdrTxtBx(fib.getCcpHdrTxtBx() + adjustment);   } 
0, Line, //  need to recalculate image size 
0, Line, //  Look for EscherTextboxWrapper's 
0, Line, //  -- OR --   open an existing empty document with styles already defined  XWPFDocument doc = new XWPFDocument(new FileInputStream("base_document.docx")); 
0, Block, /*  Check rule M1.6  */
0, Line, //  determine gridSpan / rowSpan 
0, Line, //  And three in rich text 
0, Line, //  first one wins (priority order, per Excel help) 
0, Line, //  Shift 1 forward 
0, Line, //             // MM/DD/YYYY is probably a good guess, if the in the US              return makeDate(f2, f0, f1);          } 
0, Line, //  Never dismantle the EMPTY environment 
0, Line, //  Verify the print areas were set correctly 
0, Line, //  42: DAVERAGE 
0, Line, //  making sure ID used once 
0, Line, //  Manually flush for this cell, and check 
0, Block, /*  duplicate record of the template series  */
0, Line, //  Top Level 
0, Line, //  Note that the basic method is identical to the listInCell() method 
0, Line, //  we will never match more than the pattern length 
0, Line, //  1 based results, 0 = current workbook 
0, Line, //  using default time-zone 
0, Line, //  MetafileData field. This value MUST be defined in the MetafileDataType enumeration 
0, Line, // Test an uncompressed string  Note that we can only ever get to a maximim size of 8227 since an uncompressed 
0, Line, //  removing the sheet makes it good again 
0, Line, //  fill it in 
0, Line, //  fall-back 
0, Line, //  Some external tools don't generate all of    the remaining fields 
0, Line, //  Generate the relation 
0, Line, // Greetings! 
0, Line, //  In three bits, split every 512 bytes 
0, Line, //  currently don't use FileCacheImageInputStream,   because of the risk of filling the file handles (see #59166) 
0, Line, //  only change valid chars 
0, Line, //  Not actually needed - can be found from day of month 
0, Line, //  Add the image 
0, Line, //  Our 2nd SBAT block has spares 
0, Line, //  Is it one of the special built in types, General or @? 
0, Line, //  Month is a special case due to C semantics 
0, Line, //  no need to wrap this type of Exception 
0, Line, //  blank 
0, Line, //  If we got a duplicate, mark it as such 
0, Line, //  in EMF+ the index must be between 0 and 63 
0, Line, //  convert offsets from emus to pixels since we get a   DrawingML-anchor   but create a VML Drawing 
0, Line, //  Note: we are using String.toUpperCase() here on purpose as it handles certain things   better than Character.toUpperCase(), e.g. German "scharfes s" is translated   to "SS" (i.e. two characters), if uppercased properly! 
0, Block, /*  CTCell[] cArray = ((XSSFRow)row).getCTRow().getCArray();            assertEquals(1, cArray.length); */
0, Line, //  A string of no more than 32 Unicode characters that specifies the typeface name of the font.   If the length of this string is less than 32 characters, a terminating NULL MUST be present, 
0, Line, //  A 32-bit unsigned integer that specifies the measuring units for the pen. 
0, Line, //  Create the top level drawing patriarch. 
0, Line, //  Check we can open the file via usermodel 
0, Line, //  Is it a named range? 
0, Line, //  one last real row 
0, Line, //  this can happen when a dynamic connector overrides its master's geometry   .. probably can happen elsewhere too, I imagine.  throw XDGFException.error("Mismatched geometry section '" + entry.getKey() + "' in master", this, e); 
0, Line, //  create a run to contain the content 
0, Line, //  name of a VBA module     
0, Line, //  all three should be there 
0, Line, //  request  create a nonce to avoid replay attack 
0, Line, //  one way is to create another XSLFFreeformShape from path2 and compare the resulting xml 
0, Line, //  but it was easier to implement it this way to avoid confusion 
0, Line, //  validate password with an actual office file (Excel 2010) 
0, Line, //  If the fields contents should be formatted to confrom with Excel's   convention.... 
0, Line, //  Create a new named range for worksheet 'sheet1' 
0, Line, // remove merged regions from clone 
0, Line, //  Cells outside window will fail, whether referenced or not 
0, Line, //  sprmCFSpec -- 0x0855 
0, Line, //  A 128-bit WMF RectL object, which specifies the bounds of the region. 
0, Line, //  don't use MAX_ENTRY_SIZE here! 
0, Line, //  Check with the bigger block size too 
0, Line, //  Check to ensure no other names have the same case-insensitive name 
0, Line, //  An optional 32-bit signed integer that specifies the style used for lines drawn with this pen object.   This field MUST be present if the PenDataLineStyle flag is set in the PenDataFlags field of the   EmfPlusPenData object, and the value MUST be defined in the LineStyle enumeration 
0, Line, //  Check we can get bits out by id   Hyperlinks are rId1, rId2 and rId3 
0, Line, //  xf type 
0, Block, /*  complex symbol  */
0, Line, //  now add Cell 0,1 
0, Line, //  plain data in D1:F3 
0, Line, //  do not implement! -> recursion   public int read(byte[] b) throws IOException; 
0, Line, // end draw thick black border 
0, Line, //  subsequent calls to createCellFromRecord() will update the colIx boundaries properly 
0, Line, //  9th one should have children 
0, Line, //  application/vnd.openxmlformats-officedocument.presentationml.presentation 
0, Line, //  in XSLF the fonts default to the theme fonts (Calibri), if the font group is not overridden   see XSLFTextRun.XSLFTextInfo.getCTTextFont 
0, Line, //  Latin Symbol 
0, Line, //  find referenced CTColor in the theme and convert it to java.awt.Color via a recursive call 
0, Line, // the module name map names should be in exactly the same order  as the module names here. See 2.3.3 PROJECTwm Stream.  At some point, we might want to enforce that. 
0, Line, //  Type of an unsupported type! Skipping...  
0, Line, //  assert that the comments are created properly before writing 
0, Line, //  dot is OK   underscore is OK 
0, Line, //  14-18 
0, Line, //  instantiate the following class so it'll get picked up by   the XmlBean process and added to the jar file. it's required   for the following XWPFTable methods. 
0, Line, //  Commented MB 23 May 2010  CTP ctP2 = CTP.Factory.newInstance();  CTR ctR2 = ctP2.addNewR();  CTText t2 = ctR2.addNewT();  t2.setStringValue("Second paragraph.. for footer"); 
0, Line, //  If spaceBefore >= 0, then space is a percentage of normal line height.   If spaceBefore < 0, the absolute value of linespacing is the spacing in points 
0, Line, //  msotxflBtoT 
0, Line, // bug 61045. File is govdocs1 626534 
0, Line, //  externalSheetIndex 1 -> BSheet1 
0, Line, //  srcRow is blank. Overwrite cells with blank values, blank styles, etc per cell copy policy 
0, Line, //  Style one 
0, Line, //  NOFILLHITTEST can be in the normal escher opt record but also in the tertiary record   the extended bit fields seem to be in the second 
0, Line, // Check created print areas 
0, Line, //  Complex slideshow, record order doesn't match slide order 
0, Line, //  Make sure the array formula has been removed properly 
0, Line, //  --> start option flags 
0, Line, //  If the POSITION flag is set in the Flags, the points specify relative locations. 
0, Line, //  Claims not to be text, but really is 
0, Line, //  Clone the sheet 
0, Line, // Need to setup thickness of 2 
0, Line, //  Override it, check it's taken 
0, Line, //  Output 
0, Line, //  Now locate the data block for it 
0, Line, //  Should have 4 attributes on the message 
0, Line, //  bad quote escaping   unknown external workbook   unknown sheet 
0, Line, //  Changing an intermediate formula 
0, Line, //  perhaps this could be optimised by consulting the (somewhat unreliable) isShared flag 
0, Line, //  if size is uneven we will have to add one so the first grpprl   falls 
0, Line, //  rows from within being moved: 
0, Line, //  create a table 
0, Line, //  On slide seven, we have:   TR:    (text)   TR:    <ps>(text a)</ps><ps>(text a)(text b)</ps>   TR: 
0, Line, //  Open as a proper zip file 
0, Line, //  Check we find a few words we expect in there 
0, Line, //  set margins 
0, Line, //  need to use reflection to avoid depending on the sun.nio internal API   unfortunately this might break silently with newer/other Java implementations,  
0, Line, // derive this from the font or frame/bounds information 
0, Line, //  see PolyBezier about limits 
0, Line, //  5 circles div 8: 5 x 360 / 8 = 225 
0, Line, //  PersistPtrFullBlock 
0, Line, //  draw background boxes 
0, Line, //  A WMF PointL object that specifies the coordinates of the reference point used to position the string.   The reference point is defined by the last EMR_SETTEXTALIGN record. 
0, Line, //  character run is 28 long   mask is 0x060002 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createExplicitListConstraint	 * (java.lang.String[])	  */
0, Line, //  int startAt = CPtoFC(node.getStart());   int endAt = CPtoFC(node.getEnd()); 
0, Line, //  if we haven't found the wrapper in the sheet runs, create a new paragraph list from its record 
0, Line, //  We have 4 bytes, then the start point of each 
0, Line, //  first auto-number paragraph so initialise to 1 or the bullets startAt   if present 
0, Line, //  PPT95 has 4 byte size, then data 
0, Line, //  (Except French, which is mostly reversed...) 
0, Line, //  1 chart sheet -> data on 1st, chart on 2nd 
0, Line, // this len should == fontDescriptionLength 
0, Line, //         OutputStream out = new FileOutputStream("/tmp/56959.xls"); 
0, Line, //  The ID of the first slide 
0, Line, //  apparently bits 15 and 14 are unused 
0, Line, //  ordering is not important when row is equal, but don't return zero to still   get multiple comments per row into the map 
0, Line, // to enable newlines you need set a cell styles with wrap=true 
0, Line, //  org.apache.poi.hwpf 
0, Line, //  thousands separator 
0, Line, //  sprmPWHeightAbs 
0, Line, //  column group collapsing is a different concept 
0, Line, //  all other characters are illegal 
0, Line, //  the value of the function (NPV) and its derivate can be calculated in the same loop 
0, Line, // make sure header starts at 0 
0, Line, //  Sanity check data 
0, Line, //  modify text 
0, Line, //  for debugging 
0, Line, //  "right" is the default 
0, Line, // includes sid+recordlength 
0, Line, //  The y-coordinate of a spline's second control point. 
0, Line, //  If nothing was found, try some of the other OOXML-based core types 
0, Line, //  Check this one 
0, Line, //  Put everything within a new directory 
0, Block, /*  Write the property set's header.  */
0, Line, //  MIN to one cell over 3 workbooks, absolute reference 
0, Line, //  TODO+ proofFile.getAbsolutePath() + "'."); 
0, Line, //  Note Excel behaviour here. A blank final final value is converted to zero. 
0, Block, /* 	 * (non-Javadoc)	 * 	 * @see	 * org.apache.poi.ss.usermodel.DataValidationHelper#createValidation(org	 * .apache.poi.ss.usermodel.DataValidationConstraint,	 * org.apache.poi.ss.util.CellRangeAddressList)	  */
0, Line, //  A 32-bit unsigned integer that specifies the offset to the data from the start 
0, Line, //  An 8-bit unsigned integer that specifies the output precision.   The output precision defines how closely the font is required to match the requested height, width,   character orientation, escapement, pitch, and font type.   It MUST be a value from the WMF OutPrecision enumeration.   Applications can use the output precision to control how the font mapper chooses a font when the   operating system contains more than one font with a specified name. For example, if an operating   system contains a font named Symbol in rasterized and TrueType forms, an output precision value   of OUT_TT_PRECIS forces the font mapper to choose the TrueType version.   A value of OUT_TT_ONLY_PRECIS forces the font mapper to choose a TrueType font, even if it is 
0, Line, //  data size 
0, Line, //  Custom Properties (in DocumentSummaryInformation 
0, Line, //  but we can delete it if we remove the document 
0, Line, //  First row 
0, Line, //  Try to evaluate, without giving a way to get at the other file 
0, Line, // first four bytes is the length of the raw data 
0, Line, //  Excel has bugs around leap years in 1900, handle them 
0, Line, //         verticalPixelsPerPoint = (float)Math.abs(group.getY2() - group.getY1()) / a.getAnchorHeightInPoints(sheet); 
0, Line, //  The 0th block is the first data block 
0, Line, //  Helper methods for {@link #equals(Object)} 
0, Line, //  How to create hyperlinks 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getErrorBoxTitle()      */
0, Line, //  Both PowerPoint and OOo draw zero-length lines as 0.25pt 
0, Line, //  constant array { { "#N/A N.A.", "#N/A N.A.", }, } 
0, Line, //  calling clearText or setting to a new Array leads to a   XmlValueDisconnectedException 
0, Line, //  when criteria is a boolean value 
0, Line, //  Now go for one with multiple BAT blocks 
0, Line, //  at least trigger some of the setters to ensure classes are included in   the poi-ooxml-schemas 
0, Line, //  With caching, the evaluationCount is 8 which is exactly the 
0, Line, //  sheet names with spaces must be quoted 
0, Line, //  Handle records that seem to lie 
0, Line, //  this test may fails in newer JDKs because of disallowed access if   properties are missing, make this visible 
0, Line, //  end deleted sheet 
0, Line, //  Load back the XSSFWorkbook 
0, Line, //  And copy the shifted block to the shifted location 
0, Line, //  the extern sheets are set through references 
0, Line, //  declare a row object reference 
0, Line, //  create the HTTP POST request 
0, Line, // Moved from XSSFRow.shift(). Not sure what is purpose. 
0, Line, //  And test with ones that need the style appending 
0, Line, //  Refetch to get the new order 
0, Line, //  end public interface DirectoryEntry 
0, Line, //  Now set it back again 
0, Line, //  there should be a relationship for each URL 
0, Line, //  no idea if I have a master in this space. go figure. 
0, Line, //  DEFAULT_GUI_FONT   The default font that is used for user interface objects such as menus and dialog boxes. 
0, Line, //  (last row is -1 === 65535) 
0, Line, //  Note: Removal doesn't currently reset the last column.  It probably should but it doesn't. 
0, Line, //  verify that output is correct 
0, Line, //  errors in the 64th bit happen from time to time   this is well below the 53 bits of precision required 
0, Line, //  do not copy the drawing relationship, it will be re-created 
0, Line, // link to a file in the current directory: link1.xls 
0, Line, // Ensures that pivotCaches is initiated 
0, Line, //  contains   1x1 corner intersection 
0, Line, //  Check the relations from this 
0, Block, /*  Write the whole POI file system to a disk file.  */
0, Line, //  New we check to see if we should remove the integer part 
0, Line, //  Check it gives text without error 
0, Line, //  Set us as now initialised 
0, Line, //  oo COLINFO 
0, Line, //  on every other row 
0, Line, //  current offset, initialized to start 
0, Line, //  If it's a container, step into it and return 
0, Line, //     	Offset 0x3bd9 (15321)      	recordid = 0x236, size = 16      	[TABLE]      	    .row from      = 3      	    .row to        = 8      	    .column from   = 4      	    .column to     = 6      	    .flags         = 0      	        .always calc     =false      	    .reserved      = 0      	    .row input row = 4      	    .col input row = 1      	    .row input col = 4076      	    .col input col = 0      	[/TABLE] 
0, Line, //  Rule M4.2, M4.3, M4.4 and M4.5/ 
0, Line, //  sheet name is unicode Russian for 'minor page' 
0, Line, //  no longer required for successful test 
0, Line, //  KY: SUM(B1: IZ1) 
0, Line, //  If cache is stale, update cache with this one cell   This is a compromise between rebuilding the entire cache   (which would quickly defeat the benefit of the cache)   and not caching at all. 
0, Line, //  read sample file 
0, Line, //  offset += StdfPost2000.getSize(); 
0, Line, //  If we are the first block to be allocated, initialise the stream 
0, Line, //  \n\n\n" 
0, Line, //  add a sheet, and put some values into it 
0, Line, //  Can't work for InputStream opened files 
0, Line, //  copy original istd into huge Grpprl 
0, Line, //  No more! 
0, Line, // 			// In case you fancy checking in excel 
0, Line, // support elapsed time [h],[m],[s] 
0, Line, //  original method. 
0, Line, //  columns containing area bottom being shifted up: 
0, Block, /*  int skip =  */
0, Line, //  the relationship ID 
0, Line, //  seems to occur in just one junit on "OddStyleRecord.xls" (file created by CrystalReports)   Excel tolerates the funny ObjRecord, and replaces it with a corrected version   The exact logic/reasoning is not yet understood 
0, Line, //  let some file handlers do additional stuff 
0, Line, //  Starts with one 
0, Line, //  check for checksum to be uptodate 
0, Line, //  don't add empty properties, as they can't be recognized while reading 
0, Line, //  [MS-DOC], v20140721, 2.6.4, sprmSNEdn 
0, Line, //  get/set alignment doesn't affect the style of cells with 
0, Block, /* Sheet sh2 = */
0, Line, //  int start = startingProp.getStart() + fcMin; 
0, Line, //  Now zap all the cells in the source row 
0, Line, //  Has been wrapped with cell details, but we know those 
0, Line, //  Double.compare() considers them different 
0, Line, //  Save the target as-is - we don't need to validate it,    alter it etc 
0, Line, //  SP @ 8 
0, Line, //  calculate top/left corner 
0, Line, // cut off the bitmap file-header 
0, Line, //  uses evaluateInCell() 
0, Line, // create a region over the 2nd row and auto size the first column 
0, Line, //  All ascii, so stored in one big lump 
0, Line, //  If the destination of the columns overlaps either the top 
0, Line, //  transition from normal time to daylight savings adjusted   transition from daylight savings adjusted to normal time   Unexpected since we are using UTC_TIME_ZONE 
0, Line, //  Look inside another 
0, Line, //  char flags 0x0004 = underlined   font index is 1 
0, Block, /*          * Check rule 2.4: The package implementer shall require that the         * Content Types stream contain one of the following for every part in         * the package: One matching Default element One matching Override         * element Both a matching Default element and a matching Override         * element, in which case the Override element takes precedence.          */
0, Block, /*          * Used PNG file format description from         * http://www.wotsit.org/download.asp?f=png          */
0, Line, //  will later replace with XDDFShapeProperties 
0, Line, //  row "1"   the problem is not observable in the first row of the shared formula 
0, Line, //  Defaults to CP1251 
0, Line, //  (paragraph reserved field)   it doesn't have any styles 
0, Line, //  in case the (first) parsing throws an exception, we can provide the   records up to that point 
0, Line, //  (N)POIFS only returns 384 bytes here, instead of 512 
0, Line, //  If the condition is empty it matches. 
0, Line, //  condition goes first 
0, Line, //  these are special and not copied by default 
0, Block, /*      * assuming this wants the number of bytes returned by {@link serialize(LittleEndianOutput)},     * that is, (length - 4).      */
0, Line, //  Save and close 
0, Line, // outline level 2: the line under ==> collapsed==True 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createExplicitListConstraint(java.lang.String[])	  */
0, Line, //  Neither defined nor reserved   Neither defined nor reserved   Neither defined nor reserved   Neither defined nor reserved 
0, Line, //  don't change cell type for formulas 
0, Line, //  TODO proper clone 
0, Line, //  check row height for 'default' flag 
0, Line, // auto-size picture 
0, Line, //  2nd is italic 
0, Line, //  Links to the three sheets, shared, styles and themes 
0, Line, //  start of this record to the source bitmap bits in the BitmapBuffer field. 
0, Line, //  Make a columns aggregate if one hasn't ready been created. 
0, Line, //  Check the array fetch 
0, Line, //  magic number, run tests after changes 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationHelper#createTextLengthConstraint(int, java.lang.String, java.lang.String)	  */
0, Line, //  [F6]   [1]   [1]   [OFFSET nArgs=3] 
0, Line, // Sheet#setColumnWidth accepts the width in units of 1/256th of a character width 
0, Line, //  References to a single cell: 
0, Line, //   ConversationTopic -> This is a test message 
0, Block, /*  Create a mutable property set. Initially it contains a single section         * with no properties.  */
0, Line, //  test if the file is empty, otherwise parse it 
0, Line, //  Ref - A2 
0, Line, // millis 
0, Line, //  Start 
0, Line, //  It should be core.xml not the older core1.xml 
0, Line, //  Check the keys went in 
0, Line, // the sheet has one relationship and it is XSSFDrawing 
0, Line, //  1 --> 3 
0, Line, //   its mask byte 
0, Line, //  Loop over each style, seeing if it is the same    as an earlier one. If it is, point users of the    later duplicate copy to the earlier one, and    mark the later one as needing deleting 
0, Line, //  Save package relationships part. 
0, Line, //  Type/subtype 
0, Line, //  Excel 2010 gives -24516534.3990583 
0, Line, //  am/pm marker 
0, Line, //  Mini Stream FAT   Mini Stream data   Properties #2 
0, Line, //  358: GETPIVOTDATA 
0, Line, //  from Russia with love ;) 
0, Line, //  leap years are always divisible by 4 
0, Line, // save the template 
0, Line, //  verify proper behavior with index that is too large 
0, Line, //  Load our two test workbooks 
0, Line, //  Create a new Slide 
0, Line, //  expand:   colapsed bit must be unset   hidden bit gets unset _if_ surrounding groups are expanded you can   determine   this by looking at the hidden bit of the enclosing group. You will   have   to look at the start and the end of the current group to determine   which   is the enclosing group   hidden bit only is altered for this outline level. ie. don't 
0, Line, //  Only need to worry about user fonts 
0, Line, //  write out the file 
0, Line, // allocateShapeId increments the number of shapes. roll back to the previous value 
0, Line, //  The y-coordinate of a curve's control point relative to the shape's 
0, Line, //  intermediate sub-classes (one-arg, two-arg and multi-arg) 
0, Line, //  3 @ 5   *mask bit* 2,3,4,7   14 @ 4082 
0, Line, //  document link anchored on a shifted cell should be moved 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#getSuppressDropDownArrow()	  */
0, Line, //  binary rc4 
0, Line, //  works as expected 
0, Line, //  the Cells in an existing row are invalidated on-purpose, in order to clean up correctly, we   need to call the remove, so things like ArrayFormulas and CalculationChain updates are done    correctly.    We remove the cell this way as the internal cell-list is changed by the remove call and    thus would cause ConcurrentModificationException otherwise 
0, Line, //  Extract exactly the count of strings from the SST record. 
0, Line, //  Force a synchronization between CTTable and XSSFTable 
0, Line, //  A 32-bit unsigned integer that specifies the format of the image data. 
0, Line, // TODO: parse phonetic strings. 
0, Line, //  textMark: "Sheet1!B6" 
0, Line, //  from now on we can only be dealing with non-quoted identifiers   which will either be named ranges or functions 
0, Line, //  Excel does not support positive/negative infinities,   rather, it gives a #DIV/0! error in these cases. 
0, Line, //  A signed integer that defines the amount by which to divide the 
0, Line, // assertEquals(2, lst.size()); 
0, Line, // 222: VBD 
0, Line, // cchFile (2 bytes)  char type 
0, Line, //  A 32-bit unsigned integer that specifies the size, in bytes, of the CommentIdentifier and   CommentRecordParm fields in the RecordBuffer field that follows. 
0, Line, // right  bottom 
0, Line, //  Type field, this value is undefined and MUST be ignored. 
0, Line, //  we should not try to read the strings in this case. 
0, Line, //  cchData 
0, Line, //  Some older escher formats skip this last record 
0, Line, //  YK: stdout can contain lots of other stuff if logging is sent to console 
0, Line, //  The delete was before us 
0, Line, //  character run is 28 long 
0, Line, //  last font record position 
0, Line, //  Check the embedded parts 
0, Line, //  Associate the object records with the shapes 
0, Line, //  The default header is an odd header 
0, Line, //  Raw XML - Stream 
0, Line, //  use a separate tempdir for the tests to be able to check for leftover files 
0, Line, //  This means the format has a ".", but that output should have no decimals after it.   We just stop treating it specially 
0, Line, //  Won't work without the workbook being linked 
0, Line, //  An EmfPlusRectF object that defines the rectangle to use in the CombineMode operation. 
0, Line, //  looks like left-over cached result from before change to B1 
0, Line, //  Have them write themselves in-place with no changes, as an OutputStream 
0, Line, //  WHITE_PEN - A white, solid-color pen   PenStyle: PS_COSMETIC + PS_SOLID   ColorRef: 0x00FFFFFF 
0, Line, //  MAPI Properties for an attachment 
0, Line, //  Should be text, then three STSHs 
0, Line, //  A 32-bit floating-point value that specifies the em size of the font in units specified by the SizeUnit field. 
0, Line, //  Hopefully there's a supported one after this! 
0, Line, //  2 for idOffset short field itself 
0, Line, //  now just do 1 
0, Line, //  succeeds if the formula record has been associated   with the second shared formula group 
0, Line, //  header 
0, Line, //  Turn the RTF data into a more useful string 
0, Line, //  Level 2 collapsed, others expanded: 
0, Line, //  This used to break 
0, Line, //  Calculate how many columns the image will have to 
0, Line, //  Recurse into pointer containing streams 
0, Line, //  write out the PAPBinTable. 
0, Line, // Any single character 
0, Line, //  Ensure that the ooxml compiler finds everything we need 
0, Line, //  Wrong offset values have been passed in the call to setSheetBof() above.   For books with more than one sheet, this discrepancy would cause excel 
0, Line, //  17 @ 11   10 @ 4086 
0, Line, //  Not working just yet 
0, Line, //  A signed integer that defines the horizontal extent of the window in logical units. 
0, Line, //  We're done - array will now have everything moved as required 
0, Line, //  used to resolve a value but now we ignore DTD entities for security reasons 
0, Line, //  make sure the value contains the old sheet and not a similar sheet   (ex: Valid: 'Sheet1'! or Sheet1! ; NotValid: 'Sheet1Test'! or Sheet1Test!) 
0, Line, //  should return null since alignment isn't set 
0, Line, //  an unknown record with 0 length 
0, Line, //  mask is 0x1800   left aligned 
0, Line, //  Ref - A4 
0, Line, // assertEquals(3, patriarch.countOfAllChildren());  
0, Line, //  The x-coordinate of the arc's control point relative to the shape's 
0, Line, //  The built-in name for auto-filter must consist of a single Area3d Ptg. 
0, Line, //  Set formatting block flags to 0 (no formatting blocks) 
0, Line, //  Since arrays and tables cannot be sparse (all cells in range participate)   The first cell will be the top left in the range.  So we can match the   ARRAY/TABLE record directly. 
0, Line, //  addMergedRegion should not re-validate previously-added merged regions 
0, Line, // Test Functions SUM, COUNT and COUNTA calculation of SUBTOTAL  a) areas A and B are used 
0, Line, // private List<ICell> cells = new ArrayList<ICell>(). 
0, Line, //  never null 
0, Line, // 214: ASC 
0, Line, //                     byte[] rsidr = p0.getRsidR();                      byte[] rsidrdefault = p0.getRsidRDefault();                      p.setRsidP(rsidr);                      p.setRsidRDefault(rsidrdefault);                  }              }              CTPPr pPr = p.addNewPPr();              pPr.addNewPStyle().setVal(pStyle); 
0, Line, //  calculate the inverse angle - taken from the (reversed) preset definition 
0, Line, //  Ref - A3 
0, Line, //  try a second time 
0, Line, //  as per bug report 
0, Line, // Random rnd = new Random(4352345); 
0, Line, //  These choices are not well justified. 
0, Block, /*          * ds:Signature Marshalling.          */
0, Line, //  we should not perform the shifting right here as we would then find   already shifted comments and would shift them again... 
0, Line, //  Should never occur 
0, Line, //  else the other variation of this function takes an array as the first argument 
0, Line, //  append the newly added data 
0, Line, //  The only kinds that CFRuleRecord handles 
0, Line, //  uncollapse contained groups 
0, Line, // gives me FC in doc stream 
0, Line, //  Good, detected and warned 
0, Line, //  X=ok, Y=shift 
0, Line, //  The file name should be shown too, see bug #56742 
0, Line, //  BAT is now full, but there's only the one 
0, Line, //  And back 
0, Line, //  Add the new SlidePersistAtom at the end 
0, Line, //  Try to write a large amount, should fail on the write 
0, Line, //             XSSFRow row = (XSSFRow) it.next();              boolean collapsed = row.getCTRow().getCollapsed();              boolean hidden = row.getCTRow().getHidden();              short level = row.getCTRow().getOutlineLevel();               
0, Line, //  Spreadsheet has a good mix of alternate file types 
0, Line, //  verify cannot rename the root directory 
0, Line, //  Make it small, will trigger the SBAT stream and free lots up 
0, Block, /*          * Insert signature value into the ds:SignatureValue element          */
0, Line, //  we're done, undo the transforms 
0, Line, //  make sure 'unshared' formula is actually available 
0, Line, //  If we've just written the first block on a  
0, Block, /*  Reading data is not supported  */
0, Line, //         incRef(); 
0, Line, //  check if we can delegate to master for the property 
0, Line, //  should be assertSame, but a new HSSFCellStyle is returned for each getCellStyle() call.   HSSFCellStyle wraps an underlying style record, and the underlying   style record is the same between multiple getCellStyle() calls. 
0, Line, //  see 2.4.5 MSOTXFL 
0, Line, //  SSN format 
0, Line, //  The number of bytes used by the decrypted Verifier hash is given by 
0, Line, //  PivotTable View Extended Information 
0, Line, //  Long way passed 
0, Line, //  without PAPX reconstruction   assertEquals(page_break + "\r", r.getParagraph(10).text());   assertEquals(p2_parts[0] + "\r", r.getParagraph(11).text()); 
0, Line, // standard 24-byte tail of a URL link 
0, Line, // set POIFS properties before constructing HSSFWorkbook 
0, Line, //  Get with recursing into chunks 
0, Block, /*  Variables use to validate OPC Compliance  */
0, Line, //  if the marL attribute is omitted, then a value of 347663 is implied 
0, Line, //  comment in column 0 is gone 
0, Line, //  Add in the record 
0, Line, //  index of current element in tableCellEdges[] 
0, Line, //  create an SSTRecord and write a certain pattern of strings 
0, Line, //  HSSFWorkbook/EXCEL97-specific side-effects user-defined function names must be added to Workbook's defined names in order to be saved. 
0, Line, //  Different ways of retrieving 
0, Line, //  Check the styles assigned to them 
0, Line, //  File  wb = new XSSFWorkbook(file);  assertCloseDoesNotModifyFile(filename, wb); 
0, Line, //  disallow non-sequential enum instance creation 
0, Line, //  no longer fail on compliance error  fail("expected OPC compliance exception was not thrown"); 
0, Line, //  Ensure that all parent directories exist 
0, Line, //  print the notes 
0, Line, //  create cells with time patterns 
0, Line, //  name to be created 
0, Line, //  otherwise recreate the shapes from scratch 
0, Line, //  Assume that it must be a file handle - although there are other   options the code should perhaps check - and store the reference   into the filesList variable. 
0, Line, //  The polygon SHOULD be outlined using the current pen and filled using the current brush and   polygon fill mode. The polygon SHOULD be closed automatically by drawing a line from the last   vertex to the first. 
0, Line, //  Convert BufferedImage to byte[] 
0, Block, /*  Read the summary information.  */
0, Line, //  'false' text to bool and back 
0, Line, //  POIFS primed on the test data 
0, Line, //  final ellipsis is optional, and ignored   (all unspecified params are assumed to be the same as the last) 
0, Line, //  B3   frequency returns a vertical array of bins+1 
0, Line, //  can concatenate idens with dots 
0, Line, //  check if name is unique and calculate unique column id  
0, Line, //  Not even text extraction is supported for these: handler.handleExtracting(inputFile); 
0, Block, /* tenthRow    */
0, Line, //  start evaluation on another cell 
0, Line, // Test low row bound exception 
0, Line, //  This is a byte as looked up in the dictionary   It needs to be signed, as it'll get passed on to 
0, Line, //  String for formula 
0, Line, //  However, the BATs continue as before 
0, Line, //  Test Lowercase case 
0, Line, //  Register and process 
0, Line, //  check edges 
0, Line, // defaults 
0, Line, //  Check the CTColor is as expected 
0, Line, //  circle div 4: 360 / 4 = 90 
0, Line, //  Fill in the values 
0, Line, //  If there are no fields, all easy 
0, Line, // external relations don't have associated package parts 
0, Line, //    C tAttrSkip 
0, Line, //  There was a previous match. Only one non-blank result is allowed. #NUM! on multiple values. 
0, Line, //  An array of BoundaryPointCount EmfPlusPointF objects that specify the boundary of the brush. 
0, Line, // three level 
0, Line, //  Set when F start element is seen 
0, Line, //  if a rectangular area reference was passed in as arg1, lookupVector and resultVector should be the same size 
0, Line, //  truncate the bottom of the area by the moved rows 
0, Line, //  revert the package to not re-write the file, which is very likely not wanted for a TextExtractor! 
0, Line, //  existing behavior - create a new XSSFEvaluationWorkbook for every call 
0, Line, //     assertEquals(10, sheet.getTopRow());      assertEquals(10, sheet.getLeftCol()); 
0, Line, //  They've gone missing... 
0, Line, //  (If it's a container, option byte 1 BINARY_AND 0x0f will be 0x0f) 
0, Line, //  skip the 62 ignored bytes 
0, Line, //  adjust the size so it is always on a word boundary 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#setShowErrorBox(boolean)      */
0, Line, //  name is probably the name of an unregistered User-Defined Function 
0, Line, //  width div 10 
0, Line, //  Change some existing streams 
0, Block, /*          * even if there is no ExtractorFactory in classpath, still support         * included Word's objects          */
0, Line, // p3.setAlignment(ParagraphAlignment.DISTRIBUTE); 
0, Line, //  Find the end of the group. 
0, Line, //  Word first 
0, Line, // and construct an iterator 
0, Line, //               double delta = Math.abs(expected.getNumericCellValue()-actual.getNumberValue());                double pctExpected = Math.abs(0.00001*expected.getNumericCellValue());                assertTrue(msg, delta <= pctExpected); 
0, Line, //  Grab the base contents 
0, Line, //  A 32-bit unsigned integer that specifies the offset to an intercharacter spacing array, in bytes, 
0, Line, //  The current position is set to the ending point of the closing line. 
0, Line, //  now that this is done, add it to the path 
0, Line, //  Latin Decorative 
0, Line, //  simple contraction at bottom   simple contraction at bottom   top calculated differently here 
0, Line, //  Check properties, all have zero length, no blocks 
0, Line, //  end of style palette options   additional palette options 
0, Line, //  A 32-bit unsigned integer that specifies the offset from the start of this 
0, Line, //  Should be able to handle whitespace between unary minus and digits (Excel   accepts this formula after presenting the user with a confirmation dialog). 
0, Line, //  Optimise fonts 
0, Line, //  added extra facilitator members 
0, Line, //  First up, check the round tripping 
0, Line, //  "You cannot change text of a line break, it is always '\\n'" 
0, Line, //  don't need to remember because we don't need to do anything with these 
0, Line, // preliminary bytes 
0, Line, //  initial height of the text box is 100 pt but 
0, Line, //  SP @ 20   SP @ 26 
0, Line, //  Will be sized fairly small 
0, Line, //  optional link formula 
0, Line, //  1 byte + 4 shorts 
0, Line, //  tabstops size is variable! 
0, Line, //  A 32-bit floating-point that defines the ... coordinate 
0, Line, //  Take a copy to loop over, so we can update the real one 
0, Line, //  get free MBD-Node 
0, Line, // center text over B4, C4, D4 
0, Line, //  Save, re-load, and re-check 
0, Line, // windows excel example: Sheet1!$C$3:$E$4 
0, Line, //  Check for defaults 
0, Line, //  invocation of sheet.removeArrayFormula on any of them throws IllegalArgumentException 
0, Line, //  Should have dates in 2nd column   All of them are the 10th of August   2 US dates, 3 UK dates 
0, Block, /*  CTGraphicalObject graphic =  */
0, Line, //  If there are any, they're in    ProgTags -> ProgBinaryTag -> BinaryTagData 
0, Line, //  the text is splitted into two lines 
0, Line, //  WORKS 
0, Line, //  Numbers which come from formulas 
0, Line, //  null if security restricted 
0, Line, //  Create a fake pointer 
0, Line, //  Performance optimization for bug 57840: explicit boxing is slightly faster than auto-unboxing, though may use more memory   NOSONAR 
0, Line, //  From PCT to DXA: 
0, Line, //  V5 stores it as a 16 bit number at the offset 
0, Line, //  we need to let the model re-calculate the Range before we evaluate it 
0, Line, // length of the label including the trailing '\0' 
0, Line, //  Set seed 
0, Line, //   that aren't already there 
0, Line, //  end of 'Row Block'.  Should only occur after cell records   ignore DBCELL records because POI generates them upon re-serialization 
0, Line, //  not [204, 255, 255] 
0, Line, //  A 32-bit signed integer from the WrapMode enumeration that specifies whether to paint the area outside   the boundary of the brush. When painting outside the boundary, the wrap mode specifies how the color 
0, Line, //  In PowerPont RGB bytes are swapped, as BGR 
0, Line, //  Add object with format start_coll:end_coll. For example 1:3 will span from   cell 1 to cell 3, where the column index starts with 0   
0, Line, //  Check the text has the 
0, Line, // //// Evaluate "Table1[@]" when rowIndex is outside Table //////// 
0, Line, // Selecting rows 
0, Line, //  not [0, 51, 102] 
0, Line, //  range extremities 
0, Line, //  Check for the , as a sign of non-coniguous 
0, Line, //  Create our FIB, and check for the doc being encrypted 
0, Line, //  forecolor   backcolor 
0, Line, //  Retrieve the un-compressed code 
0, Block, /*  Initialize the "format" field.  */
0, Line, //  loop over the cells in this row, because there are fewer cells in this row than tracked columns 
0, Line, //  alter the length, as specified in page 25 
0, Line, //  when set to true, will tell Excel that it needs to recalculate all formulas   in the workbook the next time the file is opened. 
0, Line, //  1) corrupted xlsx (unreadable data in the first row of a shifted group) already comes about   
0, Line, //  original bug may have thrown exception here, 
0, Line, // Sets the pivotCacheDefinition tag 
0, Line, //  check sheet runs first, so we get exactly the same paragraph list 
0, Line, //  Insert a numbered multi-level list into cell A6. Note that the   same ArrayList as constructed for the above plain multi-level 
0, Line, //  sprmPDcs  
0, Line, //  Delete a couple of streams 
0, Line, //  Invalid in a normal workbook stream.   However, some test cases work on sub-sections of   the workbook stream that do not begin with BOF 
0, Line, // see below -- need to extract hyperlinks 
0, Block, /* 		 * Note: no short-circuit boolean loop exit because any ErrorEvals will override the result		  */
0, Line, //  whether to use alternate expression eval   whether to use alternate formula entry 
0, Line, //  NOTE: XWPFDocument.createEndnote() delegates directly         to XWPFFootnotes.createEndnote() so this tests         both creation of new XWPFFootnotes in document         and XWPFFootnotes.createEndnote(); 
0, Block, /*  ************************************************************************  */
0, Line, //  Outlook 
0, Line, //  A 32-bit unsigned integer that specifies the raster operation mode and   MUST be in the WMF Binary Raster Op enumeration 
0, Line, //  ignore the first arg, this is the function-type, we check for the length above 
0, Line, //  test reading zero length buffer 
0, Line, //  20 bytes of whatever at the front. 
0, Line, //  Complex file 
0, Line, // total length of FFN - 1. 
0, Line, //  put the struct into the plcf 
0, Line, //  scientific notation 
0, Line, //  num bubble values 
0, Line, //  truncate the top of the area by the moved rows 
0, Line, //  do not warn about a few detected file types 
0, Line, //    2007-06-20T20:59:00.123-13:00 
0, Line, //  re-read and make sure string value is the same 
0, Line, //  user defined styles are always "used" 
0, Line, //  The x-coordinate of the ending vertex of a cubic Bezier curve relative to 
0, Line, //  V6 stores it as the first value in the stream 
0, Line, //  start with a reasonable big size 
0, Line, //  First 20 bits = offset number 
0, Line, //  Remove the default content type, no other part use this content type. 
0, Line, //  incremented one row too far. Undo that here. 
0, Line, //  Check it now has a slide 
0, Line, //  Open the workbook, not preserving nodes 
0, Line, //  Add two more character styles 
0, Line, //  Insert a plain, multi-level list into cell A5. Note that   the major difference here is that the list items are passed as   an ArrayList of MultiLevelListItems. Note that an ArrayList   of instances of an inner class was used here in preference to   a Hashtable or HashMap as the ArrayList will preserve the   ordering of the items added to it; the first item added will   be the first item recovered and the last item added, the last   item recovered. Alternatively, a LinkedHashMap could be used 
0, Line, //  Some dummy pictures 
0, Line, //  bits 1 to 3 unused 
0, Line, //  Should have one slide 
0, Line, // 30 characters wide 
0, Block, /* Font c = */
0, Line, //  Column A is the raw values   Column B is the ##/#K/#M values   Column C is strings of what they should look like   Column D is the #.##/#.#K/#.#M values   Column E is strings of what they should look like 
0, Line, //  found piece with exact start 
0, Line, // noinspection UnusedAssignment 
0, Line, //  4 bytes - fixed, horizontal resolution (dpi) of source data 
0, Line, //   The supported pixel formats are specified in the PixelFormat enumeration 
0, Line, //  now Jan. 1, 2004   now Jan. 2, 2004 
0, Line, //  makes our life much easier 
0, Line, //  msonfcLCRoman   rncCont 
0, Line, //  SBAT   Mini 
0, Line, //  'Sheet View Settings' 
0, Line, //  B is number 5 
0, Line, //  And a few bits off a more complex header 
0, Line, // Test the dataformat 
0, Line, //  clear row height 
0, Line, //  grab the iterator for both 
0, Line, //  InternalWorkbook currently behaves slightly different   than HSSFWorkbook, but it should not have effect in normal usage   as checked limits are more strict in HSSFWorkbook 
0, Line, //  Make part name from previous URI 
0, Line, //  it's necessary to explicitly set the mdssi namespace, but the sign() method has no 
0, Line, //         assertEquals("12.34", dfUS.formatRawCellContents(12.343, -1, p2dp_n1dpTSP));          assertEquals("(12.3)", dfUS.formatRawCellContents(-12.343, -1, p2dp_n1dpTSP)); 
0, Line, //  Re-compute the first and last rows of the sheet as needed 
0, Line, //  setup fonts (especially needed, when run under *nix systems) 
0, Line, //  Check parameter 
0, Line, //  set vertical alignment to "center" 
0, Line, // character attributes 
0, Line, //  Should have the preserve set 
0, Line, //  27349-vlookupAcrossSheets.xls is bugzilla/attachment.cgi?id=10622 
0, Line, //   they end up as they did before, even with a save and re-load 
0, Line, //  sprmCShd 
0, Line, //  old top/left edge is now bottom/left or top/right - as we operate on the already   rotated drawing context, both verticals can be moved in the same direction 
0, JavaDoc, /* 	 * set the font family (TODO)	 *	 * @param f family	  */
0, Line, //  First try with a new file 
0, Line, //  The value MUST be in the MidLine enumeration table. 
0, Line, //  run with some other flie to see 
0, Line, //  update the FIB.CCPText + friends field 
0, Line, //  Check each bit in turn 
0, Block, /* # Picture lnkPicture;  */
0, Line, //  Check we found the contents of it 
0, Line, //  A SlideShow with two slides 
0, Line, //  output (possibly incomplete) first line 
0, Line, //         Double rightMargin = paragraph.getRightMargin(); 
0, Line, //  Excel expression might look like this "INDEX( (A1:B4, C3:D6, D2:E5 ), 1, 2, 3)   In this example, the 3rd area would be used i.e. D2:E5, and the overall result would be E2   Token array might be encoded like this: MemAreaPtg, AreaPtg, AreaPtg, UnionPtg, UnionPtg, ParenthesesPtg   The formula parser doesn't seem to support this yet. Not sure if the evaluator does either 
0, Line, //  No rows, everything is 0 
0, Line, //  then do the actual moving and also adjust comments/rowHeight   we need to sort it in a way so the shifting does not mess up the structures,  
0, Line, //  char flags 0x0002 = italic   font size 20 
0, Line, //  msotxflTtoBA   msotxflTtoBN   msotxflVertN 
0, Line, //  45: DSTDEV 
0, Line, //  Onto row #2 
0, Line, //  Need to read the length, as it varies 
0, Line, //  test weird variants 
0, Line, //  Verify we only got two SBAT blocks 
0, Line, //  could log an info message here since this is a fairly unusual occurrence. 
0, Line, //  now with a formula evaluator 
0, Line, //  The angle of an arc's major axis relative to the x-axis of its parent 
0, Line, //  We don't know what this property normally is, but it   has come   through with a valid type, so use that 
0, Line, //  0xB acts like cariage return in page titles and like blank in the others 
0, Line, //  = 0;   = 0; 
0, Line, //  Pass the match to the algorithm and conditionally abort the search. 
0, Line, //  sprmCFWebHidden 
0, Line, //  The letter A is at 65 
0, Line, //  rgb color   x 
0, Line, //  These are in ObjectPool -> _... under the root 
0, Line, //  end public class DocumentDescriptor 
0, Line, //  need to override all methods to omit calls to UTF-handling methods  
0, Line, //  316: TTEST 
0, Line, // Test a rich text string 
0, Line, // keep track of the following,  and add "\n" only before the start of a body  element if it is not the first body element. 
0, Line, //  51: LOGEST   52: GROWTH 
0, Line, // The pivot version which created the pivot cache set to default value 
0, Line, // reset the row height 
0, Line, //  num/K/M   with decimals   two-part international format   three-part international format   four-part international format 
0, Line, //  the simple approach via _sh does not work as it creates rows in the XSSFSheet and thus causes   corrupted .xlsx files as rows appear multiple times in the resulting sheetX.xml files   return _sh.setArrayFormula(formula, range); 
0, Line, //  References to a .xls file 
0, Block, /*  ******************** record stuff follows **********************  */
0, Line, //  bitfields for indention options 
0, Line, //  It doesn't matter if eval is a 2D or 3D ref, because that detail is never asked of AreaEval. 
0, Line, //  could be an SXSSFCell 
0, Line, //  Both should have two sheets 
0, Line, //  these rules apply to all cells in a region. Specific condition criteria 
0, Line, //  $C:$IV 
0, Line, //  Calculate Offset from the start of a DBCellRecord to the first Row 
0, Line, //  calls System.exit(): UserEditAndPersistListing.main(new String[0]); 
0, Line, //  Nope, nothing fancy to do 
0, Line, //  most folks won't listen for too many of these 
0, Line, //  add a new cell to the sheet 
0, Line, //  353: NUMBERSTRING 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#setFormula1(java.lang.String)	  */
0, Block, /*  Read the name of the POI filesystem to modify from the command line.         * For brevity to boundary check is performed on the command-line         * arguments.  */
0, Line, //  Ref - A3   Attr 
0, Line, //  Create a new version 
0, Line, //  Word 
0, Line, // expected flag  expected # of sheets 
0, Block, /*  Cubic Bezier curves are defined using the endpoints and control points             * specified by the points field. The first curve is drawn from the first             * point to the fourth point, using the second and third points as control             * points. Each subsequent curve in the sequence needs exactly three more points:             * the ending point of the previous curve is used as the starting point,             * the next two points in the sequence are control points,             * and the third is the ending point.             * The cubic Bezier curves SHOULD be drawn using the current pen.              */
0, Line, //  Prepare test model 
0, Line, //  1 for US 
0, Line, //  Used to blow up with an ArrayIndexOutOfBounds    when creating a StyleRecord 
0, Line, //  A 32-bit unsigned integer that identifies the type of comment in this record. 
0, Line, //  satisfy compiler ... 
0, Line, //  create the image data and leave the parsing to the ImageIO api 
0, Line, //  Note that the order of the output array elements does not matter   And that there may be more than one valid outputs for a given input. Any valid output is accepted.   POI should use a strategy that is consistent and predictable (it currently is not). 
0, Line, //  does not work 
0, Line, //  IntPtg(0) 
0, Line, //  Now go from here on down 
0, Line, //  Position ourselves, and take a slice  
0, Line, //  handle ref counter correct, if the parent document is the same as this 
0, Line, //  Start out with all headers 
0, Line, //  the relationship Type 
0, Line, //    Apply encoding 
0, Line, //  "lin"   "k" 
0, Line, //  percent to the power of 
0, Line, //  Initially not there 
0, Line, //  4 bytes - fixed, vertical resolution (dpi) of source data 
0, Line, //  row 3 does not yet exist 
0, Line, //  Inactive sheets will fail 
0, Line, //  "A1=1" should return true 
0, Line, //  font height = xc8   attrs = 0 
0, Line, // group rows for each phase, row numbers are 0-based 
0, Line, //  we need to undo adding the CTCell in _row if something fails here, e.g.   cell-limits are exceeded 
0, Line, //  Check that the document was open in write mode 
0, Line, //  style 
0, Line, //  the number of lines to be displayed in the dropdown 
0, Line, //  Check we can round-trip - try to set a new one to a new single cell 
0, Line, //  Other cases convert to false 
0, Line, //  x (4 bytes): A 32-bit signed integer that defines the horizontal (x) coordinate of the point. 
0, Block, /*          * "If this level uses bullets (see lvlf.nfc), the cch field of this Xst         * MUST be equal to 0x0001, and this MUST NOT contain any placeholders."         * -- page 389 of 621 -- [MS-DOC] -- v20110315 Word (.doc) Binary File         * Format          */
0, Line, //  names 
0, Line, //  An 8-bit unsigned integer that specifies the letterform of the font. 
0, Line, //  And update the count 
0, Line, // get past the size 
0, Line, //  has 'target frame'   has UNC path 
0, Line, //  End of picture marker for PICT is 0x00 0xFF 
0, Line, //  this is the XML format, so tell the reference that. 
0, Line, //  end class Listener 
0, Line, //  Relativize the source URI against the target URI.   First up, figure out how many steps along we can go 
0, Line, // test data for the first table 
0, Line, //  else - sign and exponents equal 
0, Line, //  Two real sheets, plus the master sheet 
0, Line, //                             wr.get 
0, Line, // Check to ensure no other names have the same case-insensitive name 
0, Line, //  Freeze just one column 
0, Line, // index to non-existing picture data 
0, Line, //  seems to be the most common value 
0, Line, // removeRow(destRowNum); //this probably clears all external formula references to destRow, causing unwanted #REF! errors 
0, Line, //  spaces OK 
0, Line, //  Ensure that we have a WORKBOOK entry and a summary 
0, Line, //  Identify and create our temp dir, if needed   The directory is not deleted, even if it was created by this TempFileCreationStrategy 
0, Line, //  1 page example with text boxes 
0, Line, //  322 == 0x0142; 326 == 0x0146 
0, Line, //  simple expansion at bottom 
0, Line, //  Adjust the pointer as needed 
0, Line, //  bug 51233 and 55075: correctly size image if added to a row with a custom height 
0, Line, //  A 32-bit signed integer that specifies the angle, in tenths of degrees, 
0, Line, //  not all master style atoms are set - index 3 is typically null 
0, Line, //  line spacing 80   paragraph is 25 long 
0, Line, //  Process the sheets as best we can 
0, Line, //  Potential place for ending the workbook stream   Check that the next record is not BOFRecord(0x0809)   Normally the input stream contains only zero padding after the last EOFRecord,   but bug 46987 and 48068 suggests that the padding may be garbage. 
0, Line, //  localeIsAdapting must be true prior to this first checkForLocaleChange call. 
0, Line, //  metafile data in the MetafileData field. 
0, Line, //  add the size for recordId/flags/recordSize/dataSize = 12 bytes 
0, Line, //  This is done twice -- rgba is new with CSS 3, and browser that don't   support it will ignore the rgba specification and stick with the   solid color, which is declared first 
0, Line, //  RTR 1 had f1 and f2, unchanged 
0, Line, //  check computing size up to a large size          StringBuilder b = new StringBuilder(); 
0, Line, //  Skip over anything already deleted 
0, Line, // check for two 0x00 that mark end of record 
0, Line, //  as the file is written to, we make a copy before actually working on it 
0, Line, //  add past end 
0, Line, //  log( task.getClass().getName(), Project.MSG_INFO ); 
0, Line, //  append rest of strText and skip to end of loop 
0, Line, //  Report sheet by sheet 
0, Line, //  Text from 0x200 onwards until we get 
0, Line, //  Now change the cell policy on the workbook, check 
0, Line, //  There is no such thing as 00/01/1900... 
0, Line, //  XAdES-C: complete revocation refs 
0, Line, //  A2:C2 will be removed 
0, Line, //  The x-coordinate of the last control point of a NURBS. 
0, Line, // "document/bug53475-password-is-pass.docx", 
0, Line, //  check sheet-index with one more will work and add the sheet 
0, Line, //  else - just sheet name 
0, Line, //  char flags 0x060000   font size 20 
0, Line, //    API   
0, Line, //  as per BIFF8 spec 
0, Line, //  attributes bitfields 
0, Line, //  end public class POIFSWriterEvent 
0, Line, //  Mac 
0, Line, //  now the replaced versions ... 
0, Line, //  call column infos after k are for later columns   exit now so k will be the correct insert pos 
0, Line, //  natural order 
0, Line, //  odd case: criteria '=' behaves differently to criteria '' 
0, Line, //  column 1 should be sized as '1' 
0, Line, // make sure byte array ends at EOF\n 
0, Line, //  Wrap properties we don't know about as custom ones 
0, Line, //  Modified to support EMU - English Metric Units - used within the OOXML   workbooks, this multoplier is used to convert between measurements in 
0, Line, //  add a cell comment 
0, Line, //  last column is 10pt Courier 
0, Line, //  Last 2 bytes from the outputstream 
0, Line, //  not an RGB color 
0, Line, //  remove the rest one at a time and test 
0, Line, //  summary information has been already written via writeProperties and might go in a 
0, Line, //  call the actual test-code 
0, Line, //  Can't work for new files 
0, Line, //  sprmPHugePapx2 
0, Line, //  In fourth set, we get a CharFlagsTextProp and a font.index and a font.size 
0, Line, //  String javaType = RecordUtil.getType(size, type, 0); 
0, Line, // title row 
0, Line, //   with their comments if present 
0, Line, //  add textboxes 
0, Line, //  write properties without variable length properties 
0, Line, //  Stop once one can be setup without error 
0, Block, /*  End OPC compliance  */
0, Line, // reset the default column width, columns A-C change, D-F still have custom width 
0, Line, //  The y-coordinate of the ending vertex of a quadratic Bezier curve 
0, Line, //  UserSViewBegin   SelectionRecord   HeaderFooterRecord   UserSViewEnd 
0, Line, //  http://www.w3.org/TR/REC-html40/types.html#h-6.5 
0, Line, //  LHS and RHS of ':' must be compatible 
0, Line, //  CTWorksheet.getTableParts defines in which sheet the table is 
0, Line, //  last knots/weights/control point 
0, Line, //  map aggregate info by sheet index 
0, Line, //  dark yellow 
0, Line, //  else fall through 
0, Line, //  picture index must increment across write-read 
0, Line, // BORDERS 
0, Line, //  extract the contents for both 
0, Line, //  Check if this can be continued, if so then the 
0, Line, //  as a comment record. This value MUST be 0x00000046. 
0, Line, //  Turn that into a name, and fetch 
0, Line, //  Row 10 has a string in D10 
0, Line, //  +4 for tFuncFar(CHOOSE) 
0, Line, //         record.setDataLabelPlacement( (short)0x2b50 ); 
0, Line, //  don't append ',' 
0, Line, //  Create a new instance of the escher dumper 
0, Line, //  NOTE: This is currently based on current behavior of POI, somehow   what POI returns in the calls to collapsed/hidden is not fully matching   the examples in the spec or I did not fully understand how POI stores the data internally... 
0, Line, // protected List<String> styleIDs; 
0, Line, //  Insert it after the window record 
0, Line, //  immutable 
0, Line, //  Should fail during the freeing set 
0, Line, //  Round number to respective places. 
0, Block, /* for 56-bit */
0, Line, // six rows, two columns 
0, Line, //  completely fresh evaluation 
0, Line, //  not-equals comparison of a number to boolean always returnes false 
0, Line, //  Now a column only freezepane 
0, Line, //  Write test 
0, Line, //  handle dx before string and other way round 
0, Line, //  Slide starts with just layout relation 
0, Line, //  else biasedExponentA is 1 
0, Line, //  end public class POIFSDocumentPath 
0, Line, //  test indexed-colored sheet 
0, Line, //  The value MUST be in the Proportion enumeration table. 
0, Line, //  This hex data was produced by changing the 'Custom Name' property,    available under 'Field Settings' from the 'PivotTable Field List' (Excel 2007) 
0, Line, //  within range. 
0, Line, // if highest bit == 1 
0, Line, //  Flags 
0, Block, /*  Print a single property:  */
0, Line, //  Finally you have typically 4 or 8 bytes of reserved fields, 
0, Line, //  Negative days are handled by the Java Calendar 
0, Line, //  Serialize it 
0, Line, //  Check that we don't have any MulBlankRecords, but do    have lots of BlankRecords 
0, Line, //  Setting namespace context to XPath   Assuming that the namespace prefix in the mapping xpath is the   same as the one used in the document 
0, Line, //  Only one row must match to accept the input, so rows are ORed.   Each row is made up of cells where each cell is a condition,   all have to match, so they are ANDed. 
0, Line, // String p2dp_n1dpTSP = "00.00_x;(00.0)_x"; 
0, Line, // not set yet 
0, Line, //  Next up look for the slide master 
0, Line, //  7 bytes 'not used' 
0, Line, //  A 32-bit unsigned integer that specifies the total number of points in all polygons. 
0, Line, //  these two for-loops should do the same thing 
0, Line, //  if column is not tracked, implicitly track the column if trackAllColumns is True and column has not been explicitly untracked 
0, Line, //  also try BiffViewer on the saved file 
0, Line, //  axis font 
0, Line, //  next 6 bytes are unused 
0, Line, //  what colour is this? 
0, Line, // can return null! 
0, Line, // scrapes sheet reference info and order from workbook.xml 
0, Line, //  support of cell range in the form of integer:integer 
0, Line, // Test escaping of Unicode control characters 
0, Line, //  Check the text, to see we got them in order 
0, Line, //  non-Javadoc: When possible, code should be implemented in the RowShifter abstract class to avoid duplication with   {@link org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter} 
0, Line, // assert they have been deleted 
0, Line, //    Useful public API goes here   
0, Line, //  Style the cell with borders all around. 
0, Line, //  B1:B3 will be A1:A3 
0, Line, //  Ensure the type is correct 
0, Block, /*  * DateUtil.java * * Created on January 19, 2002, 9:30 AM  */
0, Line, //  is an empty table: I add one row and one column as default 
0, Line, //  Check we have the right number of sheets 
0, Line, //  Third char style is coloured, FF 33 00 FE, and 16 long 
0, Line, // cached EscherDgRecord 
0, Line, //  and the result of atan2 need to be justified 
0, Line, //  Localised currency 
0, Block, /*          * Extract from MSDN:         *         * There is a special case when the placeholder does not have a position in the layout.         * This occurs when the user has moved the placeholder from its original position.         * In this case the placeholder ID is -1.          */
0, Line, //  ignore 
0, Line, //  Read the next part 
0, Line, //  populate the second, or linked, drop down list. 
0, Line, //  Decode the shapes 
0, Block, /*                  * Calculate the paragraphs index in the list of all body                 * elements                  */
0, Line, //  Change 4 
0, Line, //  truncate the top of the area by the moved columns 
0, Line, //  static buildDataSheet() method below. 
0, Line, //  optional arguments 
0, Line, //  TODO: another approx. ... 
0, Line, //  options 2       -- strange upper bits supposed to be 0'd   text rotation 
0, Line, //  Use a test file with the named ranges in place 
0, Line, //  read in the pictures stream 
0, Block, /* Ptg[] ptgs = */
0, Line, //  open bracket indicates that the argument is a function,   the returning value should be false, i.e. "not a valid cell reference" 
0, Line, //  final dummy end-of-row record 
0, Line, //  Create the empty array 
0, Line, //  no 6b ?! 
0, Line, //   for where text really begin 
0, Line, //  Read the contents and check that we could read some data 
0, Line, //  And in rich text 
0, Line, //  the image specified by the SrcRect field is scaled to fit this rectangle. 
0, Line, //  remember this buffer for cleanup 
0, Line, //  check for an encrypted .xlsx file - they get OLE2 wrapped 
0, Line, //  The x-coordinate of the curve's beginning control point relative to the   shape's width; a point on the arc. The control point is best located 
0, Line, //  Check that the timezone aware getter works correctly 
0, Line, //  sprmPJc  
0, Line, //  Sync with the File on disk 
0, Line, //  Create a spreadsheet with some TRUE/FALSE boolean values in it 
0, Line, //  Checks whether 0.5 equals 0 (0) 
0, Line, // pkg.close(); 
0, Line, //  First up, try the default one 
0, Line, //  Must always start on a word boundary. 
0, Line, //  bit 3 reserved 
0, Line, //  Image to document is up a directory 
0, Line, // byte[] std = new byte[stdSize]; 
0, Line, //  a bit cheaper than the default impl 
0, Line, //  stepping forward 
0, Line, //  Page 50 of public specification begins 
0, Line, //  byte, short 
0, Line, //  we did not find any difference, so we can skip the work 
0, Line, //             CTP p = ftr.addNewP();              CTBody body = doc.getDocument().getBody(); 
0, Line, //  okay so there ISN'T a column info record that covers this column so lets create one! 
0, Line, //  *mask bit* 
0, Line, //  setup 
0, Line, //  Too old for the default 
0, Line, //  NULL_BRUSH - A null brush   BrushStyle: BS_NULL 
0, Line, //  Evaluate it, without a link to that workbook 
0, Line, // we'll have to remove the workaround in HSLFExtractor's extractGroupText(...) 
0, Line, //  int charStartAt = translator.getCharIndex( bytesStartAt );   int charEndAt = translator.getCharIndex( bytesEndAt, charStartAt   );   PAPX papx = new PAPX( charStartAt, charEndAt, getGrpprl( x ),   getParagraphHeight( x ), dataStream );   _papxList.add( papx ); 
0, Line, //  pivot table 
0, Line, //  variables for performance optimization:   avoid re-checking DataUtil.isADateFormat(int, String) if a given format   string represents a date format if the same string is passed multiple times. 
0, Line, //  cross check with pv 
0, Line, //  (0x8000 | ('N' << 8) | 'K') 
0, Line, // special shorthand  special shorthand   A1-style cell reference   R1C1-style cell reference 
0, Line, //  Try to move to somewhere else that's used 
0, Block, /*  Check array size:  */
0, Line, //  in emus 
0, Line, //  Offset=0x00002636(9782) recno=72 sid=0x003C size=0x0151(337) 
0, Line, //  Check we can still parse valid files after all that 
0, Line, //  Will now have dummy props 
0, Line, //  col inp row 1   row inp col 0x4076 (!) 
0, Line, //  Zap the un-needed user font records 
0, Line, //  1900 windowing 
0, Line, //  remove the number format from the workbook 
0, Line, //  First without fonts 
0, Line, //  First up, try a simple file 
0, Line, //  sprmPDxaAbs 
0, Line, //  create it manually 
0, Line, //  A 32-bit unsigned integer that specifies the polygon fill mode and   MUST be in the PolygonFillMode enumeration. 
0, Line, //  default cached formula result is numeric zero 
0, Line, //  Try the other summary information 
0, Line, //  0 Runs 
0, Line, // test file is "609751.xls" in govdocs1 
0, Line, //  TODO -instantiable superclass 
0, Line, //  3) once a negative shift has been made any attempt to shift another group of rows   (note: outside of previously negative shifted rows) by a POSITIVE amount causes POI exception:   org.apache.xmlbeans.impl.values.XmlValueDisconnectedException.   NOTE: another negative shift on another group of rows is successful, provided no new rows in   place of previously shifted rows were attempted to be created as explained above. 
0, Line, //  Named ranges 
0, Line, //  common logic for all bases 
0, Line, // handleExtracting(file); 
0, Line, // part.getTargetPart(null); 
0, Line, //  just one array record 
0, Line, // TODO: All the PCDI and PCDIA 
0, Line, //  if we don't have enough knots, duplicate the last knot until we do 
0, Line, //  An array of SurroundingColorCount EmfPlusARGB objects that specify the colors for discrete points on the 
0, Line, //  new rows inherit default height from the sheet 
0, Line, // A full implementation would grab the icells  that a content cell can contain.  This would require  significant changes, including changing the notion that the  parent of a cell can be not just a row, but an sdt.  For now we are just grabbing the text out of the text tokentypes. 
0, Line, // TODO eventually here return a WildcardStringLookupComparer 
0, Line, // shouldn't do 2-row merge 
0, Line, // larger font results in a wider column width 
0, Line, // ref (6 bytes) not used...  cchFile (2 bytes) 
0, Line, //  Wrong type 
0, Line, //  restore pos - only streaming chunks will be reset 
0, Line, //  re-parsing the formula text also works, but is a waste of time   return HSSFFormulaParser.parse(cell.getCellFormula(), _uBook, FormulaType.CELL, _uBook.getSheetIndex(cell.getSheet()));   It is useful within the tests to make sure that all formulas POI can evaluate can also be parsed.   see HSSFFileHandler.handleFile instead 
0, Line, //  A 16-bit unsigned integer that specifies the size, in bytes, of the EscapeData field. 
0, Line, //  seems necessary for outlining 
0, Line, //  Check some data 
0, Line, // divide by 4/shift bits coz 30 bit int, not 32 
0, Line, //  and then add next 20 images to a group 
0, Block, /*  char 0-127  */
0, Line, //  lighter 40% 
0, Line, //  level 3: body placeholder on the slide layout 
0, Line, //  Now check we can get style records for  
0, Line, //  test with short name, small file 
0, Line, //  189: DPRODUCT 
0, Line, //  Check for the english text line 
0, Line, //  collect drawing records into a byte buffer. 
0, Line, //  Indexed parts: 
0, Line, //  Check the relationships 
0, Line, //  The original bug was due to different logic for collecting records for sizing and   serialization. The code has since been refactored into a single method for visiting   all contained records.  Now this test is much less interesting 
0, Line, //  Create a moderate number of columns, which use 
0, Line, //  some sheets do not have rowNums, Excel can read them so we should try to handle them correctly as well 
0, Line, //  international three-part   turkish international three-part   custom international three-part   custom international four-part 
0, Line, // one level 
0, Line, //  persist ID is UserEditAtom.maxPersistWritten + 1 
0, Line, //  double the count, and include the null at the end 
0, Line, //  SBAT are now full, but there's only the two 
0, Line, //  Figure out if the value is an index in the SST 
0, Line, //  subnormal numbers compare without rounding for some reason 
0, Line, // space in the leftmost cell 
0, Block, /*          * Read at most this many bytes.          */
0, Block, /*  Write the POI filesystem to a (temporary) file <em>doc2</em>         * and close the latter.  */
0, Line, //  Figure out the cp of the earliest text piece 
0, Line, //  Comments should be in C5 and C7 
0, Block, /*  (non-JavaDoc), inherit JavaDoc from EvaluationWorkbook     * @since POI 3.15 beta 3      */
0, Line, //  Creates a new package 
0, Line, //  OPCPackage  wb = new SXSSFWorkbook(new XSSFWorkbook(OPCPackage.open(file)));  assertCloseDoesNotModifyFile(filename, wb); 
0, Line, //  If both colSplit and rowSplit are zero then the existing freeze pane is removed 
0, Line, // finally check that the serialized data is the same 
0, Line, //  A 32-bit unsigned integer that identifies the type of public comment record. 
0, Line, //  write, read back and verify that our pictures are there 
0, Line, //  select oleObj potentially under AlternateContent   usually the mc:Choice element will be selected first 
0, Line, //  Write out the bytes 
0, Line, //  If we get here, then the cell isn't defined, and doesn't 
0, Line, //  only one byte left, so this should fail 
0, Line, //  put merged cells table in the right place (regardless of where the first MergedCellsRecord was found */ 
0, Line, //  sizes of various numbers in this environment 
0, Line, //  Get the colour, via the theme 
0, Line, //  A 32-bit unsigned integer that specifies the size of the data in bytes. 
0, Line, //  A 32-bit unsigned integer that specifies how to use the rectangle specified in the Rectangle field.   This field can be a combination of more than one ExtTextOutOptions enumeration 
0, Line, //  Using the ss.usermodel allows this class to support both binary   and xml based workbooks. The choice of which one to create is   made by checking the file extension. 
0, Line, //  but (outer) anchor need to be adjusted 
0, Line, //  Write out and re-load 
0, Line, //   of the code assume that. So, make us match that behaviour! 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#getExplicitListValues()	  */
0, Line, //  truncate x : as per excel function def 
0, Line, //  this better succeed or the document is invalid 
0, Line, //  Set when an Inline String "is" is seen 
0, Line, //  sprmPFBiDi  
0, Line, //  a file that exists, but is a different format 
0, Block, /*  write bytes to new part  */
0, Line, //  Can't open as HWPFDocument 
0, Line, //  colour blue 
0, Line, //  A 32-bit unsigned integer that specifies the metafileType of data in the BitmapData field. 
0, Line, //  Starts off empty 
0, Line, //  Not removing the integer part -- print it out 
0, Line, //  make sure that the table, doc and data streams use big blocks. 
0, Line, //  third run properties 
0, Line, //  Grab the data that makes up the piece 
0, Line, //  Latin Text 
0, Block, /*  see "MICROSOFT OFFICE EXCEL 97-2007  BINARY FILE FORMAT SPECIFICATION"  */
0, Line, //  truncate day values 
0, Line, // The atom instance value is the text type 
0, Line, //  Will be empty 
0, Line, //  Check if name is an external names table 
0, Block, /*  Loop over the two property sets.  */
0, Line, //  colour palette = x7fff   bold weight = x190 
0, Line, //  sprmPPropRMark 
0, Line, //  And via calls 
0, Line, //  nothing to do: already set 
0, Line, //  This convenience method should be implemented via setAnchor in subclasses   see HSLFGroupShape.setAnchor() for a reference 
0, Line, //  columns from within being moved: 
0, Line, //  The value MUST be in the SerifType enumeration table. 
0, Line, //  For each pointer, generate the Stream it points to 
0, Line, //  The y-coordinate of an arc's control point. 
0, Line, //  Now check the newly added reference 
0, JavaDoc, /*  xxxxx - A 45-degree crosshatch.  */
0, Line, //  Write out, and read back in 
0, Line, //  check that height and width match 
0, Line, // TestXSSFPivotTable.class, //converted to junit4 
0, Line, //  And make us be empty 
0, Line, //  Save and re-load once more 
0, Line, //  NOSONAR - we do not want to close this here   Main part 
0, Line, //  A 32-bit unsigned integer that specifies the offset from the start of this record to the DIB bits. 
0, Line, //  Will need to update this once we allow updates to _slideLocations 
0, Line, //  Find the documents, and then their SLWT 
0, Line, //  Nothing to do for this row 
0, Line, //  Update our local cache to the un-formatted version 
0, Line, // System.err.println("drawing south"); 
0, Line, //  RETURN_BLANK_AS_NULL - nearly the same 
0, Line, // 				throw new RuntimeException(e);  			}  		} 
0, Line, //  Jump over header, and think about going on more 
0, Line, //   the paragraph itself 
0, Line, //  END OF  
0, Line, // intentionally fuzzed -- used to cause infinite loop 
0, Line, //  if column is not tracked, implicitly track the column if trackAllColumns is True and column has not been explicitly untracked  
0, Line, //  register the add-in 
0, Line, //  jun 
0, Line, //  Check the numbers of the last seen columns 
0, Line, //  end public class ReaderWriter 
0, Line, //  let's assume the data is already in the sheet 
0, Line, //  Drawing records have a very strange continue behaviour. 
0, Line, //  verify correct number of blocks get created for document 
0, Block, /*  Check OPC compliance  */
0, Line, //  A 32-bit unsigned integer that specifies either the index of a graphics object in the   EMF Object Table or the index of a stock object from the StockObject enumeration. 
0, Line, //  relative to the width of the shape. 
0, Line, //  this is the normal case. There should be just one ExternSheetRecord 
0, Line, //  check if content-type and extension do match in both directions   some applications create broken files, e.g. extension "jpg" instead of "jpeg" 
0, Line, //  represented by the X cell. 
0, Line, //  largest record used in the metafile (in 16-bit elements). 
0, Line, //  create a pivot table on the same sheet, case insensitive 
0, Line, // 		evaluators.add( evaluator ); 
0, Line, //  No supported styling applies to this cell 
0, Line, //  an instance of all SXSSFWorkbooks opened by this TestDataProvider, 
0, Line, //  this will throw an Exception "RuntimeException: Can't read negative number of bytes" 
0, Line, //  not a named range, check for a table. 
0, Block, /*  id was not reserved, return false  */
0, Line, //  check for 16-bit signed/unsigned error: 
0, Line, //  Add to the main stream 
0, Line, //  A 32-bit signed integer that specifies the logical height of the source rectangle. 
0, Line, //  iterate get knots/weights 
0, Line, // Test existence of the second area 
0, Line, //  no fill 
0, Line, //  set properties again, in case we are based on a different   template 
0, Line, //  mask is 0x060002   char flags 0x0002 = italic 
0, Line, // BrtWbProp(153), //Workbook prop contains 1904/1900-date based bit 
0, Line, //  wrong order => will format 0-6 
0, Line, //  514 == 0x0202; 518 == 0x0206 
0, Line, //  An optional 32-bit signed integer that specifies the shape for the end of a line in the   CustomEndCapData field. This field MUST be present if the PenDataEndCap flag is set in the   PenDataFlags field of the EmfPlusPenData object, and the value MUST be defined in the LineCapType enumeration. 
0, Line, //  move the cursor to the START token to the paragraph just created 
0, Line, //  Turn it into a DataSource 
0, Line, //  set a column width so that XSSF and SXSSF have the same width (default widths may be different otherwise) 
0, Line, //  Check the two groups and the text   Result of patriarch.countOfAllChildren() makes no sense:    Returns 4 for 2 empty groups + 1 TextBox. 
0, Line, //  is a single column ref, the row arg seems to get used as the column index 
0, Line, //  this is the end of the delimited name 
0, Line, //  125 * (1.0 - 0.39998) + (255 - 255 * (1.0 - 0.39998)) = 176.99740 => -80 (byte) 
0, Line, // validate through the FormulaParser 
0, Line, //  Create 
0, Line, //  POI 3.15-beta 2 (2016-06-15): getSheetName throws IllegalArgumentException: Invalid CellReference: TableName[#All] 
0, Line, //  note that in other onDocumentRead(), relations/etc may not have   loaded yet, so it's not quite safe 
0, Line, //  All evaluators will need to share the same cache.   but the cache takes an optional evaluation listener. 
0, Line, //  Check case where bottom input is of the wrong type 
0, Line, // If the sheet name is unique, then set it otherwise move on to the next number. 
0, Line, //  They're writing, and have had new blocks requested    for the write to proceed. That means they're into    blocks we've allocated for them, so are safe 
0, Line, //  Style xfs 
0, Line, //  plus 1 
0, Line, //  Fetch the workbook this refers to, and the name as defined with that 
0, Line, //  options: LABEL | PLACE | FILE_OR_URL   label: "My Label" 
0, Line, //  Because of daylight time saving we cannot use       date.getTime() - calStart.getTimeInMillis()   as the difference in milliseconds between 00:00 and 04:00   can be 3, 4 or 5 hours but Excel expects it to always   be 4 hours.   E.g. 2004-03-28 04:00 CEST - 2004-03-28 00:00 CET is 3 hours   and 2004-10-31 04:00 CET - 2004-10-31 00:00 CEST is 5 hours 
0, Line, //  Choose cell A9 instead of A10, so that the failing test case doesn't take too long to execute. 
0, Line, // used for testCopyCellFrom_CellCopyPolicy 
0, Line, //  https://support.microsoft.com/en-us/kb/65903 
0, Line, // We haven't found reference to this sheet 
0, Line, //  Custom properties 
0, Line, // assertTrue(p.removeRun(0)); 
0, Line, //  ignore it. 
0, Line, // don't care 
0, Line, //  Add an optional UncalcedRecord. However, we should add    it in only the once, after the sheet's own BOFRecord.   If there are diagrams, they have their own BOFRecords, 
0, Line, //  this should always be available 
0, Line, //  pred '<>' matches empty string but not blank cell   pred '<>ABC'  matches blank and 'not ABC' 
0, Line, //  Create an algorithm runner. 
0, Line, // bounds 
0, Line, //  There is no DirectoryEntry   Recover the object's data from the HSSFObjectData instance. 
0, Block, /*  This name is not visible in Word 2010 anywhere.  */
0, Line, //  Add a full stream, delete a full stream 
0, Line, //  remove the 2nd row merged region and check that the 2nd row value is used to the autoSizeColumn width 
0, Line, //  check the setting 
0, Line, //  Highlight 10-30 - Column D 
0, Line, //  already add child to context, so other children can reference it 
0, Line, //  Check bytes are now the same 
0, Line, //  Check we got the records 
0, Line, //  Peer into just one formula, and check that 
0, Line, //  BarDirection.COL then X axis is from 0 to 1 and Y axis is target axis 
0, Line, //  Instead, it is a floating-point value that specifies a linear distance. 
0, Line, // obsolete 
0, Line, //  Mark the end of the stream, if we have any data 
0, Line, //   with old ones unset, new one set 
0, Line, // after the slide show is assigned collect all available style records 
0, Line, //  As of POI 3.15 beta 2, LibreOffice does not display the diagonal border while it does display the bottom border 
0, Line, //  short and int  size is byte, not short  
0, Line, //  Runs from the start of the data section in 64 byte chungs 
0, Line, //  Escher property types. 
0, Line, //  not a real sid - dummy value 
0, Line, //  Finally, bring it all together 
0, Line, //  twips 
0, Line, //  Links to our more interesting children 
0, Line, // 		records.add(createBeginRecord());   unknown 
0, Line, //  Save, re-load, and check 
0, Line, //  http://timestamping.edelweb.fr/service/tsp   http://tsa.belgium.be/connect   http://timestamp.comodoca.com/authenticode   http://timestamp.comodoca.com/rfc3161 
0, Line, //  move highIx down to the low end of the mid values 
0, Line, //  Look at the properties entry, and check the empty ones 
0, Line, //  add zip entry header ~ 128 bytes 
0, Line, //  the logical x/y-coordinate of the upper-left corner of the destination rectangle. 
0, Line, //  Pink with yellow 
0, Line, // TODO finish usermodel API for XSSFPicture 
0, Line, // set up style to be able to create hyperlinks 
0, Line, //  make sure junit4 executes this test class 
0, Line, //  Apply the other, changes 
0, Block, /*  Read the origin POIFS using the eventing API. The real work is done         * in the class CopyFile which is registered here as a POIFSReader.  */
0, Line, //  Double check things are as expected 
0, Line, //  A 32-bit signed integer that specifies the average width, in logical units, of   characters in the font. If the Width field value is zero, an appropriate value SHOULD be   calculated from other LogFont values to find a font that has the typographer's intended 
0, Line, //  reserved   Neither defined nor reserved 
0, Line, //  Oh dear, style claims that it is its own parent 
0, Line, // verify we can access the xls data 
0, Line, //  It needs to be unsigned, so that bit stuff works 
0, Line, //  Treat as an atom, grab and hold everything 
0, Line, //  98 version 
0, Line, //  the name gets encoded as the first operand on the stack 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#getErrorBoxText()      */
0, Line, //  dark grey 
0, Line, //  right aligned   line spacing 80 
0, Line, //   so these should be & forms, not the &amp; ones! 
0, Line, //  see http://msdn.microsoft.com/en-us/library/dd949807(v=office.12).aspx 
0, Line, //  Pre-condition assumptions. This test is broken if either of these fail. 
0, Line, //  width div 32 
0, Line, //  NOSONAR   ensure that we close the package again if there is an error opening it, however   we need to revert the package to not re-write the file via close(), which is very likely not wanted for a TextExtractor! 
0, Line, //  310: FTEST 
0, Line, //  Then PDF 
0, Block, /*  char 15  */
0, Line, //  some pre-checks to hunt for a problem in the Maven build   these checks ensure that the correct locale is set, so a failure here   usually indicates an invalid locale during test-execution 
0, Line, //  test SSN format 
0, Line, //  no PAPX reconstruction   assertEquals( page_break + "\r", r.getParagraph( 3 ).text() );   assertEquals( p2_parts[0] + "\r", r.getParagraph( 4 ).text() );   assertEquals( p2_parts[1] + "\r", r.getParagraph( 5 ).text() );   assertEquals( p2_parts[2] + "\r", r.getParagraph( 6 ).text() ); 
0, Line, // should exist now! 
0, Line, //  French style accounting, euro sign comes after not before 
0, Line, //  BitMaskTextProperties will sanitize the output 
0, Line, //  assure that the formula refers to the cell above.   the check below is 'deep' and involves conversion of the shared formula:   in the sample file a shared formula in GN1 is spanned in the range GN2:IY2, 
0, Line, //  Maximum Value Formula 
0, Line, //  special logger for formula evaluation output (because of possibly very large output) 
0, Line, //  output (possibly incomplete) last line 
0, Line, // //// Evaluate "Table1[#This Row]" when rowIndex is outside Table //////// 
0, Line, //  then scan the presentation relations 
0, Line, //  contentType 
0, Line, //  Excel often prefers "# #/#" 
0, Line, //  Should have non-standard properties with IDs 0xE28 and 0xE29 
0, Line, //  A 32-bit unsigned integer that specifies the palette EMF Object Table index. 
0, Line, //   who knows what that starting bit is all about 
0, Line, //  pattern matching is never used for < > <= => 
0, Line, // if we haven't already read the bytes for the module keyed off this name... 
0, Line, //  setting formula should unset text, but since there is a formula, returns an empty string 
0, Line, // position of the text box in the slide 
0, Line, // set POIFS properties after constructing HSSFWorkbook 
0, Line, //  A 32-bit floating-point value that specifies the amount by which to scale the custom line cap with 
0, Line, //  Plain Text - File 
0, Line, // URI compatible with MS Office and OpenOffice: leading slash is removed 
0, Line, //  Don't write out the old Workbook, we'll be doing our new one   If the file had an "incorrect" name for the workbook stream, 
0, Line, //  If it's a document, free the blocks 
0, Line, //  instance, a data file. 
0, Line, //  Colours Blue->White->Red - Column G 
0, Line, //  testBug54786 gets here with a date, so retain previous behaviour 
0, Line, //  tAttrSkip 
0, Line, //  get from master 
0, Line, //  IntPtg(1) 
0, Line, //  test all variants 
0, Line, //  AccessControlException can occur in a restricted context   (client applet/jws application or restricted security server) 
0, Line, // cast to avoid overflow 
0, Line, //   process BOFRecords in byte offset order 
0, Line, //  and may contain white spaces and raw unicode characters 
0, Line, //  we expect that drawing block consists of either   DrawingRecord or ContinueRecord or ObjRecord or TextObjectRecord 
0, Line, // defines worksheet in wb part 
0, Line, //  print overlapping rule results 
0, Line, //  functions from the Excel Analysis Toolpack 
0, Line, //  unsupported file-types, no supported OLE2 parts 
0, Line, //  Check the mini stream location was set 
0, Line, //  Print not PrintLn as already has \n added to it 
0, Block, /*      * Bug 56345: Reject single-cell merged regions      */
0, Line, //  setting the line cap is not implemented, as the border lines aren't connected 
0, Line, //  Must make this sheet active (otherwise, for XLSX, Excel might protest that active sheet no longer exists)   I think POI should automatically handle this case when deleting sheets... 
0, Line, // assertTrue(sheet.getDisplayGuts()); 
0, Line, // 0x138b RT_BinaryTagDataBlob 
0, Line, // see page 181 
0, Line, //                                     // make it transparent                                      line[x] &= 0xFFFFFF;                                  }                              }                              wr.setPixels(0, row, w, 1, line);                          } 
0, Line, //  Wrong number of arguments 
0, Line, //  0x39, 0x49, 0x79   0x3a, 0x5a, 0x7a   0x3b, 0x5b, 0x7b   0x3c, 0x5c, 0x7c   0x3d, 0x5d, 0x7d 
0, Line, // header key 
0, Line, //  We will use the first core properties, and ignore the others 
0, Line, // TIKA-2154's file shows that even in a unicode string  there can be a remaining byte (without proper final '00') 
0, Line, //  Just use the normal toString on the value 
0, Line, //  A string of 32 Unicode characters that defines the font's style. If the length of   this string is less than 32 characters, a terminating NULL MUST be present, 
0, Line, //  initialize any existing paragraphs - this will be the default body   paragraph in a new shape,   or existing paragraphs that have been loaded from the file 
0, Line, //  Add a core document 
0, Block, /* 			The array form of LOOKUP is very similar to the HLOOKUP and VLOOKUP functions. The difference is that HLOOKUP searches for the value of lookup_value in the first row, VLOOKUP searches in the first column, and LOOKUP searches according to the dimensions of array.			If array covers an area that is wider than it is tall (more columns than rows), LOOKUP searches for the value of lookup_value in the first row.			If an array is square or is taller than it is wide (more rows than columns), LOOKUP searches in the first column.			With the HLOOKUP and VLOOKUP functions, you can index down or across, but LOOKUP always selects the last value in the row or column.			  */
0, Line, //  The name should still refer to the same sheet after the sheets are re-ordered 
0, Line, //  creation of a new LinkTable insert two new records: SupBookRecord followed by ExternSheetRecord   assure they are in place:      [BOFRecord]      [CountryRecord]      [SUPBOOK Internal References  nSheets= 3]      [EXTERNSHEET]      [EOFRecord] 
0, Line, //  The max possible size is when each BAT block entry is used 
0, Line, // First 3 parameters are mandatory 
0, Line, // <cols>    <col min="1" max="5" width="15.77734375" customWidth="1"/>  </cols> 
0, Line, //  application/msexcel 
0, Line, //  Four constants that determine how - and indeed whether - the rows   and columns an image may overlie should be expanded to accommodate that   image.   Passing EXPAND_ROW will result in the height of a row being increased   to accommodate the image if it is not already larger. The image will   be layed across one or more columns.   Passing EXPAND_COLUMN will result in the width of the column being   increased to accommodate the image if it is not already larger. The image   will be layed across one or many rows.   Passing EXPAND_ROW_AND_COLUMN will result in the height of the row   bing increased along with the width of the column to accomdate the   image if either is not already larger.   Passing OVERLAY_ROW_AND_COLUMN will result in the image being layed   over one or more rows and columns. No row or column will be resized,   instead, code will determine how many rows and columns the image should 
0, Line, //  For now, we're only handling PositionDependentRecord's that   happen at the top level.   In future, we'll need the handle them everywhere, but that's 
0, Line, //  once again with removing the same cell, this throws an exception 
0, Line, // OK. the sst table is filled, check the contents 
0, Line, //  extract first parameter 
0, Line, //  special cases 
0, Line, // case 3. cell.setCellValue((RichTextString)null); 
0, Line, //  fib.setCcpHdd(fib.getCcpHdd() + adjustment);   } 
0, Line, //  Check raw details on one without 
0, Line, //  msonfcArabic   rncCont 
0, Line, //  The stream at 0 has 23 blocks in it 
0, Line, //  A 32-bit signed integer that specifies the byte offset between the beginning of one scan-line   and the next. This value is the number of bytes per pixel, which is specified in the PixelFormat   field, multiplied by the width in pixels, which is specified in the Width field.   The value of this field MUST be a multiple of four. If the image is compressed, according to the 
0, Line, //  u16 number of sheets 
0, Line, //  Get the theme colour 
0, Line, //  if the absolute value is smaller than 1 over the exact or maxDenom   you can stop here and return "0"   reciprocal is result of an int devision ... and so it's nearly always 0   double reciprocal = 1/Math.max(exactDenom,  maxDenom); 
0, Line, //  MSOBI constants for various formats. 
0, Line, //  set cell formula validation to false 
0, Line, //  The referenced sheet could not be found 
0, Line, //  Internal Date Formats as described on page 427 in   Microsoft Excel Dev's Kit... 
0, Line, //  Build up a tree of Escher records contained within 
0, Line, //  First char style is boring, and 21 long 
0, Line, //  perform calculation 
0, Line, //  un-collapse contained groups 
0, Line, //  values data type   num categories 
0, Line, //  Via a POIFSFileSystem 
0, Line, //  We actually want after this though 
0, Line, //  ROUND() - takes 2 args 
0, Line, //  1. single-cell array formula 
0, Line, //  Grab the first text run on the first sheet 
0, Line, // calculate 
0, Line, //  Create the run.  
0, Line, //  fib.setCcpAtn(fib.getCcpAtn() + adjustment);   } 
0, Line, //  reading 8 byte values from a 9 byte buffer 
0, Line, //  show input box 
0, Line, //  should still work, for some reason DrawingManager2.allocateShapeId() skips the first 1024... 
0, Line, //  Check right contents 
0, Line, // Test a basic string 
0, Block, /*      * Test apply(Object value) with a Date as parameter      */
0, Line, // Fills must be "No Line" 
0, Line, //  Create SST if it is missing 
0, Line, //  Check hyperlinks 
0, Line, // DeletedRef 
0, Line, //  from file 
0, Block, /*  Print the properties:  */
0, Line, //  Return the specific exception so the user knows    that the name is already taken 
0, Line, //  placeholders will be implicitly initialized when requested 
0, Line, //  discard any custom tags associated with the picture being copied 
0, Line, //  see http://officeopenxml.com/prSlide-color.php - "Color Placeholders within Themes" 
0, Line, // set default properties for a line 
0, Line, // step 1. Map sheet's relationship Id and the corresponding PackagePart 
0, Line, //  If the POSITION bit is clear and the COMPRESSED bit is clear in the Flags field, the points   specify absolute locations with floating-point values. 
0, Block, /*         final Object expected;        final Object actual;        POITestCase.assertReflectEquals(expected, actual);         */
0, Line, //  Calculate the size of this IndexRecord 
0, Line, //  x basis   y basis 
0, Line, //  correct saltHash for supplied password (and docId/saltHash) 
0, Line, //  extract second parameter 
0, Line, //  A 16-bit signed integer that defines the x-coordinate, in logical units, of the 
0, Line, //  The x-coordinate of the ending vertex of a quadratic Bezier curve 
0, Line, //         OutputStream os = new FileOutputStream("/tmp/protected.xls"); 
0, Line, //  text (first) arg type is number, other args are strings with fractional digits 
0, Line, //  Not properly referenced 
0, Line, //     fail("Total time exceeded 10 seconds: " + totalTime_s + " s");  } 
0, Line, //  pic size dummy 
0, Line, //  Options flags is set. In this case, GlyphPos specifies the position of the first glyph only. 
0, Line, //  Square Root Formula: "sqrt x" = sqrt(x) = value of this guide 
0, Line, //  Should have three hyperlinks, and one comment 
0, Line, //  Applies to a series, unless we've seen a legend already 
0, Line, //  Design Vector 
0, Line, // simple string argument 
0, Block, /*  Gets "<sheetData>" document fragment */
0, Line, //  Font 0 
0, Line, //  Reference to an empty workbook name   will this just be empty string?   encoded file name 
0, Line, //  add XAdES ds:Reference 
0, Line, //  SYSTEM_FIXED_FONT   A fixed-width font that is guaranteed to be available in the operating system. 
0, Line, // The relationship Id references the part containing the drawing definitions. 
0, Line, //  With a header on the notes 
0, Line, //  And check they still have the contents they should do 
0, Line, //  1. Create drawing patriarch 
0, Line, //  see https://msdn.microsoft.com/en-ca/goglobal/bb964664.aspx and https://bz.apache.org/ooo/show_bug.cgi?id=70003   we ignore these for now though 
0, Line, //  Get with recursing into chunks and pointers 
0, Line, // 	private void writeToFile(MAPIMessage mapi, File file)  			throws FileNotFoundException, IOException {  		OutputStream stream = new FileOutputStream(file); 
0, Line, //  Slide records were fine 
0, Line, //  Get the first rich text run 
0, Line, //  max cell in Excel 97-2003 
0, Line, //  Formula Value 
0, Line, //  The DirectoryEntry is a DocumentNode. Examine its entries to find out what it is 
0, Line, //  A4:B7 will elongate vertically 
0, Line, //  create empty document summary 
0, Line, //  paragraph reserved field   mask is 0x1000 
0, Line, //  only cache non-blank values in the plain cell cache   (dependencies on blank cells are managed by   FormulaCellCacheEntry._usedBlankCellGroup) 
0, Line, //  assure they are in place:      [BOFRecord]      [CountryRecord]      [SUPBOOK Internal References  nSheets= 3]      [SUPBOOK Add-In Functions nSheets= 1]      [EXTERNALNAME .name    = ISODD]      [EXTERNALNAME .name    = ISEVEN]      [EXTERNSHEET] 
0, Line, //  Initialize the variables 
0, Line, //  testRRaC has multiple (3) built-in name records 
0, Line, //  Implementation Notes List:   --> In this third stage, the reversed byte order legacy hash from the second stage shall       be converted to Unicode hex string representation 
0, Line, //  Data rows 
0, Line, //  Even though this is a mere boolean, KOffice's code says it's an int. 
0, Line, //  re-add the CF 
0, Block, /*          * Checksum (2 bytes):  A checksum for the previous 10 16-bit values in the header.         * This value can be used to determine whether the metafile has become corrupted.          */
0, Line, //  title and content 
0, Line, //  Evaluate it, no change as the formula evaluator 
0, Line, //  If there was something in rawCode before, then that was 
0, Line, //  see [MS-OFFCRYPTO] - 2.3.4.9 
0, Line, //  Default content types 
0, Line, //  values between 0.0 and 1.0 result in #NUM! 
0, Line, // Continue Record additional byte overhead 
0, Line, //  OOo seems to like the "# ?/?" form 
0, Line, //  that is exact multiple of block size 
0, Line, //  <-- works 
0, Line, //  setting no precalculated value works just fine. 
0, Line, //  msotxflHorzN   msotxflHorzA 
0, Line, //  MergedCellsTable 
0, Line, //  That should be it! 
0, Line, //  First 12 bytes are a SSlideLayoutAtom, checked elsewhere 
0, Line, //  only if isFormatted 
0, Line, //  TODO Parse this, see #58150 
0, Line, //  Set the comment on a sheet 
0, Line, //  Default to searching from 1, unless they asked for 0+ 
0, Line, //  constructor throws exception on null 
0, Line, //  Shouldn't occur in write-mode 
0, Line, //  Create a cell at A4 and insert a numbered list into that cell.   Note that a couple of items have been added to the listItems 
0, Line, //  all fields empty 
0, Line, // private TextPieceTable tpt; 
0, Line, // write book to temp file; read and verify that position is serialized 
0, Line, //  Now turn off sheet names 
0, Line, //  Bug 55380 
0, Line, // BOFRecord  IndexRecord 
0, Line, //  cell not in range of this rule 
0, Line, //  then assume, that we've been called by import content and only need to update the children 
0, Line, //  add a pixel to compensate rounding errors 
0, Line, //  Some tests commented out because close() modifies the file   See bug 58779 
0, Line, //  run 3 has same text properties as run 2 and will be merged when saving 
0, Line, //  single quote gets doubled 
0, Line, //  populate _row.cArray correctly 
0, Line, //  add two bytes so we can prepend the stylesheet w/ its size 
0, Line, // Create relationship between pivotTable and the worksheet 
0, Line, //  Have an empty one created for now 
0, Line, //  Reference to a sheet scoped named range from another sheet 
0, Line, //  Set the text 
0, Line, //  special handling for HSLF 
0, Line, //  then becomes the new current position. 
0, Line, //  Now, onto just the doc bit 
0, Line, //  01 18 30 00 03 20 00 00   E8 03 06 08 07 08 08 08 09 10 01 00 0C 20 04 00   00 00 00 88 1E 00 00 00 
0, Line, //   to be stored in the Root Property 
0, Line, //  don't add UncalcedRecord to the list   this flag is enough 
0, Line, //  make sure none of the padding looks important 
0, Line, //  convert tail arguments into an array of doubles 
0, Line, //  for some reason the number of clusters is actually the real number + 1   private int field_2_numIdClusters; 
0, Line, //  A 32-bit signed integer that specifies the weight of the font in the range zero through 1000. 
0, Line, //  determine transparency 
0, Line, //  Note - not all the formats in the file    actually quite match what they claim to    be, as some are auto-local builtins... 
0, Line, //  visible text   link address 
0, Line, //  no need to attemptMergeColInfoRecords because we   know both on each side are different 
0, Line, // stFile  unused (1 byte as we're using single byes) 
0, Line, //  8 bytes, always seems to be   E8 AC 2C 00 E8 03 05 01   E8 AC 2C 00 E8 03 05 01 
0, Line, //  write the property values 
0, Line, //  And something that doesn't 
0, Line, //  Otherwise these differences look capricious. 
0, Line, //  But with an invalid font, we get an exception 
0, Line, //  fall through 
0, Line, //  247: DB 
0, Line, //  Sheet 2 is deleted 
0, Line, //  don't EVER use the 1904 date system 
0, Line, //  Finish with this one 
0, Line, //  doesn't work without mocking ... see above 
0, Line, //  One cell at the beginning 
0, Line, //  Do endnotes and footnotes 
0, Line, //  fe1 and fe2 can be used concurrently on separate threads 
0, Line, //  need to cache data (i.e. read all data) before changing the key size 
0, Line, //  Ask for it to be written out, and check the header 
0, Line, //  Verify that hyperlink was removed from workbook after writing out 
0, Line, // add a new row 
0, Line, // default line properties 
0, Line, //  points 
0, Line, //  end of area is preserved (will remain exact same column)   the top area column is moved simply 
0, Line, //  clean up the filesystem when we cannot read it here to avoid   leaking file handles 
0, Line, //  keep UNKNOWN always as last enum! 
0, Line, //  change C1. Note - last time A1 evaluated C1 was not used 
0, Line, //  Slide - added later and then changed 
0, Line, //  make sure ID used once 
0, Line, //  swap not appropriated records - noop if unchanged 
0, Line, //   decode them (via a call to setParentTextSize(int) 
0, Line, //  If the image is compressed, according to the Type field, this value is undefined and MUST be ignored. 
0, Line, // no fields to initialize 
0, Line, //  headerIdx = i; 
0, Line, //  stay   go   stay 
0, Line, //  TODO - assert something interesting 
0, Line, //  check that the autoSized column width has ignored the 2nd row 
0, Line, //  String 
0, Line, //  Use a test file with the external linked table in place 
0, Line, //  244: INFO 
0, Line, //  rethrow exception - be aware that the exception source can be in   multiple locations above ... 
0, Line, //  flushedWidth or activeWidth may be negative if column contains only blank cells 
0, Line, //  We might as well evaluate the formula 
0, Line, // turn off gridlines 
0, Line, // Add the palette record after the bof which is always the first record 
0, Line, //  And check they have notes as expected 
0, Line, // permutation vector for fast saves, who cares! 
0, Line, //  Decide on the size    8 = atom header    20 = up to name    4 = revision 
0, Line, //  Having avoided a DOM-based parse of the sheet, we can stream it instead. 
0, Line, //  It seems like the best thing to do might be to combine these into one 
0, Line, //  Check the IDs 
0, Line, //  What excel does if sheet has been deleted   note - '!' added just once below 
0, Line, //  cause the geometries to be not found 
0, Line, // Sum up the second column with column title and data format 
0, Line, //  Page 52 of public specification begins 
0, Line, //  anchor.setDy1(0); 
0, Line, // fill w fg fill color 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidation#setErrorStyle(int)	  */
0, Line, //  whose items are neither bulleted or numbered - into that cell. 
0, Block, /*          * Loop over the section descriptor array. Each descriptor         * consists of a ClassID and a DWord, and we have to increment         * "offset" accordingly.          */
0, Line, //  Check that the values supplied are valid 
0, Line, //  row0 will be shifted on top of row1, so this URL should be removed from the workbook 
0, Line, //  "You may not use unions, intersections or array constants in Data Validation criteria" 
0, Line, //  Holds the contents between write-outs 
0, Line, //  Serialize again 
0, Line, // comments 
0, Line, //  borders are not set 
0, Line, //  -6 bytes of record function and length header 
0, Line, //  assure that the range [startIndex, endIndex] consists if a single run   there can be two or three runs depending whether startIndex or endIndex 
0, Line, //  Remove the 1st 
0, Line, //  grow 50% 
0, Line, //  Need to evaluate the reference in the context of the other book 
0, Line, // C  D  E  F  G 
0, Line, //  create cell color element 
0, Line, //  For the quote characters in the range U+2018 - U+201E, use the East Asian font   if the text has one of the following language identifiers: 
0, Line, // new clean instance of paragraph 
0, Line, //  older biff formats aren't 
0, Line, //  Write out the 2nd SLWT in the active document 
0, Line, //  Check again 
0, Line, // record size must == 4 
0, Line, //  see https://stackoverflow.com/questions/925147   we use a 115% value instead of the 120% proposed one, as this seems to be closer to LO/OO 
0, Line, //  SSTRecords store a array of unique strings used in Excel. 
0, Line, //  the orientation is not set 
0, Line, //  fail early 
0, Line, //  Write out and back in again, no change 
0, Line, //  handler(GenericRecord.class, GenericRecordXmlWriter::printGenericRecord); 
0, Line, //  unmapped column 
0, Line, //  Microsoft TNEF 
0, Line, //  shapes without parents 
0, Line, //  Asking to re-create will make no difference now 
0, Line, //  figure out which one to use and load it 
0, Line, //  don't create hash buffer everytime new 
0, Line, //         System.arraycopy( remainingData, 0, data, offset + 26, remainingData.length );          int pos = offset + 8 + 18 + remainingData.length; 
0, Line, //  Finish allocating 
0, Line, // <cols>    <col min="2" max="4" width="12" customWidth="1"/>    <col min="7" max="7" width="10.85546875" customWidth="1"/>  </cols> 
0, Line, //  Turn this into a Java date 
0, Line, // //// Case 1: Evaluate Table1[col] with apostrophe-escaped #-signs //////// 
0, Line, //  32 length title and 255 length text work for both 
0, Line, //  Query the CurrentUserAtom 
0, Line, //  Should never happen in production as all data are fixed but in   case of return null: 
0, Line, //  Do nothing if no change 
0, Line, //  fake SID   first rec len 6 
0, Line, // assertEquals(slide6.getTheme().getColor("accent1").getColor(), s0.getFillColor()); 
0, Line, //  convert to area ref for simpler code in getValueFromArea() 
0, Block, /* 		 * Check rule M1.25: The Relationships part shall not have relationships		 * to any other part. Package implementers shall enforce this		 * requirement upon the attempt to create such a relationship and shall		 * treat any such relationship as invalid.		  */
0, Line, //  The color scheme is responsible for defining a list of twelve colors. 
0, Line, //  sid=0x0209   size=0x0006 
0, Line, //  Check some bits in it 
0, Line, //  Check the FAT was properly processed: 
0, Line, //             logDebug("push " + opResult); 
0, Line, //  copy the previous contents of part.data in newArray 
0, Line, //  and may not follow changes to the underlying CTTable 
0, Line, //  move the sheets around in all possible combinations to check that the active sheet   is set correctly in all cases 
0, Line, //  rId1 is url 
0, Line, //  */ 
0, Line, //  Columns being moved completely enclose the area ref.   - move the area ref along with the columns regardless of destination 
0, Line, //  0xB acts like carriage return in page titles and like blank in the others 
0, Line, //   ignores all categories 
0, Line, //  a multi-cell array formula defined in this sheet 
0, Line, //  Open it up again backed by the file 
0, Line, // test data for the second taable 
0, Line, //  image/png ISO/IEC 15948:2003 http://www.libpng.org/pub/png/spec/ 
0, Line, // 2x2  2x2 
0, Line, // cell B1 has a link to cell A1 on the same sheet 
0, Line, // JMH TBD 
0, Line, //  also try the cetab functions 
0, Line, //  Change a few things 
0, Line, //  Create new MSG and copy properties. 
0, Line, //  01 18 32 00 03 20 00 00   E8 03 06 08 07 08 08 08 09 10 01 00 0C 20 04 00   00 00 00 88 1E 00 00 00 
0, Line, //                     record.getClass().equals(MMSRecord.class) ||                      record.getClass().equals(InterfaceEndRecord.class) ||                      record.getClass().equals(WriteAccessRecord.class) ||                      record.getClass().equals(CodepageRecord.class) ||                      record.getClass().equals(DSFRecord.class)) {                  continue;              } 
0, Line, //  Simple SUM over numbers 
0, Block, /*           In powerpoint anchor of a shape is its top left corner.          Java graphics sets string coordinates by the baseline of the first character          so we need to shift down by the height of the textbox         */
0, Line, //  (currentRecord instanceof HemfPlusMisc.EmfEof) 
0, Line, //  should not be equal to "555.555" 
0, Line, //  they both seem unused, but clone them nevertheless to have an exact copy 
0, Line, //  chart 
0, Line, //  could be one region "A1:D3"   could be one region "A1:D3" 
0, Line, //  different sweeps depending on where the control point is 
0, Line, // text.offset 
0, Line, //  Check the contents 
0, Line, //  EXCEL uses this and no VALUE_ERROR 
0, Line, //  Cell should appear as "<poundsymbol>5" 
0, Line, //  NB would be 5 if POI added tAttrVolatile properly 
0, Line, //  read the size of the image and calculate the overall file size 
0, Line, // FunctionEval.getBasicFunction can throw NotImplementedException   if the fucntion is not yet supported. 
0, Line, //  Get the cp of the start of text in the main stream 
0, Line, //  1904 date windowing uses 1/2/1904 as the first day 
0, Line, //  some cases we get missing external references, resulting in empty sheet names 
0, Line, //  page number run 
0, Line, //  Create a second paragraph: 
0, Line, //  Next, from the columns width, calculate how many co-ordinate 
0, Line, //  BLACK_BRUSH - A black, solid color brush   BrushStyle: BS_SOLID   Color: 0x00000000 
0, Line, //  Check for >2gb, which we only support via a File 
0, Line, //  Try changing the cached value on one of the string 
0, Line, //  bug 38396 : Formula with exponential numbers not parsed correctly. 
0, Line, //  UserSViewBegin   SelectionRecord  HeaderRecord  FooterRecord   HeaderFooterRecord 
0, Line, //  Skip 02:00 CET as that is the Daylight change time   and Java converts it automatically to 03:00 CEST 
0, Line, //  Add content types 
0, Line, //  3) once a negative shift has been made any attempt to shift another group of rows    (note: outside of previously negative shifted rows) by a POSITIVE amount causes POI exception:    org.apache.xmlbeans.impl.values.XmlValueDisconnectedException.   NOTE: another negative shift on another group of rows is successful, provided no new rows in     place of previously shifted rows were attempted to be created as explained above. 
0, Line, //  Try to get it formatted to look the same as excel 
0, Block, /*              * From: http://social.msdn.microsoft.com/Forums/en-US/3dadbed3-0e68-4f11-8b43-3a2328d9ebd5             *             * The initial value for XorArrayIndex is as follows:             * XorArrayIndex = (FileOffset + Data.Length) % 16             *             * The FileOffset variable in this context is the stream offset into the Workbook stream at             * the time we are about to write each of the bytes of the record data.             * This (the value) is then incremented after each byte is written.              */
0, Line, //  sprmCFtcBi 
0, Line, //  give each property its index 
0, Line, //  @Ignore2("This fails on some systems because fonts are rendered slightly different") 
0, Line, // swap first row and last row numbers and relativity  Note: cannot just swap the fields because row relativity is stored in fields 3 and 4 
0, Line, //  to it ... then serialize it and verify the content 
0, Line, //  Don't need to touch the paragraph styles 
0, Line, //  Invalid property, ended short 
0, Line, //  Re-load 
0, Line, //  strange arguments 
0, Line, //  indent details 
0, Line, //  Fetch the next record, and see if it indicates whether    the document is encrypted or not 
0, Line, // contains custom VBA function 'Commission' 
0, Line, //             boolean a1; 
0, Line, //  1x1 corner intersection 
0, Line, //  Now load the file 
0, Line, //  reset 
0, Line, //  line dash 
0, Line, //  A 32-bit signed integer that specifies the width of the vertical brush stroke, in logical units. 
0, Line, //  Check read ok, and re-evaluate fine 
0, Line, //  this cat axis is deleted 
0, Line, //  TODO: Rich text formatting 
0, Line, // serialize, read back and compare with the original 
0, Block, /*          * SignatureTime          */
0, Line, //  and three hyperlinks 
0, Line, // default date 
0, Line, //  Shift Merged Regions 
0, Line, //  ranges have a vertical border in common   make sure rows are identical: 
0, Line, // then this unit test should be updated 
0, Line, //  negative value means the absolute spacing in points 
0, Line, //  We'll match up the chunk later 
0, Line, //  The resulting Verifier value MUST be an array of 16 bytes. 
0, Line, //  arbitrarily selected; may need to increase 
0, Line, //  note this is asymmetric with the errors when the index is too large (#REF!) 
0, Line, //  Make sure we don't encounter a loop whilst overwriting   the existing blocks 
0, Line, //  If the user has chosen to overlay both rows and columns or just   to expand ONLY the size of the rows, then calculate how to lay 
0, Line, //  WMF   PNG   PNG   PNG   PNG   PNG   WMF   WMF   PNG   PNG   PNG   WMF   WMF   WMF   EMF 
0, Line, //                 ctDocument.getBody().addNewSectPr();              } 
0, Line, //  application/vnd.visio 
0, Line, //  Test removing a sheet maintains the named ranges correctly 
0, Line, //  oh yeah, and missing arguments 
0, Line, //  First, try a one BAT block file 
0, Line, //  A 32-bit unsigned integer that specifies either the foreground color of the text or a graphics brush, 
0, Line, //  Several styles 
0, Line, //  no table 
0, Line, //  Is it a properties chunk? (They have special names) 
0, Line, //  We can only check the round-tripping, as for now 
0, Line, //  extract values as ValueEval 
0, Line, // is MissingCellPolicy=Row.RETURN_NULL_AND_BLANK needed? 
0, Line, // General number format 
0, Line, //  Start with an empty one 
0, Line, //  find first occurrence of lookup value 
0, Line, //  check that same verifier/salt lead to same hashes 
0, Line, //  Create a new SupBookRecord 
0, Line, //  Dk2 
0, Line, //  A 32-bit unsigned integer that specifies the raster operation code. This code defines how the   color data of the source rectangle is to be combined with the color data of the destination 
0, Line, //  289: HYPGEOMDIST   290: LOGNORMDIST   291: LOGINV   292: NEGBINOMDIST   293: NORMDIST   294: NORMSDIST   295: NORMINV   296: NORMSINV 
0, Line, //  Add another sheet, and give it a drawing 
0, Line, //  Not supported 
0, Line, //  Complete scientific notation by adding the missing +. 
0, Line, //  Create the parent style 
0, Block, /*  only add to relations, if according relationship is being created.  */
0, Line, //  point number   series index 
0, Line, //  double; 
0, Line, //  absolute coordinates 
0, Line, //  Copy the properties of the one before to afterwards   Will go:      Original, until insert at point      New one      Clone of original, on to the old end 
0, Line, //  get past the null delimiter for the name. 
0, Block, /* step */
0, Line, //  is this a valid address? 
0, Line, // don't merge continue record with the drawing record, it must be serialized separately 
0, Block, /*          * plcfBkmkf (table recording beginning CPs of bookmarks) Written         * immediately after the sttbfBkmk, if the document contains bookmarks.         *          * Microsoft Office Word 97-2007 Binary File Format (.doc)         * Specification; Page 24 of 210          */
0, Line, //  the source part. 
0, Line, //  External reference - reference is 1 based, link table is 0 based 
0, Line, //  no password by default! 
0, Line, //  Border could be defined for the entire row, or for each cell, with the same visual appearance. 
0, Line, //  calculate the new rownum 
0, Line, //  Format 0   Cell opts ... 
0, Line, //  that is small 
0, Line, //  YK: this is incorrect and the exception below is never thrown. 
0, Line, //  assertContents("message.rtf", contentsBytes); 
0, Line, //  Now read the rest of the stream 
0, Line, //  When it matches:     Sets the font colour to dark red     Sets the background colour to lighter red 
0, Line, //  First child should be the InteractiveInfoAtom 
0, Line, //  Compare 
0, Line, //  Ptgs 
0, Line, //  Check if we have a rectangle 
0, Line, //  start with width - offset, then keep adding column widths until the next one puts us over w 
0, Block, /* double ky1Value = */
0, Line, //  Don't include the first SpContainer, it is always NotPrimitive 
0, Line, // expected exception 
0, Line, //  held on the first bit 
0, Line, //  As of 2016-06-10, POI does not contain a LatentStyle class, nor was one included in the patch for bug 48574.  LatentStyle shall know styles 
0, Line, //  Note to POI developers:   Make sure you delete the corresponding entry from   this method any time a new Record subclass is created. 
0, Line, // this doesn't appear to work, and we still need to limit  entity expansions to 1 in trySetXercesSecurityManager 
0, Line, //  Row 8 is blank / string / number formula / string formula / blank 
0, Line, //  and fields so it is different to the paragraph R array. 
0, Line, //  no placeholder means plain text box 
0, Line, //  Split it into its parts 
0, Line, //  first without a formula evaluator 
0, Line, //  writing is not yet supported... handlePOIDocument(mapi); 
0, Line, //  But only the first one by relationship 
0, Line, //  calculate new area 
0, Line, //  display mode   rgb color 
0, Line, //  extra complexity required to emulate the way LOOKUP can handles these abnormal cases. 
0, Line, //  but now the dimensions/relations are kept as-is 
0, Line, //   (text) 
0, Line, //  Start again, then wind on to the required block 
0, Line, //  If there's now no drawing manager, then there's    no drawing escher records on the workbook 
0, Line, //  Is this right? Number formats (XSSFDataFormat) and cell styles (XSSFCellStyle) are different. What's up with the plus 1? 
0, Block, /*  TOOD: map content-type  */
0, Line, //  Check negative (illegal) limits 
0, Line, //  Excel supports fractions in format strings, which Java doesn't 
0, Line, //  With Slides and Master Text 
0, Line, //  we use a XmlCursor here to handle oleObject with-/out AlternateContent wrappers 
0, Line, //  the ibm jdk has a rendering/JIT bug, which throws an AIOOBE in   TexturePaintContext$Int.setRaster(TexturePaintContext.java:476)   this usually doesn't happen while debugging, because JIT doesn't jump in then. 
0, Line, // this workbook does not have drawings 
0, Line, //  previously we used Mockito here, but since JDK 11 mocking the Graphics2D does   not work any longer 
0, Line, //  TODO set encoding from a command argument 
0, Line, //  Overlaps with 20 - 30 (before, overlap and after replacements required) 
0, Block, /*  Insert some custom properties into the container.  */
0, Line, // link to a place in worksheet: Sheet1!A1 
0, Line, //  CENTER: X=balance, Y=balance 
0, Line, //  (Assuming we actually have some) 
0, Line, //  init. indent string to needed spaces (create as substring vom very long space-only string;   limit indendation for deep recursions) 
0, Line, //  Need to give a byte array to read 
0, Line, // should probably defensively return a copy. 
0, Line, //  Make sure hyperlinks were moved and not copied 
0, Line, //  Use the second stroke to create an outline of that outline. 
0, Line, //  rotate about the origin 
0, Line, // 			// for observing arithmetic near numeric range boundaries  			row.createCell(7).setCellFormula(cel0ref + " * 1.0001");  			row.createCell(8).setCellFormula(cel0ref + " / 1.0001");  		} 
0, Line, //  Initialise some PackageBase properties 
0, Line, //  Create a sheet with data validity (similar to bugzilla attachment id=23131). 
0, Block, /*  Exit if there is no file to display (none specified or only         * files with problems).  */
0, Line, //  delete end point in current 
0, Line, //  redirect stdout as the examples often write lots of text 
0, Line, //  Write out and re-read 
0, Line, //  these can be null... 
0, Line, //  Test row creation with consecutive indexes 
0, Line, // Now if the forground changes to a non-AUTOMATIC color the background resets itself!!! 
0, Line, //  max row & max col limit as per BIFF8 
0, Line, //  check the parameters after the directories have been created 
0, Line, //  Integers 
0, Line, //  Now look at the table 
0, Line, //  width 
0, Line, //  parenthesis Ptg should have only one child 
0, Line, //  for generated sheets. 
0, Line, //  initialize with default value; msonfcArabic 
0, Line, //             } 
0, Line, //  0-4 
0, Line, //  Check now it can be opened 
0, Line, //  accent2 in theme1.xml is <a:srgbClr val="C0504D"/> 
0, JavaDoc, /*  * Tests formulas and operators as loaded from a test data spreadsheet.<p> * This class does not test implementors of <tt>Function</tt> and <tt>OperationEval</tt> in * isolation.  Much of the evaluation engine (i.e. <tt>HSSFFormulaEvaluator</tt>, ...) gets * exercised as well.  Tests for bug fixes and specific/tricky behaviour can be found in the * corresponding test class (<tt>TestXxxx</tt>) of the target (<tt>Xxxx</tt>) implementor, * where execution can be observed more easily.  */
0, Line, //  now try (re-)parsing the formula 
0, Line, //  find root by Newton secant method 
0, Line, //  decrypt the rest of the record 
0, Line, //  as returned by excel 
0, Line, //  org.apache.poi.xslf.usermodel.XSLFMetroShape 
0, Line, //  Check that we're not asked to move too many 
0, Line, //  Check the block allocation is unchanged, other than    the properties stream going in at the end 
0, Line, // get default style 
0, Line, //  should fail if we try to add more now 
0, Line, // Test the footer 
0, Line, //  Check the first three have no run styles, just default paragraph style 
0, Line, //  Good 
0, Line, // custom copy of ris.readUnicodeLEString to allow for extra bytes at the end 
0, Line, //  size += readPoint.apply(leis, upperLeft);   size += readPoint.apply(leis, upperRight);   size += readPoint.apply(leis, lowerLeft); 
0, Line, //  This one shouldn't be allowed 
0, Line, //  Special case for where the two are the same 
0, Line, //  comment is column in column 1 
0, Block, /*          * Copy the original OOXML content to the signed OOXML package. During         * copying some files need to changed.          */
0, Line, // read ppt from byte array 
0, Line, //  unset the existing reference to the drawing,   so that subsequent call of clonedSheet.createDrawingPatriarch() will create a new one 
0, Line, //  working with ints (left shifted 20) instead of doubles   x = 14.5 - binaryExponent * log10(2); 
0, Line, //  should not be equal to "555.47431" 
0, Line, // noinspection fallthrough 
0, Line, //  Complex Accesser methods follow 
0, Line, //  handle empty cells 
0, Line, //   B: Theme Based, Foreground 
0, Line, //  Scary internal getters 
0, Line, //  Create a new one from that 
0, Line, //  Check it 
0, Line, //  Data needs to initially hold just the header block,    a single bat block, and an empty properties section 
0, Line, //  This avoids an IndexOutOfBounds if multiple nested groups are collapsed/expanded 
0, Block, /*  Change the category to "POI example". Any former category value will             * be lost. If there has been no category yet, it will be created.  */
0, Line, //  make sure the formula encodes OK 
0, Line, //  table2 size was increased, check that new table cells have been cleared 
0, Line, //  other bookmarks with same boundaries 
0, Line, //  PT_MOVETO 
0, Line, //  The booleans as bytes 
0, Line, //  LittleEndian.putInt( buf, fcOffset, papx.getStartBytes() ); 
0, Line, //  Non-unicode 
0, Line, // store the name in byte form if it's a built-in name 
0, Line, //  Turn on tinting, and check it behaves 
0, Line, //  Various Stats formulas on numbers 
0, Line, //  =sum(C:D) -> 66 
0, Line, //  ---- end optimization to aviod painting background ---- 
0, Line, //  if it's set to -1, it must be omitted - see 2.9.36 TextMasterStyleLevel 
0, Line, //  If requested, copy over any other streams we spot, eg Macros 
0, Line, // if DPI is zero then assume standard 96 DPI  since cannot divide by zero 
0, Block, /*          * sometimes plex looks like [100, 2000), where 100 is the position of         * field-end character, and 2000 - some other char position, far away         * from field (not inside). So taking into account only start --sergey          */
0, Block, /*  XLS FO 1.1 doesn't support opacity -- sergey  */
0, Line, //  propagate parents to parent-aware records 
0, Line, //  Grab the ministore 
0, Line, //  Find either Slides or Notes 
0, Line, //   overwritten 
0, Line, //  after May 2008 there was one more style applied to the footnotes 
0, Line, //  Reference to a global named range in a different workbook 
0, Line, //  if this path is connected to the current position (= has no start point)   the first entry is a dummy entry and will be skipped later 
0, Line, //  ROW 
0, Line, //  bool1 bitfields 
0, Line, //  for numeric cells try user supplied default 
0, Line, //  Should have one more than the default of each 
0, Line, //  Add one place after the supplied record 
0, Line, //  Normal case - read until EOF and close 
0, Block, /*  Initialize "osVersion" field as if the property has been created on         * a Win32 platform, whether this is the case or not.  */
0, Line, //  The slide size type 
0, Line, //  2003 xml file isn't 
0, Line, //  converted to DeletedAreaRef   truncation at top   truncation at bottom 
0, Line, //  underlying POIFSDocument instance 
0, Line, // lifted directly from org.apache.commons.io.IOUtils 2.4 
0, Block, /*  char 5   */
0, Line, //  special cached value type 'error' 
0, Line, //  4 bytes on either side of boundary 
0, Line, //  we get the same instance on further calls 
0, Line, //  HTTP input validation 
0, Line, //  AlternateRecipientAllowed = 01 00 
0, Line, //  index to first column and relative flags   index to last column and relative flags 
0, Line, //  cs2 -> 22 
0, Line, //  Row 19 has a single string in E19 
0, Line, //  Ensure we have enough data to create a chunk from 
0, Line, //  field 'rt' should have value 0x01C1, but Excel doesn't care during reading 
0, Line, //  The value MUST be less than or equal to 0x00000400 and greater than 0x00000000. 
0, Line, //  THERE IS NO FOUR!! 
0, Line, //  Try to format 
0, Line, //  Cell addresses/references are not allowed 
0, Line, //  if row was not given when constructing the range... 
0, Line, //  Use a test file with "other workbook" style references 
0, Line, //  Now zap it from the properties list 
0, Line, //  Write file. 
0, Line, //  #2 pass - init properties 
0, Line, // e-mail link 
0, Line, //  undocumented till 0x30 
0, Line, //  3 circles div 8: 3 x 360 / 8 = 135 
0, Line, //  encrypted 
0, Line, // simple case  apostrophes are treated as word breaks  capitalization is ignored, special punctuation is treated as a word break 
0, Line, //  inspection of the code above reveals that every stack.pop() is followed by a   stack.push(). So this is either an internal error or impossible. 
0, Line, //  Write and check 
0, Line, // obsolete, used in word 1.x 
0, Line, //   its relationship exists, and then it won't tie up) 
0, Line, //  Lt1   Dk1   Lt2   DK2   Accent1   Accent2   Accent3   Accent4   Accent5   Accent6   Hlink   FolHlink 
0, Line, //  So eclipse doesn't moan 
0, Line, //  Call should not modify the contents 
0, Line, //  Look for other interesting values that follow the EOFRecord 
0, Line, //  If the destination of the rows overlaps either the top 
0, Line, //  not an omnivorous listener (if it was, this method is a   no-op) 
0, Line, // 204: USDOLLAR (YEN in BIFF3)  205: FINDB  206: SEARCHB  207: REPLACEB  208: LEFTB  209: RIGHTB  210: MIDB 
0, Line, //  blank slide 
0, Line, // hyperlink 
0, Line, //  result can be null if value is optional (xsd:minOccurs=0), see bugzilla 55864 
0, Line, //  record to the DIB header, if the record contains a DIB. 
0, Line, // c >= lastCol, end of row reached  CR  LF 
0, Line, //  Mac   Ubuntu Xenial, 15", 1680x1050 
0, Line, //  If the source URI is empty 
0, Line, //  https://msdn.microsoft.com/en-us/library/ms367611(v=office.12).aspx 
0, Line, //  skip current '\' and continue to the next char 
0, Line, //  recursively update each shape 
0, Line, //  SlideListWithText container. 
0, Line, //  Check the current ones 
0, Line, //  hyperlink 
0, Line, //  Our list of entries, kept sorted to preserve order 
0, Line, //  check the arguments : as per excel function def 
0, Block, /*  (non-Javadoc)     * @see org.apache.poi.ss.usermodel.DataValidation#setShowPromptBox(boolean)      */
0, Line, //  table1 size was reduced, check that former table cells have been cleared 
0, Line, //  ignore INDEX record because it is only needed by Excel,   and POI always re-calculates its contents 
0, Line, // We cannot introduce a new type CellType.RICH_TEXT because the types are public so we have to make rich text as a type of string   using the POI style which seems to avoid "instanceof". 
0, Line, //  test that the conditional validation evaluations changed 
0, Line, //  not quite an error literal, should be treated as plain text 
0, Line, //  Gump reports a strange error because of an unavailable XML Parser, let's try to find out where    this comes from    
0, Line, //  defaults to xor password 
0, Line, // private static final POILogger _logger = POILogFactory.getLogger(XSSFRow.class); 
0, Line, //  Directly on a Stream, will go via POIFS and spot it's    actually a .xlsx file encrypted with the default password, and open 
0, Line, //  Check rule M4.1 : The format designer shall specify and the format   producer   shall create at most one core properties relationship for a package.   A format consumer shall consider more than one core properties   relationship for a package to be an error. If present, the   relationship shall target the Core Properties part. 
0, Line, //  Check stylings still as expected 
0, Line, //  Exactly 3 points MUST be specified. 
0, Line, //  Make sure hyperlinks were deep-copied, and modifying one does not modify the other.  
0, Line, //  Initialize array to allow to summarize afterwards 
0, Line, //  3. Use patriarch 
0, Line, // Create some data to build the pivot table on 
0, Line, //  A 32-bit unsigned integer that contains the index of the 
0, Line, //  Check comments are there 
0, Line, // return new XWPFTableRow(ctTbl.getTrArray(pos)); 
0, Line, // Check for a good clone 
0, Line, //  sanity check 
0, Line, //  empty 
0, Line, //  embed the time-stamp 
0, Line, //  true parameter 
0, Line, //  Check the header created with the paragraph got them, and the one 
0, Line, //  previously this failed because the border-element was not copied over  
0, Line, //  remove sheets 
0, Line, //  This value MUST be 8- or 16-bit aligned, according to the character format. 
0, Line, //  list may be seen. 
0, Line, //  TODO 
0, Line, //  dark blue 
0, Line, //  Package -> xssf 
0, Line, // colored axis line 
0, Line, //  Grab the bytes back 
0, Line, // one row down 
0, Line, //  Find or add the external sheet record definition for this 
0, Line, //  If they're the wrong way around, give up 
0, Line, //  Clone the sheet, and make sure the password hash is preserved 
0, Line, //  ambiguous numeric identifiers 
0, Line, //         background = backcolor; 
0, Line, // create a standalone CTRow bean 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.hssf.usermodel.DataValidationConstraint#setFormula2(java.lang.String)	  */
0, Line, //  Total is 20, as the 4 escher 8s all reference 
0, Line, //  Is 2006-01-24 (2nd day of week) 21:25:03.725 
0, Line, //  sprmCRsidText 
0, Line, //  Write out, and check   Load up again, check all still there 
0, Line, //  0x10 -> complex 
0, Line, //  Check the 15 individual ones added 
0, Line, //  row (in original file each row was unique) 
0, Line, //  duplicate chart with embedded workbook 
0, Line, //  https://bz.apache.org/bugzilla/show_bug.cgi?id=58648 
0, Line, //  filename characters 
0, Line, //  Transform of text in flipped shapes is special.   At this point the flip and rotation transform is already applied   (see DrawShape#applyTransform ), but we need to restore it to avoid painting "upside down".   See Bugzilla 54210. 
0, Line, //  set the text "Rich Text" to be green and the default font 
0, Block, /* XSLFSlide blankSlide = */
0, Line, //  Window size 1 so only last row will be in memory 
0, Line, //  See bug 56557, we should not inject data into the special ChartSheets 
0, Line, //  verify a rather complex format found e.g. in http://wahl.land-oberoesterreich.gv.at/Downloads/bp10.xls 
0, Line, //  check getFirstCell... 
0, Line, //  Load the external links tables. Their order is defined by the order 
0, Line, //  Write a 3 block stream 
0, Line, //  fixed type header   page 24, point 2.4.2.1.1 
0, Line, //  Reload the range every time 
0, Line, //  minimal test to include generated classes in poi-ooxml-schemas 
0, Line, //  FormulaParser strips spaces anyway 
0, Line, //  falls on a word boundary 
0, Line, //             assertEquals("MOD(ROW($T1),2)=1", cr.getFormula1()); 
0, Line, // Bug53150 formatting a whole number with fractions should just give the number 
0, Line, // TestPaletteRecord.class, //converted to junit4 
0, Line, //  Save to a new temp file 
0, Line, //  Use them 
0, Line, //  line spacing 80   paragraph is 97 long 
0, Line, // integer 
0, Line, //  Add default content types for .xml and .rels 
0, Line, //  it's final because the xslf inheritance hierarchy is not necessary the same as   the (not existing) xmlbeans hierarchy and subclasses shouldn't narrow it's return value 
0, Line, //  visio is in flipped coordinates, so translate the text to be in the   right place 
0, Line, //  No formatting applied, just do raw value in all cases 
0, Line, //  The subrange [19, 388] is expected to be replaced with a EscherAggregate object 
0, Line, // 				FileOutputStream fileOut = new FileOutputStream("27405output.xls");  				wb.write(fileOut);  				fileOut.close(); 
0, Line, //  no header is set (yet) 
0, Line, //  Turn the type ID into a strongly typed thing 
0, Line, //  The second to the last knot of the NURBS. 
0, Line, //  bug 59687:  XSSFSheet.RemoveRow doesn't handle row gaps properly when removing row comments 
0, Line, //  Allocate all the spare ones 
0, Line, //  lazy listen for ALL records with the listener shown above 
0, Line, //  Slide - added at start 
0, Line, //  we'll need multiple editions 
0, Line, // start of interface implementation 
0, Line, //  bug 60197: setSheetOrder should update sheet-scoped named ranges to maintain references to the sheets before the re-order 
0, Line, //  (Because Excel typically doesn't write NaN 
0, Line, //  And the chinese 
0, Line, // check that id of the drawing group was updated 
0, Line, //  do not break here since drawing has not been found yet (see bug 52425) 
0, Line, //  NOSONAR   this is not the physical row number! 
0, Line, //  enforces singleton 
0, Line, //  note - does not match boolean TRUE 
0, Line, //  out of bounds 
0, Line, //  return 0;     EscherSimpleProperty simpleProperty = (EscherSimpleProperty)   property;   return simpleProperty.getPropertyValue(); 
0, Line, //  2 defined rows 
0, Line, //  If the CMAP_LOOKUP flag in the optionsFlags field is set, each value in this array specifies a   Unicode character. Otherwise, each value specifies an index to a character glyph in the EmfPlusFont 
0, Line, //  Default + TNR 
0, Line, //  nRegions 
0, Line, //  only for xml signing 
0, Line, //  ignore any exception here 
0, Line, //  It's the same on 512 byte and 4096 byte block files! 
0, Line, //  CustomViewSettingsRecordAggregate blocks having UserSViewBegin with the same GUID 
0, Line, //  Note: the XSSFTextParagraph constructor will create its required   XSSFTextRuns from the provided CTTextParagraph 
0, Line, // this is the codepoint index, not char index, which may be larger if there are multi-byte chars 
0, Line, //  line decorations 
0, Line, //  now the whole block G4L:15 
0, Line, //  negative values are mapped to the correct values for compatibility between HSSF and XSSF 
0, Line, //  ignore trailing newline 
0, Line, // "document/bug53475-password-is-solrcell.docx", 
0, Line, //  Verify that myFunc and yourFunc were successfully added to Workbook names 
0, Line, // increase row height to accommodate two lines of text 
0, Line, //  You should only every have 1, 2 or 3 SLWTs    (normally it's 2, or 3 if you have notes) 
0, Line, //  end public class ByteField 
0, Line, //  The Source File/Folder, Destination Folder and Separator   were passed to the main method. 
0, Line, //  the bullet is set 40 pt before the text 
0, Line, //  These are the bit fields in cell options 
0, Line, //  paragraph is 97 long   paragraph reserved field 
0, Line, //  Sanity check the block count 
0, Line, //  Start off with rich one 
0, Line, // Ffn corresponds to a Pascal style String in STTBF. 
0, Line, //  using the PieceDescriptors, build our list of TextPieces. 
0, Line, // idx is 0-based index in the #pictures array 
0, Line, //  2x2 corner intersection   2-row/2-column intersection 
0, Line, //  "E" 
0, Line, //  Table lookup should be case-insensitive 
0, Line, //  Add two more 
0, Line, //  (eg font.dialog.plain.* vs font.Californian FB Bold.*) 
0, Line, //  bug 58084: set borders correctly 
0, Line, //  Wind on by the 4 byte info header 
0, Line, //  If 4k blocks, rest is blank 
0, Line, //  worksheet stream is seriously broken 
0, Line, //  subtracting positive zero gives minus zero 
0, Line, //  verify that null-values can be set, this was possible up to 3.11, but broken in 3.12 
0, Line, //  Keeps final check below from adding 1 and keeps Den from being 0 
0, Line, // stored strings items  stored strings begin sst  stored strings end sst 
0, Line, //  Save a workbook with a hyperlink 
0, Line, //  try to read it in HSSFWorkbook to quickly fail if we cannot read the file there at all and thus probably should use EXCLUDED instead 
0, Line, //   2 x x 
0, Line, //  Slightly pointless step counter 
0, Line, //  character run is 1 long 
0, Line, //  "PK\005\006"   number of this disk   central directory start disk   number of directory entries on disk   total number of directory entries   length of central directory   offset of central directory   comment length 
0, Line, //  writing is not yet implemented... handlePOIDocument(pub); 
0, Line, //  invalid characters are replaced with question marks 
0, Line, //  always use real numbers in calculations! 
0, Line, //                 return null;              } 
0, Line, //  May need better parsing in future 
0, Line, //  the height of the shape. 
0, Line, //  if the target had a fragment then append it to the result 
0, Line, //   2   x 
0, Line, //  We have rows 0, 1, 2, 20 and 21 
0, Line, //  collapse both inner and outer groups 
0, Block, /*  Open the POI filesystem.  */
0, Line, //  also try to see if some of the Records behave incorrectly   TODO: still fails on some records... RecordsStresser.handleWorkbook(wb); 
0, Line, // move the 3rd row two rows down 
0, Line, //  Otherwise, try it as a named range 
0, Line, //  some files store the whole file size in sizeLast, other just the last record size 
0, Block, /* FileOutputStream fileOut = new FileOutputStream(filename);        wb.write(fileOut);        fileOut.close(); */
0, Block, /*          *    A      B         * 1 LONGMERGED         * 2 SHORT SHORT          */
0, Line, //  do not delete the file if there's an error--might be helpful for debugging 
0, Line, //  although the spec says "use unsigned ints", there are examples out there using signed ints 
0, Line, // 				row.createCell(0); // this causes ValueRecordsAggregate.records to auto-extend  			} 
0, Line, //  Should have the usual 6 separaters   Then all 6 of the different header/footer kinds   Finally a terminater 
0, Line, //  produces #DIV/0! 
0, Line, //  need to read the header to calculate start of bitmap data correct 
0, Line, //  Second cell should be detected as having two paragraphs 
0, Line, //  The maximum column width for an individual cell is 255 characters 
0, Line, //  sheet cloning errors 
0, Line, //  add the created SupBookRecord before ExternSheetRecord 
0, Line, //  maximum column width is 255 characters   Bug 50681 reports exception at this point 
0, Line, //  An x-coordinate of a point on the infinite line; paired with y-coordinate 
0, Line, //  SBAT   Mini Stream 
0, Line, //  these line patterns are just approximations 
0, Line, //  endingFc += fcMin; 
0, Line, //  category data type 
0, Line, // setting XSSFColor 
0, Line, //  from the start of the record in which this object is contained. This value MUST be 32-bit aligned. 
0, Line, //  Set it up 
0, Line, //  This row shift should only affect the formulas 
0, Line, //  No overlap 
0, Line, //  see https://stackoverflow.com/questions/11787571/how-to-read-pem-file-to-get-private-and-public-key 
0, Line, //  Will show as the center, as that is what excel does    with an invalid footer lacking left/right/center details 
0, Line, //  4st is left aligned + normal line spacing (despite differing font) 
0, Line, //  Priority = 00 00 00 00 
0, Line, // If the JTables default cell renderer has been setup correctly the  value will be the HSSFCell that we are trying to render 
0, Line, //  Copy formula result as value   FIXME: Cached value may be stale 
0, Line, //  Used to blow up with an IllegalArgumentException    when creating a DVRecord   Now won't, but no idea if this means we have    rubbish in the DVRecord or not... 
0, Line, //  x basis 
0, Line, //  currently immutable 
0, Line, //  last shape ID cached in EscherDgRecord 
0, Line, //  Now add a new sheet, and check things work 
0, Line, //  Test that comments were shifted as expected 
0, Line, //  Check on the workbook, but shouldn't be there! 
0, Line, //  (XXX 1904-windowing not respected)   => sunday = 1, monday = 2, ..., saturday = 7 
0, Line, //  Now sort, and re-check 
0, Line, //  Check our filesystem has Properties then BAT 
0, Line, //  Ensure we have enough tab IDs   Can be a few short if new sheets were added 
0, Line, //  Palette 0   ADTL Palette 0 
0, Line, //  add in the middle 
0, Line, // we cannot remove cells included in a multi-cell array formula 
0, Line, // retrieve the range and check it is the same 
0, Block, /*  (non-Javadoc)	 * @see org.apache.poi.ss.usermodel.DataValidationConstraint#getExplicitListValues()	  */
0, Line, //  XSSFPictureData.class 
0, Line, //  Open the two filesystems 
0, Line, //  u201c and u201d are "smart-quotes" 
0, Line, //  bug 46973: fails here with IllegalArgumentException   ptgs must not be null 
0, Line, //  which is in the choice element 
0, Line, //  https://stackoverflow.com/questions/30532612 
0, Line, //  RectStruct 
0, Line, //  Function "Text" uses custom-formats which are locale specific   can't set the locale on a per-testrun execution, as some settings have been 
0, Line, //  For offline testing 
0, Line, //  immutable - so OK to return this 
0, Line, //  private static final int MASTER_SLIDE_ID      =  0x00000000; 
0, Line, // Need to update the name -> named ranges map 
0, Line, //  space in cell ref 
0, Line, // 61287 -- if the footer_len == 0, there may not be a multibyte flag 
0, Line, //  Check we got the 33 rows 
0, Line, // The vertical line spacing 
0, Line, //  expected   but still should close 
0, Line, //  create a defined name called 'B0' and try again 
0, Line, // Used for clone method. 
0, Line, //  and encrypt it again 
0, Line, //  ten column ColumnInfoRecord starting at index 0 
0, Line, // //// Case 5: Evaluate "Table1[#Data]" (excludes Header and Data rows) //////// 
0, Line, //  For handling formulas with string results 
0, Line, //  Parent ChunkStream is at 0x7194   This is one of the last children of the trailer 
0, Line, //  Column 'A'   Column 'B'   Column 'C'   Column 'D' 
0, Line, //  ignore the 16 padding bytes 
0, Line, //  identified bug 44421 
0, Line, //  Not sure if this can ever happen (See bug 45798)   Seems to be what excel would do in this case 
0, Line, //  sheet1 A3 formulae 
0, Line, //  just used for printing out contents of spreadsheets 
0, Line, //  A 32-bit unsigned integer that specifies the number of elements in the 
0, Line, //  do something to make font1 and font2 different   so they are not same or equal. 
0, Line, //  A value of type FixedPoint, as specified in [MS-OSHARED] section 2.2.1.6,   that specifies the angle of the gradient fill. Zero degrees represents a vertical vector from   bottom to top. The default value for this property is 0x00000000. 
0, Line, //  bottom 
0, Line, //  Mark the previous block as carrying on to us if needed 
0, Line, // number of items  selected item  flags  objId  LbsDropData  flags  the number of lines to be displayed in the dropdown  the smallest width in pixels allowed for the dropdown window  num chars 
0, Line, //  And some MID ones just to check 
0, Line, //  return null if Blip data is missing 
0, Line, // modify position through HSSFCell 
0, Line, //  minimal test to cause ooxml-lite to include all the classes in poi-ooxml-schemas 
0, Line, //  Check that a mini-stream was assigned, with one block used 
0, Line, //  Check the authors came through too 
0, Line, //  a failed invocation of Cell.setCellType leaves the cell   in the state that it was in prior to the invocation 
0, Line, //  0x80000009 is not a valid stock object 
0, Line, //  paragraphs of text. 
0, Line, // this is at a critical juncture  this too 
0, Line, // Last column of the hyperlink 
0, Line, //  Could be replaced with org.apache.commons.lang3.StringUtils#join 
0, Block, /*  **********  END  implementation of Entry **********  */
0, Line, //  These are CFRule12Rule only 
0, Block, /* assertNull(((XSSFWorkbook)wb).getCalculationChain());        assertNotNull(((XSSFWorkbook)wb).getCalculationChain().getCTCalcChain());        assertNotNull(((XSSFWorkbook)wb).getCalculationChain().getCTCalcChain().getCArray());        assertEquals(0, ((XSSFWorkbook)wb).getCalculationChain().getCTCalcChain().getCArray().length); */
0, Line, //  Split the URI into several part and analyze each 
0, Line, // 				throw new RuntimeException(e);  			} 
0, Block, /*  According to the definition of the processPOIFSReaderEvent method             * we cannot pass checked exceptions to the caller. The following             * lines check whether a checked exception occurred and throws an             * unchecked exception. The message of that exception is that of             * the underlying checked exception.  */
0, Line, //  the use of 2 big blocks 
0, Line, //  unregistered functions are parseable and renderable, but may not be evaluateable 
0, Line, // safety checks 
0, Line, //  space   colon 
0, Line, //  Sheet 1 A7 is to another sheet, range 
0, Line, //  build a range of the rows that are overwritten, i.e. the target-area, but without   rows that are moved along 
0, Line, //  FtCf (pictFormat)  
0, Line, //  Finally, write the newly modified Word document out to file. 
0, Line, //  HSLFSlideShow primed on the test data 
0, Line, //  If we're not preserving nodes, don't track the 
0, Line, //  TODO make this class into a record aggregate 
0, Line, //  paragprah is 28 long 
0, Line, //  maximum number of colors in the DIB. 
0, Line, //  the record will start with two integers, then this string   ... that will eat up 16 of the 8224 bytes that the record 
0, Line, //  Grab the right block 
0, Line, // An ExVideoContainer record that specifies information about the MCI movie 
0, Line, //  Allocate our BAT in the existing XBAT with space 
0, Line, //  instantiate the following classes so they'll get picked up by   the XmlBean process and added to the jar file. they are required   for the following XWPFTable methods. 
0, Line, //  check the rest 
0, Line, //  Check we can get at the Escher layer still 
0, Line, //  Now for some non-internal ones 
0, Line, //  Quick check on 4096 byte blocks too 
0, Line, //  Data Format 
0, Line, //  XmlAnyTypeImpl is returned for AlternateContent   parts, which might contain a CTDrawing 
0, Line, //  object created above. 
0, Line, // now ref is CellRangeAddress(10, 2, 3, 4) 
0, Line, //  Check a few bits of the table directly 
0, Line, //  expected no change 
0, Line, //  Create a map from the STBorder.Enum values to the XWPF-level enums 
0, Line, //  sprmPDxcRight 
0, Line, //  can just zap the lot 
0, Line, //  index to last row   index to first column and relative flags 
0, Line, //  Save and re-load them, to check for stability across that 
0, Line, //  Evaluation order:   lookup_value , table_array, range_lookup, find lookup value, col_index, fetch result 
0, Line, //  In case user provided testName with a file extension, don't repeat the file extension a second time 
0, Line, //  Types taken from http://msdn.microsoft.com/en-us/library/microsoft.exchange.data.contenttypes.tnef.tnefpropertytype%28v=EXCHG.140%29.aspx 
0, Line, //  "-dump", new File("build/tmp/", pptFile+".dump").getCanonicalPath(), 
0, Line, //  remove the rest all at once and test 
0, Line, //  else y = value of this guide 
0, Line, //  Oh joy, we need a new XBAT too... 
0, Line, //  Lots, with gaps 
0, Line, //  Encrypted OOXML files go inside OLE2 containers, is this one? 
0, Line, //  compare each cell range to all other cell-ranges 
0, Line, //  none of the columns should be hidden 
0, Line, //  copy original formula but adjust 3D refs to the new external sheet index 
0, Line, //  If we found it and are now at 18 bytes, 
0, Block, /*  e.g. 2500 for 50%  */
0, Line, //  Move to end 
0, Line, //  Add a row to the existing empty sheet 
0, Line, //  And grab the 2 byte values 
0, Line, //  Look for any other streams 
0, Line, //  we can merge non-intersecting cells 
0, Line, //  MEMORYMETAFILE = 0x0001, DISKMETAFILE = 0x0002  
0, Line, //  jumpTable 
0, Line, //  length of address link field 
0, Line, //  If there's a format that starts later in the string, make it start now 
0, Block, /* 		* How to recognise end of stream?		* In the best case, the underlying input stream (in) ends just after the last EOF record		* Usually however, the stream is padded with an arbitrary byte count.  Excel and most apps		* reliably use zeros for padding and if this were always the case, this code could just		* skip all the (zero sized) records with sid==0.  However, bug 46987 shows a file with		* non-zero padding that is read OK by Excel (Excel also fixes the padding).		*		* So to properly detect the workbook end of stream, this code has to identify the last		* EOF record.  This is not so easy because the worbook bof+eof pair do not bracket the		* whole stream.  The worksheets follow the workbook, but it is not easy to tell how many		* sheet sub-streams should be present.  Hence we are looking for an EOF record that is not		* immediately followed by a BOF record.  One extra complication is that bof+eof sub-		* streams can be nested within worksheet streams and it's not clear in these cases what		* record might follow any EOF record.  So we also need to keep track of the bof/eof		* nesting level.		 */
0, Line, //  Reference to a sheet-scoped named range in a different workbook 
0, Block, /*  Check whether we have exactly one command-line argument.  */
0, Line, //  Excel example for built-in title:     'second sheet'!$E:$F,'second sheet'!$2:$3 
0, Line, //  sprmPItap 
0, Line, //  frameWidth accounts for leading spaces which is excluded from bounds.getWidth() 
0, Line, // TODO: add in tests for phonetic runs 
0, Line, //  Last is a chain location 
0, Line, //  Note - no adjustments for end of Feb 
0, Line, //  BarDirection.BAR then X axis is target axis and Y axis is from 0 to 1 
0, Line, //  Since the Workbook interface doesn't derive from POIDocument   We'll likely need one of these for each document container interface 
0, Line, //  decrypted 
0, Line, //  Check that we have the new entries 
0, Line, //  Output the comment, if requested and exists 
0, Line, //  (non-null) > (null) 
0, Line, //  If the '.' is any later, ExcelGeneralNumberFormat will render an integer, as Excel does. 
0, Line, //  Pink with yellow - full 
0, Line, //  Note - the tAttrSum token (node.getToken()) is a base   token so does not need to have its operand class set 
0, Line, //  intentionally shadowing variables here 
0, Line, //  Do not close the workbook if there was a problem writing the workbook 
0, Line, //  [MS-DOC], v20140721, 2.6.4, sprmSRncFtn         
0, Line, // try to add 5 empty rows to a new sheet 
0, Line, //  Now do non rich one 
0, Line, //  The x-coordinate of the curve's ending control point relative to the   shape's width; a point on the arc. The control point is best located 
0, Line, //  value 2 is handled above (as value 11) 
0, Line, //  MB 
0, Line, //  Negative months are fairly easy 
0, Line, //  will become "Normal". 
0, Line, //  Overlaps with 8 - 9 (overlap and after replacements required) 
