projectname,classification,commenttext
EMF,DESIGN,// TODO factor up into GenBaseImpl //
EMF,DESIGN,// EATM Call the deprecated method which does the same thing  // but might have an override in older code.
EMF,DESIGN,// Unused?
EMF,DESIGN,// TODO factor up into GenBaseImpl? //
EMF,DESIGN,// call workaround
EMF,DESIGN,// TODO deprecate (since getPluginClass() is no longer called) //
EMF,DESIGN,// Ensure that this race condition is thread safe; it doesn't matter who wins the race. //
EMF,DESIGN,// TODO // This assumes we only get a SET notification which isn't a good assumption. //
EMF,DESIGN,//DMS handle this well.
EMF,DESIGN,//FB TBD can we come up with a better algorithm for choosing the default label feature?
EMF,DESIGN,//DMS should we let this exception out?
EMF,DESIGN,//DMS What if Eclipse is running but an invalid facade has been specified?  We still should format code use encoding...
EMF,DESIGN,//DMS  Do a better job with specific exceptions? Just use chained RuntimeExceptions?
EMF,DESIGN,// If the delegate URI can be handled as a file  // we'll hope that renaming it will be really efficient. //
EMF,DESIGN,//DMS Why not this? //new SubProgressMonitor(progressMonitor 1));
EMF,DESIGN,// Assume that it's an attribute for now. // It will/could become a reference if the type resolves to an EClass. //
EMF,DESIGN,// Do nothing for now and avoid propagating the exception.   // How should builders handle cancel?
EMF,DESIGN,// this is a fall-back however this should never be called
EMF,DESIGN,// TODO fix the space above
EMF,DESIGN,// TODO REMOVE THIS BOGUS EMPTY LINE
EMF,DESIGN,// TODO handle class cast exception better.
EMF,DESIGN,// I don't know if we should be run this deferred  // because we might have to give the editor a chance to process the viewer update events  // and hence to update the views first. //  //
EMF,DESIGN,// This is a big festering hack to make the images the right size from the start. //
EMF,DESIGN,// EATM Demand create metadata; needs to depend on processing mode...
EMF,DESIGN,// TODO This is really quite attrocious since there is code that will assume an iterator that returns strings!
EMF,DESIGN,//TBD return (user selected subset?) of referenced packages that contain super classes of classes in this package.
EMF,DESIGN,// call the workaround
EMF,DESIGN,// //TBD rethink where exactly some of the following methods belong (GenModel or GenPackage) //
EMF,DESIGN,// if there are multiple variables in declaration  // separate this variable fragment into a separate declaration
EMF,DESIGN,// EATM this would be wrong.
EMF,DESIGN,// REVISIT: Remove this code.
EMF,DESIGN,// The label is not used. //
EMF,DESIGN,// Motif kludge: we would get something random instead of null. //
EMF,DESIGN,// TODO So what should be the eType be now? //
EMF,DESIGN,// This runs the operation and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //
EMF,DESIGN,// EATM Kind of hacky.
EMF,DESIGN,// This is a kludge to deal with enumerators which crash the doSwitch. //
EMF,DESIGN,// This is copied from ItemProviderAdapterFactory. //
EMF,DESIGN,// EATM This might be better written as a single loop for the EObject case? //
EMF,DESIGN,// Second alternative should be getModelProject()?
EMF,DESIGN,// TODO Hack that should be removed.
EMF,DESIGN,// TODO // Specialize this to return a resource locator for messages specific to this validator. // Ensure that you remove @generated or mark it @generated NOT
EMF,DESIGN,// TODO // I'm concerned that folders will often return 401 or even 403. // So should we consider something to exist even though access if unauthorized or forbidden? //
EMF,DESIGN,// Only file-scheme URIs will be re-encoded. If a URI was decoded in the workaround // above and Platform.resolve() didn't return a file-scheme URI then this will return // an decoded URI. //
EMF,DESIGN,// This functionality should eventually go away as it is replaced by model exporters. // We'll just delegate to the deprecated GenPackage method. The monitor isn't used so we won't pass it. //
EMF,DESIGN,// The eAnnotations and eGenericType are possible containment references.  // We'll move them instead of copying //
EMF,DESIGN,// Note: Registry based authority is being removed from a // new spec for URI which would obsolete RFC 2396. If the // spec is added to XML errata processing of reg_name // needs to be removed. - mrglavas.
EMF,DESIGN,// temporary structure to hold node's attributes + namespaces in scope
EMF,DESIGN,// HACK: reading encoding
EMF,DESIGN,// Because of the old factoring approach in the create method  // it might be the case that the state of the old value has changed by the time we get here // and in that case we don't want to duplicate the removals in this code. //
EMF,DESIGN,// REVISIT: Remove this code. // Store port value as string instead of integer.
EMF,DESIGN,// TODO // This is faster than many charAt() calls. //
EMF,DESIGN,//REVISIT: do we really need to support block names as in Unicode 3.1 //         or we can just create all the names in IsBLOCKNAME format (XML Schema REC)? //
EMF,DESIGN,// Bubble sort // Why? -- In many cases //         this.ranges has few elements.
EMF,DESIGN,// Per Schema 1.0 it is not clear if the result returned should be a valid URI.  // For the future if we plant to support IRIs then it is better not to massage // the initialValue.  // We should thought consider where would be the best way to validate anyURI values -- EL
EMF,DESIGN,// Note that the way they are sorted the values of index[i++] always increase // so the objects are added from right to left in the list. // // EATM  TODO // // We could make this more efficient by grouping the adds when indices increment by one // so that a single grouped notification would result. //
EMF,DESIGN,// TODO deprecate (since no longer used by getEditPluginClass() getEditorPluginClass() getTestSuiteClass()) //
EMF,DESIGN,// if there are multiple variables in declaration  // separate this variable fragment into a separate declaration
EMF,DESIGN,//DMS factor this into a method? Use a non-static subclass?
EMF,DESIGN,//DMS this doesn't really produce nice output. //
EMF,IMPLEMENTATION,//FB TBD filter out volatile and other inappropriate links?
EMF,IMPLEMENTATION,// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //
EMF,IMPLEMENTATION,// TODO processing instructions are not sent to recordValues
EMF,IMPLEMENTATION,// TODO comments are not sent to recordValues
EMF,IMPLEMENTATION,// TODO Ignore for now.
EMF,IMPLEMENTATION,// TODO handle situation when ASTJNode is removed (compilationUnit is null)
EMF,IMPLEMENTATION,//TBD return super classes of classes in this package that come from a delegate package.
EMF,IMPLEMENTATION,// if current char is comma insert line break after it // // we should be able to find the comma because the range for enum constants includes all trailing comments up to the separator // if TargetSourceRangeComputer of ASTRewrite changes this logic should change to skip comments // see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)
EMF,IMPLEMENTATION,// TODO translation
EMF,IMPLEMENTATION,// TODO Binary incompatibility; an old override must override putAll.
EMF,IMPLEMENTATION,// This runs the options and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //
EMF,IMPLEMENTATION,// we should be able to find the comma because the range for enum constants includes all preceding comments up to the previous constant // if TargetSourceRangeComputer of ASTRewrite changes this logic should change to skip comments // see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)
EMF,IMPLEMENTATION,// TODO we should generate this.
EMF,IMPLEMENTATION,// TODO What about the instance type name and the fact that we should be matching its type argument structure? // If they match so far we must assume they are okay and then check all the arguments. //
EMF,WITHOUT_CLASSIFICATION,// Set of options that we want to control
EMF,WITHOUT_CLASSIFICATION,// get the end position of the range for the previous node
EMF,WITHOUT_CLASSIFICATION,// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //
EMF,WITHOUT_CLASSIFICATION,// Get the adapter from the factory. //
EMF,WITHOUT_CLASSIFICATION,// No methods added.
EMF,WITHOUT_CLASSIFICATION,"/*   * Javadoc copied from interface.   */"
EMF,WITHOUT_CLASSIFICATION,// add trailing comments if necessary
EMF,WITHOUT_CLASSIFICATION,// If the target is read-only we can ask the platform to release it. //
EMF,WITHOUT_CLASSIFICATION,// If entries don't have the same feature the feature maps aren't equal. //
EMF,WITHOUT_CLASSIFICATION,// Merge with an existing file. //
EMF,WITHOUT_CLASSIFICATION,// Walk up the superpackages collecting the package names. // Because empty packages are ommitted from the GenModel we need to walk up the EPackages. //
EMF,WITHOUT_CLASSIFICATION,// Any features that delegate to features in this package. //
EMF,WITHOUT_CLASSIFICATION,// See java.lang.Class.getName() javadoc for explanation of array encoding.
EMF,WITHOUT_CLASSIFICATION,// Additional useful character classes including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped
EMF,WITHOUT_CLASSIFICATION,"/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */"
EMF,WITHOUT_CLASSIFICATION,// If the target is read-only we can ask the platform to release it and it may be updated in the process. //
EMF,WITHOUT_CLASSIFICATION,// find start position of farthest preceding comment
EMF,WITHOUT_CLASSIFICATION,// was the details button pressed?
EMF,WITHOUT_CLASSIFICATION,// Set up the tree viewer. //
EMF,WITHOUT_CLASSIFICATION,// Process the children of the UnitTreeNode recursively. //
EMF,WITHOUT_CLASSIFICATION,// Create a code formatter for this compilation unit if needed. //
EMF,WITHOUT_CLASSIFICATION,// If the name isn't qualified it might be a primitive or from java.lang. Otherwise assume it's in the current // package and use the nsPrefix for the qualified package name. //
EMF,WITHOUT_CLASSIFICATION,// Determine the base URL by looking for the plugin.properties file in the standard way. //
EMF,WITHOUT_CLASSIFICATION,// The notification for this list is being thrown by the // delegating list //
EMF,WITHOUT_CLASSIFICATION,// Make sure our popups work. //
EMF,WITHOUT_CLASSIFICATION,// remove type insert enum
EMF,WITHOUT_CLASSIFICATION,// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually if necessary. //
EMF,WITHOUT_CLASSIFICATION,// build mapping from classes to list of features that use them
EMF,WITHOUT_CLASSIFICATION,// This runs the options and shows progress. //
EMF,WITHOUT_CLASSIFICATION,// no paths: keep query only
EMF,WITHOUT_CLASSIFICATION,// Select the root object in the view. //
EMF,WITHOUT_CLASSIFICATION,// else absolute path: keep it and query
EMF,WITHOUT_CLASSIFICATION,// Listen to selection so that we can handle it is a special way. //
EMF,WITHOUT_CLASSIFICATION,// The algorithm for the order of the features in this list should never change. // Also the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors  // and they will need to agree to any change // so that they can adjust their own code. //
EMF,WITHOUT_CLASSIFICATION,// This ensures that we handle selections correctly. //
EMF,WITHOUT_CLASSIFICATION,// Create an adapter factory that yields item providers. //
EMF,WITHOUT_CLASSIFICATION,// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //
EMF,WITHOUT_CLASSIFICATION,// Get the first selected element. //
EMF,WITHOUT_CLASSIFICATION,// Otherwise the path needs only the remaining segments.
EMF,WITHOUT_CLASSIFICATION,// log the error ignore the change and continue
EMF,WITHOUT_CLASSIFICATION,// absolute path or no path -> absolute path
EMF,WITHOUT_CLASSIFICATION,// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //
EMF,WITHOUT_CLASSIFICATION,// create a composite with standard margins and spacing
EMF,WITHOUT_CLASSIFICATION,// source method return type is array (getExceptions) target is not array (i.e. addException)
EMF,WITHOUT_CLASSIFICATION,// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //
EMF,WITHOUT_CLASSIFICATION,"/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */"
EMF,WITHOUT_CLASSIFICATION,// This is the page for the tree viewer //
EMF,WITHOUT_CLASSIFICATION,// empty last segment -> trailing separator
EMF,WITHOUT_CLASSIFICATION,// Refresh the necessary state. //
EMF,WITHOUT_CLASSIFICATION,// A set command without a feature sets the value of this wrapper hence replacing it with a new wrapper. So // we need a special command wrapper that selects this new wrapper as the affected object. //
EMF,WITHOUT_CLASSIFICATION,// Maintain a (weak hash) set on the type parameter of all referencing generic types. //
EMF,WITHOUT_CLASSIFICATION,// Force the project to be setup properly. //
EMF,WITHOUT_CLASSIFICATION,"/*    * Javadoc copied from interface.   */"
EMF,WITHOUT_CLASSIFICATION,// WizardContainer variables
EMF,WITHOUT_CLASSIFICATION,// return getPrefixedName("EditorPlugin");
EMF,WITHOUT_CLASSIFICATION,//EParameter
EMF,WITHOUT_CLASSIFICATION,// retrieve source node corresponding to target //
EMF,WITHOUT_CLASSIFICATION,// Ignore.
EMF,WITHOUT_CLASSIFICATION,// Create a default .jetsettings file file
EMF,WITHOUT_CLASSIFICATION,// Subclasses may overrride
EMF,WITHOUT_CLASSIFICATION,// Save the resources to the file system. //
EMF,WITHOUT_CLASSIFICATION,// Set the selection to the widget. //
EMF,WITHOUT_CLASSIFICATION,// ETypeParameter
EMF,WITHOUT_CLASSIFICATION,// Save only resources that have actually changed. //
EMF,WITHOUT_CLASSIFICATION,// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
EMF,WITHOUT_CLASSIFICATION,// This is the method that gets invoked when the operation runs. //
EMF,WITHOUT_CLASSIFICATION,// Ignore this since we will throw an exception when all else fails.
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// for enum constants use special range
EMF,WITHOUT_CLASSIFICATION,//ETypedElement
EMF,WITHOUT_CLASSIFICATION,// So if the resolved object is also present... //
EMF,WITHOUT_CLASSIFICATION,//EcorePackage
EMF,WITHOUT_CLASSIFICATION,// Subclasses may override this method
EMF,WITHOUT_CLASSIFICATION,// Create resource
EMF,WITHOUT_CLASSIFICATION,// Something went wrong that shouldn't. //
EMF,WITHOUT_CLASSIFICATION,// Create package meta-data objects
EMF,WITHOUT_CLASSIFICATION,// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// getObjectsToDetachGen() should be changed only if required
EMF,WITHOUT_CLASSIFICATION,// If a newline from the previous character data remains add a generator for it. //
EMF,WITHOUT_CLASSIFICATION,// Obtain or create and register package
EMF,WITHOUT_CLASSIFICATION,// remove the node
EMF,WITHOUT_CLASSIFICATION,// Initialize simple dependencies
EMF,WITHOUT_CLASSIFICATION,// Fill 11 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Obtain other dependent packages
EMF,WITHOUT_CLASSIFICATION,// If the intersection is empty i.e. no ancestor is in the mapping... //
EMF,WITHOUT_CLASSIFICATION,// Create classes and their features
EMF,WITHOUT_CLASSIFICATION,// Continue with a different approach.
EMF,WITHOUT_CLASSIFICATION,// Initialize created meta-data
EMF,WITHOUT_CLASSIFICATION,// If this mapping isn't a parent it's children definitely won't be either. //
EMF,WITHOUT_CLASSIFICATION,// Set bounds for type parameters
EMF,WITHOUT_CLASSIFICATION,// Make sure the collections aren't identical... //
EMF,WITHOUT_CLASSIFICATION,// Initialize enums and add enum literals
EMF,WITHOUT_CLASSIFICATION,// Add supertypes to classes
EMF,WITHOUT_CLASSIFICATION,//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.
EMF,WITHOUT_CLASSIFICATION,// FeatureMapEntry
EMF,WITHOUT_CLASSIFICATION,// Do the work within an operation because this is a long running activity that modifies the workbench. //
EMF,WITHOUT_CLASSIFICATION,// ResourceChange
EMF,WITHOUT_CLASSIFICATION,// Isolating the new objects
EMF,WITHOUT_CLASSIFICATION,//FeatureChangeImpl
EMF,WITHOUT_CLASSIFICATION,// set features and properties
EMF,WITHOUT_CLASSIFICATION,// cache result
EMF,WITHOUT_CLASSIFICATION,// This is the page for the list viewer //
EMF,WITHOUT_CLASSIFICATION,// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)
EMF,WITHOUT_CLASSIFICATION,//ResourceChangeImpl
EMF,WITHOUT_CLASSIFICATION,// If we change to pattern defaults will have to specify plain suffix in no main package case. //
EMF,WITHOUT_CLASSIFICATION,// feature is instance of EAttribute
EMF,WITHOUT_CLASSIFICATION,// Different than the Edit and Editor projects this method is invoked while  // generating the model plugin xml.
EMF,WITHOUT_CLASSIFICATION,// Make sure that all the old values are cached.
EMF,WITHOUT_CLASSIFICATION,// Include only non-duplicate namespace declarations. //
EMF,WITHOUT_CLASSIFICATION,//EDataType
EMF,WITHOUT_CLASSIFICATION,// Create the command stack that will notify this editor as commands are executed. //
EMF,WITHOUT_CLASSIFICATION,// Try to select the items in the current content viewer of the editor. //
EMF,WITHOUT_CLASSIFICATION,// caches the list value.
EMF,WITHOUT_CLASSIFICATION,// Set the editors selection based on the current viewer's selection. //
EMF,WITHOUT_CLASSIFICATION,//ChangeFactory
EMF,WITHOUT_CLASSIFICATION,// Set of options that we want to copy from the current definition
EMF,WITHOUT_CLASSIFICATION,// Sorting only the genModels
EMF,WITHOUT_CLASSIFICATION,// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //
EMF,WITHOUT_CLASSIFICATION,// Register package validator
EMF,WITHOUT_CLASSIFICATION,// We must have a qualifier for an attribute that needs qualified. //
EMF,WITHOUT_CLASSIFICATION,//System.err.println("DEBUG: fixed-only: "+this.fixedString);
EMF,WITHOUT_CLASSIFICATION,// cached already?
EMF,WITHOUT_CLASSIFICATION,// see if prefix already exists in current context
EMF,WITHOUT_CLASSIFICATION,// Initialize classes and features; add operations and parameters
EMF,WITHOUT_CLASSIFICATION,// default implementation does nothing
EMF,WITHOUT_CLASSIFICATION,// Initialize package
EMF,WITHOUT_CLASSIFICATION,// Walk up the super types until we reach a root. //
EMF,WITHOUT_CLASSIFICATION,//ChangeSwitch
EMF,WITHOUT_CLASSIFICATION,// Try to select the affected objects. //
EMF,WITHOUT_CLASSIFICATION,// Continue with no instanceClass.
EMF,WITHOUT_CLASSIFICATION,// Unwrap collection. //
EMF,WITHOUT_CLASSIFICATION,//case Notification.REMOVE_MANY:
EMF,WITHOUT_CLASSIFICATION,//case Notification.REMOVE:
EMF,WITHOUT_CLASSIFICATION,// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //
EMF,WITHOUT_CLASSIFICATION,// Create data types
EMF,WITHOUT_CLASSIFICATION,//EGenericTypeImpl
EMF,WITHOUT_CLASSIFICATION,//return eContainer;
EMF,WITHOUT_CLASSIFICATION,"/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */"
EMF,WITHOUT_CLASSIFICATION,// create containment one.
EMF,WITHOUT_CLASSIFICATION,// it's intentional to keep going
EMF,WITHOUT_CLASSIFICATION,// Initialize data types
EMF,WITHOUT_CLASSIFICATION,// Don't really unset it.
EMF,WITHOUT_CLASSIFICATION,//ETypeParameterImpl
EMF,WITHOUT_CLASSIFICATION,// Stop only on cancel. //
EMF,WITHOUT_CLASSIFICATION,// System bar.
EMF,WITHOUT_CLASSIFICATION,// Continue to try a different approach.
EMF,WITHOUT_CLASSIFICATION,// Produce the supplemental character as an entity
EMF,WITHOUT_CLASSIFICATION,// Keep trying until all else has failed.
EMF,WITHOUT_CLASSIFICATION,// If we can't determine it by reading the file // look at the preferences instead.
EMF,WITHOUT_CLASSIFICATION,//ETypedElementImpl
EMF,WITHOUT_CLASSIFICATION,// Since we're invoking plugged-in code we must be defensive against cycles. //
EMF,WITHOUT_CLASSIFICATION,// Subclasses may override
EMF,WITHOUT_CLASSIFICATION,// Combine the two lists. //
EMF,WITHOUT_CLASSIFICATION,//EcoreFactoryImpl
EMF,WITHOUT_CLASSIFICATION,// We not sure the encoding supports this code point so we write it as a character entity reference.
EMF,WITHOUT_CLASSIFICATION,// Keep trying until all else false.
EMF,WITHOUT_CLASSIFICATION,// no property
EMF,WITHOUT_CLASSIFICATION,"/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */"
EMF,WITHOUT_CLASSIFICATION,//EParameterImpl
EMF,WITHOUT_CLASSIFICATION,// Identifies a file-type absolute URI.
EMF,WITHOUT_CLASSIFICATION,// Only handle classifiers from this package. //
EMF,WITHOUT_CLASSIFICATION,// ChangeDescription
EMF,WITHOUT_CLASSIFICATION,// FeatureChange
EMF,WITHOUT_CLASSIFICATION,// If it is an unqualified name we will assume it refers to a type parameter since we don't support default package. //
EMF,WITHOUT_CLASSIFICATION,// Mark meta-data to indicate it can't be changed
EMF,WITHOUT_CLASSIFICATION,// We effectively passed null "" to look up the general-content feature. //
EMF,WITHOUT_CLASSIFICATION,// EGenericType
EMF,WITHOUT_CLASSIFICATION,// insert line break at the first line if there is something before the node start and the beginning of the line
EMF,WITHOUT_CLASSIFICATION,//EcoreFactory
EMF,WITHOUT_CLASSIFICATION,// EATM Leave this disabled for now. //
EMF,WITHOUT_CLASSIFICATION,// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Give all generator adapters the chance to do setup work. //
EMF,WITHOUT_CLASSIFICATION,//  Remove any non-Java dependencies from being added. //
EMF,WITHOUT_CLASSIFICATION,// clear old values
EMF,WITHOUT_CLASSIFICATION,// We can't update any properties via just a URL connection.
EMF,WITHOUT_CLASSIFICATION,// Trim off the segments corresponding to the package nesting. //
EMF,WITHOUT_CLASSIFICATION,// Ignore any exceptions and assume the class isn't available.
EMF,WITHOUT_CLASSIFICATION,// For an archive URI check for the plugin.properties in the archive. //
EMF,WITHOUT_CLASSIFICATION,// create the IV for the password generation algorithm
EMF,WITHOUT_CLASSIFICATION,// Opening the detail area
EMF,WITHOUT_CLASSIFICATION,// DocumentRoot
EMF,WITHOUT_CLASSIFICATION,// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features there may be mixin classes that still would result in duplicates. //
EMF,WITHOUT_CLASSIFICATION,// loop for all commented out nodes
EMF,WITHOUT_CLASSIFICATION,// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //
EMF,WITHOUT_CLASSIFICATION,// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //
EMF,WITHOUT_CLASSIFICATION,// Switch to the new selection provider. //
EMF,WITHOUT_CLASSIFICATION,// Look for duplicates among the generic super types. //
EMF,WITHOUT_CLASSIFICATION,// Keep trying other member types until all have failed.
EMF,WITHOUT_CLASSIFICATION,// Match against every other operation but this one. //
EMF,WITHOUT_CLASSIFICATION,// Fake a selection changed event to update the menus. //
EMF,WITHOUT_CLASSIFICATION,// The referencing generic type must be contained to be in scope //
EMF,WITHOUT_CLASSIFICATION,// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
EMF,WITHOUT_CLASSIFICATION,// If none of the generic super types are bounded then we've failed. //
EMF,WITHOUT_CLASSIFICATION,// append extra dimensions since they are not stored in Type object
EMF,WITHOUT_CLASSIFICATION,// Check if the bound specifies a classifier... //
EMF,WITHOUT_CLASSIFICATION,// Trim off the "bin" or "runtime" segment. //
EMF,WITHOUT_CLASSIFICATION,// The classifier of an attribute's generic type must be a data type. //
EMF,WITHOUT_CLASSIFICATION,// Compact the results to remove unmatched objects //
EMF,WITHOUT_CLASSIFICATION,// If neither approach finds a contradiction we must assume they are okay and then check all the arguments. //
EMF,WITHOUT_CLASSIFICATION,// If we didn't find the plugin.properties in the usual place nor in the archive... //
EMF,WITHOUT_CLASSIFICATION,// The type arguments of a generic super type must not be a wildcard. //
EMF,WITHOUT_CLASSIFICATION,// If we can open  an input stream then the plugin.properties is in the folder and we have a good base URL. //
EMF,WITHOUT_CLASSIFICATION,// If we still don't have a good base URL complain about it. //
EMF,WITHOUT_CLASSIFICATION,// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //
EMF,WITHOUT_CLASSIFICATION,// Create the mapping domain with a special command stack. //
EMF,WITHOUT_CLASSIFICATION,// The content outline is just a tree. //
EMF,WITHOUT_CLASSIFICATION,// If we are still on the root mapping itself... //
EMF,WITHOUT_CLASSIFICATION,// If the type also specifies a classifier... //
EMF,WITHOUT_CLASSIFICATION,// Yield that mapping create a stack record it as the next one to prune and add it to the stack. //
EMF,WITHOUT_CLASSIFICATION,// I.e. the classifiers are considered equal if they wrap the same non-null type. //
EMF,WITHOUT_CLASSIFICATION,// Consider the instance type names they wrap  // to see if they are non-null and equal. //
EMF,WITHOUT_CLASSIFICATION,// Get the top iterator retrieve it's result and record it as the one to which remove will be delegated. //
EMF,WITHOUT_CLASSIFICATION,// If the result about to be returned has children... //
EMF,WITHOUT_CLASSIFICATION,// Record the iterator as the next one to prune and add it to the stack. //
EMF,WITHOUT_CLASSIFICATION,// Then eObject1 must be that match. //
EMF,WITHOUT_CLASSIFICATION,// There will be no iterator to prune. //
EMF,WITHOUT_CLASSIFICATION,// While the current iterator has no next... //
EMF,WITHOUT_CLASSIFICATION,// if the given class is subclass of enum and node is of subclass of type
EMF,WITHOUT_CLASSIFICATION,// Only if the feature kind is unspecified should we return a match. // Otherwise we might return an attribute feature when an element is required  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //
EMF,WITHOUT_CLASSIFICATION,// Pop it from the stack. //
EMF,WITHOUT_CLASSIFICATION,// If the stack is empty we're done. //
EMF,WITHOUT_CLASSIFICATION,// Pop it off the stack. //
EMF,WITHOUT_CLASSIFICATION,// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address which is not available in Java. //
EMF,WITHOUT_CLASSIFICATION,// Get the next one down and then test it for has next. //
EMF,WITHOUT_CLASSIFICATION,// If there is an iterator to prune. //
EMF,WITHOUT_CLASSIFICATION,"/*   * Javadoc copied from source.   */"
EMF,WITHOUT_CLASSIFICATION,// You can only prune once. //
EMF,WITHOUT_CLASSIFICATION,// Undo the preparation for previous and continue.
EMF,WITHOUT_CLASSIFICATION,// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //
EMF,WITHOUT_CLASSIFICATION,// printAdapters();
EMF,WITHOUT_CLASSIFICATION,// Keys that will be used to record visibility for the accessors. //
EMF,WITHOUT_CLASSIFICATION,// If that iterator is still at the top of the stack... //
EMF,WITHOUT_CLASSIFICATION,// If the referenced EObjects aren't equal the feature maps aren't equal. //
EMF,WITHOUT_CLASSIFICATION,// Allow for a bit-shift of growth. //
EMF,WITHOUT_CLASSIFICATION,// If eObject2 has been compared already... //
EMF,WITHOUT_CLASSIFICATION,// Keep popping the stack until an iterator that has a next is at the top. //
EMF,WITHOUT_CLASSIFICATION,// The feature maps must be equal. //
EMF,WITHOUT_CLASSIFICATION,// Conditionally create the data. //
EMF,WITHOUT_CLASSIFICATION,// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //
EMF,WITHOUT_CLASSIFICATION,//  ++modCount //
EMF,WITHOUT_CLASSIFICATION,// If we find a match make this generic type be for this type parameter // and then stop the whole process.
EMF,WITHOUT_CLASSIFICATION,// clockseq_low
EMF,WITHOUT_CLASSIFICATION,// Guard for no data. //
EMF,WITHOUT_CLASSIFICATION,// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //
EMF,WITHOUT_CLASSIFICATION,// Suppress default constructor for noninstantiability.
EMF,WITHOUT_CLASSIFICATION,// ++modCount //
EMF,WITHOUT_CLASSIFICATION,// Ensure that anything can be handled even if it's not recognized. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */"
EMF,WITHOUT_CLASSIFICATION,// Strip off the array indices if any. //
EMF,WITHOUT_CLASSIFICATION,// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //
EMF,WITHOUT_CLASSIFICATION,// Create a page set the title and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
EMF,WITHOUT_CLASSIFICATION,//MappingRootImpl
EMF,WITHOUT_CLASSIFICATION,// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Ignore it if we've already set generic versions of these //
EMF,WITHOUT_CLASSIFICATION,// String getPackageID();
EMF,WITHOUT_CLASSIFICATION,// // EMFEdit generation //
EMF,WITHOUT_CLASSIFICATION,// Returns whether this class implements any of the given features.
EMF,WITHOUT_CLASSIFICATION,// ignore rules for nodes of different class
EMF,WITHOUT_CLASSIFICATION,// Remember the static instance. //
EMF,WITHOUT_CLASSIFICATION,//hgd::fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getFeature() substituteOldValue substituteNewValue msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,//Class/genFeature.override.javajetinc //for
EMF,WITHOUT_CLASSIFICATION,// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain parentMapping parentMapping.ePackageMapping().getMapping_Nested() mapping));
EMF,WITHOUT_CLASSIFICATION,// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// processing unknown feature with xsi:type (xmi:type)
EMF,WITHOUT_CLASSIFICATION,//Class/implementedGenOperation.override.javajetinc //for
EMF,WITHOUT_CLASSIFICATION,// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //
EMF,WITHOUT_CLASSIFICATION,// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface
EMF,WITHOUT_CLASSIFICATION,// If the proxy holder can hold many values // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //
EMF,WITHOUT_CLASSIFICATION,// // Data //
EMF,WITHOUT_CLASSIFICATION,"/*     * Javadoc copied from interface.     */"
EMF,WITHOUT_CLASSIFICATION,// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //
EMF,WITHOUT_CLASSIFICATION,// do not add a new line if there is one
EMF,WITHOUT_CLASSIFICATION,// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Excise the new root from the document root. //
EMF,WITHOUT_CLASSIFICATION,// Don't hold onto a duplicate reference to the last object. //
EMF,WITHOUT_CLASSIFICATION,// If processSchemaLocations is specified treat these as XML Schema locations
EMF,WITHOUT_CLASSIFICATION,// Give it all back to the garbage collector. //
EMF,WITHOUT_CLASSIFICATION,// there is only whitespace after enum constant on the same line - do not add line breaks
EMF,WITHOUT_CLASSIFICATION,// Write the capacity. //
EMF,WITHOUT_CLASSIFICATION,// This happens when processing an element with simple content that has elements content even though it shouldn't. //
EMF,WITHOUT_CLASSIFICATION,// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// record node's attributes
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// There's an EObject on the stack already. //
EMF,WITHOUT_CLASSIFICATION,//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat
EMF,WITHOUT_CLASSIFICATION,// If it is changing... //
EMF,WITHOUT_CLASSIFICATION,// Test for a same document reference that would usually be handled as an IDREF. //
EMF,WITHOUT_CLASSIFICATION,// Check for scheme which must be before '/' '?' or '#'. Also handle // names with DOS drive letters ('D:') so 1-character schemes are not // allowed.
EMF,WITHOUT_CLASSIFICATION,// Need not to call setSource() because // a caller can not access this match instance.
EMF,WITHOUT_CLASSIFICATION,// Only creates the other pages if there is something that can be edited //
EMF,WITHOUT_CLASSIFICATION,// Create the listener on demand. //
EMF,WITHOUT_CLASSIFICATION,"/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not it return with false.           */"
EMF,WITHOUT_CLASSIFICATION,// handler.unparsedEntityDecl(name publicId systemId notationName);
EMF,WITHOUT_CLASSIFICATION,// Ignore close since we don't want to let the parser close the stream when it's done.
EMF,WITHOUT_CLASSIFICATION,// We'll try adding a shallow copy of the clipboard contents instead of a full copy. // Note: we can't just try adding the clipboard contents itself because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //
EMF,WITHOUT_CLASSIFICATION,"/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */"
EMF,WITHOUT_CLASSIFICATION,// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// handler.notationDecl(name publicId systemId);
EMF,WITHOUT_CLASSIFICATION,// EDate is far too often overridden to provide a different mapping and therefor the default is somewhat obscure. // So it's best to delegate to the factory. //
EMF,WITHOUT_CLASSIFICATION,// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4  // which is just about the average list size. //
EMF,WITHOUT_CLASSIFICATION,"/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  "" to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */"
EMF,WITHOUT_CLASSIFICATION,// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence new parser is created every time this method is called
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// This should be transparent. //
EMF,WITHOUT_CLASSIFICATION,// | ucschar | escaped
EMF,WITHOUT_CLASSIFICATION,// ModifierOp // CharOp  for CHAR BACKREFERENCE CAPTURE ANCHOR
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"
EMF,WITHOUT_CLASSIFICATION,// process eStructuralFeatures for association end(Role) //
EMF,WITHOUT_CLASSIFICATION,// STRING
EMF,WITHOUT_CLASSIFICATION,// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation
EMF,WITHOUT_CLASSIFICATION,// Look for a substitution group feature in the feature's containing class' containing package. //
EMF,WITHOUT_CLASSIFICATION,// It's intentional to keep going.
EMF,WITHOUT_CLASSIFICATION,// Check which directive it is. //
EMF,WITHOUT_CLASSIFICATION,//iri = iri || containsNonASCII(fragment);
EMF,WITHOUT_CLASSIFICATION,// Check if it's an anonymous type. //
EMF,WITHOUT_CLASSIFICATION,// for RANGE or NRANGE
EMF,WITHOUT_CLASSIFICATION,// We only get here if we should do this. //
EMF,WITHOUT_CLASSIFICATION,//reader.reset(start); //return false;
EMF,WITHOUT_CLASSIFICATION,// Write all the entryData; there will be size of them. //
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o
EMF,WITHOUT_CLASSIFICATION,// Restore the capacity if there was any. //
EMF,WITHOUT_CLASSIFICATION,// Read all size number of entryData. //
EMF,WITHOUT_CLASSIFICATION,// This just represents going back to the unset state but that doesn't affect the contents of the list. //
EMF,WITHOUT_CLASSIFICATION,// String-parsing implementation.
EMF,WITHOUT_CLASSIFICATION,// Create a page for the selection tree view. //
EMF,WITHOUT_CLASSIFICATION,// generateColor();
EMF,WITHOUT_CLASSIFICATION,// this.ranges is sorted and compacted.
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Create annotations // http://www.w3.org/XML/1998/namespace
EMF,WITHOUT_CLASSIFICATION,// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2
EMF,WITHOUT_CLASSIFICATION,//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //
EMF,WITHOUT_CLASSIFICATION,// X{26} -> XX(X(X(XX?)?)?)?
EMF,WITHOUT_CLASSIFICATION,// Internal bootstrap uses Literals constants so we must force initialization this inner interface first. //
EMF,WITHOUT_CLASSIFICATION,//iri = iri || containsNonASCII(device);
EMF,WITHOUT_CLASSIFICATION,// Open an editor on the new file. //
EMF,WITHOUT_CLASSIFICATION,// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG
EMF,WITHOUT_CLASSIFICATION,"/*           * Checks whether the expression starts with "".*"".           */"
EMF,WITHOUT_CLASSIFICATION,// Parse the attr-val pairs. //
EMF,WITHOUT_CLASSIFICATION,// Skips ')'
EMF,WITHOUT_CLASSIFICATION,// create field initializer from enum constant's arguments and body
EMF,WITHOUT_CLASSIFICATION,"/*                       * Saves current position to avoid                       * zero-width repeats.                       */"
EMF,WITHOUT_CLASSIFICATION,// off -> next of '}'
EMF,WITHOUT_CLASSIFICATION,// different scheme: need complete absolute URI
EMF,WITHOUT_CLASSIFICATION,// Apply the change. //
EMF,WITHOUT_CLASSIFICATION,"/*           * Straightforward matching.           */"
EMF,WITHOUT_CLASSIFICATION,// Delete the change information because it is invalid now that the objects have been changed. //
EMF,WITHOUT_CLASSIFICATION,// Static initializer for archiveSchemes.
EMF,WITHOUT_CLASSIFICATION,// Apply the change and reverse the change information. //
EMF,WITHOUT_CLASSIFICATION,// Compute the URL for where the classes for this project will be located. //
EMF,WITHOUT_CLASSIFICATION,//this.iri = iri;
EMF,WITHOUT_CLASSIFICATION,// \ + c // backsolidus // POSIX Character class such as [:alnum:]
EMF,WITHOUT_CLASSIFICATION,"/*      public RegularExpression createRegex(String regex int options) throws ParseException {          Token tok = this.parse(regex options);          return new RegularExpression(regex tok this.parennumber this.hasBackReferences options);      }      */"
EMF,WITHOUT_CLASSIFICATION,// Compute the URLs for all the output folder of all the project dependencies. //
EMF,WITHOUT_CLASSIFICATION,//tok.dumpRanges();
EMF,WITHOUT_CLASSIFICATION,// Define a class loader that will look in the URLs first  // and if it doesn't find the class there uses the emitter's loader. //
EMF,WITHOUT_CLASSIFICATION,// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)
EMF,WITHOUT_CLASSIFICATION,// Define a class loader that will look up the class in the bundle // and if it doesn't find it there will look in the parent. //
EMF,WITHOUT_CLASSIFICATION,//************************************************************************ //*    class RoseToken                                                   * //************************************************************************
EMF,WITHOUT_CLASSIFICATION,// Strip off the trailing "_" and load that class. //
EMF,WITHOUT_CLASSIFICATION,// Since the granularity of time in Java is only milliseconds  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //
EMF,WITHOUT_CLASSIFICATION,// Check that the class is actually different from the one that's directly visible to the JETEmitter. //
EMF,WITHOUT_CLASSIFICATION,// Filtered for property keys to remove duplicates.
EMF,WITHOUT_CLASSIFICATION,"/*   * Javadoc copied from base class.   */"
EMF,WITHOUT_CLASSIFICATION,// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-a-zA-Z] // '(?(' // '-[' in a character class
EMF,WITHOUT_CLASSIFICATION,// Kick of a Java build if not already in a build. //
EMF,WITHOUT_CLASSIFICATION,// src:    o--------o // sub:  o------------o // res: empty // Reuse sub
EMF,WITHOUT_CLASSIFICATION,// Add the new entries including source JRE container and added variables and classpath containers.  //
EMF,WITHOUT_CLASSIFICATION,// This will deal with all the subcommands to modifying the root mapping tree. //
EMF,WITHOUT_CLASSIFICATION,// Skips ']'
EMF,WITHOUT_CLASSIFICATION,// 32 is the number of bits in `int'.
EMF,WITHOUT_CLASSIFICATION,// Construct a proper URL for relative lookup. //
EMF,WITHOUT_CLASSIFICATION,// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1
EMF,WITHOUT_CLASSIFICATION,// Create a proper feature map entry. //
EMF,WITHOUT_CLASSIFICATION,// set original node of annotations (to allow get methods to work correctly)
EMF,WITHOUT_CLASSIFICATION,// Determine all the bundles that this project depends on. //
EMF,WITHOUT_CLASSIFICATION,// This call should get the files checked out from version control if the project is a 'team' project. //
EMF,WITHOUT_CLASSIFICATION,// Like isStringType() but still returns true even if multiplicity-many. //
EMF,WITHOUT_CLASSIFICATION,// Reverse the objects to attach and detach lists. //
EMF,WITHOUT_CLASSIFICATION,// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'
EMF,WITHOUT_CLASSIFICATION,// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //
EMF,WITHOUT_CLASSIFICATION,// This case will be handled special during apply //
EMF,WITHOUT_CLASSIFICATION,// If it doesn't correspond to a bundle then try to process it as a project in the workspace. //
EMF,WITHOUT_CLASSIFICATION,//System.err.println("CLOSURE: "+min+" "+max);
EMF,WITHOUT_CLASSIFICATION,// Must be in 0x0040-0x005f
EMF,WITHOUT_CLASSIFICATION,// for CLOSURE
EMF,WITHOUT_CLASSIFICATION,"/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName(""org.eclipse.emf.ecore.EEnumLiteral"");   }*/"
EMF,WITHOUT_CLASSIFICATION,// there is only whitespace on this line - no need for line break
EMF,WITHOUT_CLASSIFICATION,// This handles Rose 2003 format e.g. // Logical View::JavaException[40722F9D0294] //
EMF,WITHOUT_CLASSIFICATION,// for STRING
EMF,WITHOUT_CLASSIFICATION,// move all children to the type converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers
EMF,WITHOUT_CLASSIFICATION,// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B
EMF,WITHOUT_CLASSIFICATION,// Add JETBuilder //
EMF,WITHOUT_CLASSIFICATION,// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)
EMF,WITHOUT_CLASSIFICATION,// clone includeStack without cloning contents //
EMF,WITHOUT_CLASSIFICATION,"/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */"
EMF,WITHOUT_CLASSIFICATION,// Create .jetproperties file //
EMF,WITHOUT_CLASSIFICATION,// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //
EMF,WITHOUT_CLASSIFICATION,// Store the current state in stack. //
EMF,WITHOUT_CLASSIFICATION,// If all the objects aren't used up by the above then we can't do the command. //
EMF,WITHOUT_CLASSIFICATION,// Perl extension
EMF,WITHOUT_CLASSIFICATION,// New Template Container Entryfield
EMF,WITHOUT_CLASSIFICATION,// If there's no position the list is being cleared. //
EMF,WITHOUT_CLASSIFICATION,// Set the new variables. //
EMF,WITHOUT_CLASSIFICATION,// If the template path points at a project with a JET Nature  // then we will assume that the templates we want to use are already compiled in this plugin Java project. //
EMF,WITHOUT_CLASSIFICATION,// When we attached we have to recompute the erasure of the type parameter. //
EMF,WITHOUT_CLASSIFICATION,//build table of Pf values
EMF,WITHOUT_CLASSIFICATION,// Create a key set that supports add. //
EMF,WITHOUT_CLASSIFICATION,// Suppress default constructor for non-instantiability.
EMF,WITHOUT_CLASSIFICATION,// Get previous state in stack. //
EMF,WITHOUT_CLASSIFICATION,// VAJ kludge //
EMF,WITHOUT_CLASSIFICATION,"/*                  result.addRange(0 RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1 RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1 UTF16_MAX);                  return 1;                  */"
EMF,WITHOUT_CLASSIFICATION,// Make sure we have something to pop. //
EMF,WITHOUT_CLASSIFICATION,// Map to EClass EEnum or EInerface. // Note that we do not map structure and primitive type class. //
EMF,WITHOUT_CLASSIFICATION,// Register the file and read its content: //
EMF,WITHOUT_CLASSIFICATION,// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //
EMF,WITHOUT_CLASSIFICATION,// Is stack created ? (will happen if the JET file we're looking at is missing. //
EMF,WITHOUT_CLASSIFICATION,// Use an alternate if we can't write to this one. //
EMF,WITHOUT_CLASSIFICATION,// And delegate the call. //
EMF,WITHOUT_CLASSIFICATION,// The method is not a structural feature so it's modeled as an operation. //
EMF,WITHOUT_CLASSIFICATION,// Continue with the established base URL.
EMF,WITHOUT_CLASSIFICATION,// Consume the open quote: //
EMF,WITHOUT_CLASSIFICATION,// Do allow an existing build.properties to be overwritten since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
EMF,WITHOUT_CLASSIFICATION,// Restore parser state: //
EMF,WITHOUT_CLASSIFICATION,// Filter out explicit EObject from super types except in the Ecore package itself or if it appears in the @model superTypes. //
EMF,WITHOUT_CLASSIFICATION,// Check for an equal sign: //
EMF,WITHOUT_CLASSIFICATION,//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
EMF,WITHOUT_CLASSIFICATION,// Get the attribute value: //
EMF,WITHOUT_CLASSIFICATION,// insert line break if there is non-whitespace before end of the line
EMF,WITHOUT_CLASSIFICATION,//an error  like "3c[Pad]r" "3cdX" "3cXd" "3cXX" where X is non data
EMF,WITHOUT_CLASSIFICATION,// Don't do any of the other normally dynamic JETEmitter project processing. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */"
EMF,WITHOUT_CLASSIFICATION,// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //
EMF,WITHOUT_CLASSIFICATION,// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote
EMF,WITHOUT_CLASSIFICATION,// note: hierarchical -> authority != null
EMF,WITHOUT_CLASSIFICATION,// End of the useBean tag. //
EMF,WITHOUT_CLASSIFICATION,// '::' represents at least one 16-bit group of zeros.
EMF,WITHOUT_CLASSIFICATION,// // EMF.Editor generation //
EMF,WITHOUT_CLASSIFICATION,// XMLesque Close tags //
EMF,WITHOUT_CLASSIFICATION,// Parse as an attribute=value: //
EMF,WITHOUT_CLASSIFICATION,// We can create the RemoveCommand for an uncontrol but we must defer creating an AddCommand // to control until run() when the user specifies a target resource. //
EMF,WITHOUT_CLASSIFICATION,// // Tests generation //
EMF,WITHOUT_CLASSIFICATION,// Reached EOF: //
EMF,WITHOUT_CLASSIFICATION,// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified for example) but we're just following the // RFC specifications
EMF,WITHOUT_CLASSIFICATION,// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData
EMF,WITHOUT_CLASSIFICATION,// Map to an eClass. //
EMF,WITHOUT_CLASSIFICATION,// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.
EMF,WITHOUT_CLASSIFICATION,//FB TBD different objects for ecore model!
EMF,WITHOUT_CLASSIFICATION,// Check end of quote skip closing quote: //
EMF,WITHOUT_CLASSIFICATION,// note: absolutePath -> hierarchical
EMF,WITHOUT_CLASSIFICATION,// Get the attribute name: //
EMF,WITHOUT_CLASSIFICATION,/*0A00..0A7F;*/
EMF,WITHOUT_CLASSIFICATION,// Attempt to parse authority. If the section is an empty string // this is a valid server based authority so set the host to this // value.
EMF,WITHOUT_CLASSIFICATION,// Delete the ActionContributionItems with matching action. //
EMF,WITHOUT_CLASSIFICATION,// search backwards starting from character before ':'.
EMF,WITHOUT_CLASSIFICATION,// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //
EMF,WITHOUT_CLASSIFICATION,/*0D00..0D7F;*/
EMF,WITHOUT_CLASSIFICATION,// If the second character wasn't ':' in order to be valid // the remainder of the string must match IPv4Address  // and we must have read exactly 6 16-bit groups.
EMF,WITHOUT_CLASSIFICATION,// Skip derived features. //
EMF,WITHOUT_CLASSIFICATION,// The include succeeded so if there is an alternative and we're not skipping we need to start. //
EMF,WITHOUT_CLASSIFICATION,// check for authority - RFC 2396 5.2 #4 // if we found a host then we've got a network path so we're done
EMF,WITHOUT_CLASSIFICATION,// Include derived relations only if they won't also come from mixed or a group. //
EMF,WITHOUT_CLASSIFICATION,// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment
EMF,WITHOUT_CLASSIFICATION,// If this is just a proxy being resolved... //
EMF,WITHOUT_CLASSIFICATION,// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034 hostnames are limited to 255 characters.
EMF,WITHOUT_CLASSIFICATION,// Force the raw type to be resolved so we don't resolve this endlessly. //
EMF,WITHOUT_CLASSIFICATION,// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2
EMF,WITHOUT_CLASSIFICATION,// Update the classifier and hence the raw type as normal. //
EMF,WITHOUT_CLASSIFICATION,// RFC 2732 only allows '[' and ']' to appear in the opaque part.
EMF,WITHOUT_CLASSIFICATION,/*10A0..10FF;*/
EMF,WITHOUT_CLASSIFICATION,// Map to an EClass. //
EMF,WITHOUT_CLASSIFICATION,// Look for an end-of-comment or end-of-tag: //
EMF,WITHOUT_CLASSIFICATION,// We've either reached the end of the string the address ends in // an IPv4 address or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits.
EMF,WITHOUT_CLASSIFICATION,// A section is not allowed without a preceding include with alternative. //
EMF,WITHOUT_CLASSIFICATION,// To encode special characters in anyURI by using %HH to represent // special ASCII characters: 0x00~0x1F 0x7F ' ' '<' '>' etc. // and non-ASCII characters (whose value >= 128).
EMF,WITHOUT_CLASSIFICATION,// // XML Schema anyURI specific information //
EMF,WITHOUT_CLASSIFICATION,// An expression with more that 931 "+" will break Sun and IBM javac compilers. //
EMF,WITHOUT_CLASSIFICATION,// If a newline from the previous character data remains leave it around to be processed as if it appeared in the included file. //
EMF,WITHOUT_CLASSIFICATION,// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// The include failed so if there is an alternative we don't skip it. //
EMF,WITHOUT_CLASSIFICATION,// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// At development time the real factory may not be available. Just return null. //
EMF,WITHOUT_CLASSIFICATION,// This pop is safe because a section couldn't have been started without an include that pushed. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */"
EMF,WITHOUT_CLASSIFICATION,/*16A0..16FF;*/
EMF,WITHOUT_CLASSIFICATION,// Cannot start with a '.' '-' or end with a '-'.
EMF,WITHOUT_CLASSIFICATION,// Process this first. //
EMF,WITHOUT_CLASSIFICATION,// Ignore this now //
EMF,WITHOUT_CLASSIFICATION,// Don't overwrite exising file
EMF,WITHOUT_CLASSIFICATION,// Register our directive. //
EMF,WITHOUT_CLASSIFICATION,// Create an import manager for this compilation unit
EMF,WITHOUT_CLASSIFICATION,// Ignore it if there are multiple comments. //
EMF,WITHOUT_CLASSIFICATION,// Three arguments are expected: the .xml jControlModel URI the source java URI and the target java URI. //
EMF,WITHOUT_CLASSIFICATION,// Interprets escaped characters according to Java literal rules with one // exception: a single \ is taken literally not as an error.
EMF,WITHOUT_CLASSIFICATION,// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,/*2FF0..2FFF;*/
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */"
EMF,WITHOUT_CLASSIFICATION,// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Entry entry = new Entry(eObject CONTAINER); // return (InternalEObject)map.get(entry);
EMF,WITHOUT_CLASSIFICATION,// Fill 23 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// This should never be called. //
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// check for valid escape sequence
EMF,WITHOUT_CLASSIFICATION,// If there isn't an executable command we should maybe try a link operation but only if we're allowed and not doing a link. //
EMF,WITHOUT_CLASSIFICATION,// return a correctly sized result
EMF,WITHOUT_CLASSIFICATION,/* EATM getDecoratedAdapterFactory().*/
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,/*A000..A48F;*/
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,"/*   * @deprecated   */"
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */"
EMF,WITHOUT_CLASSIFICATION,/*FB50..FDFF;*/
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// When setting the resource to null we assume that detach has already been called in the resource implementation //
EMF,WITHOUT_CLASSIFICATION,// Fill 10 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Stop listening to the old one. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */"
EMF,WITHOUT_CLASSIFICATION,// Ignore the further-most javadoc //
EMF,WITHOUT_CLASSIFICATION,// Create annotations // http://www.eclipse.org/emf/2002/Ecore
EMF,WITHOUT_CLASSIFICATION,/*FF00..FFEF;*/
EMF,WITHOUT_CLASSIFICATION,// Get what's left of the segments after trimming the prefix.
EMF,WITHOUT_CLASSIFICATION,/*1D400..1D7FF;*/
EMF,WITHOUT_CLASSIFICATION,// added since this encoding only differs w.r.t. presentation
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters but its first character may not be // <code>/</code>
EMF,WITHOUT_CLASSIFICATION,// Start listening to the new one. //
EMF,WITHOUT_CLASSIFICATION,// Add ASCII Letters and ASCII Hex Numbers
EMF,WITHOUT_CLASSIFICATION,// Create the source and target JDOMs. //
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use" //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials"
EMF,WITHOUT_CLASSIFICATION,// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
EMF,WITHOUT_CLASSIFICATION,// Create a pattern dictionary for each. //
EMF,WITHOUT_CLASSIFICATION,// note: segments.length > 0 -> hierarchical
EMF,WITHOUT_CLASSIFICATION,// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //
EMF,WITHOUT_CLASSIFICATION,// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC
EMF,WITHOUT_CLASSIFICATION,//  We expect this failure when running stand-alone //
EMF,WITHOUT_CLASSIFICATION,// use a stack to accumulate segments
EMF,WITHOUT_CLASSIFICATION,// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //
EMF,WITHOUT_CLASSIFICATION,// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
EMF,WITHOUT_CLASSIFICATION,// For isSet we only need to check the bit and return -1 when the bit is 0. //
EMF,WITHOUT_CLASSIFICATION,// If the value index set there's no index to return. //
EMF,WITHOUT_CLASSIFICATION,// Empty statement.
EMF,WITHOUT_CLASSIFICATION,//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value URIC_HI URIC_LO true true);
EMF,WITHOUT_CLASSIFICATION,// This just notifies those things that are affected by the selection. //
EMF,WITHOUT_CLASSIFICATION,// no validation needed since all components are from existing URIs
EMF,WITHOUT_CLASSIFICATION,// If the result is not a proxy cache it. //
EMF,WITHOUT_CLASSIFICATION,// Server based authority.
EMF,WITHOUT_CLASSIFICATION,// can check against path characters because the set // is the same except for '/' which we've already excluded.
EMF,WITHOUT_CLASSIFICATION,// Initialize all the fields from the command parameter. //
EMF,WITHOUT_CLASSIFICATION,// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */"
EMF,WITHOUT_CLASSIFICATION,// IPv6 addresses are 128-bit so there can be at most eight sections.
EMF,WITHOUT_CLASSIFICATION,"/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */"
EMF,WITHOUT_CLASSIFICATION,//return value != null && validate(value SEGMENT_CHAR_HI SEGMENT_CHAR_LO true true);
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode org.eclipse.emf.codegen.merge.java.facade.JNode boolean)   */"
EMF,WITHOUT_CLASSIFICATION,// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //
EMF,WITHOUT_CLASSIFICATION,// This might be invalid or an IPv4address. If it's potentially an IPv4address // backup to just after the last valid character that matches hexseq.
EMF,WITHOUT_CLASSIFICATION,// Determine the index for the feature and return the value at that index if an index is assigned. //
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Determine if an index is assigned. //
EMF,WITHOUT_CLASSIFICATION,// Determine the index. //
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// If it's newly allocated add a new value and indicate there was no previous value. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */"
EMF,WITHOUT_CLASSIFICATION,// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction
EMF,WITHOUT_CLASSIFICATION,// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.
EMF,WITHOUT_CLASSIFICATION,// Forward the interned value. //
EMF,WITHOUT_CLASSIFICATION,// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //
EMF,WITHOUT_CLASSIFICATION,// If it's a parameterized type... //
EMF,WITHOUT_CLASSIFICATION,// both prefix (if any) a localpart must be valid NCName
EMF,WITHOUT_CLASSIFICATION,// The instance class name is the erasure. //
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// If the name isn't a qualified name and isn't a primitive type it's assumed to denote some arbitrary type parameter. //
EMF,WITHOUT_CLASSIFICATION,// Fill 68 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Be sure to pick up any trailing [] brackets. //
EMF,WITHOUT_CLASSIFICATION,// If the bundle can't be found the normal way try to find it as the base URL. // If that also doesn't work rethrow the original exception. //
EMF,WITHOUT_CLASSIFICATION,// Is the first character a special character i.e. something other than '@'? //
EMF,WITHOUT_CLASSIFICATION,// note: isRelative() -> hierarchical
EMF,WITHOUT_CLASSIFICATION,// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise the value of the first invalid // segment.
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Is it the start of a source URI of an annotation? //
EMF,WITHOUT_CLASSIFICATION,// Recompute the read only state. //
EMF,WITHOUT_CLASSIFICATION,//return value == null || validate(value SEGMENT_CHAR_HI SEGMENT_CHAR_LO true true);
EMF,WITHOUT_CLASSIFICATION,// Refresh any actions that may become enabled or disabled. //
EMF,WITHOUT_CLASSIFICATION,// Go through class super types to catch constraints from other packages
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Empty.
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// if the node is less than 1 line long but its contents is replaced by multiple lines // comment out each line in it
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Find the closing '%' //
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */"
EMF,WITHOUT_CLASSIFICATION,// cause a syntax error
EMF,WITHOUT_CLASSIFICATION,// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Decode all encoded characters. //
EMF,WITHOUT_CLASSIFICATION,// If that fails determine the URL for the class itself. // The URL will be of one of the following forms // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Check for a count i.e. a '.' followed by a number. //
EMF,WITHOUT_CLASSIFICATION,// Look for trailing count. //
EMF,WITHOUT_CLASSIFICATION,// Look for a matching named element. //
EMF,WITHOUT_CLASSIFICATION,// return eContainerFeatureID;
EMF,WITHOUT_CLASSIFICATION,// Find the uppermost class loader in the hierarchy that can load the class. //
EMF,WITHOUT_CLASSIFICATION,// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// JControlModel.class is used with classNames that were not found //
EMF,WITHOUT_CLASSIFICATION,// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Register with the upper most class loader that's able to load the class. //
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// This let's us test whether the string exists as a file. // If not we try as a URI. //
EMF,WITHOUT_CLASSIFICATION,// ...or if it's a wildcard or group feature.  Also make it FeatureMap-typed. //
EMF,WITHOUT_CLASSIFICATION,// First try to see if this class has an eInstance  //
EMF,WITHOUT_CLASSIFICATION,// Try and get the resource selection to determine a current directory for the file dialog. //
EMF,WITHOUT_CLASSIFICATION,// Remember the file. //
EMF,WITHOUT_CLASSIFICATION,// Do the work within an operation. //
EMF,WITHOUT_CLASSIFICATION,// no authority: use base's
EMF,WITHOUT_CLASSIFICATION,// Create a resource set //
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */"
EMF,WITHOUT_CLASSIFICATION,// Get the URI of the model file. //
EMF,WITHOUT_CLASSIFICATION,// Returns true if the given value is an archive scheme as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default "jar" "zip" and "archive" are considered archives.
EMF,WITHOUT_CLASSIFICATION,// If the feature is a bidirectional reference with a multiplicity-many reverse a composite reverse // or a multiplicity-1 reverse that is already set (on value) then we'll switch things around and  // execute this command a little differently because otherwise it's not undoable. //
EMF,WITHOUT_CLASSIFICATION,// Add the initial model object to the contents. //
EMF,WITHOUT_CLASSIFICATION,// If a sibling has been specified add the best index possible to each CommandParameter. //
EMF,WITHOUT_CLASSIFICATION,// Save the contents of the resource to the file system. //
EMF,WITHOUT_CLASSIFICATION,// There are attributes to handle.
EMF,WITHOUT_CLASSIFICATION,// Make sure the file ends in ".ecore". //
EMF,WITHOUT_CLASSIFICATION,// genPackage can be a broken proxy
EMF,WITHOUT_CLASSIFICATION,// Create a page set the title and the initial model file name. //
EMF,WITHOUT_CLASSIFICATION,// We never directly set a multiplicity-many feature to a list directly.  Instead we remove the old values // values move the values that remain and insert the new values.  If all old values are removed we'll still // set it to an empty list or unset it as appropriate.  //
EMF,WITHOUT_CLASSIFICATION,// Get the resource... //
EMF,WITHOUT_CLASSIFICATION,// This gives us a directory... //
EMF,WITHOUT_CLASSIFICATION,// Set this for the container. //
EMF,WITHOUT_CLASSIFICATION,// if the relative path is empty or ends in an empty segment a parent  // reference or a self reference add a trailing separator to a // non-empty path
EMF,WITHOUT_CLASSIFICATION,// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName unless this is the key or value of a map entry for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature i.e. either "is" or "get" is prefixed to getAccessorName
EMF,WITHOUT_CLASSIFICATION,// For a many-to-many association the command can only be undoable if the value or owner is last in its // respective list since the undo will include an inverse add.  So if the value is last but the owner is // not we create an undoable compound command that removes from the opposite end and then inserts the new // value. //
EMF,WITHOUT_CLASSIFICATION,// eVirtualIndexBits[offset] = newIndexBits;
EMF,WITHOUT_CLASSIFICATION,// If there is no list to add to no collection or an empty collection from which to add or the index is out of range... //
EMF,WITHOUT_CLASSIFICATION,// eVirtualValues = newValues;
EMF,WITHOUT_CLASSIFICATION,// This is package  // so check the package information if this is in cat file. // If it is then load the .cat file into the tree thereby traversing it; // otherwise just traverse the tree. //
EMF,WITHOUT_CLASSIFICATION,// no device: use base's
EMF,WITHOUT_CLASSIFICATION,// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
EMF,WITHOUT_CLASSIFICATION,// Setting at an index. Make sure the index is valid the type is valid and the value isn't already in a // unique feature. Record the old value. //
EMF,WITHOUT_CLASSIFICATION,// since base must be hierarchical and since a non-hierarchical URI // must have both scheme and opaque part the complete absolute URI is // needed to resolve to a non-hierarchical URI
EMF,WITHOUT_CLASSIFICATION,// Make sure it's okay. //
EMF,WITHOUT_CLASSIFICATION,// If the other end is a many then we should remove the owner from the old value's opposite feature so that undo will put it back. //
EMF,WITHOUT_CLASSIFICATION,// Look for a likely plugin name. //
EMF,WITHOUT_CLASSIFICATION,// Create type parameters
EMF,WITHOUT_CLASSIFICATION,//if found "no data" just return null
EMF,WITHOUT_CLASSIFICATION,// If it's a platform plugin URI include it in the map. //
EMF,WITHOUT_CLASSIFICATION,// Keep track of all the entry features that are already in the feature map and that will be added excluding // XML text CDATA and comments (if we're in a mixed type). //
EMF,WITHOUT_CLASSIFICATION,// else keep authority device path and query
EMF,WITHOUT_CLASSIFICATION,// Determine the values to be added and add them at the right position. //
EMF,WITHOUT_CLASSIFICATION,// note: it's okay for two URIs to share a segments array since // neither will ever modify it
EMF,WITHOUT_CLASSIFICATION,// Find the fragment root so that we can generate to the right location (by default). //
EMF,WITHOUT_CLASSIFICATION,"/*   * Returns the base portion of the dynamic template path.   */"
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */"
EMF,WITHOUT_CLASSIFICATION,// Remember it. //
EMF,WITHOUT_CLASSIFICATION,// Either delegate the call or return nothing. //
EMF,WITHOUT_CLASSIFICATION,// Now we could check that the adapter implements interface ITableItemFontProvider. //
EMF,WITHOUT_CLASSIFICATION,// It's okay for there not be a precompiled template so fail quietly.
EMF,WITHOUT_CLASSIFICATION,// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //
EMF,WITHOUT_CLASSIFICATION,// There must be at least one match. //
EMF,WITHOUT_CLASSIFICATION,"/*     * (non-Javadoc) Method declared on Dialog.     */"
EMF,WITHOUT_CLASSIFICATION,// GenTypeParameter
EMF,WITHOUT_CLASSIFICATION,// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element //
EMF,WITHOUT_CLASSIFICATION,// GenTypedElement
EMF,WITHOUT_CLASSIFICATION,// The try/catch provides backwards compatibility with the old resource // key "_UI_CreateChild_label" and should be removed at the next // release when we can expect users to regenerate. //
EMF,WITHOUT_CLASSIFICATION,// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);
EMF,WITHOUT_CLASSIFICATION,//GenRuntimeVersion
EMF,WITHOUT_CLASSIFICATION,// These will be the children belonging to this feature. //
EMF,WITHOUT_CLASSIFICATION,//GenModelPackage
EMF,WITHOUT_CLASSIFICATION,// There is no executable command so we'd better nix the whole deal. //
EMF,WITHOUT_CLASSIFICATION,// this returns either "attribute" "attribute list" "reference" or "reference list"
EMF,WITHOUT_CLASSIFICATION,// Do the encoding. //
EMF,WITHOUT_CLASSIFICATION,// Get the target object from the item widget and the mouse location in it. //
EMF,WITHOUT_CLASSIFICATION,// add variable fragment to new declaration
EMF,WITHOUT_CLASSIFICATION,// Determine if we can create a valid command at the current location. //
EMF,WITHOUT_CLASSIFICATION,// Load the resource through the editing domain. //
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage   *      java.lang.String)   */"
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// Otherwise the source should be available now as event.data and we // can create the command. //
EMF,WITHOUT_CLASSIFICATION,// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,//GenModelFactory
EMF,WITHOUT_CLASSIFICATION,// current document reference: keep no path or query
EMF,WITHOUT_CLASSIFICATION,// Ignore if there is not substantial change. //
EMF,WITHOUT_CLASSIFICATION,// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case the whole string // is turned into lower case. // e.g. CPU -> cpu
EMF,WITHOUT_CLASSIFICATION,// Look for each unwrapped object as a value of a wrapper replacing it with the first one found. //
EMF,WITHOUT_CLASSIFICATION,// GenAnnotation
EMF,WITHOUT_CLASSIFICATION,// It must be an unsettable feature to be empty and considered set. //
EMF,WITHOUT_CLASSIFICATION,// matching authorities and no device or path removal
EMF,WITHOUT_CLASSIFICATION,// always keep fragment even if null and use scheme from base; // no validation needed since all components are from existing URIs
EMF,WITHOUT_CLASSIFICATION,// Check to see if a container is being put into a contained object. //
EMF,WITHOUT_CLASSIFICATION,//(new AddCommand(domain mapping mapping.ePackageMapping().getMapping_Nested() siblingsToReparent));
EMF,WITHOUT_CLASSIFICATION,// // Static initialization //
EMF,WITHOUT_CLASSIFICATION,/* Trick to import java.util.* without warnings */
EMF,WITHOUT_CLASSIFICATION,// Do allow an existing MANIFEST.MF to be overwritten since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
EMF,WITHOUT_CLASSIFICATION,// If there isn't an executable command we should maybe try a copy operation but only if we're allowed and not doing a link. //
EMF,WITHOUT_CLASSIFICATION,"/*     * The type string must be qualified by its package uri e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */"
EMF,WITHOUT_CLASSIFICATION,// This will be the default return value. //
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */"
EMF,WITHOUT_CLASSIFICATION,// Try again. //
EMF,WITHOUT_CLASSIFICATION,// Otherwise we could check that the adapter implements interface IItemColorProvider. //
EMF,WITHOUT_CLASSIFICATION,// Now we could check that the adapter implements interface ITableItemColorProvider. //
EMF,WITHOUT_CLASSIFICATION,// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //
EMF,WITHOUT_CLASSIFICATION,//GenEnumImpl
EMF,WITHOUT_CLASSIFICATION,// We've switch the operation! //
EMF,WITHOUT_CLASSIFICATION,// Select the new file resource in the current view. //
EMF,WITHOUT_CLASSIFICATION,// If the type isn't Object we need to cast. If it's a primitive we need to unbox. //
EMF,WITHOUT_CLASSIFICATION,// use a stack to accumulate segments of base except for the last // (i.e. skip trailing separator and anything following it) and of // relative path
EMF,WITHOUT_CLASSIFICATION,// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //
EMF,WITHOUT_CLASSIFICATION,// We can't have a null name in case we're using EMOF serialization. //
EMF,WITHOUT_CLASSIFICATION,// Determine the object's parent. //
EMF,WITHOUT_CLASSIFICATION,// If it's an interface then it will be treated as an EClass //
EMF,WITHOUT_CLASSIFICATION,// this returns either "EAttribute" or "EReference"
EMF,WITHOUT_CLASSIFICATION,// Continue to compute the offset.
EMF,WITHOUT_CLASSIFICATION,// Defer the handling of the opposite. //
EMF,WITHOUT_CLASSIFICATION,// this guard is for extra security but should not be necessary
EMF,WITHOUT_CLASSIFICATION,// Do this first for better error message during setEParameterProperties. //
EMF,WITHOUT_CLASSIFICATION,// set properties
EMF,WITHOUT_CLASSIFICATION,// Index counters into indices1 indices2 and indices.  //
EMF,WITHOUT_CLASSIFICATION,// Just remember it; it's encoded later during execution which is more efficient. //
EMF,WITHOUT_CLASSIFICATION,// Remove objects from the owner list by index starting from the end. //
EMF,WITHOUT_CLASSIFICATION,//GenModelFactoryImpl
EMF,WITHOUT_CLASSIFICATION,// We don't want to insert an object before or after itself... //
EMF,WITHOUT_CLASSIFICATION,// add IANA to Java encoding mappings.
EMF,WITHOUT_CLASSIFICATION,// Create a code formatter for this compilation unit if needed
EMF,WITHOUT_CLASSIFICATION,// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //
EMF,WITHOUT_CLASSIFICATION,// Get the resource parent if its a file. //
EMF,WITHOUT_CLASSIFICATION,// We'd like the collection of replacements selected after this replace completes. //
EMF,WITHOUT_CLASSIFICATION,// Repeatedly select the lower index and corresponding object and advance past the selected pair. //
EMF,WITHOUT_CLASSIFICATION,// Wrap any new children and add them to the map. Remove each current child from the set of old children. //
EMF,WITHOUT_CLASSIFICATION,// Ignore this soft dependency when it's not satisfied.
EMF,WITHOUT_CLASSIFICATION,// Simply remove the object from the owner list. //
EMF,WITHOUT_CLASSIFICATION,// Make up a unique new name here. //
EMF,WITHOUT_CLASSIFICATION,// Prepare for CreateChild item addition or removal. //
EMF,WITHOUT_CLASSIFICATION,// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //
EMF,WITHOUT_CLASSIFICATION,// J9 2.2 has problems assigning null to a Class variable. //
EMF,WITHOUT_CLASSIFICATION,// always returns original value
EMF,WITHOUT_CLASSIFICATION,// Use the original to do the add but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy // as would be the case for a cross domain copy in the mapping framework // that we do actually use the converted instance. //
EMF,WITHOUT_CLASSIFICATION,// add added super interfaces to the array
EMF,WITHOUT_CLASSIFICATION,// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //
EMF,WITHOUT_CLASSIFICATION,// not supported in JDOM
EMF,WITHOUT_CLASSIFICATION,// only 1 fragment left - revert the changes
EMF,WITHOUT_CLASSIFICATION,// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //
EMF,WITHOUT_CLASSIFICATION,// split is performed
EMF,WITHOUT_CLASSIFICATION,// For RemoveCommand we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //
EMF,WITHOUT_CLASSIFICATION,// not supported in JDOM
EMF,WITHOUT_CLASSIFICATION,// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());
EMF,WITHOUT_CLASSIFICATION,// name already contains ".*" - unset on demand property
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Three arguments are expected: the .xml getControlModel() URI the source java URI and the target java URI. //
EMF,WITHOUT_CLASSIFICATION,// For lists maps and feature maps the default is many-valued which can be overridden by an upper-bound declaration. //
EMF,WITHOUT_CLASSIFICATION,// If there is no Ecore representation or it's invalid e.g. when - is used to omit a specification then just use the Java representation. //
EMF,WITHOUT_CLASSIFICATION,// Containers are transient by default unless explicitly annotated otherwise. //
EMF,WITHOUT_CLASSIFICATION,// Consider each GenModel location URI for each required plugin. //
EMF,WITHOUT_CLASSIFICATION,// Prepare for CreateSibling item addition or removal. //
EMF,WITHOUT_CLASSIFICATION,// Get extra icon and bounds for first column of ExtendedTableTreeItem. //
EMF,WITHOUT_CLASSIFICATION,// Force an update because Eclipse hides empty menus now. //
EMF,WITHOUT_CLASSIFICATION,// If the notification is an IViewerNotification it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh which determines how to refresh the viewer directly from the model // notification. //
EMF,WITHOUT_CLASSIFICATION,// Remove any menu items for old selection. //
EMF,WITHOUT_CLASSIFICATION,// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //
EMF,WITHOUT_CLASSIFICATION,// Query the new selection for appropriate new child/sibling descriptors //
EMF,WITHOUT_CLASSIFICATION,// Generate actions for selection; populate and redraw the menus. //
EMF,WITHOUT_CLASSIFICATION,// Draw ellipses offset if down. //
EMF,WITHOUT_CLASSIFICATION,// Empty extension to limit the effect of suppressing the deprecation warning.
EMF,WITHOUT_CLASSIFICATION,"/*  protected Command createSetCommand(EditingDomain domain Object owner Object feature Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain SetCommand.class new CommandParameter(owner feature value));  }  protected Command createCopyCommand(EditingDomain domain Object owner CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain CopyCommand.class new CommandParameter(owner null helper));  }  protected Command createCreateCopyCommand(EditingDomain domain Object owner CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain CreateCopyCommand.class new CommandParameter(owner null helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain Object owner CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain InitializeCopyCommand.class new CommandParameter(owner null helper));  }  protected Command createRemoveCommand(EditingDomain domain Object owner Object feature Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain RemoveCommand.class new CommandParameter(owner feature collection));  }  protected Command createReplaceCommand(EditingDomain domain Object owner Object feature Object value Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain ReplaceCommand.class new CommandParameter(owner feature value collection));  }  protected Command createAddCommand(EditingDomain domain Object owner Object feature Collection collection int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain ReplaceCommand.class new CommandParameter(owner feature collection index));  }  protected Command createMoveCommand(EditingDomain domain Object owner Object feature Object value int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain ReplaceCommand.class new CommandParameter(owner feature value index));  }  protected Command createDragAndDropCommand    (EditingDomain domain Object owner float location int operations int operation Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location operations operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner domain DragAndDropCommand.class new CommandParameter(owner detail collection));  }*/"
EMF,WITHOUT_CLASSIFICATION,// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //
EMF,WITHOUT_CLASSIFICATION,// Look into SubContributionItems //
EMF,WITHOUT_CLASSIFICATION,// else keep device path and query
EMF,WITHOUT_CLASSIFICATION,// If it's really a contained child return the feature for it. //
EMF,WITHOUT_CLASSIFICATION,// We'll need to keep track of the information we use to create the // command so that we can recreate it in drop.
EMF,WITHOUT_CLASSIFICATION,// Changes to the parameters should also update the label. //
EMF,WITHOUT_CLASSIFICATION,// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true collapsible segments include any empty segments except for the // last segment as well as and parent and self references.  If // preserveRootsParents is false parent references are not collapsible if // they are the first segment or preceded only by other parent // references.
EMF,WITHOUT_CLASSIFICATION,//The shared instance.
EMF,WITHOUT_CLASSIFICATION,// Ignore the unset notification for an isMany feature; the value is boolean in this case. //
EMF,WITHOUT_CLASSIFICATION,// If necessary get a command that replaces unwrapped values by their wrappers in the result and affected objects. //
EMF,WITHOUT_CLASSIFICATION,// InputStream contents = new ByteArrayInputStream(bytes);
EMF,WITHOUT_CLASSIFICATION,// Now we could check that the adapter implements interface ITableItemLabelProvider. //
EMF,WITHOUT_CLASSIFICATION,// If we have children to remove for this feature create a command for it. //
EMF,WITHOUT_CLASSIFICATION,// Create helpers to cache and supply information for unique naming
EMF,WITHOUT_CLASSIFICATION,//GenAnnotationImpl
EMF,WITHOUT_CLASSIFICATION,// create OK and Cancel buttons by default
EMF,WITHOUT_CLASSIFICATION,// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292
EMF,WITHOUT_CLASSIFICATION,// Walk the fields. //
EMF,WITHOUT_CLASSIFICATION,// index of first segment that is different between endPath and startPath
EMF,WITHOUT_CLASSIFICATION,// If the local transfer supports this data type switch to that data type //
EMF,WITHOUT_CLASSIFICATION,// Create the options model. //
EMF,WITHOUT_CLASSIFICATION,// drop last segment from base as in resolving
EMF,WITHOUT_CLASSIFICATION,// treat an empty base path as the root absolute path
EMF,WITHOUT_CLASSIFICATION,// Create enums
EMF,WITHOUT_CLASSIFICATION,// This is for backwards compatibility since the constructor may have been overridden before it was expected // to set actionDelegate. //
EMF,WITHOUT_CLASSIFICATION,//(eType instanceof EDataType)
EMF,WITHOUT_CLASSIFICATION,//GenModelPackageImpl
EMF,WITHOUT_CLASSIFICATION,// Determine the required plugins. //
EMF,WITHOUT_CLASSIFICATION,// In column 0 the drop-down is indented past the collapse/expand icon. //
EMF,WITHOUT_CLASSIFICATION,// Does nothing
EMF,WITHOUT_CLASSIFICATION,// user rejects a relative path: keep absolute or no path
EMF,WITHOUT_CLASSIFICATION,// Draw the icons. //
EMF,WITHOUT_CLASSIFICATION,// I assume that the editorInput is a file object. //
EMF,WITHOUT_CLASSIFICATION,// matching devices and no path removal
EMF,WITHOUT_CLASSIFICATION,// Clear the import manager
EMF,WITHOUT_CLASSIFICATION,// order genPackages by putting firstGenPackage (if non-null) first
EMF,WITHOUT_CLASSIFICATION,// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //
EMF,WITHOUT_CLASSIFICATION,//GenFeatureImpl
EMF,WITHOUT_CLASSIFICATION,"/*        text = new Text(composite SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/"
EMF,WITHOUT_CLASSIFICATION,// If the value is null the key is a referenced object
EMF,WITHOUT_CLASSIFICATION,// keep query and select relative or absolute path based on length
EMF,WITHOUT_CLASSIFICATION,"/*   * Set from {@link #isChildren children} if unset and return value.   */"
EMF,WITHOUT_CLASSIFICATION,// Handle the creation of the model from the modelFile. //
EMF,WITHOUT_CLASSIFICATION,"/*   * For debugging purposes.  May be removed in the future.   */"
EMF,WITHOUT_CLASSIFICATION,// Go through class super types to catch any from other packages
EMF,WITHOUT_CLASSIFICATION,// For the control case we need a dialog to ask for the URI and obtain the resource then we create the command. //
EMF,WITHOUT_CLASSIFICATION,// support for 1047 as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
EMF,WITHOUT_CLASSIFICATION,// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?
EMF,WITHOUT_CLASSIFICATION,// scan feature lists for those with multiple elements and return them
EMF,WITHOUT_CLASSIFICATION,// Nothing more to do and we don't want to do the default stuff below. //
EMF,WITHOUT_CLASSIFICATION,//GenTypedElementImpl
EMF,WITHOUT_CLASSIFICATION,//data type
EMF,WITHOUT_CLASSIFICATION,// else keep shorter absolute path
EMF,WITHOUT_CLASSIFICATION,// If we aren't doing an operation... //
EMF,WITHOUT_CLASSIFICATION,// EObject is handled by default case
EMF,WITHOUT_CLASSIFICATION,// Clean up the command if there is one.  If we need it again in drop // we'll recreate it from dragAndDropCommandInformation. //
EMF,WITHOUT_CLASSIFICATION,// Changes to parameter types should also update the operation's label. //
EMF,WITHOUT_CLASSIFICATION,// Convert to an EReference. //
EMF,WITHOUT_CLASSIFICATION,// escaped unicode form
EMF,WITHOUT_CLASSIFICATION,// If we've found thing with type parameters search them for a match.
EMF,WITHOUT_CLASSIFICATION,// Filter out types that aren't permitted. //
EMF,WITHOUT_CLASSIFICATION,// We need the wrapper not the item provider to handle a DragAndDropCommand; the move add remove etc. commands // that implement it will have their values unwrapped as usual. //
EMF,WITHOUT_CLASSIFICATION,// Restore the persistent command stack if need be. //
EMF,WITHOUT_CLASSIFICATION,// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //
EMF,WITHOUT_CLASSIFICATION,// An operation is declared via the kind property or for backwards compatibility by specifying parameters // (though attribute or reference kind takes precedence). //
EMF,WITHOUT_CLASSIFICATION,// No index specified when removing all elements. //
EMF,WITHOUT_CLASSIFICATION,// Check if the name is qualified //
EMF,WITHOUT_CLASSIFICATION,// Avoid allowing choices that will lead to duplicates. //
EMF,WITHOUT_CLASSIFICATION,// return getPresentationPackageName() + "." + getEditorPluginClassName();
EMF,WITHOUT_CLASSIFICATION,// // EMF.Edit generation //
EMF,WITHOUT_CLASSIFICATION,// Find the modeled package for the import and look up the name there. //
EMF,WITHOUT_CLASSIFICATION,//  Avoid allowing a choice that will lead to duplicates. //
EMF,WITHOUT_CLASSIFICATION,// Just to be helpful we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But we won't do this if recordDemandCreateEDataType is false so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //
EMF,WITHOUT_CLASSIFICATION,// Ensure that there are enough type arguments to match the number of type parameters. //
EMF,WITHOUT_CLASSIFICATION,// Wrappers from the old command parameter must be considered in order for cut and paste to work. //
EMF,WITHOUT_CLASSIFICATION,// You cannot add any children for a type parameter. //
EMF,WITHOUT_CLASSIFICATION,// Look for the sibling value or an equivalent in the new child's feature. If it is found the child should // immediately follow it. //
EMF,WITHOUT_CLASSIFICATION,// <clinit>()
EMF,WITHOUT_CLASSIFICATION,// Otherwise you can't make it a child. //
EMF,WITHOUT_CLASSIFICATION,// Let them choose type parameters as well. //
EMF,WITHOUT_CLASSIFICATION,//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
EMF,WITHOUT_CLASSIFICATION,//TBD
EMF,WITHOUT_CLASSIFICATION,// If it is a list type value... //
EMF,WITHOUT_CLASSIFICATION,//GenPackageImpl
EMF,WITHOUT_CLASSIFICATION,//   protected JETEmitter extendedItemProviderEmitter = null;
EMF,WITHOUT_CLASSIFICATION,// Iterate over all the child references to factor each child to the right reference. //
EMF,WITHOUT_CLASSIFICATION,// Don't care about plugin class; we can generate a model without one.
EMF,WITHOUT_CLASSIFICATION,//subcommands.appendAndExecute(new RemoveCommand(domain mapping mapping.ePackageMapping().getMapping_Nested() nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain parentMapping parentMapping.ePackageMapping().getMapping_Nested() nestedMappings));
EMF,WITHOUT_CLASSIFICATION,// When the value is changed the property sheet page doesn't update the property sheet viewer input // before refreshing and this gets called on the obsolete wrapper. So we need to read directly from the // model object. // //return value;
EMF,WITHOUT_CLASSIFICATION,//GenModelImpl
EMF,WITHOUT_CLASSIFICATION,// Otherwise we could check that the adapter implements interface IItemLabelProvider. //
EMF,WITHOUT_CLASSIFICATION,// 6 is the size of (value
EMF,WITHOUT_CLASSIFICATION,// Do not allow an existing MANIFEST.MF to be overwritten as the tests project is originally generated from scratch. //
EMF,WITHOUT_CLASSIFICATION,// user demands a relative path or the absolute path is longer
EMF,WITHOUT_CLASSIFICATION,// It's definitely a package if expected constants eNAME eNS_PREFIX or eNS_URI appear. //
EMF,WITHOUT_CLASSIFICATION,// bottom-label-case
EMF,WITHOUT_CLASSIFICATION,// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //
EMF,WITHOUT_CLASSIFICATION,// Do not allow an existing build.properties to be overwritten as the tests project is originally generated from scratch. //
EMF,WITHOUT_CLASSIFICATION,// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Handle eOpposite specially. //
EMF,WITHOUT_CLASSIFICATION,// If this owned object is equal to one from the collection... //
EMF,WITHOUT_CLASSIFICATION,// If there is more than one exact match we must get an index number; //
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Filter out classes that aren't permitted. //
EMF,WITHOUT_CLASSIFICATION,//GenModelValidator
EMF,WITHOUT_CLASSIFICATION,// Read all the values into an array. //
EMF,WITHOUT_CLASSIFICATION,// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */"
EMF,WITHOUT_CLASSIFICATION,//GenModelSwitch
EMF,WITHOUT_CLASSIFICATION,// Now we'll do recursive MatchMapping. // (We need to iterate over a copy since we modify the underlying list in the loop.)
EMF,WITHOUT_CLASSIFICATION,// This guard is needed to ensure that clear doesn't make the resource become loaded. //
EMF,WITHOUT_CLASSIFICATION,// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //
EMF,WITHOUT_CLASSIFICATION,// If we haven't yet encrypted or decrypted generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.
EMF,WITHOUT_CLASSIFICATION,// colorMap.put(CLR_GRAD_START clr1);
EMF,WITHOUT_CLASSIFICATION,// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY
EMF,WITHOUT_CLASSIFICATION,// We'd like the collection of things added to be selected after this command completes. //
EMF,WITHOUT_CLASSIFICATION,// Iterate over the children to find the owner. //
EMF,WITHOUT_CLASSIFICATION,// Handle the same document proxies which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these we know that funny proxies are now resolved as if they were handled as IDREFs. //
EMF,WITHOUT_CLASSIFICATION,// Merges this URI's relative path with the base non-relative path.  If // base has no path treat it as the root absolute path unless this has // no path either.
EMF,WITHOUT_CLASSIFICATION,// Make up a unique new name here. // //$NON-NLS-1$
EMF,WITHOUT_CLASSIFICATION,//removeCommand = RemoveCommand.create(domain mappingRoot mappingRoot.ePackageMapping().getMapping_Nested() mappingRoot.getNested());
EMF,WITHOUT_CLASSIFICATION,// We don't want to move insert an object before or after itself... //
EMF,WITHOUT_CLASSIFICATION,// The CipherOutputStream shoudln't close the underlying stream //
EMF,WITHOUT_CLASSIFICATION,// return getProviderPackageName() + "." + getEditPluginClassName();
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"
EMF,WITHOUT_CLASSIFICATION,// an absolute URI needs no resolving
EMF,WITHOUT_CLASSIFICATION,// note: these assertions imply that neither this nor the base URI has a // relative path; thus both have either an absolute path or no path
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode org.eclipse.emf.codegen.merge.java.facade.JNode boolean)   */"
EMF,WITHOUT_CLASSIFICATION,// Simply add the collection to the list. //
EMF,WITHOUT_CLASSIFICATION,// note: device != null -> hierarchical
EMF,WITHOUT_CLASSIFICATION,// <p>A valid fragment may be null or contain any allowed URI characters.
EMF,WITHOUT_CLASSIFICATION,"/*   * Returns the dynamic template path an ordered list of URIs corresponding to locations under which to find   * templates.   */"
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */"
EMF,WITHOUT_CLASSIFICATION,// Ignore the exception and return false.
EMF,WITHOUT_CLASSIFICATION,// note: query != null -> hierarchical
EMF,WITHOUT_CLASSIFICATION,//return value == null || validate(value URIC_HI URIC_LO true true);
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,//datatype
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */"
EMF,WITHOUT_CLASSIFICATION,// We do not want to diagnose any error that have already been diagnosed by a super type. //
EMF,WITHOUT_CLASSIFICATION,// Creates the model from the editor input //
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask // as well as optionally non-ASCII characters 0xA0 and above and // also optionally escape sequences of % followed by two hex digits. // This method is used for the new strict URI validation that is not // not currently in place.
EMF,WITHOUT_CLASSIFICATION,// If the workbench part changes... //
EMF,WITHOUT_CLASSIFICATION,/* backward compatibility with old generated overrides */
EMF,WITHOUT_CLASSIFICATION,// For a many-to-1 we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //
EMF,WITHOUT_CLASSIFICATION,// add all converted fields after the last final field  // that is used in initializers of the converted fields
EMF,WITHOUT_CLASSIFICATION,"/*   * Char buffer for HTML data   */"
EMF,WITHOUT_CLASSIFICATION,// if endPath is shorter than startPath the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed all preceding segments can be considered non- // empty and followed by a separator while the last segment of endPath // will either be non-empty and not followed by a separator or just empty
EMF,WITHOUT_CLASSIFICATION,// Ignore because we'll rethrow the original exception eventually.
EMF,WITHOUT_CLASSIFICATION,// path form demands an absolute path: keep it and query
EMF,WITHOUT_CLASSIFICATION,// Continue processing dynamically as normal.
EMF,WITHOUT_CLASSIFICATION,// Iterate over all the operations but skip all the operations in the first super. //
EMF,WITHOUT_CLASSIFICATION,// For feature maps test that the entry feature is a valid type that the entry value is an instance of it // that there is not already something in a document root and that there is not already something in a // single-valued entry feature. //
EMF,WITHOUT_CLASSIFICATION,// pure obfuscated genius!
EMF,WITHOUT_CLASSIFICATION,// Match close.
EMF,WITHOUT_CLASSIFICATION,// Take care of the quoting here.
EMF,WITHOUT_CLASSIFICATION,// skip empty segments and self references; push everything else
EMF,WITHOUT_CLASSIFICATION,// For a 1-to-many association doing the set as a remove and add from the other end will make it undoable. // In particular if there is an existing non-null value we first need to remove it from the other end so // that it will be reinserted at the correct index on undo.  //
EMF,WITHOUT_CLASSIFICATION,// Close NCSA like attributes "->"
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */"
EMF,WITHOUT_CLASSIFICATION,// super is called on converted node
EMF,WITHOUT_CLASSIFICATION,// Convert the selection to a collection of the selected objects. //
EMF,WITHOUT_CLASSIFICATION,// assume length will grow by 10% (average line length is 20 characters)
EMF,WITHOUT_CLASSIFICATION,// Ignore the version
EMF,WITHOUT_CLASSIFICATION,// Reached EOF:
EMF,WITHOUT_CLASSIFICATION,// Close variable like attributes "%>"
EMF,WITHOUT_CLASSIFICATION,// XMLesque Close tags
EMF,WITHOUT_CLASSIFICATION,// Command line execution methods
EMF,WITHOUT_CLASSIFICATION,// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //
EMF,WITHOUT_CLASSIFICATION,// For a many-to-1 or 1-to-1 association if the opposite reference on the new value is already set to // something we need a compound command that first explicitly removes that reference so that it will be // restored in the undo. //
EMF,WITHOUT_CLASSIFICATION,/////////////////////////////////  PUSH  /////////////////////////////////////
EMF,WITHOUT_CLASSIFICATION,// check whether the character is in the range 0x30 ~ 0x39
EMF,WITHOUT_CLASSIFICATION,/////////////////////////////////  SWEEP  /////////////////////////////////////
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */"
EMF,WITHOUT_CLASSIFICATION,/////////////////////////////////  PULL  /////////////////////////////////////
EMF,WITHOUT_CLASSIFICATION,// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage it doesn't need to be added to // referencedEPackages.
EMF,WITHOUT_CLASSIFICATION,"/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/"
EMF,WITHOUT_CLASSIFICATION,// If we're not setting a new resource attach it to the old container's resource.
EMF,WITHOUT_CLASSIFICATION,// apply target parent pattern first
EMF,WITHOUT_CLASSIFICATION,// Include each required plugin of the starting project and the exported ones of all the required projects. //
EMF,WITHOUT_CLASSIFICATION,// do not crash when control model is not set
EMF,WITHOUT_CLASSIFICATION,/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */"
EMF,WITHOUT_CLASSIFICATION,/////////////////////////////////  SORT  /////////////////////////////////////
EMF,WITHOUT_CLASSIFICATION,// We will create an EAttribute EReference or an EOperation. //
EMF,WITHOUT_CLASSIFICATION,// Read value until delimiter is found:
EMF,WITHOUT_CLASSIFICATION,// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //
EMF,WITHOUT_CLASSIFICATION,// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");
EMF,WITHOUT_CLASSIFICATION,// redo the markup since nodes changed now
EMF,WITHOUT_CLASSIFICATION,// use new node from now on
EMF,WITHOUT_CLASSIFICATION,// Look through the imports of the containing compilation unit. //
EMF,WITHOUT_CLASSIFICATION,//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25 2004 //action:  first get the charset from 'targetFile' then use it  //         to encode the 'newContents' object into bytes
EMF,WITHOUT_CLASSIFICATION,// Ignore the exception.
EMF,WITHOUT_CLASSIFICATION,/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////
EMF,WITHOUT_CLASSIFICATION,// For any entry that doesn't correspond to a plugin in the running JVM compute a URL for the classes. //
EMF,WITHOUT_CLASSIFICATION,// We don't want keyType and valueType on a map type specification in a package interface. // But we also use qualified model information when defining a feature with suppressed get accessor // on the interface and we do want to include these properties in that case. //
EMF,WITHOUT_CLASSIFICATION,// Ignore CHAR tokens. // ** // **
EMF,WITHOUT_CLASSIFICATION,// Back up over the whitespace.
EMF,WITHOUT_CLASSIFICATION,// target method is NOT addSuperInterface
EMF,WITHOUT_CLASSIFICATION,// by default nodes are marked up
EMF,WITHOUT_CLASSIFICATION,// if the parent is not in target there is no point on checking the child
EMF,WITHOUT_CLASSIFICATION,// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;
EMF,WITHOUT_CLASSIFICATION,// If the flag will straddle two fields bump it to the next one. //
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Update the containing map if necessary. //
EMF,WITHOUT_CLASSIFICATION,// We expect there to be at least one archive path. //
EMF,WITHOUT_CLASSIFICATION,// Characters to use in escaping.
EMF,WITHOUT_CLASSIFICATION,// If there is a provider base class from outside this class that has already been generated get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //
EMF,WITHOUT_CLASSIFICATION,// Private constructor for use of static factory methods.
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */"
EMF,WITHOUT_CLASSIFICATION,// for all nodes but some use default extended range
EMF,WITHOUT_CLASSIFICATION,//iri = iri || containsNonASCII(authority);
EMF,WITHOUT_CLASSIFICATION,// if there are multiple variables in the same field declaration create declaration with only 1 variable
EMF,WITHOUT_CLASSIFICATION,// Private constructor for use of platform factory methods.
EMF,WITHOUT_CLASSIFICATION,//iri = iri || containsNonASCII(query);
EMF,WITHOUT_CLASSIFICATION,// Debugging method: converts the given long to a string of binary digits.
EMF,WITHOUT_CLASSIFICATION,// replace or append
EMF,WITHOUT_CLASSIFICATION,// Returns the upper half bitmask for the given ACSII character.
EMF,WITHOUT_CLASSIFICATION,// skip whitespace up to the end of the line
EMF,WITHOUT_CLASSIFICATION,// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)
EMF,WITHOUT_CLASSIFICATION,// enable tracking for nodes that have string content
EMF,WITHOUT_CLASSIFICATION,// apply header
EMF,WITHOUT_CLASSIFICATION,// enable tracking for commented out nodes
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Returns the lower half bitmask for the given ASCII character.
EMF,WITHOUT_CLASSIFICATION,// return the line number of the start of the node
EMF,WITHOUT_CLASSIFICATION,//MappingPackageImpl
EMF,WITHOUT_CLASSIFICATION,// revert all current edits for this node
EMF,WITHOUT_CLASSIFICATION,// this line has been commented out return next line number
EMF,WITHOUT_CLASSIFICATION,// Find the appropriate parent mapping which at the very least should be the mapping root itself. //
EMF,WITHOUT_CLASSIFICATION,// if there is anything after the node on the same line insert line break
EMF,WITHOUT_CLASSIFICATION,// Separators for parsing a URI string.
EMF,WITHOUT_CLASSIFICATION,// comment out all lines of the node itself from firstLine to last line
EMF,WITHOUT_CLASSIFICATION,// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //
EMF,WITHOUT_CLASSIFICATION,// next position is checked as well
EMF,WITHOUT_CLASSIFICATION,// We can't blindly cache the genModel since we need to support moving the GenPackage to another container // but the cast is expensive so we'd like to do it no more than absolutely necessary. //
EMF,WITHOUT_CLASSIFICATION,// handle the case when there is a replace edit that covers these lines
EMF,WITHOUT_CLASSIFICATION,// If it's the selection viewer then we want it to select the same selection as this selection. //
EMF,WITHOUT_CLASSIFICATION,// if there is any content after the node on the same line insert line break (to prevent commenting out extra content)
EMF,WITHOUT_CLASSIFICATION,// skip all lines that replace edit covers
EMF,WITHOUT_CLASSIFICATION,// should not happen re-throw exception
EMF,WITHOUT_CLASSIFICATION,// make sure that dummy edit is not in the tree
EMF,WITHOUT_CLASSIFICATION,// char at currentPos is copied as well
EMF,WITHOUT_CLASSIFICATION,// It belongs to this package if the delegate feature is from this package // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //
EMF,WITHOUT_CLASSIFICATION,// lastPos currentPos points at the next chars that will be copied later
EMF,WITHOUT_CLASSIFICATION,// if there is anything before the node on the same line create line break and comment out the first line of the node
EMF,WITHOUT_CLASSIFICATION,// copy last piece if any
EMF,WITHOUT_CLASSIFICATION,// Set URIs of EPackage-containing resources: output resource to desired target URI and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //
EMF,WITHOUT_CLASSIFICATION,// if comma is on a line by itself comment it out but do not insert the line break
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode boolean)   */"
EMF,WITHOUT_CLASSIFICATION,// if previous node is not commented out but all the following nodes are comment out a comma (constant separator)
EMF,WITHOUT_CLASSIFICATION,// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually if necessary. //
EMF,WITHOUT_CLASSIFICATION,// if previous node is not commented out but all following are
EMF,WITHOUT_CLASSIFICATION,// Since we will do the processing recursively we need to ensure we don't stack overflow if there is a circular super type. //
EMF,WITHOUT_CLASSIFICATION,// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// delete variable fragment from old declaration
EMF,WITHOUT_CLASSIFICATION,// cat(unit) file referenced by mdl file
EMF,WITHOUT_CLASSIFICATION,// Ignore features from the first super type. //
EMF,WITHOUT_CLASSIFICATION,//volatile
EMF,WITHOUT_CLASSIFICATION,//listRewrite.remove((ASTNode)modifier null);
EMF,WITHOUT_CLASSIFICATION,// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI less any fragment has already been // created.  If needed the fragment is re-appended to the cached URI // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods instead of parseIntoURI() directly.
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// super.collectNewChildDescriptors(newChildDescriptors object);
EMF,WITHOUT_CLASSIFICATION,// this could be method body for example
EMF,WITHOUT_CLASSIFICATION,// A primitive type can only be used as the generic type of a typed element. //
EMF,WITHOUT_CLASSIFICATION,// range to look for comments
EMF,WITHOUT_CLASSIFICATION,// Discard the old editing domain. //
EMF,WITHOUT_CLASSIFICATION,// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //
EMF,WITHOUT_CLASSIFICATION,// userinfo can contain alphanumerics mark characters escaped // and ';'':''&''=''+''$'''
EMF,WITHOUT_CLASSIFICATION,// return eProperties;
EMF,WITHOUT_CLASSIFICATION,// set javadoc
EMF,WITHOUT_CLASSIFICATION,// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1"    "US-ASCII"); // ?
EMF,WITHOUT_CLASSIFICATION,// Returns the int value of the given hex digit.
EMF,WITHOUT_CLASSIFICATION,// the for loop's condition finds the separator
EMF,WITHOUT_CLASSIFICATION,// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //
EMF,WITHOUT_CLASSIFICATION,// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Assume that we aren't running.
EMF,WITHOUT_CLASSIFICATION,// assume that the node is being moved (to allow insertion after)
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,// And even if it is contained it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound though //
EMF,WITHOUT_CLASSIFICATION,// remove all existing modifiers
EMF,WITHOUT_CLASSIFICATION,// append extra dimensions if any
EMF,WITHOUT_CLASSIFICATION,// create new modifiers and add to rewrite
EMF,WITHOUT_CLASSIFICATION,// We can also optimize single valued reverse.  //
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// Create a proxy in the correct way and pop it. //
EMF,WITHOUT_CLASSIFICATION,// null -> relative URI reference
EMF,WITHOUT_CLASSIFICATION,// If eCore set the ENamedElement name //
EMF,WITHOUT_CLASSIFICATION,//If it was not a warning or an diagnostic then return the diagnostic image
EMF,WITHOUT_CLASSIFICATION,// Maintain a list of classifiers for looking up conflicts. //
EMF,WITHOUT_CLASSIFICATION,//Only one example per wizard
EMF,WITHOUT_CLASSIFICATION,//Ecore2XMLFactory
EMF,WITHOUT_CLASSIFICATION,// XMLMap
EMF,WITHOUT_CLASSIFICATION,// append [] if it is variable arity parameter (@see JLS3 8.4.1 http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
EMF,WITHOUT_CLASSIFICATION,//XMLInfoImpl
EMF,WITHOUT_CLASSIFICATION,// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// AnyType
EMF,WITHOUT_CLASSIFICATION,// No image is a good default. //
EMF,WITHOUT_CLASSIFICATION,// Applicable only to a hierarchical URI.
EMF,WITHOUT_CLASSIFICATION,// Apply a redirection pattern if specified. //
EMF,WITHOUT_CLASSIFICATION,// create new node and replace it all by original contents
EMF,WITHOUT_CLASSIFICATION,// make all enum constants to be on separate lines
EMF,WITHOUT_CLASSIFICATION,// Avoid unnecessary out.write("") statements...
EMF,WITHOUT_CLASSIFICATION,// set comment and initializer as strings
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction   *      org.eclipse.jface.viewers.ISelection)   */"
EMF,WITHOUT_CLASSIFICATION,// set annotation contents
EMF,WITHOUT_CLASSIFICATION,// reg_name = 1*( unreserved | escaped | "$" | "" |  //            ";" | ":" | "@" | "&" | "=" | "+" )
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource org.w3c.dom.Node java.util.Map)   */"
EMF,WITHOUT_CLASSIFICATION,// update the wrapped object map
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */"
EMF,WITHOUT_CLASSIFICATION,// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)
EMF,WITHOUT_CLASSIFICATION,// If there is no root object we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //
EMF,WITHOUT_CLASSIFICATION,// get rewriter
EMF,WITHOUT_CLASSIFICATION,// path - everything up to query string or fragment
EMF,WITHOUT_CLASSIFICATION,// insert new declaration before this one
EMF,WITHOUT_CLASSIFICATION,// if there is an element with end position <= rangeEndPos
EMF,WITHOUT_CLASSIFICATION,"/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */"
EMF,WITHOUT_CLASSIFICATION,// extend range backward
EMF,WITHOUT_CLASSIFICATION,// We can't want to do encoding of platform resource URIs by default yet.    //
EMF,WITHOUT_CLASSIFICATION,// create map of field names to fields
EMF,WITHOUT_CLASSIFICATION,// Create the output stream to the temporary file and the input stream for the delegate URL. //
EMF,WITHOUT_CLASSIFICATION,//boolean iri = false;
EMF,WITHOUT_CLASSIFICATION,// extend to include the comment at the same line as the position
EMF,WITHOUT_CLASSIFICATION,// else - there is a comment that ends exactly at rangeEndPos
EMF,WITHOUT_CLASSIFICATION,// handle field declarations separately
EMF,WITHOUT_CLASSIFICATION,// the previous element must have end position <= rangeEndPos
EMF,WITHOUT_CLASSIFICATION,//last 2 bits should be zero
EMF,WITHOUT_CLASSIFICATION,// else - there is a comment that starts exactly at rangeStartPos
EMF,WITHOUT_CLASSIFICATION,// && commandParameter instanceof MappingCommandParameter)
EMF,WITHOUT_CLASSIFICATION,// extend range forward
EMF,WITHOUT_CLASSIFICATION,// increments the position to add the white spaces
EMF,WITHOUT_CLASSIFICATION,// add trailing whitespace
EMF,WITHOUT_CLASSIFICATION,// set source
EMF,WITHOUT_CLASSIFICATION,//Create a label if there are no children to force a smaller layout
EMF,WITHOUT_CLASSIFICATION,// Returning null here causes RemoveCommand.create(domain mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;
EMF,WITHOUT_CLASSIFICATION,// mark the node as moved if node has been removed
EMF,WITHOUT_CLASSIFICATION,// enable commenting out
EMF,WITHOUT_CLASSIFICATION,// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //
EMF,WITHOUT_CLASSIFICATION,// Counter for the number of 16-bit sections read in the address.
EMF,WITHOUT_CLASSIFICATION,// disable commenting out
EMF,WITHOUT_CLASSIFICATION,// Determine the inverse map from plugin IDs to their registered GenModel locations. //
EMF,WITHOUT_CLASSIFICATION,// A cache of URIs keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.
EMF,WITHOUT_CLASSIFICATION,// mark the node to be removed
EMF,WITHOUT_CLASSIFICATION,// We'll rethrow the original exception not this one.
EMF,WITHOUT_CLASSIFICATION,// if are dealing with original not cloned node
EMF,WITHOUT_CLASSIFICATION,// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string and we would usually like to validate the string. Because // setValue() is final we cannot do that conversion there so we need to record what we're trying to validate and // work around the problem in isCorrect(). //
EMF,WITHOUT_CLASSIFICATION,// stringValue not null nodeValue is null
EMF,WITHOUT_CLASSIFICATION,"/*   * If this is an {@link #isIRI IRI} converts it to a strict ASCII URI   * using the procedure described in Section 3.1 of the   * <a href=""http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt"">IRI   * Draft RFC</a>.  Otherwise this URI itself is returned.   *   * This unused code is included for possible future use...   */"
EMF,WITHOUT_CLASSIFICATION,// insert new values
EMF,WITHOUT_CLASSIFICATION,// convert only fields of the same type as parent
EMF,WITHOUT_CLASSIFICATION,// move all children to the enum converting some fields to constants
EMF,WITHOUT_CLASSIFICATION,// set the type to create
EMF,WITHOUT_CLASSIFICATION,// include line comments following end of the nodes into the range
EMF,WITHOUT_CLASSIFICATION,// move annotations
EMF,WITHOUT_CLASSIFICATION,// set arguments and body
EMF,WITHOUT_CLASSIFICATION,// update the wrapped object
EMF,WITHOUT_CLASSIFICATION,// unable to set arguments or body
EMF,WITHOUT_CLASSIFICATION,// check if there is just whitespace between position and start of the comment
EMF,WITHOUT_CLASSIFICATION,// create field declaration with 1 variable declaration fragment
EMF,WITHOUT_CLASSIFICATION,//DEBUG //System.err.println("isRegisterNonXS: "+name);
EMF,WITHOUT_CLASSIFICATION,// Record the part. //
EMF,WITHOUT_CLASSIFICATION,// replace type by enum
EMF,WITHOUT_CLASSIFICATION,// insert nodeToInsert after targetNode
EMF,WITHOUT_CLASSIFICATION,// convert enum constants and add to list of converted constants
EMF,WITHOUT_CLASSIFICATION,// move the node
EMF,WITHOUT_CLASSIFICATION,// set initializer
EMF,WITHOUT_CLASSIFICATION,// set arguments
EMF,WITHOUT_CLASSIFICATION,// set the whole initializer
EMF,WITHOUT_CLASSIFICATION,// set the body
EMF,WITHOUT_CLASSIFICATION,// update last field that is used
EMF,WITHOUT_CLASSIFICATION,// set the arguments to the constructor
EMF,WITHOUT_CLASSIFICATION,// perform split if there is more than 1 fragment
EMF,WITHOUT_CLASSIFICATION,// return the whole declaration contents (not just variableDeclarationFragment)
EMF,WITHOUT_CLASSIFICATION,// set rewritten node to be the original
EMF,WITHOUT_CLASSIFICATION,// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2
EMF,WITHOUT_CLASSIFICATION,// check number of fragments
EMF,WITHOUT_CLASSIFICATION,"/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045 N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */"
EMF,WITHOUT_CLASSIFICATION,// create a copy of declaration
EMF,WITHOUT_CLASSIFICATION,// set annotations contents
EMF,WITHOUT_CLASSIFICATION,// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //
EMF,WITHOUT_CLASSIFICATION,// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();
EMF,WITHOUT_CLASSIFICATION,// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");
EMF,WITHOUT_CLASSIFICATION,// New Template Container Label
EMF,WITHOUT_CLASSIFICATION,// container specification group
EMF,WITHOUT_CLASSIFICATION,"/*   * @since 2.4   */"
EMF,WITHOUT_CLASSIFICATION,// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>
EMF,WITHOUT_CLASSIFICATION,"/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  "" to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */"
EMF,WITHOUT_CLASSIFICATION,// will point at the character after 0 to 3 octal digits
EMF,WITHOUT_CLASSIFICATION,"/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */"
EMF,WITHOUT_CLASSIFICATION,// Return the original URI.
EMF,WITHOUT_CLASSIFICATION,// Just print an error message.
EMF,WITHOUT_CLASSIFICATION,// Title.
EMF,WITHOUT_CLASSIFICATION,// Ignore the exception and return the original URI.
EMF,WITHOUT_CLASSIFICATION,// Assume the class is not available.
EMF,WITHOUT_CLASSIFICATION,// Just return the default.
EMF,WITHOUT_CLASSIFICATION,// do not insert line break if there is only whitespace after comma
EMF,WITHOUT_CLASSIFICATION,// This is just a marker interface.
EMF,WITHOUT_CLASSIFICATION,// This case happens when the IDE is brought up with the editor already open //
EMF,WITHOUT_CLASSIFICATION,// For an archive URI check for the path in the archive. //
EMF,WITHOUT_CLASSIFICATION,// Continue processing if the file doesn't exist so that we try create a new empty one.
EMF,WITHOUT_CLASSIFICATION,// set lexical handler
EMF,WITHOUT_CLASSIFICATION,// If we didn't find the path in the usual place nor in the archive... //
EMF,WITHOUT_CLASSIFICATION,// The loop resolves the cross references by visiting them.
EMF,WITHOUT_CLASSIFICATION,// If they don't have the same class they can't be equal. //
EMF,WITHOUT_CLASSIFICATION,// This may be called directly on an EObject for the case of a containment. //
EMF,WITHOUT_CLASSIFICATION,// Assume that it's not available.
EMF,WITHOUT_CLASSIFICATION,// Preload.
EMF,WITHOUT_CLASSIFICATION,// No new methods.
EMF,WITHOUT_CLASSIFICATION,// Listen to title changes. // getViewPart().addPropertyListener(this);
EMF,WITHOUT_CLASSIFICATION,//ListChangeImpl
EMF,WITHOUT_CLASSIFICATION,// Wrap the current input as a zip stream and record it for loop-based recursion. //
EMF,WITHOUT_CLASSIFICATION,// return getPrefixedName("EditPlugin");
EMF,WITHOUT_CLASSIFICATION,//ChangePackage
EMF,WITHOUT_CLASSIFICATION,// If the generic type is a different wildcard it doesn't match. //
EMF,WITHOUT_CLASSIFICATION,// turn the password into an AES key
EMF,WITHOUT_CLASSIFICATION,//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }
EMF,WITHOUT_CLASSIFICATION,// process documentation info and create eEnumLiteral for each line //
EMF,WITHOUT_CLASSIFICATION,// EAnnotation
EMF,WITHOUT_CLASSIFICATION,// Create a new or replaced entry and continue processing the remaining archives. //
EMF,WITHOUT_CLASSIFICATION,//getList(entry).clear();
EMF,WITHOUT_CLASSIFICATION,// Subclasses MUST override this function
EMF,WITHOUT_CLASSIFICATION,// return eVirtualIndexBits[offset];
EMF,WITHOUT_CLASSIFICATION,// return minimumCapacity;
EMF,WITHOUT_CLASSIFICATION,// return eVirtualValues;
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node java.util.Map)   */"
EMF,WITHOUT_CLASSIFICATION,// Continue and return null.
EMF,WITHOUT_CLASSIFICATION,//ChangePackageImpl
EMF,WITHOUT_CLASSIFICATION,// Ignore exceptions.
EMF,WITHOUT_CLASSIFICATION,//ChangeFactoryImpl
EMF,WITHOUT_CLASSIFICATION,// Ensure that cached ePackage is forgotten.
EMF,WITHOUT_CLASSIFICATION,//EAnnotationImpl
EMF,WITHOUT_CLASSIFICATION,// ListChange
EMF,WITHOUT_CLASSIFICATION,// If the attribute is set record it's old value. //
EMF,WITHOUT_CLASSIFICATION,// Force this to be initialized as well.
EMF,WITHOUT_CLASSIFICATION,// Ignore the exception since we will throw one when all else fails.
EMF,WITHOUT_CLASSIFICATION,//EcoreValidator
EMF,WITHOUT_CLASSIFICATION,// If we didn't detach it from an old resource already detach it from the old container's resource. //
EMF,WITHOUT_CLASSIFICATION,// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,//EOperation
EMF,WITHOUT_CLASSIFICATION,// Create a page for the parent tree view. //
EMF,WITHOUT_CLASSIFICATION,// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //
EMF,WITHOUT_CLASSIFICATION,// generate the key
EMF,WITHOUT_CLASSIFICATION,// Record them as generic streams to record state during the loop that emulates recursion. //
EMF,WITHOUT_CLASSIFICATION,// If we can open  an input stream then the path is there and we have a good URL. //
EMF,WITHOUT_CLASSIFICATION,// Continue and try to close.
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"
EMF,WITHOUT_CLASSIFICATION,// Decrypt the key bytes
EMF,WITHOUT_CLASSIFICATION,// now create the encryption cipher
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection java.util.Collection org.eclipse.emf.mapping.Mapping)   */"
EMF,WITHOUT_CLASSIFICATION,"// Read the header of the encrypted file.				"
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// add leading hanging comments to the previous node // hence only comments immediately preceding the node will be in the range for removal
EMF,WITHOUT_CLASSIFICATION,// just make a copy of the base if spec is empty
EMF,WITHOUT_CLASSIFICATION,// generate the IV for encryption
EMF,WITHOUT_CLASSIFICATION,"/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */"
EMF,WITHOUT_CLASSIFICATION,// this is the key we will use to encrypt the data
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// Create a title bar.
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction org.eclipse.jface.viewers.ISelection)   */"
EMF,WITHOUT_CLASSIFICATION,// now create the decrypt cipher
EMF,WITHOUT_CLASSIFICATION,// Only do this once.
EMF,WITHOUT_CLASSIFICATION,// If we haven't yet generated a key just use this one
EMF,WITHOUT_CLASSIFICATION,// ECLIPSE-DEPEND-BEGIN
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */"
EMF,WITHOUT_CLASSIFICATION,// Ignore the bound if the value is too big.
EMF,WITHOUT_CLASSIFICATION,// ECLIPSE-DEPEND-END
EMF,WITHOUT_CLASSIFICATION,"/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */"
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String java.lang.String)   */"
EMF,WITHOUT_CLASSIFICATION,// Invoke generator adapters for each object. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode org.eclipse.emf.codegen.merge.java.facade.JNode)   */"
EMF,WITHOUT_CLASSIFICATION,"/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */"
EMF,WITHOUT_CLASSIFICATION,// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //
EMF,WITHOUT_CLASSIFICATION,// Ensure that the class loader for this class will be used downstream. //
EMF,WITHOUT_CLASSIFICATION,// Two slashes means we may have authority but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments
EMF,WITHOUT_CLASSIFICATION,// Don't bother complaining about things with no name // since there are constraints for that problem. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode boolean)   */"
EMF,WITHOUT_CLASSIFICATION,//EcoreSwitch
EMF,WITHOUT_CLASSIFICATION,// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them // i.e. they aren't really the ID of the document root. //
EMF,WITHOUT_CLASSIFICATION,// For performance skip matching all the features of the first super type. //
EMF,WITHOUT_CLASSIFICATION,// Action bar.
EMF,WITHOUT_CLASSIFICATION,// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file // hence the get methods in the new ASTJField will not return the right contents
EMF,WITHOUT_CLASSIFICATION,// Checks whether the string contains any more segments after the one that // starts at position i.
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */"
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"
EMF,WITHOUT_CLASSIFICATION,// if we get to this point we need to resolve relative path // RFC 2396 5.2 #6
EMF,WITHOUT_CLASSIFICATION,// Create the key from the key bytes
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// List subList(EStructuralFeature feature int from int to); // EList list(EStructuralFeature feature);
EMF,WITHOUT_CLASSIFICATION,// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path its last segment is empty; all others // must match.
EMF,WITHOUT_CLASSIFICATION,// create new field and replace it all by original contents
EMF,WITHOUT_CLASSIFICATION,// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// If this is a hierarchical URI reference and prefix is a prefix of it // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.
EMF,WITHOUT_CLASSIFICATION,// Encodes a complete URI optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator or encode them all.
EMF,WITHOUT_CLASSIFICATION,// Returns the character encoded by % followed by the two given hex digits // which is always 0xFF or less so can safely be casted to a byte.  If // either character is not a hex digit a bogus result will be returned.
EMF,WITHOUT_CLASSIFICATION,// check for scheme - RFC 2396 5.2 #3 // if we found a scheme it means absolute URI so we're done
EMF,WITHOUT_CLASSIFICATION,// If the scheme specific part is opaque it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732 which // I've interpreted as an error in the spec since the  // production should be equivalent to (uric - '/') and uric // contains '[' and ']'. - mrglavas
EMF,WITHOUT_CLASSIFICATION,// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path it is // treated as the root absolute path.
EMF,WITHOUT_CLASSIFICATION,// Validates all of the URI components.  Factory methods should call this // before using the constructor though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied themselves.  If a new URI is being constructed out of // an existing URI this need not be called.  Instead just the new // components may be validated individually.
EMF,WITHOUT_CLASSIFICATION,// There is no match if the types are different // and they don't each specify the same non-null instance class name. //
EMF,WITHOUT_CLASSIFICATION,// Interpret it as part of the name. //
EMF,WITHOUT_CLASSIFICATION,// The string must contain inappropriate whitespace so find the index for the first difference. //
EMF,WITHOUT_CLASSIFICATION,// When used as a generic super type there must be a classifier that refers to a class. //
EMF,WITHOUT_CLASSIFICATION,// Don't complain about the literals if they are the same as the names and the names collide. //
EMF,WITHOUT_CLASSIFICATION,"/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER=""0"" WIDTH=""100%""> *  <TR> *      <TD WIDTH=""33%""> *          <P ALIGN=""CENTER""><B>Common Name</B> *      </TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER""><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER""><B>Name Type</B> *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER""><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">8 bit Unicode</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">UTF-8 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 1</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-1 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 2</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-2 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 3</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-3 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 4</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-4 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Cyrillic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-5 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Arabic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-6 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Greek</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-7 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Hebrew</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-8 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 5</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-9 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: US</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-us *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Canada</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ca *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Netherlands</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-nl *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Denmark</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-dk *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Norway</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-no *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Finland</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-fi *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Sweden</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-se *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Italy</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-it *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Spain Latin America</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-es *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Great Britain</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-gb *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: France</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-fr *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Arabic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Hebrew</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-he *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Switzerland</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ch *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Roece</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-roece *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Yugoslavia</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-yu *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Iceland</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-is *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Urdu</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Chinese for PRC mixed 1/2 byte</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">gb2312 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Extended Unix Code packed for Japanese</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">euc-jp *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Japanese: iso-2022-jp</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">iso-2020-jp *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Japanese: Shift JIS</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">Shift_JIS *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Chinese: Big5</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">Big5 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Extended Unix Code packed for Korean</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">euc-kr *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Cyrillic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">koi8-r *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent IBM * @author Andy Clark IBM */"
EMF,WITHOUT_CLASSIFICATION,// Can't have both a classifier and a type parameter. //
EMF,WITHOUT_CLASSIFICATION,// Add Userinfo Characters
EMF,WITHOUT_CLASSIFICATION,// The type parameter must be in scope and must not be a forward reference. //
EMF,WITHOUT_CLASSIFICATION,// Ignore trailing whitespace
EMF,WITHOUT_CLASSIFICATION,// Incorrect number of type arguments. //
EMF,WITHOUT_CLASSIFICATION,// Have no arguments when they are allowed is only a warning. //
EMF,WITHOUT_CLASSIFICATION,// Can't have both an upper and lower bound. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String java.lang.String)   */"
EMF,WITHOUT_CLASSIFICATION,// Wildcards are only allowed in type arguments. //
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass java.lang.String java.lang.String)   */"
EMF,WITHOUT_CLASSIFICATION,// Can't have type arguments unless there is a classifier //
EMF,WITHOUT_CLASSIFICATION,// Can't have a classifier or a type parameter as well as bounds. //
EMF,WITHOUT_CLASSIFICATION,// Can only have bounds when used as a type argument. //
EMF,WITHOUT_CLASSIFICATION,// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,// We test their relationship either via them both being classes... //
EMF,WITHOUT_CLASSIFICATION,// When the pane or any child gains focus notify the workbench.
EMF,WITHOUT_CLASSIFICATION,// If the are the same then it is bounded properly... //
EMF,WITHOUT_CLASSIFICATION,// namespace context
EMF,WITHOUT_CLASSIFICATION,// This is for the topDown feature. //
EMF,WITHOUT_CLASSIFICATION,// The arguments type parameters lower bounds and upper bounds must be equal type arguments. //
EMF,WITHOUT_CLASSIFICATION,// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //
EMF,WITHOUT_CLASSIFICATION,// Ignore leading whitespace
EMF,WITHOUT_CLASSIFICATION,// Determine if there is a bounding generic super type. //
EMF,WITHOUT_CLASSIFICATION,// If there is a upper bound the bound must bound it. //
EMF,WITHOUT_CLASSIFICATION,// Create a new array. //
EMF,WITHOUT_CLASSIFICATION,// Test if there are type parameters that might require substitution. //
EMF,WITHOUT_CLASSIFICATION,// new declaration will not have fragments until performSplit() is called
EMF,WITHOUT_CLASSIFICATION,// If there is a type parameter one of its bounds must be bounded by the bound. //
EMF,WITHOUT_CLASSIFICATION,// add leading comments
EMF,WITHOUT_CLASSIFICATION,// If the generic type is a wildcard it can't be bounded by another wildcard. //
EMF,WITHOUT_CLASSIFICATION,// Failing all those cases there must be an lower bound that bounds it. //
EMF,WITHOUT_CLASSIFICATION,// If there is an lower bound the type argument must bound it. //
EMF,WITHOUT_CLASSIFICATION,// starting traverse file and build unit tree and table info
EMF,WITHOUT_CLASSIFICATION,// If one is null (but the other is not) then they can't be equal. //
EMF,WITHOUT_CLASSIFICATION,// If they both aren't null... //
EMF,WITHOUT_CLASSIFICATION,// create OK and Details buttons
EMF,WITHOUT_CLASSIFICATION,// If they are the same classifier they are of course equal. //
EMF,WITHOUT_CLASSIFICATION,// If one is null (but the other is not) then they are not equal. //
EMF,WITHOUT_CLASSIFICATION,// If they are the same instance they are equal. //
EMF,WITHOUT_CLASSIFICATION,// Go through the commands of the list. //
EMF,WITHOUT_CLASSIFICATION,// Index should be -1.
EMF,WITHOUT_CLASSIFICATION,// Define a class loader that looks up classes using the URLs or the parent class loader // and failing those tries to look up the class in each bundle in the running JVM. //
EMF,WITHOUT_CLASSIFICATION,//EcoreAdapterFactory
EMF,WITHOUT_CLASSIFICATION,// add the key/value pairs to the output string
EMF,WITHOUT_CLASSIFICATION,"/*    public List subList(int from int to)    {      return featureMap.subList(getEStructuralFeature() from to);    }*/"
EMF,WITHOUT_CLASSIFICATION,// For the extended meta data to be created. //
EMF,WITHOUT_CLASSIFICATION,// Reverse the test. //
EMF,WITHOUT_CLASSIFICATION,// Iterate over the mappings in the tree. //
EMF,WITHOUT_CLASSIFICATION,// --entryCursor;
EMF,WITHOUT_CLASSIFICATION,// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //
EMF,WITHOUT_CLASSIFICATION,"/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */"
EMF,WITHOUT_CLASSIFICATION,// reset text edits; since this node is processed successfully there is no need to revert these changes
EMF,WITHOUT_CLASSIFICATION,// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //
EMF,WITHOUT_CLASSIFICATION,// This forces the feature ids to be assigned. //
EMF,WITHOUT_CLASSIFICATION,// Interprets escaped characters within the string according to Java // literal rules with two exceptions: an unescaped " does not terminate // the string and a \ not followed by b t n f r " ' u or an octal // digit is taken literally not as an error
EMF,WITHOUT_CLASSIFICATION,// We can use == for EObjects and EnumLiterals. //
EMF,WITHOUT_CLASSIFICATION,// A standalone base is a valid URI according to spec
EMF,WITHOUT_CLASSIFICATION,// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //
EMF,WITHOUT_CLASSIFICATION,// replace some arguments by another field names (constants)
EMF,WITHOUT_CLASSIFICATION,//  Public
EMF,WITHOUT_CLASSIFICATION,// Continue with the unresolved URI.
EMF,WITHOUT_CLASSIFICATION,// all implementations of Java 1.5 should support AES
EMF,WITHOUT_CLASSIFICATION,// for enum constants insert line break after the comma if there is anything after the comma
EMF,WITHOUT_CLASSIFICATION,//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
EMF,WITHOUT_CLASSIFICATION,// insert new line at the end of previous constant
EMF,WITHOUT_CLASSIFICATION,// if needed comment out a comma of the previous enum constant
EMF,WITHOUT_CLASSIFICATION,// make sure that 1) we see only digits and dot separators 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.
EMF,WITHOUT_CLASSIFICATION,// create map of public static final field initializers to fields
EMF,WITHOUT_CLASSIFICATION,// This should be the same as the logic in ResourceImpl.getEObject(String). //
EMF,WITHOUT_CLASSIFICATION,// query - starts with ? and up to fragment or end
EMF,WITHOUT_CLASSIFICATION,// if there is a comment with start position > rangeStartPos
EMF,WITHOUT_CLASSIFICATION,// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$
EMF,WITHOUT_CLASSIFICATION,// Iterate over the owner list twice first matching objects from the collection by identity (==) then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded and // the objects are stored in the same order. The lists are then merged to form a final in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also this yields exactly one object removed for each object in the collection with preference given to // identity over value equality. //
EMF,WITHOUT_CLASSIFICATION,// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.
EMF,WITHOUT_CLASSIFICATION,// Closing the detail area
EMF,WITHOUT_CLASSIFICATION,// Define gradient (blue to widget background color)
EMF,WITHOUT_CLASSIFICATION,//lastCursor = -1; //prepared = 0;
EMF,WITHOUT_CLASSIFICATION,// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject if necessary.
EMF,WITHOUT_CLASSIFICATION,// Create the editing domain with a special command stack. //
EMF,WITHOUT_CLASSIFICATION,// Validate now since the call we make after will skip validating.
EMF,WITHOUT_CLASSIFICATION,// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
EMF,WITHOUT_CLASSIFICATION,// for field declarations use variable declaration fragments instead
EMF,WITHOUT_CLASSIFICATION,// convert only public static final fields
EMF,WITHOUT_CLASSIFICATION,// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise it's good to have this optimization. //
EMF,WITHOUT_CLASSIFICATION,// If the plugin.properties isn't within the root of the archive // create a new URI for the folder location of the archive // so we can look in the folder that contains it. //
EMF,WITHOUT_CLASSIFICATION,// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.
EMF,WITHOUT_CLASSIFICATION,// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //
EMF,WITHOUT_CLASSIFICATION,// Ensure that this is a touch notification so to resource aren't marked as dirty. //
EMF,WITHOUT_CLASSIFICATION,// menuManager.insertBefore("additions" new Separator("schema-actions")); // menuManager.insertAfter("schema-actions" generateSchemaAction);
EMF,WITHOUT_CLASSIFICATION,"/*  public List subList(EStructuralFeature feature int from int to)  {    return null;  }*/"
EMF,WITHOUT_CLASSIFICATION,// Undo the preparation for next and continue.
EMF,WITHOUT_CLASSIFICATION,// If we can't create one too bad.
EMF,WITHOUT_CLASSIFICATION,//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition() node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node getPreviousNode(node) false) range); // //    return range; //  }
EMF,WITHOUT_CLASSIFICATION,// Handle the last byte at the end. //
EMF,WITHOUT_CLASSIFICATION,// create JNode and set properties
EMF,WITHOUT_CLASSIFICATION,// If the first object is null the second object must be null. //
EMF,WITHOUT_CLASSIFICATION,//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }
EMF,WITHOUT_CLASSIFICATION,"/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/"
EMF,WITHOUT_CLASSIFICATION,// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //
EMF,WITHOUT_CLASSIFICATION,// Failure to resolve is ignored.
EMF,WITHOUT_CLASSIFICATION,// Depending on the action and the current state we'll toggle the state. // i.e. for unset we need to turn it off if it's on  // and for set we need to turn it on if it's off. //
EMF,WITHOUT_CLASSIFICATION,// Skip the dummy null object and test again. //
EMF,WITHOUT_CLASSIFICATION,// If we are on the special resource set iterator and there isn't really a next object at this point... //
EMF,WITHOUT_CLASSIFICATION,// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string beginning at index i. The index // of the first found character or s.length() if there is none is // returned.  Before searching i is limited to the range [0 s.length()]. //
EMF,WITHOUT_CLASSIFICATION,// Then eObject2 must be that previous match. //
EMF,WITHOUT_CLASSIFICATION,// Create move commands for all the objects in the collection. //
EMF,WITHOUT_CLASSIFICATION,// We know the first object isn't null so if the second one is it can't be equal. //
EMF,WITHOUT_CLASSIFICATION,// Some character classes as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks stored as two longs where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below // and a character is tested against them using matches(). //
EMF,WITHOUT_CLASSIFICATION,// If eObject1 and eObject2 are the same instance... //
EMF,WITHOUT_CLASSIFICATION,// Look for the first non-XMI element. //
EMF,WITHOUT_CLASSIFICATION,// Check all the values. //
EMF,WITHOUT_CLASSIFICATION,// Assume from now on that they match. //
EMF,WITHOUT_CLASSIFICATION,// Match them and return true. //
EMF,WITHOUT_CLASSIFICATION,// If they don't have the same size the feature maps aren't equal. //
EMF,WITHOUT_CLASSIFICATION,// Value used to suppress visibility. //
EMF,WITHOUT_CLASSIFICATION,// The values must be Java equal. //
EMF,WITHOUT_CLASSIFICATION,// If this is a feature map... //
EMF,WITHOUT_CLASSIFICATION,// If the first value is null the second value must be null. //
EMF,WITHOUT_CLASSIFICATION,// Neither eObject1 nor eObject2 have been compared yet.
EMF,WITHOUT_CLASSIFICATION,// Since the first value isn't null if the second one is they aren't equal. //
EMF,WITHOUT_CLASSIFICATION,// If it is in a resource form the URI relative to that resource. //
EMF,WITHOUT_CLASSIFICATION,// There is no reason they aren't equals. //
EMF,WITHOUT_CLASSIFICATION,// Compare entries in order. //
EMF,WITHOUT_CLASSIFICATION,// If the values aren't Java equal the feature maps aren't equal. //
EMF,WITHOUT_CLASSIFICATION,// EqualityHelper
EMF,WITHOUT_CLASSIFICATION,// clockseq_hi
EMF,WITHOUT_CLASSIFICATION,// The node identifier is already in network byte order  // so there is no need to do any byte order reversing. //
EMF,WITHOUT_CLASSIFICATION,// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //
EMF,WITHOUT_CLASSIFICATION,// If it's a proxy use that. //
EMF,WITHOUT_CLASSIFICATION,// We just woke up.
EMF,WITHOUT_CLASSIFICATION,// Wait so that the clock can catch up and the time adjustment won't overflow.
EMF,WITHOUT_CLASSIFICATION,// time_hi //
EMF,WITHOUT_CLASSIFICATION,// time_mid //
EMF,WITHOUT_CLASSIFICATION,// Ignore if we can't freeze.
EMF,WITHOUT_CLASSIFICATION,// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //
EMF,WITHOUT_CLASSIFICATION,// throws SAXException
EMF,WITHOUT_CLASSIFICATION,// This is the cheapest and most common case. //
EMF,WITHOUT_CLASSIFICATION,//fall through...
EMF,WITHOUT_CLASSIFICATION,// If there is a temporary file... //
EMF,WITHOUT_CLASSIFICATION,// System.err.println("add = ["+newString+"]");
EMF,WITHOUT_CLASSIFICATION,// Deresolve all the URI against the current base URI. //
EMF,WITHOUT_CLASSIFICATION,"/*   * Javadoc copied from interface   */"
EMF,WITHOUT_CLASSIFICATION,// external schema locations should only be processed once i.e. in the subsequent parse // there is no need to process those again.
EMF,WITHOUT_CLASSIFICATION,// EMOF.isReadOnly = !Ecore.changeable
EMF,WITHOUT_CLASSIFICATION,// SAXXMIHandler
EMF,WITHOUT_CLASSIFICATION,// Ecore.changeable = !EMOF.isReadOnly
EMF,WITHOUT_CLASSIFICATION,// Ignore whatever was set before. //
EMF,WITHOUT_CLASSIFICATION,// handler.ignorableWhitespace(ch start length);
EMF,WITHOUT_CLASSIFICATION,// Try to resolve the proxy locally. //
EMF,WITHOUT_CLASSIFICATION,// If we are pessimistic then we need to undo all the commands that we have executed so far. //
EMF,WITHOUT_CLASSIFICATION,// And find the one that holds this proxy. //
EMF,WITHOUT_CLASSIFICATION,// // Implement EntityResolver methods //
EMF,WITHOUT_CLASSIFICATION,// // Implement DTDHandler methods //
EMF,WITHOUT_CLASSIFICATION,// // Overwrite DefaultHandler methods //
EMF,WITHOUT_CLASSIFICATION,// If the resolved object doesn't contain a reference to the proxy holder as it should. //
EMF,WITHOUT_CLASSIFICATION,// We won't need to process this again later. //
EMF,WITHOUT_CLASSIFICATION,// Compute the holder of the proxy //
EMF,WITHOUT_CLASSIFICATION,// Move the resolved object to the right place remove the proxy and we're done. //
EMF,WITHOUT_CLASSIFICATION,// EATM temporary for debug purposes only. //
EMF,WITHOUT_CLASSIFICATION,// The proxy needs to be replaced in a way that updates both ends of the reference. //
EMF,WITHOUT_CLASSIFICATION,// // Implement LexicalHandler methods //
EMF,WITHOUT_CLASSIFICATION,// At least set the references that we were able to resolve if any. //
EMF,WITHOUT_CLASSIFICATION,// We won't need to process this again later.
EMF,WITHOUT_CLASSIFICATION,// Set up a deferred extent so the document root we create definitely will not be added to the resource. //
EMF,WITHOUT_CLASSIFICATION,// EATM Demand create metadata.
EMF,WITHOUT_CLASSIFICATION,// check for simple feature
EMF,WITHOUT_CLASSIFICATION,// Process the new root object if any. //
EMF,WITHOUT_CLASSIFICATION,// Remove the document root's information from the top of the stacks. //
EMF,WITHOUT_CLASSIFICATION,// If externalSchemaLocations are specified process these ones as well
EMF,WITHOUT_CLASSIFICATION,// Place the time into the byte array in network byte order. //
EMF,WITHOUT_CLASSIFICATION,// time_low //
EMF,WITHOUT_CLASSIFICATION,// If the command is executable record and execute it. //
EMF,WITHOUT_CLASSIFICATION,// The new root object is the actual new object since all sign of the document root will now have disappeared. //
EMF,WITHOUT_CLASSIFICATION,// Handle namespaces
EMF,WITHOUT_CLASSIFICATION,// This check is redundant -- see handleFeature method (EL)
EMF,WITHOUT_CLASSIFICATION,// Ignore a whitespace only text entry at the beginning. //
EMF,WITHOUT_CLASSIFICATION,// Try to get a general-content feature. // Use a pattern that's not possible any other way. //
EMF,WITHOUT_CLASSIFICATION,// This handles the case of a substitution group. //
EMF,WITHOUT_CLASSIFICATION,// This is for the case for a local unqualified element that has been bound. //
EMF,WITHOUT_CLASSIFICATION,// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...
EMF,WITHOUT_CLASSIFICATION,// This only works for old globally registered things.
EMF,WITHOUT_CLASSIFICATION,// Ignore it if we can't find it since we'll fail anyway.
EMF,WITHOUT_CLASSIFICATION,// extend the array if necessary
EMF,WITHOUT_CLASSIFICATION,// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure then we'll simply not be able to match the content type.
EMF,WITHOUT_CLASSIFICATION,// Entry entry = new Entry(eObject CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);
EMF,WITHOUT_CLASSIFICATION,// Index of writing point // Index of processing point
EMF,WITHOUT_CLASSIFICATION,// class AttributesProxy
EMF,WITHOUT_CLASSIFICATION,// use the pool to retrieve the parser
EMF,WITHOUT_CLASSIFICATION,// traverse element node
EMF,WITHOUT_CLASSIFICATION,// record duplicate declaration for a given prefix (#3)
EMF,WITHOUT_CLASSIFICATION,// release parser back to the pool
EMF,WITHOUT_CLASSIFICATION,// record namespaces in scope //
EMF,WITHOUT_CLASSIFICATION,// Don't read encoding - rely on XML parser to provide one via Locator2
EMF,WITHOUT_CLASSIFICATION,// Create an simple any type wrapper for the attribute value and use that with the EReference. //
EMF,WITHOUT_CLASSIFICATION,// true if seen xmlns="" declaration
EMF,WITHOUT_CLASSIFICATION,// handler.resolveEntity(publicId systemId);
EMF,WITHOUT_CLASSIFICATION,// XMLLoad
EMF,WITHOUT_CLASSIFICATION,// SAXXMLHandler
EMF,WITHOUT_CLASSIFICATION,// If we are substituting an EAttribute for an EReference... //
EMF,WITHOUT_CLASSIFICATION,// Once we see a lookup of an element in the null namespace we should behave as if there has been an explicit xmlns="" //
EMF,WITHOUT_CLASSIFICATION,// There really must be a package. //
EMF,WITHOUT_CLASSIFICATION,// for any content prefix to URI mapping could be in namespace context
EMF,WITHOUT_CLASSIFICATION,// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //
EMF,WITHOUT_CLASSIFICATION,// recording a first declaration for a given prefix
EMF,WITHOUT_CLASSIFICATION,// Make sure that the list will appear to be set to be empty. //
EMF,WITHOUT_CLASSIFICATION,// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)
EMF,WITHOUT_CLASSIFICATION,// since xmlns="" is default declaration remove ""->empty_URI mapping
EMF,WITHOUT_CLASSIFICATION,// push context
EMF,WITHOUT_CLASSIFICATION,// resize array if needed
EMF,WITHOUT_CLASSIFICATION,// find uri in current context
EMF,WITHOUT_CLASSIFICATION,// bind prefix to uri in current context
EMF,WITHOUT_CLASSIFICATION,// prefix not found
EMF,WITHOUT_CLASSIFICATION,// set parser features and properties
EMF,WITHOUT_CLASSIFICATION,// uri not found
EMF,WITHOUT_CLASSIFICATION,// caching turned on by the user
EMF,WITHOUT_CLASSIFICATION,// DOM serialization
EMF,WITHOUT_CLASSIFICATION,// Look for a matching element in the specified packages if there are any. //
EMF,WITHOUT_CLASSIFICATION,// Look for a substitution group feature in the classifier's containing package. //
EMF,WITHOUT_CLASSIFICATION,// set serialization options
EMF,WITHOUT_CLASSIFICATION,// XMIHandler
EMF,WITHOUT_CLASSIFICATION,// Look for a substitution group feature in the additional packages. //
EMF,WITHOUT_CLASSIFICATION,// Process the super types if that's been specified. //
EMF,WITHOUT_CLASSIFICATION,// Entities aren't supported for DOM.
EMF,WITHOUT_CLASSIFICATION,// If there is no field then we can't do this.
EMF,WITHOUT_CLASSIFICATION,// value[outputPos];
EMF,WITHOUT_CLASSIFICATION,// Process XML attributes
EMF,WITHOUT_CLASSIFICATION,// Since the cycle is detected by checking if we hit "this" again after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //
EMF,WITHOUT_CLASSIFICATION,// this is a root element
EMF,WITHOUT_CLASSIFICATION,// for performance reasons saveNil and saveElement are not used
EMF,WITHOUT_CLASSIFICATION,// Process XML elements
EMF,WITHOUT_CLASSIFICATION,// Every codepoint is supported!
EMF,WITHOUT_CLASSIFICATION,// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
EMF,WITHOUT_CLASSIFICATION,// We will use an xmi:Extension element for these
EMF,WITHOUT_CLASSIFICATION,// ownedProperty???
EMF,WITHOUT_CLASSIFICATION,// First try to see if this package's implementation class has an eInstance. //
EMF,WITHOUT_CLASSIFICATION,// Go back and add all the XMLNS stuff. //
EMF,WITHOUT_CLASSIFICATION,// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //
EMF,WITHOUT_CLASSIFICATION,// create dummy documentElement
EMF,WITHOUT_CLASSIFICATION,// Avoid a function call... //
EMF,WITHOUT_CLASSIFICATION,// write doctype
EMF,WITHOUT_CLASSIFICATION,"/*     *  Convert:     *  \n to line separator     */"
EMF,WITHOUT_CLASSIFICATION,// Assume the class isn't available.
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Do sorting: "+this.ranges.length);
EMF,WITHOUT_CLASSIFICATION,// boolean not
EMF,WITHOUT_CLASSIFICATION,// register default options
EMF,WITHOUT_CLASSIFICATION,// no property // no property
EMF,WITHOUT_CLASSIFICATION,// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //
EMF,WITHOUT_CLASSIFICATION,// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi
EMF,WITHOUT_CLASSIFICATION,// Token.CLOSURE
EMF,WITHOUT_CLASSIFICATION,//XMLNamespaceFactory
EMF,WITHOUT_CLASSIFICATION,// convert the target node to a compatible node //
EMF,WITHOUT_CLASSIFICATION,//XMLTypePackage
EMF,WITHOUT_CLASSIFICATION,// SimpleAnyType
EMF,WITHOUT_CLASSIFICATION,// ret.next is null.
EMF,WITHOUT_CLASSIFICATION,// Don't create anything.
EMF,WITHOUT_CLASSIFICATION,//XMLTypeFactoryImpl
EMF,WITHOUT_CLASSIFICATION,// do not validate on load. Check validity using Diagnostician.
EMF,WITHOUT_CLASSIFICATION,//XMLTypePackageImpl
EMF,WITHOUT_CLASSIFICATION,// Other escaped character.
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Starts at "+index);
EMF,WITHOUT_CLASSIFICATION,//DocumentRootImpl
EMF,WITHOUT_CLASSIFICATION,// Skips characters between '#' and a line end.
EMF,WITHOUT_CLASSIFICATION,// Skips a white space.
EMF,WITHOUT_CLASSIFICATION,// switch anchor type
EMF,WITHOUT_CLASSIFICATION,//System.err.println("DEBUG: matchEnd="+matchEnd);
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Non-match in fixed-string search.");
EMF,WITHOUT_CLASSIFICATION,// Internal use only. // The @ always matches line beginnings.
EMF,WITHOUT_CLASSIFICATION,"/*           * Optimization against the first character.           */"
EMF,WITHOUT_CLASSIFICATION,//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
EMF,WITHOUT_CLASSIFICATION,//case 0x0b:  ret = "\\v";  break;
EMF,WITHOUT_CLASSIFICATION,// for CLOSURE QUESTION
EMF,WITHOUT_CLASSIFICATION,// Op.CHAR
EMF,WITHOUT_CLASSIFICATION,"/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX where XXXX is the   * four-digit hex representation of the Unicode code point.   */"
EMF,WITHOUT_CLASSIFICATION,//+this.fixedString
EMF,WITHOUT_CLASSIFICATION,// This pattern has a fixed string of which length is more than one.
EMF,WITHOUT_CLASSIFICATION,// ModifierOp
EMF,WITHOUT_CLASSIFICATION,"/*    public ParseException(String mes) {        this(mes -1);    }    */"
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Creates UnionOp");
EMF,WITHOUT_CLASSIFICATION,// Legacy word characters
EMF,WITHOUT_CLASSIFICATION,// RANGE NRANGE
EMF,WITHOUT_CLASSIFICATION,// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub
EMF,WITHOUT_CLASSIFICATION,/*0B80..0BFF;*/
EMF,WITHOUT_CLASSIFICATION,// This is the page for the table viewer. //
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+" "+tok.ranges.length);
EMF,WITHOUT_CLASSIFICATION,// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o
EMF,WITHOUT_CLASSIFICATION,// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Token#addRange(): "+start+" "+end);
EMF,WITHOUT_CLASSIFICATION,// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub
EMF,WITHOUT_CLASSIFICATION,// Not overlapped // src1:          o-----o // src2: o----o
EMF,WITHOUT_CLASSIFICATION,// for UNIoN
EMF,WITHOUT_CLASSIFICATION,// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1
EMF,WITHOUT_CLASSIFICATION,// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2
EMF,WITHOUT_CLASSIFICATION,// Not overlapped // src:          o-----o // sub: o----o
EMF,WITHOUT_CLASSIFICATION,// s&0x1f : 0-31
EMF,WITHOUT_CLASSIFICATION,// for UNION
EMF,WITHOUT_CLASSIFICATION,// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //
EMF,WITHOUT_CLASSIFICATION,// In a character class this.chardata has one character that is to say // a pair of surrogates is composed and stored to this.chardata.
EMF,WITHOUT_CLASSIFICATION,// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //
EMF,WITHOUT_CLASSIFICATION,// handle category escape
EMF,WITHOUT_CLASSIFICATION,//this.setLocale(locale);
EMF,WITHOUT_CLASSIFICATION,// Skips '.'
EMF,WITHOUT_CLASSIFICATION,// Through down
EMF,WITHOUT_CLASSIFICATION,// The one object in the resource's extent should be the root object. //
EMF,WITHOUT_CLASSIFICATION,// conditional // this.offsets points the next of '('.
EMF,WITHOUT_CLASSIFICATION,// Options
EMF,WITHOUT_CLASSIFICATION,//tok = Token.createConcat(tok this.parseFactor());
EMF,WITHOUT_CLASSIFICATION,// Parses yes/no-patterns.
EMF,WITHOUT_CLASSIFICATION,// this.offset points the next of '('
EMF,WITHOUT_CLASSIFICATION,// Parses a condition.
EMF,WITHOUT_CLASSIFICATION,// '(?:' // '(?(' // (?modifiers ... )
EMF,WITHOUT_CLASSIFICATION,// such as (?-i)
EMF,WITHOUT_CLASSIFICATION,// {minmax}
EMF,WITHOUT_CLASSIFICATION,// separate fields with an empty line
EMF,WITHOUT_CLASSIFICATION,// this.offset -> next of '{'
EMF,WITHOUT_CLASSIFICATION,// Save the resource to the file system. //
EMF,WITHOUT_CLASSIFICATION,// Set the value at the previously allocated index and return the previous value there. //
EMF,WITHOUT_CLASSIFICATION,/*0B00..0B7F;*/
EMF,WITHOUT_CLASSIFICATION,// If there is a cached result return it. // We expect that if the package is set to be a proxy  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //
EMF,WITHOUT_CLASSIFICATION,// ***** Really?
EMF,WITHOUT_CLASSIFICATION,// If we turn the package into a proxy ensure that the child classifiers clear their cached container. //
EMF,WITHOUT_CLASSIFICATION,// if not shorthands... // Here is no '-'.
EMF,WITHOUT_CLASSIFICATION,// *** It is not a bug.
EMF,WITHOUT_CLASSIFICATION,// Update the workbench's knowledge of the file's contents. //
EMF,WITHOUT_CLASSIFICATION,/*20D0..20FF;*/
EMF,WITHOUT_CLASSIFICATION,// **** We can not optimize.
EMF,WITHOUT_CLASSIFICATION,// infinity
EMF,WITHOUT_CLASSIFICATION,// When this.child.getMaxLength() < 0 // this returns minus value
EMF,WITHOUT_CLASSIFICATION,//blockNames in UNICODE 3.1 that supported by XML Schema REC
EMF,WITHOUT_CLASSIFICATION,// This is the page for the table tree viewer. //
EMF,WITHOUT_CLASSIFICATION,// Skip if there's an equality filter and the values aren't equal. //
EMF,WITHOUT_CLASSIFICATION,// The methods were matched by a process that doesn't consider the // parameters
EMF,WITHOUT_CLASSIFICATION,/*02B0..02FF;*/
EMF,WITHOUT_CLASSIFICATION,// Look for the annotation with the matching source. //
EMF,WITHOUT_CLASSIFICATION,// We can't find the class so we don't want this class loader // but instead want the last result that was able to load the class. //
EMF,WITHOUT_CLASSIFICATION,// Don't push method annotations into redirected methods. //
EMF,WITHOUT_CLASSIFICATION,// Create a resource for this file. //
EMF,WITHOUT_CLASSIFICATION,// This just notifies those things that are affected by the section. //
EMF,WITHOUT_CLASSIFICATION,/*0C80..0CFF;*/
EMF,WITHOUT_CLASSIFICATION,/*0C00..0C7F;*/
EMF,WITHOUT_CLASSIFICATION,// Ensures that this editor will only display the page's tab // area if there are more than one page //
EMF,WITHOUT_CLASSIFICATION,/*0E80..0EFF;*/
EMF,WITHOUT_CLASSIFICATION,/*0D80..0DFF;*/
EMF,WITHOUT_CLASSIFICATION,/*0E00..0E7F;*/
EMF,WITHOUT_CLASSIFICATION,/*0F00..0FFF;*/
EMF,WITHOUT_CLASSIFICATION,/*13A0..13FF;*/
EMF,WITHOUT_CLASSIFICATION,/*20A0..20CF;*/
EMF,WITHOUT_CLASSIFICATION,/*1F00..1FFF;*/
EMF,WITHOUT_CLASSIFICATION,/*1E00..1EFF;*/
EMF,WITHOUT_CLASSIFICATION,/*2E80..2EFF;*/
EMF,WITHOUT_CLASSIFICATION,// Search the local scope for a resolution of the type parameter name. //
EMF,WITHOUT_CLASSIFICATION,// Create the source and target JCompilationUnit. //
EMF,WITHOUT_CLASSIFICATION,// Set the instance type name instead since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //
EMF,WITHOUT_CLASSIFICATION,/*25A0..25FF;*/
EMF,WITHOUT_CLASSIFICATION,// You can only add type arguments if there are type parameters not yet used up. //
EMF,WITHOUT_CLASSIFICATION,// Only if you are contained by a generic type can you have bounds // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //
EMF,WITHOUT_CLASSIFICATION,// apply changes using ASTRewrite //
EMF,WITHOUT_CLASSIFICATION,// Don't use the normal reference copying for eOpposite. //
EMF,WITHOUT_CLASSIFICATION,// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //
EMF,WITHOUT_CLASSIFICATION,// If the list is empty we need to add all the objects // otherwise the reference is bidirectional and the list is at least partially populated. //
EMF,WITHOUT_CLASSIFICATION,// If an input stream can't be created ensure that the resource is still considered loaded after the failure // and do all the same processing we'd do if we actually were able to create a valid input stream. //
EMF,WITHOUT_CLASSIFICATION,// apply additional edits like replacing or commenting out nodes //
EMF,WITHOUT_CLASSIFICATION,/*2F00..2FDF;*/
EMF,WITHOUT_CLASSIFICATION,// Build a list of the keys //
EMF,WITHOUT_CLASSIFICATION,// Do the extent processing that should have been done for the root but was actualljy done for the document root. //
EMF,WITHOUT_CLASSIFICATION,/*31A0..31BF;*/
EMF,WITHOUT_CLASSIFICATION,// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)
EMF,WITHOUT_CLASSIFICATION,/*30A0..30FF;*/
EMF,WITHOUT_CLASSIFICATION,/*FEFF..FEFF;*/
EMF,WITHOUT_CLASSIFICATION,/*AC00..D7A3;*/
EMF,WITHOUT_CLASSIFICATION,// Reserve a place to insert xmlns declarations after we know what they all are. //
EMF,WITHOUT_CLASSIFICATION,/*FE50..FE6F;*/
EMF,WITHOUT_CLASSIFICATION,/*A490..A4CF;*/
EMF,WITHOUT_CLASSIFICATION,/*4E00..9FFF;*/
EMF,WITHOUT_CLASSIFICATION,/*FE30..FE4F;*/
EMF,WITHOUT_CLASSIFICATION,// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used
EMF,WITHOUT_CLASSIFICATION,/*F900..FAFF;*/
EMF,WITHOUT_CLASSIFICATION,/*E000..F8FF;*/
EMF,WITHOUT_CLASSIFICATION,/*FE20..FE2F;*/
EMF,WITHOUT_CLASSIFICATION,/*FB00..FB4F;*/
EMF,WITHOUT_CLASSIFICATION,/*2F800..2FA1F;*/
EMF,WITHOUT_CLASSIFICATION,/*1D100..1D1FF;*/
EMF,WITHOUT_CLASSIFICATION,/*1D000..1D0FF;*/
EMF,WITHOUT_CLASSIFICATION,/*E0000..E007F;*/
EMF,WITHOUT_CLASSIFICATION,// for all characters
EMF,WITHOUT_CLASSIFICATION,// If we're creating a child under an object in a feature map the selection will be the feature map entry. // We want to replace it with the model object. //
EMF,WITHOUT_CLASSIFICATION,//missing 2 private use add manually
EMF,WITHOUT_CLASSIFICATION,// Exit this loop
EMF,WITHOUT_CLASSIFICATION,// [{ASSIGNED}]-[{M}{C}]
EMF,WITHOUT_CLASSIFICATION,// Add it to the list and remove it from the other list. //
EMF,WITHOUT_CLASSIFICATION,// Doing this just makes focus go to the default control not the control that last has focus. // // super.setFocus();
EMF,WITHOUT_CLASSIFICATION,// Commands should operate on the values not their wrappers.  If the command's values needed to be unwrapped // we'll back get a new CommandParameter. //
EMF,WITHOUT_CLASSIFICATION,// synchronized // if null
EMF,WITHOUT_CLASSIFICATION,// Subraction
EMF,WITHOUT_CLASSIFICATION,// hangul_medial and hangul_final // extras
EMF,WITHOUT_CLASSIFICATION,// This is CONCAT and new child is CONCAT.
EMF,WITHOUT_CLASSIFICATION,// base_char?
EMF,WITHOUT_CLASSIFICATION,// Replace previous token by STRING
EMF,WITHOUT_CLASSIFICATION,//System.err.println("Merge '"+previous+"' and '"+tok+"'.");
EMF,WITHOUT_CLASSIFICATION,// CRRIAGE RETURN U+000D
EMF,WITHOUT_CLASSIFICATION,// \ + c // backsolidus
EMF,WITHOUT_CLASSIFICATION,// LINE FEED U+000A
EMF,WITHOUT_CLASSIFICATION,// if not shorthands...
EMF,WITHOUT_CLASSIFICATION,// if - is at the last position of the group
EMF,WITHOUT_CLASSIFICATION,// Here is no '-'.
EMF,WITHOUT_CLASSIFICATION,// c '-' ']' -> '-' is a single-range.
EMF,WITHOUT_CLASSIFICATION,// return actucal char
EMF,WITHOUT_CLASSIFICATION,// HORIZONTAL TABULATION U+0009
EMF,WITHOUT_CLASSIFICATION,// Recursion
EMF,WITHOUT_CLASSIFICATION,// Found '-' // Is this '-' is a from-to token?? // Skips '-'
EMF,WITHOUT_CLASSIFICATION,// Add the binding to the provided hash table: //
EMF,WITHOUT_CLASSIFICATION,// Create the copy //
EMF,WITHOUT_CLASSIFICATION,// If we didn't find authority we need to back up. Attempt to // match against abs_path next.
EMF,WITHOUT_CLASSIFICATION,// Check if we found a resolution for it. //
EMF,WITHOUT_CLASSIFICATION,// Otherwise recursively call ourselves to substitute it in context if necessary. //
EMF,WITHOUT_CLASSIFICATION,// Unassigned
EMF,WITHOUT_CLASSIFICATION,// Add back in the array indices if there are any. //
EMF,WITHOUT_CLASSIFICATION,//One PAD  e.g. 3cQ[Pad]
EMF,WITHOUT_CLASSIFICATION,// Just import the name or use it directly. //
EMF,WITHOUT_CLASSIFICATION,//build table of Pi values
EMF,WITHOUT_CLASSIFICATION,/*FE70..FEFE;*/
EMF,WITHOUT_CLASSIFICATION,// Check if the host is a valid IPv6reference.
EMF,WITHOUT_CLASSIFICATION,/*0A80..0AFF;*/
EMF,WITHOUT_CLASSIFICATION,// Load the model and if it's not one already considered e.g. a local version in the workspace process its GenPackages. //
EMF,WITHOUT_CLASSIFICATION,//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero
EMF,WITHOUT_CLASSIFICATION,// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());
EMF,WITHOUT_CLASSIFICATION,// If we don't already have it try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //
EMF,WITHOUT_CLASSIFICATION,// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
EMF,WITHOUT_CLASSIFICATION,// form integral number of 6-bit groups
EMF,WITHOUT_CLASSIFICATION,// This implementation was changed to not introduce multi line content.
EMF,WITHOUT_CLASSIFICATION,//should be divisible by four
EMF,WITHOUT_CLASSIFICATION,// remove white spaces
EMF,WITHOUT_CLASSIFICATION,// Add support for Cp1252 and its friends
EMF,WITHOUT_CLASSIFICATION,// This came from trial and error yielding decent results on all // platforms.  It should be consistent with activate(). //
EMF,WITHOUT_CLASSIFICATION,// count characters that's not whitespace
EMF,WITHOUT_CLASSIFICATION,//No PAD e.g 3cQl
EMF,WITHOUT_CLASSIFICATION,// proposed addition (see above for details):
EMF,WITHOUT_CLASSIFICATION,"/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */"
EMF,WITHOUT_CLASSIFICATION,// give up if we couldn't create the command; otherwise use a // CommandActionDelegate to set the action's text tool-tip icon // etc. or just use the default icon
EMF,WITHOUT_CLASSIFICATION,//titleLabel.setBackground(null null); // titleLabel.setForeground(null);
EMF,WITHOUT_CLASSIFICATION,// Add ASCII Letters
EMF,WITHOUT_CLASSIFICATION,// presence of the host (whether valid or empty) means // double-slashes which means generic uri
EMF,WITHOUT_CLASSIFICATION,// Add ASCII Digits and ASCII Hex Numbers
EMF,WITHOUT_CLASSIFICATION,//RFC 2732 added '[' and ']' as reserved characters
EMF,WITHOUT_CLASSIFICATION,// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?
EMF,WITHOUT_CLASSIFICATION,// class EncodingMap
EMF,WITHOUT_CLASSIFICATION,// // Public static methods //
EMF,WITHOUT_CLASSIFICATION,// set rewriter on the new node
EMF,WITHOUT_CLASSIFICATION,// Add Path Characters
EMF,WITHOUT_CLASSIFICATION,// Add Scheme Characters
EMF,WITHOUT_CLASSIFICATION,// Add Reserved Characters
EMF,WITHOUT_CLASSIFICATION,// Add Mark Characters
EMF,WITHOUT_CLASSIFICATION,// Just use null.
EMF,WITHOUT_CLASSIFICATION,// Authority will be everything up to path query or fragment
EMF,WITHOUT_CLASSIFICATION,// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos
EMF,WITHOUT_CLASSIFICATION,// 6a - get all but the last segment of the base URI path
EMF,WITHOUT_CLASSIFICATION,// check for absolute path - RFC 2396 5.2 #5
EMF,WITHOUT_CLASSIFICATION,// assume {min}
EMF,WITHOUT_CLASSIFICATION,// userinfo is everything up to @
EMF,WITHOUT_CLASSIFICATION,// 6c - remove all "./" where "." is a complete path segment
EMF,WITHOUT_CLASSIFICATION,// through down
EMF,WITHOUT_CLASSIFICATION,// 6b - append the relative URI path
EMF,WITHOUT_CLASSIFICATION,// port
EMF,WITHOUT_CLASSIFICATION,// 6d - remove "." if path ends with "." as a complete path segment
EMF,WITHOUT_CLASSIFICATION,// host is everything up to last ':' or up to  // and including ']' if followed by ':'.
EMF,WITHOUT_CLASSIFICATION,// Userinfo can contain alphanumerics mark characters escaped // and ';'':''&''=''+''$'''
EMF,WITHOUT_CLASSIFICATION,// Check if the host is well formed.
EMF,WITHOUT_CLASSIFICATION,// Check that userinfo is well formed if it exists.
EMF,WITHOUT_CLASSIFICATION,// Points '('.
EMF,WITHOUT_CLASSIFICATION,// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]
EMF,WITHOUT_CLASSIFICATION,// Scan opaque part. // opaque_part = uric_no_slash *uric
EMF,WITHOUT_CLASSIFICATION,// fragment - starts with #
EMF,WITHOUT_CLASSIFICATION,// Check that that there are no more than three digits // in this segment.
EMF,WITHOUT_CLASSIFICATION,// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
EMF,WITHOUT_CLASSIFICATION,// // Constants //
EMF,WITHOUT_CLASSIFICATION,// RFC 1034: Labels must be 63 characters or less.
EMF,WITHOUT_CLASSIFICATION,// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric
EMF,WITHOUT_CLASSIFICATION,// Registry based authority.
EMF,WITHOUT_CLASSIFICATION,// Check if string is a potential match for IPv6reference.
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) 49
EMF,WITHOUT_CLASSIFICATION,// Check that this segment is not greater than 255.
EMF,WITHOUT_CLASSIFICATION,// Address must contain 128-bits of information.
EMF,WITHOUT_CLASSIFICATION,// Fill 15 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Scan hex sequence before possible '::' or IPv4 address.
EMF,WITHOUT_CLASSIFICATION,// HGD::fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getFeature() msg.getOldValue() msg.getNewValue() msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,// Trailing zeros will fill out the rest of the address.
EMF,WITHOUT_CLASSIFICATION,// 3. Scan hex sequence after '::'.
EMF,WITHOUT_CLASSIFICATION,// This could be '::'.
EMF,WITHOUT_CLASSIFICATION,// which ASCII characters need to be escaped
EMF,WITHOUT_CLASSIFICATION,// There can be at most 4 hex digits per group.
EMF,WITHOUT_CLASSIFICATION,// If encoding happened create a new string; // otherwise return the orginal one.
EMF,WITHOUT_CLASSIFICATION,// Paint over the selected padding spaces with the // background colour.  On GTK the whole item not just // the text is selected so we don't do this. //
EMF,WITHOUT_CLASSIFICATION,// for each character in the anyURI
EMF,WITHOUT_CLASSIFICATION,// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71
EMF,WITHOUT_CLASSIFICATION,// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 53 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,//hgd::fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getStructuralFeature() msg.getOldValue() msg.getNewValue() msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,// Fill 20 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 10 of value (byte) -71
EMF,WITHOUT_CLASSIFICATION,// Fill 44 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// for Ecore or something that explicitly extends it we need to exclude // EObject which is already handled by the default case
EMF,WITHOUT_CLASSIFICATION,// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// We assume that the rootExtendsClass already implements it. //
EMF,WITHOUT_CLASSIFICATION,// Fill 12 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// There needs to be another URL protocol right after the archive protocol and not a "/". //
EMF,WITHOUT_CLASSIFICATION,// Fill 66 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 31 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 36 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// there is anything else but comma after constant - insert line break
EMF,WITHOUT_CLASSIFICATION,// Fill 23 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// When an object is controlled the only change will be in the new resource's contents so it must // refresh the whole viewer to hit the object's label. //
EMF,WITHOUT_CLASSIFICATION,// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// since enum constants are separated by commas they should always have the default range // we can not extend their range or reduce it
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// HGD::fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getStructuralFeature() msg.getOldValue() msg.getNewValue() msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,//HGD::fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getStructuralFeature() msg.getOldValue() msg.getNewValue() msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //
EMF,WITHOUT_CLASSIFICATION,// check if given node should use the default range (i.e. node removed) // or extended range (i.e. surrounding nodes removed)
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,//hgd::fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getFeature() msg.getOldValue() msg.getNewValue() msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 8 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 22 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 8 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Go directly to the right entry in the zip file  // get the stream  // and wrap it so that closing it closes the zip file. //
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87
EMF,WITHOUT_CLASSIFICATION,// Build list of wrapped children from the appropriate adapters. //
EMF,WITHOUT_CLASSIFICATION,// Parse as an attribute=value:
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,//fireNotifyChanged(msg.getNotifier() msg.getEventType() msg.getFeature() msg.getOldValue() msg.getNewValue() msg.getPosition());
EMF,WITHOUT_CLASSIFICATION,// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //
EMF,WITHOUT_CLASSIFICATION,// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Simple cases: no mix-ins for no inheritance or for a single base class. //
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Mix-ins are everything after the base class. //
EMF,WITHOUT_CLASSIFICATION,// This is for the in2out feature. //
EMF,WITHOUT_CLASSIFICATION,// Strips an escaped white space.
EMF,WITHOUT_CLASSIFICATION,// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //
EMF,WITHOUT_CLASSIFICATION,// If this is class has mixed content the mixed feature should always be included even if inherited and come first. //
EMF,WITHOUT_CLASSIFICATION,// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Add all other create child features that this item provider is responsible for. //
EMF,WITHOUT_CLASSIFICATION,// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
EMF,WITHOUT_CLASSIFICATION,// Either execute or redo the command as appropriate. //
EMF,WITHOUT_CLASSIFICATION,// Fill 8 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// isSpace(int):boolean
EMF,WITHOUT_CLASSIFICATION,// Fill 4 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 40 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Fill 9 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Skip over the command that threw the exception. //
EMF,WITHOUT_CLASSIFICATION,// This is for the out2in feature. //
EMF,WITHOUT_CLASSIFICATION,// isMarkup(int):boolean
EMF,WITHOUT_CLASSIFICATION,// Only return the feedback for an executable command. //
EMF,WITHOUT_CLASSIFICATION,// isContent(int):boolean
EMF,WITHOUT_CLASSIFICATION,// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out // then we can never reach a point where a save is not necessary not even if we undo all the way back to the beginning. //
EMF,WITHOUT_CLASSIFICATION,// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// isInvalid(int):boolean
EMF,WITHOUT_CLASSIFICATION,// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// isValid(int):boolean
EMF,WITHOUT_CLASSIFICATION,// Return whether there is a list the value is in the list and index is in range... //
EMF,WITHOUT_CLASSIFICATION,// isName(int):boolean
EMF,WITHOUT_CLASSIFICATION,// replace arguments that match the name of the fields with the initializer value of the field //
EMF,WITHOUT_CLASSIFICATION,// isNCName(int):boolean
EMF,WITHOUT_CLASSIFICATION,// encodings
EMF,WITHOUT_CLASSIFICATION,"/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */"
EMF,WITHOUT_CLASSIFICATION,// isPubid(int):boolean
EMF,WITHOUT_CLASSIFICATION,"/*      * [7] Nmtoken ::= (NameChar)+      */"
EMF,WITHOUT_CLASSIFICATION,"/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */"
EMF,WITHOUT_CLASSIFICATION,// Set the range so that we re-check when we get into the other half. //
EMF,WITHOUT_CLASSIFICATION,//order constants
EMF,WITHOUT_CLASSIFICATION,// class XMLChar
EMF,WITHOUT_CLASSIFICATION,// interface TypeValidator
EMF,WITHOUT_CLASSIFICATION,// If this looks like a feature getter a kind property will allow it to be recognized properly. //
EMF,WITHOUT_CLASSIFICATION,// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)
EMF,WITHOUT_CLASSIFICATION,// Remove from by position in reverse order. //
EMF,WITHOUT_CLASSIFICATION,// keep comments between nodes when removing or moving nodes
EMF,WITHOUT_CLASSIFICATION,// Type parameter casts can't be checked. //
EMF,WITHOUT_CLASSIFICATION,// Break the cycle. //
EMF,WITHOUT_CLASSIFICATION,// This ensures that we are dealing with actual MOF objects. //
EMF,WITHOUT_CLASSIFICATION,// if the character is in the range 0x30 ~ 0x39 return its int value (0~9) // otherwise return -1
EMF,WITHOUT_CLASSIFICATION,//Ecore2XMLSwitch
EMF,WITHOUT_CLASSIFICATION,// Check whether there is an opposite that needs attention. //
EMF,WITHOUT_CLASSIFICATION,// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."
EMF,WITHOUT_CLASSIFICATION,// The byte is automatically widened into an int with sign extension // for shifting.  This can introduce 1's to the left of the byte which // must be cleared by masking before looking up the hex digit. //
EMF,WITHOUT_CLASSIFICATION,// buttonComposite has to be the first child of composite because subclasses are expecting this.
EMF,WITHOUT_CLASSIFICATION,// This is to handle a genmodel produced by rose2genmodel. //
EMF,WITHOUT_CLASSIFICATION,// If the object is an input or output object then use it. //
EMF,WITHOUT_CLASSIFICATION,// Process the children recursively. //
EMF,WITHOUT_CLASSIFICATION,// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33
EMF,WITHOUT_CLASSIFICATION,// Common to all URI types.
EMF,WITHOUT_CLASSIFICATION,// Remove variables since the plugin.xml should provide the complete path information. //
EMF,WITHOUT_CLASSIFICATION,// Look for a single-char work delimiter: //
EMF,WITHOUT_CLASSIFICATION,//SimpleAnyTypeImpl
EMF,WITHOUT_CLASSIFICATION,// oldWidth = table.getClientArea().width;
EMF,WITHOUT_CLASSIFICATION,// The lower-cased schemes that will be used to identify archive URIs.
EMF,WITHOUT_CLASSIFICATION,// Special segment values interpreted at resolve and resolve time.
EMF,WITHOUT_CLASSIFICATION,// Consult the generator option for backwards compatibility. //
EMF,WITHOUT_CLASSIFICATION,// Optimize the performance of applying the import regular  // expressions locating the last import line //
EMF,WITHOUT_CLASSIFICATION,// Don't do replacement if we just did one or if previous line // ended with a semicolon. //
EMF,WITHOUT_CLASSIFICATION,// Don't do replacement if previous line ended with a comment. //
EMF,WITHOUT_CLASSIFICATION,// Returns the upper half bitmask for all the ASCII characters in the given // string.
EMF,WITHOUT_CLASSIFICATION,// We can't undo it so we'd better give up. //
EMF,WITHOUT_CLASSIFICATION,// If the path isn't within the root of the archive  // create a new URI for the folder location of the archive  // so we can look in the folder that contains it. //
EMF,WITHOUT_CLASSIFICATION,// Platform.resolve() doesn't work if the project is encoded. //
EMF,WITHOUT_CLASSIFICATION,// There must be at least one archive path. //
EMF,WITHOUT_CLASSIFICATION,// There should be at least one archive separator per scheme. //
EMF,WITHOUT_CLASSIFICATION,// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //
EMF,WITHOUT_CLASSIFICATION,// Skip a scheme for the archive accessor to be handled directly here. //
EMF,WITHOUT_CLASSIFICATION,// Create the delegate URL. //
EMF,WITHOUT_CLASSIFICATION,// The cutoff point to the next archive. //
EMF,WITHOUT_CLASSIFICATION,//missing Specials add manually // 84
EMF,WITHOUT_CLASSIFICATION,// Construct the input stream in a special efficient way for case of a file scheme. //
EMF,WITHOUT_CLASSIFICATION,// Just get the stream from the URL. //
EMF,WITHOUT_CLASSIFICATION,// The name to be used for the entry. //
EMF,WITHOUT_CLASSIFICATION,// Skip over this archive path to the next one since we are handling this one special. //
EMF,WITHOUT_CLASSIFICATION,// Loop over the archive paths. //
EMF,WITHOUT_CLASSIFICATION,// The entry name to be matched. //
EMF,WITHOUT_CLASSIFICATION,// Wrap the input stream as a zip stream to scan it's contents for a match. //
EMF,WITHOUT_CLASSIFICATION,// Skip to the next archive path and continue the loop. //
EMF,WITHOUT_CLASSIFICATION,// Create the delegate URL //
EMF,WITHOUT_CLASSIFICATION,// Record the input and output streams for closing in case of failure so that handles are not left open. //
EMF,WITHOUT_CLASSIFICATION,// The most deeply nested output stream that will be returned wrapped as the result. //
EMF,WITHOUT_CLASSIFICATION,// A buffer for transferring archive contents. //
EMF,WITHOUT_CLASSIFICATION,// The name that will be used as the archive entry. //
EMF,WITHOUT_CLASSIFICATION,// Wrap the current result as a zip stream and record it for loop-based recursion. //
EMF,WITHOUT_CLASSIFICATION,// Loop over the entries in the zip stream. //
EMF,WITHOUT_CLASSIFICATION,// Transfer the entry and its contents. //
EMF,WITHOUT_CLASSIFICATION,// Find the next archive path and continue "recursively" if there is one. //
EMF,WITHOUT_CLASSIFICATION,// Get the Java literal expression for the value. //
EMF,WITHOUT_CLASSIFICATION,// Create no entry since we are deleting and return immediately. //
EMF,WITHOUT_CLASSIFICATION,// Ensure that it won't be closed in the finally block. //
EMF,WITHOUT_CLASSIFICATION,// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);
EMF,WITHOUT_CLASSIFICATION,// Wrap the deepest result so that on close the results are finally transferred. //
EMF,WITHOUT_CLASSIFICATION,// Make sure we close only once. //
EMF,WITHOUT_CLASSIFICATION,// Close for real so that the temporary file is ready to be read. //
EMF,WITHOUT_CLASSIFICATION,// Make sure they are closed no matter what bad thing happens. //
EMF,WITHOUT_CLASSIFICATION,// Close in case of failure to complete. //
EMF,WITHOUT_CLASSIFICATION,// Close if we created this. //
EMF,WITHOUT_CLASSIFICATION,// If there are some... //
EMF,WITHOUT_CLASSIFICATION,// The termination guard is in the body. //
EMF,WITHOUT_CLASSIFICATION,// Otherwise produce an expression that uses the appropriate factory to create a value from the literal. //
EMF,WITHOUT_CLASSIFICATION,// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)
EMF,WITHOUT_CLASSIFICATION,// If the location indicates after add one more. //
EMF,WITHOUT_CLASSIFICATION,// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //
EMF,WITHOUT_CLASSIFICATION,// If we can't execute this one we just can't do it at all. //
EMF,WITHOUT_CLASSIFICATION,// The most recently processed command will never have been executed. //
EMF,WITHOUT_CLASSIFICATION,// We want to unroll all the effects of the previous commands. //
EMF,WITHOUT_CLASSIFICATION,// Iterate back over the executed commands to undo them. //
EMF,WITHOUT_CLASSIFICATION,// Clear the list past the top. //
EMF,WITHOUT_CLASSIFICATION,// If this owned object is one from the collection... //
EMF,WITHOUT_CLASSIFICATION,// oldValue = owner.eGet(feature);
EMF,WITHOUT_CLASSIFICATION,// Record the successfully executed command. //
EMF,WITHOUT_CLASSIFICATION,// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment
EMF,WITHOUT_CLASSIFICATION,// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below
EMF,WITHOUT_CLASSIFICATION,// This forces isSaveNeded to always be true. //
EMF,WITHOUT_CLASSIFICATION,// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;
EMF,WITHOUT_CLASSIFICATION,// Clear the list. //
EMF,WITHOUT_CLASSIFICATION,//iri = iri || containsNonASCII(segments[i]);
EMF,WITHOUT_CLASSIFICATION,//  Remember where we are now. //
EMF,WITHOUT_CLASSIFICATION,// This is the default return value. //
EMF,WITHOUT_CLASSIFICATION,// <p>A valid query may be null or contain any allowed URI characters.
EMF,WITHOUT_CLASSIFICATION,// Compute the GeneratorData for the given object and its children then for the parents of the given object. //
EMF,WITHOUT_CLASSIFICATION,// If the base package isn't set but there is a parent package us it's information instead. //
EMF,WITHOUT_CLASSIFICATION,//XMLTypeValidator
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,//XMLTypeResourceImpl
EMF,WITHOUT_CLASSIFICATION,// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //
EMF,WITHOUT_CLASSIFICATION,// Iterate forward over the undone commands to redo them. //
EMF,WITHOUT_CLASSIFICATION,// This ensures that these useless state variables at least reflect the right value. //
EMF,WITHOUT_CLASSIFICATION,// Copy to a list and allocate positions. //
EMF,WITHOUT_CLASSIFICATION,// Give all generator adapters the chance to do tear down. //
EMF,WITHOUT_CLASSIFICATION,// Ignore derived features. //
EMF,WITHOUT_CLASSIFICATION,// end setting whole list
EMF,WITHOUT_CLASSIFICATION,// If we aren't simply removing all the old values... //
EMF,WITHOUT_CLASSIFICATION,// Determine the values that will remain and move them into the right order if necessary. //
EMF,WITHOUT_CLASSIFICATION,// If there are values to remove append a command for them. //
EMF,WITHOUT_CLASSIFICATION,// Look through all the references... //
EMF,WITHOUT_CLASSIFICATION,// Is the feature an attribute of the owner... //
EMF,WITHOUT_CLASSIFICATION,// Don't set the type if it's already set. //
EMF,WITHOUT_CLASSIFICATION,// ((value != null)
EMF,WITHOUT_CLASSIFICATION,// Add the collection //
EMF,WITHOUT_CLASSIFICATION,// Get the owner's meta object. //
EMF,WITHOUT_CLASSIFICATION,// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //
EMF,WITHOUT_CLASSIFICATION,// The classifier of an references's generic type must be a class. //
EMF,WITHOUT_CLASSIFICATION,// (value == null) && (oldValue == null) // A simple set/unset will suffice. //
EMF,WITHOUT_CLASSIFICATION,// specify the exact parent of annotations
EMF,WITHOUT_CLASSIFICATION,// If there is an owner. //
EMF,WITHOUT_CLASSIFICATION,// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //
EMF,WITHOUT_CLASSIFICATION,// (value != null) && (oldValue == null) // Add owner to new value. //
EMF,WITHOUT_CLASSIFICATION,// For consistency we always set 1-1 container relations from the container end. //
EMF,WITHOUT_CLASSIFICATION,// For a 1-to-1 we can directly create a SetCommand. //
EMF,WITHOUT_CLASSIFICATION,// Make sure the container is not being put into a contained object. //
EMF,WITHOUT_CLASSIFICATION,// We can try to do a drop on instead. //
EMF,WITHOUT_CLASSIFICATION,// current document reference: use base path and query
EMF,WITHOUT_CLASSIFICATION,// If must be of this type then. //
EMF,WITHOUT_CLASSIFICATION,// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.
EMF,WITHOUT_CLASSIFICATION,// If the other end is single then we should unset the owner from the old value's opposite feature so that undo will put it back. //
EMF,WITHOUT_CLASSIFICATION,// If any objects are matched. //
EMF,WITHOUT_CLASSIFICATION,// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)
EMF,WITHOUT_CLASSIFICATION,// Either set or unset the feature. //
EMF,WITHOUT_CLASSIFICATION,// It must be an unsettable feature to be null and considered set. //
EMF,WITHOUT_CLASSIFICATION,// Set the bounds so that we re-check when we are closer to the middle. //
EMF,WITHOUT_CLASSIFICATION,// If it's a feature map we'll need to validate the entry feature and enforce its multiplicity restraints. //
EMF,WITHOUT_CLASSIFICATION,// Either set or unset the old value. //
EMF,WITHOUT_CLASSIFICATION,// We'd like the owner selected after this undo completes. //
EMF,WITHOUT_CLASSIFICATION,// Check that the object isn't already in a unique list. //
EMF,WITHOUT_CLASSIFICATION,// Check type of object. //
EMF,WITHOUT_CLASSIFICATION,// Check each object...  //
EMF,WITHOUT_CLASSIFICATION,// Remove the collection from the list by index. //
EMF,WITHOUT_CLASSIFICATION,// If we could do a drop insert operation... //
EMF,WITHOUT_CLASSIFICATION,// if one is null they'll all be null
EMF,WITHOUT_CLASSIFICATION,// Possible scope for the ChangeRecorder
EMF,WITHOUT_CLASSIFICATION,// If the location is near the boundary we'll start by trying to do a drop insert. //
EMF,WITHOUT_CLASSIFICATION,// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();
EMF,WITHOUT_CLASSIFICATION,// If there isn't something obviously wrong with the arguments... //
EMF,WITHOUT_CLASSIFICATION,// We'll default to this. //
EMF,WITHOUT_CLASSIFICATION,// Create commands to create copies of the children. //
EMF,WITHOUT_CLASSIFICATION,// Prepare the right type of operation. //
EMF,WITHOUT_CLASSIFICATION,// The feedback is set based on which half we are in. // If the command isn't executable these values won't be used. //
EMF,WITHOUT_CLASSIFICATION,// We'll always be wrong for these arguments so don't bother re-checking. //
EMF,WITHOUT_CLASSIFICATION,// We are near the middle so we'll start by trying to do a drop on. //
EMF,WITHOUT_CLASSIFICATION,// We can reset and try a drop insert instead. //
EMF,WITHOUT_CLASSIFICATION,// If we can do a drop on operation. //
EMF,WITHOUT_CLASSIFICATION,// Try to create a specific command based on the current desired operation. //
EMF,WITHOUT_CLASSIFICATION,// When we match the owner we're done. //
EMF,WITHOUT_CLASSIFICATION,// If we can't determine the parent. //
EMF,WITHOUT_CLASSIFICATION,// If the dragged objects share a parent... //
EMF,WITHOUT_CLASSIFICATION,// This is the name of the model. //
EMF,WITHOUT_CLASSIFICATION,// And add the copy. //
EMF,WITHOUT_CLASSIFICATION,// Copy the collection //
EMF,WITHOUT_CLASSIFICATION,// We don't want to copy insert an object before or after itself... //
EMF,WITHOUT_CLASSIFICATION,// Just remove the objects and add them. //
EMF,WITHOUT_CLASSIFICATION,// if optimize // if collection
EMF,WITHOUT_CLASSIFICATION,// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //
EMF,WITHOUT_CLASSIFICATION,// If we can't set the collection try setting use the single value of the collection. //
EMF,WITHOUT_CLASSIFICATION,// Add the value back in the right place. //
EMF,WITHOUT_CLASSIFICATION,// Determine if the operation is executable. //
EMF,WITHOUT_CLASSIFICATION,// Clean it up. //
EMF,WITHOUT_CLASSIFICATION,// Set the range so that we re-check when we get aren't in the middle. //
EMF,WITHOUT_CLASSIFICATION,// If the operation has changed significantly... //
EMF,WITHOUT_CLASSIFICATION,// Reset as in the constructor. //
EMF,WITHOUT_CLASSIFICATION,// Thread.dumpStack();
EMF,WITHOUT_CLASSIFICATION,// Remove the collection of replacements. //
EMF,WITHOUT_CLASSIFICATION,// Only return the operation for an executable command. //
EMF,WITHOUT_CLASSIFICATION,// Just return the cached result. //
EMF,WITHOUT_CLASSIFICATION,// Insert the collection at the right place. //
EMF,WITHOUT_CLASSIFICATION,// Make sure each object conforms to the type of the feature. //
EMF,WITHOUT_CLASSIFICATION,// An extent allows anything to be added. //
EMF,WITHOUT_CLASSIFICATION,// Record the position of the value in the owner list. //
EMF,WITHOUT_CLASSIFICATION,// Set the bounds so that we re-check when we get near the other end. //
EMF,WITHOUT_CLASSIFICATION,// We'd like the replaced selected after this undo replace completes. //
EMF,WITHOUT_CLASSIFICATION,// Set the arguments again. //
EMF,WITHOUT_CLASSIFICATION,// Create a strict compound command to do a copy and then add the result //
EMF,WITHOUT_CLASSIFICATION,// We need to check canExecute() here in case prepare() went down the "optimize" path. //
EMF,WITHOUT_CLASSIFICATION,// This will actually execute the copy command in order to check if the add can execute. //
EMF,WITHOUT_CLASSIFICATION,// Create a command to copy the clipboard. //
EMF,WITHOUT_CLASSIFICATION,// This will determine canExecute as efficiently as possible. //
EMF,WITHOUT_CLASSIFICATION,// Create a proxy that will create an add command. //
EMF,WITHOUT_CLASSIFICATION,// Record the index. //
EMF,WITHOUT_CLASSIFICATION,// Remove the object from the collection and add it to the equality list.  //
EMF,WITHOUT_CLASSIFICATION,// always include fragment even if null; // no validation needed since all components are from existing URIs
EMF,WITHOUT_CLASSIFICATION,// Remove the object from the collection and add it to the identity list. //
EMF,WITHOUT_CLASSIFICATION,// If either list is empty the result is simply the other. //
EMF,WITHOUT_CLASSIFICATION,// We'd like the owner selected after this remove completes. //
EMF,WITHOUT_CLASSIFICATION,// Merge the lists. //
EMF,WITHOUT_CLASSIFICATION,// Object iterators. //
EMF,WITHOUT_CLASSIFICATION,// Allocate list and array for objects and indices. //
EMF,WITHOUT_CLASSIFICATION,// Second pass: match by value equality. //
EMF,WITHOUT_CLASSIFICATION,// Create view form.     //control = new ViewForm(parent getStyle());
EMF,WITHOUT_CLASSIFICATION,// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //
EMF,WITHOUT_CLASSIFICATION,// Create commands to create the copy object(s). //
EMF,WITHOUT_CLASSIFICATION,// Record it for execution. //
EMF,WITHOUT_CLASSIFICATION,// Create an initialize copy command for each of the created objects. //
EMF,WITHOUT_CLASSIFICATION,// If there is a column object just convert it to a string. //
EMF,WITHOUT_CLASSIFICATION,// This will call prepare() which will partially execute the command. //
EMF,WITHOUT_CLASSIFICATION,// Create a command to create a copy of the object. //
EMF,WITHOUT_CLASSIFICATION,// If command has no owner specified //
EMF,WITHOUT_CLASSIFICATION,// If the owner parameter is set we delegate to the owner's adapter //
EMF,WITHOUT_CLASSIFICATION,// If there is an adapter of the correct type... //
EMF,WITHOUT_CLASSIFICATION,// Does this part provide an editing domain? //
EMF,WITHOUT_CLASSIFICATION,//MappingFactoryImpl
EMF,WITHOUT_CLASSIFICATION,// Remove and dispose any wrappers for remaining old children. //
EMF,WITHOUT_CLASSIFICATION,//MappingHelperImpl
EMF,WITHOUT_CLASSIFICATION,// Set the mapper to build an XSD2EcoreMappingRoot if available. //
EMF,WITHOUT_CLASSIFICATION,// We will iterate over the whole collection removing some as we go. //
EMF,WITHOUT_CLASSIFICATION,//MappingStrategyImpl
EMF,WITHOUT_CLASSIFICATION,//TreeSwitch
EMF,WITHOUT_CLASSIFICATION,// Take the first object and remove it. //
EMF,WITHOUT_CLASSIFICATION,// Get the next object and check if it has the same parent. //
EMF,WITHOUT_CLASSIFICATION,// The parent is null which implies a top-level removal so create a self-removing command. //
EMF,WITHOUT_CLASSIFICATION,// We will now create a command with this implied parent //
EMF,WITHOUT_CLASSIFICATION,// Remove the object and add it as a sibling. //
EMF,WITHOUT_CLASSIFICATION,// protected Object labelProvider;
EMF,WITHOUT_CLASSIFICATION,// If no object is specified but an existing sibling is the object is // its parent. //
EMF,WITHOUT_CLASSIFICATION,//return getDefaultValue(attribute.getEType());
EMF,WITHOUT_CLASSIFICATION,// If any children were added or removed reset the indices.
EMF,WITHOUT_CLASSIFICATION,// This URI handler redirect the URI based on the mapping. //
EMF,WITHOUT_CLASSIFICATION,// This handles IStructuredSelection. //
EMF,WITHOUT_CLASSIFICATION,// We need to check canExecute() in case optimize is true. //
EMF,WITHOUT_CLASSIFICATION,// Add in additional wrappers to search. //
EMF,WITHOUT_CLASSIFICATION,// Computes a three-character escape sequence for the byte appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.
EMF,WITHOUT_CLASSIFICATION,// If there are objects to populate... //
EMF,WITHOUT_CLASSIFICATION,// Fill in the result array with labels and re-populate the original list in order. //
EMF,WITHOUT_CLASSIFICATION,// No color is a good default. //
EMF,WITHOUT_CLASSIFICATION,// No font is a good default. //
EMF,WITHOUT_CLASSIFICATION,// Otherwise we could check that the adapter implements interface IItemFontProvider. //
EMF,WITHOUT_CLASSIFICATION,"/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */"
EMF,WITHOUT_CLASSIFICATION,//public String getUpdateableText(Object object)
EMF,WITHOUT_CLASSIFICATION,// Iterate over all the set feature to factor each child to the right reference. //
EMF,WITHOUT_CLASSIFICATION,// Check that the value is type compatible with the entry feature. //
EMF,WITHOUT_CLASSIFICATION,//FunctionPairImpl
EMF,WITHOUT_CLASSIFICATION,// When the value is changed the property sheet page doesn't update the property sheet viewer input // before refreshing and this gets called on the obsolete wrapper. So we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,// If the last object was deleted and the selection was in the property sheet view the obsolete wrapper will // reference past the end of the list. //
EMF,WITHOUT_CLASSIFICATION,// Fill in the array with labels. //
EMF,WITHOUT_CLASSIFICATION,"/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/"
EMF,WITHOUT_CLASSIFICATION,// First try an existing implementation of getChildReference().  This provides backwards compatibility if that // method now deprecated was overridden. //
EMF,WITHOUT_CLASSIFICATION,// Use an existing getReferenceValue() override. //
EMF,WITHOUT_CLASSIFICATION,// If this object is compatible with this reference... //
EMF,WITHOUT_CLASSIFICATION,// Get the index into the list via this call to super. //
EMF,WITHOUT_CLASSIFICATION,// Find the index of a feature containing the sibling or an equivalent value in the collection of children // features. //
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,//XMLTypeFactory
EMF,WITHOUT_CLASSIFICATION,// Add child descriptors contributed by extenders. //
EMF,WITHOUT_CLASSIFICATION,// Set the index of the object value in the list via this call to super. //
EMF,WITHOUT_CLASSIFICATION,// Build the collection of new child descriptors. //
EMF,WITHOUT_CLASSIFICATION,// If we can open  an input stream then the plugin.properties is there and we have a good base URL. //
EMF,WITHOUT_CLASSIFICATION,// For each CommandParameter with a non-null multi-valued structural feature... //
EMF,WITHOUT_CLASSIFICATION,// Ensure there are no extraneous style bits. //
EMF,WITHOUT_CLASSIFICATION,//AnyTypeImpl
EMF,WITHOUT_CLASSIFICATION,// Assign default style bits if necessary and ensure none conflict. //
EMF,WITHOUT_CLASSIFICATION,//SpaceType
EMF,WITHOUT_CLASSIFICATION,// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos
EMF,WITHOUT_CLASSIFICATION,// Otherwise if a sibling feature was found iterate through the children features to find the index of // the child feature...  //
EMF,WITHOUT_CLASSIFICATION,// Iterator over all the child references to factor each child to the right reference. //
EMF,WITHOUT_CLASSIFICATION,// If the child feature follows the sibling feature the child should be first in its feature. //
EMF,WITHOUT_CLASSIFICATION,// Subclasses may override to add descriptors.
EMF,WITHOUT_CLASSIFICATION,// if there are no groups defined or matched but the whole pattern matches // then markup nodes with pattern name //
EMF,WITHOUT_CLASSIFICATION,// Is this child in this feature... //
EMF,WITHOUT_CLASSIFICATION,// On Motif selection color may be set as background. //
EMF,WITHOUT_CLASSIFICATION,// Is this object in this feature... //
EMF,WITHOUT_CLASSIFICATION,"/*   * Returns the help context id for this property.   */"
EMF,WITHOUT_CLASSIFICATION,// Restore original resource URI values. //
EMF,WITHOUT_CLASSIFICATION,// If all the objects are used up by the above then we can't do the command. //
EMF,WITHOUT_CLASSIFICATION,// Create a command to set this to null and remove the object from the other list. //
EMF,WITHOUT_CLASSIFICATION,// It's just a single value //
EMF,WITHOUT_CLASSIFICATION,// Consume the rest of the appropriate children. //
EMF,WITHOUT_CLASSIFICATION,// The "suffix" can actually be a substitution pattern for the package name. //
EMF,WITHOUT_CLASSIFICATION,// Correct the index if necessary. //
EMF,WITHOUT_CLASSIFICATION,// Create a command for this feature //
EMF,WITHOUT_CLASSIFICATION,// Compute the relative index as best as possible. //
EMF,WITHOUT_CLASSIFICATION,// Create a command for this feature  //
EMF,WITHOUT_CLASSIFICATION,// continue to next case
EMF,WITHOUT_CLASSIFICATION,// Dispose the child wrappers. //
EMF,WITHOUT_CLASSIFICATION,// All this logic is so that we only create a list if the adapter is set to more than one target. //
EMF,WITHOUT_CLASSIFICATION,//XMLNamespacePackage
EMF,WITHOUT_CLASSIFICATION,// We can enable the action as indicated by the command // and we can set all the other values from the command. //
EMF,WITHOUT_CLASSIFICATION,// If we have resolved to an EClass but we have an EAttribute we can change it to be an EReference. //
EMF,WITHOUT_CLASSIFICATION,//TreeAdapterFactory
EMF,WITHOUT_CLASSIFICATION,// Unwrap value. //
EMF,WITHOUT_CLASSIFICATION,// If the adapter factory is composeable we'll adapt using the root. //
EMF,WITHOUT_CLASSIFICATION,// If a new collection was allocated continue to populate it. //
EMF,WITHOUT_CLASSIFICATION,// create rewriter to record changes
EMF,WITHOUT_CLASSIFICATION,// TreeNode
EMF,WITHOUT_CLASSIFICATION,// Delegate the action for this object to the editing domain. //
EMF,WITHOUT_CLASSIFICATION,// Draw the extra first-column image. //
EMF,WITHOUT_CLASSIFICATION,// If the table is indenting draw tree lines. //
EMF,WITHOUT_CLASSIFICATION,//private final boolean iri; //private URI cachedASCIIURI;
EMF,WITHOUT_CLASSIFICATION,// Is this the label feature? //
EMF,WITHOUT_CLASSIFICATION,// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:
EMF,WITHOUT_CLASSIFICATION,// Is this a containment reference child? //
EMF,WITHOUT_CLASSIFICATION,// This ensure that this package itself is traversed even if the reference type is EObject... //
EMF,WITHOUT_CLASSIFICATION,// Or a feature map child? //
EMF,WITHOUT_CLASSIFICATION,// Overlay if the resource is the target for any controlled objects.  //
EMF,WITHOUT_CLASSIFICATION,// Don't include controlled children here they'll show up under their container. //
EMF,WITHOUT_CLASSIFICATION,// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());
EMF,WITHOUT_CLASSIFICATION,//TreeFactoryImpl
EMF,WITHOUT_CLASSIFICATION,//TreePackage
EMF,WITHOUT_CLASSIFICATION,//TreeNodeImpl
EMF,WITHOUT_CLASSIFICATION,// If we have a good editing domain... //
EMF,WITHOUT_CLASSIFICATION,//TreePackageImpl
EMF,WITHOUT_CLASSIFICATION,// This guard is for extra security but should not be necessary. //
EMF,WITHOUT_CLASSIFICATION,// We will only deal with structured selections. //
EMF,WITHOUT_CLASSIFICATION,// If there is a new one... //
EMF,WITHOUT_CLASSIFICATION,"/*    super.collectNewChildDescriptors(newChildDescriptors object);*/"
EMF,WITHOUT_CLASSIFICATION,// Use up the command. // Note that notification will cause a new command to be created. //
EMF,WITHOUT_CLASSIFICATION,//TreeFactory
EMF,WITHOUT_CLASSIFICATION,// No point in keeping garbage. //
EMF,WITHOUT_CLASSIFICATION,// We just can't do it. //
EMF,WITHOUT_CLASSIFICATION,// Fill with background. //
EMF,WITHOUT_CLASSIFICATION,// only handle structured selections
EMF,WITHOUT_CLASSIFICATION,// Add the edit menu actions. //
EMF,WITHOUT_CLASSIFICATION,// try to get editing domain from workbench part
EMF,WITHOUT_CLASSIFICATION,// Show the colourless image. //
EMF,WITHOUT_CLASSIFICATION,// if we found an editing domain create command
EMF,WITHOUT_CLASSIFICATION,// convert the selection to a collection of the selected objects
EMF,WITHOUT_CLASSIFICATION,// Allocate the new collection and populate it up to this point. //
EMF,WITHOUT_CLASSIFICATION,// if the editing domain wasn't given by the workbench part try to get // it from the selection
EMF,WITHOUT_CLASSIFICATION,// Add our standard marker. //
EMF,WITHOUT_CLASSIFICATION,// If the first wrapped value is found... //
EMF,WITHOUT_CLASSIFICATION,// use up the command
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,// We use multi even for a single line because we want to respond to the enter key. //
EMF,WITHOUT_CLASSIFICATION,// Remember the requested operation.
EMF,WITHOUT_CLASSIFICATION,// If there are delegated features add only those that aren't already in this package to the end of the list. //
EMF,WITHOUT_CLASSIFICATION,// grabHorizontal = true;
EMF,WITHOUT_CLASSIFICATION,//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();
EMF,WITHOUT_CLASSIFICATION,// Add our other standard marker. //
EMF,WITHOUT_CLASSIFICATION,// Clear the source data.  We won't need this again since if it was // available it's already in the command. //
EMF,WITHOUT_CLASSIFICATION,// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //
EMF,WITHOUT_CLASSIFICATION,// Cache the tree path for each object. //
EMF,WITHOUT_CLASSIFICATION,// dropDown.addListener(SWT.Paint dropDownListener);
EMF,WITHOUT_CLASSIFICATION,// This is here only to support deprecated adapt(object) rather than adapt(object Interface.class). // // supportedTypes.add(null);
EMF,WITHOUT_CLASSIFICATION,// setEditor(null null -1);
EMF,WITHOUT_CLASSIFICATION,// event is null when featureTableViewer is double clicked
EMF,WITHOUT_CLASSIFICATION,// event is null when choiceTableViewer is double clicked
EMF,WITHOUT_CLASSIFICATION,// This should be consistent with paintControl(). //
EMF,WITHOUT_CLASSIFICATION,// Draw 3D effect on right-side button. //
EMF,WITHOUT_CLASSIFICATION,// Draw outline. //
EMF,WITHOUT_CLASSIFICATION,// Draw down arrow offset if dropped. //
EMF,WITHOUT_CLASSIFICATION,// Draw background of right-side button. //
EMF,WITHOUT_CLASSIFICATION,"/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */"
EMF,WITHOUT_CLASSIFICATION,// This is for the helper feature. //
EMF,WITHOUT_CLASSIFICATION,// Execute it. //
EMF,WITHOUT_CLASSIFICATION,// If so revalidate the command. //
EMF,WITHOUT_CLASSIFICATION,// Draw the text. //
EMF,WITHOUT_CLASSIFICATION,// If the command can execute... //
EMF,WITHOUT_CLASSIFICATION,// A command was created if the source was available early and the // information used to create it was cached... //
EMF,WITHOUT_CLASSIFICATION,// If we can't do anything else we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.
EMF,WITHOUT_CLASSIFICATION,// This is for the typeMapping feature. //
EMF,WITHOUT_CLASSIFICATION,// Clean up the state. //
EMF,WITHOUT_CLASSIFICATION,// Otherwise let's call the whole thing off. //
EMF,WITHOUT_CLASSIFICATION,// Clear out any old information from a previous drag. //
EMF,WITHOUT_CLASSIFICATION,// Recreate the command. //
EMF,WITHOUT_CLASSIFICATION,// Check if the cached command can provide DND feedback/revalidation. //
EMF,WITHOUT_CLASSIFICATION,//FIX:::
EMF,WITHOUT_CLASSIFICATION,// create composite
EMF,WITHOUT_CLASSIFICATION,// Remember the target; create the command and test if it is executable. //
EMF,WITHOUT_CLASSIFICATION,// Keep track of any changes to the command information.
EMF,WITHOUT_CLASSIFICATION,//We are not generating the manifest file if the plugin.xml exists. //
EMF,WITHOUT_CLASSIFICATION,// If we don't have a previous cached command... //
EMF,WITHOUT_CLASSIFICATION,// If this command can provide detailed drag and drop feedback... //
EMF,WITHOUT_CLASSIFICATION,//do this here because setting the text will set enablement on the OK // button
EMF,WITHOUT_CLASSIFICATION,// If not dispose the current command and create a new one. //
EMF,WITHOUT_CLASSIFICATION,// Use it for the operation and drag under effect. //
EMF,WITHOUT_CLASSIFICATION,// FunctionPair
EMF,WITHOUT_CLASSIFICATION,// Transfer the data and convert the structured selection to a collection of objects. //
EMF,WITHOUT_CLASSIFICATION,// Check whether the current data type can be transfered locally. //
EMF,WITHOUT_CLASSIFICATION,// Transfer the data and if non-null extract it. //
EMF,WITHOUT_CLASSIFICATION,// Iterate over the data types to see if there is a data type that supports a local transfer. //
EMF,WITHOUT_CLASSIFICATION,// If there was no old input then we must be providing content for this part for the first time... //
EMF,WITHOUT_CLASSIFICATION,// Walk the project looking for .java files to analyze. //
EMF,WITHOUT_CLASSIFICATION,//    case Notification.TOUCH:
EMF,WITHOUT_CLASSIFICATION,// Set the input to the widget. //
EMF,WITHOUT_CLASSIFICATION,// n2.isLabelUpdate()
EMF,WITHOUT_CLASSIFICATION,// Previously we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //
EMF,WITHOUT_CLASSIFICATION,// We ignore non-changes for now. //
EMF,WITHOUT_CLASSIFICATION,// If the index was previously assigned return it. // Otherwise return a negative result that encodes the newly assigned index. //
EMF,WITHOUT_CLASSIFICATION,// Add a dummy GenModel for referenced packages. //
EMF,WITHOUT_CLASSIFICATION,// Escape a string that will terminate the comment in which this will all be nested. //
EMF,WITHOUT_CLASSIFICATION,// We set it and get back the interned string. // This way when instanceClassName == instanceTypeName we know we should serialize only the class name. //
EMF,WITHOUT_CLASSIFICATION,// We also need to set it on any GenModels holding any used or static packages that may be refered to. //
EMF,WITHOUT_CLASSIFICATION,//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");
EMF,WITHOUT_CLASSIFICATION,// Create the model project. //
EMF,WITHOUT_CLASSIFICATION,// Determine which projects will need to be referenced. //
EMF,WITHOUT_CLASSIFICATION,// no property // no property // no property
EMF,WITHOUT_CLASSIFICATION,// Create resources for all the root EPackages. //
EMF,WITHOUT_CLASSIFICATION,// The class is not available.
EMF,WITHOUT_CLASSIFICATION,// Nested GenAnnotations
EMF,WITHOUT_CLASSIFICATION,// removing the first space
EMF,WITHOUT_CLASSIFICATION,// Subclasses may overwrite
EMF,WITHOUT_CLASSIFICATION,// Handle application genmodel stub //
EMF,WITHOUT_CLASSIFICATION,// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.
EMF,WITHOUT_CLASSIFICATION,// Initialize the GenModel with all the computed data. //
EMF,WITHOUT_CLASSIFICATION,// Now we should sort. //
EMF,WITHOUT_CLASSIFICATION,// Compute the closure. //
EMF,WITHOUT_CLASSIFICATION,// For arrays consider the element type. //
EMF,WITHOUT_CLASSIFICATION,// Convert reference to attribute if its type is an EDataType...  //
EMF,WITHOUT_CLASSIFICATION,// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //
EMF,WITHOUT_CLASSIFICATION,// Now we need to hook up opposites by finding the named feature in the type. //
EMF,WITHOUT_CLASSIFICATION,// Restore all configured settings from the original. //
EMF,WITHOUT_CLASSIFICATION,// Now we need to hook up keys by finding the named feature in the type. //
EMF,WITHOUT_CLASSIFICATION,// Copy the children references  //
EMF,WITHOUT_CLASSIFICATION,// Keep only the plugins that have GenModels for consideration. //
EMF,WITHOUT_CLASSIFICATION,// Iterate over all projects to look at the manifests. //
EMF,WITHOUT_CLASSIFICATION,// Also add each required plugin for consideration in the loop. //
EMF,WITHOUT_CLASSIFICATION,// Create the EPackage on demand. //
EMF,WITHOUT_CLASSIFICATION,// Check whether this has @model annotation contents. //
EMF,WITHOUT_CLASSIFICATION,// Match them and accumulate the appropriate result. //
EMF,WITHOUT_CLASSIFICATION,// use no encoding
EMF,WITHOUT_CLASSIFICATION,// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //
EMF,WITHOUT_CLASSIFICATION,// The class address was not equal so we don't want this class loader // but instead want the last result that was able to load the class. //
EMF,WITHOUT_CLASSIFICATION,// Check whether this has @model annotation contents. // If not it might be a package interface for backwards compatibility. //
EMF,WITHOUT_CLASSIFICATION,// Get the package name and see if there's an EPackage for it. //
EMF,WITHOUT_CLASSIFICATION,// It's definitely a package if it was declared as such. //
EMF,WITHOUT_CLASSIFICATION,// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //
EMF,WITHOUT_CLASSIFICATION,// Walk the methods. //
EMF,WITHOUT_CLASSIFICATION,// This will catch inherited features or additional things we don't want to worry about.
EMF,WITHOUT_CLASSIFICATION,// Find Packages and Factories
EMF,WITHOUT_CLASSIFICATION,// Otherwise it's treated as an EEnum //
EMF,WITHOUT_CLASSIFICATION,// Handle the type multiplicity and other ETypedElement attributes. //
EMF,WITHOUT_CLASSIFICATION,// Each token in parameters will specify a dataType for the corresponding parameter but can be overridden by a // parameter-name-prefixed dataType property. //
EMF,WITHOUT_CLASSIFICATION,// The name is extracted and lower cased. //
EMF,WITHOUT_CLASSIFICATION,// 7 is the size of (object
EMF,WITHOUT_CLASSIFICATION,// The feature name is extracted lower cased. //
EMF,WITHOUT_CLASSIFICATION,// Map to an EEnum.
EMF,WITHOUT_CLASSIFICATION,// Drop the _ separators and normalize the case. //
EMF,WITHOUT_CLASSIFICATION,// Set the EAttribute attributes. //
EMF,WITHOUT_CLASSIFICATION,// Each token in exceptions will specify a data type for the corresponding exception. //
EMF,WITHOUT_CLASSIFICATION,// We'll create one of these. //
EMF,WITHOUT_CLASSIFICATION,// Set the EReference attributes. //
EMF,WITHOUT_CLASSIFICATION,// If any of these attributes appear this must be a reference. //
EMF,WITHOUT_CLASSIFICATION,// Set the visibility annotations for the EstructuralFeature. //
EMF,WITHOUT_CLASSIFICATION,// Process the annotations. //
EMF,WITHOUT_CLASSIFICATION,// Set the EStructuralFeature attributes. //
EMF,WITHOUT_CLASSIFICATION,// Check if it is exactly the name of a type parameter that's in scope. //
EMF,WITHOUT_CLASSIFICATION,// Allow a distinct literal value to be provided too. //
EMF,WITHOUT_CLASSIFICATION,// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements where the Java // type is a list and the item type needs to be specified. //
EMF,WITHOUT_CLASSIFICATION,// continue with default processing
EMF,WITHOUT_CLASSIFICATION,// Allow the value to be defined by an annotation or by the field's initializer //
EMF,WITHOUT_CLASSIFICATION,// We want to resolve to this. //
EMF,WITHOUT_CLASSIFICATION,// Returns the lower half bitmask for all ASCII characters between the two // given characters inclusive.
EMF,WITHOUT_CLASSIFICATION,// But if name doesn't expand into field name ignore it. //
EMF,WITHOUT_CLASSIFICATION,// Returns the upper half bitmask for all AsCII characters between the two // given characters inclusive.
EMF,WITHOUT_CLASSIFICATION,// Allow a mixed case version of the name to be provided. //
EMF,WITHOUT_CLASSIFICATION,// Returns the lower half bitmask for all the ASCII characters in the given // string.
EMF,WITHOUT_CLASSIFICATION,// If we can't find it try the simple name in the package... //
EMF,WITHOUT_CLASSIFICATION,// This could potentially map every created model element to its corresponding Rose node. // However for now we're only using it as needed. //
EMF,WITHOUT_CLASSIFICATION,// Find an explicit import or the first wildcard import. //
EMF,WITHOUT_CLASSIFICATION,//no caching
EMF,WITHOUT_CLASSIFICATION,// If we still don't have one we'll have to settle for an EDataType or EClass with an instance class name. //
EMF,WITHOUT_CLASSIFICATION,// Find the modeled package for the name and look up the name there. //
EMF,WITHOUT_CLASSIFICATION,// Create a resource set and load the model file into it. //
EMF,WITHOUT_CLASSIFICATION,// The package not in a .cat file. //
EMF,WITHOUT_CLASSIFICATION,// See if we already have the EDataType. //
EMF,WITHOUT_CLASSIFICATION,// The package is in a .cat file. //
EMF,WITHOUT_CLASSIFICATION,// It's okay for there not be a precompiled template so fail quietly. // exception.printStackTrace();
EMF,WITHOUT_CLASSIFICATION,// Returns whether the given character is in the set specified by the given // bitmask.
EMF,WITHOUT_CLASSIFICATION,// If we still don't have one we'll have to settle for a demand created EDataType or EClass // so create a new EClassifier with a nice unique name. //
EMF,WITHOUT_CLASSIFICATION,// If we don't have one yet maybe it's one of the special types... //
EMF,WITHOUT_CLASSIFICATION,// Converts null to length-zero array and clones array to ensure // immutability.
EMF,WITHOUT_CLASSIFICATION,// If there are any warnings other than raw type warnings include all the warnings. //
EMF,WITHOUT_CLASSIFICATION,// For the model information. //
EMF,WITHOUT_CLASSIFICATION,// Avoid classifier name collisions. //
EMF,WITHOUT_CLASSIFICATION,// Make array names legal. //
EMF,WITHOUT_CLASSIFICATION,// Get the parent object. //
EMF,WITHOUT_CLASSIFICATION,// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //
EMF,WITHOUT_CLASSIFICATION,// Add to package. //
EMF,WITHOUT_CLASSIFICATION,// Map to an EPackage. //
EMF,WITHOUT_CLASSIFICATION,// node is not marked up by now but keep checking other rules
EMF,WITHOUT_CLASSIFICATION,// Map to an EDataType. //
EMF,WITHOUT_CLASSIFICATION,// Map to EAttribute or EEnumLiteral. //
EMF,WITHOUT_CLASSIFICATION,// Map to an EParameter as input parameter for operation. //
EMF,WITHOUT_CLASSIFICATION,// Add to an EClass //
EMF,WITHOUT_CLASSIFICATION,// Map to an EOperation.
EMF,WITHOUT_CLASSIFICATION,// If not we'll erase it to java.lang.Object. //
EMF,WITHOUT_CLASSIFICATION,// Alternate stricter implementations of the following validation methods // are provided commented out for possible future use...
EMF,WITHOUT_CLASSIFICATION,// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //
EMF,WITHOUT_CLASSIFICATION,// <p>A valid scheme may be null or consist of a single letter followed // by any number of letters numbers and the following characters: // <code>+ - .</code>
EMF,WITHOUT_CLASSIFICATION,// 5 is the size of (list
EMF,WITHOUT_CLASSIFICATION,// Load the schema and packages that were used to load the instance into this resource set. //
EMF,WITHOUT_CLASSIFICATION,// try to retrieve the fully qualified name of the specified type...
EMF,WITHOUT_CLASSIFICATION,// qualify type name if not already qualified...
EMF,WITHOUT_CLASSIFICATION,// remove garbage characters...
EMF,WITHOUT_CLASSIFICATION,// convert to dot-separated format if necessary...
EMF,WITHOUT_CLASSIFICATION,// Store the base name for relative .cat file references. //
EMF,WITHOUT_CLASSIFICATION,// Order first by number of features (descending) and then alphabetically (ascending) //
EMF,WITHOUT_CLASSIFICATION,// Iterate over the whole tree to do this. //
EMF,WITHOUT_CLASSIFICATION,// default value //
EMF,WITHOUT_CLASSIFICATION,// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile  // unless that opposite volatile reference delegates to a feature map // in which case a full implementation of the references can be generated. //
EMF,WITHOUT_CLASSIFICATION,//MappingFactory
EMF,WITHOUT_CLASSIFICATION,// Remove zero width non-breaking space which may be used as a byte order marker  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //
EMF,WITHOUT_CLASSIFICATION,// A container must be transient. //
EMF,WITHOUT_CLASSIFICATION,// Temporary WAS/WSAD migration option. //
EMF,WITHOUT_CLASSIFICATION,// It was not found in the model class so check if primitive type. //
EMF,WITHOUT_CLASSIFICATION,// setup attribute and parameter type //
EMF,WITHOUT_CLASSIFICATION,// Convert attributes of with EClass type to references. //
EMF,WITHOUT_CLASSIFICATION,// read mdl file...
EMF,WITHOUT_CLASSIFICATION,// file is a mdl file // // get model name
EMF,WITHOUT_CLASSIFICATION,// special case traverse cat file or mdl file //
EMF,WITHOUT_CLASSIFICATION,// could this happen?
EMF,WITHOUT_CLASSIFICATION,// map properties even when isTreeOnly == true
EMF,WITHOUT_CLASSIFICATION,//directoryName.length() > 0 && directoryName.charAt(0) == '$')
EMF,WITHOUT_CLASSIFICATION,// size should be 1
EMF,WITHOUT_CLASSIFICATION,// Create a resource for this file. Don't specify a content type as it could be Ecore or EMOF. //
EMF,WITHOUT_CLASSIFICATION,//    top++;
EMF,WITHOUT_CLASSIFICATION,// No additional features // MappingStrategy
EMF,WITHOUT_CLASSIFICATION,// Record the records for the executed commands on the stack. //
EMF,WITHOUT_CLASSIFICATION,// map to EReference when is navigable //
EMF,WITHOUT_CLASSIFICATION,// Process the contents of the extent //
EMF,WITHOUT_CLASSIFICATION,// This will not add duplicates. //
EMF,WITHOUT_CLASSIFICATION,// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //
EMF,WITHOUT_CLASSIFICATION,// Load the Rose .mdl or .cat file and create mappings for the objects. //
EMF,WITHOUT_CLASSIFICATION,// Only one open quote. //
EMF,WITHOUT_CLASSIFICATION,// Start second traverse to create mapping objects in memory. //
EMF,WITHOUT_CLASSIFICATION,// Put all static package in the package registry. //
EMF,WITHOUT_CLASSIFICATION,// This is the path of the target directory. //
EMF,WITHOUT_CLASSIFICATION,//MappingPackage
EMF,WITHOUT_CLASSIFICATION,// No additional features // TypeConverter
EMF,WITHOUT_CLASSIFICATION,// MappingHelper
EMF,WITHOUT_CLASSIFICATION,// FunctionNamePair
EMF,WITHOUT_CLASSIFICATION,// Do we also have some non-input objects to copy? //
EMF,WITHOUT_CLASSIFICATION,// For each mapping being removed... //
EMF,WITHOUT_CLASSIFICATION,// MappingRoot
EMF,WITHOUT_CLASSIFICATION,// Since input objects are read-only we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //
EMF,WITHOUT_CLASSIFICATION,// Make sure the back pointers to this mapping from the mapped objects is set. //
EMF,WITHOUT_CLASSIFICATION,// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>
EMF,WITHOUT_CLASSIFICATION,// Copy the name //
EMF,WITHOUT_CLASSIFICATION,// Add any remaining object-index pairs from either set. //
EMF,WITHOUT_CLASSIFICATION,//Resource resource = EcoreUtil.getURI(refObject).; FIX:::
EMF,WITHOUT_CLASSIFICATION,// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code>
EMF,WITHOUT_CLASSIFICATION,"/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */"
EMF,WITHOUT_CLASSIFICATION,// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur or false otherwise.
EMF,WITHOUT_CLASSIFICATION,//return;
EMF,WITHOUT_CLASSIFICATION,// Create commands to do mapping.getNested().addAll(siblingsToReparent). //
EMF,WITHOUT_CLASSIFICATION,// For each mapping being added... //
EMF,WITHOUT_CLASSIFICATION,// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
EMF,WITHOUT_CLASSIFICATION,// this will create the mapping as well
EMF,WITHOUT_CLASSIFICATION,// If there are siblings that need to be reparented. //
EMF,WITHOUT_CLASSIFICATION,//(new RemoveCommand(domain parentMapping parentMapping.ePackageMapping().getMapping_Nested() siblingsToReparent));
EMF,WITHOUT_CLASSIFICATION,// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //
EMF,WITHOUT_CLASSIFICATION,// If we can't create a temp file then we have to ignore the option.
EMF,WITHOUT_CLASSIFICATION,// find prefix in current context
EMF,WITHOUT_CLASSIFICATION,//(RemoveCommand.create(mappingDomain mapping mapping.ePackageMapping().getMapping_Outputs() object)));
EMF,WITHOUT_CLASSIFICATION,// return false if iteration should continue.
EMF,WITHOUT_CLASSIFICATION,//commandList.add(RemoveCommand.create(mappingDomain mapping mapping.ePackageMapping().getMapping_Outputs() object));
EMF,WITHOUT_CLASSIFICATION,// Get the corresponding type. //
EMF,WITHOUT_CLASSIFICATION,// Type matching never matches inputs that are already mapped
EMF,WITHOUT_CLASSIFICATION,// Create the copy from this corresponding type. //
EMF,WITHOUT_CLASSIFICATION,// Remove all the mappings from the root. //
EMF,WITHOUT_CLASSIFICATION,// We have done our preparation. Now ask the super to validate. //
EMF,WITHOUT_CLASSIFICATION,// Copy the type //
EMF,WITHOUT_CLASSIFICATION,// Skips '-'
EMF,WITHOUT_CLASSIFICATION,// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //
EMF,WITHOUT_CLASSIFICATION,// If eCore return the ENamedElement name //
EMF,WITHOUT_CLASSIFICATION,// top-label-separator
EMF,WITHOUT_CLASSIFICATION,// Tests whether this URI's path segment array is equal to that of the // given uri.
EMF,WITHOUT_CLASSIFICATION,// If the owner and the copy are of the same type we can proceed with the command i.e. no override. // If not we will skip this command by returning a do-nothing override. //
EMF,WITHOUT_CLASSIFICATION,// If there is an adapter of the correct type return the item label //
EMF,WITHOUT_CLASSIFICATION,// If this is a RemoveCommand for a root input object direct it to the MappingRoot. //
EMF,WITHOUT_CLASSIFICATION,// remove all sourceSeparator characters
EMF,WITHOUT_CLASSIFICATION,// Tests two objects for equality tolerating nulls; null is considered // to be a valid value that is only equal to itself.
EMF,WITHOUT_CLASSIFICATION,// type-mappings
EMF,WITHOUT_CLASSIFICATION,// add a targetSeparator in front of every upper case character
EMF,WITHOUT_CLASSIFICATION,// Tests two strings for equality tolerating nulls and optionally // ignoring case.
EMF,WITHOUT_CLASSIFICATION,// sourceSeparator == LABEL_NO_SEPARATOR
EMF,WITHOUT_CLASSIFICATION,// top-label-forms
EMF,WITHOUT_CLASSIFICATION,// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path there is // an implied root in the resulting path)
EMF,WITHOUT_CLASSIFICATION,// top-label-case
EMF,WITHOUT_CLASSIFICATION,//Ecore2EcoreFactory
EMF,WITHOUT_CLASSIFICATION,// bottom-label-forms
EMF,WITHOUT_CLASSIFICATION,//Ecore2EcorePackage
EMF,WITHOUT_CLASSIFICATION,//MappingSwitch
EMF,WITHOUT_CLASSIFICATION,// encrypt the input
EMF,WITHOUT_CLASSIFICATION,// we don't want to include the line comments immediately before an import in the  // returned range
EMF,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */"
EMF,WITHOUT_CLASSIFICATION,//if // for // for
EMF,WITHOUT_CLASSIFICATION,// An interface should be abstract but this makes sure of that fact. //
EMF,WITHOUT_CLASSIFICATION,//Ecore2EcoreSwitch
EMF,WITHOUT_CLASSIFICATION,// Adds a segment to a stack skipping empty segments and self references // and interpreting parent references.
EMF,WITHOUT_CLASSIFICATION,// For CreateChildCommand we will find the owner by calling EditingDomain.getParent() on the first selected object
EMF,WITHOUT_CLASSIFICATION,// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed
EMF,WITHOUT_CLASSIFICATION,// unless we're already accumulating root parent references // parent references simply pop the last segment descended
EMF,WITHOUT_CLASSIFICATION,// If extending an interface its mix-ins must be included since there is no implementation to handle them. //
EMF,WITHOUT_CLASSIFICATION,// If we've found thing with type parameters search them for a match. //
EMF,WITHOUT_CLASSIFICATION,// XMLInfo
EMF,WITHOUT_CLASSIFICATION,//Ecore2XMLPackage
EMF,WITHOUT_CLASSIFICATION,// missing attribute
EMF,WITHOUT_CLASSIFICATION,// this is the case that starting process rose file by passing cat file name // this is a special case. // normally user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info
EMF,WITHOUT_CLASSIFICATION,//XMLMapImpl
EMF,WITHOUT_CLASSIFICATION,// invalid element
EMF,WITHOUT_CLASSIFICATION,//Ecore2XMLFactoryImpl
EMF,WITHOUT_CLASSIFICATION,//Ecore2XMLPackageImpl
EMF,WITHOUT_CLASSIFICATION,// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //
EMF,WITHOUT_CLASSIFICATION,// Set the editor's selection based on the current viewer's selection. //
EMF,WITHOUT_CLASSIFICATION,// Many inherited methods must be overridden to handle this case. //
EMF,WITHOUT_CLASSIFICATION,// Since we only use this right on an operation we always want to include the keyType and valueType and we never // want to qualify the property names. //
EMF,WITHOUT_CLASSIFICATION,// If there are any arguments and they are not unbounded wildcards casts can't be checked. //
EMF,WITHOUT_CLASSIFICATION,// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. //
EMF,WITHOUT_CLASSIFICATION,// Or we test their relationship via their instance classes if they have them. //
EMF,WITHOUT_CLASSIFICATION,// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //
EMF,WITHOUT_CLASSIFICATION,// This guards the switch. //
EMF,WITHOUT_CLASSIFICATION,// If there is a base XML or Ecore type use one of the two corresponding built-in factories to create a value from the literal string. //
EMF,WITHOUT_CLASSIFICATION,// Clean up any old project information. //
EMF,WITHOUT_CLASSIFICATION,//MappingImpl
EMF,WITHOUT_CLASSIFICATION,// The bound is a wildcard with no constraints. //
EMF,WITHOUT_CLASSIFICATION,// See if a GenModel is registered for the package's URI and if so try to load it. //
EMF,WITHOUT_CLASSIFICATION,// If that didn't work just synthesize one. //
EMF,WITHOUT_CLASSIFICATION,// EATM  // Foreign Model
EMF,WITHOUT_CLASSIFICATION,// Any features from one package that delegate to features in another. //
EMF,WITHOUT_CLASSIFICATION,// If there are features delegating across packages add only those that aren't already being generated. //
EMF,WITHOUT_CLASSIFICATION,// a single separator possibly preceded by some parent reference // segments is redundant
EMF,WITHOUT_CLASSIFICATION,// an empty path needs to be replaced by a single "." if there is no // query to distinguish it from a current document reference
EMF,WITHOUT_CLASSIFICATION,// Collapses non-ending empty segments parent references and self // references in a non-relative path returning the same path that would // be produced from the base hierarchical URI as part of a resolve.
EMF,WITHOUT_CLASSIFICATION,// if the path is non-empty and originally ended in an empty segment a // parent reference or a self reference add a trailing separator
EMF,WITHOUT_CLASSIFICATION,//TypeConverterImpl
EMF,WITHOUT_CLASSIFICATION,// Returns a string representation of this URI for debugging explicitly // showing each of the components.
EMF,WITHOUT_CLASSIFICATION,// If the new prefix has segments it is not the root absolute path // and we need to drop the trailing empty segment and append the tail // segments.
EMF,WITHOUT_CLASSIFICATION,"/*        featureMap.add(eStructuralFeature cursor++ o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/"
EMF,WITHOUT_CLASSIFICATION,// Add all classes from this package first to guarantee they get the // simple names
EMF,WITHOUT_CLASSIFICATION,// Don't even consider it unless this is hierarchical and has scheme // authority device and path absoluteness equal to those of the prefix.
EMF,WITHOUT_CLASSIFICATION,// If the prefix has no segments then it is the root absolute path and // we know this is an absolute path too.
EMF,WITHOUT_CLASSIFICATION,// Barring a better result this will be the result. //
EMF,WITHOUT_CLASSIFICATION,// The prefix really is a prefix of this.  If this has just one more // empty segment the paths are the same.
EMF,WITHOUT_CLASSIFICATION,// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //
EMF,WITHOUT_CLASSIFICATION,// rewriter is required for set methods
EMF,WITHOUT_CLASSIFICATION,// If we can't add it it must already be in the list so find it and move it to the end. //
EMF,WITHOUT_CLASSIFICATION,// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //
EMF,WITHOUT_CLASSIFICATION,// Encodes the given string replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true then % will not be encoded // iff it already begins a valid escape sequence.
EMF,WITHOUT_CLASSIFICATION,// Tests whether an escape occurs in the given string starting at index i. // An escape sequence is a % followed by two hex digits.
EMF,WITHOUT_CLASSIFICATION,// Multiple jet directives.
EMF,WITHOUT_CLASSIFICATION,// There's no reason they aren't equal so they are. //
EMF,WITHOUT_CLASSIFICATION,// If the set states are the same and the values of the feature are the structurally equal they are equal. //
