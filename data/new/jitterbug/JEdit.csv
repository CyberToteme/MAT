projectname,classification,commenttext
JEdit,DESIGN,"/*			Implement String += value;			According to the JLS value may be anything.			In BeanShell we'll disallow VOID (undefined) values.			(or should we map them to the empty string?)		*/"
JEdit,DESIGN,/* this should be before dockables are initialized */
JEdit,DESIGN,// is this right?
JEdit,DESIGN,// should we do this for both cases above?
JEdit,DESIGN,// need to loosen this to any throwable... do we need to handle // that in interpreter somewhere?  check first...
JEdit,DESIGN,// fucking GTK look and feel
JEdit,DESIGN,"/*		Note: this implementation is temporary. We currently keep a flat		namespace of the base name of classes.  i.e. BeanShell cannot be in the		process of defining two classes in different packages with the same		base name.  To remove this limitation requires that we work through		namespace imports in an analogous (or using the same path) as regular		class import resolution.  This workaround should handle most cases 		so we'll try it for now.	*/"
JEdit,DESIGN,// copy and paste from bsh/classpath/ClassManagerImpl.java...
JEdit,DESIGN,// I wish I could make this "friendly" to only NameSpace
JEdit,DESIGN,// undocumented hack to allow browser actions to work. // XXX - clean up in 4.3
JEdit,DESIGN,// Look for a default invoke() handler method in the namespace // Note: this code duplicates that in NameSpace getCommand() // is that ok?
JEdit,DESIGN,// This should be per instance
JEdit,DESIGN,// Can we use the proxy mechanism to cast a bsh.This to  // the correct interface?
JEdit,DESIGN,// redundant with constructor
JEdit,DESIGN,"/*		Issues to resolve here...		1) In which classloader should we define the class?		if there is a BshClassLoader should we define it there?		2) should we use reflection to set it in a non-bsh classloader		if there is one or should we always create a bsh classloader		(and expose its defineClass)?	*/"
JEdit,DESIGN,// could refactor these a bit
JEdit,DESIGN,"/*	Note: This class essentially just delegates most of its methods to its	parent.  The setVariable() indirection is very small.  We could probably	fold this functionality back into the base NameSpace as a special case.	But this has changed a few times so I'd like to leave this abstraction for	now.*/"
JEdit,DESIGN,// simplified these settings a little...
JEdit,DESIGN,"/*		Should check for strict java here and use isJavaAssignable() instead	*/"
JEdit,DESIGN,// workaround for Swing rendering labels starting // with <html> using the HTML engine
JEdit,DESIGN,// Look for a default invoke() handler method in the namespace // Note: this code duplicates that in This.java... should it? // Call on 'This' can never be a command
JEdit,DESIGN,// this method is a nightmare
JEdit,DESIGN,// ConsoleInterface // The interpreter reflexively implements the console interface that it  // uses.  Should clean this up by using an inner class to implement the // console for us.
JEdit,DESIGN,// Case-insensitive fs workaround
JEdit,DESIGN,"/*			Wrap nulls.			This is a bit of a cludge to address a deficiency in the class			generator whereby it does not wrap nulls on method delegate.  See			Class Generator.java.  If we fix that then we can remove this.			(just have to generate the code there.)		*/"
JEdit,DESIGN,// switch eats a multi-level break here? // not empty statement
JEdit,DESIGN,// Check for field on object  // Note: could eliminate throwing the exception somehow
JEdit,DESIGN,// XXXX re-evaluate this // can getSuper work by itself now? // If we're a class instance and the parent is also a class instance // then super means our parent.
JEdit,DESIGN,"/*		I wish protected access were limited to children and not also 		package scope... I want this to be a singleton implemented by various		children.  	*/"
JEdit,DESIGN,// Imported full name wasn't found as an absolute class // If it is compound try to resolve to an inner class.   // (maybe this should happen in the BshClassManager?)
JEdit,DESIGN,"/*	Can't this be combined with run() ?	run seems to have stuff in it for interactive vs. non-interactive...	compare them side by side and see what they do differently aside from the	exception handling.	*/"
JEdit,DESIGN,// Null value is just a declaration // Note: we might want to keep any existing value here instead of reset
JEdit,DESIGN,// Can this be factored out...?   // Should be be adding the L...; here instead?
JEdit,DESIGN,"/* 							Catch the mismatch and continue to try the next							Note: this is innefficient should have an 							isAssignableFrom() that doesn't throw 						*/"
JEdit,DESIGN,// should use try/finally here to pop ns
JEdit,DESIGN,"/*			Note: this could be made clearer by adding an inner class for the			cases and an object context for the child traversal.		*/"
JEdit,DESIGN,// hack... sticking to first interpreter that resolves this // see comments on type instance variable
JEdit,DESIGN,// Note: incorrect here - we are using the hack in bsh class // manager that allows lookup by base name.  We need to eliminate // this limitation by working through imports.  See notes in class // manager.
JEdit,DESIGN,"/* 		This is the namespace in which the method is set.		It is a back-reference for the node which needs to execute under this 		namespace.  It is not necessary to declare this transient because 		we can only be saved as part of our namespace anyway... (currently).	*/"
JEdit,DESIGN,// Replace this is Cocoa API calls later
JEdit,DESIGN,// Scripting classes currently requires accessibility // This can be eliminated with a bit more work.
JEdit,DESIGN,// This could be static
JEdit,DESIGN,"/*	Thanks to Slava Pestov (of jEdit fame) for import caching enhancements.	Note: This class has gotten too big.  It should be broken down a bit.*/"
JEdit,DESIGN,"/**    * Register an attribute declaration for later retrieval.    * Format:    * - String type    * - String default value    * - int value type    * *TODO: do something with attribute types.    */"
JEdit,DESIGN,"/*				TODO:					to get cast and boxing working e.g.					e.g. Byte [] ia = { 1 2 }					If the baseType is a wrapper type then we need to get the 					primitive TYPE class for the base type here in order for 					the cast to allow it... Then boxing will happen naturally in					the Array.set().					e.g. Integer [] ia = { 1 2 }				*/"
JEdit,DESIGN,"/*		Note: We will ll move this behavior out to a subclass of 		NameSpace but we'll start here.	*/"
JEdit,DESIGN,// This is a particularly nasty bit // of code that checks for a parameter // entity reference but peeks ahead to // catch the '%' in parameter entity // declarations.
JEdit,DESIGN,// Should cache this subject to classloader change message // Evaluation of the formal parameter simply resolves its // type via the specified namespace.. it doesn't modify the // namespace.
JEdit,DESIGN,"/*	Notes:	It would not be hard to eliminate the use of org.objectweb.asm.Type from	this class making the distribution a tiny bit smaller.*/"
JEdit,DESIGN,// stupid: caret will automatically be incremented
JEdit,DESIGN,/* Spacing workaround */
JEdit,DESIGN,// I don't know of any other way to fix this since invoking this // command from a menu results in the focus owner being the menu // until the menu goes away.
JEdit,DESIGN,// a little hack for reverse replace and find
JEdit,DESIGN,// Static methods that operate on compound ('.' separated) names // I guess we could move these to StringUtil someday
JEdit,DESIGN,"/*	Note: which of these things should be checked at parse time vs. run time?*/"
JEdit,DESIGN,// this part sucks
JEdit,DESIGN,// Windows bug workaround in case a YES/NO confirm // was shown
JEdit,DESIGN,// clear name resolvers... don't know if this is necessary.
JEdit,DESIGN,"/* this is stupid and misleading.					 * but 'path' is not used anywhere except					 * the above line and if this is done					 * after the 'continue' then we will					 * either hang or be forced to duplicate					 * it inside the buffer == null or add					 * a 'finally' clause. you decide which one's					 * worse. */"
JEdit,DESIGN,// I'm too tired to think of a better way // to handle this right now.
JEdit,DESIGN,// hacked BufferIORequest to send VFSUpdates in case // two stage save is off now...
JEdit,DESIGN,// some other primitive // should avoid calling methods on primitive as we do // in Name (can't treat primitive like an object message) // but the hole is useful right now.
JEdit,DESIGN,// Change the parent (which was the class static) to the class instance // We really need to check if we're a static inner class here first... // but for some reason Java won't show the static modifier on our // fake inner classes...  could generate a flag field.
JEdit,DESIGN,// this is where checked exceptions piss me off. this method only uses // a StringReader which can never throw an exception...
JEdit,DESIGN,// If any subexpressions didn't terminate they don't count // TODO check if this code ever gets hit
JEdit,DESIGN,// Parse pattern into tokens.  Does anyone know if it's more efficient // to use char[] than a String.charAt()?  I'm assuming so.
JEdit,DESIGN,"/*		Note: object is only used here for precondition... get rid of it?	*/"
JEdit,DESIGN,// Why both of these?
JEdit,DESIGN,// Cut off from parent we must have our own class manager. // Can't do this in the run() command (needs to resolve stuff) // Should we do it by default when we create a namespace will no // parent of class manager?
JEdit,DESIGN,"/*		Note: the bsh command code should probably not be here...  we need to		scope it by the namespace that imported the command... so it probably		needs to be integrated into NameSpace.	*/"
JEdit,DESIGN,// This could be smarter...
JEdit,DESIGN,// It was explicitly imported but we don't know what it is. // should we throw an error here??
JEdit,DESIGN,"/*		Note: we need a form of eval that passes the callstack through...	*/"
JEdit,DESIGN,"/* 		Primary interpreter set and get variable methods		Note: These are squeltching errors... should they?	*/"
JEdit,DESIGN,// Workaround for JDK bug 4071281 where system.in.available()  // returns too large a value. This bug has been fixed in JDK 1.2.
JEdit,DESIGN,"/*				Somewhat of a hack.  If the special fields are visible (we're				operating relative to a 'this' type already) dissallow further				.this references to prevent user from skipping to things like				super.this.caller			*/"
JEdit,DESIGN,// Should clean this up to a single return statement
JEdit,DESIGN,"/*	Implementation notes:	Note: we may need some synchronization in here	Note on version dependency:  This base class is JDK 1.1 compatible	however we are forced to use weak references in the full featured	implementation (the optional bsh.classpath package) to accomodate all of	the fleeting namespace listeners as they fall out of scope.  (NameSpaces	must be informed if the class space changes so that they can un-cache	names).  	<p>	Perhaps a simpler idea would be to have entities that reference cached	types always perform a light weight check with a counter / reference	value and use that to detect changes in the namespace.  This puts the 	burden on the consumer to check at appropriate times but could eliminate	the need for the listener system in many places and the necessity of weak 	references in this package.	<p>*/"
JEdit,DESIGN,"/*		Note: this impor pattern is becoming common... could factor it out into		an importedObject Vector class.	*/"
JEdit,DESIGN,// not sure if we should really recurse here for explicitly imported // class in parent...
JEdit,DESIGN,// The following two boolean checks were tacked on. // This could probably be smoothed out.
JEdit,DESIGN,"/*		Notes:		This is broken.  It finds public but less specific methods over		non-public but more specific ones.		findMostSpecficMethod() needs to be rewritten to eliminate 		findAccessibleMethod.  We should implement the findMostSpecificMethod 		that uses the publicOnly flag.  FindMostSpecificMethod should also		operate in two passes to give standard Java assignable matches priority		over extended bsh type matches.	*/"
JEdit,DESIGN,//{{{ UnixWorkaround constructor
JEdit,DESIGN,// drag and drop support // I'd just move the code to // JEditTextArea but it // depends on JDK 1.4 APIs
JEdit,DESIGN,// next version: remove this
JEdit,DESIGN,// compatibility kludge for jEdit 3.1 and earlier
JEdit,DESIGN,// stupid scrollbar policy is an attempt to work around // bugs people have been seeing with IBM's JDK -- 7 Sep 2000
JEdit,DESIGN,// this is a weird hack. // we don't want C+e a to insert 'a' in the // search bar if the search bar has focus...
JEdit,DESIGN,// AHA! // this is probably the only way to fix this
JEdit,DESIGN,// this is a dirty hack and it relies on the fact // that updates for parents are sent before updates // for the changed nodes themselves (if this was not // the case the browser wouldn't be updated properly // on delete etc). // // to avoid causing '> 1 request' errors don't reload // directory if request already active
JEdit,DESIGN,// we consume this to work around the bug // where A+TAB window switching activates // the menu bar on Windows.
JEdit,DESIGN,"/* I guess translated events do not have the 'evt' field set		so consuming won't work. I don't think this is a problem as		nothing uses translation anyway */"
JEdit,DESIGN,// this is a hack and really needs to be done better.
JEdit,DESIGN,// copy and paste from RESyntaxMatcher to make syntax package // independent of jEdit itself
JEdit,DESIGN,// stupidity
JEdit,DESIGN,// This doesn't seem very correct but it fixes a problem // when setting the initial caret position for a buffer // (eg from the recent file list)
JEdit,DESIGN,// don't try this at home
JEdit,DESIGN,"/* silly that we reference the vertical				   scroll bar here directly. we do this so				   that the horizontal scroll bar is flush				   with the vertical scroll bar */"
JEdit,DESIGN,// XXX clean up this conditional
JEdit,DESIGN,// Temporary hack to support inner classes  // If the obj is a non-static inner class then import the context... // This is not a sufficient emulation of inner classes. // Replace this later...
JEdit,DESIGN,// workaround for Swing's annoying processing of // labels starting with <html> which often breaks
JEdit,DESIGN,// fucking GTK look and feel!
JEdit,DESIGN,// hack so that 'select all' does not change current buffer
JEdit,DESIGN,"/* if an occurence occurs at the		beginning of the selection the		selection start will get moved.		this sucks so we hack to avoid it. */"
JEdit,DESIGN,"/* Silly bug workaround #8694. If you look at the above code		 * note that we restore the saved caret position first then		 * scroll to the saved location. However the caret changing		 * can itself result in scrolling to a different location than		 * what was saved; and since moveCaretPosition() calls		 * updateBracketHighlight() the bracket highlight's out of		 * bounds calculation will rely on a different set of physical		 * first/last lines than what we will end up with eventually.		 * Instead of confusing the user with status messages that		 * appear at random when switching buffers we simply hide the		 * message altogether. */"
JEdit,DESIGN,"/* this is a sloppy hack to fix bug				   ""[ 677902 ] hitting return after collapsed				   fold""				   the idea is that if we extend the range then				   the problem described in the bug happends so				   if the insert is at the very end of the range				   we don't extend it instead we push the				   insert into the next range however for this				   to work properly we also have to mess with				   screen line counts. */"
JEdit,DESIGN,// need this bullshit scroll bar policy for the preferred size // hack to work
JEdit,DESIGN,// XXX if we keep the createClassManager in getClassManager then we can axe // this?
JEdit,DESIGN,"/*	Note: This class is messy.  The method and field resolution need to be	rewritten.  Various methods in here catch NoSuchMethod or NoSuchField	exceptions during their searches.  These should be rewritten to avoid	having to catch the exceptions.  Method lookups are now cached at a high 	level so they are less important however the logic is messy.*/"
JEdit,DESIGN,// the sooner ppl move to the new api the less we'll need // crap like this
JEdit,DESIGN,// Nasty hardcoded values
JEdit,DESIGN,/* XXX magic number */
JEdit,DESIGN,/* Workaround for uncooperative Windows L&F */
JEdit,DESIGN,// have to do this hack until VFSPath class is written
JEdit,DESIGN,// stupid Swing
JEdit,DESIGN,// none of the others are ever meant to be // removed. retarded eh? this needs to be // fixed eventually for plugins might // want to do weird stuff to jEdit's UI
JEdit,DESIGN,// this is retarded. excuse me while I drool // and make stupid noises
JEdit,DESIGN,// retarded GTK look and feel!
JEdit,DESIGN,// should probably error
JEdit,DESIGN,// there must be a better way of fixing this... // the problem is that this method can sometimes // be called as a result of a text area scroll // event in which case the caret position has // not been updated yet.
JEdit,DESIGN,// Perhaps here we would want to guard with // a property for parallel backups or not.
JEdit,DESIGN,// this is such a bad way of doing it but oh well...
JEdit,DESIGN,// while this might be questionable some // menus depend on properties
JEdit,DESIGN,// Get available screens // O(n^3) this is nasty but since we aren't dealling with // many items it should be fine
JEdit,DESIGN,//{{{ Methods that really shouldn't be public...
JEdit,DESIGN,//{{{ UnixWorkaround class
JEdit,DESIGN,// Perhaps if Xerces wasn't slightly brain-damaged we would // not need this
JEdit,DESIGN,// moved to GUIUtilities as it makes no sense being here.
JEdit,DESIGN,// Hack... need a more direct way of obtaining a view? // JEditTextArea.getView() method?
JEdit,DESIGN,// REVIEW How do we resolve this discrepancy?!
JEdit,DESIGN,// ugly workaround
JEdit,DESIGN,//{{{ Windows work around
JEdit,DESIGN,// hack since HelpViewer needs a URL...
JEdit,DESIGN,// Why is object in the args?
JEdit,DESIGN,// should implement getMinimumLength() -- any ideas?
JEdit,DESIGN,// Move me to classpath/ClassManagerImpl???
JEdit,DESIGN,// they never taught you this in undergrad computer science
JEdit,DESIGN,// (should we cache info in not a class case too?)
JEdit,DESIGN,// wtf?
JEdit,DESIGN,"/*	 *  XXX: hairy code that is basically just a functional(?) port of some	 *  other code i barely understood	 */"
JEdit,DESIGN,"/*			First try for an accessible version of the exact match.			This first lookup seems redundant with below but is apparently			needed.  This whole thing is messy.		*/"
JEdit,DESIGN,// work around for broken FTP plugin!
JEdit,DESIGN,// hack to move the spaces to the front
JEdit,DESIGN,// This feels sloppy especially for non-U.S. locales.
JEdit,DESIGN,// hack to get fixed length 'length' field
JEdit,DESIGN,// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to //        eliminate some of the buffer copying. //
JEdit,DESIGN,// Hack done to fix bringing the window to the front. // At least on windows Frame.toFront() doesn't cut it. // Remove the isWindows check if it's broken under other // OSes too.
JEdit,DESIGN,"/*		This method should be rewritten to use getFields() and avoid catching		exceptions during the search.	*/"
JEdit,DESIGN,// hack...
JEdit,DESIGN,// This should probably be in Reflect.java
JEdit,DESIGN,"/*		Notes: See notes on findMostSpecificMethod.		This method should be rolled into findMostSpecificMethod.	*/"
JEdit,DESIGN,"/*		Note: is using SignatureKey in this way dangerous?  In the pathological		case a user could eat up memory caching every possible combination of		argument types to an untyped method.  Maybe we could be smarter about		it by ignoring the types of untyped parameter positions?  The method		resolver could return a set of ""hints"" for the signature key caching?		There is also the overhead of creating one of these for every method		dispatched.  What is the alternative?	*/"
JEdit,DESIGN,// crusty workaround
JEdit,DESIGN,"/* workaround for A+keys producing				 * garbage on Windows */"
JEdit,DESIGN,"/* addToFavorites() which is a static method		 * (for convinience) needs an instance of the		 * VFS to pass to VFSManager.sendVFSUpdate()		 * hence this hack. */"
JEdit,DESIGN,// Allow getThis() to work through BlockNameSpace to the method // namespace // XXX re-eval this... do we need it?
JEdit,DESIGN,// these are used to eliminate code duplication. i don't normally use // the visitor or "template method" pattern but this code was contributed // by Peter Cox and i don't feel like changing it around too much.
JEdit,DESIGN,// fuck me dead
JEdit,DESIGN,// stupid hack to handle referencing // a rule set that is defined later!
JEdit,DESIGN,// JDK 1.4 workaround
JEdit,DESIGN,// should the next two be public maybe?
JEdit,DESIGN,"/*		Note: this method and resolveExpectedJavaField should be rewritten		to invert this logic so that no exceptions need to be caught		unecessarily.  This is just a temporary impl.		@return the field or null if not found	*/"
JEdit,DESIGN,"/*		Note: we need a singleton here so that things like 'this == this' work		(and probably a good idea for speed).		Caching a single instance here seems technically incorrect		considering the declaringInterpreter could be different under some		circumstances.  (Case: a child interpreter running a source() / eval() 		command ).  However the effect is just that the main interpreter that		executes your script should be the one involved in call-backs from Java.		I do not know if there are corner cases where a child interpreter would		be the first to use a This reference in a namespace or if that would		even cause any problems if it did...  We could do some experiments		to find out... and if necessary we could cache on a per interpreter		basis if we had weak references...  We might also look at skipping 		over child interpreters and going to the parent for the declaring 		interpreter so we'd be sure to get the top interpreter.	*/"
JEdit,DESIGN,"/* 			Resolve relative to a class type			static field inner class ?		*/"
JEdit,DESIGN,// some regexps (eg ^ by itself) have a length == 0 so we // implement this hack. if you don't understand what's going on // here then go back to watching MTV
JEdit,DESIGN,// Optimization - If classOfStaticMethod is set then we have already  // been here and determined that this is a static method invocation. // Note: maybe factor this out with path below... clean up.
JEdit,DESIGN,// this will probably not get used // Object type
JEdit,DESIGN,// Windows JDK workaround
JEdit,DESIGN,// this listener priority thing is a bad hack...
JEdit,DESIGN,"/* This doesn't look pretty and mode line should			 * probably be split up into seperate			 * components/strings			 */"
JEdit,DESIGN,"/* this is stupid and misleading.				 * but 'path' is not used anywhere except				 * the above line and if this is done				 * after the 'continue' then we will				 * either hang or be forced to duplicate				 * it inside the buffer == null or add				 * a 'finally' clause. you decide which one's				 * worse. */"
JEdit,DESIGN,"/* workaround for hang if match was					 * zero-width. not sure if there is					 * a better way to handle this */"
JEdit,DESIGN,"/* On Windows paths of the form X: list the last *working		 * directory* on that drive. To list the root of the drive		 * you must use X:\.		 *		 * However the VFS browser and friends strip off trailing		 * path separators for various reasons. So to work around		 * that we add a '\' to drive letter paths on Windows.		 */"
JEdit,DESIGN,// On Unix set permissions of port file to rw------- // so that on broken Unices which give everyone read // access to user home dirs people can't see your // port file (and hence send arbitriary BeanShell code // your way. Nasty.)
JEdit,DESIGN,// ??? this should only be called with // fully loaded action set
JEdit,DESIGN,// broken Eclipse workaround! // 24 Febuary 2004
JEdit,DESIGN,"/*		Notes:		This is broken.  It finds public but less specific methods over		non-public but more specific ones.		This method needs to be rewritten to eliminate findAccessibleMethod.		We should implement the findMostSpecificMethod that uses the publicOnly		flag.  FindMostSpecificMethod should also operate in two passes to give		standard Java assignable matches priority over extended bsh type		matches.	*/"
JEdit,DESIGN,// XXX: This should not be hardcoded
JEdit,DESIGN,// INTERVAL OPERATOR: //  {x} | {x} | {xy}  (RE_INTERVALS && RE_NO_BK_BRACES) //  \{x\} | \{x\} | \{xy\} (RE_INTERVALS && !RE_NO_BK_BRACES) // // OPEN QUESTION:  //  what is proper interpretation of '{' at start of string?
JEdit,DESIGN,// XXX: does this really belong here?
JEdit,DESIGN,// We do need to save every possible point but the number of clone() // invocations here is really a killer for performance on non-stingy // repeat operators.  I'm open to suggestions...
JEdit,DESIGN,"/*		Note: this should really just throw NoSuchFieldException... need		to change related signatures and code.	*/"
JEdit,DESIGN,// Split the methods into constructors and regular method lists
JEdit,IMPLEMENTATION,// need to add static block here
JEdit,IMPLEMENTATION,"/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. TODO: Update to BZip2 1.0.1 * * @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a> */"
JEdit,IMPLEMENTATION,"/**    * Parse the XML declaration.    * <pre>    * [25] XMLDecl ::= '&lt;?xml' VersionInfo EncodingDecl? SDDecl? S? '?&gt;'    * [26] VersionInfo ::= S 'version' Eq ('""1.0""' | ""'1.0'"")    * [33] SDDecl ::= S 'standalone' Eq ""'"" ('yes' | 'no') ""'""    *               | S 'standalone' Eq '""' (""yes"" | ""no"") '""'    * [78] EncodingDecl ::= S 'encoding' Eq QEncoding    * </pre>    * <p>([80] to [82] are also significant.)    * <p>(The <code>&lt;?xml</code> and whitespace have already been read.)    * <p>TODO: validate value of standalone.    * @see #parseTextDecl    * @see #checkEncoding    */"
JEdit,IMPLEMENTATION,// implement the recursion for getClassImpl()
JEdit,IMPLEMENTATION,// Need some format checking here
JEdit,IMPLEMENTATION,// Need to calculate this... just fudging here for now.
JEdit,IMPLEMENTATION,// TODO: Also check REG_ANCHORINDEX vs. anchor
JEdit,IMPLEMENTATION,// skip header bytes // maybe should check if they're valid or not?
JEdit,IMPLEMENTATION,"/*		Debug utils are static so that they are reachable by code that doesn't		necessarily have an interpreter reference (e.g. tracing in utils).		In the future we may want to allow debug/trace to be turned on on		a per interpreter basis in which case we'll need to use the parent 		reference in some way to determine the scope of the command that 		turns it on or off.	*/"
JEdit,IMPLEMENTATION,"/**    * Parse an element-content model.    * [42] elements ::= (choice | seq) ('?' | '*' | '+')?    * [44] cps ::= S? %cp S?    * [45] choice ::= '(' S? %ctokplus (S? '|' S? %ctoks)* S? ')'    * [46] ctokplus ::= cps ('|' cps)+    * [47] ctoks ::= cps ('|' cps)*    * [48] seq ::= '(' S? %stoks (S? '' S? %stoks)* S? ')'    * [49] stoks ::= cps ('' cps)*    * *NOTE: the opening '(' and S have already been read.    * *TODO: go over parameter entity boundaries more carefully.    */"
JEdit,IMPLEMENTATION,// this convention may change...
JEdit,IMPLEMENTATION,"/**    * Parse the attribute type.    * [54] AttType ::= StringType | TokenizedType | EnumeratedType    * [55] StringType ::= 'CDATA'    * [56] TokenizedType ::= 'ID' | 'IDREF' | 'IDREFS' | 'ENTITY' | 'ENTITIES' |    *                        'NMTOKEN' | 'NMTOKENS'    * [57] EnumeratedType ::= NotationType | Enumeration    * *TODO: validate the type!!    */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginManagerProgress constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ writeMarkers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Instance variables
JEdit,WITHOUT_CLASSIFICATION,//{{{ Private members
JEdit,WITHOUT_CLASSIFICATION,//{{{ addNotify() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ foldLevelChanged() method
JEdit,WITHOUT_CLASSIFICATION,// this will result in a slight speed up since we // don't need to read the DTD anyway as AElfred is // non-validating
JEdit,WITHOUT_CLASSIFICATION,//{{{ startElement() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createTOC() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ SelectionHandler class
JEdit,WITHOUT_CLASSIFICATION,// ensures that active view is saved last // ie created last on next load ie in front // on next load
JEdit,WITHOUT_CLASSIFICATION,//{{{ MemoryStatus class
JEdit,WITHOUT_CLASSIFICATION,//{{{ writeStringArray() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ nextTip() method
JEdit,WITHOUT_CLASSIFICATION,/* Create the buttons */
JEdit,WITHOUT_CLASSIFICATION,//{{{ contentRemoved() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ InstallButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ undo() method
JEdit,WITHOUT_CLASSIFICATION,// We can't do the backward scan if start == 0
JEdit,WITHOUT_CLASSIFICATION,// Create a new hashtable if necessary.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ LineElement constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ _save() method
JEdit,WITHOUT_CLASSIFICATION,"/*			Try super import if available			Note: we do this last to allow explicitly imported classes			and packages to take priority.  This method will also throw an			error indicating ambiguity if it exists...		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ clear() method
JEdit,WITHOUT_CLASSIFICATION,/* --- Begin static members --- */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ReturnStatement */
JEdit,WITHOUT_CLASSIFICATION,/*arbitrary flag*/
JEdit,WITHOUT_CLASSIFICATION,// Leave buffer in a consistent state if // an error occurs
JEdit,WITHOUT_CLASSIFICATION,// the code above builds a 1-indexed suffix array // but we shift it to be 0-indexed ignoring the // original 0-th element
JEdit,WITHOUT_CLASSIFICATION,//{{{ _addKeyBinding() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ load() method
JEdit,WITHOUT_CLASSIFICATION,// Setting a typed variable is always a local operation.
JEdit,WITHOUT_CLASSIFICATION,//{{{ bufferOpened() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _contentInserted() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isExpanded() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadToolButton() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLineEndOffset() method
JEdit,WITHOUT_CLASSIFICATION,// return type is a class
JEdit,WITHOUT_CLASSIFICATION,"/*     * index in zptr[] of original string after sorting.     */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateModel() method
JEdit,WITHOUT_CLASSIFICATION,// used for the stringReplace and beanShell replace radio buttons // so that the user can press tab to go from the find field to the // replace field in one go
JEdit,WITHOUT_CLASSIFICATION,//{{{ hashCode() method
JEdit,WITHOUT_CLASSIFICATION,// file begins with UTF-8-Y signature. // discard the signature and read // the remainder as UTF-8.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstInvalidLineContext() method
JEdit,WITHOUT_CLASSIFICATION,// Use CONTENT_UNDECLARED to avoid overwriting // existing element declaration.
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateScreenLineCounts() method
JEdit,WITHOUT_CLASSIFICATION,// Don't overstrike if we're on the end of // the line
JEdit,WITHOUT_CLASSIFICATION,//{{{ HideLibrariesButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ registerFoldHandler() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastView() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ KeywordMap constructor
JEdit,WITHOUT_CLASSIFICATION,// Change import precedence if we are a class body/instance
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldHandlers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ physDown() method // scroll down by physical line amount
JEdit,WITHOUT_CLASSIFICATION,// Default implementation... subclasses can extend this.
JEdit,WITHOUT_CLASSIFICATION,// null 'from' type corresponds to type of Primitive.NULL // assign to any object type
JEdit,WITHOUT_CLASSIFICATION,//{{{ unregisterFoldHandler() method
JEdit,WITHOUT_CLASSIFICATION,// statical import fields from the interface so that code inside // can refer to the fields directly (e.g. HEIGHT)
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBounds() method
JEdit,WITHOUT_CLASSIFICATION,// Read the external identifiers.
JEdit,WITHOUT_CLASSIFICATION,//{{{ stop() method
JEdit,WITHOUT_CLASSIFICATION,// Point to return statement point if we had one. // (else it was implicit return? What's the case here?)
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIcon() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockingOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setExpansion() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createEditPane() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ start() method
JEdit,WITHOUT_CLASSIFICATION,// repaint the gutter so that the border color // reflects the focus state
JEdit,WITHOUT_CLASSIFICATION,//{{{ invoke() method
JEdit,WITHOUT_CLASSIFICATION,//System.err.println("x overflow");
JEdit,WITHOUT_CLASSIFICATION,//{{{ Inner classes
JEdit,WITHOUT_CLASSIFICATION,/* Non word character selection behavior */
JEdit,WITHOUT_CLASSIFICATION,/*onlyStatic*/
JEdit,WITHOUT_CLASSIFICATION,"/*				Evaluate block in two passes: 				First do class declarations then do everything else.			*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ AnimatedIcon constructor
JEdit,WITHOUT_CLASSIFICATION,// complete-word command needs a list of all non-alphanumeric // characters used in a keyword map.
JEdit,WITHOUT_CLASSIFICATION,// End constructors
JEdit,WITHOUT_CLASSIFICATION,/* Structure highlight */
JEdit,WITHOUT_CLASSIFICATION,/* --- End instance data --- */
JEdit,WITHOUT_CLASSIFICATION,// we're removing from // the first visible to after // the last visible
JEdit,WITHOUT_CLASSIFICATION,//{{{ Static initializer
JEdit,WITHOUT_CLASSIFICATION,// the vfs browser has what you might call // a design flaw it doesn't update properly // unless the vfs update for a parent arrives // before any updates for the children. sorting // the list alphanumerically guarantees this.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExpansion() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ StatusBarOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ _createInputStream() method
JEdit,WITHOUT_CLASSIFICATION,// if 'temp' is true hide search bar after user is done with it
JEdit,WITHOUT_CLASSIFICATION,"/* gutterBorderWidth = new JTextField(jEdit.getProperty(			""view.gutter.borderWidth""));		addComponent(jEdit.getProperty(""options.gutter.borderWidth"")			gutterBorderWidth); */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ FoldHandler() constructor
JEdit,WITHOUT_CLASSIFICATION,// unwrap any primitives
JEdit,WITHOUT_CLASSIFICATION,// wrapper to primitive // Convert value to Primitive and check/cast it.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldModes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateSelectedLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ButtonLayout class
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleRenderer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTableCellRendererComponent() method
JEdit,WITHOUT_CLASSIFICATION,/*onlystatic*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ setValueAt() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ButtonCellRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAbbrevField() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ foldHandlerChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ xToScreenLineOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getField() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleOverwriteEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _runScript() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelection() method
JEdit,WITHOUT_CLASSIFICATION,// we expand those that are non-empty and // remove those that are empty
JEdit,WITHOUT_CLASSIFICATION,// no field try property acces
JEdit,WITHOUT_CLASSIFICATION,// Word boundary means input[index-1] was a word character // and input[index] is not or input[index] is a word character // and input[index-1] was not //  In the string "one two three" these positions match: //  |o|n|e| |t|w|o| |t|h|r|e|e| //  ^     ^ ^     ^ ^         ^ // is current character a letter or digit? // is previous character a letter or digit?
JEdit,WITHOUT_CLASSIFICATION,// we need this public not protected
JEdit,WITHOUT_CLASSIFICATION,// start at 1 not 0 to skip Token.NULL
JEdit,WITHOUT_CLASSIFICATION,// not a field try property access
JEdit,WITHOUT_CLASSIFICATION,// so an empty cd drive is not reported as a file
JEdit,WITHOUT_CLASSIFICATION,// redraw the whole table because a second shortcut // might have changed too
JEdit,WITHOUT_CLASSIFICATION,// set the method parameters in the local namespace
JEdit,WITHOUT_CLASSIFICATION,// JEditTextArea.scrollTo() needs this to simplify // its code
JEdit,WITHOUT_CLASSIFICATION,// UNDONE When File lets us get the userName use it!
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBeforeCaretTextArea() method
JEdit,WITHOUT_CLASSIFICATION,// primitive to wrapper type
JEdit,WITHOUT_CLASSIFICATION,// how much an occurrence in the title is worth
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getColumnName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setIcon() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCompletions() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionBar constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ModeProperties class
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToActionBar() method
JEdit,WITHOUT_CLASSIFICATION,// Bind to any port on localhost; accept 2 simultaneous // connection attempts before rejecting connections
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFrames() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCursor() method
JEdit,WITHOUT_CLASSIFICATION,// Only allow legal Java assignment unless we're a CAST operation
JEdit,WITHOUT_CLASSIFICATION,//{{{ complete() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removePosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CompletionPopup class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMenuName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isHorizontalLayout() method
JEdit,WITHOUT_CLASSIFICATION,// alias
JEdit,WITHOUT_CLASSIFICATION,// because its preferred size can be quite wide we // don't want it to make the browser way too big // so set the preferred width to 0.
JEdit,WITHOUT_CLASSIFICATION,// Figure out what we're reading from.
JEdit,WITHOUT_CLASSIFICATION,//{{{ closeView() method
JEdit,WITHOUT_CLASSIFICATION,// only add the Plugins branch if there are OptionPanes
JEdit,WITHOUT_CLASSIFICATION,/* exit does editor event & save */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCode() method
JEdit,WITHOUT_CLASSIFICATION,// bsh.system
JEdit,WITHOUT_CLASSIFICATION,//{{{ EnhancedMenu constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadModeCatalog() method
JEdit,WITHOUT_CLASSIFICATION,"/*	Thanks to Sreenivasa Viswanadha for suggesting how to get rid of expensive	lookahead here.*/"
JEdit,WITHOUT_CLASSIFICATION,// if only one clean 'untitled' buffer is open we // replace it
JEdit,WITHOUT_CLASSIFICATION,// if the caret is on a collapsed fold collapse the // parent fold
JEdit,WITHOUT_CLASSIFICATION,// site properties are loaded as default properties overwriting // jEdit's system properties
JEdit,WITHOUT_CLASSIFICATION,// maintain backwards compatibility
JEdit,WITHOUT_CLASSIFICATION,// this vfs has an extended attribute which is not // in the list. add it to the end with a ref count // of 1
JEdit,WITHOUT_CLASSIFICATION,//{{{ update() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Package-private members
JEdit,WITHOUT_CLASSIFICATION,// the first sub-fold. used by JEditTextArea.expandFold().
JEdit,WITHOUT_CLASSIFICATION,// copy of indexes // copy of sizes // instructions to be resized // future offset of a jump instruction
JEdit,WITHOUT_CLASSIFICATION,"/*				If equals() is not explicitly defined we must override the 				default implemented by the This object protocol for scripted				object.  To support XThis equals() must test for equality with 				the generated proxy object not the scripted bsh This object;				otherwise callers from outside in Java will not see a the 				proxy object as equal to itself.			*/"
JEdit,WITHOUT_CLASSIFICATION,// set rename to false if > 1 file selected
JEdit,WITHOUT_CLASSIFICATION,//{{{ addCurrentToHistory() method
JEdit,WITHOUT_CLASSIFICATION,"/* EnhancedMenu has a reference to EditBusStub but not the other	 * way around. So when the EnhancedMenu is being garbage collected	 * its finalize() method removes the EditBusStub from the edit bus. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ TipOfTheDay constructor
JEdit,WITHOUT_CLASSIFICATION,"/* FontRenderContext frc = new FontRenderContext(				nullfalsefalse);			Rectangle2D bounds = getFont()				.getStringBounds(getTime()frc);			Dimension dim = new Dimension((int)bounds.getWidth()				(int)bounds.getHeight());			setPreferredSize(dim);			setMaximumSize(dim); */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ ok() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldLevel() method
JEdit,WITHOUT_CLASSIFICATION,// init the callstack.
JEdit,WITHOUT_CLASSIFICATION,// bsh.cwd
JEdit,WITHOUT_CLASSIFICATION,// References may be allowed
JEdit,WITHOUT_CLASSIFICATION,//{{{ actionPerformed() method
JEdit,WITHOUT_CLASSIFICATION,// don't want it to show "0 bytes" for size // etc.
JEdit,WITHOUT_CLASSIFICATION,// private members
JEdit,WITHOUT_CLASSIFICATION,// ends current block (with many new successors)
JEdit,WITHOUT_CLASSIFICATION,// evaluate finally block
JEdit,WITHOUT_CLASSIFICATION,/*BshClassManager*/
JEdit,WITHOUT_CLASSIFICATION,// Look for scripted class object
JEdit,WITHOUT_CLASSIFICATION,// applets can't see sys props
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevMarker() method
JEdit,WITHOUT_CLASSIFICATION,// bsh.interactive
JEdit,WITHOUT_CLASSIFICATION,// adds a new (u insert) entry in the allIndexes and allSizes arrays
JEdit,WITHOUT_CLASSIFICATION,// still need to call the status check even if the option is // off so that the write protection is updated if it changes // on disk
JEdit,WITHOUT_CLASSIFICATION,//{{{ cancel() method
JEdit,WITHOUT_CLASSIFICATION,// in case already initialized; un-initialize it
JEdit,WITHOUT_CLASSIFICATION,//{{{ changedUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// Install an *instance* of this method in the namespace. // See notes in BshMethod
JEdit,WITHOUT_CLASSIFICATION,// this helps a little
JEdit,WITHOUT_CLASSIFICATION,"/*         * Iterate up to N_ITERS times to improve the tables.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ KeyHandler class
JEdit,WITHOUT_CLASSIFICATION,// // Constants for input. //
JEdit,WITHOUT_CLASSIFICATION,// try to sync up the console
JEdit,WITHOUT_CLASSIFICATION,// Don't generate private constructors
JEdit,WITHOUT_CLASSIFICATION,//{{{ setModel() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Symbol...
JEdit,WITHOUT_CLASSIFICATION,//{{{ DocumentHandler class
JEdit,WITHOUT_CLASSIFICATION,"/* //{{{ HelpIndex constructor	public HelpIndex(String fileListPath String wordIndexPath)	{		this();	} //}}} */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionTextField class
JEdit,WITHOUT_CLASSIFICATION,// Read the value normalizing whitespace // if it is not CDATA.
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// older jEdit versions used a DOCTYPE of CATALOG which // is incorrect since the DOCTYPE must be the name of the // root element which is MODES.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getWrappedDimension() method
JEdit,WITHOUT_CLASSIFICATION,// component that will parent any dialog boxes
JEdit,WITHOUT_CLASSIFICATION,//{{{ isToolsJarAvailable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ init() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getToolTipLocation() method
JEdit,WITHOUT_CLASSIFICATION,// never called
JEdit,WITHOUT_CLASSIFICATION,//{{{ CompleteWord constructor
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ MARK_FOLLOWING
JEdit,WITHOUT_CLASSIFICATION,//{{{ CloseDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// set non proxy hosts list
JEdit,WITHOUT_CLASSIFICATION,// UCS-4 must begin with "<!XML" // 0x00 0x00 0x3c 0x00: UCS-4 unusual (2143)
JEdit,WITHOUT_CLASSIFICATION,//{{{ Max line length
JEdit,WITHOUT_CLASSIFICATION,//{{{ SelectLineRange constructor
JEdit,WITHOUT_CLASSIFICATION,// jump offset // GOTO_W // newOffset now computed from start of GOTO_W
JEdit,WITHOUT_CLASSIFICATION,// bsh.help
JEdit,WITHOUT_CLASSIFICATION,//{{{ FontSelectorDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// on a reload the fold handler doesn't change but // we still need to re-collapse folds. // don't do this on initial fold handler creation
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDockable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadSystemProps() method
JEdit,WITHOUT_CLASSIFICATION,// show tip of the day
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadUserProps() method
JEdit,WITHOUT_CLASSIFICATION,// bsh
JEdit,WITHOUT_CLASSIFICATION,// ONE-OR-MORE REPEAT OPERATOR //  + | \+ depending on RE_BK_PLUS_QM //  not available if RE_LIMITED_OPS is set
JEdit,WITHOUT_CLASSIFICATION,// end AbstractOptionPane implementation
JEdit,WITHOUT_CLASSIFICATION,// computes the stack size variation. In order not to recompute several // times this variation for the same Item we use the intVal field of // this item to store this variation once it has been computed. More // precisely this intVal field stores the sizes of the arguments and of // the return value corresponding to desc.
JEdit,WITHOUT_CLASSIFICATION,//{{{ ListHandler class
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - made conditional on debug
JEdit,WITHOUT_CLASSIFICATION,//{{{ minimumLayoutSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ closeBuffer() method
JEdit,WITHOUT_CLASSIFICATION,// if it's not in the class hash and not marked as // non-existent try loading it from the CLASSPATH
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIconHeight() method
JEdit,WITHOUT_CLASSIFICATION,// ( (this.assemLen + numToWrite ) < this.recordBuf.length )
JEdit,WITHOUT_CLASSIFICATION,// create a copy of this dockable window and float it
JEdit,WITHOUT_CLASSIFICATION,"/*		Perform a cast cast check or assignability check.		@param toType the class type of the cast result which may include			primitive types e.g. Byte.TYPE.  toType may be null to indicate a			loose type assignment (which matches any fromType).		@param fromType is the class type of the value to be cast including			java primitive TYPE classes for primitives.			fromType should be null to indicate that the fromValue is or would			be Primitive.NULL		@param fromValue an Object or bsh.Primitive primitive value (including			Primitive.NULL or Primitive.VOID )		@param checkOnly If checkOnly is true then fromValue must be null.			FromType is checked for the cast to toType...			If checkOnly is false then fromValue must be non-null			(Primitive.NULL is ok) and the actual cast is performed.		@throws UtilEvalError on invalid assignment (when operation is			assignment ).		@throws UtilTargetError wrapping ClassCastException on cast error 			(when operation is cast)		@param operation is Types.CAST or Types.ASSIGNMENT		@see Primitive.getType()	*/"
JEdit,WITHOUT_CLASSIFICATION,// fixes the hang that can occur if we 'save as' to a new // filename which requires re-sorting
JEdit,WITHOUT_CLASSIFICATION,//{{{ completeWord() method
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Complete the big bucket [ss] by quicksorting                 * any unsorted small buckets [ss j].  Hopefully                 * previous pointer-scanning phases have already                 * completed many of the small buckets [ss j] so                 * we don't have to sort them at all.                 */"
JEdit,WITHOUT_CLASSIFICATION,"/*			Try imported packages e.g. ""import foo.bar.*;""			in reverse order of import...			(give later imports precedence...)		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ dispose() method
JEdit,WITHOUT_CLASSIFICATION,"/*                throw new EvalError(					""Sourced file: ""+sourceFileInfo+"" parser Error: "" 					+ e.getMessage( DEBUG ) node callstack );				*/"
JEdit,WITHOUT_CLASSIFICATION,// if the last key was a numeric keypad key // and NumLock is off filter it out
JEdit,WITHOUT_CLASSIFICATION,//{{{ Buffer management methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ addKeyBinding() method
JEdit,WITHOUT_CLASSIFICATION,// only complete current buffer's keyword map
JEdit,WITHOUT_CLASSIFICATION,// Pick screen with largest intersection
JEdit,WITHOUT_CLASSIFICATION,//{{{ isSelected() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ThreadProgress constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Get properties
JEdit,WITHOUT_CLASSIFICATION,// '+ 1' so that findWordEnd() doesn't pick up the space at the start
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateMiscStatus() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ show popup if > 1
JEdit,WITHOUT_CLASSIFICATION,// scan from selection to end failed so // scan from start to selection
JEdit,WITHOUT_CLASSIFICATION,// build a list of unique words in all visible buffers
JEdit,WITHOUT_CLASSIFICATION,//{{{ getToolTipText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNonAlphaNumericWordChars() method
JEdit,WITHOUT_CLASSIFICATION,// These JComponent methods provide the appropriate points // to subscribe and unsubscribe this object to the EditBus
JEdit,WITHOUT_CLASSIFICATION,//{{{ if there is only one competion insert in buffer
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBlockCaretEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// check for match at start of line
JEdit,WITHOUT_CLASSIFICATION,// // Buffers for decoded but unparsed character input. //
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Fields for the control flow graph analysis algorithm (used to compute the // maximum stack size). A control flow graph contains one node per "basic // block" and one edge per "jump" from one basic block to another. Each node // (i.e. each basic block) is represented by the Label object that // corresponds to the first instruction of this basic block. Each node also // stores the list of it successors in the graph as a linked list of Edge // objects. // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ loop through all lines of current buffer
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Word character...
JEdit,WITHOUT_CLASSIFICATION,//{{{ try to find matching keywords
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDockableWindowManager() method
JEdit,WITHOUT_CLASSIFICATION,// reinit the callstack
JEdit,WITHOUT_CLASSIFICATION,// ok this one seems to confuse newbies // endlessly so log it as NOTICE not // ERROR
JEdit,WITHOUT_CLASSIFICATION,//{{{ Completion class
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertSelected() method
JEdit,WITHOUT_CLASSIFICATION,// Note: if we want methods declared inside blocks to be accessible via // this.methodname() inside the block we could handle it here as a // special case.  See also resolveThisFieldReference() special handling // for BlockNameSpace case.  They currently work via the direct name // e.g. methodName().
JEdit,WITHOUT_CLASSIFICATION,/* CallStack callstack */
JEdit,WITHOUT_CLASSIFICATION,// $ at end is literal //}}}
JEdit,WITHOUT_CLASSIFICATION,//{{{ RotatedTextIcon class
JEdit,WITHOUT_CLASSIFICATION,//{{{ createFieldPanel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ statusUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// If we find some other // character that follows // a \r so it is not a // Windows file and probably // a Mac file
JEdit,WITHOUT_CLASSIFICATION,// begin source and eval
JEdit,WITHOUT_CLASSIFICATION,// Pass 1: compute preferred row heights / column widths
JEdit,WITHOUT_CLASSIFICATION,// break out of inner for loop to check next char //}}} //{{{ Handle end of MARK_FOLLOWING
JEdit,WITHOUT_CLASSIFICATION,// Check for explicit return of value from void method type. // retControl.returnPoint is the Node of the return statement
JEdit,WITHOUT_CLASSIFICATION,//{{{ contentInserted() method
JEdit,WITHOUT_CLASSIFICATION,// allocate the array to store the initializers // description of the array // The other dimensions default to zero and are assigned when  // the values are set.
JEdit,WITHOUT_CLASSIFICATION,"/* construct a BeanShell snippet instead of				 * invoking directly so that user can record				 * property changes in macros. */"
JEdit,WITHOUT_CLASSIFICATION,// setting the message to 'null' causes the status bar to check // if a recording is in progress
JEdit,WITHOUT_CLASSIFICATION,// opcode of current instruction // bytes to be added after this instruction
JEdit,WITHOUT_CLASSIFICATION,// Check for surrogates: 00000000 0000xxxx yyyyyyyy zzzzzzzz //  (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz:
JEdit,WITHOUT_CLASSIFICATION,// collapse all nodes as suggested on user mailing list...
JEdit,WITHOUT_CLASSIFICATION,// attempting to expand non-word char
JEdit,WITHOUT_CLASSIFICATION,// If there aren't enough repeats then fail
JEdit,WITHOUT_CLASSIFICATION,// switch namespace and special var visibility
JEdit,WITHOUT_CLASSIFICATION,// // Attributes //
JEdit,WITHOUT_CLASSIFICATION,// evaluate the instance portion of the block in it // Evaluate the initializer block
JEdit,WITHOUT_CLASSIFICATION,//{{{ Update line info and line context arrays
JEdit,WITHOUT_CLASSIFICATION,// Generate code to call ClassGeneratorUtil to get our switch index  // and give us args...
JEdit,WITHOUT_CLASSIFICATION,// add all items in current to doables array
JEdit,WITHOUT_CLASSIFICATION,// These are respectively the first and last tokens in our linked list // If there is only one token firstToken == lastToken
JEdit,WITHOUT_CLASSIFICATION,"/* Returns the node on the top of the stack and remove it from the     stack.  */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ runTemporaryMacro() method
JEdit,WITHOUT_CLASSIFICATION,// updates current and max stack sizes only if opcode == NEW // (stack size variation = 0 for ANEWARRAY CHECKCAST INSTANCEOF)
JEdit,WITHOUT_CLASSIFICATION,//case ClassWriter.FIELD: //case ClassWriter.METH: //case ClassWriter.IMETH:
JEdit,WITHOUT_CLASSIFICATION,//doesnt exist?? //pf.setOrientation(PageFormat.REVERSE_PORTRAIT); //then just do the next best thing
JEdit,WITHOUT_CLASSIFICATION,"//System.err.println(""y="" + y + ""offsetY="" + offsetY //	+ ""size.height="" + size.height //	+ ""win.height="" + win.getHeight());"
JEdit,WITHOUT_CLASSIFICATION,// not in settings directory or jEdit home directory. // no need to reload anything.
JEdit,WITHOUT_CLASSIFICATION,// Number of subexpressions in this token.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFiles() method
JEdit,WITHOUT_CLASSIFICATION,// // The current XML handler interface. //
JEdit,WITHOUT_CLASSIFICATION,// don't show splash screen if there is a file named // 'nosplash' in the settings directory
JEdit,WITHOUT_CLASSIFICATION,// Generate the code implementing the alternate constructor switch
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPrevVisibleLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveSettings() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMessageAndClear() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ preferredLayoutSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextAreaDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// if a directory is selected create new dir in there. // if a file is selected create new dir inside its parent.
JEdit,WITHOUT_CLASSIFICATION,"/* For example if the current fileset is a directory		 * C+g will find the next match within that fileset.		 * This can be annoying if you have just done an		 * incremental search and want the next occurrence		 * in the current buffer. */"
JEdit,WITHOUT_CLASSIFICATION,// coming out of background mode. // no views open. // no buffers open if args empty.
JEdit,WITHOUT_CLASSIFICATION,/*isStatic*/
JEdit,WITHOUT_CLASSIFICATION,// replaces GOTO with GOTO_W JSR with JSR_W and IFxxx <l> with // IFNOTxxx <l'> GOTO_W <l> where IFNOTxxx is the "opposite" opcode // of IFxxx (i.e. IFNE for IFEQ) and where <l'> designates the // instruction just after the GOTO_W.
JEdit,WITHOUT_CLASSIFICATION,"/* to avoid data loss only do this if the above			 * completed successfully */"
JEdit,WITHOUT_CLASSIFICATION,"/* TableColumn col1 = getColumnModel().getColumn(0);		col1.setMinWidth(20);		col1.setMaxWidth(20);		col1.setPreferredWidth(20); */"
JEdit,WITHOUT_CLASSIFICATION,// because this method is called for *every* VFS update // we don't want to scan the tree all the time. So we // use the following algorithm to determine if the path // might be part of the tree: // - if the path starts with the browser's current directory //   we do the tree scan // - if the browser's directory is 'favorites:' -- we have to //   do the tree scan as every path can appear under the //   favorites list // - if the browser's directory is 'roots:' and path is on //   the local filesystem do a tree scan
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveUserProps() method
JEdit,WITHOUT_CLASSIFICATION,/*fromValue*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFrames() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadPluginProps() method
JEdit,WITHOUT_CLASSIFICATION,"/*             * Compute MTF values for the selectors.             */"
JEdit,WITHOUT_CLASSIFICATION,// Number of characters in 'buf' array. // InputStream.read() doesn't always fill the // array (eg the file size is not a multiple of // IOBUFSIZE or it is a GZipped file etc)
JEdit,WITHOUT_CLASSIFICATION,//{{{ WindowTableModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMessageComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeUpdate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateCaretStatus() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ WorkThreadListener implementation
JEdit,WITHOUT_CLASSIFICATION,// Primitive (not null or void) to Object.class type
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ TERMINATE
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionNames() method
JEdit,WITHOUT_CLASSIFICATION,// don't obscure existing message
JEdit,WITHOUT_CLASSIFICATION,/* boolean */
JEdit,WITHOUT_CLASSIFICATION,// so if view is closed in the meantime...
JEdit,WITHOUT_CLASSIFICATION,// General case - performe the instanceof based on assignability
JEdit,WITHOUT_CLASSIFICATION,//{{{ findWordEnd() method
JEdit,WITHOUT_CLASSIFICATION,/* can happen when switching buffers sometimes */
JEdit,WITHOUT_CLASSIFICATION,// for backwards compatibility
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMessage() method
JEdit,WITHOUT_CLASSIFICATION,"/*		The interpretation of an ambiguous name is context sensitive.		We disallow a generic eval( ).	*/"
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - moved body to overloaded getMessage()
JEdit,WITHOUT_CLASSIFICATION,// updates max locals only (no stack change)
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCacheableActionNames() method
JEdit,WITHOUT_CLASSIFICATION,// resolves previous forward references to label if any
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - override error methods and toString
JEdit,WITHOUT_CLASSIFICATION,/* package-private for speed */
JEdit,WITHOUT_CLASSIFICATION,//{{{ createPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ contains() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ componentResized() method
JEdit,WITHOUT_CLASSIFICATION,"/* 			Here we catch any EvalError from the interpreter because we are			using it as a tool to load the command not as part of the			execution path.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Action hints
JEdit,WITHOUT_CLASSIFICATION,//{{{ getProperty() method
JEdit,WITHOUT_CLASSIFICATION,// this.index is index of next pos relative to charAt(0)
JEdit,WITHOUT_CLASSIFICATION,//{{{ setProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ size() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addPluginProps() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removePluginProps() method
JEdit,WITHOUT_CLASSIFICATION,// set flag that next should fail next time?
JEdit,WITHOUT_CLASSIFICATION,// Listener interfaces
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDefaultRootElement() method
JEdit,WITHOUT_CLASSIFICATION,//actions.clear();
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Counterclockwise rotation
JEdit,WITHOUT_CLASSIFICATION,// sanity check during development
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStandardRuleSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeNotify() method
JEdit,WITHOUT_CLASSIFICATION,// NON-WHITESPACE OPERATOR //  \S
JEdit,WITHOUT_CLASSIFICATION,// Error conditions from GNU regcomp(3) manual
JEdit,WITHOUT_CLASSIFICATION,//{{{ copy() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ bufferClosed() method
JEdit,WITHOUT_CLASSIFICATION,// updates the global max stack size
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeLayoutComponent() method //}}}
JEdit,WITHOUT_CLASSIFICATION,// case of a backward jump with an offset >= -32768 or of a forward jump // with of course an unknown offset. In these cases we store the offset // in 2 bytes (which will be increased in resizeInstructions if needed).
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToolTipLabel class
JEdit,WITHOUT_CLASSIFICATION,// 2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx
JEdit,WITHOUT_CLASSIFICATION,// NULL return null as type... we currently use null type to indicate  // loose typing throughout bsh.
JEdit,WITHOUT_CLASSIFICATION,//{{{ MouseHandler class
JEdit,WITHOUT_CLASSIFICATION,// visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitIntInsn // - // visitLdcInsn //int LDC_W = 19;           // - //int LDC2_W = 20;          // - // visitVarInsn // - // - // - // - //int ILOAD_0 = 26;         // - //int ILOAD_1 = 27;         // - //int ILOAD_2 = 28;         // - //int ILOAD_3 = 29;         // - //int LLOAD_0 = 30;         // - //int LLOAD_1 = 31;         // - //int LLOAD_2 = 32;         // - //int LLOAD_3 = 33;         // - //int FLOAD_0 = 34;         // - //int FLOAD_1 = 35;         // - //int FLOAD_2 = 36;         // - //int FLOAD_3 = 37;         // - //int DLOAD_0 = 38;         // - //int DLOAD_1 = 39;         // - //int DLOAD_2 = 40;         // - //int DLOAD_3 = 41;         // - //int ALOAD_0 = 42;         // - //int ALOAD_1 = 43;         // - //int ALOAD_2 = 44;         // - //int ALOAD_3 = 45;         // - // visitInsn // - // - // - // - // - // - // - // visitVarInsn // - // - // - // - //int ISTORE_0 = 59;        // - //int ISTORE_1 = 60;        // - //int ISTORE_2 = 61;        // - //int ISTORE_3 = 62;        // - //int LSTORE_0 = 63;        // - //int LSTORE_1 = 64;        // - //int LSTORE_2 = 65;        // - //int LSTORE_3 = 66;        // - //int FSTORE_0 = 67;        // - //int FSTORE_1 = 68;        // - //int FSTORE_2 = 69;        // - //int FSTORE_3 = 70;        // - //int DSTORE_0 = 71;        // - //int DSTORE_1 = 72;        // - //int DSTORE_2 = 73;        // - //int DSTORE_3 = 74;        // - //int ASTORE_0 = 75;        // - //int ASTORE_1 = 76;        // - //int ASTORE_2 = 77;        // - //int ASTORE_3 = 78;        // - // visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitIincInsn // visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitJumpInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitVarInsn // visiTableSwitchInsn // visitLookupSwitch // visitInsn // - // - // - // - // - // visitFieldInsn // - // - // - // visitMethodInsn // - // - // - //int UNUSED = 186;         // NOT VISITED // visitTypeInsn // visitIntInsn // visitTypeInsn // visitInsn // - // visitTypeInsn // - // visitInsn // - //int WIDE = 196;           // NOT VISITED // visitMultiANewArrayInsn // visitJumpInsn // - //int GOTO_W = 200;         // - //int JSR_W = 201;          // -
JEdit,WITHOUT_CLASSIFICATION,//{{{ quicksort() method
JEdit,WITHOUT_CLASSIFICATION,// hopefully another caret update will come?
JEdit,WITHOUT_CLASSIFICATION,// 1st step: // As explained above resizing an instruction may require to resize another // one which may require to resize yet another one and so on. The first // step of the algorithm consists in finding all the instructions that // need to be resized without modifying the code. This is done by the // following "fix point" algorithm: // - parse the code to find the jump instructions whose offset will need //   more than 2 bytes to be stored (the future offset is computed from the //   current offset and from the number of bytes that will be inserted or //   removed between the source and target instructions). For each such //   instruction adds an entry in (a copy of) the indexes and sizes arrays //   (if this has not already been done in a previous iteration!) // - if at least one entry has been added during the previous step go back //   to the beginning otherwise stop. // In fact the real algorithm is complicated by the fact that the size of // TABLESWITCH and LOOKUPSWITCH instructions depends on their position in // the bytecode (because of padding). In order to ensure the convergence of // the algorithm the number of bytes to be added or removed from these // instructions is over estimated during the previous loop and computed // exactly only after the loop is finished (this requires another pass to // parse the bytecode of the method).
JEdit,WITHOUT_CLASSIFICATION,// nodes remember from where they were sourced
JEdit,WITHOUT_CLASSIFICATION,// jump offset // GOTO_W
JEdit,WITHOUT_CLASSIFICATION,// this should never throw an exception.
JEdit,WITHOUT_CLASSIFICATION,// This reloads the token marker and sends a message // which causes edit panes to repaint their text areas
JEdit,WITHOUT_CLASSIFICATION,"/* Determine installation directory.		 * If the jedit.home property is set use that.		 * Then look for jedit.jar in the classpath.		 * If that fails assume this is the web start version. */"
JEdit,WITHOUT_CLASSIFICATION,// create a panel with a BoxLayout. Can't use Box here // because Box doesn't have setBorder().
JEdit,WITHOUT_CLASSIFICATION,"/*			Look ahead and short circuit evaluation of the rhs if:				we're a boolean AND and the lhs is false.		*/"
JEdit,WITHOUT_CLASSIFICATION,//int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537; //compressOutOfMemory ( totalDraw n );
JEdit,WITHOUT_CLASSIFICATION,//{{{ setTemporaryProperty() method
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - moved body to overloaded getMessage()
JEdit,WITHOUT_CLASSIFICATION,//{{{ unsetProperty() method
JEdit,WITHOUT_CLASSIFICATION,"/* 			Create the root ""bsh"" system object if it doesn't exist.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ resetProperty() method
JEdit,WITHOUT_CLASSIFICATION,// end JcmdProcessTest.java
JEdit,WITHOUT_CLASSIFICATION,// Check that the attribute doesn't // already exist!
JEdit,WITHOUT_CLASSIFICATION,// // helper methods //
JEdit,WITHOUT_CLASSIFICATION,// We have to open our own stream // to the URL.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActiveView() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ charData() method
JEdit,WITHOUT_CLASSIFICATION,"/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */"
JEdit,WITHOUT_CLASSIFICATION,// if any directories are selected add // them otherwise add current directory
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBottomDockingArea() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ KEY_TYPED...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTime() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockableWindowManager constructor
JEdit,WITHOUT_CLASSIFICATION,//Font font = UIManager.getFont("Label.font");
JEdit,WITHOUT_CLASSIFICATION,// NON-ALPHANUMERIC OPERATOR //  \W
JEdit,WITHOUT_CLASSIFICATION,"/*             * Now ftab contains the first loc of every small bucket.             * Calculate the running order from smallest to largest             * big bucket.             */"
JEdit,WITHOUT_CLASSIFICATION,"/*         * Now the selectors.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Clock constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ makeServerScript() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Clock class
JEdit,WITHOUT_CLASSIFICATION,// don't show menu items to dock into a plain view
JEdit,WITHOUT_CLASSIFICATION,// returns Object covering both Double and Boolean return types
JEdit,WITHOUT_CLASSIFICATION,// this is package-private so that the painter can use it without // having to call getSelection() (which involves an array copy)
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// do operating system specific stuff (creating startup // scripts installing man pages etc.)
JEdit,WITHOUT_CLASSIFICATION,//{{{ HistoryTextField constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ TreeHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockableWindowCompare class
JEdit,WITHOUT_CLASSIFICATION,// Read the default value.
JEdit,WITHOUT_CLASSIFICATION,"/*             * Use simpleSort() since the full sorting mechanism             * has quite a large constant overhead.             */"
JEdit,WITHOUT_CLASSIFICATION,"/*         * In the various block-sized structures live data runs         * from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First         * set up the overshoot area for block.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ showPopupMenu() method
JEdit,WITHOUT_CLASSIFICATION,//lhs.assign( null false );
JEdit,WITHOUT_CLASSIFICATION,// pushes handler block onto the stack of blocks to be visited
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - added sourceFile info
JEdit,WITHOUT_CLASSIFICATION,// failsafe set the Line as the origin of the error.
JEdit,WITHOUT_CLASSIFICATION,"/*                 * copy 1                 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ doAWTRequests() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ propertiesChanged() method
JEdit,WITHOUT_CLASSIFICATION,"/*			We jump through some hoops here to handle arbitrary cases like			unset(""bsh.foo"");		*/"
JEdit,WITHOUT_CLASSIFICATION,// // Utility flag: have we noticed a CR while reading the last // data chunk?  If so we will have to go back and normalise // CR/LF. //
JEdit,WITHOUT_CLASSIFICATION,// add the source file info and throw again
JEdit,WITHOUT_CLASSIFICATION,/* this ensures that the first line is always visible */
JEdit,WITHOUT_CLASSIFICATION,"/*  					Don't auto-unwrap wrappers (preserve identity semantics)					FALL THROUGH TO OBJECT OPERATIONS BELOW.				*/"
JEdit,WITHOUT_CLASSIFICATION,// optimization for common case
JEdit,WITHOUT_CLASSIFICATION,// end source and eval
JEdit,WITHOUT_CLASSIFICATION,//{{{ isVisible() method
JEdit,WITHOUT_CLASSIFICATION,// this notifies each display manager editing this // buffer of the screen line count change
JEdit,WITHOUT_CLASSIFICATION,// end primary set and get methods
JEdit,WITHOUT_CLASSIFICATION,// No it is not.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEnterAddsToHistory() method
JEdit,WITHOUT_CLASSIFICATION,// Careful here: // else fall through to override and install the new typed version
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAfterCaretTextArea() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeExtendedAttributes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ScrollLineCount class
JEdit,WITHOUT_CLASSIFICATION,// Default is c:\windows under win98 $HOME under Unix
JEdit,WITHOUT_CLASSIFICATION,//{{{ MemoryStatus constructor
JEdit,WITHOUT_CLASSIFICATION,"/*this originally handled postfix array dimensions...void VariableDeclaratorId() #VariableDeclaratorId :{ Token t; }{  t=<IDENTIFIER> { jjtThis.name = t.image; }  ( ""["" ""]"" { jjtThis.addUndefinedDimension(); } )*}*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectAllOnFocus() method
JEdit,WITHOUT_CLASSIFICATION,// If this is a unary increment of decrement (either pre or postfix) // then we need an LHS to which to assign the result.  Otherwise // just do the unary operation for the value.
JEdit,WITHOUT_CLASSIFICATION,// adds the instruction to the bytecode of the method
JEdit,WITHOUT_CLASSIFICATION,// End ConsoleInterface
JEdit,WITHOUT_CLASSIFICATION,"/*             * Recompute the tables based on the accumulated frequencies.             */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ newView() method
JEdit,WITHOUT_CLASSIFICATION,"/*	Note: this class is final because we may test == Primitive.class in places.	If we need to change that search for those tests.*/"
JEdit,WITHOUT_CLASSIFICATION,// show 'close' item if at least one selected // file is currently open
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEnterAddsToHistory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectAllOnFocus() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ doTypeSelect() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ splitVertically() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getInstantPopups() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setInstantPopups() method
JEdit,WITHOUT_CLASSIFICATION,// check if download failed
JEdit,WITHOUT_CLASSIFICATION,// so that it doesn't resize...
JEdit,WITHOUT_CLASSIFICATION,// Look for a known signature.
JEdit,WITHOUT_CLASSIFICATION,//{{{ addToolBar() method
JEdit,WITHOUT_CLASSIFICATION,// Set the new status
JEdit,WITHOUT_CLASSIFICATION,// next succeeds // is a match // try next option
JEdit,WITHOUT_CLASSIFICATION,//{{{ mousePressed() method
JEdit,WITHOUT_CLASSIFICATION,// Add the '0-repeats' index // positions.elementAt(z) == position [] in input after <<z>> matches
JEdit,WITHOUT_CLASSIFICATION,//{{{ doBackwardSearch() method
JEdit,WITHOUT_CLASSIFICATION,// invalidate the old selection
JEdit,WITHOUT_CLASSIFICATION,//{{{ ColorPickerDialog class
JEdit,WITHOUT_CLASSIFICATION,"/* fireTableRowsInserted(startIndex + 1				startIndex + list.size() + 1); */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ processKeyEvent() method
JEdit,WITHOUT_CLASSIFICATION,// These variables are package scope for fast access within the engine // execution flags this match was made using
JEdit,WITHOUT_CLASSIFICATION,//{{{ getModel() method
JEdit,WITHOUT_CLASSIFICATION,// ZERO-OR-ONE REPEAT OPERATOR / STINGY MATCHING OPERATOR //  ? | \? depending on RE_BK_PLUS_QM //  not available if RE_LIMITED_OPS is set //  stingy matching if RE_STINGY_OPS is set and it follows a quantifier
JEdit,WITHOUT_CLASSIFICATION,//{{{ unsplit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedFiles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ processMouseEvent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FocusHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ mouseReleased() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ rename() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PanelWindowContainer constructor
JEdit,WITHOUT_CLASSIFICATION,//   //  End mutable instance variables. // ---------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// Order of body and condition is swapped for do / while
JEdit,WITHOUT_CLASSIFICATION,// we don't want duplicate // entries in the kill ring
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockBorder class
JEdit,WITHOUT_CLASSIFICATION,// Determine the current content type.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExpandOnInput() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CompletionPopup constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setExpandOnInput() method
JEdit,WITHOUT_CLASSIFICATION,// can't shift floats
JEdit,WITHOUT_CLASSIFICATION,//{{{ historyPrevious() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MarkerHighlight class
JEdit,WITHOUT_CLASSIFICATION,// evaluate the expression
JEdit,WITHOUT_CLASSIFICATION,// if relative fix up to bsh.cwd
JEdit,WITHOUT_CLASSIFICATION,// UCS-4 must begin with "<!XML" // 0x00 0x00 0x00 0x3c: UCS-4 big-endian (1234)
JEdit,WITHOUT_CLASSIFICATION,// set transient fields
JEdit,WITHOUT_CLASSIFICATION,"/*			Lots of preconditions checked here...			Once things are running smoothly we might comment these out			(That's what assertions are for).		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ equals() method
JEdit,WITHOUT_CLASSIFICATION,// converts temporary opcodes 202 to 217 (inclusive) 218 and 219 // to IFEQ ... JSR (inclusive) IFNULL and IFNONNULL
JEdit,WITHOUT_CLASSIFICATION,// no body?
JEdit,WITHOUT_CLASSIFICATION,// Read the first four bytes for // autodetection.
JEdit,WITHOUT_CLASSIFICATION,"/* Magic: UNTITLED is only set if newFile param to		 * constructor is set NEW_FILE is also set if file		 * doesn't exist on disk.		 *		 * This is so that we can tell apart files created		 * with jEdit.newFile() and those that just don't		 * exist on disk.		 *		 * Why do we need to tell the difference between the		 * two? jEdit.addBufferToList() checks if the only		 * opened buffer is an untitled buffer and if so		 * replaces it with the buffer to add. We don't want		 * this behavior to occur with files that don't		 * exist on disk; only untitled ones.		 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ mouseDragged() method
JEdit,WITHOUT_CLASSIFICATION,// in the future we will want something better // eg. having an 'evt' object passed to // EditAction.invoke().
JEdit,WITHOUT_CLASSIFICATION,// Read the XML/Encoding declaration.
JEdit,WITHOUT_CLASSIFICATION,/* new JEditLauncherOSTask(installer) */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedColor() method
JEdit,WITHOUT_CLASSIFICATION,"/* When closing the last buffer the BufferUpdate.CLOSED			 * handler doesn't call setBuffer() because null buffers			 * are not supported. Instead it waits for the subsequent			 * 'Untitled' file creation. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ doForwardSearch() method
JEdit,WITHOUT_CLASSIFICATION,// Yay we're finally there
JEdit,WITHOUT_CLASSIFICATION,// creates a new Edge object or reuses one from the shared pool
JEdit,WITHOUT_CLASSIFICATION,// down arrow
JEdit,WITHOUT_CLASSIFICATION,// no parenthesis on previous line (prevLineParenWeight == 0) so the normal indenting rules are used
JEdit,WITHOUT_CLASSIFICATION,// have to do this because setText() sets index to -1
JEdit,WITHOUT_CLASSIFICATION,//{{{ HistoryBorder class
JEdit,WITHOUT_CLASSIFICATION,"/* Call this to reinitialize the node stack.  It is called     automatically by the parser's ReInit() method. */"
JEdit,WITHOUT_CLASSIFICATION,// Delete existing copy
JEdit,WITHOUT_CLASSIFICATION,//initCallStack( namespace );
JEdit,WITHOUT_CLASSIFICATION,//{{{ ColorWellButton constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ historyNext() method
JEdit,WITHOUT_CLASSIFICATION,// use the low-level property setting code // so that if we have a buffer-local // property with the same value as a default // later changes in the default don't affect // the buffer-local property
JEdit,WITHOUT_CLASSIFICATION,// null callstack one will be created for us
JEdit,WITHOUT_CLASSIFICATION,// according to krisk this looks better on OS X...
JEdit,WITHOUT_CLASSIFICATION,// replaces the temporary jump opcodes introduced by Label.resolve.
JEdit,WITHOUT_CLASSIFICATION,// Read an XML or text declaration.
JEdit,WITHOUT_CLASSIFICATION,// Search for a matching tuple and // return the string if we find one.
JEdit,WITHOUT_CLASSIFICATION,// Get the syntax token at 'offset' // only tokens with the same type will be checked for // the corresponding bracket
JEdit,WITHOUT_CLASSIFICATION,// so you the avid code reader should use MODES as the // DOCTYPE instead but we still let old catalogs through // to avoid annoying users.
JEdit,WITHOUT_CLASSIFICATION,// only select other whitespace in this case
JEdit,WITHOUT_CLASSIFICATION,// Attempt to detect the encoding.
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollDownPage() method
JEdit,WITHOUT_CLASSIFICATION,"/* fireTableRowsUpdated(indexindex);		fireTableRowsDeleted(index + 1lastIndex); */"
JEdit,WITHOUT_CLASSIFICATION,// initializes the previous Edge object...
JEdit,WITHOUT_CLASSIFICATION,// even though this class is called AbstractOptionPane it is not really // abstract since BufferOptions uses an instance of it to lay out its // components.
JEdit,WITHOUT_CLASSIFICATION,// Don't show the welcome message if jEdit was started // with the -nosettings switch
JEdit,WITHOUT_CLASSIFICATION,"/*			Child is array initializer.  Evaluate it and fill in the 			dimensions it returns.  Initialized arrays are always fully defined			(no undefined dimensions to worry about).  			The syntax uses the undefinedDimension count.			e.g. int [][] { 1 2 };		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ spacesToTabs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ doctypeDecl() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadSiteProps() method
JEdit,WITHOUT_CLASSIFICATION,/* they're too troublesome */
JEdit,WITHOUT_CLASSIFICATION,// case ClassWriter.MANA_INSN:
JEdit,WITHOUT_CLASSIFICATION,// Here we have seen an odd number of backslash's followed by a 'u'
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineOfOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHandlerForFileName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ dragAndDropCallback() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ KEY_PRESSED...
JEdit,WITHOUT_CLASSIFICATION,//{{{ maybeReloadDirectory() method
JEdit,WITHOUT_CLASSIFICATION,// // Entities //
JEdit,WITHOUT_CLASSIFICATION,//{{{ ColorWell class
JEdit,WITHOUT_CLASSIFICATION,//{{{ showClipText() method
JEdit,WITHOUT_CLASSIFICATION,// map loose return type to Object
JEdit,WITHOUT_CLASSIFICATION,//{{{ initTextArea() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleMessage() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateButtons() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBeanShellReplace() method
JEdit,WITHOUT_CLASSIFICATION,/* case KeyEvent.VK_SEPARATOR: */
JEdit,WITHOUT_CLASSIFICATION,//{{{ StatusBar constructor
JEdit,WITHOUT_CLASSIFICATION,// need to let \b through so that backspace will work // in HistoryTextFields
JEdit,WITHOUT_CLASSIFICATION,//{{{ PasteFromListDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// People have reported hangs with JDK 1.4; might be // caused by modal dialogs being displayed from // windowActivated()
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedClipText()
JEdit,WITHOUT_CLASSIFICATION,// for the parent directory right-click; on the click we select // the clicked item but when the popup goes away we select the // currently showing directory.
JEdit,WITHOUT_CLASSIFICATION,//{{{ numericKeypadKey() method
JEdit,WITHOUT_CLASSIFICATION,// add interpereter and namespace to args list
JEdit,WITHOUT_CLASSIFICATION,//{{{ reload() method
JEdit,WITHOUT_CLASSIFICATION,"/* reference counter allows us to remove a column from		 * the table when no directory using this column is		 * visible */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRegister() method
JEdit,WITHOUT_CLASSIFICATION,// for ABI compatibility
JEdit,WITHOUT_CLASSIFICATION,//{{{ If reloading root update parent directory list
JEdit,WITHOUT_CLASSIFICATION,// label == null means no configurable options
JEdit,WITHOUT_CLASSIFICATION,"/*			Is it a simple variable name?			Doing this first gives the correct Java precedence for vars 			vs. imported class names (at least in the simple case - see			tests/precedence1.bsh).  It should also speed things up a bit.		*/"
JEdit,WITHOUT_CLASSIFICATION,// like TABL_INSN
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBufferHistory() method
JEdit,WITHOUT_CLASSIFICATION,// eg trying to bind C+n C+p if C+n already bound
JEdit,WITHOUT_CLASSIFICATION,// --------------------------------------------------------- // The following instance variables mutate during evaluation and should // be reset by the reset() method where necessary
JEdit,WITHOUT_CLASSIFICATION,// Find the bsh method
JEdit,WITHOUT_CLASSIFICATION,//Log.log(Log.WARNINGthis"VFS update: request already in progress");
JEdit,WITHOUT_CLASSIFICATION,// Call script "invoke( String methodName Object [] args );
JEdit,WITHOUT_CLASSIFICATION,// a default equals() testing for equality with the This reference
JEdit,WITHOUT_CLASSIFICATION,// Check if a plugin with the same name // is already loaded
JEdit,WITHOUT_CLASSIFICATION,// see VFSBrowser.browseDirectory()
JEdit,WITHOUT_CLASSIFICATION,// Start the entity.
JEdit,WITHOUT_CLASSIFICATION,// As long as there's nothing in the // read buffer try reading more data // (for an external entity) or popping // the entity stack (for either).
JEdit,WITHOUT_CLASSIFICATION,// save a file -> sends vfs update. if a VFS file dialog box // is shown from the same event frame as the save the // VFSUpdate will be delivered before the directory is loaded // and before the path is set.
JEdit,WITHOUT_CLASSIFICATION,//{{{ expandAbbrev() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPreferredSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ InputHandler constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ FileRootsVFS constructor
JEdit,WITHOUT_CLASSIFICATION,"/* We do this stuff because the browser is not able to handle	 * more than one request yet */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ FilesChangedDialog constructor
JEdit,WITHOUT_CLASSIFICATION,"/*				If we have type info and the child is an array initializer				pass it along...  Else use the default eval style.				(This allows array initializer to handle the problem... 				allowing for future enhancements in loosening types there).				*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Renderer class
JEdit,WITHOUT_CLASSIFICATION,// There's an explicit character stream.
JEdit,WITHOUT_CLASSIFICATION,// record \n and \t on lines specially so that auto indent // can take place
JEdit,WITHOUT_CLASSIFICATION,"/* case MouseEvent.MOUSE_ENTERED:				toolTipInitialDelay = ttm.getInitialDelay();				toolTipReshowDelay = ttm.getReshowDelay();				ttm.setInitialDelay(200);				ttm.setReshowDelay(0);				super.processMouseEvent(evt);				break;			case MouseEvent.MOUSE_EXITED:				ttm.setInitialDelay(toolTipInitialDelay);				ttm.setReshowDelay(toolTipReshowDelay);				super.processMouseEvent(evt);				break; */"
JEdit,WITHOUT_CLASSIFICATION,// I guess ideally all browsers // should have views but since they // don't we just use the active view // in that case since some actions // depend on a view being there and // I don't want to add checks to // them all
JEdit,WITHOUT_CLASSIFICATION,// Push the boolean constant 'true' (for declaredOnly)
JEdit,WITHOUT_CLASSIFICATION,// REMIND: calling isDirectory() on a floppy drive // displays stupid I/O error dialog box on Windows
JEdit,WITHOUT_CLASSIFICATION,//{{{ valueChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FavoritesMenuButton constructor
JEdit,WITHOUT_CLASSIFICATION,/* Line seperator */
JEdit,WITHOUT_CLASSIFICATION,// Normal condition.
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectAll() method
JEdit,WITHOUT_CLASSIFICATION,// if the user pressed eg C+e n n in the // search bar we want focus to go back there // after the prefix is done
JEdit,WITHOUT_CLASSIFICATION,//{{{ showSplashScreen() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isPrefixActive() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ GutterOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,// is it a header?
JEdit,WITHOUT_CLASSIFICATION,// null some variables so that retaining references // to closed views won't hurt as much.
JEdit,WITHOUT_CLASSIFICATION,// Push the existing status.
JEdit,WITHOUT_CLASSIFICATION,// to avoid having to deal with read/write locks and such // we insert the loaded data into the buffer in the // post-load cleanup runnable which runs in the AWT thread.
JEdit,WITHOUT_CLASSIFICATION,// Make the URL absolute.
JEdit,WITHOUT_CLASSIFICATION,// paths on case-insensitive filesystems are stored as lower // case in the hash.
JEdit,WITHOUT_CLASSIFICATION,// Create a new read buffer. // (Note the four-character margin)
JEdit,WITHOUT_CLASSIFICATION,//{{{ check if we have to stop parsing
JEdit,WITHOUT_CLASSIFICATION,// Flush any remaining data.
JEdit,WITHOUT_CLASSIFICATION,/* value */
JEdit,WITHOUT_CLASSIFICATION,// queue of redos. first is most recent last is oldest
JEdit,WITHOUT_CLASSIFICATION,// // Notations. //
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // Major syntactic productions. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,//{{{ runScript() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Paint token backgrounds
JEdit,WITHOUT_CLASSIFICATION,//{{{ invokeAction() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStartOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeAllKeyBindings() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDragEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeKeyBinding() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ resolveEntity() method
JEdit,WITHOUT_CLASSIFICATION,// we create a stream tokenizer for parsing a simple // stack-based language
JEdit,WITHOUT_CLASSIFICATION,// // Flags for parsing context. //
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastAction() method
JEdit,WITHOUT_CLASSIFICATION,// can happen if the user presses C+w twice real // quick and the buffer has unsaved changes
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLength() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ readNextChar() method
JEdit,WITHOUT_CLASSIFICATION,// Parse the first content particle
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRepeatCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ construct() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastActionCount() method
JEdit,WITHOUT_CLASSIFICATION,// if this successor has not already been pushed onto the stack...
JEdit,WITHOUT_CLASSIFICATION,//{{{ Entry class
JEdit,WITHOUT_CLASSIFICATION,// bytecode of the method // indexes in b // loop indexes
JEdit,WITHOUT_CLASSIFICATION,//{{{ LineManager constructor
JEdit,WITHOUT_CLASSIFICATION,// try mode-specific abbrevs first
JEdit,WITHOUT_CLASSIFICATION,// This constructor is used for convenience when we know the set beforehand // e.g. \d --> new RETokenOneOf("0123456789"false ..) //      \D --> new RETokenOneOf("0123456789"true ..)
JEdit,WITHOUT_CLASSIFICATION,//{{{ RecentHandler class
JEdit,WITHOUT_CLASSIFICATION,// Add tryMatch to list of possibilities.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Protected members
JEdit,WITHOUT_CLASSIFICATION,"/*			If we didn't find a class or variable name (or prefix) above			there are two possibilities:			- If we are a simple name then we can pass as a void variable 			reference.			- If we are compound then we must fail at this point.		*/"
JEdit,WITHOUT_CLASSIFICATION,// if we've got an object resolve the method
JEdit,WITHOUT_CLASSIFICATION,// Ease debugging... // XThis.this refers to the enclosing class instance
JEdit,WITHOUT_CLASSIFICATION,// Special:
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelection() method
JEdit,WITHOUT_CLASSIFICATION,// for backwards compatibility with plugins that fiddle with // jEdit's UI layout
JEdit,WITHOUT_CLASSIFICATION,//{{{ transactionComplete() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getElementCount() method
JEdit,WITHOUT_CLASSIFICATION,// this is either style.getBackgroundColor() or // styles[defaultID].getBackgroundColor()
JEdit,WITHOUT_CLASSIFICATION,// so that end followed by up arrow will always put caret at // the end of the previous line for example //setMagicCaretPosition(Integer.MAX_VALUE); //}}}
JEdit,WITHOUT_CLASSIFICATION,// push this constructor index number onto stack
JEdit,WITHOUT_CLASSIFICATION,/*paramTypes*/
JEdit,WITHOUT_CLASSIFICATION,// else set it and return
JEdit,WITHOUT_CLASSIFICATION,// stop checking rules if there was a match
JEdit,WITHOUT_CLASSIFICATION,// execute the action
JEdit,WITHOUT_CLASSIFICATION,// reads and copies instruction
JEdit,WITHOUT_CLASSIFICATION,//{{{ Figure out some minor things
JEdit,WITHOUT_CLASSIFICATION,//{{{ WindowTableModel constructor
JEdit,WITHOUT_CLASSIFICATION,// // Location. //
JEdit,WITHOUT_CLASSIFICATION,"//Log.log(Log.DEBUGjEdit.class""Adding edit mode "" //	+ mode.getName());"
JEdit,WITHOUT_CLASSIFICATION,//{{{ initBufferSwitcher() method
JEdit,WITHOUT_CLASSIFICATION,// Get the ConstructorArgs selector field from ConstructorArgs
JEdit,WITHOUT_CLASSIFICATION,"/*     * index of the last char in the block so     * the block size == last + 1.     */"
JEdit,WITHOUT_CLASSIFICATION,// If repeat was true originally clear it // Otherwise it might have been set by the action etc
JEdit,WITHOUT_CLASSIFICATION,//{{{ resetLastActionCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateTitle() method
JEdit,WITHOUT_CLASSIFICATION,//cv.visitLineNumber( index labels[index] ); // push this before args
JEdit,WITHOUT_CLASSIFICATION,// OK add it to the end of the // bucket.
JEdit,WITHOUT_CLASSIFICATION,//{{{ MyFocusManager class
JEdit,WITHOUT_CLASSIFICATION,// leave null
JEdit,WITHOUT_CLASSIFICATION,// can't happen
JEdit,WITHOUT_CLASSIFICATION,// DIGIT OPERATOR //  \d if RE_CHAR_CLASS_ESCAPES is set
JEdit,WITHOUT_CLASSIFICATION,//{{{ MyFocusTraversalPolicy class
JEdit,WITHOUT_CLASSIFICATION,// selected a header; skip to the next row
JEdit,WITHOUT_CLASSIFICATION,"/* A conditional node is constructed if its condition is true.  All     the nodes that have been pushed since the node was opened are     made children of the the conditional node which is then pushed     on to the stack.  If the condition is false the node is not     constructed and they are left on the stack. */"
JEdit,WITHOUT_CLASSIFICATION,// 1-byte sequence: 000000000xxxxxxx = 0xxxxxxx
JEdit,WITHOUT_CLASSIFICATION,// only set if all buffers saved/closed
JEdit,WITHOUT_CLASSIFICATION,// updates current stack size (max stack size unchanged because stack // size variation always negative in this case)
JEdit,WITHOUT_CLASSIFICATION,// first of all if this action set a // readNextChar do not clear the repeat
JEdit,WITHOUT_CLASSIFICATION,//{{{ MouseWheelHandler class
JEdit,WITHOUT_CLASSIFICATION,// should normally be
JEdit,WITHOUT_CLASSIFICATION,// remember the last executed action
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleKey() method
JEdit,WITHOUT_CLASSIFICATION,"/*		Disallowing VOIDs here was an easy way to support the throwing of a 		more descriptive error message on use of an undefined argument to a 		method call (very common).  If it ever turns out that we need to 		support that for some reason we'll have to re-evaluate how we get 		""meta-information"" about the arguments in the various invoke() methods 		that take Object [].  We could either pass BSHArguments down to 		overloaded forms of the methods or throw an exception subtype 		including the argument position back up where the error message would		be compounded.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ invokeReadNextChar() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ JCheckBoxList constructor
JEdit,WITHOUT_CLASSIFICATION,// stop people doing dumb stuff like C+ENTER 100 C+n
JEdit,WITHOUT_CLASSIFICATION,//{{{ getValues() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextAreaTransferHandler class
JEdit,WITHOUT_CLASSIFICATION,// For evaluation
JEdit,WITHOUT_CLASSIFICATION,"/*		Note: bshmethod needs to re-evaluate the method return type here.		This is broken.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ userInput() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevBracket() method
JEdit,WITHOUT_CLASSIFICATION,// Read the encoding.
JEdit,WITHOUT_CLASSIFICATION,// positional parameters will be inserted where $1 $2 $3 ... // occurs in the expansion
JEdit,WITHOUT_CLASSIFICATION,"/* if user drops into the same			selection where they started do			nothing. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ actionPerformed() class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handle abbrevs of the form abbrev#pos1#pos2#pos3#...
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Fields to optimize the creation of {@link Edge Edge} objects by using a // pool of reusable objects. The (shared) pool is a linked list of Edge // objects linked to each other by their {@link Edge#poolNext} field. Each // time a CodeWriter needs to allocate an Edge it removes the first Edge // of the pool and adds it to a private list of Edge objects. After the end // of the control flow analysis algorithm the Edge objects in the private // list of the CodeWriter are added back to the pool (by appending this // private list to the pool list; in order to do this in constant time both // head and tail of the private list are stored in this CodeWriter). // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// have to check again since above might set // NEW_FILE flag
JEdit,WITHOUT_CLASSIFICATION,//{{{ isOK() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ progressUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// For `reload' command
JEdit,WITHOUT_CLASSIFICATION,// Only on initial load
JEdit,WITHOUT_CLASSIFICATION,// 4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx //     = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx // (uuuuu = wwww + 1)
JEdit,WITHOUT_CLASSIFICATION,//{{{ Do some stuff once loading is finished
JEdit,WITHOUT_CLASSIFICATION,// if reloading a file clear dirty flag
JEdit,WITHOUT_CLASSIFICATION,// case of a backward jump with an offset < -32768. In this case we // automatically replace GOTO with GOTO_W JSR with JSR_W and IFxxx <l> // with IFNOTxxx <l'> GOTO_W <l> where IFNOTxxx is the "opposite" opcode // of IFxxx (i.e. IFNE for IFEQ) and where <l'> designates the // instruction just after the GOTO_W.
JEdit,WITHOUT_CLASSIFICATION,//{{{ invokeLastAction() method
JEdit,WITHOUT_CLASSIFICATION,// try and merge existing selections one by // one with the new selection
JEdit,WITHOUT_CLASSIFICATION,// Invoke the block overriding namespace with localNameSpace
JEdit,WITHOUT_CLASSIFICATION,"/* if user drops into a selection				replace selection */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedValue() method
JEdit,WITHOUT_CLASSIFICATION,// now done in NameSpace automatically when root // The classes which are imported by default //globalNameSpace.loadDefaultImports();
JEdit,WITHOUT_CLASSIFICATION,// Instead of passing these around to each method we just store them // as instance variables. Note that this is not thread-safe.
JEdit,WITHOUT_CLASSIFICATION,// Also cache it in the static namespace... //classStaticNameSpace.cacheClass( name genClass );
JEdit,WITHOUT_CLASSIFICATION,//{{{ AboutDialog constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ if there are no requests execute AWT requests immediately
JEdit,WITHOUT_CLASSIFICATION,//{{{ LabelRenderer class
JEdit,WITHOUT_CLASSIFICATION,// If multiple threads log stuff we don't want // the output to get mixed up
JEdit,WITHOUT_CLASSIFICATION,// Resolved the variable
JEdit,WITHOUT_CLASSIFICATION,"/* 			Create non-interactive local interpreter for this namespace			with source from the input stream and out/err same as 			this interpreter.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ maximumLayoutSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ cacheDockableWindows() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ finalize() method
JEdit,WITHOUT_CLASSIFICATION,// two additional bytes will be required to replace this // GOTO or JSR instruction with a GOTO_W or a JSR_W
JEdit,WITHOUT_CLASSIFICATION,// five additional bytes will be required to replace this // IFxxx <l> instruction with IFNOTxxx <l'> GOTO_W <l> where // IFNOTxxx is the "opposite" opcode of IFxxx (i.e. IFNE for // IFEQ) and where <l'> designates the instruction just after // the GOTO_W.
JEdit,WITHOUT_CLASSIFICATION,//System.err.println("cleaned up weak ref: "+deadref);
JEdit,WITHOUT_CLASSIFICATION,//{{{ UndoManager constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ registerDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ floatDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,// register the Options dialog as a TreeSelectionListener. // this is done before the initial selection to ensure that the // first selected OptionPane is displayed on startup.
JEdit,WITHOUT_CLASSIFICATION,//{{{ pushElement() method
JEdit,WITHOUT_CLASSIFICATION,// If found cache the full name in the BshClassManager
JEdit,WITHOUT_CLASSIFICATION,// ------------------------------------------------------------------------- // Exceptions table entries max stack size and max locals // -------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// changes temporary opcodes 202 to 217 (inclusive) 218 and 219 // to IFEQ ... JSR (inclusive) IFNULL and IFNONNULL
JEdit,WITHOUT_CLASSIFICATION,//{{{ AboutPanel class
JEdit,WITHOUT_CLASSIFICATION,// get rid of keys we never need to handle
JEdit,WITHOUT_CLASSIFICATION,//{{{ startDocument() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockableListHandler constructor
JEdit,WITHOUT_CLASSIFICATION,/* get all positions from offset to the end inclusive */
JEdit,WITHOUT_CLASSIFICATION,//{{{ Constants
JEdit,WITHOUT_CLASSIFICATION,// set proxy host
JEdit,WITHOUT_CLASSIFICATION,// return the newly created 'untitled-1'
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRepeatCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ peekElement() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCellRenderer() method
JEdit,WITHOUT_CLASSIFICATION,// Handle ".class" suffix operation // Prefix must be a BSHType
JEdit,WITHOUT_CLASSIFICATION,// releases all the Edge objects used by this CodeWriter
JEdit,WITHOUT_CLASSIFICATION,//{{{ popElement() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockableListHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ showDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCachedDockableNames() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getColumnCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Static part of class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Lay out independent buttons
JEdit,WITHOUT_CLASSIFICATION,//{{{ createPopupMenu() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRegisteredDockableWindows() method
JEdit,WITHOUT_CLASSIFICATION,// control flow analysis algorithm: while the block stack is not empty // pop a block from this stack update the max stack size compute // the true (non relative) begin stack size of the successors of this // block and push these successors onto the stack (unless they have // already been pushed onto the stack). Note: by hypothesis the {@link // Label#beginStackSize} of the blocks in the block stack are the true // (non relative) beginning stack sizes of these blocks.
JEdit,WITHOUT_CLASSIFICATION,//{{{ unloadDockableWindows() method
JEdit,WITHOUT_CLASSIFICATION,// check whether shortcut is a prefix to others
JEdit,WITHOUT_CLASSIFICATION,// Save the element info.
JEdit,WITHOUT_CLASSIFICATION,//{{{ canClose() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Buttons
JEdit,WITHOUT_CLASSIFICATION,// Try looking up the element
JEdit,WITHOUT_CLASSIFICATION,// Insert the content model if any.
JEdit,WITHOUT_CLASSIFICATION,// Read the entity name and prepend // '%' if necessary.
JEdit,WITHOUT_CLASSIFICATION,// Make a new one if necessary.
JEdit,WITHOUT_CLASSIFICATION,// for SPACE or S+SPACE we pass the // key typed since international // keyboards sometimes produce a // KEY_PRESSED SPACE but not a // KEY_TYPED SPACE eg if you have to // do a "<space> to insert ".
JEdit,WITHOUT_CLASSIFICATION,// view text areas temporarily blank out while a buffer is // being loaded to indicate to the user that there is no // data available yet.
JEdit,WITHOUT_CLASSIFICATION,//{{{ searchDone() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Factory class
JEdit,WITHOUT_CLASSIFICATION,// theoretically a segment could // have seg.offset != 0 but // SegmentBuffer never does that
JEdit,WITHOUT_CLASSIFICATION,"/*			Note: some interesting things are going on here.			1) We swap instead of push...  The primary mode of operation 			acts like we are in the enclosing namespace...  (super must be 			preserved etc.)			2) We do *not* call the body block eval with the namespace 			override.  Instead we allow it to create a second subordinate 			BlockNameSpace child of the forNameSpace.  Variable propogation 			still works through the chain but the block's child cleans the 			state between iteration.  			(which is correct Java behavior... see forscope4.bsh)		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ OpenAction constructor
JEdit,WITHOUT_CLASSIFICATION,// if auto wrap is on always restart search. // if auto wrap is off and we're called from // a macro stop search. If we're called // interactively ask the user what to do.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Factory constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMinimumSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Sorting methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ addComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Instance part of class
JEdit,WITHOUT_CLASSIFICATION,// updates current stack size (max stack size unchanged)
JEdit,WITHOUT_CLASSIFICATION,// If both original args were Primitives return a Primitive result // else it was mixed (wrapper/primitive) return the wrapper type // Exception is for boolean result return the primitive
JEdit,WITHOUT_CLASSIFICATION,//{{{ FloatAction constructor
JEdit,WITHOUT_CLASSIFICATION,"/*		invokeMethod() here is generally used by outside code to callback		into the bsh interpreter. e.g. when we are acting as an interface		for a scripted listener etc.  In this case there is no real call stack		so we make a default one starting with the special JAVACODE namespace		and our namespace as the next.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getModeProperties() method
JEdit,WITHOUT_CLASSIFICATION,// See if the application wants to // redirect the system ID and/or // supply its own character stream.
JEdit,WITHOUT_CLASSIFICATION,// make default be true for the next // action
JEdit,WITHOUT_CLASSIFICATION,// non-interactive return control now
JEdit,WITHOUT_CLASSIFICATION,// See if we should place this toolbar before any others
JEdit,WITHOUT_CLASSIFICATION,//{{{ getView() method
JEdit,WITHOUT_CLASSIFICATION,// Method body can only use 'return' statment type return control.
JEdit,WITHOUT_CLASSIFICATION,//|| ( getParent()!=null && getParent().classStatic != null )
JEdit,WITHOUT_CLASSIFICATION,// show extra "expecting..." info
JEdit,WITHOUT_CLASSIFICATION,"/*	 *  to avoid our skip table having a length of 2 ^ 16 we hash each	 *  character of the input into a character in the alphabet [\x00-\xFF]	 *  using the lower 8 bits of the character's value (resulting in	 *  a more reasonable skip table of length 2 ^ 8).	 *	 *  the result of this is that more than one character can hash to the	 *  same index but since the skip table encodes the position of	 *  occurence of the character furthest into the string with a particular	 *  index (whether or not it is the only character with that index) an	 *  index collision only means that that this heuristic will give a	 *  sub-optimal skip (i.e. a complete skip table could use the differences	 *  between colliding characters to maximal effect at the expense of	 *  building a table that is over 2 orders of magnitude larger and very	 *  sparse).	 */"
JEdit,WITHOUT_CLASSIFICATION,// map null to Primtive.NULL coming in...
JEdit,WITHOUT_CLASSIFICATION,// if localscoping switch follow strictJava else recurse
JEdit,WITHOUT_CLASSIFICATION,"/*	Methods for interacting with Parser */"
JEdit,WITHOUT_CLASSIFICATION,// UCS-2 with a byte-order marker. // 0xfe 0xff: UCS-2 big-endian (12)
JEdit,WITHOUT_CLASSIFICATION,//{{{ RolloverButton constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ FloatAction class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToggleAction class
JEdit,WITHOUT_CLASSIFICATION,// pops a block from the stack
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getScreenLineEndOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToggleAction constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ literalBeanShellReplace() method
JEdit,WITHOUT_CLASSIFICATION,// squeltch security exception filenotfoundexception
JEdit,WITHOUT_CLASSIFICATION,// Save settings in case user kills the backgrounded // jEdit process
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ensure we don't have empty space at the bottom or top etc
JEdit,WITHOUT_CLASSIFICATION,// Don't beep if the user presses some // key we don't know about unless a // prefix is active. Otherwise it will // beep when caps lock is pressed etc.
JEdit,WITHOUT_CLASSIFICATION,// has body else just for side effects
JEdit,WITHOUT_CLASSIFICATION,// install user-selected packages
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ LineContext class
JEdit,WITHOUT_CLASSIFICATION,// Make a tmp namespace to hold the original constructor args for // use in eval of the parameters node
JEdit,WITHOUT_CLASSIFICATION,// Get the instance initializer block from the static This
JEdit,WITHOUT_CLASSIFICATION,"/* This protects against stupid people (like me)		 * doing stuff like buffer.setMode(jEdit.getMode(...)); */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ addEntry() method
JEdit,WITHOUT_CLASSIFICATION,// Set the instance This reference on the instance
JEdit,WITHOUT_CLASSIFICATION,//{{{ markTokens() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Indentation
JEdit,WITHOUT_CLASSIFICATION,//{{{ getProperties() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeTrailingWhiteSpace() method
JEdit,WITHOUT_CLASSIFICATION,// no whitespace
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ shiftIndentLeft() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setIconPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ shiftIndentRight() method
JEdit,WITHOUT_CLASSIFICATION,"/**    * Parse a conditional section.    * [63] conditionalSect ::= includeSect || ignoreSect    * [64] includeSect ::= '<![' %'INCLUDE' '[' (%markupdecl*)* ']]>'    * [65] ignoreSect ::= '<![' %'IGNORE' '[' ignoreSectContents* ']]>'    * [66] ignoreSectContents ::= ((SkipLit | Comment | PI) -(Char* ']]>'))    *                           | ('<![' ignoreSectContents* ']]>')    *                           | (Char - (']' | [<'""]))    *                           | ('<!' (Char - ('-' | '[')))    * *NOTE: the '<![' has already been read.    * *TODO: verify that I am handling ignoreSectContents right.    */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDockableTitle() method
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - super constructor args // null node null callstack ParseException knows where the error is.
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeLayoutComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _getDirectoryEntry() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _listDirectory() method
JEdit,WITHOUT_CLASSIFICATION,// blank line
JEdit,WITHOUT_CLASSIFICATION,// computes the true beginning stack size of this successor block
JEdit,WITHOUT_CLASSIFICATION,//{{{ addDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getValueAt() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ closeCurrentArea() method
JEdit,WITHOUT_CLASSIFICATION,// SILLY: allow for anti-aliased characters' "fuzz"
JEdit,WITHOUT_CLASSIFICATION,//{{{ hideDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,// the search works by starting the anchor (first character // of the pattern) at the initial offset. as long as the // anchor is far enough from the enough of the text for the // pattern to match and until the pattern matches we // compare the pattern to the text from the last character // to the first character in reverse order. where a character // in the pattern mismatches we use the two heuristics // based on the mismatch character and its position in the // pattern to determine the furthest we can move the anchor // without missing any potential pattern matches.
JEdit,WITHOUT_CLASSIFICATION,// do some platforms throw exceptions if the file does not exist // when we ask for the canonical path?
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDockableWindowVisible() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _canonPath() method
JEdit,WITHOUT_CLASSIFICATION,// No matter what happends... stops us from leaving buffer // in a bad state
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,"/*    * Ordinals for various reasons why an Error of this type can be thrown.    */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getViews() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DirectoryEntryCompare class
JEdit,WITHOUT_CLASSIFICATION,"// last possible start position of a match with this pattern; // this is negative if the pattern is longer than the text // causing the search loop below to immediately fail //int last_anchor = reverseSearch //	? offset + pattern.length - 1 //	: length - pattern.length;"
JEdit,WITHOUT_CLASSIFICATION,// position variable for pattern test position
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDockableWindowDocked() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDefaultColorFor() method
JEdit,WITHOUT_CLASSIFICATION,// true number of bytes to be added (or removed) from this // instruction = (future number of padding bytes - current number // of padding byte) - previously over estimated variation = // = ((3 - newOffset%4) - (3 - u%4)) - u%4 // = (-newOffset%4 + u%4) - u%4 // = -(newOffset & 3)
JEdit,WITHOUT_CLASSIFICATION,// access flags
JEdit,WITHOUT_CLASSIFICATION,//    szptr = zptr;
JEdit,WITHOUT_CLASSIFICATION,//{{{ addLayoutComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getScreenLineCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAllPluginEntries() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginOptions constructor
JEdit,WITHOUT_CLASSIFICATION,// this makes HyperSearch much faster
JEdit,WITHOUT_CLASSIFICATION,"/* When doing a 'save as' the path to save to (path)		 * will not be the same as the buffer's previous path		 * (buffer.getPath()). In that case we want to create		 * a backup of the new path even if the old path was		 * backed up as well (BACKED_UP property set) */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getWhat() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLeftDockingArea() method
JEdit,WITHOUT_CLASSIFICATION,// initially zero so that we always show the first message
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTopDockingArea() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ close() method
JEdit,WITHOUT_CLASSIFICATION,// 3 = loop again 2 = loop ended 1 = last pass 0 = done
JEdit,WITHOUT_CLASSIFICATION,// we don't care
JEdit,WITHOUT_CLASSIFICATION,"/*	 *  the 'skip' array is used to determine for each index in the	 *  hashed alphabet how many characters can be skipped if	 *  a mismatch occurs on a characater hashing to that index.	 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ finishResizing() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ SettingsActionHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setResizePos() method
JEdit,WITHOUT_CLASSIFICATION,// I'm not sure when this can happen // but it does sometimes witness the // jEdit bug tracker.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getColumnOnOtherLine() method
JEdit,WITHOUT_CLASSIFICATION,/* otherwise just insert the text */
JEdit,WITHOUT_CLASSIFICATION,"/** * A constant pool item. Constant pool items can be created with the 'newXXX' * methods in the {@link ClassWriter} class. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRightDockingArea() method
JEdit,WITHOUT_CLASSIFICATION,// Insert the attributes if any.
JEdit,WITHOUT_CLASSIFICATION,// we remember which classes we don't exist // because BeanShell tries loading all possible // <imported prefix>.<class name> combinations
JEdit,WITHOUT_CLASSIFICATION,// since subsequent macros with the same name are ignored // load user macros first so that they override the system // macros.
JEdit,WITHOUT_CLASSIFICATION,// correctly handle text flavor + file list flavor // + text area read only do an or of all flags
JEdit,WITHOUT_CLASSIFICATION,// // Constructor //
JEdit,WITHOUT_CLASSIFICATION,// for toolbar display
JEdit,WITHOUT_CLASSIFICATION,"/*         * Now the selectors         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintChildren() method
JEdit,WITHOUT_CLASSIFICATION,// begin ActionListener implementation
JEdit,WITHOUT_CLASSIFICATION,//{{{ DropHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getShortcut() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Entry constructor
JEdit,WITHOUT_CLASSIFICATION,// This is necessary to have a file opened from the Finder // before jEdit is running set as the currently active // buffer.
JEdit,WITHOUT_CLASSIFICATION,// ask whether to override that other shortcut
JEdit,WITHOUT_CLASSIFICATION,// Make it executable
JEdit,WITHOUT_CLASSIFICATION,// Tags plugin likes to call this method at times other than // startup; so we need to fire a SearchSettingsChanged to // notify the search bar and so on.
JEdit,WITHOUT_CLASSIFICATION,// I'm lazy
JEdit,WITHOUT_CLASSIFICATION,//{{{ layoutContainer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ OptionsDialog constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ModeProperties constructor
JEdit,WITHOUT_CLASSIFICATION,// True if a \n was read after a \r. Usually // means this is a DOS/Windows file
JEdit,WITHOUT_CLASSIFICATION,// Pass 2: redistribute free space
JEdit,WITHOUT_CLASSIFICATION,// // When we get here we have EITHER: //   o An empty "assemble" buffer. //   o No bytes to write (numToWrite == 0) //
JEdit,WITHOUT_CLASSIFICATION,//{{{ Lay out docking areas
JEdit,WITHOUT_CLASSIFICATION,"/* we don't do this in Buffer.insert() so that				   we can insert multiple files at once */"
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // XML query routines. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,// don't want 'New File' to create a read only buffer // if current file is on SQL VFS or something
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // Constructors. ////////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,//System.err.println("foldLevelChanged " + (start-1) + " to " + textArea.getLastPhysicalLine() + "" + end);
JEdit,WITHOUT_CLASSIFICATION,//{{{ Lay out dependent buttons
JEdit,WITHOUT_CLASSIFICATION,/* equal to first visible line */
JEdit,WITHOUT_CLASSIFICATION,// // Elements //
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferChangeHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ // lazily create skip and suffix arrays for either the // search pattern or the reversed search pattern
JEdit,WITHOUT_CLASSIFICATION,// No variable or class found in 'this' type ref. // if autoAllocateThis then create one; a child 'this'.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Position tool bars if they are managed by us
JEdit,WITHOUT_CLASSIFICATION,// if the buffer count becomes 0 then it is guaranteed to // become 1 very soon so don't do anything in that case.
JEdit,WITHOUT_CLASSIFICATION,// only for docked
JEdit,WITHOUT_CLASSIFICATION,// wait for it to be painted to ensure progress is updated // continuously
JEdit,WITHOUT_CLASSIFICATION,"/* this property is only loaded and saved if				 * the 'current buffer' file set is selected.				 * otherwise it defaults to on. */"
JEdit,WITHOUT_CLASSIFICATION,"/*		Note: bshmethod needs to re-evaluate arg types here		This is broken.	*/"
JEdit,WITHOUT_CLASSIFICATION,// if strictJava mode check for loose parameters and return type
JEdit,WITHOUT_CLASSIFICATION,// only set if open
JEdit,WITHOUT_CLASSIFICATION,// WORD END OPERATOR  //  \> if ????
JEdit,WITHOUT_CLASSIFICATION,//{{{ adjustDockingAreasToFit() method
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Methods to compute offsets and to manage forward references // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateLayout() method
JEdit,WITHOUT_CLASSIFICATION,// (?:) // *???+?{}? // (?=)(?!) // \A\Z // \d\D\w\W\s\S within [] // (?#)
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLayoutAlignmentX() method
JEdit,WITHOUT_CLASSIFICATION,// if we got here no unused display manager in list
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextAreaSelection class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineEndOffset() method
JEdit,WITHOUT_CLASSIFICATION,"/*	 *  a good introduction to the Boyer-Moore fast string matching	 *  algorithm may be found on Moore's website at:	 *	 *   http://www.cs.utexas.edu/users/moore/best-ideas/string-searching/	 *	 */"
JEdit,WITHOUT_CLASSIFICATION,// we don't know the right hand side of the assignment yet. // has at least one setter of the right name?
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLayoutAlignmentY() method
JEdit,WITHOUT_CLASSIFICATION,// if chain returns false it "rejected" the token due to // an optimization and next was combined with lastToken
JEdit,WITHOUT_CLASSIFICATION,//{{{ recordInput() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintChunkBackgrounds() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleTableModel constructor
JEdit,WITHOUT_CLASSIFICATION,// // QuickNotepadActions implementation //
JEdit,WITHOUT_CLASSIFICATION,/*autoalloc*/
JEdit,WITHOUT_CLASSIFICATION,// JSR_W
JEdit,WITHOUT_CLASSIFICATION,// WORD BREAK OPERATOR //  \b if ????
JEdit,WITHOUT_CLASSIFICATION,// if at least one property listed here is true // load the plugin
JEdit,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////// // Constants. ////////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,// multiple files w/ word bonus
JEdit,WITHOUT_CLASSIFICATION,/* XXX */
JEdit,WITHOUT_CLASSIFICATION,// send full range of events to avoid breaking plugins
JEdit,WITHOUT_CLASSIFICATION,"/*     * always: in the range 0 .. 9.     * The current block size is 100000 * this number.     */"
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Utility methods: instruction resizing (used to handle GOTO_W and JSR_W) // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,"/*			If we've fallen through here we are no longer resolving to			a class type.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Position center (edit pane or split pane)
JEdit,WITHOUT_CLASSIFICATION,// the +1's ensure that 99 gets 3 digits 103 gets 4 digits // and so on.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDefaultProperty() method
JEdit,WITHOUT_CLASSIFICATION,// 2nd step: // copies the bytecode of the method into a new bytevector updates the // offsets and inserts (or removes) bytes as requested.
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadProps() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ moveDown() method
JEdit,WITHOUT_CLASSIFICATION,// getClassInstance() throws exception if not there
JEdit,WITHOUT_CLASSIFICATION,// can't override prefix shortcuts
JEdit,WITHOUT_CLASSIFICATION,//{{{ showBufferSwitcher() method
JEdit,WITHOUT_CLASSIFICATION,// returns false with outdated cache
JEdit,WITHOUT_CLASSIFICATION,// no duplicates check for all-whitespace string
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Set group start & end marks.                 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Mode constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Private members // used to mark words to ignore (see constructor for the list)
JEdit,WITHOUT_CLASSIFICATION,// we might have been closed as a result of // the above
JEdit,WITHOUT_CLASSIFICATION,// tool bar and status bar gets added in propertiesChanged() // depending in the 'tool bar alternate layout' setting.
JEdit,WITHOUT_CLASSIFICATION,"/*			Is it a class name?			If we're just starting eval of name try to make it else fail.		*/"
JEdit,WITHOUT_CLASSIFICATION,// Java object
JEdit,WITHOUT_CLASSIFICATION,// skip throws
JEdit,WITHOUT_CLASSIFICATION,// Do not evaluate methods this() or super() in class instance space // (i.e. inside a constructor)
JEdit,WITHOUT_CLASSIFICATION,// Set the default entities here.
JEdit,WITHOUT_CLASSIFICATION,"/*         * Decide how many coding tables to use         */"
JEdit,WITHOUT_CLASSIFICATION,// Set up the input variables
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Direct conversion from classes to type descriptors // without intermediate Type objects // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// private to prevent invocation with param that isn't a primitive-wrapper
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastPhysicalLine() method
JEdit,WITHOUT_CLASSIFICATION,"/*             * Generate an initial set of coding tables             */"
JEdit,WITHOUT_CLASSIFICATION,// endIndex is now position at a ')''\)'  // nextIndex is end of string or position after ')' or '\)'
JEdit,WITHOUT_CLASSIFICATION,//{{{ isCellEditable() method
JEdit,WITHOUT_CLASSIFICATION,// run jEditLauncher installation
JEdit,WITHOUT_CLASSIFICATION,// -1 so that the last isn't checked
JEdit,WITHOUT_CLASSIFICATION,// For operator-assign operations save the lhs value before evaluating // the rhs.  This is correct Java behavior for postfix operations // e.g. i=1; i+=i++; // should be 2 not 3
JEdit,WITHOUT_CLASSIFICATION,// nameSpaceChanged() on new variable addition
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExtendedState() method
JEdit,WITHOUT_CLASSIFICATION,"/* replaceBtn = new JButton(jEdit.getProperty(""search.replaceBtn""));		replaceBtn.setMnemonic(jEdit.getProperty(""search.replaceBtn.mnemonic"")			.charAt(0));		grid.add(replaceBtn);		replaceBtn.addActionListener(actionHandler); */"
JEdit,WITHOUT_CLASSIFICATION,// Trying to cast primitive to an object type // Primitive.NULL can be cast to any object type
JEdit,WITHOUT_CLASSIFICATION,// forward jump
JEdit,WITHOUT_CLASSIFICATION,//{{{ addRuleSet() method
JEdit,WITHOUT_CLASSIFICATION,// number of nodes on stack // current mark
JEdit,WITHOUT_CLASSIFICATION,// set an untyped variable directly in the block
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Clockwise rotation
JEdit,WITHOUT_CLASSIFICATION,// ...and adds it to the successor list of the currentBlock block
JEdit,WITHOUT_CLASSIFICATION,// remove action sets dockables etc so that user doesn't // see the broken plugin
JEdit,WITHOUT_CLASSIFICATION,// Special handling at end of input for e.g. "$"
JEdit,WITHOUT_CLASSIFICATION,// create app start script
JEdit,WITHOUT_CLASSIFICATION,// replaces old bytecodes with new ones
JEdit,WITHOUT_CLASSIFICATION,// find end of subexpression
JEdit,WITHOUT_CLASSIFICATION,// freeze the callstack for the stack trace.
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateUI() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTokenMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTreeCellRendererComponent() method
JEdit,WITHOUT_CLASSIFICATION,// linked list of tokens (sort of -- some closed loops can exist)
JEdit,WITHOUT_CLASSIFICATION,// appends the [head ... tail] list at the beginning of the pool list
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Calculate the cost of this group as coded                 * by each of the coding tables.                 */"
JEdit,WITHOUT_CLASSIFICATION,// // Base external identifiers for resolution. //
JEdit,WITHOUT_CLASSIFICATION,// removes b from the pool
JEdit,WITHOUT_CLASSIFICATION,// the problem with this is that if we have two edit panes // looking at the same buffer and the file is reloaded both // will jump to the same location
JEdit,WITHOUT_CLASSIFICATION,// adds the previous Edge to the list of Edges used by this CodeWriter
JEdit,WITHOUT_CLASSIFICATION,// returns the positions of the resized instructions
JEdit,WITHOUT_CLASSIFICATION,// later on we need to know if certain code is called from // the main thread
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveGeometry() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Insert the expansion
JEdit,WITHOUT_CLASSIFICATION,// JDK 1.4 adds methods to obtain a drive letter label and // list the desktop on Windows
JEdit,WITHOUT_CLASSIFICATION,//{{{ GZipped setting
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFoldLevel() method // Also sets 'fold level valid' flag
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Bottom...
JEdit,WITHOUT_CLASSIFICATION,/* do nothing! */
JEdit,WITHOUT_CLASSIFICATION,// Push nulls for various args of invokeMethod // interpreter // callstack // callerinfo
JEdit,WITHOUT_CLASSIFICATION,"/* call sendBreak after fixed number of			 * lines of stdout are read			 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockableLayout class
JEdit,WITHOUT_CLASSIFICATION,// get the title here not in the factory constructor // since the factory might be created before a plugin's // props are loaded
JEdit,WITHOUT_CLASSIFICATION,// Note: it's ok to cache class resolution here because when the class // space changes the namespace will discard cached names.
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Increment the symbol frequencies for the selected table.                 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCheckedValues() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DummyRenderer class
JEdit,WITHOUT_CLASSIFICATION,// If only one new file is open which is clean just close // it which will create an 'Untitled-1'
JEdit,WITHOUT_CLASSIFICATION,// backward jump
JEdit,WITHOUT_CLASSIFICATION,//{{{ endElement() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createDockableWindow() method
JEdit,WITHOUT_CLASSIFICATION,"/* substitute result of matching the rule start				 * into the end string.				 *				 * eg in shell script mode <<\s*(\w+) is				 * matched into \<$1\> to construct rules for				 * highlighting read-ins like this <<EOF				 * ...				 * EOF				 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setTokenMarker() method
JEdit,WITHOUT_CLASSIFICATION,// Order these from longest to shortest // Start by assuming longest (more repeats)
JEdit,WITHOUT_CLASSIFICATION,//{{{ isManagingFocus() method
JEdit,WITHOUT_CLASSIFICATION,// This String will be returned by getVersion()
JEdit,WITHOUT_CLASSIFICATION,// check whether this shortcut already exists
JEdit,WITHOUT_CLASSIFICATION,// remember old values in case action changes them
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSymbolicName() method
JEdit,WITHOUT_CLASSIFICATION,// Big enough for a \r\n pair // lookBehind[0] = most recent // lookBehind[1] = second most recent
JEdit,WITHOUT_CLASSIFICATION,// Define the new class in the classloader
JEdit,WITHOUT_CLASSIFICATION,// Skip whitespace at the end.
JEdit,WITHOUT_CLASSIFICATION,// Is this it? // Is the class public or can we use accessibility?
JEdit,WITHOUT_CLASSIFICATION,"/*                 * copy 2                 */"
JEdit,WITHOUT_CLASSIFICATION,/* we don't handle key pressed A+ */
JEdit,WITHOUT_CLASSIFICATION,// - don't do these checks while a save is in progress // because for a moment newModTime will be greater than // oldModTime due to the multithreading // - only supported on local file system
JEdit,WITHOUT_CLASSIFICATION,// resolve symlinks to avoid loops
JEdit,WITHOUT_CLASSIFICATION,// true (non relative) max stack size
JEdit,WITHOUT_CLASSIFICATION,// Create the class static namespace
JEdit,WITHOUT_CLASSIFICATION,// so that we don't see the same tip again if the user // clicks 'Next Tip'
JEdit,WITHOUT_CLASSIFICATION,/* --- End static members --- */
JEdit,WITHOUT_CLASSIFICATION,// Precalculate these so we don't pay for the math every time we // need to access them.
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleNoWordBreak() method
JEdit,WITHOUT_CLASSIFICATION,// updates current stack size (max stack size unchanged because stack // size variation always negative or null)
JEdit,WITHOUT_CLASSIFICATION,// Method invocation // (LHS or non LHS evaluation can both encounter method calls)
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNextRequest() method
JEdit,WITHOUT_CLASSIFICATION,// on by default
JEdit,WITHOUT_CLASSIFICATION,"/*         * And finally the block data proper         */"
JEdit,WITHOUT_CLASSIFICATION,// fix for "[ 865589 ] 0-byte files should open using // the default line seperator"
JEdit,WITHOUT_CLASSIFICATION,//{{{ doAWTRequest() method
JEdit,WITHOUT_CLASSIFICATION,// if the file size is not known start with a resonable // default buffer size
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Process big buckets starting with the least full.                 */"
JEdit,WITHOUT_CLASSIFICATION,"/*             * The main sorting loop.             */"
JEdit,WITHOUT_CLASSIFICATION,// create a DirectoryEntry manually // instead of using _vfs._getDirectoryEntry() // since so many VFS's have broken // implementations of this method
JEdit,WITHOUT_CLASSIFICATION,// fill in defaults for these from system properties if the // corresponding buffer.XXX properties not set
JEdit,WITHOUT_CLASSIFICATION,// check to see if the instance has already been initialized // (the case if using a this() alternate constuctor)
JEdit,WITHOUT_CLASSIFICATION,// the start and end flags will be wrong with reverse search enabled // but they are only used by the regexp matcher which doesn't // support reverse search yet. // // REMIND: fix flags when adding reverse regexp search.
JEdit,WITHOUT_CLASSIFICATION,// Java does not support this encoding so // we have to handle it manually.
JEdit,WITHOUT_CLASSIFICATION,// just as if Enter was pressed in another // text field
JEdit,WITHOUT_CLASSIFICATION,// we didn't have a component previously so // create a border
JEdit,WITHOUT_CLASSIFICATION,"/*	Gather modifiers for a class method or field.	I lookahead is true then we are being called as part of a lookahead and we	should not enforce any rules.  Otherwise we validate based on context	(field method class)*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ WorkThreadHandler class
JEdit,WITHOUT_CLASSIFICATION,// this ensures that undo can clear the dirty flag properly // when all edits up to a save are undone
JEdit,WITHOUT_CLASSIFICATION,"/*         * Now another magic 48-bit number 0x177245385090 to         * indicate the end of the last block.  (sqrt(pi) if         * you want to know.  I did want to use e but it contains         * too much repetition -- 27 18 28 18 28 46 -- for me         * to feel statistically comfortable.  Call me paranoid.)         */"
JEdit,WITHOUT_CLASSIFICATION,/*LDC2_W*/
JEdit,WITHOUT_CLASSIFICATION,"/*             * Transmit the mapping table.             */"
JEdit,WITHOUT_CLASSIFICATION,"/*			Is it a bsh script variable reference?			If we're just starting the eval of name (no base object)			or we're evaluating relative to a This type reference check.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateAssignedTo() method
JEdit,WITHOUT_CLASSIFICATION,// begins a new current block // resets the relative current and max stack sizes
JEdit,WITHOUT_CLASSIFICATION,// Stop script kiddies from opening the edit // server port and just leaving it open as a // DoS
JEdit,WITHOUT_CLASSIFICATION,// Anchor position refers to the index into the source input // at which the matching operation began. // This is also useful for the ANCHORINDEX option.
JEdit,WITHOUT_CLASSIFICATION,// show "remove" button
JEdit,WITHOUT_CLASSIFICATION,// Either class sun.tools.javac.Main or // com.sun.tools.javac.Main must be there:
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFocusTraversalKeysEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//Remember to make this an option later //NSApplication.sharedApplication().hide(jEdit.getPlugin("MacOSPlugin"));
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // High-level I/O. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,// GOTO_W
JEdit,WITHOUT_CLASSIFICATION,// ... and we save them in order not to recompute them in the future
JEdit,WITHOUT_CLASSIFICATION,// check for match inside line
JEdit,WITHOUT_CLASSIFICATION,//{{{ setShortcut() method
JEdit,WITHOUT_CLASSIFICATION,// Try to load the module // don't refer to it directly here or we're dependent upon it
JEdit,WITHOUT_CLASSIFICATION,// Fail silently since we may be using UFS
JEdit,WITHOUT_CLASSIFICATION,// the above sizes have not been computed yet so we compute them...
JEdit,WITHOUT_CLASSIFICATION,// // I/O information. // // current reader // current input stream // current line number // current column number // type of input source // stack of input soruces // current external entity // current character encoding. // how many bytes read from current source.
JEdit,WITHOUT_CLASSIFICATION,// updates the instructions addresses in the // catch local var and line number tables
JEdit,WITHOUT_CLASSIFICATION,// no stack change but end of current block (with one new successor)
JEdit,WITHOUT_CLASSIFICATION,// types for NEWARRAY
JEdit,WITHOUT_CLASSIFICATION,// analyses the successors of the block
JEdit,WITHOUT_CLASSIFICATION,// ends current block (with one new successor)
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPluginIcon() method
JEdit,WITHOUT_CLASSIFICATION,// Some Java versions return the clipboard // contents using the native line separator // so have to convert it here
JEdit,WITHOUT_CLASSIFICATION,// Push the name of the method as a constant
JEdit,WITHOUT_CLASSIFICATION,// user cancelled???
JEdit,WITHOUT_CLASSIFICATION,//case Constants.PUTFIELD:
JEdit,WITHOUT_CLASSIFICATION,"/*         * The back end needs a place to store the MTF values         * whilst it calculates the coding tables.  We could         * put them in the zptr array.  However these values         * will fit in a short so we overlay szptr at the         * start of zptr in the hope of reducing the number         * of cache misses induced by the multiple traversals         * of the MTF values when calculating coding tables.         * Seems to improve compression speed by about 1%.         */"
JEdit,WITHOUT_CLASSIFICATION,// in case macro file name has a space in it. // spaces break the view.toolBar property for instance // since it uses spaces to delimit action names.
JEdit,WITHOUT_CLASSIFICATION,// now that we know how many chars there are get the width.
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Static initializer // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// ignore if already added. // see comment in loadMacros().
JEdit,WITHOUT_CLASSIFICATION,// computes the stack size variation
JEdit,WITHOUT_CLASSIFICATION,// clone() separates a single match from the chain
JEdit,WITHOUT_CLASSIFICATION,// changes the opcode of the jump instruction in order to be able to // find it later (see resizeInstructions in CodeWriter). These // temporary opcodes are similar to jump instruction opcodes except // that the 2 bytes offset is unsigned (and can therefore represent // values from 0 to 65535 which is sufficient since the size of a // method is limited to 65535 bytes).
JEdit,WITHOUT_CLASSIFICATION,// // EBComponent implementation //
JEdit,WITHOUT_CLASSIFICATION,//throw new CError();
JEdit,WITHOUT_CLASSIFICATION,// ask whether to remove the old shortcut
JEdit,WITHOUT_CLASSIFICATION,// Wait for pending I/O requests
JEdit,WITHOUT_CLASSIFICATION,//{{{ getKeyBinding() method
JEdit,WITHOUT_CLASSIFICATION,// over estimation of the number of bytes to be added to this // instruction = 3 - current number of padding bytes = 3 - (3 - // u%4) = u%4 = u & 3
JEdit,WITHOUT_CLASSIFICATION,// // Attribute methods //
JEdit,WITHOUT_CLASSIFICATION,"/*     * If you are ever unlucky/improbable enough     * to get a stack overflow whilst sorting     * increase the following constant and try     * again.  In practice I have never seen the     * stack go above 27 elems so the following     * limit seems very generous.     */"
JEdit,WITHOUT_CLASSIFICATION,// helper method to get Font from plugin properties
JEdit,WITHOUT_CLASSIFICATION,// throw new IOException("Invalid block size");
JEdit,WITHOUT_CLASSIFICATION,// on insert start search from beginning of // current match. This will continue to highlight // the current match until another match is found
JEdit,WITHOUT_CLASSIFICATION,//for backwards compatibility the color variable is stored also as a property
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Utility methods: control flow analysis algorithm // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// Useful for debugging purposes
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Other public methods // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ ensureCapacity() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Paint bracket scope
JEdit,WITHOUT_CLASSIFICATION,//{{{ synchronizeMultiFileSettings() method
JEdit,WITHOUT_CLASSIFICATION,// If the param is typed check assignability
JEdit,WITHOUT_CLASSIFICATION,// Start with a little cheat -- in most // cases the entire sequence of // character data will already be in // the readBuffer; if not fall through to // the normal approach.
JEdit,WITHOUT_CLASSIFICATION,// Look for a declaration subset.
JEdit,WITHOUT_CLASSIFICATION,//{{{ append() method
JEdit,WITHOUT_CLASSIFICATION,// allocates a byte vector of this size in order to avoid unnecessary // arraycopy operations in the ByteVector.enlarge() method
JEdit,WITHOUT_CLASSIFICATION,// computes the real size of the bytecode of this class
JEdit,WITHOUT_CLASSIFICATION,"//		Log.log(Log.DEBUGthis""Running in AWT thread: "" + request);"
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Implementation of the ClassVisitor interface // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextWord() method
JEdit,WITHOUT_CLASSIFICATION,// Find longest match of them all to observe leftmost longest
JEdit,WITHOUT_CLASSIFICATION,// we were the first to add an update; // add update sending runnable to AWT // thread
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCaretLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ smartEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ filesActivated() method // canDoubleClickClose set to false when ENTER pressed
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStructureMatch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToStartOfLine() method
JEdit,WITHOUT_CLASSIFICATION,// case MANA_INSN:
JEdit,WITHOUT_CLASSIFICATION,// check whether the other shortcut is the alt. shortcut
JEdit,WITHOUT_CLASSIFICATION,// for compatibility with older jEdit versions
JEdit,WITHOUT_CLASSIFICATION,// to hide current line highlight
JEdit,WITHOUT_CLASSIFICATION,// we have binding foo // but user asks to remove foo bar?
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNonAlphaNumericChars() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStructureHighlightColor() method
JEdit,WITHOUT_CLASSIFICATION,// impl note: since multiple searches now allowed // extra level in hierarchy
JEdit,WITHOUT_CLASSIFICATION,// Check for backup.directory and create that // directory if it doesn't exist
JEdit,WITHOUT_CLASSIFICATION,"/*				If this was a literal ""super"" reference then we allow recursion				in setting the variable to get the normal effect of finding the				nearest definition starting at the super scope.  On any other				resolution qualified by a 'this' type reference we want to set				the variable directly in that scope. e.g. this.x=5;  or 				someThisType.x=5;								In the old scoping rules super didn't do this.			*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSortType() method
JEdit,WITHOUT_CLASSIFICATION,// the entire save operation can be aborted...
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadMenuItem() method
JEdit,WITHOUT_CLASSIFICATION,// proxy port
JEdit,WITHOUT_CLASSIFICATION,// skips 0 to 3 padding bytes
JEdit,WITHOUT_CLASSIFICATION,//{{{ Delegate methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPhysicalLineOfScreenLine() method
JEdit,WITHOUT_CLASSIFICATION,// when the text area switches to us it will do // a reset anyway
JEdit,WITHOUT_CLASSIFICATION,// opcodes                  // visit method (- = idem)
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadMenu() method
JEdit,WITHOUT_CLASSIFICATION,// invalid regexp ignore // return true to avoid annoying beeping while // typing a re
JEdit,WITHOUT_CLASSIFICATION,// special case: no current development version
JEdit,WITHOUT_CLASSIFICATION,// since recentBuffer will be set to the one that // was closed
JEdit,WITHOUT_CLASSIFICATION,// old plugins expected jEdit 4.1-style // behavior where a PropertiesChanged // was sent after plugins were started
JEdit,WITHOUT_CLASSIFICATION,// this is handled a little differently from other jEdit settings // as the splash screen flag needs to be known very early in the // startup sequence before the user properties have been loaded
JEdit,WITHOUT_CLASSIFICATION,"// If recurse set global untyped var else set it here.	 //NameSpace varScope = recurse ? getGlobal() : this; // This modification makes default allocation local"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Screen line stuff
JEdit,WITHOUT_CLASSIFICATION,// synchronized
JEdit,WITHOUT_CLASSIFICATION,// Check for PCDATA alone.
JEdit,WITHOUT_CLASSIFICATION,// check escape rule of parent
JEdit,WITHOUT_CLASSIFICATION,// index+1 works for [^abc] lists not for generic lookahead (--> index)
JEdit,WITHOUT_CLASSIFICATION,// still have to call this even if it equals the // old one so that the offset manager sets the // validity flag!
JEdit,WITHOUT_CLASSIFICATION,// The object instance has already been initialzed by another // constructor.  Fall through to invoke the constructor body below.
JEdit,WITHOUT_CLASSIFICATION,"/* if the VFS supports renaming files we first			 * save to #<filename>#save# then rename that			 * to <filename> so that if the save fails			 * data will not be lost.			 *			 * as of 4.1pre7 we now call vfs.getTwoStageSaveName()			 * instead of constructing the path directly			 * since some VFS's might not allow # in filenames.			 */"
JEdit,WITHOUT_CLASSIFICATION,"//item.setImage(NSWorkspace.sharedWorkspace().iconForFile( //	buffs[i].getPath()));"
JEdit,WITHOUT_CLASSIFICATION,// Figure out if this is a start tag // or an empty element and dispatch an // event accordingly.
JEdit,WITHOUT_CLASSIFICATION,// loop until the subset ends
JEdit,WITHOUT_CLASSIFICATION,"/* read() and write() must be kept perfectly in sync...		 * its a very simple file format. doing it this way is		 * faster than serializing since serialization calls		 * reflection etc. */"
JEdit,WITHOUT_CLASSIFICATION,// If it had a different type throw error. // This allows declaring the same var again but not with // a different (even if assignable) type.
JEdit,WITHOUT_CLASSIFICATION,// add the JARs before checking deps since dep check might // require all JARs to be present
JEdit,WITHOUT_CLASSIFICATION,//{{{ InputPane class
JEdit,WITHOUT_CLASSIFICATION,// we don't need two identical shortcuts
JEdit,WITHOUT_CLASSIFICATION,"/*		Our children are a prefix expression and any number of suffixes.		<p>		We don't eval() any nodes until the suffixes have had an		opportunity to work through them.  This lets the suffixes decide		how to interpret an ambiguous name (e.g. for the .class operation).	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ KeyBinding class
JEdit,WITHOUT_CLASSIFICATION,// put forNameSpace it on the top of the stack // Note: it's important that there is only one exit point from this // method so that we can swap back the namespace.
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Fields // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ addOptionGroup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FontSelectorDialog class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEOLMarkerColor() method
JEdit,WITHOUT_CLASSIFICATION,// we keep the first non-null frc we get since sometimes // we get invalid ones on subsequent pages on Windows
JEdit,WITHOUT_CLASSIFICATION,// UCS-2 without a BOM must begin with "<?XML" // 0x3c 0x00 0x3f 0x00: UCS-2 little-endian no byte-order mark
JEdit,WITHOUT_CLASSIFICATION,// auto-detect encoding within the gzip stream.
JEdit,WITHOUT_CLASSIFICATION,//{{{ run() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _setScreenLineCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ this ensures that the text area's look is slightly // more consistent with the rest of the metal l&f. // while it depends on not-so-well-documented portions // of Swing it only affects appearance so future // breakage shouldn't matter
JEdit,WITHOUT_CLASSIFICATION,"/* 				Try toObject() which knows how to work through inner classes				and see what we end up with 			*/"
JEdit,WITHOUT_CLASSIFICATION,// Interpreter.debug("Simple var LHS...");
JEdit,WITHOUT_CLASSIFICATION,// empty line. inherit previous line's fold level
JEdit,WITHOUT_CLASSIFICATION,// Superclass method invocation? (e.g. super.foo())
JEdit,WITHOUT_CLASSIFICATION,/* in collapsed range */
JEdit,WITHOUT_CLASSIFICATION,"/* Having all the info packed into an int is not very OO and makes the	 * code somewhat more complicated but it saves a lot of memory.	 *	 * The new document model has just 12 bytes of overhead per line.	 * LineContext instances are now internalized so only a few should	 * actually be in the heap.	 *	 * In the old document model there were 5 objects per line for a	 * total of about 100 bytes plus a cached token list which used	 * another 100 or so bytes. */"
JEdit,WITHOUT_CLASSIFICATION,"/*			Some duplication for ""super"".  See notes for ""this"" above			If we're in an enclsing class instance and have a superclass			instance our super is the superclass instance.		*/"
JEdit,WITHOUT_CLASSIFICATION,// skips instruction
JEdit,WITHOUT_CLASSIFICATION,// if one line's chunks are invalid remaining lines are also // invalid
JEdit,WITHOUT_CLASSIFICATION,"/*		Perform a suffix operation on the given object and return the 		new value.		<p>		obj will be a Node when suffix evaluation begins allowing us to		interpret it contextually. (e.g. for .class) Thereafter it will be 		an value object or LHS (as determined by toLHS).		<p>				We must handle the toLHS case at each point here.		<p>	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Marker constructor
JEdit,WITHOUT_CLASSIFICATION,// pushes this successor onto the stack
JEdit,WITHOUT_CLASSIFICATION,/*LDC_W*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ _setContent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ redo() method
JEdit,WITHOUT_CLASSIFICATION,// If type already assignable no cast necessary // We do this last to allow various errors above to be caught. // e.g cast Primitive.Void to Object would pass this
JEdit,WITHOUT_CLASSIFICATION,// copy text before gap
JEdit,WITHOUT_CLASSIFICATION,// remove the bsh:// // get the index of the : between the host and the port is located
JEdit,WITHOUT_CLASSIFICATION,// getAssignable would catch this for typed param
JEdit,WITHOUT_CLASSIFICATION,// If lastWasCR is true // we just read a \r followed // by a \n. We specify that // this is a Windows file // but take no further // action and just ignore // the \r.
JEdit,WITHOUT_CLASSIFICATION,// Get the type by constructing a prototype array with // arbitrary (zero) length in each dimension. // int array default zeros
JEdit,WITHOUT_CLASSIFICATION,// That's it we have a match!
JEdit,WITHOUT_CLASSIFICATION,// queue of undos. last is most recent first is oldest
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectPane() method
JEdit,WITHOUT_CLASSIFICATION,// give all text areas the same font
JEdit,WITHOUT_CLASSIFICATION,// this ensures that undo can clear // the dirty flag properly when all // edits up to a save are undone
JEdit,WITHOUT_CLASSIFICATION,//{{{ save() method
JEdit,WITHOUT_CLASSIFICATION,// Found an existing variable here (or above if recurse allowed)
JEdit,WITHOUT_CLASSIFICATION,// note that if firstLine == lastLine loop does not // execute
JEdit,WITHOUT_CLASSIFICATION,// The lock is our declaring namespace's This reference // (the method's 'super').  Or in the case of a class it's the // class instance.
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBuffer() method
JEdit,WITHOUT_CLASSIFICATION,// Because the clipRect's height is usually an even multiple // of the font height we subtract 1 from it otherwise one // too many lines will always be painted.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldLineStyle() method
JEdit,WITHOUT_CLASSIFICATION,// computes the true (non relative) max stack size of this block
JEdit,WITHOUT_CLASSIFICATION,// Set untyped variable // untyped param
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintValidLine() method
JEdit,WITHOUT_CLASSIFICATION,// Write simple script
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLineHighlightColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFS constructor
JEdit,WITHOUT_CLASSIFICATION,// This should not happen with checkOnly true
JEdit,WITHOUT_CLASSIFICATION,//{{{ Remove constructor
JEdit,WITHOUT_CLASSIFICATION,// Unwrap target exception.  If the interface declares that  // it throws the ex it will be delivered.  If not it will be  // wrapped in an UndeclaredThrowable
JEdit,WITHOUT_CLASSIFICATION,//{{{ unloadPluginJAR() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ If nothing entered show search and replace dialog box
JEdit,WITHOUT_CLASSIFICATION,//{{{ preContentRemoved() method
JEdit,WITHOUT_CLASSIFICATION,// cwd not implemented in this version
JEdit,WITHOUT_CLASSIFICATION,//super(); //}}}
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) CastExpression */
JEdit,WITHOUT_CLASSIFICATION,"/*			Evaluate our prefix if it needs evaluating first.			If this is the first evaluation our prefix mayb be a Node 			(directly from the PrimaryPrefix) - eval() it to an object.  			If it's an LHS resolve to a value.			Note: The ambiguous name construct is now necessary where the node 			may be an ambiguous name.  If this becomes common we might want to 			make a static method nodeToObject() or something.  The point is 			that we can't just eval() - we need to direct the evaluation to 			the context sensitive type of result; namely object class etc.		*/"
JEdit,WITHOUT_CLASSIFICATION,"/*         * A 6-byte block header the value chosen arbitrarily         * as 0x314159265359 :-).  A 32 bit value does not really         * give a strong enough guarantee that the value will not         * appear by chance in the compressed datastream.  Worst-case         * probability of this event for a 900k block is about         * 2.0e-3 for 32 bits 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.         * For a compressed file of size 100Gb -- about 100000 blocks --         * only a 48-bit marker will do.  NB: normal compression/         * decompression do *not* rely on these statistical properties.         * They are only important when trying to recover blocks from         * damaged files.         */"
JEdit,WITHOUT_CLASSIFICATION,// Set up a snapshot of the current // input source.
JEdit,WITHOUT_CLASSIFICATION,//in.close();
JEdit,WITHOUT_CLASSIFICATION,//{{{ addInstall() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ write() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ startPlugin() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ uninit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ menuDeselected() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ShowFileAction class
JEdit,WITHOUT_CLASSIFICATION,// // Buffer for undecoded raw byte input. //
JEdit,WITHOUT_CLASSIFICATION,// cache the fact that this is a static method invocation on this class
JEdit,WITHOUT_CLASSIFICATION,//{{{ performOperationsInAWTThread() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ RemoveAllTreeNodesAction class
JEdit,WITHOUT_CLASSIFICATION,// Invoke the method This.invokeMethod( name Class [] sig boolean )
JEdit,WITHOUT_CLASSIFICATION,// we use a custom JRadioButton subclass that returns // false for isFocusTraversable() so that the user can // tab from the search field to the replace field with // one keystroke
JEdit,WITHOUT_CLASSIFICATION,/* end of prev expanded range */
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintLine() method
JEdit,WITHOUT_CLASSIFICATION,"/*         * Assign actual codes for the tables.         */"
JEdit,WITHOUT_CLASSIFICATION,// this constructor is the value of the hash table
JEdit,WITHOUT_CLASSIFICATION,// To avoid any problems if components are added or removed // while the message is being sent
JEdit,WITHOUT_CLASSIFICATION,// Pass 3: layout components
JEdit,WITHOUT_CLASSIFICATION,// in case saved geometry is too small
JEdit,WITHOUT_CLASSIFICATION,"/*			--------------------------------------------------------			After this point we're definitely evaluating relative to			a base object.			--------------------------------------------------------		*/"
JEdit,WITHOUT_CLASSIFICATION,// Macros
JEdit,WITHOUT_CLASSIFICATION,/* This will fire the PROPERTIES_CHANGED event */
JEdit,WITHOUT_CLASSIFICATION,// not a class (or variable per above)
JEdit,WITHOUT_CLASSIFICATION,"/*				Keep adding parts until we have a class 			*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ OptionTreeModel class
JEdit,WITHOUT_CLASSIFICATION,// previous round produced null
JEdit,WITHOUT_CLASSIFICATION,//{{{ Soft tabs
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFontProperty() method
JEdit,WITHOUT_CLASSIFICATION,// Not found -- we'll have to add it.
JEdit,WITHOUT_CLASSIFICATION,// this model may not be changed by the TableCellEditor
JEdit,WITHOUT_CLASSIFICATION,//setFont(new Font("Dialog"Font.BOLD10));
JEdit,WITHOUT_CLASSIFICATION,"/*			Do some basic validity checks.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Line separator
JEdit,WITHOUT_CLASSIFICATION,// returns false if no such pane exists; calling with null // param selects first option pane found
JEdit,WITHOUT_CLASSIFICATION,//{{{ Indent size
JEdit,WITHOUT_CLASSIFICATION,//&& thisNameSpace.getParent().classInstance != null
JEdit,WITHOUT_CLASSIFICATION,// previous round produced void
JEdit,WITHOUT_CLASSIFICATION,//{{{ Fold mode
JEdit,WITHOUT_CLASSIFICATION,// Do we have to grow the bucket?
JEdit,WITHOUT_CLASSIFICATION,//{{{ FontSelector constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Wrap mode
JEdit,WITHOUT_CLASSIFICATION,// find the enclosing class instance space of the class name
JEdit,WITHOUT_CLASSIFICATION,// Class qualified 'this' reference from inner class. // e.g. 'MyOuterClass.this'
JEdit,WITHOUT_CLASSIFICATION,// Stop if there are no more tuples.
JEdit,WITHOUT_CLASSIFICATION,//{{{ setAntiAliasEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isAntiAliasEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// Stop when we hit a null index.
JEdit,WITHOUT_CLASSIFICATION,// If they're the same length // check for a match. // If the loop finishes 'index' will // contain the current bucket // position.
JEdit,WITHOUT_CLASSIFICATION,/* M+ discarded by key event workaround! */
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getZipFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createTextFieldAndListPanel() method
JEdit,WITHOUT_CLASSIFICATION,// Get the bucket.
JEdit,WITHOUT_CLASSIFICATION,//{{{ updatePreview() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addTranslation() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFontList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedFont() method
JEdit,WITHOUT_CLASSIFICATION,/* fonts = getToolkit().getFontList(); */
JEdit,WITHOUT_CLASSIFICATION,//{{{ remove() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ translateKeyEvent() method
JEdit,WITHOUT_CLASSIFICATION,// get the previous context (see notes for this class)
JEdit,WITHOUT_CLASSIFICATION,// inner class?
JEdit,WITHOUT_CLASSIFICATION,//{{{ parseKey() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSymbolicModifierName() method
JEdit,WITHOUT_CLASSIFICATION,// static field?
JEdit,WITHOUT_CLASSIFICATION,// length access on array?
JEdit,WITHOUT_CLASSIFICATION,// super is now the closure's super or class instance
JEdit,WITHOUT_CLASSIFICATION,"//Log.log(Log.DEBUG MiscUtilities.class //	""- is not in system classpath.""); //}}}"
JEdit,WITHOUT_CLASSIFICATION,// if we get here we have failed
JEdit,WITHOUT_CLASSIFICATION,/* not a field */
JEdit,WITHOUT_CLASSIFICATION,// early return
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBorderInsets() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ show() method
JEdit,WITHOUT_CLASSIFICATION,// removing last component so remove border
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResizeMouseHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ register() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCurrent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Create button
JEdit,WITHOUT_CLASSIFICATION,//{{{ Key class
JEdit,WITHOUT_CLASSIFICATION,//{{{ showMostRecent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDimension() method
JEdit,WITHOUT_CLASSIFICATION,"/* Defer to whoever loaded us (such as JShell			 * Echidna etc) */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ unregister() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Button box setup
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDimension() method
JEdit,WITHOUT_CLASSIFICATION,"/*			Doing instanceof?  Next node is a type.		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintBorder() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ sortDockables() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDockables() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MenuMouseHandler class
JEdit,WITHOUT_CLASSIFICATION,// remember the most recent dockable
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintVertBorder() method
JEdit,WITHOUT_CLASSIFICATION,//case 3:
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockablePanel class
JEdit,WITHOUT_CLASSIFICATION,/* Try straightforward class name first */
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintHorizBorder() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isBorderOpaque() method
JEdit,WITHOUT_CLASSIFICATION,// "var" means untyped return null class
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockBorder constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getWindowContainer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getResourceAsStream() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateColors() method
JEdit,WITHOUT_CLASSIFICATION,// Null interpreter and callstack references. // class only resolution should not require them.
JEdit,WITHOUT_CLASSIFICATION,// Simple (non-compound) variable assignment e.g. x=5;
JEdit,WITHOUT_CLASSIFICATION,// couldn't resolve it
JEdit,WITHOUT_CLASSIFICATION,//{{{ addLayoutComponent() method //}}}
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIconWidth() method
JEdit,WITHOUT_CLASSIFICATION,/*autoallocthis*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintIcon() method
JEdit,WITHOUT_CLASSIFICATION,// Field e.g. foo.bar=5;
JEdit,WITHOUT_CLASSIFICATION,//height = (int)glyphs.getLogicalBounds().getHeight();
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockablePanel constructor
JEdit,WITHOUT_CLASSIFICATION,// nothing 'cept close box
JEdit,WITHOUT_CLASSIFICATION,//{{{ No rotation
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Left...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getResource() method
JEdit,WITHOUT_CLASSIFICATION,// found a non-backslash char.
JEdit,WITHOUT_CLASSIFICATION,"/*          We'll print our banner using eval(String) in order to          exercise the parser and get the basic expression classes loaded...          This ameliorates the delay after typing the first statement.        */"
JEdit,WITHOUT_CLASSIFICATION,"/*				Primitive (number or void) is not normally an instanceof				anything.  But for internal use we'll test true for the				bsh.Primitive class.  				i.e. (5 instanceof bsh.Primitive) will be true			*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Top...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVirtualWidth() method
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Conversion to type descriptors // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ getOffsetOfVirtualColumn() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getResourceAsPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getOpenParenIndent() method
JEdit,WITHOUT_CLASSIFICATION,// collapsed
JEdit,WITHOUT_CLASSIFICATION,// dissallow assignment to magic fields
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Right...
JEdit,WITHOUT_CLASSIFICATION,// e.g. this.x=5;  or someThisType.x=5;
JEdit,WITHOUT_CLASSIFICATION,// Finished eval and its a class.
JEdit,WITHOUT_CLASSIFICATION,// can't happen?
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBooleanProperty() method
JEdit,WITHOUT_CLASSIFICATION,"/*		object is a java.lang wrapper for boolean char or number type	*/"
JEdit,WITHOUT_CLASSIFICATION,// ALTERNATION OPERATOR //  \| or | (if RE_NO_BK_VBAR) or newline (if RE_NEWLINE_ALT) //  not available if RE_LIMITED_OPS is set
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeBufferFromList() method
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Fields for the control flow graph analysis algorithm (used to compute the // maximum stack size). A control flow graph contains one node per "basic // block" and one edge per "jump" from one basic block to another. Each node // (i.e. each basic block) is represented by the Label object that // corresponds to the first instruction of this basic block. Each node also // stores the list of its successors in the graph as a linked list of Edge // objects. // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ EnhancedMenuItem constructor
JEdit,WITHOUT_CLASSIFICATION,// Start copying to the left.
JEdit,WITHOUT_CLASSIFICATION,// Begin Cached result structures // These are optimizations
JEdit,WITHOUT_CLASSIFICATION,/* ReflectError InvocationTargetException*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ insert() method
JEdit,WITHOUT_CLASSIFICATION,// EnhancedDialog implementation
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBorderPainted() method
JEdit,WITHOUT_CLASSIFICATION,// this one only finds public (and in interfaces etc.)
JEdit,WITHOUT_CLASSIFICATION,// overflow character from last data chunk.
JEdit,WITHOUT_CLASSIFICATION,"/* A definite node is constructed from a specified number of     children.  That number of nodes are popped from the stack and     made the children of the definite node.  Then the definite node     is pushed on to the stack. */"
JEdit,WITHOUT_CLASSIFICATION,// Try explicitly imported class e.g. import foo.Bar;
JEdit,WITHOUT_CLASSIFICATION,// don't do this in static{} since we need jEdit.initMisc() // run first so we have the jeditresource: protocol
JEdit,WITHOUT_CLASSIFICATION,//{{{ recordMacro() method
JEdit,WITHOUT_CLASSIFICATION,"/* if value is null:		 * - if default is null unset user prop		 * - else set user prop to """"		 * else		 * - if default equals value ignore		 * - if default doesn't equal value set user		 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ LogViewer constructor
JEdit,WITHOUT_CLASSIFICATION,// the first element of pp is the abbrev itself
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// SUBEXPRESSIONS //  (...) | \(...\) depending on RE_NO_BK_PARENS
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadIfNecessary() method
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Implementation of the CodeVisitor interface // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ LogList class
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkForExistingAbbrev() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paint() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResultIcon class
JEdit,WITHOUT_CLASSIFICATION,// try static method
JEdit,WITHOUT_CLASSIFICATION,//{{{ parseKeyStroke() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isOpaque() method
JEdit,WITHOUT_CLASSIFICATION,// Normalise all other whitespace to // a single space.
JEdit,WITHOUT_CLASSIFICATION,//{{{ EditAbbrevDialog constructor
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Handle ordinary abbrevs
JEdit,WITHOUT_CLASSIFICATION,//{{{ Maybe show add abbrev dialog
JEdit,WITHOUT_CLASSIFICATION,// Do we have the necessary jdk1.2 packages and optional package?
JEdit,WITHOUT_CLASSIFICATION,//{{{ getGlobalAbbrevs() method
JEdit,WITHOUT_CLASSIFICATION,// I guess this is when we pass it as an argument? // Setting locally
JEdit,WITHOUT_CLASSIFICATION,// not a comment // create RE subexpression as token.
JEdit,WITHOUT_CLASSIFICATION,//{{{ setProperties() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setGlobalAbbrevs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeToolBar() method
JEdit,WITHOUT_CLASSIFICATION,// F10 should be passed on but C+e F10 // shouldn't
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveHistory() method
JEdit,WITHOUT_CLASSIFICATION,// // Hash table of attributes found in current start tag. //
JEdit,WITHOUT_CLASSIFICATION,/*ignore*/
JEdit,WITHOUT_CLASSIFICATION,// Generate a hash code.
JEdit,WITHOUT_CLASSIFICATION,// UNMATCHED RIGHT PAREN // ) or \) throw exception if // !syntax.get(RESyntax.RE_UNMATCHED_RIGHT_PAREN_ORD)
JEdit,WITHOUT_CLASSIFICATION,// Place the toolbar at the bottom of the group
JEdit,WITHOUT_CLASSIFICATION,// need to carry over file name and first line globs because they are // not given to us by the XMode handler but instead are filled in by // the catalog loader.
JEdit,WITHOUT_CLASSIFICATION,//{{{ addItem() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadHistory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCurrentBindings() method
JEdit,WITHOUT_CLASSIFICATION,// Stores prefix name in bindings hashtable
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToolBarManager constructor
JEdit,WITHOUT_CLASSIFICATION,// select the appropriate tree node.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getElementAt() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpSearchPanel constructor
JEdit,WITHOUT_CLASSIFICATION,// OK do it by the book.
JEdit,WITHOUT_CLASSIFICATION,// set proxy authentication
JEdit,WITHOUT_CLASSIFICATION,// Expand buffer if necessary.
JEdit,WITHOUT_CLASSIFICATION,// check the next character
JEdit,WITHOUT_CLASSIFICATION,// MATCH-ANY-CHARACTER OPERATOR (except possibly newline and null) //  .
JEdit,WITHOUT_CLASSIFICATION,//{{{ JARClassLoader constructor
JEdit,WITHOUT_CLASSIFICATION,// no need to do this for macros!
JEdit,WITHOUT_CLASSIFICATION,// Skip whitespace at the start.
JEdit,WITHOUT_CLASSIFICATION,//{{{ accept() method
JEdit,WITHOUT_CLASSIFICATION,// system id
JEdit,WITHOUT_CLASSIFICATION,//{{{ Instance members
JEdit,WITHOUT_CLASSIFICATION,// Return the value.
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResultCompare class
JEdit,WITHOUT_CLASSIFICATION,// we later use this to compute a relative ranking
JEdit,WITHOUT_CLASSIFICATION,// end EnhancedDialog implementation
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpViewer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getShortURL() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ gotoURL() method
JEdit,WITHOUT_CLASSIFICATION,// public id
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResultRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ queueTOCReload() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBaseURL() method
JEdit,WITHOUT_CLASSIFICATION,// Literals never have line ends
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadTOC() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpFile class
JEdit,WITHOUT_CLASSIFICATION,// Read the first character.
JEdit,WITHOUT_CLASSIFICATION,//{{{ evalSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showEvaluateDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showEvaluateLinesDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ LinkHandler class
JEdit,WITHOUT_CLASSIFICATION,// reset default cursor so that the hand cursor doesn't // stick around
JEdit,WITHOUT_CLASSIFICATION,/*checkonly*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ indexJAR() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpIndex constructor
JEdit,WITHOUT_CLASSIFICATION,// the TOC pane looks up user's guide URLs relative to the // doc directory...
JEdit,WITHOUT_CLASSIFICATION,//{{{ applicationShouldHandleReopen() method
JEdit,WITHOUT_CLASSIFICATION,// Try static and then object if allowed // Note that the Java compiler should not allow both.
JEdit,WITHOUT_CLASSIFICATION,// ZERO-OR-MORE REPEAT OPERATOR //  *
JEdit,WITHOUT_CLASSIFICATION,// see what JARClassLoader this class is in
JEdit,WITHOUT_CLASSIFICATION,//{{{ indexEditorHelp() method
JEdit,WITHOUT_CLASSIFICATION,// search all of its interfaces breadth first
JEdit,WITHOUT_CLASSIFICATION,// Find the delimiter.
JEdit,WITHOUT_CLASSIFICATION,//{{{ hyperlinkUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// Read the literal.
JEdit,WITHOUT_CLASSIFICATION,//{{{ indexDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PropertyChangeHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ createNode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ignoreWord() method
JEdit,WITHOUT_CLASSIFICATION,/*  || lname.endsWith(".txt") */
JEdit,WITHOUT_CLASSIFICATION,// so that HelpViewer constructor doesn't try to expand
JEdit,WITHOUT_CLASSIFICATION,// WORD BEGIN OPERATOR  //  \< if ????
JEdit,WITHOUT_CLASSIFICATION,// used to mark non-existent classes in class hash
JEdit,WITHOUT_CLASSIFICATION,// evaluate a method declaration
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Utility methods: dump bytecode array // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// the word
JEdit,WITHOUT_CLASSIFICATION,// should try to print usage here if nothing found
JEdit,WITHOUT_CLASSIFICATION,//{{{ addWord() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ indexURL() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectNode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Word class
JEdit,WITHOUT_CLASSIFICATION,// Look for a BeanShell command
JEdit,WITHOUT_CLASSIFICATION,// files it occurs in
JEdit,WITHOUT_CLASSIFICATION,// If defined invoke it
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpTOCPanel constructor
JEdit,WITHOUT_CLASSIFICATION,// else fall through...
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpNode constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ attribute() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ TOCHandler class
JEdit,WITHOUT_CLASSIFICATION,"/*        NULL means ""no value"".        This ia a placeholder for primitive null value.    */"
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // High-level reading and scanning methods. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,//{{{ CustomClassManager class
JEdit,WITHOUT_CLASSIFICATION,//{{{ cut() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ TOCHandler constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ TOCCellRenderer class
JEdit,WITHOUT_CLASSIFICATION,//ToolTipManager ttm = ToolTipManager.sharedInstance();
JEdit,WITHOUT_CLASSIFICATION,//{{{ cellRectIsVisible() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Path name methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ TOCTree constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ SendVFSUpdatesSafely class
JEdit,WITHOUT_CLASSIFICATION,//{{{ TOCTree class
JEdit,WITHOUT_CLASSIFICATION,//{{{ constructPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileVFS() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFS methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginCompare class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getUrlVFS() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ registerVFS() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Static variables
JEdit,WITHOUT_CLASSIFICATION,// if we are already in the AWT thread take a shortcut
JEdit,WITHOUT_CLASSIFICATION,//{{{ runInAWTThread() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ error() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ runInWorkThread() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVFSByName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRegisterStatusPrompt() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVFSForPath() method
JEdit,WITHOUT_CLASSIFICATION,// in new api protocol always equals name
JEdit,WITHOUT_CLASSIFICATION,//{{{ Class initializer
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVFSs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFilesystems() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVFSForProtocol() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ waitForRequests() method
JEdit,WITHOUT_CLASSIFICATION,// don't send two updates // for the same path
JEdit,WITHOUT_CLASSIFICATION,// NON-SPECIAL CHARACTER (or escape to make literal) //  c | \* for example
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRegister() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ errorOccurred() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRequestCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIOThreadPool() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ sendVFSUpdate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ I/O request methods
JEdit,WITHOUT_CLASSIFICATION,// use system default short format
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLeadingWhiteSpaceWidth() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addGlobalAbbrev() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _createOutputStream() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadColors() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setPermissions() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ lookupWord() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpNode class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getParentElement() method
JEdit,WITHOUT_CLASSIFICATION,// Register the notation.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getParentOfPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ UrlVFS constructor
JEdit,WITHOUT_CLASSIFICATION,// // When the class is loaded populate the hash table of // attribute types. //
JEdit,WITHOUT_CLASSIFICATION,//{{{ _rename() method
JEdit,WITHOUT_CLASSIFICATION,"/*		If this type of This implements it directly return this		else try complain that we don't have the proxy mechanism.	*/"
JEdit,WITHOUT_CLASSIFICATION,/*bcm*/
JEdit,WITHOUT_CLASSIFICATION,// Overrides REToken.chain
JEdit,WITHOUT_CLASSIFICATION,// clear the static caches in BshClassManager
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStringProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setStringProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Check if file is valid
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileSeparator() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FileVFS method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _delete() method
JEdit,WITHOUT_CLASSIFICATION,// end compound name routines
JEdit,WITHOUT_CLASSIFICATION,//{{{ LocalDirectoryEntry class
JEdit,WITHOUT_CLASSIFICATION,// this is needed because on OS X renaming to a non-existent // directory causes problems
JEdit,WITHOUT_CLASSIFICATION,//{{{ _backup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _mkdir() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ KEY_RELEASED...
JEdit,WITHOUT_CLASSIFICATION,// If null callstack
JEdit,WITHOUT_CLASSIFICATION,// arithmetic
JEdit,WITHOUT_CLASSIFICATION,/*eof*/
JEdit,WITHOUT_CLASSIFICATION,// this has been changed since 1.03 to be non-overlapping matches
JEdit,WITHOUT_CLASSIFICATION,// have to handle this case specially on windows. // insert \ between eg A: and myfile.txt.
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Utility methods: constant pool management // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToolBar-related constants
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBooleanProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getModeAbbrevs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setModeAbbrevs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addToFavorites() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ TableMouseHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Permission preservation code
JEdit,WITHOUT_CLASSIFICATION,//{{{ _saveComplete() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setModifierMapping() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIntegerProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPermissions() method
JEdit,WITHOUT_CLASSIFICATION,// assignment to loose type void type or exactly same type
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTrailingWhiteSpace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveBackup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Layers
JEdit,WITHOUT_CLASSIFICATION,//{{{ FavoritesVFS constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveFavorites() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FavoritesEntry class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFavorites() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadFavorites() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ listRoots() method
JEdit,WITHOUT_CLASSIFICATION,// Make sure people don't do stupid things like putting files in /Volumes
JEdit,WITHOUT_CLASSIFICATION,//{{{ addModeAbbrev() method
JEdit,WITHOUT_CLASSIFICATION,// only load global abbrevs if user abbrevs file could not be loaded
JEdit,WITHOUT_CLASSIFICATION,"/* if backup file was created less than			 * 'backupTimeDistance' ago we do not			 * create the backup */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ actionBar() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ countNewlines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ autodetect() method
JEdit,WITHOUT_CLASSIFICATION,"/*		Note: it may see like with the new 1.3 scoping this test could be		removed but it cannot.  When recurse is false we still need to set the		variable in our parent not here.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExtendedAttributes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ reloadDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MarkersMenuItem constructor
JEdit,WITHOUT_CLASSIFICATION,// Fetch properties
JEdit,WITHOUT_CLASSIFICATION,//{{{ showBrowseDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ RootsEntry class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCapabilities() method
JEdit,WITHOUT_CLASSIFICATION,// to prevent windows looking for a disk in the floppy drive
JEdit,WITHOUT_CLASSIFICATION,// null evalname and we're finished // base object for current eval
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - constructor
JEdit,WITHOUT_CLASSIFICATION,"/*	Originally called ResultType in the grammar*/"
JEdit,WITHOUT_CLASSIFICATION,// reasonable defaults (?)
JEdit,WITHOUT_CLASSIFICATION,/*checkOnly*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ Extended attributes
JEdit,WITHOUT_CLASSIFICATION,//{{{ Capabilities
JEdit,WITHOUT_CLASSIFICATION,//{{{ indexStream() method
JEdit,WITHOUT_CLASSIFICATION,// this ensures that getFileParent("protocol:") for // example is "protocol:" and not "".
JEdit,WITHOUT_CLASSIFICATION,// Casting to reference type
JEdit,WITHOUT_CLASSIFICATION,// don't want getFileName("roots:") to return ""
JEdit,WITHOUT_CLASSIFICATION,// Cannot cast from arbitrary object to primitive
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEditPanes() method
JEdit,WITHOUT_CLASSIFICATION,// must be null in checkOnly
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExtendedAttribute() method
JEdit,WITHOUT_CLASSIFICATION,// A method name that starts with _ requires a session object
JEdit,WITHOUT_CLASSIFICATION,// Currently unused but we'll probably need it later.
JEdit,WITHOUT_CLASSIFICATION,//{{{ createVFSSession() method
JEdit,WITHOUT_CLASSIFICATION,// ignore last character of path to properly handle // paths like /foo/bar/
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTwoStageSaveName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateEveryTime() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ AppearanceOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,// Inform the handler about the // attribute.
JEdit,WITHOUT_CLASSIFICATION,// If return type void return void as the value.
JEdit,WITHOUT_CLASSIFICATION,// EOF not zero read apparently
JEdit,WITHOUT_CLASSIFICATION,"/* * Expression syntax follows. */"
JEdit,WITHOUT_CLASSIFICATION,// Precondition: pattern[index-1] == ':' // we will return pos of closing ']'.
JEdit,WITHOUT_CLASSIFICATION,// box it
JEdit,WITHOUT_CLASSIFICATION,//{{{ setIntegerProperty() method
JEdit,WITHOUT_CLASSIFICATION,// will be cached from now on...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRegexpProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRuleSetAtOffset() method
JEdit,WITHOUT_CLASSIFICATION,// Collect blocks of up to maxItems of consecutive letters
JEdit,WITHOUT_CLASSIFICATION,//{{{ _endVFSSession() method
JEdit,WITHOUT_CLASSIFICATION,// set the var here in the block namespace
JEdit,WITHOUT_CLASSIFICATION,//e.printStackTrace();
JEdit,WITHOUT_CLASSIFICATION,// super.variables.containsKey( name ) not any faster I checked
JEdit,WITHOUT_CLASSIFICATION,// set the var in the enclosing (parent) namespace
JEdit,WITHOUT_CLASSIFICATION,// Found "<?"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getClassName() method
JEdit,WITHOUT_CLASSIFICATION,/*strict?*/
JEdit,WITHOUT_CLASSIFICATION,//current.addSeparator();
JEdit,WITHOUT_CLASSIFICATION,//{{{ File types
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) MethodInvocation */
JEdit,WITHOUT_CLASSIFICATION,// Check for {} tomfoolery
JEdit,WITHOUT_CLASSIFICATION,//{{{ parsePermissions() method
JEdit,WITHOUT_CLASSIFICATION,// we have to deal with a huge range of possible border cases here.
JEdit,WITHOUT_CLASSIFICATION,// Should never come here
JEdit,WITHOUT_CLASSIFICATION,// for filtering out backups
JEdit,WITHOUT_CLASSIFICATION,//{{{ MarkersMenuItem class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionListeners
JEdit,WITHOUT_CLASSIFICATION,//{{{ DirectoryEntry constructor
JEdit,WITHOUT_CLASSIFICATION,// ClassPathException is a type of UtilEvalError
JEdit,WITHOUT_CLASSIFICATION,//{{{ getColor() method
JEdit,WITHOUT_CLASSIFICATION,// skip marker files
JEdit,WITHOUT_CLASSIFICATION,// Read all the backslashes
JEdit,WITHOUT_CLASSIFICATION,// skip backup files
JEdit,WITHOUT_CLASSIFICATION,// if less than 20 items put them directly in the menu
JEdit,WITHOUT_CLASSIFICATION,// Generate code to push the BSHTHIS or BSHSTATIC field
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) Arguments */
JEdit,WITHOUT_CLASSIFICATION,// We could let a String fall through to final input but since // it's the most likely input type we check it first.
JEdit,WITHOUT_CLASSIFICATION,// Sort each letter
JEdit,WITHOUT_CLASSIFICATION,// no background mode and opening a new view
JEdit,WITHOUT_CLASSIFICATION,//{{{ keyPressed() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addToLetterMap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Expansion class
JEdit,WITHOUT_CLASSIFICATION,//{{{ old API
JEdit,WITHOUT_CLASSIFICATION,// We build a set of lists each list contains plugin menu // items that begin with a given letter.
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadAbbrevs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ eval() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) Block */
JEdit,WITHOUT_CLASSIFICATION,//{{{ _eval() method
JEdit,WITHOUT_CLASSIFICATION,/* int */
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveAbbrevs() method
JEdit,WITHOUT_CLASSIFICATION,// Push 'this'
JEdit,WITHOUT_CLASSIFICATION,// write global abbrevs
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstInvalidFoldLevel() method
JEdit,WITHOUT_CLASSIFICATION,// write mode abbrevs
JEdit,WITHOUT_CLASSIFICATION,// Parse mixed content.
JEdit,WITHOUT_CLASSIFICATION,//{{{ CompoundEdit class
JEdit,WITHOUT_CLASSIFICATION,// Read the first token.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isScreenLineCountValid() method
JEdit,WITHOUT_CLASSIFICATION,// // Constants for element content type. //
JEdit,WITHOUT_CLASSIFICATION,//{{{ DirectoryProvider constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ add() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Model class
JEdit,WITHOUT_CLASSIFICATION,//{{{ menuSelected() method
JEdit,WITHOUT_CLASSIFICATION,// Both numeric wrapper types?  // Try numeric style promotion wrapper cast
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSplitConfig() method
JEdit,WITHOUT_CLASSIFICATION,// assign doesn't need the pre-value
JEdit,WITHOUT_CLASSIFICATION,// Finish the declaration.
JEdit,WITHOUT_CLASSIFICATION,//{{{ MouseListener...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPluginJAR() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) IfStatement */
JEdit,WITHOUT_CLASSIFICATION,"/*     * freq table collected to save a pass over the data     * during decompression.     */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadCaretInfo() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ViewUpdate constructor
JEdit,WITHOUT_CLASSIFICATION,// if no server running and user runs jedit -quit // just exit
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionListener...
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMacrosMenu() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ EditBusStub class
JEdit,WITHOUT_CLASSIFICATION,//{{{ cacheBlock() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DynamicMenuChanged constructor
JEdit,WITHOUT_CLASSIFICATION,// protected members
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectedRow() method
JEdit,WITHOUT_CLASSIFICATION,// Read the remaining tokens.
JEdit,WITHOUT_CLASSIFICATION,//{{{ _init() method
JEdit,WITHOUT_CLASSIFICATION,// Read the external IDs
JEdit,WITHOUT_CLASSIFICATION,//{{{ isExiting() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Message types
JEdit,WITHOUT_CLASSIFICATION,//{{{ canonPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginUpdate constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferUpdate constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockableWindowUpdate constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRowCount() method
JEdit,WITHOUT_CLASSIFICATION,// Check for NDATA declaration.
JEdit,WITHOUT_CLASSIFICATION,// evaluate each child
JEdit,WITHOUT_CLASSIFICATION,// no surrogates needed
JEdit,WITHOUT_CLASSIFICATION,//{{{ mouseClicked() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserColorsModel constructor
JEdit,WITHOUT_CLASSIFICATION,// Read the entity value.
JEdit,WITHOUT_CLASSIFICATION,"/* Returns the root node of the AST.  It only makes sense to call     this after a successful parse. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserColorsModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ moveUp() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ColorRenderer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ColorRenderer class
JEdit,WITHOUT_CLASSIFICATION,// Check for a parameter entity.
JEdit,WITHOUT_CLASSIFICATION,"/* Determines whether the current node was actually closed and     pushed.  This should only be called in the final user action of a     node scope.  */"
JEdit,WITHOUT_CLASSIFICATION,// too big for surrogate
JEdit,WITHOUT_CLASSIFICATION,//{{{ runCachedBlock() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isScriptRunning() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNameSpace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Deprecated functions
JEdit,WITHOUT_CLASSIFICATION,/* Background color */
JEdit,WITHOUT_CLASSIFICATION,// Read the attribute type.
JEdit,WITHOUT_CLASSIFICATION,//{{{ setScreenLineCount() method
JEdit,WITHOUT_CLASSIFICATION,/* Font */
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextAreaOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,// classExists caches info for us
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveMode() method
JEdit,WITHOUT_CLASSIFICATION,/* Selection color */
JEdit,WITHOUT_CLASSIFICATION,/* Wrap guide */
JEdit,WITHOUT_CLASSIFICATION,/* Line highlight */
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectMode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ EditingOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,/* EOL markers */
JEdit,WITHOUT_CLASSIFICATION,/* Returns the node currently on the top of the stack. */
JEdit,WITHOUT_CLASSIFICATION,"/* Returns the number of children on the stack in the current node     scope. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ resetClassManager() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setupDefaultVariables() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ resetDefaultVariables() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ unwrapException() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleException() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createInterpreter() method
JEdit,WITHOUT_CLASSIFICATION,/* Show toolbar */
JEdit,WITHOUT_CLASSIFICATION,//{{{ moveGapEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DummyFoldHandler constructor
JEdit,WITHOUT_CLASSIFICATION,// don't do anything if the user didn't change // any settings
JEdit,WITHOUT_CLASSIFICATION,//{{{ NoPluginsPane class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Ceate icons list
JEdit,WITHOUT_CLASSIFICATION,// need to call Mode.init() if the file name or first line // globs change
JEdit,WITHOUT_CLASSIFICATION,//{{{ ExplicitFoldHandler constructor
JEdit,WITHOUT_CLASSIFICATION,// initialize the Plugins branch of the options tree
JEdit,WITHOUT_CLASSIFICATION,// Query plugins for option panes
JEdit,WITHOUT_CLASSIFICATION,//{{{ moveGapStart() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToolBarOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDefaultGroup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createOptionTreeModel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Create buttons
JEdit,WITHOUT_CLASSIFICATION,// get rid of mixed paths on Windows
JEdit,WITHOUT_CLASSIFICATION,// garbage collected
JEdit,WITHOUT_CLASSIFICATION,// also get rid of trailing spaces on Windows
JEdit,WITHOUT_CLASSIFICATION,// Found "<"
JEdit,WITHOUT_CLASSIFICATION,// Found "<" followed by something else
JEdit,WITHOUT_CLASSIFICATION,// Parse the rest of the content model.
JEdit,WITHOUT_CLASSIFICATION,// do the same on OS X
JEdit,WITHOUT_CLASSIFICATION,// // Constants for the entity type. //
JEdit,WITHOUT_CLASSIFICATION,// end HandlerBase implementation
JEdit,WITHOUT_CLASSIFICATION,// Check for the occurrence indicator.
JEdit,WITHOUT_CLASSIFICATION,/* P1003.2/D11.2 section 4.20.7.1 lines 5078ff.  */
JEdit,WITHOUT_CLASSIFICATION,// try scripted class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToolBarEditDialog class
JEdit,WITHOUT_CLASSIFICATION,// number of positional parameters in abbreviation expansion
JEdit,WITHOUT_CLASSIFICATION,// Register the separator.
JEdit,WITHOUT_CLASSIFICATION,//{{{ IconListEntry class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Expansion constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ButtonCompare class
JEdit,WITHOUT_CLASSIFICATION,// Icon selection
JEdit,WITHOUT_CLASSIFICATION,//{{{ Button class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handle backslash
JEdit,WITHOUT_CLASSIFICATION,// Read the content model.
JEdit,WITHOUT_CLASSIFICATION,//{{{ ToolBarEditDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// $n is 1-indexed but vector // contents is zero indexed
JEdit,WITHOUT_CLASSIFICATION,// $key will be $key for // example
JEdit,WITHOUT_CLASSIFICATION,// Check for end or for a separator.
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateList() method
JEdit,WITHOUT_CLASSIFICATION,// Found "</"
JEdit,WITHOUT_CLASSIFICATION,// Found "<!"
JEdit,WITHOUT_CLASSIFICATION,// Found "<!["
JEdit,WITHOUT_CLASSIFICATION,// Found "<!-"
JEdit,WITHOUT_CLASSIFICATION,// clean up old listeners
JEdit,WITHOUT_CLASSIFICATION,// single line mode (/s)
JEdit,WITHOUT_CLASSIFICATION,//{{{ createStyleTableModel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createStyleTableScroller() method
JEdit,WITHOUT_CLASSIFICATION,// Values for constants are bit indexes
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleTableModel class
JEdit,WITHOUT_CLASSIFICATION,// classloader wants no leading slash
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleEditor constructor
JEdit,WITHOUT_CLASSIFICATION,//skip all white PIs and comments //if this doesn't throw an exception...
JEdit,WITHOUT_CLASSIFICATION,// Handle delimiters
JEdit,WITHOUT_CLASSIFICATION,//{{{ getKeywordMapAtOffset() method
JEdit,WITHOUT_CLASSIFICATION,// Found "&"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getContextSensitiveProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStyle() method
JEdit,WITHOUT_CLASSIFICATION,/* Secondary Metal L&F font */
JEdit,WITHOUT_CLASSIFICATION,//{{{ addStyleChoice() method
JEdit,WITHOUT_CLASSIFICATION,// Expand general entities in // default values of attributes. // (Do this after the doctypeDecl // event!). // expandAttributeDefaultValues();
JEdit,WITHOUT_CLASSIFICATION,// I guess not...
JEdit,WITHOUT_CLASSIFICATION,// Restore the previous state.
JEdit,WITHOUT_CLASSIFICATION,// Read the attribute name.
JEdit,WITHOUT_CLASSIFICATION,// This is the (global) counter for the // array of specified attributes.
JEdit,WITHOUT_CLASSIFICATION,/* Number alignment */
JEdit,WITHOUT_CLASSIFICATION,// See if it was specified.
JEdit,WITHOUT_CLASSIFICATION,// for sorting
JEdit,WITHOUT_CLASSIFICATION,// Read the attributes if any. // After this loop we should be just // in front of the closing delimiter.
JEdit,WITHOUT_CLASSIFICATION,/* Border width */
JEdit,WITHOUT_CLASSIFICATION,/* Fold marker color */
JEdit,WITHOUT_CLASSIFICATION,/* Highlight interval and color */
JEdit,WITHOUT_CLASSIFICATION,//{{{ Used to store property values
JEdit,WITHOUT_CLASSIFICATION,/* Overwrite */
JEdit,WITHOUT_CLASSIFICATION,// not supported by Java...
JEdit,WITHOUT_CLASSIFICATION,//{{{ resolveSymlinks() method
JEdit,WITHOUT_CLASSIFICATION,// // Constants for attribute type. //
JEdit,WITHOUT_CLASSIFICATION,// Read the external subset if any
JEdit,WITHOUT_CLASSIFICATION,/* Memory status */
JEdit,WITHOUT_CLASSIFICATION,/* Foreground color */
JEdit,WITHOUT_CLASSIFICATION,/* Status bar visible */
JEdit,WITHOUT_CLASSIFICATION,/* Caret status */
JEdit,WITHOUT_CLASSIFICATION,/* Fold mode */
JEdit,WITHOUT_CLASSIFICATION,// Loop until we end up back at '>'
JEdit,WITHOUT_CLASSIFICATION,//{{{ FirewallOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,// Read the element type name.
JEdit,WITHOUT_CLASSIFICATION,/* Memory background color */
JEdit,WITHOUT_CLASSIFICATION,// proxy password
JEdit,WITHOUT_CLASSIFICATION,// proxy host
JEdit,WITHOUT_CLASSIFICATION,// no proxy for
JEdit,WITHOUT_CLASSIFICATION,// No external subset.
JEdit,WITHOUT_CLASSIFICATION,// volatile transient
JEdit,WITHOUT_CLASSIFICATION,//{{{ getColumnClass() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DockPositionCellRenderer class
JEdit,WITHOUT_CLASSIFICATION,// end of subset
JEdit,WITHOUT_CLASSIFICATION,// Read the document type name.
JEdit,WITHOUT_CLASSIFICATION,// 8-bit encodings
JEdit,WITHOUT_CLASSIFICATION,// // Constants for supported encodings. //
JEdit,WITHOUT_CLASSIFICATION,// Read the ExternalIDs.
JEdit,WITHOUT_CLASSIFICATION,/*offset*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ Edit mode
JEdit,WITHOUT_CLASSIFICATION,// 16-bit encodings
JEdit,WITHOUT_CLASSIFICATION,/*len*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ sort() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isAbsolutePath() method
JEdit,WITHOUT_CLASSIFICATION,// 32-bit encodings
JEdit,WITHOUT_CLASSIFICATION,// nice and simple
JEdit,WITHOUT_CLASSIFICATION,//{{{ Constructor
JEdit,WITHOUT_CLASSIFICATION,/* Autosave interval */
JEdit,WITHOUT_CLASSIFICATION,// Try reading a standalone declaration
JEdit,WITHOUT_CLASSIFICATION,// // Constants for attribute default value. //
JEdit,WITHOUT_CLASSIFICATION,//{{{ dump() method
JEdit,WITHOUT_CLASSIFICATION,/* Backup on every save */
JEdit,WITHOUT_CLASSIFICATION,// Read an optional version.
JEdit,WITHOUT_CLASSIFICATION,//{{{ GlobalOptions constructor
JEdit,WITHOUT_CLASSIFICATION,// Read the version.
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertAtColumn() method
JEdit,WITHOUT_CLASSIFICATION,// don't break jEdit core and plugins! //throw new InterpreterError("null variable value");
JEdit,WITHOUT_CLASSIFICATION,// Insert code to update the plugin managers list here later
JEdit,WITHOUT_CLASSIFICATION,/* Backup count */
JEdit,WITHOUT_CLASSIFICATION,// may have been axed previously
JEdit,WITHOUT_CLASSIFICATION,/* Backup directory */
JEdit,WITHOUT_CLASSIFICATION,// Try reading an encoding declaration.
JEdit,WITHOUT_CLASSIFICATION,/* Download source */
JEdit,WITHOUT_CLASSIFICATION,//{{{ FloatingWindowContainer constructor
JEdit,WITHOUT_CLASSIFICATION,// special primitive types
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Abbrev class
JEdit,WITHOUT_CLASSIFICATION,"/*		For serialization.		Don't serialize non-serializable objects.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Remove class
JEdit,WITHOUT_CLASSIFICATION,/*squeltch*/
JEdit,WITHOUT_CLASSIFICATION,"/*         * Setting up the unzftab entries here is not strictly         * necessary but it does save having to do it later         * in a separate pass and so saves a block's worth of         * cache misses.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAutosaveFile() method
JEdit,WITHOUT_CLASSIFICATION,// Cache unqualified names to prevent import check again
JEdit,WITHOUT_CLASSIFICATION,// for now since all browser actions are // written in beanshell we set the 'browser' // variable directly.
JEdit,WITHOUT_CLASSIFICATION,//{{{ AbbrevCompare class
JEdit,WITHOUT_CLASSIFICATION,//{{{ AbbrevsModel constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ toHashtable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ edit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ HeaderMouseHandler class
JEdit,WITHOUT_CLASSIFICATION,// no args method
JEdit,WITHOUT_CLASSIFICATION,//{{{ User interface
JEdit,WITHOUT_CLASSIFICATION,//{{{ Groups
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertIndented() method
JEdit,WITHOUT_CLASSIFICATION,// obtain the leading indent for later use
JEdit,WITHOUT_CLASSIFICATION,// Normalise whitespace if necessary.
JEdit,WITHOUT_CLASSIFICATION,/*forcclass*/
JEdit,WITHOUT_CLASSIFICATION,"/*		Note: technically I think we could get by passing in only the		current namespace or perhaps BshClassManager here instead of 		CallStack and Interpreter.  However let's just play it safe in case		of future changes - anywhere you eval a node you need these.	*/"
JEdit,WITHOUT_CLASSIFICATION,// try parent
JEdit,WITHOUT_CLASSIFICATION,//{{{ newFile() method
JEdit,WITHOUT_CLASSIFICATION,"/*         * Undo the MTF values for the selectors.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ addBufferChangeListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addExplicitFold() method
JEdit,WITHOUT_CLASSIFICATION,/* Show tip of the day */
JEdit,WITHOUT_CLASSIFICATION,// bitwise
JEdit,WITHOUT_CLASSIFICATION,// returns Object covering both Long and Boolean return types
JEdit,WITHOUT_CLASSIFICATION,/* Show tool bar */
JEdit,WITHOUT_CLASSIFICATION,// keep track of the original types
JEdit,WITHOUT_CLASSIFICATION,// Add the new typed var
JEdit,WITHOUT_CLASSIFICATION,// returns Object covering both Integer and Boolean return types
JEdit,WITHOUT_CLASSIFICATION,// Don't generate private /*or loosely return typed */ methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextFold() method
JEdit,WITHOUT_CLASSIFICATION,// type is correct here
JEdit,WITHOUT_CLASSIFICATION,/* History count */
JEdit,WITHOUT_CLASSIFICATION,/* Show hidden files */
JEdit,WITHOUT_CLASSIFICATION,/* View dock layout */
JEdit,WITHOUT_CLASSIFICATION,/* Show icons */
JEdit,WITHOUT_CLASSIFICATION,/* Beep on search auto wrap */
JEdit,WITHOUT_CLASSIFICATION,/* Show full path */
JEdit,WITHOUT_CLASSIFICATION,/* Menu spillover count */
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionListHandler constructor
JEdit,WITHOUT_CLASSIFICATION,/* Show search bar */
JEdit,WITHOUT_CLASSIFICATION,/* Show buffer switcher */
JEdit,WITHOUT_CLASSIFICATION,//{{{ narrowToFold() method
JEdit,WITHOUT_CLASSIFICATION,/* Primary Metal L&F font */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEntry() method
JEdit,WITHOUT_CLASSIFICATION,/* Show splash screen */
JEdit,WITHOUT_CLASSIFICATION,//{{{ PrintOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferOptions constructor
JEdit,WITHOUT_CLASSIFICATION,/*declaredOnly*/
JEdit,WITHOUT_CLASSIFICATION,// auto-gen default constructor // use default super constructor
JEdit,WITHOUT_CLASSIFICATION,// number of times we've matched so far
JEdit,WITHOUT_CLASSIFICATION,// Create a new file when the last is closed
JEdit,WITHOUT_CLASSIFICATION,//{{{ Edit modes syntax highlighting
JEdit,WITHOUT_CLASSIFICATION,// Common layers
JEdit,WITHOUT_CLASSIFICATION,// map voids to nulls for the outside world
JEdit,WITHOUT_CLASSIFICATION,// can't shift floating-point values
JEdit,WITHOUT_CLASSIFICATION,// arbitrary
JEdit,WITHOUT_CLASSIFICATION,// ++ and -- must be cast back the original type
JEdit,WITHOUT_CLASSIFICATION,// Promote character to Number type for these purposes
JEdit,WITHOUT_CLASSIFICATION,// flush log
JEdit,WITHOUT_CLASSIFICATION,// save list of open files
JEdit,WITHOUT_CLASSIFICATION,// Layers for top group
JEdit,WITHOUT_CLASSIFICATION,// non boolean primitive get appropriate flavor of zero
JEdit,WITHOUT_CLASSIFICATION,// store the value in the array
JEdit,WITHOUT_CLASSIFICATION,/* Sort buffers */
JEdit,WITHOUT_CLASSIFICATION,// Try object imports
JEdit,WITHOUT_CLASSIFICATION,// found an object and it's not an undefined variable
JEdit,WITHOUT_CLASSIFICATION,// Determine if the constructor calls this() or super()
JEdit,WITHOUT_CLASSIFICATION,// Check for stingy match for each possibility.
JEdit,WITHOUT_CLASSIFICATION,// set contents of mymatch equal to newMatch
JEdit,WITHOUT_CLASSIFICATION,//{{{ closeAllBuffers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ need to convert entries of 'props' to PropValue instances
JEdit,WITHOUT_CLASSIFICATION,/* Confirm save all */
JEdit,WITHOUT_CLASSIFICATION,//{{{ pathEquals() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleRectangularSelectionEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// evaluate the static portion of the block in the static space
JEdit,WITHOUT_CLASSIFICATION,// unwrap primitives
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveCaretInfo() method
JEdit,WITHOUT_CLASSIFICATION,// Insert the content type if any.
JEdit,WITHOUT_CLASSIFICATION,// Try static imports
JEdit,WITHOUT_CLASSIFICATION,// Check for existing method
JEdit,WITHOUT_CLASSIFICATION,// this() constructors come after super constructors in the table
JEdit,WITHOUT_CLASSIFICATION,// we do a write lock so that the // autosave which grabs a read lock // is not executed between the // deletion of the autosave file // and clearing of the dirty flag
JEdit,WITHOUT_CLASSIFICATION,// close remaining buffers (the close dialog only deals with // dirty ones)
JEdit,WITHOUT_CLASSIFICATION,//{{{ backspaceWord() method
JEdit,WITHOUT_CLASSIFICATION,// try declaredField
JEdit,WITHOUT_CLASSIFICATION,/*fromType*/
JEdit,WITHOUT_CLASSIFICATION,// I think this can happen
JEdit,WITHOUT_CLASSIFICATION,// Supply any defaulted attributes.
JEdit,WITHOUT_CLASSIFICATION,// Create the instance 'This' namespace set it on the object // instance and invoke the instance initializer
JEdit,WITHOUT_CLASSIFICATION,// Find new doablesLast
JEdit,WITHOUT_CLASSIFICATION,"/*         * 20 is just a paranoia constant         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveAllBuffers() method
JEdit,WITHOUT_CLASSIFICATION,// Cast input appropriately or throw exception
JEdit,WITHOUT_CLASSIFICATION,// don't deal with object types here... unless above
JEdit,WITHOUT_CLASSIFICATION,// can only cast boolean to boolean
JEdit,WITHOUT_CLASSIFICATION,// Trying to cast null to primitive type?
JEdit,WITHOUT_CLASSIFICATION,//{{{ addOptionPane() method
JEdit,WITHOUT_CLASSIFICATION,/* Session management */
JEdit,WITHOUT_CLASSIFICATION,//{{{ GeneralOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ShowRecentMenuItem class
JEdit,WITHOUT_CLASSIFICATION,// unwrap primitive to the wrapper type
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - public extend EvalError
JEdit,WITHOUT_CLASSIFICATION,// Evaluate the initializers
JEdit,WITHOUT_CLASSIFICATION,// first promote char to Number type to avoid duplicating code
JEdit,WITHOUT_CLASSIFICATION,// Do numeric cast
JEdit,WITHOUT_CLASSIFICATION,// UCS-4 must begin with "<!XML" // 0x3c 0x00 0x00 0x00: UCS-4 little-endian (4321)
JEdit,WITHOUT_CLASSIFICATION,//return countParts(value) > 1;
JEdit,WITHOUT_CLASSIFICATION,// At this point we've either got too many or just the right amount. // See if this numRepeats works with the rest of the regexp.
JEdit,WITHOUT_CLASSIFICATION,/* Footer */
JEdit,WITHOUT_CLASSIFICATION,"/*         * Write `magic' bytes h indicating file-format == huffmanised         * followed by a digit indicating blockSize100k.         */"
JEdit,WITHOUT_CLASSIFICATION,// auto reload changed buffers?
JEdit,WITHOUT_CLASSIFICATION,/* Header */
JEdit,WITHOUT_CLASSIFICATION,/* Sort buffers by names */
JEdit,WITHOUT_CLASSIFICATION,// UCS-4 must begin with "<!XML" // 0x00 0x3c 0x00 0x00: UCS-4 unusual (3421)
JEdit,WITHOUT_CLASSIFICATION,// Test all possible matches for this number of repeats
JEdit,WITHOUT_CLASSIFICATION,// ... sweet. saveBackup() will create backupDir if it // doesn't exist.
JEdit,WITHOUT_CLASSIFICATION,//{{{ ParentMouseHandler class
JEdit,WITHOUT_CLASSIFICATION,/* Save caret positions */
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - sourceFile
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - sourceFile
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - public extend EvalError
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - constructor
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - super constructor args
JEdit,WITHOUT_CLASSIFICATION,/* Recent file list size */
JEdit,WITHOUT_CLASSIFICATION,/* Force 1.3 print dialog */
JEdit,WITHOUT_CLASSIFICATION,/* Check mod status on focus */
JEdit,WITHOUT_CLASSIFICATION,/* Default file encoding */
JEdit,WITHOUT_CLASSIFICATION,/* Auto detect encoding */
JEdit,WITHOUT_CLASSIFICATION,// in any case this is only needed for the // directory chooser (why?) so we add a // check. otherwise poor Rick will go insane.
JEdit,WITHOUT_CLASSIFICATION,// handle primitive widening conversions - JLS 5.1.2
JEdit,WITHOUT_CLASSIFICATION,/*overrideNamespace*/
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Now scan this big bucket so as to synthesise the                 * sorted order for small buckets [t ss] for all t != ss.                 */"
JEdit,WITHOUT_CLASSIFICATION,/* Two-stage save */
JEdit,WITHOUT_CLASSIFICATION,//{{{ HelpButton class
JEdit,WITHOUT_CLASSIFICATION,// compare existing entries' hashcode with this
JEdit,WITHOUT_CLASSIFICATION,// turns out under some circumstances this // method can switch the current buffer in // BROWSER mode.
JEdit,WITHOUT_CLASSIFICATION,/* Color */
JEdit,WITHOUT_CLASSIFICATION,//{{{ focusOnDefaultComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ mouseMoved() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMenuItems() method
JEdit,WITHOUT_CLASSIFICATION,// Layers for bottom group
JEdit,WITHOUT_CLASSIFICATION,//{{{ centerCaret() method
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - made conditional on debug
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - added debug param
JEdit,WITHOUT_CLASSIFICATION,//{{{ showSelectLineRangeDialog() method
JEdit,WITHOUT_CLASSIFICATION,"/*         * sort the block and establish posn of original string         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeStructureMatcher() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showListConfirm() method
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - added sourceFile info
JEdit,WITHOUT_CLASSIFICATION,//{{{ ManagePanel constructor
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - added debug param
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - override error methods and toString
JEdit,WITHOUT_CLASSIFICATION,// Compare with number of dimensions actually created with the // number specified (syntax uses the undefined ones here)
JEdit,WITHOUT_CLASSIFICATION,// Some kind of 8-bit encoding without "<?XML" // (otherwise) UTF-8 without encoding/XML declaration
JEdit,WITHOUT_CLASSIFICATION,"/*			dimensionsNode can return either a fully intialized array or VOID.			when VOID the prescribed array dimensions (defined and undefined)			are contained in the node.		*/"
JEdit,WITHOUT_CLASSIFICATION,// so that we don't try to reset() right away
JEdit,WITHOUT_CLASSIFICATION,"/*                 * Find the coding table which is best for this group                 * and record its identity in the selector table.                 */"
JEdit,WITHOUT_CLASSIFICATION,// in this case we can't directly call // view.close(); we have to call closeView() // for all open views
JEdit,WITHOUT_CLASSIFICATION,// Generate the delegate methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ transitiveClosure() method
JEdit,WITHOUT_CLASSIFICATION,// Test it
JEdit,WITHOUT_CLASSIFICATION,// execute nodes skipping labels until a break or return
JEdit,WITHOUT_CLASSIFICATION,// Check for entity recursion.
JEdit,WITHOUT_CLASSIFICATION,/* --- Instance data --- */
JEdit,WITHOUT_CLASSIFICATION,// Both primitives do primitive cast
JEdit,WITHOUT_CLASSIFICATION,/*filter*/
JEdit,WITHOUT_CLASSIFICATION,// check if input is at a valid position
JEdit,WITHOUT_CLASSIFICATION,// Stop server
JEdit,WITHOUT_CLASSIFICATION,//{{{ EnhancedButton constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Mirror class
JEdit,WITHOUT_CLASSIFICATION,// copied from generated getMessage()
JEdit,WITHOUT_CLASSIFICATION,// Generate the constructors
JEdit,WITHOUT_CLASSIFICATION,// Force the class public for now...
JEdit,WITHOUT_CLASSIFICATION,// for inner classes
JEdit,WITHOUT_CLASSIFICATION,// Generate the bsh instance 'This' reference holder field
JEdit,WITHOUT_CLASSIFICATION,// Generate the fields
JEdit,WITHOUT_CLASSIFICATION,// Generate the static bsh static reference holder field
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadExtraJARsIfNecessary() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginTableModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Caret
JEdit,WITHOUT_CLASSIFICATION,//{{{ RemoveButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ addToSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MirrorList constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ MirrorCompare class
JEdit,WITHOUT_CLASSIFICATION,// unwrap etc.
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginList constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionCount() method
JEdit,WITHOUT_CLASSIFICATION,// Generate method body
JEdit,WITHOUT_CLASSIFICATION,//{{{ getToolBar() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ finished() method
JEdit,WITHOUT_CLASSIFICATION,"/*	 * The split config is recorded in a simple RPN ""language"".	 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ addPluginSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addPlugin() method
JEdit,WITHOUT_CLASSIFICATION,// if download OK remove existing version
JEdit,WITHOUT_CLASSIFICATION,"/*                 * copy 3                 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ updatePosition() method
JEdit,WITHOUT_CLASSIFICATION,// if no requests are running requestDone() // will not be called so we must queue the // AWT runner ourselves.
JEdit,WITHOUT_CLASSIFICATION,//{{{ createBrowserMenuItems() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginManager constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Deprecated methods
JEdit,WITHOUT_CLASSIFICATION,// ensure consistent history; // eg we don't want both // foo/ and foo
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDownloadingList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createOptionPanes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getJAR() method
JEdit,WITHOUT_CLASSIFICATION,/* Strip trailing EOL */
JEdit,WITHOUT_CLASSIFICATION,// Get the instance field
JEdit,WITHOUT_CLASSIFICATION,//{{{ showWaitCursor() method
JEdit,WITHOUT_CLASSIFICATION,// Also cache the class so that no import resolution must occur // this avoids having to load our enclosing class which isn't // finished being generated yet... oy.
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // Low-level I/O. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,// need to set the input stream - reinit the parser?
JEdit,WITHOUT_CLASSIFICATION,// Primitive to arbitrary object type.  // Allow Primitive.castToType() to handle it as well as cases of  // Primitive.NULL and Primitive.VOID
JEdit,WITHOUT_CLASSIFICATION,// a la Perl $0 is whole thing $1 - $9 are subexpressions
JEdit,WITHOUT_CLASSIFICATION,// if started with java -jar jedit.jar
JEdit,WITHOUT_CLASSIFICATION,//{{{ showPluginManager() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getInstance() method
JEdit,WITHOUT_CLASSIFICATION,//String installed; //String installedVersion;
JEdit,WITHOUT_CLASSIFICATION,//{{{ Plugin class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Dependency class
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginSet class
JEdit,WITHOUT_CLASSIFICATION,// after the entire list is loaded fill out plugin field // in dependencies
JEdit,WITHOUT_CLASSIFICATION,// Force the install tab to refresh for possible // change of mirror
JEdit,WITHOUT_CLASSIFICATION,/* Implements abstract method REToken.match() */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPluginList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Branch class
JEdit,WITHOUT_CLASSIFICATION,// only used if what is "plugin"
JEdit,WITHOUT_CLASSIFICATION,// Read as many bytes as possible // into the read buffer.
JEdit,WITHOUT_CLASSIFICATION,//{{{ updatePluginList() method
JEdit,WITHOUT_CLASSIFICATION,// init the static shared sharedObject if it's not there yet
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectAll() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ SelectallButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBufferLength() method
JEdit,WITHOUT_CLASSIFICATION,/* even if installDirectory is different */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSearchBar() method
JEdit,WITHOUT_CLASSIFICATION,/*map*/
JEdit,WITHOUT_CLASSIFICATION,// index tracks the position in the char array
JEdit,WITHOUT_CLASSIFICATION,/* Setup panes */
JEdit,WITHOUT_CLASSIFICATION,//{{{ Variables
JEdit,WITHOUT_CLASSIFICATION,"//branch.satisfyDependencies(rosterinstallDirectory //	downloadSource);"
JEdit,WITHOUT_CLASSIFICATION,// look for the specially named super delegate method
JEdit,WITHOUT_CLASSIFICATION,//{{{ restoreSplitConfig() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ activate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ download() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ SizeLabel class
JEdit,WITHOUT_CLASSIFICATION,// Generate code to push arguments as an object array
JEdit,WITHOUT_CLASSIFICATION,/*strict*/
JEdit,WITHOUT_CLASSIFICATION,// Dispatch to an encoding-specific // reader method to populate the // readBuffer.
JEdit,WITHOUT_CLASSIFICATION,// bsh.evalOnly
JEdit,WITHOUT_CLASSIFICATION,/* Setup the table */
JEdit,WITHOUT_CLASSIFICATION,//{{{ deactivate() method
JEdit,WITHOUT_CLASSIFICATION,/* Create description */
JEdit,WITHOUT_CLASSIFICATION,/* Create buttons */
JEdit,WITHOUT_CLASSIFICATION,//{{{ ListUpdater class
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginInfoBox class
JEdit,WITHOUT_CLASSIFICATION,// still needed even though glass pane // has a wait cursor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Do more stuff
JEdit,WITHOUT_CLASSIFICATION,//{{{ nextTabStop() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ writeMap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Roster constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ hideWaitCursor() method
JEdit,WITHOUT_CLASSIFICATION,/* Tab size */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStatus() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionBar() method
JEdit,WITHOUT_CLASSIFICATION,// Handle imported inner class case
JEdit,WITHOUT_CLASSIFICATION,//{{{ quickIncrementalSearch() method
JEdit,WITHOUT_CLASSIFICATION,// compact the Vector
JEdit,WITHOUT_CLASSIFICATION,// Add final buffered token and an EndSub marker
JEdit,WITHOUT_CLASSIFICATION,//{{{ quickHyperSearch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ InstallPanel constructor
JEdit,WITHOUT_CLASSIFICATION,// Create this constructor method
JEdit,WITHOUT_CLASSIFICATION,//{{{ formatSize() method
JEdit,WITHOUT_CLASSIFICATION,// Generate code to return the value
JEdit,WITHOUT_CLASSIFICATION,// Generate code to unwrap bsh Primitive types
JEdit,WITHOUT_CLASSIFICATION,// Generate code to invoke the ClassGeneratorUtil initInstance() method
JEdit,WITHOUT_CLASSIFICATION,// push 'this'
JEdit,WITHOUT_CLASSIFICATION,//{{{ WindowHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ concatPath() method
JEdit,WITHOUT_CLASSIFICATION,// close JAR file and all JARs that depend on this
JEdit,WITHOUT_CLASSIFICATION,// Make all child paths relative.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFirstPhysicalLine() method
JEdit,WITHOUT_CLASSIFICATION,// ALPHANUMERIC OPERATOR //  \w
JEdit,WITHOUT_CLASSIFICATION,//{{{ getInputHandler() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Input handling
JEdit,WITHOUT_CLASSIFICATION,//{{{ getKeyEventInterceptor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setKeyEventInterceptor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setInputHandler() method
JEdit,WITHOUT_CLASSIFICATION,// we have to be careful
JEdit,WITHOUT_CLASSIFICATION,//{{{ calculate tab size
JEdit,WITHOUT_CLASSIFICATION,//{{{ RosterThread class
JEdit,WITHOUT_CLASSIFICATION,// progress value as of start of current task
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextRenderer
JEdit,WITHOUT_CLASSIFICATION,// package-private members
JEdit,WITHOUT_CLASSIFICATION,//{{{ done() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Deferred class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setValue() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ endDocument() method
JEdit,WITHOUT_CLASSIFICATION,// Change any white text to black
JEdit,WITHOUT_CLASSIFICATION,// invoke the initInstance() method
JEdit,WITHOUT_CLASSIFICATION,// Push the class/constructor name as a constant
JEdit,WITHOUT_CLASSIFICATION,// Push arguments as an object array
JEdit,WITHOUT_CLASSIFICATION,//buffer.readLock();
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Scrolling
JEdit,WITHOUT_CLASSIFICATION,// calculate size for current page
JEdit,WITHOUT_CLASSIFICATION,//{{{ ParentDirectoryRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ print() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ printPage() method
JEdit,WITHOUT_CLASSIFICATION,//buffer.readUnlock();
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMacroRecorder() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMacroRecorder() method
JEdit,WITHOUT_CLASSIFICATION,"/*	Type name and expression syntax follows.*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ determine line number width
JEdit,WITHOUT_CLASSIFICATION,//{{{ pageSetup() method
JEdit,WITHOUT_CLASSIFICATION,//no need to always keep the same job name for every printout.
JEdit,WITHOUT_CLASSIFICATION,// remove cache file
JEdit,WITHOUT_CLASSIFICATION,// Add method body
JEdit,WITHOUT_CLASSIFICATION,// push super class name // use superClassName var?
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleLineSeparator() method
JEdit,WITHOUT_CLASSIFICATION,// push class static This object
JEdit,WITHOUT_CLASSIFICATION,//{{{ Instance variables // this is a bad hack
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintHeader() method
JEdit,WITHOUT_CLASSIFICATION,// not supported for arbitriary filesets
JEdit,WITHOUT_CLASSIFICATION,// generate switch body
JEdit,WITHOUT_CLASSIFICATION,/* Decorate frames with look and feel (JDK 1.4 only) */
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferPrintable constructor
JEdit,WITHOUT_CLASSIFICATION,/*max*/
JEdit,WITHOUT_CLASSIFICATION,// start switch
JEdit,WITHOUT_CLASSIFICATION,// push ConstructorArgs
JEdit,WITHOUT_CLASSIFICATION,// map loose return to Object
JEdit,WITHOUT_CLASSIFICATION,// invoke the iterator method on the ConstructorArgs // push the ConstructorArgs
JEdit,WITHOUT_CLASSIFICATION,// Unload the arguments from the ConstructorArgs object
JEdit,WITHOUT_CLASSIFICATION,// done with switch
JEdit,WITHOUT_CLASSIFICATION,// Maybe combine this with generateMethod()
JEdit,WITHOUT_CLASSIFICATION,// default branch always invokes no args super // push 'this'
JEdit,WITHOUT_CLASSIFICATION,// invoke the constructor for this branch
JEdit,WITHOUT_CLASSIFICATION,// if it's an object type we must do a check cast
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMaximum() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintFooter() method
JEdit,WITHOUT_CLASSIFICATION,// catch those hooligans passing null urls
JEdit,WITHOUT_CLASSIFICATION,// move JAR first
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPrintJob() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PrintTabExpander class
JEdit,WITHOUT_CLASSIFICATION,//{{{ PrintTabExpander constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ EntryCompare class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPageFormat() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Install class
JEdit,WITHOUT_CLASSIFICATION,//long
JEdit,WITHOUT_CLASSIFICATION,//{{{ Install constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ addRemove() method
JEdit,WITHOUT_CLASSIFICATION,// cached for speed
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileExtension() method
JEdit,WITHOUT_CLASSIFICATION,// Push vars
JEdit,WITHOUT_CLASSIFICATION,//{{{ Occur constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Operation interface
JEdit,WITHOUT_CLASSIFICATION,//{{{ addOperation() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileNameNoExtension() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDownloadDir() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ savePrintSpec() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileParent() method
JEdit,WITHOUT_CLASSIFICATION,//convert from PrintRequestAttributeSet to the pageFormat
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileProtocol() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getProtocolOfURL() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isURL() method
JEdit,WITHOUT_CLASSIFICATION,/* Line numbering */
JEdit,WITHOUT_CLASSIFICATION,//{{{ Create the timer used by incremental search
JEdit,WITHOUT_CLASSIFICATION,//{{{ goTo() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) FormalParameters */
JEdit,WITHOUT_CLASSIFICATION,// final in 4.2
JEdit,WITHOUT_CLASSIFICATION,//{{{ HyperSearchResult constructor
JEdit,WITHOUT_CLASSIFICATION,// not found at all.
JEdit,WITHOUT_CLASSIFICATION,//{{{ addOccur() method
JEdit,WITHOUT_CLASSIFICATION,// Gather all of the methods of class and parents
JEdit,WITHOUT_CLASSIFICATION,/* an error occurred */
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleWordWrap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNextFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Occur class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setHyperSearch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateCachedList() method
JEdit,WITHOUT_CLASSIFICATION,// WHITESPACE OPERATOR //  \s if RE_CHAR_CLASS_ESCAPES is set
JEdit,WITHOUT_CLASSIFICATION,// RETURN ESCAPE //  \r
JEdit,WITHOUT_CLASSIFICATION,//{{{ isEmpty() method
JEdit,WITHOUT_CLASSIFICATION,// NON-WORD BREAK OPERATOR // \B if ????
JEdit,WITHOUT_CLASSIFICATION,//{{{ performOperationsInWorkThread() method
JEdit,WITHOUT_CLASSIFICATION,// now activate the plugins
JEdit,WITHOUT_CLASSIFICATION,//{{{ bufferSaved() method
JEdit,WITHOUT_CLASSIFICATION,// close button only there if 'temp' is true
JEdit,WITHOUT_CLASSIFICATION,//{{{ getOperationCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ timerIncrementalSearch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ find() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ incrementalSearch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getOperation() method
JEdit,WITHOUT_CLASSIFICATION,// beep if beep property set
JEdit,WITHOUT_CLASSIFICATION,// not found. start from // beginning
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Incremental search
JEdit,WITHOUT_CLASSIFICATION,// on backspace restart from beginning
JEdit,WITHOUT_CLASSIFICATION,// inform user search restarted
JEdit,WITHOUT_CLASSIFICATION,// on enter start search from end // of current match to find next one
JEdit,WITHOUT_CLASSIFICATION,//{{{ Buffers edit panes split panes
JEdit,WITHOUT_CLASSIFICATION,//{{{ splitHorizontally() method
JEdit,WITHOUT_CLASSIFICATION,// use default super constructor
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ HyperSearch
JEdit,WITHOUT_CLASSIFICATION,// don't beep if not found. // subsequent beeps are very // annoying when backspacing an // invalid search string.
JEdit,WITHOUT_CLASSIFICATION,// reverse regexp search // not supported yet so // 'simulate' with restart
JEdit,WITHOUT_CLASSIFICATION,// strings might be equal!
JEdit,WITHOUT_CLASSIFICATION,// BufferUpdate.CLOSED
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRecursive() method
JEdit,WITHOUT_CLASSIFICATION,// to notify listeners that any existing // selection has been deactivated
JEdit,WITHOUT_CLASSIFICATION,//{{{ visitBuffers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ split() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ unsplitCurrent() method
JEdit,WITHOUT_CLASSIFICATION,// find first split pane parenting current edit pane
JEdit,WITHOUT_CLASSIFICATION,//{{{ HyperSearchResults constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFileFilter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTreeModel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTree() method
JEdit,WITHOUT_CLASSIFICATION,// C:\AUTOEXEC.BAT
JEdit,WITHOUT_CLASSIFICATION,//{{{ _getFiles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isRecursive() method
JEdit,WITHOUT_CLASSIFICATION,// /etc/passwd
JEdit,WITHOUT_CLASSIFICATION,// End Child node structure evaluated by insureNodesParsed
JEdit,WITHOUT_CLASSIFICATION,// Succeeded.  Cache the resolved method.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getReverseSearch() method
JEdit,WITHOUT_CLASSIFICATION,// Is the method public or are we in accessibility mode?
JEdit,WITHOUT_CLASSIFICATION,// Yes it is.
JEdit,WITHOUT_CLASSIFICATION,//{{{ searchFailed() method
JEdit,WITHOUT_CLASSIFICATION,"/* package-private since they are accessed by inner classes and we	 * want this to be fast */"
JEdit,WITHOUT_CLASSIFICATION,// Found at least one matching method but couldn't use
JEdit,WITHOUT_CLASSIFICATION,// ignore and move on
JEdit,WITHOUT_CLASSIFICATION,// Is this a class?
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) Type */
JEdit,WITHOUT_CLASSIFICATION,// evaluate the args
JEdit,WITHOUT_CLASSIFICATION,// D:\WINDOWS or doesn't contain : at all
JEdit,WITHOUT_CLASSIFICATION,// Get the static This reference from the proto-instance
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToSelectedNode() method
JEdit,WITHOUT_CLASSIFICATION,/*modifiers*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ Getters and setters
JEdit,WITHOUT_CLASSIFICATION,// find the matching super() constructor for the args
JEdit,WITHOUT_CLASSIFICATION,// Are we choosing ourselves recursively through a this() reference?
JEdit,WITHOUT_CLASSIFICATION,// find the matching this() constructor for the args
JEdit,WITHOUT_CLASSIFICATION,//{{{ Match class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResultVisitor interface
JEdit,WITHOUT_CLASSIFICATION,//{{{ setIgnoreCase() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRegexp() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferLoadedVisitor class
JEdit,WITHOUT_CLASSIFICATION,//{{{ addToken() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ readStringArray() method
JEdit,WITHOUT_CLASSIFICATION,"/* 			Find an appropriate constructor.			use declared here to see package and private as well			(there are no inherited constructors to worry about) 		*/"
JEdit,WITHOUT_CLASSIFICATION,// get rid of any edit pane that is a child // of the current edit pane's parent splitter
JEdit,WITHOUT_CLASSIFICATION,//{{{ readMap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ nextTextArea() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createSearchSettingsPanel() method
JEdit,WITHOUT_CLASSIFICATION,// Find the constructor (now in the instance namespace)
JEdit,WITHOUT_CLASSIFICATION,// Wait for buffer to finish loading
JEdit,WITHOUT_CLASSIFICATION,//{{{ writeBooleanArray() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ IMPORT
JEdit,WITHOUT_CLASSIFICATION,"/*         * Now the block's CRC so it is in a known place.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAutoWrap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ readURI() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDocument() method
JEdit,WITHOUT_CLASSIFICATION,// invoke the constructor method from the instanceThis
JEdit,WITHOUT_CLASSIFICATION,//{{{ readBooleanArray() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ hyperSearch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Actions
JEdit,WITHOUT_CLASSIFICATION,// Give the instance space its object import
JEdit,WITHOUT_CLASSIFICATION,/*override*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSearchMatcher() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSmartCaseReplace() method
JEdit,WITHOUT_CLASSIFICATION,// Create the instance namespace
JEdit,WITHOUT_CLASSIFICATION,// Pull out the method signatures with matching names
JEdit,WITHOUT_CLASSIFICATION,// method matches name
JEdit,WITHOUT_CLASSIFICATION,"/*        This method should parallel findMostSpecificMethod()    */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ prevTextArea() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ read() method
JEdit,WITHOUT_CLASSIFICATION,/*overrideNameSpace*/
JEdit,WITHOUT_CLASSIFICATION,// Evaluate the constructor
JEdit,WITHOUT_CLASSIFICATION,// if args we must have constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTokens() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSearchFileSet() method
JEdit,WITHOUT_CLASSIFICATION,// start search from beginning
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSearchFileSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ replace() method
JEdit,WITHOUT_CLASSIFICATION,// make sure start of match is visible
JEdit,WITHOUT_CLASSIFICATION,//{{{ replaceAll() method
JEdit,WITHOUT_CLASSIFICATION,// Wait for the buffer to load
JEdit,WITHOUT_CLASSIFICATION,//{{{ JAR class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVersion() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSplitPane() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToBuffer() method
JEdit,WITHOUT_CLASSIFICATION,/* ignore zero-height splits etc */
JEdit,WITHOUT_CLASSIFICATION,//{{{ replaceInSelection() method
JEdit,WITHOUT_CLASSIFICATION,// search settings
JEdit,WITHOUT_CLASSIFICATION,//{{{ openFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ record() method
JEdit,WITHOUT_CLASSIFICATION,// right?
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeExtension() method
JEdit,WITHOUT_CLASSIFICATION,// unwrap Primitive.Null to null
JEdit,WITHOUT_CLASSIFICATION,// there is always a paramsNode
JEdit,WITHOUT_CLASSIFICATION,// unsafe caching of type here
JEdit,WITHOUT_CLASSIFICATION,// Begin Child node structure evaluated by insureNodesParsed
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTextArea() method
JEdit,WITHOUT_CLASSIFICATION,// only record this if doing a find next
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEditPane() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getViewConfig() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ regexpBeanShellReplace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleError() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ preloadSearchDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ replaceOne() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) FormalParameter */
JEdit,WITHOUT_CLASSIFICATION,// If backups is 1 create ~ file
JEdit,WITHOUT_CLASSIFICATION,//{{{ showSearchDialog() method
JEdit,WITHOUT_CLASSIFICATION,// index of the first throws clause child node
JEdit,WITHOUT_CLASSIFICATION,// might be already selected see above.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSearchDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ match() method
JEdit,WITHOUT_CLASSIFICATION,/*callerInfo*/
JEdit,WITHOUT_CLASSIFICATION,/* fall through */
JEdit,WITHOUT_CLASSIFICATION,//{{{ closeOrKeepDialog() method
JEdit,WITHOUT_CLASSIFICATION,/*shouldn't happen*/
JEdit,WITHOUT_CLASSIFICATION,// why so cute?
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree)*/
JEdit,WITHOUT_CLASSIFICATION,// end stuff that was tacked on for boolean short-circuiting.
JEdit,WITHOUT_CLASSIFICATION,// Unsafe caching of type here. // null (none) Void.TYPE or a Class
JEdit,WITHOUT_CLASSIFICATION,//{{{ createToken() method
JEdit,WITHOUT_CLASSIFICATION,// source is directory or filter field
JEdit,WITHOUT_CLASSIFICATION,// check the next two characters
JEdit,WITHOUT_CLASSIFICATION,// validate that the throws names are class names
JEdit,WITHOUT_CLASSIFICATION,/* replaceBtn */
JEdit,WITHOUT_CLASSIFICATION,/* Focused border color */
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMultiFilePanel() method
JEdit,WITHOUT_CLASSIFICATION,// do nothing - ch already contains correct character
JEdit,WITHOUT_CLASSIFICATION,// get next character
JEdit,WITHOUT_CLASSIFICATION,// prevents us from handling SearchSettingsChanged // as a result of below
JEdit,WITHOUT_CLASSIFICATION,//{{{ AllBufferSet constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ReplaceActionHandler class
JEdit,WITHOUT_CLASSIFICATION,// args is either constructor arguments or array dimensions
JEdit,WITHOUT_CLASSIFICATION,// type is either a class name or a primitive type
JEdit,WITHOUT_CLASSIFICATION,//{{{ createButtonsPanel() method
JEdit,WITHOUT_CLASSIFICATION,// Try regular class
JEdit,WITHOUT_CLASSIFICATION,// so that in the future we don't see streams of // exceptions
JEdit,WITHOUT_CLASSIFICATION,/* force class*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ ButtonActionHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ MyJRadioButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginCacheEntry class
JEdit,WITHOUT_CLASSIFICATION,//{{{ HyperSearchRequest constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ breakPlugin() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ClassDeclaration */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) MethodDeclaration */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) PackageDeclaration */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ImportDeclaration */
JEdit,WITHOUT_CLASSIFICATION,// but we want properties to hang around
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) VariableDeclarator */
JEdit,WITHOUT_CLASSIFICATION,//{{{ searchInSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBuild() method
JEdit,WITHOUT_CLASSIFICATION,/* Persistent markers */
JEdit,WITHOUT_CLASSIFICATION,/* Sort recent file list */
JEdit,WITHOUT_CLASSIFICATION,// (major).(minor).(<99 = preX 99 = final).(bug fix)
JEdit,WITHOUT_CLASSIFICATION,/* Create the plugin table */
JEdit,WITHOUT_CLASSIFICATION,/* Create button panel */
JEdit,WITHOUT_CLASSIFICATION,// to minimise synchronization and stuff like that we only // show a status message at most twice a second
JEdit,WITHOUT_CLASSIFICATION,//{{{ main() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Check for Java 1.3 or later
JEdit,WITHOUT_CLASSIFICATION,// heuristic #2
JEdit,WITHOUT_CLASSIFICATION,//{{{ doHyperSearch() method
JEdit,WITHOUT_CLASSIFICATION,// No need to wrap this debug
JEdit,WITHOUT_CLASSIFICATION,// never mind
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ReturnType */
JEdit,WITHOUT_CLASSIFICATION,// Check for stingy matching on RETokenRepeated
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) PrimitiveType */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) AmbiguousName */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) Assignment */
JEdit,WITHOUT_CLASSIFICATION,// This production is to determine lookahead only.
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) PrimaryExpression */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) PrimarySuffix */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) Literal */
JEdit,WITHOUT_CLASSIFICATION,//{{{ nextMatch() method
JEdit,WITHOUT_CLASSIFICATION,// BACKREFERENCE OPERATOR //  \1 \2 ... \9 // not available if RE_NO_BK_REFS is set
JEdit,WITHOUT_CLASSIFICATION,/*force class*/
JEdit,WITHOUT_CLASSIFICATION,// Is an inner class style object allocation
JEdit,WITHOUT_CLASSIFICATION,// pattern test
JEdit,WITHOUT_CLASSIFICATION,// position variable for pattern start
JEdit,WITHOUT_CLASSIFICATION,// unless we are matching from the start of the buffer // ^ should not match on the beginning of the substring
JEdit,WITHOUT_CLASSIFICATION,// Is it an inner class?
JEdit,WITHOUT_CLASSIFICATION,//{{{ RESearchMatcher constructor
JEdit,WITHOUT_CLASSIFICATION,// Boyer-Moore helper methods
JEdit,WITHOUT_CLASSIFICATION,// work through to class 'this'
JEdit,WITHOUT_CLASSIFICATION,//{{{ Miscellaneous methods
JEdit,WITHOUT_CLASSIFICATION,// MISMATCH: return -1 as defined by API
JEdit,WITHOUT_CLASSIFICATION,//{{{ Token types
JEdit,WITHOUT_CLASSIFICATION,//{{{ lookup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectionColor() method
JEdit,WITHOUT_CLASSIFICATION,// skip the greater of the two distances provided by the // heuristics
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNext() method
JEdit,WITHOUT_CLASSIFICATION,// character mismatch determine how many characters to skip
JEdit,WITHOUT_CLASSIFICATION,// heuristic #1
JEdit,WITHOUT_CLASSIFICATION,// MacOS users expect the app to keep running after all windows // are closed
JEdit,WITHOUT_CLASSIFICATION,// go back to the while loop
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPrev() method
JEdit,WITHOUT_CLASSIFICATION,// used for the delayed evaluation...
JEdit,WITHOUT_CLASSIFICATION,//{{{ setWaitSocket() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIndex() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ generateSkipArray() method
JEdit,WITHOUT_CLASSIFICATION,// Boyer-Moore member fields
JEdit,WITHOUT_CLASSIFICATION,// MATCH: return the position of its first character
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ PROPS
JEdit,WITHOUT_CLASSIFICATION,//{{{ See if the rule's start or end sequence matches here
JEdit,WITHOUT_CLASSIFICATION,//{{{ ref() method
JEdit,WITHOUT_CLASSIFICATION,// unless we are matching to the end of the buffer // $ should not match on the end of the substring
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIgnoreCase() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineContext() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLineContext() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleToken() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Token constructor
JEdit,WITHOUT_CLASSIFICATION,// used to store offsetToXY() results
JEdit,WITHOUT_CLASSIFICATION,// leave these on the stack for Arguments() to handle
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) AllocationExpression */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getKeywords() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getParserRuleSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ TokenMarker constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ regionMatches() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRuleSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ startPluginLater() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Keyword class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSegmentMapKey() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStringMapKey() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMainRuleSet() method
JEdit,WITHOUT_CLASSIFICATION,// buffers retain a reference to the fold handler in // question... and the easiest way to handle fold // handler loading is this...
JEdit,WITHOUT_CLASSIFICATION,// == null before loaded
JEdit,WITHOUT_CLASSIFICATION,//{{{ Set up some instance variables // this is to avoid having to pass around lots and lots of // parameters.
JEdit,WITHOUT_CLASSIFICATION,//{{{ actionsPresentButNotCoreClass() method
JEdit,WITHOUT_CLASSIFICATION,/*superClass*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadCache() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ArrayDimensions */
JEdit,WITHOUT_CLASSIFICATION,"/* * Statement syntax follows. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ generateCache() method
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) #FormalComment( retainComments) */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) SwitchStatement */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) SwitchLabel */
JEdit,WITHOUT_CLASSIFICATION,/*interfaces*/
JEdit,WITHOUT_CLASSIFICATION,/*isInterface*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ check if current character is a word separator
JEdit,WITHOUT_CLASSIFICATION,// move pos to last character of match sequence
JEdit,WITHOUT_CLASSIFICATION,//{{{ check every rule
JEdit,WITHOUT_CLASSIFICATION,//{{{ Mark all remaining characters
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRuleSets() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ check for end of delegate
JEdit,WITHOUT_CLASSIFICATION,// send to specific event handler
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleRule() method
JEdit,WITHOUT_CLASSIFICATION,// the end cannot be a regular expression
JEdit,WITHOUT_CLASSIFICATION,//{{{ SEQ
JEdit,WITHOUT_CLASSIFICATION,//{{{ Some rules can only match in certain locations
JEdit,WITHOUT_CLASSIFICATION,//XXX
JEdit,WITHOUT_CLASSIFICATION,//{{{ Unwind any NO_LINE_BREAK parent delegates
JEdit,WITHOUT_CLASSIFICATION,//{{{ Check for an escape sequence
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) WhileStatement */
JEdit,WITHOUT_CLASSIFICATION,"/*	Do statement is just a While statement with a special hook to execute	at least once.*/"
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ForStatement */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) EnhancedForStatement */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) TypedVariableDeclaration */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) StatementExpressionList */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ThrowStatement */
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) TryStatement */
JEdit,WITHOUT_CLASSIFICATION,// All core AWT listeners
JEdit,WITHOUT_CLASSIFICATION,// All listeners in javax.swing.event as of Swing 1.1
JEdit,WITHOUT_CLASSIFICATION,// handleEvent gets all events
JEdit,WITHOUT_CLASSIFICATION,//{{{ getListModel() method
JEdit,WITHOUT_CLASSIFICATION,// Token was accepted
JEdit,WITHOUT_CLASSIFICATION,/* all printable ASCII characters */
JEdit,WITHOUT_CLASSIFICATION,// First node is the expression on which to sync
JEdit,WITHOUT_CLASSIFICATION,// a DELEGATE attribute on a SEQ changes the // ruleset from the end of the SEQ onwards
JEdit,WITHOUT_CLASSIFICATION,/*returnType*/
JEdit,WITHOUT_CLASSIFICATION,// BSHType will cache the type for us
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEditPane() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadToolBars() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleBufferUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// note that all regexps start with \A so they only // match the start of the string
JEdit,WITHOUT_CLASSIFICATION,// Hashtable implements Map
JEdit,WITHOUT_CLASSIFICATION,// BSHFormalParameters will cache the type for us
JEdit,WITHOUT_CLASSIFICATION,// Arrays incomplete... need to use the array setter
JEdit,WITHOUT_CLASSIFICATION,//{{{ noRememberLast() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getClasses() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ LineContext constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Do digits
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginJAR constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Do keywords
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleTokenWithSpaces() method
JEdit,WITHOUT_CLASSIFICATION,// used for SPAN_REGEXP rules; otherwise null
JEdit,WITHOUT_CLASSIFICATION,/*min*/
JEdit,WITHOUT_CLASSIFICATION,// Hypothetical question: can you have a RE that matches 1 times // 3 times 5 times but not 2 times or 4 times?  Does having // the subexpression back-reference operator allow that?
JEdit,WITHOUT_CLASSIFICATION,//{{{ isClosed() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ clone() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handle any remaining crud
JEdit,WITHOUT_CLASSIFICATION,// only match against regexp if its not all // digits; if all digits no point matching
JEdit,WITHOUT_CLASSIFICATION,//{{{ intern() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ charArraysEqual() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ XModeHandler constructor
JEdit,WITHOUT_CLASSIFICATION,// Do the actual synchronization
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ MARK_PREVIOUS
JEdit,WITHOUT_CLASSIFICATION,// Possible positions for the next repeat to match at
JEdit,WITHOUT_CLASSIFICATION,// Declare variables used in loop
JEdit,WITHOUT_CLASSIFICATION,// try next repeat at all possible positions
JEdit,WITHOUT_CLASSIFICATION,// if none of the possibilities worked out break out of do/while
JEdit,WITHOUT_CLASSIFICATION,// reassign where the next repeat can match
JEdit,WITHOUT_CLASSIFICATION,// increment how many repeats we've successfully found
JEdit,WITHOUT_CLASSIFICATION,// We're greedy but ease off until a true match is found
JEdit,WITHOUT_CLASSIFICATION,// else did not match rest of the tokens try again on smaller sample
JEdit,WITHOUT_CLASSIFICATION,// does this get all?
JEdit,WITHOUT_CLASSIFICATION,// If we fall out no matches.
JEdit,WITHOUT_CLASSIFICATION,//{{{ substitute() method
JEdit,WITHOUT_CLASSIFICATION,// make sure we put the namespace back when we leave.
JEdit,WITHOUT_CLASSIFICATION,// filter nodes
JEdit,WITHOUT_CLASSIFICATION,// zeros
JEdit,WITHOUT_CLASSIFICATION,// statement or embedded block evaluated a return statement
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserActionContext class
JEdit,WITHOUT_CLASSIFICATION,"/* on some Windows versions connections to localhost			 * fail if the network is not running. To avoid			 * confusing newbies with weird error messages log			 * errors that occur while starting the server			 * as NOTICE not ERROR */"
JEdit,WITHOUT_CLASSIFICATION,// Some arbitrary kind of node
JEdit,WITHOUT_CLASSIFICATION,"/*			If the result is a Node eval() it to an object or LHS			(as determined by toLHS)		*/"
JEdit,WITHOUT_CLASSIFICATION,// Type node is passed down the chain for array initializers // which need it under some circumstances
JEdit,WITHOUT_CLASSIFICATION,//{{{ isPlainView() method
JEdit,WITHOUT_CLASSIFICATION,// return LHS or value object as determined by toLHS
JEdit,WITHOUT_CLASSIFICATION,// import the package we're in by default...
JEdit,WITHOUT_CLASSIFICATION,// skip autosave files
JEdit,WITHOUT_CLASSIFICATION,//{{{ openFiles() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ SPAN_REGEXP
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEscapeRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEndOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Major actions
JEdit,WITHOUT_CLASSIFICATION,// chain results to doneIndex
JEdit,WITHOUT_CLASSIFICATION,// Find new doneIndexLast
JEdit,WITHOUT_CLASSIFICATION,// matches after a newline
JEdit,WITHOUT_CLASSIFICATION,// store ConstructorArgs in consArgsVar
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Keywords
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ SPAN
JEdit,WITHOUT_CLASSIFICATION,//{{{ Selection
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ EOL_SPAN_REGEXP
JEdit,WITHOUT_CLASSIFICATION,//{{{ addKeyword() method
JEdit,WITHOUT_CLASSIFICATION,// invoke the ClassGeneratorUtil getConstructorsArgs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintChunkList() method
JEdit,WITHOUT_CLASSIFICATION,// position in REToken.newline
JEdit,WITHOUT_CLASSIFICATION,// Don't match at all if REG_NOTBOL is set.
JEdit,WITHOUT_CLASSIFICATION,// value for end
JEdit,WITHOUT_CLASSIFICATION,// closer to end
JEdit,WITHOUT_CLASSIFICATION,// Allocate more space in the buffer.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Buffer creation methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ Parse command line
JEdit,WITHOUT_CLASSIFICATION,// open initial view?
JEdit,WITHOUT_CLASSIFICATION,// move read position [index] clicks from 'charAt(0)'
JEdit,WITHOUT_CLASSIFICATION,// script to run
JEdit,WITHOUT_CLASSIFICATION,// If we have buffered replace data use it.
JEdit,WITHOUT_CLASSIFICATION,// This is prone to infinite loops if replace string turns out empty.
JEdit,WITHOUT_CLASSIFICATION,//{{{ We need these initializations very early on
JEdit,WITHOUT_CLASSIFICATION,//{{{ getModeName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Try connecting to another running jEdit instance
JEdit,WITHOUT_CLASSIFICATION,//{{{ deactivatePlugin() method
JEdit,WITHOUT_CLASSIFICATION,// push args
JEdit,WITHOUT_CLASSIFICATION,// block until its closed
JEdit,WITHOUT_CLASSIFICATION,//{{{ createEOLSpanRule() method
JEdit,WITHOUT_CLASSIFICATION,// assume for now that next can only be one character
JEdit,WITHOUT_CLASSIFICATION,// Overrides REToken.chain() to optimize for strings
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPluginCache() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setPluginCache() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createRegexpSpanRule() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ SEQ
JEdit,WITHOUT_CLASSIFICATION,//{{{ createSequenceRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Chunk constructor
JEdit,WITHOUT_CLASSIFICATION,// set up after init()
JEdit,WITHOUT_CLASSIFICATION,//{{{ createSpanRule() method
JEdit,WITHOUT_CLASSIFICATION,// see if this is a 4.1-style plugin
JEdit,WITHOUT_CLASSIFICATION,// Note that there is some debate over whether '_' should be included
JEdit,WITHOUT_CLASSIFICATION,// field access
JEdit,WITHOUT_CLASSIFICATION,"/*		Field access .length on array or a method invocation		Must handle toLHS case for each.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Static methods
JEdit,WITHOUT_CLASSIFICATION,// .length on array
JEdit,WITHOUT_CLASSIFICATION,// convert the byte read into a char
JEdit,WITHOUT_CLASSIFICATION,// Package scope constructor is used by RE.getMatchEnumeration()
JEdit,WITHOUT_CLASSIFICATION,// Property style access to Hashtable or Map
JEdit,WITHOUT_CLASSIFICATION,//else
JEdit,WITHOUT_CLASSIFICATION,// no match
JEdit,WITHOUT_CLASSIFICATION,// doesn't happen
JEdit,WITHOUT_CLASSIFICATION,// need to deep clone?
JEdit,WITHOUT_CLASSIFICATION,// cut off alternates
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDockablesURI() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getServicesURI() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createRegexpEOLSpanRule() method
JEdit,WITHOUT_CLASSIFICATION,// Offset in source text where match was tried.  This is zero-based; // the actual position in the source text is given by (offset + anchor).
JEdit,WITHOUT_CLASSIFICATION,// Package scope; used by RE. // used while matching to mark current match position in input // start positions (relative to offset) for each (sub)exp. // end positions for the same // other possibility (to avoid having to use arrays)
JEdit,WITHOUT_CLASSIFICATION,// position in newline
JEdit,WITHOUT_CLASSIFICATION,// The RE constructor uses this to look up the constant for a string
JEdit,WITHOUT_CLASSIFICATION,// Array indices correspond to constants defined above.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNextVisibleLine() method
JEdit,WITHOUT_CLASSIFICATION,// This is the number of subexpressions in this regular expression // with a minimum value of zero.  Returned by getNumSubs()
JEdit,WITHOUT_CLASSIFICATION,// The localized strings are kept in a separate file
JEdit,WITHOUT_CLASSIFICATION,// Retrieves a message from the ResourceBundle
JEdit,WITHOUT_CLASSIFICATION,// internal constructor used for alternation
JEdit,WITHOUT_CLASSIFICATION,// Subexpression index of this token.
JEdit,WITHOUT_CLASSIFICATION,// For use by subclasses
JEdit,WITHOUT_CLASSIFICATION,// The meat of construction
JEdit,WITHOUT_CLASSIFICATION,// This is the case of {x}
JEdit,WITHOUT_CLASSIFICATION,/* update fold visibility map. */
JEdit,WITHOUT_CLASSIFICATION,//{{{ ParserRuleSet constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDigitRegexp() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setHighlightDigits() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDefault() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setNoWordSep() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDigitRegexp() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEscapeRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initChunk() method
JEdit,WITHOUT_CLASSIFICATION,// This is used for {xy} calculations
JEdit,WITHOUT_CLASSIFICATION,//{{{ Static part
JEdit,WITHOUT_CLASSIFICATION,//{{{ SyntaxStyle constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ textAreaDisposed() method
JEdit,WITHOUT_CLASSIFICATION,// don't have chunks longer than 100 characters to avoid slowing things down
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstVisibleLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ releaseDisplayManager() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBackgroundColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFont() method
JEdit,WITHOUT_CLASSIFICATION,// Buffer a token so we can create a TokenRepeated etc.
JEdit,WITHOUT_CLASSIFICATION,// read the next character unit (including backslash escapes)
JEdit,WITHOUT_CLASSIFICATION,// make everything up to here be a branch. create vector if nec.
JEdit,WITHOUT_CLASSIFICATION,// LIST OPERATOR: //  [...] | [^...]
JEdit,WITHOUT_CLASSIFICATION,/* before first visible line */
JEdit,WITHOUT_CLASSIFICATION,//  ---- BeanShell specific stuff hereafter ----  //
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastVisibleLine() method
JEdit,WITHOUT_CLASSIFICATION,"/*		Override this method if you want to customize how the node dumps		out its children.	*/"
JEdit,WITHOUT_CLASSIFICATION,/* last in expanded range */
JEdit,WITHOUT_CLASSIFICATION,//public SimpleNode getParent() { return (SimpleNode)parent; }
JEdit,WITHOUT_CLASSIFICATION,/*key*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ expandAllFolds() method
JEdit,WITHOUT_CLASSIFICATION,// no folds in buffer
JEdit,WITHOUT_CLASSIFICATION,"/*		type = VARIABLE;		this.varName = varName;		this.nameSpace = nameSpace;*/"
JEdit,WITHOUT_CLASSIFICATION,// resolve superclass if any
JEdit,WITHOUT_CLASSIFICATION,/* first in expanded range */
JEdit,WITHOUT_CLASSIFICATION,// 4.2 plugin
JEdit,WITHOUT_CLASSIFICATION,/* prev in expanded range */
JEdit,WITHOUT_CLASSIFICATION,// this line is the start of a fold
JEdit,WITHOUT_CLASSIFICATION,//{{{ Find fold start and end...
JEdit,WITHOUT_CLASSIFICATION,// Get the class body BSHBlock
JEdit,WITHOUT_CLASSIFICATION,//{{{ getScrollLineCount() method
JEdit,WITHOUT_CLASSIFICATION,// Get interfaces
JEdit,WITHOUT_CLASSIFICATION,//{{{ collapseFold() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Expand the fold...
JEdit,WITHOUT_CLASSIFICATION,/* isLineVisible(i) && */
JEdit,WITHOUT_CLASSIFICATION,//{{{ expandFold() method
JEdit,WITHOUT_CLASSIFICATION,// we need a different value of initialFoldLevel here!
JEdit,WITHOUT_CLASSIFICATION,// Check for initial caret negation
JEdit,WITHOUT_CLASSIFICATION,// Check for leading right bracket literal
JEdit,WITHOUT_CLASSIFICATION,// Create a new RETokenOneOf
JEdit,WITHOUT_CLASSIFICATION,// if we narrowed to a single collapsed fold
JEdit,WITHOUT_CLASSIFICATION,// Set the variable in namespace according to localVar flag
JEdit,WITHOUT_CLASSIFICATION,//{{{ activateIfNecessary() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateWrapSettings() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ narrow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ expandFolds() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fvmget() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ changed() method
JEdit,WITHOUT_CLASSIFICATION,// for thread safety
JEdit,WITHOUT_CLASSIFICATION,// Enable/Disable tooltips
JEdit,WITHOUT_CLASSIFICATION,//{{{ reset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fvmput() method
JEdit,WITHOUT_CLASSIFICATION,// // Listener objects //
JEdit,WITHOUT_CLASSIFICATION,//{{{ showLineRange() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FirstLine class
JEdit,WITHOUT_CLASSIFICATION,// ScrollLineCount.changed() does the same // thing
JEdit,WITHOUT_CLASSIFICATION,// package-private members // package-private not private for speedy access by inner classes
JEdit,WITHOUT_CLASSIFICATION,"/*         * Now a single bit indicating randomisation.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ physUp() method // scroll up by physical line amount
JEdit,WITHOUT_CLASSIFICATION,// <Esc> closes a floating window
JEdit,WITHOUT_CLASSIFICATION,// force the fold levels to be // updated.
JEdit,WITHOUT_CLASSIFICATION,/* collapse 2 */
JEdit,WITHOUT_CLASSIFICATION,// we're removing from before // the first visible to after // the last visible
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollUp() method // scroll up by screen line amount
JEdit,WITHOUT_CLASSIFICATION,//{{{ getText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollDown() method // scroll down by screen line amount
JEdit,WITHOUT_CLASSIFICATION,// not a comment // subexpression
JEdit,WITHOUT_CLASSIFICATION,//{{{ ensurePhysicalLineIsVisible() method
JEdit,WITHOUT_CLASSIFICATION,// update visible lines
JEdit,WITHOUT_CLASSIFICATION,// START OF LINE OPERATOR //  ^
JEdit,WITHOUT_CLASSIFICATION,// END OF LINE OPERATOR //  $
JEdit,WITHOUT_CLASSIFICATION,// will be handled later. // see comments at the end of // transactionComplete().
JEdit,WITHOUT_CLASSIFICATION,// must be before the below call // so that the chunk cache is not // updated with an invisible first // line (see above)
JEdit,WITHOUT_CLASSIFICATION,// must update screen line counts before we call // _notifyScreenLineChanges() since that calls // updateScrollBars() which needs valid info
JEdit,WITHOUT_CLASSIFICATION,//{{{ doDelayedUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// install man page
JEdit,WITHOUT_CLASSIFICATION,// when painting the last line of // a buffer Buffer.isFoldStart() // doesn't call getFoldLevel() // hence the foldLevelChanged() // event might not be sent for the // previous line.
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleExpanded() method
JEdit,WITHOUT_CLASSIFICATION,// pass along target error
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBorder() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ caretAutoScroll() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Initialize settings directory
JEdit,WITHOUT_CLASSIFICATION,// Write a warning message:
JEdit,WITHOUT_CLASSIFICATION,//{{{ Get things rolling
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintInvalidLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMatch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MouseActions constructor
JEdit,WITHOUT_CLASSIFICATION,// fill the background
JEdit,WITHOUT_CLASSIFICATION,//{{{ addExtension() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Gutter constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldColor() method
JEdit,WITHOUT_CLASSIFICATION,// skip CR
JEdit,WITHOUT_CLASSIFICATION,"/*	 * JComponent.setBorder(Border) is overridden here to cache the left	 * inset of the border (if any) to avoid having to fetch it during every	 * repaint.	 */"
JEdit,WITHOUT_CLASSIFICATION,"/*	 * Component.getPreferredSize() is overridden here to support the	 * collapsing behavior.	 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLineNumberAlignment() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHighlightedForeground() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ noRepeat() method
JEdit,WITHOUT_CLASSIFICATION,"/*         * Finally block's contents proper.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCurrentLineForeground() method
JEdit,WITHOUT_CLASSIFICATION,/*index*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCurrentLineForeground() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setHighlightedForeground() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ mouseEntered() method
JEdit,WITHOUT_CLASSIFICATION,// If no other constructors generate a default constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setStructureHighlightColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isCurrentLineHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHighlightInterval() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCurrentLineHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setStructureHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setExpanded() method
JEdit,WITHOUT_CLASSIFICATION,// Read string of digits
JEdit,WITHOUT_CLASSIFICATION,//{{{ mouseExited() method
JEdit,WITHOUT_CLASSIFICATION,// Special case for EQ on two wrapper objects
JEdit,WITHOUT_CLASSIFICATION,//{{{ isBlockCaretEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setStyles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Paint fold triangles
JEdit,WITHOUT_CLASSIFICATION,// draw |^
JEdit,WITHOUT_CLASSIFICATION,/*value*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCaretColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isStructureHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMultipleSelectionColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFoldLineStyle() method
JEdit,WITHOUT_CLASSIFICATION,// assumed this is called after a font render context is set up. // changing font render context settings without a setStyles() // call will not reset cached monospaced font info.
JEdit,WITHOUT_CLASSIFICATION,"/*			Are both the lhs and rhs either wrappers or primitive values?			do binary op		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ isLineHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineHighlightColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isFractionalFontMetricsEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// START OF STRING OPERATOR //  \A if RE_STRING_ANCHORS is set
JEdit,WITHOUT_CLASSIFICATION,//{{{ isWrapGuidePainted() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Load the global catalog
JEdit,WITHOUT_CLASSIFICATION,//{{{ unloadPluginJARWithDialog() method
JEdit,WITHOUT_CLASSIFICATION,// dubious? //setFirstLine(0);
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDependentPlugins() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFontRenderContext() method
JEdit,WITHOUT_CLASSIFICATION,// create dummy catalog
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFont() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExtensions() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateRenderingHints() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPlugin() method
JEdit,WITHOUT_CLASSIFICATION,"/* Try to guess the eventual size to avoid unnecessary		 * copying */"
JEdit,WITHOUT_CLASSIFICATION,// should try to use this as little as possible.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Paint line highlight and collapsed fold highlight
JEdit,WITHOUT_CLASSIFICATION,//{{{ PaintLineBackground class
JEdit,WITHOUT_CLASSIFICATION,// minimise access$ methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCaretBlinkEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDisplayManager() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getClassLoader() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkDependencies() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PaintSelection class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Add some event listeners
JEdit,WITHOUT_CLASSIFICATION,//{{{ PaintText class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Initialize the GUI
JEdit,WITHOUT_CLASSIFICATION,//{{{ PaintCaret class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBrowserActionSet() method
JEdit,WITHOUT_CLASSIFICATION,// NON-DIGIT OPERATOR //  \D
JEdit,WITHOUT_CLASSIFICATION,// NEWLINE ESCAPE //  \n
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActions() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPainter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setQuickCopyEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// some plugins add stuff in a "right-hand" gutter
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getGutter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getElectricScroll() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isQuickCopyEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDragAndDropCallback() method
JEdit,WITHOUT_CLASSIFICATION,// make all buttons the same size
JEdit,WITHOUT_CLASSIFICATION,// prev and next buttons are on the right
JEdit,WITHOUT_CLASSIFICATION,//{{{ Get ready
JEdit,WITHOUT_CLASSIFICATION,//{{{ getScreenLineStartOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDragInProgress() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setHorizontalOffset() method
JEdit,WITHOUT_CLASSIFICATION,// cancel button goes on far left
JEdit,WITHOUT_CLASSIFICATION,// unsafe caching of types
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollDownLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBuiltInActionSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollUpLine() method
JEdit,WITHOUT_CLASSIFICATION,// END OF STRING OPERATOR //  \Z
JEdit,WITHOUT_CLASSIFICATION,// not a special character
JEdit,WITHOUT_CLASSIFICATION,// end while
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeScrollListener() method
JEdit,WITHOUT_CLASSIFICATION,// Trivial case
JEdit,WITHOUT_CLASSIFICATION,// Overrides REToken.setUncle
JEdit,WITHOUT_CLASSIFICATION,// to deal with empty subexpressions
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineLength() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Scroll vertically
JEdit,WITHOUT_CLASSIFICATION,//{{{ Convenience methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateScreenLineRange() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Initialize server
JEdit,WITHOUT_CLASSIFICATION,//{{{ getScreenLineOfOffset() method
JEdit,WITHOUT_CLASSIFICATION,// Buffer sort
JEdit,WITHOUT_CLASSIFICATION,//{{{ Initialize Java 1.4-specific code
JEdit,WITHOUT_CLASSIFICATION,// Give the static space its class static import // important to do this after all classes are defined
JEdit,WITHOUT_CLASSIFICATION,//{{{ offsetToXY() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateLine() method
JEdit,WITHOUT_CLASSIFICATION,// to hide line highlight if selections are being added later on
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineStartOffset() method
JEdit,WITHOUT_CLASSIFICATION,// handle pathological case of zero-length match
JEdit,WITHOUT_CLASSIFICATION,// Note the start of this subexpression
JEdit,WITHOUT_CLASSIFICATION,//{{{ addLeftOfScrollBar() method
JEdit,WITHOUT_CLASSIFICATION,/*declaringNameSpace*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectToMatchingBracket() method
JEdit,WITHOUT_CLASSIFICATION,// Stop all plugins
JEdit,WITHOUT_CLASSIFICATION,// Test for a match and push the character // back if the match fails.
JEdit,WITHOUT_CLASSIFICATION,//Object r = checkOnly ? VALID_CAST :
JEdit,WITHOUT_CLASSIFICATION,// Interpreter has no input stream use eval() only // Interpreter has no input stream use eval() only // Interpreter has a user print prompts etc.
JEdit,WITHOUT_CLASSIFICATION,// Delegate to the static method
JEdit,WITHOUT_CLASSIFICATION,// Try absolute
JEdit,WITHOUT_CLASSIFICATION,//{{{ extendSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _loadClass() method
JEdit,WITHOUT_CLASSIFICATION,// Scan forward matching that bracket
JEdit,WITHOUT_CLASSIFICATION,//{{{ resizeSelection() method
JEdit,WITHOUT_CLASSIFICATION,// always add markers on selected lines
JEdit,WITHOUT_CLASSIFICATION,// Append character to buffer if needed
JEdit,WITHOUT_CLASSIFICATION,/* Helper function for constructor */
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectedText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionAtOffset() method
JEdit,WITHOUT_CLASSIFICATION,// didn't match up
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCaretPosition() method
JEdit,WITHOUT_CLASSIFICATION,// Precondition: input[index-1] == '{' minMax != null
JEdit,WITHOUT_CLASSIFICATION,//{{{ isMultipleSelectionEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextParagraph() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ moveCaretPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCaretPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToFirstVisibleLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextBracket() method
JEdit,WITHOUT_CLASSIFICATION,// UCS-2 with a byte-order marker. // 0xff 0xfe: UCS-2 little-endian (21)
JEdit,WITHOUT_CLASSIFICATION,// Even if reallyExit is false we still exit properly // if background mode is off
JEdit,WITHOUT_CLASSIFICATION,// Can't call it getClass()
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeCaretListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToStartOfWhiteSpace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextPage() method
JEdit,WITHOUT_CLASSIFICATION,// We know min and max now and they are valid.
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToEndOfLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevParagraph() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevWord() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Markers
JEdit,WITHOUT_CLASSIFICATION,//{{{ showGoToLineDialog() method
JEdit,WITHOUT_CLASSIFICATION,// return the index following the '}'
JEdit,WITHOUT_CLASSIFICATION,//classStaticNameSpace.importClass( fqClassName.replace('$''.') );
JEdit,WITHOUT_CLASSIFICATION,//{{{ deleteToStartOfLine() method
JEdit,WITHOUT_CLASSIFICATION,// do we lose index info?
JEdit,WITHOUT_CLASSIFICATION,// value error shouldn't happen
JEdit,WITHOUT_CLASSIFICATION,// match was successful
JEdit,WITHOUT_CLASSIFICATION,"/*		If we want to support multiple commands in the command path we need to		change this to not throw the exception.	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMultipleSelectionEnabled() method
JEdit,WITHOUT_CLASSIFICATION,/*strictJava*/
JEdit,WITHOUT_CLASSIFICATION,// check if the user entered a bracket
JEdit,WITHOUT_CLASSIFICATION,//{{{ deleteLine() method
JEdit,WITHOUT_CLASSIFICATION,// Set the static bsh This callback
JEdit,WITHOUT_CLASSIFICATION,//{{{ deleteToEndOfLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ toggleMultipleSelectionEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ deleteWord() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ toUpperCase() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCachePath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserColorsOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,// The new length is <= the old one.
JEdit,WITHOUT_CLASSIFICATION,// try each one that matched
JEdit,WITHOUT_CLASSIFICATION,// toggle marker on caret line
JEdit,WITHOUT_CLASSIFICATION,// import the unq name into parent
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToParentFold() method
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // Utility routines. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,// Generate the type for our class
JEdit,WITHOUT_CLASSIFICATION,//{{{ toLowerCase() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectFold() method
JEdit,WITHOUT_CLASSIFICATION,//bcm.doneDefiningClass( fqClassName );
JEdit,WITHOUT_CLASSIFICATION,//{{{ showWordCountDialog() method
JEdit,WITHOUT_CLASSIFICATION,// if debug write out the class file to debugClasses directory
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRightClickPopupEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertTabAndIndent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Right click popup
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectionStart() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ View constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeLeftOfScrollBar() method
JEdit,WITHOUT_CLASSIFICATION,"/*				Try to squeltch the native code stack trace if the exception				was caused by a reflective call back into the bsh interpreter				(e.g. eval() or source()			*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeEntry() method
JEdit,WITHOUT_CLASSIFICATION,/*bubble up if allowed*/
JEdit,WITHOUT_CLASSIFICATION,// Start with a little cheat.  Most of // the time the white space will fall // within the current read buffer; if // not then fall through.
JEdit,WITHOUT_CLASSIFICATION,// Evaluate any inner class class definitions in the block  // effectively recursively call this method for contained classes first
JEdit,WITHOUT_CLASSIFICATION,// this does the "trick" to eliminate blank space at the end
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFocusCycleRoot() method
JEdit,WITHOUT_CLASSIFICATION,"/*		Generate a branch of the constructor switch.  This method is called by		generateConstructorSwitch.		The code generated by this method assumes that the argument array is 		on the stack.	*/"
JEdit,WITHOUT_CLASSIFICATION,// OK the cheat didn't work; start over // and do it by the book.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getColorProperty() method
JEdit,WITHOUT_CLASSIFICATION,// left == default case
JEdit,WITHOUT_CLASSIFICATION,// XXX //e.printStackTrace();
JEdit,WITHOUT_CLASSIFICATION,//{{{ isOverwriteEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// handled by RE
JEdit,WITHOUT_CLASSIFICATION,// true for the constant defined syntaxes
JEdit,WITHOUT_CLASSIFICATION,// If backups > 1 move old ~n~ files create ~1~ file
JEdit,WITHOUT_CLASSIFICATION,// impl.
JEdit,WITHOUT_CLASSIFICATION,// Define syntaxes
JEdit,WITHOUT_CLASSIFICATION,/* delete a backup created using above method */
JEdit,WITHOUT_CLASSIFICATION,"/* Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS	 replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added. */"
JEdit,WITHOUT_CLASSIFICATION,/* There is no official Perl spec but here's a "best guess" */
JEdit,WITHOUT_CLASSIFICATION,// except for '{' apparently
JEdit,WITHOUT_CLASSIFICATION,// while more labels or blocks and haven't hit return control
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionStart() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ activatePlugin() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ swapMarkerAndCaret() method
JEdit,WITHOUT_CLASSIFICATION,/* private */
JEdit,WITHOUT_CLASSIFICATION,// if label is default or equals switchVal
JEdit,WITHOUT_CLASSIFICATION,// skip nodes until next label
JEdit,WITHOUT_CLASSIFICATION,//{{{ Property methods
JEdit,WITHOUT_CLASSIFICATION,// generate the default branch of switch
JEdit,WITHOUT_CLASSIFICATION,// eval it
JEdit,WITHOUT_CLASSIFICATION,// get the first label
JEdit,WITHOUT_CLASSIFICATION,// first label
JEdit,WITHOUT_CLASSIFICATION,// Evaluate the defined dimensions of the array
JEdit,WITHOUT_CLASSIFICATION,//{{{ addTopComponent() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Handle $
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBufferSwitcher() method
JEdit,WITHOUT_CLASSIFICATION,// \d\D\w\W\s\S
JEdit,WITHOUT_CLASSIFICATION,// Get the string of enumerated values // if necessary.
JEdit,WITHOUT_CLASSIFICATION,/*leave null*/
JEdit,WITHOUT_CLASSIFICATION,// Make a hash of the interface hashcodes in order to cache them
JEdit,WITHOUT_CLASSIFICATION,// fill in definedDimensions [] lengths
JEdit,WITHOUT_CLASSIFICATION,// classExists caches the tests for us
JEdit,WITHOUT_CLASSIFICATION,"/*					Note: do *not* change this to 					BshClassManager plainClassForName() or equivalent.					This class must not touch any other bsh classes.				*/"
JEdit,WITHOUT_CLASSIFICATION,// retControl.returnPoint is the Node of the return statement
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // Error reporting. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,// These are necessary to let us test synchronization from scripts
JEdit,WITHOUT_CLASSIFICATION,/*@bgen(jjtree) ArrayInitializer */
JEdit,WITHOUT_CLASSIFICATION,// Optimization: check if anchor + minimumLength > length
JEdit,WITHOUT_CLASSIFICATION,// a default hashCode()
JEdit,WITHOUT_CLASSIFICATION,// can't cast void to anything
JEdit,WITHOUT_CLASSIFICATION,// Create a new REMatch to hold results
JEdit,WITHOUT_CLASSIFICATION,// // Flags for reading literals. //
JEdit,WITHOUT_CLASSIFICATION,// The canonical file name is also absolute. // No need for getAbsolutePath() here...
JEdit,WITHOUT_CLASSIFICATION,//{{{ Activate plugins that must be activated at startup
JEdit,WITHOUT_CLASSIFICATION,//{{{ Run script specified with -run= parameter
JEdit,WITHOUT_CLASSIFICATION,// Open files create the view and hide the splash screen.
JEdit,WITHOUT_CLASSIFICATION,"/*                If idealMatch fits targetMatch and this is the first match 				or targetMatch is more specific than the best match make it 				the new best match.            */"
JEdit,WITHOUT_CLASSIFICATION,// TAB ESCAPE //  \t
JEdit,WITHOUT_CLASSIFICATION,// not sure if this is correct for OpenVMS.
JEdit,WITHOUT_CLASSIFICATION,//{{{ fileToClass() method
JEdit,WITHOUT_CLASSIFICATION,// XXX
JEdit,WITHOUT_CLASSIFICATION,"/*	End methods for interacting with Parser */"
JEdit,WITHOUT_CLASSIFICATION,// If not found and there are arguments to match - // Look for an overloaded assignable match // (First find the method then find accessible version of it)
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeTopComponent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isRectangularSelectionEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//dockMenu.addItem(new NSMenuItem().separatorItem()); //dockMenu.addItem(miMac);
JEdit,WITHOUT_CLASSIFICATION,// // Buffer for parsed character data. //
JEdit,WITHOUT_CLASSIFICATION,// // Buffer for parsed names. //
JEdit,WITHOUT_CLASSIFICATION,"/*					We get stuck in infinite loops here when unicode escapes					fail.  Must re-init the char stream reader 					(ASCII_UCodeESC_CharStream.java)				*/"
JEdit,WITHOUT_CLASSIFICATION,// find the java method
JEdit,WITHOUT_CLASSIFICATION,// buffers retain a reference to the fold handler in // question... and the easiest way to handle fold // handler unloading is this...
JEdit,WITHOUT_CLASSIFICATION,// while in list // Out of list index is one past ']'
JEdit,WITHOUT_CLASSIFICATION,// default for plugins that don't specify this property (ie // 4.1-style plugins) is to load them on startup
JEdit,WITHOUT_CLASSIFICATION,// number of child nodes
JEdit,WITHOUT_CLASSIFICATION,// wrap the exception in a TargetException to propogate it up
JEdit,WITHOUT_CLASSIFICATION,// each JAR file listed in the plugin's jars property // needs to know that we need them
JEdit,WITHOUT_CLASSIFICATION,// // Maintain a count of errors. //
JEdit,WITHOUT_CLASSIFICATION,// this will be the current parse character (pattern[index])
JEdit,WITHOUT_CLASSIFICATION,// fixes the hang that can occur if we 'save as' to a // new filename which requires re-sorting
JEdit,WITHOUT_CLASSIFICATION,// notify clients with -wait
JEdit,WITHOUT_CLASSIFICATION,// Buffers
JEdit,WITHOUT_CLASSIFICATION,// Recent Buffers
JEdit,WITHOUT_CLASSIFICATION,// Recent Directories
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferMenu class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ShowRecentDirMenuItem class
JEdit,WITHOUT_CLASSIFICATION,/*WIDE*/
JEdit,WITHOUT_CLASSIFICATION,// Arguments
JEdit,WITHOUT_CLASSIFICATION,/*paramNames*/
JEdit,WITHOUT_CLASSIFICATION,// Get back to caller namespace
JEdit,WITHOUT_CLASSIFICATION,// Need to scrape a value from the last line?
JEdit,WITHOUT_CLASSIFICATION,// this must be in reverse order so that modes from the user // catalog get checked first!
JEdit,WITHOUT_CLASSIFICATION,// XThis.this refers to the enclosing class instance
JEdit,WITHOUT_CLASSIFICATION,// finaly block
JEdit,WITHOUT_CLASSIFICATION,// unwrap the target error
JEdit,WITHOUT_CLASSIFICATION,// Found match execute catch block
JEdit,WITHOUT_CLASSIFICATION,// Begin constructors
JEdit,WITHOUT_CLASSIFICATION,/*interp*/
JEdit,WITHOUT_CLASSIFICATION,//Interpreter.debug("No class manager namespace:" +this);
JEdit,WITHOUT_CLASSIFICATION,// we reuse the 'pp' vector to save time
JEdit,WITHOUT_CLASSIFICATION,// does the variable already exist?
JEdit,WITHOUT_CLASSIFICATION,// unwrap
JEdit,WITHOUT_CLASSIFICATION,// Apply most specific signature matching
JEdit,WITHOUT_CLASSIFICATION,/*object*/
JEdit,WITHOUT_CLASSIFICATION,// Check the cache
JEdit,WITHOUT_CLASSIFICATION,// These do not change during evaluation
JEdit,WITHOUT_CLASSIFICATION,// On Windows and MacOS path names are case insensitive
JEdit,WITHOUT_CLASSIFICATION,// number of times eval hit 'this.caller'
JEdit,WITHOUT_CLASSIFICATION,// End Cached result structures
JEdit,WITHOUT_CLASSIFICATION,"/* 			Some kind of field access?		*/"
JEdit,WITHOUT_CLASSIFICATION,// Allow getSuper() to through BlockNameSpace to the method's super
JEdit,WITHOUT_CLASSIFICATION,// Find target object or class identifier
JEdit,WITHOUT_CLASSIFICATION,// It's a class
JEdit,WITHOUT_CLASSIFICATION,// return null; ???
JEdit,WITHOUT_CLASSIFICATION,//{{{ isSupportedEncoding() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionEndLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getComponent() method
JEdit,WITHOUT_CLASSIFICATION,// // Begin methods which simply delegate to our parent (enclosing scope)  //
JEdit,WITHOUT_CLASSIFICATION,/* Pushes a node on to the stack. */
JEdit,WITHOUT_CLASSIFICATION,// Unwrap primitives
JEdit,WITHOUT_CLASSIFICATION,//{{{ select() method
JEdit,WITHOUT_CLASSIFICATION,/*|| returnType == null*/
JEdit,WITHOUT_CLASSIFICATION,// should check to disallow continue here?
JEdit,WITHOUT_CLASSIFICATION,//{{{ isMacOS() method
JEdit,WITHOUT_CLASSIFICATION,// we don't want duplicate entries // in the kill ring
JEdit,WITHOUT_CLASSIFICATION,/* can't happen? */
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserCommandsMenu constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserHandler class
JEdit,WITHOUT_CLASSIFICATION,//String filename = filenameField.getText();
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFSBrowser constructor
JEdit,WITHOUT_CLASSIFICATION,// unknown value??!!!
JEdit,WITHOUT_CLASSIFICATION,//{{{ delete() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferIORequest constructor
JEdit,WITHOUT_CLASSIFICATION,// only true if the file size is known
JEdit,WITHOUT_CLASSIFICATION,// Otherwise we found a \n // that follows some other // character hence we have // a Unix file
JEdit,WITHOUT_CLASSIFICATION,// This is i+1 to take the // trailing \n into account
JEdit,WITHOUT_CLASSIFICATION,//{{{ endCompoundEdit() method
JEdit,WITHOUT_CLASSIFICATION,// Chop trailing newline and/or ^Z (if any)
JEdit,WITHOUT_CLASSIFICATION,//{{{ readMarkers() method
JEdit,WITHOUT_CLASSIFICATION,// used in insert()
JEdit,WITHOUT_CLASSIFICATION,// buffer has been saved while we // were waiting.
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLimit() method
JEdit,WITHOUT_CLASSIFICATION,/* nothing done between begin/end calls */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMergeEdit() method
JEdit,WITHOUT_CLASSIFICATION,// limitations...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldHandler() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ moveGap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CompletionList class
JEdit,WITHOUT_CLASSIFICATION,// Recursively adds our key listener to sub-components
JEdit,WITHOUT_CLASSIFICATION,// do nothing //}}}
JEdit,WITHOUT_CLASSIFICATION,// figure out what constitutes a word character and what // doesn't
JEdit,WITHOUT_CLASSIFICATION,//{{{ setText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireActionPerformed() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectedColor() method
JEdit,WITHOUT_CLASSIFICATION,// remove empty category branches
JEdit,WITHOUT_CLASSIFICATION,// this might be a bit slow if __char__ occurs a lot
JEdit,WITHOUT_CLASSIFICATION,/* hasFocus */
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadDockableWindows() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCachedDockableActionFlags() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ OpenAction class
JEdit,WITHOUT_CLASSIFICATION,/* nothing to do */
JEdit,WITHOUT_CLASSIFICATION,//{{{ GrabKeyDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// eg trying to bind C+e if C+e is a prefix
JEdit,WITHOUT_CLASSIFICATION,// Save settings to disk
JEdit,WITHOUT_CLASSIFICATION,// get rid of this dialog if necessary
JEdit,WITHOUT_CLASSIFICATION,//{{{ PaneNameRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Encoding
JEdit,WITHOUT_CLASSIFICATION,//{{{ Tab size
JEdit,WITHOUT_CLASSIFICATION,/* on MacOS A+ can be user input */
JEdit,WITHOUT_CLASSIFICATION,/* Log.log(Log.ERRORthis"Using deprecated Toolkit.getFontList()"); */
JEdit,WITHOUT_CLASSIFICATION,//{{{ RotatedTextIcon constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ showDockable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ HistoryModel constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ BeanShellAction constructor
JEdit,WITHOUT_CLASSIFICATION,"/* don't show loading msg because we won't				   receive a propertyChanged */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ Result class
JEdit,WITHOUT_CLASSIFICATION,// user asks to remove non-existent
JEdit,WITHOUT_CLASSIFICATION,//{{{ EnhancedCheckBoxMenuItem constructor
JEdit,WITHOUT_CLASSIFICATION,/* Fractional font metrics */
JEdit,WITHOUT_CLASSIFICATION,/* Caret color caret blink block caret */
JEdit,WITHOUT_CLASSIFICATION,/* Electric borders */
JEdit,WITHOUT_CLASSIFICATION,// Old API
JEdit,WITHOUT_CLASSIFICATION,//{{{ IconCellRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleEditor class
JEdit,WITHOUT_CLASSIFICATION,/* Text color */
JEdit,WITHOUT_CLASSIFICATION,/* Text font */
JEdit,WITHOUT_CLASSIFICATION,/* Marker highlight */
JEdit,WITHOUT_CLASSIFICATION,/* Current line highlight */
JEdit,WITHOUT_CLASSIFICATION,/* Edit mode */
JEdit,WITHOUT_CLASSIFICATION,/* Wrap */
JEdit,WITHOUT_CLASSIFICATION,/* Rect select */
JEdit,WITHOUT_CLASSIFICATION,/* Memory foreground color */
JEdit,WITHOUT_CLASSIFICATION,/* Middle mouse button click pastes % register */
JEdit,WITHOUT_CLASSIFICATION,/* Gutter mouse actions */
JEdit,WITHOUT_CLASSIFICATION,// checkbox
JEdit,WITHOUT_CLASSIFICATION,// proxy username
JEdit,WITHOUT_CLASSIFICATION,//{{{ createWindowTableScroller() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createWindowModel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ WindowCompare class
JEdit,WITHOUT_CLASSIFICATION,// initialize the jEdit branch of the options tree
JEdit,WITHOUT_CLASSIFICATION,/* Download mirror */
JEdit,WITHOUT_CLASSIFICATION,//{{{ DownloadMirrorsThread class
JEdit,WITHOUT_CLASSIFICATION,/* Update mirror list */
JEdit,WITHOUT_CLASSIFICATION,//{{{ AbbrevsOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ SingleSelectionModel class
JEdit,WITHOUT_CLASSIFICATION,/* Ignore case when sorting */
JEdit,WITHOUT_CLASSIFICATION,/* Default directory */
JEdit,WITHOUT_CLASSIFICATION,/* Double-click close */
JEdit,WITHOUT_CLASSIFICATION,/* Look and feel */
JEdit,WITHOUT_CLASSIFICATION,/* Use jEdit colors in all text components */
JEdit,WITHOUT_CLASSIFICATION,/* Decorate dialogs with look and feel (JDK 1.4 only) */
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFileFilter() method
JEdit,WITHOUT_CLASSIFICATION,/* Line separator */
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateMultiStatus() method
JEdit,WITHOUT_CLASSIFICATION,// do nothing if clicked "foo (showing n occurrences in m files)"
JEdit,WITHOUT_CLASSIFICATION,//{{{ RemoveTreeNodeAction class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResultCellRenderer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ResultCellRenderer class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRegexp() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setAutoWrap() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setBeanShellReplace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSearchMatcher() method
JEdit,WITHOUT_CLASSIFICATION,/* Don't do this when playing a macro cos it's annoying */
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateMaxHorizontalScrollWidth() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _replace() method
JEdit,WITHOUT_CLASSIFICATION,// in case one of the above fails we still want to // clear these flags.
JEdit,WITHOUT_CLASSIFICATION,//{{{ SearchDialog constructor
JEdit,WITHOUT_CLASSIFICATION,// buttons
JEdit,WITHOUT_CLASSIFICATION,//{{{ getElement() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BoyerMooreSearchMatcher constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ generateSuffixArray() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ stringToToken() method
JEdit,WITHOUT_CLASSIFICATION,// ALL
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ SPAN EOL_SPAN
JEdit,WITHOUT_CLASSIFICATION,// Reset the timeout
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ RULES
JEdit,WITHOUT_CLASSIFICATION,//{{{ PROPERTY
JEdit,WITHOUT_CLASSIFICATION,// only paint visible chunks
JEdit,WITHOUT_CLASSIFICATION,//{{{ Paint token background color if necessary
JEdit,WITHOUT_CLASSIFICATION,//{{{ offsetToX() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPositions() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Position match hints
JEdit,WITHOUT_CLASSIFICATION,// FALL THROUGH TO DEFAULT CASE!!!
JEdit,WITHOUT_CLASSIFICATION,"/*		object is a non-null and non-void Primitive type	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSetName() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHighlightDigits() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNoWordSep() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setCharWidth() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ canMerge() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createChunk() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ merge() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _notifyScreenLineChanges() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCharWidth() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isStructureHighlightVisible() method
JEdit,WITHOUT_CLASSIFICATION,/* beyond last visible line */
JEdit,WITHOUT_CLASSIFICATION,/* equal to last visible line */
JEdit,WITHOUT_CLASSIFICATION,/* next in expanded range */
JEdit,WITHOUT_CLASSIFICATION,// scan backwards looking for the start
JEdit,WITHOUT_CLASSIFICATION,// Collapse the fold...
JEdit,WITHOUT_CLASSIFICATION,//{{{ fvmreset() method
JEdit,WITHOUT_CLASSIFICATION,// important: not lineMgr.getScreenLineCount()
JEdit,WITHOUT_CLASSIFICATION,//{{{ Debug code
JEdit,WITHOUT_CLASSIFICATION,//{{{ resize selections if necessary
JEdit,WITHOUT_CLASSIFICATION,"/* both have same visibility; just remove			 * anything in between. */"
JEdit,WITHOUT_CLASSIFICATION,/* shift */
JEdit,WITHOUT_CLASSIFICATION,/* update */
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateBorder() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectMatch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionForEvent() method
JEdit,WITHOUT_CLASSIFICATION,// if buffer is loading don't paint anything
JEdit,WITHOUT_CLASSIFICATION,//{{{ Highlight class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setHighlightInterval() method
JEdit,WITHOUT_CLASSIFICATION,"/*	 * JComponent.setFont(Font) is overridden here to cache the baseline for	 * the font. This avoids having to get the font metrics during every	 * repaint.	 */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ isMarkerHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handle actions
JEdit,WITHOUT_CLASSIFICATION,//{{{ Paint line numbers
JEdit,WITHOUT_CLASSIFICATION,//{{{ Determine action
JEdit,WITHOUT_CLASSIFICATION,/* && e.getX() >= getWidth() - borderWidth * 2 */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStyles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCaretColor() method
JEdit,WITHOUT_CLASSIFICATION,// draw |_
JEdit,WITHOUT_CLASSIFICATION,//{{{ getWrapGuideColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMultipleSelectionColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLineHighlightEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFractionalFontMetricsEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEOLMarkersPainted() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFontMetrics() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PaintWrapGuide class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setElectricScroll() method
JEdit,WITHOUT_CLASSIFICATION,// Skip lines beyond EOF
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDragEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollUpPage() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDragAndDropCallback() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Debugging code
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVisibleLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFirstLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addScrollListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollToCaret() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollTo() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ xyToOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateLineRange() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isEditable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectNone() method
JEdit,WITHOUT_CLASSIFICATION,// Scan backwards trying to find a bracket
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectWord() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectBlock() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invertSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeFromSelection() method
JEdit,WITHOUT_CLASSIFICATION,// no no no!!!! //selectNone(); //}}}
JEdit,WITHOUT_CLASSIFICATION,//{{{ blinkCaret() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMagicCaretPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMagicCaretPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addCaretListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevPage() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToBufferEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ deleteParagraph() method
JEdit,WITHOUT_CLASSIFICATION,// remove this when 4.1 plugin API is deprecated
JEdit,WITHOUT_CLASSIFICATION,//{{{ backspace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setOverwriteEnabled() method
JEdit,WITHOUT_CLASSIFICATION,// otherwise a bunch of consecutive C+d's would be merged // into one edit
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRectangularSelectionEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ formatParagraph() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ stopServer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ lineComment() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ rangeComment() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ indentSelectedLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ AWT stuff
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectedLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionStartLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSelectionEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ foldStructureChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ doWordWrap() method
JEdit,WITHOUT_CLASSIFICATION,// Fix bug #922951 Off-by-one error in Word Count
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireCaretEvent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showStructureStatusMessage() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Selection constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ doDoubleDrag() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Range constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Rect class
JEdit,WITHOUT_CLASSIFICATION,// progress bar value change
JEdit,WITHOUT_CLASSIFICATION,//{{{ CharIndexedSegment constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ createPrintStream() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ charAt() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _logException() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isValid() method
JEdit,WITHOUT_CLASSIFICATION,// do any queued AWT runnables
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireStatusChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeProgressListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ writeLock() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ requestDone() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPlugin(String boolean) method
JEdit,WITHOUT_CLASSIFICATION,// Only show class decs in CLASSES
JEdit,WITHOUT_CLASSIFICATION,//{{{ removePluginJAR() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Action methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionSetForAction() method
JEdit,WITHOUT_CLASSIFICATION,//Selection[] selection = (Selection[])buffer.getProperty(Buffer.SELECTION);
JEdit,WITHOUT_CLASSIFICATION,// lazy instantiation
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeActionSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addActionSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getModes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Rect constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ AbstractOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAction() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionSets() method
JEdit,WITHOUT_CLASSIFICATION,// binaryOperation can return Primitive or wrapper type
JEdit,WITHOUT_CLASSIFICATION,//{{{ Load user catalog
JEdit,WITHOUT_CLASSIFICATION,//{{{ Load macros and run startup scripts after plugins and settings are loaded
JEdit,WITHOUT_CLASSIFICATION,//{{{ Edit mode methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ reloadModes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPort method
JEdit,WITHOUT_CLASSIFICATION,// 4.1 plugin
JEdit,WITHOUT_CLASSIFICATION,//{{{ addPluginJAR() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _getLineManager() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _finishCaretUpdate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addPluginJARsFromDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ finishCaretUpdate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ openTemporary() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ commitTemporary() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ advanceSplashProgress() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ recalculateVisibleLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getParentDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isRightButton() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireScrollEvent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getComponentParent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Buffer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ isAncestorOf() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isPopupTrigger() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isMiddleButton() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateStructureHighlightWithDelay() method
JEdit,WITHOUT_CLASSIFICATION,// see finishCaretUpdate() & _finishCaretUpdate()
JEdit,WITHOUT_CLASSIFICATION,/* called by DisplayManager.BufferChangeHandler.transactionComplete() */
JEdit,WITHOUT_CLASSIFICATION,/* otherwise DisplayManager.BufferChangeHandler calls */
JEdit,WITHOUT_CLASSIFICATION,// JDiff error list add stuff here
JEdit,WITHOUT_CLASSIFICATION,//{{{ doWordCount() method
JEdit,WITHOUT_CLASSIFICATION,// do nothing user clicked 'Stop'
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertTab() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMultilineLabel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ requestFocus() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ menuCanceled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateStructureHighlight() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRectParams() method
JEdit,WITHOUT_CLASSIFICATION,// last character before wrap // length with tabs expanded
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextAreaBorder class
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateChunksUpTo() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionContext() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ RingListModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ addWorkRequest() method
JEdit,WITHOUT_CLASSIFICATION,// get rid of embedded tabs not removed by trim()
JEdit,WITHOUT_CLASSIFICATION,// caretLine would have been incremented // since insertNewLineAt <= caretPos
JEdit,WITHOUT_CLASSIFICATION,//{{{ ScrollLayout class
JEdit,WITHOUT_CLASSIFICATION,// Parse '='
JEdit,WITHOUT_CLASSIFICATION,//{{{ recalculateLastPhysicalLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ focusGained() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ tallCaretDelete() method
JEdit,WITHOUT_CLASSIFICATION,// Note that the attribute has been // specified.
JEdit,WITHOUT_CLASSIFICATION,// > 16 bits surrogate needed
JEdit,WITHOUT_CLASSIFICATION,// Internal entity.
JEdit,WITHOUT_CLASSIFICATION,//{{{ MutableCaretEvent class
JEdit,WITHOUT_CLASSIFICATION,// XXX: getMarkPosition() deprecated!
JEdit,WITHOUT_CLASSIFICATION,//{{{ hideSplashScreen() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNotLoadedPluginJARs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CaretBlinker class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setExtendedState() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ centerOnScreen() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ adjustmentValueChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDot() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ focusLost() method
JEdit,WITHOUT_CLASSIFICATION,// just scroll to the dragged location
JEdit,WITHOUT_CLASSIFICATION,// so that Home <mouse click> Home is not the same // as pressing Home twice in a row
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadStyles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBelowPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCachedServices() method
JEdit,WITHOUT_CLASSIFICATION,// Ignore empty lines
JEdit,WITHOUT_CLASSIFICATION,//{{{ paste() method
JEdit,WITHOUT_CLASSIFICATION,// Find the highest Untitled-n file
JEdit,WITHOUT_CLASSIFICATION,//{{{ doDoubleClick() method
JEdit,WITHOUT_CLASSIFICATION,// so that shift-click-drag works
JEdit,WITHOUT_CLASSIFICATION,//{{{ doSingleDrag() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ doTripleDrag() method
JEdit,WITHOUT_CLASSIFICATION,// If we get to here there must be // an InputStream available.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineSubregionCount() method
JEdit,WITHOUT_CLASSIFICATION,// so that quick copy works
JEdit,WITHOUT_CLASSIFICATION,//{{{ xToSubregionOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ChunkCache constructor
JEdit,WITHOUT_CLASSIFICATION,"/*			Treat lhs and rhs as arbitrary objects and do the operation.			(including NULL and VOID represented by their Primitive types)		*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ subregionOffsetToX() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ windowOpened() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateChunksFrom() method
JEdit,WITHOUT_CLASSIFICATION,//return -1;
JEdit,WITHOUT_CLASSIFICATION,//{{{ ComponentHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPluginJARs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Loading saving window geometry
JEdit,WITHOUT_CLASSIFICATION,// we do this here instead of adding buffers to the bus.
JEdit,WITHOUT_CLASSIFICATION,//{{{ componentMoved() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateChunksFromPhys() method
JEdit,WITHOUT_CLASSIFICATION,"//EditBus.send(new BufferUpdate(Buffer.this //	viewBufferUpdate.MARKERS_CHANGED));"
JEdit,WITHOUT_CLASSIFICATION,// Make sure the window is displayed in visible region
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMaxHorizontalScrollWidth() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadGeometry() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateAll() method
JEdit,WITHOUT_CLASSIFICATION,// Find the screen line containing this offset
JEdit,WITHOUT_CLASSIFICATION,//{{{ adjustForScreenBounds() method
JEdit,WITHOUT_CLASSIFICATION,// line is invisible?
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollDown() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ keyTyped() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ parseStyle() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createWhiteSpace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSubregionStartOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ LogListModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineInfosForPhysicalLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSubregionEndOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAbovePosition() method
JEdit,WITHOUT_CLASSIFICATION,// if -1 the empty space at the end of the text area // when the buffer has less lines than are visible
JEdit,WITHOUT_CLASSIFICATION,// for the first line displayed take its physical line to be // the text area's first physical line
JEdit,WITHOUT_CLASSIFICATION,// control-click in virtual space inserts // whitespace and moves caret
JEdit,WITHOUT_CLASSIFICATION,// otherwise determine the next visible line
JEdit,WITHOUT_CLASSIFICATION,// find a valid line closest to the last screen line
JEdit,WITHOUT_CLASSIFICATION,"/* if the user changes the syntax token at the				 * end of a line need to do a full repaint. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollUp() method
JEdit,WITHOUT_CLASSIFICATION,// unless this is the first time increment // the line number
JEdit,WITHOUT_CLASSIFICATION,"/* We only cache entire physical lines at once;				 * don't want to split a physical line into				 * screen lines and only have some valid. */"
JEdit,WITHOUT_CLASSIFICATION,// empty space
JEdit,WITHOUT_CLASSIFICATION,// if the line has no text out.size() == 0
JEdit,WITHOUT_CLASSIFICATION,// get another line of chunks
JEdit,WITHOUT_CLASSIFICATION,// chunk the line.
JEdit,WITHOUT_CLASSIFICATION,//{{{ globToRE() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ escapesToChars() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ charsToEscapes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertFile() method
JEdit,WITHOUT_CLASSIFICATION,// this returns false if initial sanity // checks (if the file is a directory etc) // fail
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkFileStatus() method
JEdit,WITHOUT_CLASSIFICATION,// null object ref is not instance of any type
JEdit,WITHOUT_CLASSIFICATION,// otherwise the number of subregions
JEdit,WITHOUT_CLASSIFICATION,//{{{ LineInfo class
JEdit,WITHOUT_CLASSIFICATION,//{{{ lineToChunkList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStartLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStart() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Range class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Insert the lines into the buffer
JEdit,WITHOUT_CLASSIFICATION,//{{{ parseColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadPopupMenu() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Canned dialog boxes
JEdit,WITHOUT_CLASSIFICATION,//{{{ Move the caret down a line
JEdit,WITHOUT_CLASSIFICATION,//{{{ Colors and styles
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStartColumn() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showVFSFileDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEndColumn() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ autosave() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveAs() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ prettifyMenuLabel() method
JEdit,WITHOUT_CLASSIFICATION,"/* Runtime runtime = Runtime.getRuntime();		int freeMemory = (int)(runtime.freeMemory() / 1024);		int totalMemory = (int)(runtime.totalMemory() / 1024);		int usedMemory = (totalMemory - freeMemory);		Log.log(Log.DEBUGthis""Java heap: "" + usedMemory + ""Kb / ""			+ totalMemory + ""Kb "" + (usedMemory * 100 / totalMemory)			+ ""%""); */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ inputProperty() method
JEdit,WITHOUT_CLASSIFICATION,// wait for more requests
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadToolBar() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ paintScreenLineRange() method
JEdit,WITHOUT_CLASSIFICATION,// notify a running waitForRequests() method
JEdit,WITHOUT_CLASSIFICATION,// files[] should have length 1 since the dialog type is // SAVE_DIALOG
JEdit,WITHOUT_CLASSIFICATION,// Once save is complete do a few other things
JEdit,WITHOUT_CLASSIFICATION,//{{{ Some predefined icons
JEdit,WITHOUT_CLASSIFICATION,//{{{ message() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ confirm() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ input() method
JEdit,WITHOUT_CLASSIFICATION,// Log some stuff
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLogListModel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLogWriter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ closeStream() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ flushStream() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Icon methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ _log() method
JEdit,WITHOUT_CLASSIFICATION,/* not really needed since threads don't start until after */
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleEditPaneUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// so that jEdit doesn't exit with no views open automatically //setDaemon(true);
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadIcon() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadMenuBar() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Menus tool bars
JEdit,WITHOUT_CLASSIFICATION,// status message changed operation started operation ends ...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEditorIcon() method
JEdit,WITHOUT_CLASSIFICATION,// check if there is a cached version first
JEdit,WITHOUT_CLASSIFICATION,//{{{ log() method
JEdit,WITHOUT_CLASSIFICATION,// get the icon
JEdit,WITHOUT_CLASSIFICATION,//{{{ try to merge with an existing menu first
JEdit,WITHOUT_CLASSIFICATION,// Same thread.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getThread() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ move() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Add to AWT queue...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getThreadCount() method
JEdit,WITHOUT_CLASSIFICATION,// no background mode and reusing existing view
JEdit,WITHOUT_CLASSIFICATION,//{{{ allowWrite() method
JEdit,WITHOUT_CLASSIFICATION,// Roll back state.
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireProgressChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ readLock() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ queueAWTRunner() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ writeUnlock() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Add to work thread queue...
JEdit,WITHOUT_CLASSIFICATION,// AWT thread magic
JEdit,WITHOUT_CLASSIFICATION,// Request queue
JEdit,WITHOUT_CLASSIFICATION,//{{{ RunRequestsInAWTThread class
JEdit,WITHOUT_CLASSIFICATION,"//			Log.log(Log.DEBUGthis""AWT runner queued"");"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getNextAWTRequest() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ SegmentBuffer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFontProperty() method
JEdit,WITHOUT_CLASSIFICATION,// changes IFNULL and IFNONNULL to opcodes 218 and 219 (inclusive)
JEdit,WITHOUT_CLASSIFICATION,"/* Some characters that we like to use in action names		 * ('.' '-') are not allowed in BeanShell identifiers. */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDoubleProperty() method
JEdit,WITHOUT_CLASSIFICATION,// Write in progress.
JEdit,WITHOUT_CLASSIFICATION,//{{{ isWriteLocked() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ claimWriteLock() method
JEdit,WITHOUT_CLASSIFICATION,// file does not begin with UTF-8-Y // signature. reset stream read as // UTF-8.
JEdit,WITHOUT_CLASSIFICATION,// changes IFEQ ... JSR to opcodes 202 to 217 (inclusive)
JEdit,WITHOUT_CLASSIFICATION,//{{{ IntegerArray constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getArray() method
JEdit,WITHOUT_CLASSIFICATION,// BIPUSH or NEWARRAY
JEdit,WITHOUT_CLASSIFICATION,// ------------------------------------------------------------------------- // Special instructions // -------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// ------------------------------------------------------------------------- // Debug information // -------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ get() method
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Constructors // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// updates maxLocals
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLeadingWhiteSpace() method
JEdit,WITHOUT_CLASSIFICATION,//case ARRAY: //case OBJECT:
JEdit,WITHOUT_CLASSIFICATION,//case 'L':
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Accessors // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,// updates current and max stack sizes
JEdit,WITHOUT_CLASSIFICATION,// -------------------------------------------------------------------------- // Corresponding size and opcodes // --------------------------------------------------------------------------
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateGutterBorders() method
JEdit,WITHOUT_CLASSIFICATION,// \t handled above
JEdit,WITHOUT_CLASSIFICATION,/* eg foo<C+b> will insert foobar */
JEdit,WITHOUT_CLASSIFICATION,//{{{ compareVersions() method
JEdit,WITHOUT_CLASSIFICATION,// updates max locals
JEdit,WITHOUT_CLASSIFICATION,//{{{ compareStrings() method
JEdit,WITHOUT_CLASSIFICATION,// xLOAD or xSTORE
JEdit,WITHOUT_CLASSIFICATION,// no stack change but end of current block (no successor)
JEdit,WITHOUT_CLASSIFICATION,/*ISTORE_0*/
JEdit,WITHOUT_CLASSIFICATION,// if opcode == ATHROW or xRETURN ends current block (no successor)
JEdit,WITHOUT_CLASSIFICATION,/*ILOAD_0*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ runMacro() method
JEdit,WITHOUT_CLASSIFICATION,// Remove '.bsh'
JEdit,WITHOUT_CLASSIFICATION,//{{{ BeanShellHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ BeanShellHandler constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMacro() method
JEdit,WITHOUT_CLASSIFICATION,// updates current and max stack sizes only if opcode == NEWARRAY // (stack size variation = 0 for BIPUSH or SIPUSH)
JEdit,WITHOUT_CLASSIFICATION,//{{{ setColorProperty() method
JEdit,WITHOUT_CLASSIFICATION,// pushes the first block onto the stack of blocks to be visited
JEdit,WITHOUT_CLASSIFICATION,//{{{ addMacro() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ readUnlock() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handler constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ _preprocessKeyEvent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isFocusTraversable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleClient() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ flushInput() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLabel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handler class
JEdit,WITHOUT_CLASSIFICATION,// setting the message to 'null' causes the status bar to // check if a recording is in progress
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPlugins() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSource() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Getters/setter methods for various buffer meta-data
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastModified() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getVFS() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addProgressListener() method
JEdit,WITHOUT_CLASSIFICATION,"//				Log.log(Log.DEBUGthis""AWT immediate: "" + run);"
JEdit,WITHOUT_CLASSIFICATION,//{{{ WorkThreadPool constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRules() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRuleCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addSeparator() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setTerminateChar() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Recorder class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Recorder constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFirstInvalidLineContext() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CaretHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isLeaf() method
JEdit,WITHOUT_CLASSIFICATION,"/*				Found the full name in imported classes.			*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAbbrev() method
JEdit,WITHOUT_CLASSIFICATION,// UCS-2 without a BOM must begin with "<?XML" // 0x00 0x3c 0x00 0x3f: UCS-2 big-endian no byte-order mark
JEdit,WITHOUT_CLASSIFICATION,//{{{ isBuiltIn() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ _closeBuffer() method
JEdit,WITHOUT_CLASSIFICATION,"/* I already wrote a comment expaining this in			 * Macro.invoke(). */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ stopRecording() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadMacros() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ clearRegister() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ recordTemporaryMacro() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRegisters() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEndLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveRegisters() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadRegisters() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Register interface
JEdit,WITHOUT_CLASSIFICATION,//{{{ ClipboardRegister class
JEdit,WITHOUT_CLASSIFICATION,//{{{ doSingleClick() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Text methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ macroNameToLabel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHandler() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ AdjustHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMark() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ KillRingHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ stringsEqual() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ objectsEqual() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ startDragAndDrop() method // calls dndCallback via reflection
JEdit,WITHOUT_CLASSIFICATION,// This is the new canonical path
JEdit,WITHOUT_CLASSIFICATION,//{{{ insideSelection() method
JEdit,WITHOUT_CLASSIFICATION,// remove trailing \n
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateScrollBars() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ StringRegister class
JEdit,WITHOUT_CLASSIFICATION,//{{{ RegistersHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ isCaretVisible() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Text editing
JEdit,WITHOUT_CLASSIFICATION,//{{{ getAttributes() method
JEdit,WITHOUT_CLASSIFICATION,// If we read a \r and // lastWasCR is also true // it is probably a Mac file // (\r\r in stream)
JEdit,WITHOUT_CLASSIFICATION,//{{{ Macro constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRightClickPopup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSymlinkPath() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRightClickPopup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ joinLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ registerHandler() method
JEdit,WITHOUT_CLASSIFICATION,// Was the previous read character a \r? // If we read a \n and this is true we assume // we have a DOS/Windows file
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMacroHierarchy() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isRightClickPopupEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMacroActionSet() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Macro class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMacro() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHandlers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ allowRead() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Request class
JEdit,WITHOUT_CLASSIFICATION,//{{{ isVMS() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isMacOSLF() method
JEdit,WITHOUT_CLASSIFICATION,// Determine whether we are dealing // with a one- two- three- or four- // byte sequence.
JEdit,WITHOUT_CLASSIFICATION,//{{{ User input
JEdit,WITHOUT_CLASSIFICATION,/* we guess an initial size for the array */
JEdit,WITHOUT_CLASSIFICATION,// A \r was read hence a MacOS file
JEdit,WITHOUT_CLASSIFICATION,//{{{ narrowToSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setEntry() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isLoaded() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isPerformingIO() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isNewFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setNewFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ classToFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isUntitled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Folding
JEdit,WITHOUT_CLASSIFICATION,// only executed if above loop falls // through ie there is no handler for // this file
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToMatchingBracket() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ unref() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PosTopHalf constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ PosBottomHalf class
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToBufferStart() method
JEdit,WITHOUT_CLASSIFICATION,// create a temporary (synthetic) prefix // KeyBinding that won't be saved
JEdit,WITHOUT_CLASSIFICATION,//cons.insets = new Insets(1010);
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToEndOfWhiteSpace() method
JEdit,WITHOUT_CLASSIFICATION,// save dockable window geometry and close 'em
JEdit,WITHOUT_CLASSIFICATION,//{{{ revalidate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToLastVisibleLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showRunScriptDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PerspectiveHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToNextMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getElementIndex() method
JEdit,WITHOUT_CLASSIFICATION,// if caret is inside leading whitespace indent.
JEdit,WITHOUT_CLASSIFICATION,// backgrounded
JEdit,WITHOUT_CLASSIFICATION,// copy text after gap
JEdit,WITHOUT_CLASSIFICATION,//{{{ PosTopHalf class
JEdit,WITHOUT_CLASSIFICATION,//{{{ setPerspectiveDirty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadPerspective() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isPerspectiveDirty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setPosition() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Some constants
JEdit,WITHOUT_CLASSIFICATION,//{{{ smartHome() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ hasScreenMenuBar
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateBufferStatus() method
JEdit,WITHOUT_CLASSIFICATION,// see above
JEdit,WITHOUT_CLASSIFICATION,// remove it so editor can continue // functioning
JEdit,WITHOUT_CLASSIFICATION,//{{{ ThreadProgress class
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateCaption() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getWordToComplete() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHistory() method
JEdit,WITHOUT_CLASSIFICATION,/* not a class */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSubregionOfOffset() method
JEdit,WITHOUT_CLASSIFICATION,// Reset count
JEdit,WITHOUT_CLASSIFICATION,// Number of lines read. Every 100 lines we update the // progress bar
JEdit,WITHOUT_CLASSIFICATION,// end JcmdProcess.java
JEdit,WITHOUT_CLASSIFICATION,//{{{ addStructureMatcher() method
JEdit,WITHOUT_CLASSIFICATION,// Look for line endings.
JEdit,WITHOUT_CLASSIFICATION,/* Get full command line */
JEdit,WITHOUT_CLASSIFICATION,//{{{ Split the text into lines
JEdit,WITHOUT_CLASSIFICATION,// do nothing who cares
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFirstInvalidFoldLevel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ needFullRepaint() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ overlaps() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isJava14() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isJava15() method
JEdit,WITHOUT_CLASSIFICATION,// fix the bug where the horiz. // scroll bar was not updated // after creating a new file.
JEdit,WITHOUT_CLASSIFICATION,// Note that we rely on the fact that when a physical line is // invalidated all screen lines/subregions of that line are // invalidated as well. See below comment for code that tries // to uphold this assumption.
JEdit,WITHOUT_CLASSIFICATION,"/* If this line has become longer or shorter				 * (in which case the new physical line number				 * is different from the cached one) we need to:				 * - continue updating past the last line				 * - advise the text area to repaint				 * On the other hand if the line wraps beyond				 * lastScreenLine we need to keep updating the				 * chunk list to ensure proper alignment of				 * invalidation flags (see start of method) */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineInfo() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadClass() method
JEdit,WITHOUT_CLASSIFICATION,// zero it here so that BufferTabs doesn't have any problems
JEdit,WITHOUT_CLASSIFICATION,// middle mouse button drag inserts selection // at caret position
JEdit,WITHOUT_CLASSIFICATION,// only wrap if we're at the end of a line or the rest of the // line text is whitespace
JEdit,WITHOUT_CLASSIFICATION,//{{{ doTripleClick() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MutableCaretEvent constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ shiftTallCaretLeft() method
JEdit,WITHOUT_CLASSIFICATION,"/* with drag and drop on a mouse down in a selection does not		immediately deselect */"
JEdit,WITHOUT_CLASSIFICATION,// When the user is typing etc we don't want the caret // to blink
JEdit,WITHOUT_CLASSIFICATION,//{{{ _addToSelection() method
JEdit,WITHOUT_CLASSIFICATION,"/* only ever return true if space was pressed		 * with logicalLength == maxLineLen */"
JEdit,WITHOUT_CLASSIFICATION,// for debugging make jEdit think its using a different // version of Java than it really is.
JEdit,WITHOUT_CLASSIFICATION,//{{{ isSelectionRectangular() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionStartEndOnLine() method
JEdit,WITHOUT_CLASSIFICATION,"/* on JDK 1.4 this is set to a method by Java14. The method must take	* these parameters:	* - a JEditTextArea	* - an InputEvent	* - a boolean (copy text or move depending on modifier user held down)	*/"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastEdit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ reloadAllBuffers() method
JEdit,WITHOUT_CLASSIFICATION,// save caret info. Buffer.load() will load it.
JEdit,WITHOUT_CLASSIFICATION,//{{{ _getBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handlePopupTrigger() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ lineInStructureScope() method
JEdit,WITHOUT_CLASSIFICATION,// add a line marker at the end for proper offset manager // operation
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectLine() method
JEdit,WITHOUT_CLASSIFICATION,//        currBlockNo++;
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToPrevFold() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ PosBottomHalf constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ Edit class
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertEnterAndIndent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectParagraph() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ tabsToSpaces() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLastModified() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Offset conversion
JEdit,WITHOUT_CLASSIFICATION,//{{{ charsToEntities() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ formatFileSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLongestPrefix() method
JEdit,WITHOUT_CLASSIFICATION,// Offset of previous line relative to // the start of the I/O buffer (NOT // relative to the start of the document)
JEdit,WITHOUT_CLASSIFICATION,//{{{ Painting
JEdit,WITHOUT_CLASSIFICATION,//{{{ Scroll horizontally
JEdit,WITHOUT_CLASSIFICATION,"/*         * Now the coding tables         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineCount() method
JEdit,WITHOUT_CLASSIFICATION,"/*     * Knuth's increments seem to work better     * than Incerpi-Sedgewick here.  Possibly     * because the number of elems to sort is     * usually small typically <= 20.     */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDragInProgress() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstPhysicalLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getHorizontalOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ OptionGroup constructor
JEdit,WITHOUT_CLASSIFICATION,// fix for the bug where key events in JTextComponents // inside views are also handled by the input handler
JEdit,WITHOUT_CLASSIFICATION,"/*         * Create the Huffman decoding tables         */"
JEdit,WITHOUT_CLASSIFICATION,"/*         * Receive the mapping table         */"
JEdit,WITHOUT_CLASSIFICATION,"/*         * A bad CRC is considered a fatal error.         */"
JEdit,WITHOUT_CLASSIFICATION,//{{{ setWrapGuidePainted() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ JEditTextArea constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ isCaretBlinkEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Initialize some misc. stuff
JEdit,WITHOUT_CLASSIFICATION,//{{{ ViewConfig class
JEdit,WITHOUT_CLASSIFICATION,//{{{ TextAreaPainter constructor
JEdit,WITHOUT_CLASSIFICATION,// do not reset the stream and just treat it // like a normal UTF-8 file.
JEdit,WITHOUT_CLASSIFICATION,// walk up hierarchy looking for an EditPane
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStringWidth() method
JEdit,WITHOUT_CLASSIFICATION,// this constructor keys the hash table
JEdit,WITHOUT_CLASSIFICATION,// dockables
JEdit,WITHOUT_CLASSIFICATION,//{{{ unloadServices() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBuffers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBufferCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadServices() method
JEdit,WITHOUT_CLASSIFICATION,"/*         * not a char and not EOF         */"
JEdit,WITHOUT_CLASSIFICATION,//throw new CCoruptionError();
JEdit,WITHOUT_CLASSIFICATION,//{{{ updatePopupMenu() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ registerService() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEOLMarkersPainted() method
JEdit,WITHOUT_CLASSIFICATION,// Compare the input character- // by character.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Descriptor class
JEdit,WITHOUT_CLASSIFICATION,// Otherwise set a flag // so that \n knows that last // was a \r
JEdit,WITHOUT_CLASSIFICATION,// Read the character
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEOLMarkerColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setWrapGuideColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initKeyBindings() method
JEdit,WITHOUT_CLASSIFICATION,// unknown service - <clazzname> not in table
JEdit,WITHOUT_CLASSIFICATION,//{{{ unregisterService() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getService() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getServiceNames() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getServiceTypes() method
JEdit,WITHOUT_CLASSIFICATION,// Now on with the hunt...
JEdit,WITHOUT_CLASSIFICATION,// avoid re-running script if it gives // us null
JEdit,WITHOUT_CLASSIFICATION,// Quick check catches public fields include those in interfaces
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSelectionColor() method
JEdit,WITHOUT_CLASSIFICATION,// Per Patrick Beard:
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLastBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkBufferStatus() method
JEdit,WITHOUT_CLASSIFICATION,// Not found fall through to next class
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDirty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isReadOnly() method
JEdit,WITHOUT_CLASSIFICATION,// remember that this class doesn't exist for // future reference
JEdit,WITHOUT_CLASSIFICATION,//{{{ EditServer constructor
JEdit,WITHOUT_CLASSIFICATION,/*delcaredOnly*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ getViewCount() method
JEdit,WITHOUT_CLASSIFICATION,/* I assume that there can be only one drag operation at the time */
JEdit,WITHOUT_CLASSIFICATION,// Skip certain actions this way
JEdit,WITHOUT_CLASSIFICATION,// Throw an EOFException if there // is nothing else to pop.
JEdit,WITHOUT_CLASSIFICATION,// draw |
JEdit,WITHOUT_CLASSIFICATION,//{{{ toTitleCase() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setMarkerHighlightColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFoldColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDoubleProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkerHighlightColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineNumberAlignment() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ IOProgressMonitor constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ noRecord() method
JEdit,WITHOUT_CLASSIFICATION,// Push it onto the stack.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BracketMatcher class
JEdit,WITHOUT_CLASSIFICATION,// Don't bother if there is no input.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkers() method
JEdit,WITHOUT_CLASSIFICATION,// See if we have any overflow.
JEdit,WITHOUT_CLASSIFICATION,//shadow size
JEdit,WITHOUT_CLASSIFICATION,//{{{ delayedUpdate() method
JEdit,WITHOUT_CLASSIFICATION,// Special situation -- we're taking // input from a character stream.
JEdit,WITHOUT_CLASSIFICATION,//{{{ isX11() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ScrollHandler class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMembers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMember() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMemberCount() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setSort() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertionSort() method
JEdit,WITHOUT_CLASSIFICATION,// Filter out all carriage returns // if we've seen any.
JEdit,WITHOUT_CLASSIFICATION,// Reset the position.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Anchor class
JEdit,WITHOUT_CLASSIFICATION,//{{{ DisplayManager constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ fvmdump() method
JEdit,WITHOUT_CLASSIFICATION,/* Install location */
JEdit,WITHOUT_CLASSIFICATION,/* Backup filename prefix */
JEdit,WITHOUT_CLASSIFICATION,/* Backup suffix */
JEdit,WITHOUT_CLASSIFICATION,//{{{ hideLineRange() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fvmput2() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MirrorModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Find fold start and fold end...
JEdit,WITHOUT_CLASSIFICATION,//{{{ RootElement constructor
JEdit,WITHOUT_CLASSIFICATION,// 3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDirty() method
JEdit,WITHOUT_CLASSIFICATION,// Bump lastLine so // that the next line // doesn't erronously // pick up the \r
JEdit,WITHOUT_CLASSIFICATION,// Insert a line
JEdit,WITHOUT_CLASSIFICATION,//{{{ setReadOnly() method
JEdit,WITHOUT_CLASSIFICATION,/* start of next expanded range */
JEdit,WITHOUT_CLASSIFICATION,// How many characters have we read?
JEdit,WITHOUT_CLASSIFICATION,// Otherwise the 8th bit may not be set in UTF-8
JEdit,WITHOUT_CLASSIFICATION,// fixes dirty flag not being reset on // save/insert/undo/redo/undo
JEdit,WITHOUT_CLASSIFICATION,// Check for the correct bits at the // start.
JEdit,WITHOUT_CLASSIFICATION,// Set up the variables for the current // element context.
JEdit,WITHOUT_CLASSIFICATION,// Take a character from the buffer // or from the actual input stream.
JEdit,WITHOUT_CLASSIFICATION,// Set up the DTD hash tables
JEdit,WITHOUT_CLASSIFICATION,// Return the significant bits.
JEdit,WITHOUT_CLASSIFICATION,// No errors; first line
JEdit,WITHOUT_CLASSIFICATION,// Set up the buffers for data and names
JEdit,WITHOUT_CLASSIFICATION,//{{{ isLineVisible() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Compare interface
JEdit,WITHOUT_CLASSIFICATION,//{{{ StringCompare class
JEdit,WITHOUT_CLASSIFICATION,//{{{ AbbrevsModel class
JEdit,WITHOUT_CLASSIFICATION,//{{{ getForegroundColor() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ StringICaseCompare class
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeFromBus() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getComponents() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ send() method
JEdit,WITHOUT_CLASSIFICATION,// can't create new instances
JEdit,WITHOUT_CLASSIFICATION,//{{{ EditAction constructor
JEdit,WITHOUT_CLASSIFICATION,/* Mix files and directories */
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMouseOverText() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ View methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ getChunkList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isTemporary() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Thread safety
JEdit,WITHOUT_CLASSIFICATION,//{{{ Line offset methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ setDefault() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTerminateChar() method
JEdit,WITHOUT_CLASSIFICATION,// no need to lock since this just returns a value and that's it
JEdit,WITHOUT_CLASSIFICATION,//{{{ resolveImports() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setKeywords() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createEscapeRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFirstView() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMarkPreviousRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMarkFollowingRule() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ createRegexpSequenceRule() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ SEQ_REGEXP
JEdit,WITHOUT_CLASSIFICATION,// // Element type currently in force. //
JEdit,WITHOUT_CLASSIFICATION,// // Hashtables for DTD information on elements entities and notations. //
JEdit,WITHOUT_CLASSIFICATION,//{{{ MenuItemCompare class
JEdit,WITHOUT_CLASSIFICATION,//{{{ xToOffset() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Plugin management methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ ServiceListHandler constructor
JEdit,WITHOUT_CLASSIFICATION,// // Stack of entity names to help detect recursion. //
JEdit,WITHOUT_CLASSIFICATION,// // Symbol table for internalising names. //
JEdit,WITHOUT_CLASSIFICATION,// // Are we in a context where PEs are allowed? //
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkDelegateEnd() method
JEdit,WITHOUT_CLASSIFICATION,// Some kind of 8-bit encoding with "<?XML" // 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateCachedScreenLineCounts() method
JEdit,WITHOUT_CLASSIFICATION,// mixed digit/alpha keyword // and no regexp... don't // highlight as DIGIT
JEdit,WITHOUT_CLASSIFICATION,// Set type/creator codes for files
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ EOL_SPAN
JEdit,WITHOUT_CLASSIFICATION,//{{{ osok() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showInFinder() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DefaultInputHandler constructor
JEdit,WITHOUT_CLASSIFICATION,// According to Slava this is better
JEdit,WITHOUT_CLASSIFICATION,//{{{ Text getters and setters
JEdit,WITHOUT_CLASSIFICATION,//{{{ openSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ScriptRunner class
JEdit,WITHOUT_CLASSIFICATION,//{{{ markKeyword() method
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Handle start of rule
JEdit,WITHOUT_CLASSIFICATION,//{{{ EBMessage constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ initReplace() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSkipIndex() method
JEdit,WITHOUT_CLASSIFICATION,// if loadAutosave is false we loaded an // autosave file so we set 'dirty' to true
JEdit,WITHOUT_CLASSIFICATION,//{{{ Main parser loop
JEdit,WITHOUT_CLASSIFICATION,// note that we don't use setDirty() // because a) that would send an unnecessary // message b) it would also set the // AUTOSAVE_DIRTY flag which will make // the autosave thread write out a // redundant autosave file
JEdit,WITHOUT_CLASSIFICATION,// initialize the skip array to all zeros
JEdit,WITHOUT_CLASSIFICATION,// leave the table cleanly-initialized for an empty pattern
JEdit,WITHOUT_CLASSIFICATION,/* otherwise it will be delivered later */
JEdit,WITHOUT_CLASSIFICATION,//{{{ MultiFileActionHandler class
JEdit,WITHOUT_CLASSIFICATION,// fields
JEdit,WITHOUT_CLASSIFICATION,// multifile settings
JEdit,WITHOUT_CLASSIFICATION,//{{{ regexpReplace() method
JEdit,WITHOUT_CLASSIFICATION,//SwingUtilities.invokeLater(new ScriptRunner(path)); //}}}
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSettings() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Undo
JEdit,WITHOUT_CLASSIFICATION,//{{{ isTransactionInProgress() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handlers
JEdit,WITHOUT_CLASSIFICATION,// so that Replace and Find continues from // the right location
JEdit,WITHOUT_CLASSIFICATION,// Map types to assignable forms need to keep this fast...
JEdit,WITHOUT_CLASSIFICATION,// send some EditBus messages
JEdit,WITHOUT_CLASSIFICATION,// make sure end of match is visible
JEdit,WITHOUT_CLASSIFICATION,//{{{ beginCompoundEdit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isToggle() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setReverseSearch() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleOpenFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ SearchBar constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ BufferClosedVisitor class
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeBufferChangeListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleFileCodes() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleAbout() method
JEdit,WITHOUT_CLASSIFICATION,// This will happen when a new file is created
JEdit,WITHOUT_CLASSIFICATION,// Add type/creator to local buffer property list on open
JEdit,WITHOUT_CLASSIFICATION,//{{{ buildToVersion() method
JEdit,WITHOUT_CLASSIFICATION,// First 2 chars are the major version number
JEdit,WITHOUT_CLASSIFICATION,// Set type/creator on save
JEdit,WITHOUT_CLASSIFICATION,// Second 2 are the minor number
JEdit,WITHOUT_CLASSIFICATION,//{{{ showPopupMenu method
JEdit,WITHOUT_CLASSIFICATION,// Then the pre-release status
JEdit,WITHOUT_CLASSIFICATION,//{{{ insideCompoundEdit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Buffer events
JEdit,WITHOUT_CLASSIFICATION,//{{{ searchStarted() method
JEdit,WITHOUT_CLASSIFICATION,// Finally the bug fix release
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBufferChangeListeners() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ DirectoryListSet constructor
JEdit,WITHOUT_CLASSIFICATION,// Can't use buffer.getName() here because // it is not changed until the save is // complete
JEdit,WITHOUT_CLASSIFICATION,//{{{ ViewOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ applicationDockMenu() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ handlePreferences() method
JEdit,WITHOUT_CLASSIFICATION,/* split VFSFileDialog horizontally */
JEdit,WITHOUT_CLASSIFICATION,//{{{ handleQuit() method
JEdit,WITHOUT_CLASSIFICATION,/* Show menu bar */
JEdit,WITHOUT_CLASSIFICATION,//{{{ 1. Check whether tools.jar is in the system classpath:
JEdit,WITHOUT_CLASSIFICATION,// Try to make the full imported name
JEdit,WITHOUT_CLASSIFICATION,//{{{ applicationOpenFiles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ NewViewAction class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Services
JEdit,WITHOUT_CLASSIFICATION,//{{{ applicationShouldTerminate() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ insertSelection() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ MacroAction class
JEdit,WITHOUT_CLASSIFICATION,/* Delete downloaded files */
JEdit,WITHOUT_CLASSIFICATION,//{{{ RecentMenu class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Dock Menu
JEdit,WITHOUT_CLASSIFICATION,//{{{ RecentDirMenu class
JEdit,WITHOUT_CLASSIFICATION,//{{{ MacrosMenu class
JEdit,WITHOUT_CLASSIFICATION,// eg user just closed a view and didn't focus another
JEdit,WITHOUT_CLASSIFICATION,//{{{ isMainThread() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isBackgroundMode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ showMemoryStatusDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getJEditHome() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ AutosaveBackupOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ getSettingsDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getJARCacheDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ backupSettingsFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ new API
JEdit,WITHOUT_CLASSIFICATION,// forget the cached Position instance
JEdit,WITHOUT_CLASSIFICATION,//{{{ ShowBufferMenuItem class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ShowDirAction class
JEdit,WITHOUT_CLASSIFICATION,/* unfocused border color */
JEdit,WITHOUT_CLASSIFICATION,// set proxy port
JEdit,WITHOUT_CLASSIFICATION,//{{{ exit() method
JEdit,WITHOUT_CLASSIFICATION,// un-iconify using JDK 1.3 API
JEdit,WITHOUT_CLASSIFICATION,/* Text drag and drop */
JEdit,WITHOUT_CLASSIFICATION,/* Clock */
JEdit,WITHOUT_CLASSIFICATION,//{{{ savePerspective() method
JEdit,WITHOUT_CLASSIFICATION,// Begin BeanShell Modification - serializable
JEdit,WITHOUT_CLASSIFICATION,// Close dialog view.close() call need a view...
JEdit,WITHOUT_CLASSIFICATION,//{{{ getListCellRendererComponent() method
JEdit,WITHOUT_CLASSIFICATION,// Send EditorExitRequested
JEdit,WITHOUT_CLASSIFICATION,//{{{ ErrorListCellRenderer constructor
JEdit,WITHOUT_CLASSIFICATION,// Close all buffers
JEdit,WITHOUT_CLASSIFICATION,// If we are running in background mode and // reallyExit was not specified then return here.
JEdit,WITHOUT_CLASSIFICATION,//{{{ MouseOptionPane constructor
JEdit,WITHOUT_CLASSIFICATION,/* Encoding */
JEdit,WITHOUT_CLASSIFICATION,// do *not* invoke special override for block... (see above)
JEdit,WITHOUT_CLASSIFICATION,// Do the for init
JEdit,WITHOUT_CLASSIFICATION,// End BeanShell Modification - serializable
JEdit,WITHOUT_CLASSIFICATION,// Save view properties here
JEdit,WITHOUT_CLASSIFICATION,// default impl
JEdit,WITHOUT_CLASSIFICATION,// Stop autosave timer
JEdit,WITHOUT_CLASSIFICATION,/* Multi select */
JEdit,WITHOUT_CLASSIFICATION,// put it back
JEdit,WITHOUT_CLASSIFICATION,//{{{ stringToSelection() method
JEdit,WITHOUT_CLASSIFICATION,/*method.block*/
JEdit,WITHOUT_CLASSIFICATION,// Send EditorExiting
JEdit,WITHOUT_CLASSIFICATION,// Save settings
JEdit,WITHOUT_CLASSIFICATION,// Close activity log stream
JEdit,WITHOUT_CLASSIFICATION,// Byebye...
JEdit,WITHOUT_CLASSIFICATION,// End method components
JEdit,WITHOUT_CLASSIFICATION,// Java Method
JEdit,WITHOUT_CLASSIFICATION,// Begin Method components
JEdit,WITHOUT_CLASSIFICATION,// Scripted method body
JEdit,WITHOUT_CLASSIFICATION,/*isNative*/
JEdit,WITHOUT_CLASSIFICATION,// is this a syncrhonized method?
JEdit,WITHOUT_CLASSIFICATION,//{{{ 2. Check whether it is in the jEdit user settings jars folder:
JEdit,WITHOUT_CLASSIFICATION,// jEdit will load it automatically
JEdit,WITHOUT_CLASSIFICATION,//{{{ 3. Check whether it is in jEdit's system jars folder:
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEditServer() method
JEdit,WITHOUT_CLASSIFICATION,// only do this if we are the current edit pane
JEdit,WITHOUT_CLASSIFICATION,// Only do this after all I/O requests are complete
JEdit,WITHOUT_CLASSIFICATION,// avoid a race condition // see bug #834338
JEdit,WITHOUT_CLASSIFICATION,//{{{ prevBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ nextBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ recentBuffer() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ StyleChoice class
JEdit,WITHOUT_CLASSIFICATION,//{{{ focusOnTextArea() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addMode() method
JEdit,WITHOUT_CLASSIFICATION,// Cardinality (number of args) mismatch
JEdit,WITHOUT_CLASSIFICATION,// Make the local namespace for the method invocation
JEdit,WITHOUT_CLASSIFICATION,//{{{ ErrorListDialog constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ ErrorEntry class
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadMode() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ pluginError() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setActiveView() method
JEdit,WITHOUT_CLASSIFICATION,// buffer link list
JEdit,WITHOUT_CLASSIFICATION,// Set typed variable
JEdit,WITHOUT_CLASSIFICATION,// makes openTemporary() thread-safe
JEdit,WITHOUT_CLASSIFICATION,// view link list
JEdit,WITHOUT_CLASSIFICATION,//{{{ usage() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ version() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initMisc() method
JEdit,WITHOUT_CLASSIFICATION,// Push the new namespace on the call stack
JEdit,WITHOUT_CLASSIFICATION,// save the callstack including the called method just for error mess
JEdit,WITHOUT_CLASSIFICATION,//{{{ DirectoryEntry class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Wrapper class
JEdit,WITHOUT_CLASSIFICATION,// Push the existing status
JEdit,WITHOUT_CLASSIFICATION,// Add our protocols to java.net.URL's list
JEdit,WITHOUT_CLASSIFICATION,/* Anti-aliasing */
JEdit,WITHOUT_CLASSIFICATION,//{{{ setInterval() method
JEdit,WITHOUT_CLASSIFICATION,// No super method try to invoke regular method // could be a superfluous "super." which is legal.
JEdit,WITHOUT_CLASSIFICATION,//{{{ getOffset() method
JEdit,WITHOUT_CLASSIFICATION,// Set the User-Agent string used by the java.net HTTP handler
JEdit,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////// // Local Variables. //////////////////////////////////////////////////////////////////////
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIdealIndentForLine() method
JEdit,WITHOUT_CLASSIFICATION,/* Multiple selection color */
JEdit,WITHOUT_CLASSIFICATION,//{{{ 4. Check whether it is in <java.home>/lib:
JEdit,WITHOUT_CLASSIFICATION,//{{{ Load it if not yet done:
JEdit,WITHOUT_CLASSIFICATION,//{{{ DirectoryLoadedAWTRequest class
JEdit,WITHOUT_CLASSIFICATION,//{{{ Flags
JEdit,WITHOUT_CLASSIFICATION,// check if web start
JEdit,WITHOUT_CLASSIFICATION,// use user.dir as last resort
JEdit,WITHOUT_CLASSIFICATION,//{{{ Forward search
JEdit,WITHOUT_CLASSIFICATION,// Add an EditBus component that will reload edit modes and // macros if they are changed from within the editor
JEdit,WITHOUT_CLASSIFICATION,//{{{ initSiteProperties() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initSystemProperties() method
JEdit,WITHOUT_CLASSIFICATION,/*recurse*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCurrentIndentForLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initResources() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initPlugins() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initUserProperties() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ColorEntry class
JEdit,WITHOUT_CLASSIFICATION,// null value means no value
JEdit,WITHOUT_CLASSIFICATION,//{{{ isDOSDerived() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ indentLine() method
JEdit,WITHOUT_CLASSIFICATION,// The token.image text of the name... never changes.
JEdit,WITHOUT_CLASSIFICATION,//{{{ EditPane constructor
JEdit,WITHOUT_CLASSIFICATION,// check for easy mistake
JEdit,WITHOUT_CLASSIFICATION,//{{{ getScreenBounds() method
JEdit,WITHOUT_CLASSIFICATION,// Set up the right-click popup menu
JEdit,WITHOUT_CLASSIFICATION,// Don't add duplicates
JEdit,WITHOUT_CLASSIFICATION,// use old property name for backwards compatibility
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadBufferSwitcher() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isOS2() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ indentLines() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isWindowsNT() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ initPLAF() method
JEdit,WITHOUT_CLASSIFICATION,// Make adjustments for some OS's
JEdit,WITHOUT_CLASSIFICATION,// give all Swing components our colors
JEdit,WITHOUT_CLASSIFICATION,//defaults.put(prefix + ".inactiveForeground"foreground);
JEdit,WITHOUT_CLASSIFICATION,//{{{ isUnix() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ runStartupScripts() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isWindows() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isWindows9x() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Get indent attributes of previous line
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handle brackets
JEdit,WITHOUT_CLASSIFICATION,//{{{ Insert constructor
JEdit,WITHOUT_CLASSIFICATION,// Register for notification of classloader change
JEdit,WITHOUT_CLASSIFICATION,// null not supported?
JEdit,WITHOUT_CLASSIFICATION,//{{{ FirewallAuthenticator class
JEdit,WITHOUT_CLASSIFICATION,// might come in handy useful some time
JEdit,WITHOUT_CLASSIFICATION,//{{{ finishStartup() method
JEdit,WITHOUT_CLASSIFICATION,// Start I/O threads
JEdit,WITHOUT_CLASSIFICATION,// Start edit server
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEncodings() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Get indent attributes for current line
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkFileForLoad() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getRootElements() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ putBooleanProperty() method
JEdit,WITHOUT_CLASSIFICATION,// read results...
JEdit,WITHOUT_CLASSIFICATION,//{{{ Handle regexps
JEdit,WITHOUT_CLASSIFICATION,// Additional bracket indent // For lining up closing // and opening brackets
JEdit,WITHOUT_CLASSIFICATION,//{{{ isFoldStart() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getLineParenWeight() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ invalidateCachedFoldLevels() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Deep indenting
JEdit,WITHOUT_CLASSIFICATION,// If the previous line matches indentNextLine or indentNextLines // add a level of indent
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFoldHandler() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getParagraphElement() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ isFoldEnd() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ putProperty() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Position methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkerStatusPrompt() method
JEdit,WITHOUT_CLASSIFICATION,// don't sort markers while buffer is being loaded
JEdit,WITHOUT_CLASSIFICATION,//{{{ Folding methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ getCurrentIdentForLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFoldAtLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Marker methods
JEdit,WITHOUT_CLASSIFICATION,//  first node will either be PrimitiveType or AmbiguousName
JEdit,WITHOUT_CLASSIFICATION,// backwards compatibility...
JEdit,WITHOUT_CLASSIFICATION,// bad postURL
JEdit,WITHOUT_CLASSIFICATION,/*type*/
JEdit,WITHOUT_CLASSIFICATION,// if we don't do this the autosave file won't be // deleted after a save as
JEdit,WITHOUT_CLASSIFICATION,//{{{ Report any plugin errors
JEdit,WITHOUT_CLASSIFICATION,// this must be called before any EditBus messages are sent
JEdit,WITHOUT_CLASSIFICATION,//{{{ showPluginErrorDialog() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkerAtLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addOrRemoveMarker() method
JEdit,WITHOUT_CLASSIFICATION,// return cached type if available
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMarkerInRange() method
JEdit,WITHOUT_CLASSIFICATION,// to avoid slowdown with large files; only scan 10000 lines either way
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFlag() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ resetCachedProperties() method
JEdit,WITHOUT_CLASSIFICATION,// We only save markers to VFS's that support deletion. // Otherwise we will accumilate stale marks files.
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeAllMarkers() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setPath() method
JEdit,WITHOUT_CLASSIFICATION,// in one case not a single AWT class will // have been touched (splash screen off + // -nogui -nobackground switches on command // line)
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFlag() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ finishSaving() method
JEdit,WITHOUT_CLASSIFICATION,// Display
JEdit,WITHOUT_CLASSIFICATION,// Bsh scripted object
JEdit,WITHOUT_CLASSIFICATION,// Get catch block
JEdit,WITHOUT_CLASSIFICATION,//{{{ recoverAutosave() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ findMatchingBracket() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Flag values
JEdit,WITHOUT_CLASSIFICATION,// Users should not normally see this.
JEdit,WITHOUT_CLASSIFICATION,//{{{ finishLoading() method
JEdit,WITHOUT_CLASSIFICATION,"/*    * Constructors of various flavors follow.    */"
JEdit,WITHOUT_CLASSIFICATION,// Create marker positions
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireTransactionComplete() method
JEdit,WITHOUT_CLASSIFICATION,// this method might get called at startup
JEdit,WITHOUT_CLASSIFICATION,// put cbNameSpace on the top of the stack
JEdit,WITHOUT_CLASSIFICATION,// If we have an exception find a catch
JEdit,WITHOUT_CLASSIFICATION,//{{{ checkFileForSave() method
JEdit,WITHOUT_CLASSIFICATION,// set a typed variable (directly in the block)
JEdit,WITHOUT_CLASSIFICATION,// handled target
JEdit,WITHOUT_CLASSIFICATION,// Note: no way to mutate the Throwable message must maintain our own
JEdit,WITHOUT_CLASSIFICATION,// exception fell through throw it upward...
JEdit,WITHOUT_CLASSIFICATION,// 1 because we've already 'seen' the first bracket
JEdit,WITHOUT_CLASSIFICATION,// Need to reset properties that were cached defaults // since the defaults might have changed.
JEdit,WITHOUT_CLASSIFICATION,// check this.value
JEdit,WITHOUT_CLASSIFICATION,// first line for last 10 lines make sure not to overlap // with the first 10
JEdit,WITHOUT_CLASSIFICATION,// See notes in getThis()
JEdit,WITHOUT_CLASSIFICATION,"/* if we save a file with the same name as one				 * that's already open we presume that we can				 * close the existing file since the user				 * would have confirmed the overwrite in the				 * 'save as' dialog box anyway */"
JEdit,WITHOUT_CLASSIFICATION,// Note: in this case parent must have a class manager.
JEdit,WITHOUT_CLASSIFICATION,// show this message when all I/O requests are // complete
JEdit,WITHOUT_CLASSIFICATION,//{{{ parseBufferLocalProperties() method
JEdit,WITHOUT_CLASSIFICATION,"/* if we saved over an already open file using				 * 'save a copy as' then reload the existing				 * buffer */"
JEdit,WITHOUT_CLASSIFICATION,// new message type introduced in 4.0pre4
JEdit,WITHOUT_CLASSIFICATION,//{{{ Update this buffer for the new path
JEdit,WITHOUT_CLASSIFICATION,//{{{ getPriorNonEmptyLine() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getListener() method
JEdit,WITHOUT_CLASSIFICATION,// End instance data
JEdit,WITHOUT_CLASSIFICATION,// don't do this on initial token marker
JEdit,WITHOUT_CLASSIFICATION,//{{{ Event firing methods
JEdit,WITHOUT_CLASSIFICATION,// didn't find a line that contains non-whitespace chars // so return index of prior whitespace line
JEdit,WITHOUT_CLASSIFICATION,// if user adds mode buffer-local property
JEdit,WITHOUT_CLASSIFICATION,//{{{ addBufferToList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireContentRemoved() method
JEdit,WITHOUT_CLASSIFICATION,// Prepare to execute the block. // We must create a new BlockNameSpace to hold the catch // parameter and swap it on the stack after initializing it.
JEdit,WITHOUT_CLASSIFICATION,/*strictjava*/
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireFoldLevelChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireContentInserted() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ fireFoldHandlerChanged() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ firePreContentRemoved() method
JEdit,WITHOUT_CLASSIFICATION,// Begin instance data // Note: if we add something here we should reset it in the clear() method.
JEdit,WITHOUT_CLASSIFICATION,//{{{ findWordStart() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTokenAtOffset() method
JEdit,WITHOUT_CLASSIFICATION,// Locate the variable definition if it exists.
JEdit,WITHOUT_CLASSIFICATION,// this must be after the stream is created or // we deadlock with SSHTools.
JEdit,WITHOUT_CLASSIFICATION,// primitives should have been wrapped
JEdit,WITHOUT_CLASSIFICATION,// No previous variable definition found here (or above if recurse)
JEdit,WITHOUT_CLASSIFICATION,// Nothing found
JEdit,WITHOUT_CLASSIFICATION,//}}} //{{{ Backward search
JEdit,WITHOUT_CLASSIFICATION,// corresponding character // false - backwards true - forwards
JEdit,WITHOUT_CLASSIFICATION,//{{{ Go on to next line
JEdit,WITHOUT_CLASSIFICATION,//{{{ Go on to previous line
JEdit,WITHOUT_CLASSIFICATION,//{{{ the character under the cursor changes how we behave.
JEdit,WITHOUT_CLASSIFICATION,//{{{ Whitespace...
JEdit,WITHOUT_CLASSIFICATION,//{{{ gotoMarker() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Animator class
JEdit,WITHOUT_CLASSIFICATION,// Handle line number
JEdit,WITHOUT_CLASSIFICATION,// Handle marker
JEdit,WITHOUT_CLASSIFICATION,// If we are disconnected from root we need to handle the def imports
JEdit,WITHOUT_CLASSIFICATION,//{{{ AbbrevEditor constructor
JEdit,WITHOUT_CLASSIFICATION,// word char; keep going
JEdit,WITHOUT_CLASSIFICATION,// word char or symbol; stop
JEdit,WITHOUT_CLASSIFICATION,// whitespace; include in word if eating
JEdit,WITHOUT_CLASSIFICATION,"/*		Get variables declared in this namespace.	*/"
JEdit,WITHOUT_CLASSIFICATION,//checkVariableModifiers( name modifiers );
JEdit,WITHOUT_CLASSIFICATION,// Change import precedence if we are a class body/instance // Get imported first.
JEdit,WITHOUT_CLASSIFICATION,//{{{ setAbbrev() method
JEdit,WITHOUT_CLASSIFICATION,/* DOS ^Z */
JEdit,WITHOUT_CLASSIFICATION,// turn the rankings into relative rankings from 1 to 4
JEdit,WITHOUT_CLASSIFICATION,// align everything to paragraph's leading indent
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIconForFile() method
JEdit,WITHOUT_CLASSIFICATION,// if we see whitespace set flag.
JEdit,WITHOUT_CLASSIFICATION,/* all good */
JEdit,WITHOUT_CLASSIFICATION,//{{{ createEncodingMenu() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getStringCase() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ format() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ FavoritesMenuButton class
JEdit,WITHOUT_CLASSIFICATION,// Is it typed?
JEdit,WITHOUT_CLASSIFICATION,// this will disable most operations if // files of multiple types are selected
JEdit,WITHOUT_CLASSIFICATION,//{{{ FileCellRenderer constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMenuItem() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getEntryWidth() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addEdit() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ExpansionToggleBorder class
JEdit,WITHOUT_CLASSIFICATION,//{{{ ExpansionToggleBorder constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFSDirectoryEntryTable constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ isExpansionToggle() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ selectFile() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getExpandedDirectories() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ActionSet constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setLabel() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ scrollRectToVisible() method
JEdit,WITHOUT_CLASSIFICATION,// avoid scrolling to the right
JEdit,WITHOUT_CLASSIFICATION,//{{{ addAction() method
JEdit,WITHOUT_CLASSIFICATION,// Add remaining stuff from buffer
JEdit,WITHOUT_CLASSIFICATION,// what to do?
JEdit,WITHOUT_CLASSIFICATION,//{{{ compareChars()
JEdit,WITHOUT_CLASSIFICATION,//{{{ expand() method
JEdit,WITHOUT_CLASSIFICATION,// m contains either BshMethod or Vector of BshMethod
JEdit,WITHOUT_CLASSIFICATION,// Vector
JEdit,WITHOUT_CLASSIFICATION,//{{{ ClearTypeSelect class
JEdit,WITHOUT_CLASSIFICATION,//{{{ resizeColumnsAppropriately() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserIORequest constructor
JEdit,WITHOUT_CLASSIFICATION,//checkMethodModifiers( method );
JEdit,WITHOUT_CLASSIFICATION,//{{{ getMemberIndex() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Request types
JEdit,WITHOUT_CLASSIFICATION,//{{{ addExtendedAttributes() method
JEdit,WITHOUT_CLASSIFICATION,// Change import precedence if we are a class body/instance // Get import first.
JEdit,WITHOUT_CLASSIFICATION,//{{{ listDirectory() method
JEdit,WITHOUT_CLASSIFICATION,// allow user to change name // case
JEdit,WITHOUT_CLASSIFICATION,//{{{ getItem() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ mkdir() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ collapse() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFSDirectoryEntryTableModel constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ setRoot() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ ExtendedAttribute class
JEdit,WITHOUT_CLASSIFICATION,// we no longer have any // dirs using this extended // attribute
JEdit,WITHOUT_CLASSIFICATION,// this vfs has an extended attribute which is not // in the list ???
JEdit,WITHOUT_CLASSIFICATION,//{{{ showFilePopup() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ clearExpansionState() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ compareTo() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BrowserView constructor
JEdit,WITHOUT_CLASSIFICATION,// how deeply we are nested
JEdit,WITHOUT_CLASSIFICATION,//{{{ focusOnFileView() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ directoryLoaded() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ saveExpansionState() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateFileView() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addToBus() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ loadDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBrowser() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTable() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getParentDirectoryList() method
JEdit,WITHOUT_CLASSIFICATION,// we use SwingUtilities.invokeLater() // so that the action is executed before // the popup is hidden.
JEdit,WITHOUT_CLASSIFICATION,//{{{ WorkThreadListener class
JEdit,WITHOUT_CLASSIFICATION,// Only backup once per session
JEdit,WITHOUT_CLASSIFICATION,//{{{ Sort buffer list
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFSFileNameField constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ doComplete() method
JEdit,WITHOUT_CLASSIFICATION,/* nothing */
JEdit,WITHOUT_CLASSIFICATION,//{{{ filesSelected() method
JEdit,WITHOUT_CLASSIFICATION,// fix for bug #765507 // we don't type complete in save dialog // boxes. Press TAB to do an explicit // complete
JEdit,WITHOUT_CLASSIFICATION,//{{{ VFSFileChooserDialog constructor
JEdit,WITHOUT_CLASSIFICATION,//{{{ doFileExistsWarning() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ goToParent() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ BackspaceAction class
JEdit,WITHOUT_CLASSIFICATION,/* browser.getBrowserView().getTable().addKeyListener(new KeyHandler()); */
JEdit,WITHOUT_CLASSIFICATION,// user pressed enter when the vfs table or // file name field has focus with nothing // selected.
JEdit,WITHOUT_CLASSIFICATION,//{{{ filesActivated() method
JEdit,WITHOUT_CLASSIFICATION,// non-existent file
JEdit,WITHOUT_CLASSIFICATION,//{{{ setFilenameFilter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeViewFromList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getIndentSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getTabSize() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ maybeReload() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Input/output methods
JEdit,WITHOUT_CLASSIFICATION,//{{{ browseDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addViewToList() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ GetFileTypeRequest class
JEdit,WITHOUT_CLASSIFICATION,// there was an error
JEdit,WITHOUT_CLASSIFICATION,//{{{ browseDirectoryInNewWindow() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Browser types
JEdit,WITHOUT_CLASSIFICATION,//{{{ getFilenameFilter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ setShowHiddenFiles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ locateFile() method
JEdit,WITHOUT_CLASSIFICATION,// used by FTP plugin to clear directory cache
JEdit,WITHOUT_CLASSIFICATION,//{{{ getShowHiddenFiles() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ addBrowserListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ Insert class
JEdit,WITHOUT_CLASSIFICATION,//{{{ rootDirectory() method
JEdit,WITHOUT_CLASSIFICATION,// path is the currently viewed directory in the browser
JEdit,WITHOUT_CLASSIFICATION,//{{{ getDirectoryField() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeBrowserListener() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ searchInDirectory() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeAction() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ getBrowserView() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ endRequest() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ removeAllActions() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateFilenameFilter() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ pathsEqual() method
JEdit,WITHOUT_CLASSIFICATION,// Try imported class
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginsMenuButton constructor
JEdit,WITHOUT_CLASSIFICATION,// if a file is selected in OPEN_DIALOG or // SAVE_DIALOG mode just let the listener(s) // handle it
JEdit,WITHOUT_CLASSIFICATION,// Unqualified (simple non-compound) name
JEdit,WITHOUT_CLASSIFICATION,//cacheCount++; // debug
JEdit,WITHOUT_CLASSIFICATION,//{{{ getActionCount() method
JEdit,WITHOUT_CLASSIFICATION,// Look for the loaded command
JEdit,WITHOUT_CLASSIFICATION,// close if this buffer is currently // visible in the view.
JEdit,WITHOUT_CLASSIFICATION,// Unqualified name check imported
JEdit,WITHOUT_CLASSIFICATION,// Now try buffer.<property>
JEdit,WITHOUT_CLASSIFICATION,//{{{ initProxy() method
JEdit,WITHOUT_CLASSIFICATION,// For backwards compatibility
JEdit,WITHOUT_CLASSIFICATION,// First try the buffer-local properties
JEdit,WITHOUT_CLASSIFICATION,// Now try mode.<mode>.<property>
JEdit,WITHOUT_CLASSIFICATION,// Try returning it as an integer first
JEdit,WITHOUT_CLASSIFICATION,//{{{ createMenuBar() method
JEdit,WITHOUT_CLASSIFICATION,// dump stack trace for debugging purposes
JEdit,WITHOUT_CLASSIFICATION,//{{{ startRequest() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CommandsMenuButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ createToolBar() method
JEdit,WITHOUT_CLASSIFICATION,// if found as imported also cache it
JEdit,WITHOUT_CLASSIFICATION,//{{{ PluginsMenuButton class
JEdit,WITHOUT_CLASSIFICATION,//{{{ updateFilterEnabled() method
JEdit,WITHOUT_CLASSIFICATION,//{{{ CommandsMenuButton constructor
JEdit,WITHOUT_CLASSIFICATION,/* we're in a modal dialog */
