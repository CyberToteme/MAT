projectname,classification,commenttext
JFreeChart,DESIGN,// this may be negative
JFreeChart,DESIGN,// TODO: to be implemented
JFreeChart,DESIGN,// TODO:  the subplot areas needs to be moved out of the plot into the plot //        state
JFreeChart,DESIGN,//TODO: shift block down to bottom
JFreeChart,DESIGN,// TODO: it might be a good idea to keep a reference to the color // specified in setPaint() or setColor() rather than creating a // new object every time getPaint() is called.
JFreeChart,DESIGN,// TODO: for now we are ignoring the height constraint
JFreeChart,DESIGN,// first determine the size of the chart rendering area... // TODO workout insets for SWT
JFreeChart,DESIGN,// TODO: implement properly
JFreeChart,DESIGN,// TODO: this must be wrong...
JFreeChart,DESIGN,// TODO: we didn't check the width yet
JFreeChart,DESIGN,// hack to ensure the newly created awt fonts will be rendered with the // same height as the swt one
JFreeChart,DESIGN,//TODO: shift block right by half
JFreeChart,DESIGN,// FIXME: need a locale as well as a timezone
JFreeChart,DESIGN,//TODO: shift block over to right
JFreeChart,DESIGN,// do we need to update the crosshair values?
JFreeChart,DESIGN,// TODO find a better localization key
JFreeChart,DESIGN,// TODO:  this attribute should be transferred to the renderer state.
JFreeChart,DESIGN,// FIXME: implement this low priority
JFreeChart,DESIGN,// FIXME: the XYItemRenderer interface doesn't specify the // getAnnotations() method but it should
JFreeChart,DESIGN,// defer argument checking...
JFreeChart,DESIGN,// calculate the adjusted data area taking into account the 3D effect... // this assumes that there is a 3D renderer all this 3D effect is a // bit of an ugly hack...
JFreeChart,DESIGN,// TODO:  add constructors for combinations of number and date formatters.
JFreeChart,DESIGN,// TODO: move to plot state
JFreeChart,DESIGN,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...
JFreeChart,DESIGN,// defer argument checking
JFreeChart,DESIGN,//FIXME we should really assert a value here
JFreeChart,DESIGN,// TO DO:  these annotations only work with XYPlot see if it is possible to // make ContourPlot a subclass of XYPlot (DG);
JFreeChart,DESIGN,//FIXME we should really assert a value
JFreeChart,DESIGN,// not strictly necessary since the // renderer set for the // parent plot is not used
JFreeChart,DESIGN,// TODO : complete this
JFreeChart,DESIGN,// TODO: fix output when this flag is set to true
JFreeChart,DESIGN,// TODO:  move the above to the plot state
JFreeChart,DESIGN,// FIXME:  this code means that it is not possible to use more than // one domain axis for the combined plots...
JFreeChart,DESIGN,// end of workaround
JFreeChart,DESIGN,// TODO: could change this to itemFillPaint().  For backwards // compatibility it might require a useFillPaint flag.
JFreeChart,DESIGN,// a redraw should NOT trigger another change event
JFreeChart,DESIGN,// unused in parent
JFreeChart,DESIGN,// TODO: In JFreeChart 1.2.0 put this method in the // CategoryItemRenderer interface
JFreeChart,DESIGN,// TODO: rotate the image when drawn with horizontal orientation?
JFreeChart,DESIGN,// TODO: implement this properly
JFreeChart,DESIGN,// FIXME: this should generate a series change event
JFreeChart,DESIGN,// CREATE ENTITIES // FIXME:  these methods should be defined
JFreeChart,DESIGN,// FIXME: the renderer interface doesn't have the drawDomainLine() // method so we have to rely on the renderer being a subclass of // AbstractXYItemRenderer (which is lame)
JFreeChart,DESIGN,// FIXME: this attribute is not used - deprecate?
JFreeChart,DESIGN,// TODO: by coding the event with some information about what changed // in the dataset we could make the recalculation of the interval // more efficient in some cases (for instance if the change is // just an update to a y-value then the x-interval doesn't need // updating)...
JFreeChart,DESIGN,// the method we want isn't in the CategoryItemRenderer // interface...
JFreeChart,DESIGN,// FIXME: what if value is null on next line?
JFreeChart,DESIGN,// TODO:  this needs to move into the renderer state
JFreeChart,DESIGN,//TODO: implement this method properly
JFreeChart,DESIGN,// hack to ensure the newly created swt fonts will be rendered with the // same height as the awt one
JFreeChart,DESIGN,// unused but must return something so while we are at it...
JFreeChart,DESIGN,// FIXME: perhaps we should clone the data list
JFreeChart,DESIGN,// if we are rendering the values as percentages we need to calculate // the total for the current item.  Unfortunately here we end up // repeating the calculation more times than is strictly necessary - // hopefully I'll come back to this and find a way to add the // total(s) to the renderer state.  The other problem is we implicitly // assume the dataset has no negative values...perhaps that can be // fixed too.
JFreeChart,DESIGN,// Note: It would be nice to pre-calculate this per series
JFreeChart,DESIGN,// we assume that all other Paint instances implement equals() and // hashCode()...of course that might not be true but what can we // do about it?
JFreeChart,DESIGN,// FIXME: use other fields too
JFreeChart,DESIGN,// all attributes are immutable so we can just return the super.clone() // FIXME: in fact the generator itself is immutable so cloning is // not necessary
JFreeChart,DESIGN,// here's a quirk - the API has been defined in terms of a plain // TimePeriod which cannot make use of the timezone and locale // specified in the constructor...so we only do the time zone // pegging if the period is an instanceof RegularTimePeriod
JFreeChart,DESIGN,// now handle specific plot types (and yes I know this is some // really ugly code that has to be manually updated any time a new // plot type is added - I should have written something much cooler // but I didn't and neither did anyone else).
JFreeChart,DESIGN,// TODO: URLEncode?
JFreeChart,DESIGN,// TODO Revert to SVN revision 2469 in JFreeChart 1.0.16 //      (MultipleGradientPaint's / JDK issues) // TODO THEN: change visibility of ALL darker(...) Methods EXCEPT //      darker(Paint) to private!
JFreeChart,DESIGN,//TODO replace getSize by getBounds ?
JFreeChart,DESIGN,// TODO: check threshold
JFreeChart,DESIGN,// FIXME: add setBaseItemURLGenerator(CategoryURLGenerator boolean) ?
JFreeChart,DESIGN,// FIXME: add setSeriesItemURLGenerator(int CategoryURLGenerator boolean)?
JFreeChart,DESIGN,// now we handle some special cases - yes UGLY code alert!
JFreeChart,DESIGN,// FIXME:  it probably makes sense to allocate an array of 256 Colors // and lazily populate this array...
JFreeChart,DESIGN,// TODO: need to fetch this from localised resources
JFreeChart,DESIGN,// FIXME: No getValueFormat() method?
JFreeChart,DESIGN,// here we could probably be a little faster by searching for both // indices simultaneously but I'll look at that later if it seems // like it matters...
JFreeChart,DESIGN,// TODO: complete this
JFreeChart,DESIGN,// FIXME: this attribute is never used - deprecate?
JFreeChart,DESIGN,// FIXME: Clone the attributed string if it is not null
JFreeChart,DESIGN,// report this?
JFreeChart,DESIGN,// this may be obsolete (not used anywhere)
JFreeChart,DESIGN,// TODO: is this a good idea?
JFreeChart,DESIGN,/// a kludge to make everything work when no rows returned
JFreeChart,DESIGN,//TODO: shift block down by half
JFreeChart,DESIGN,// FIXME better ask the renderer instead of DatasetUtilities
JFreeChart,DESIGN,// TODO: implement the entity for the annotation
JFreeChart,DESIGN,// needs to be improved !!!
JFreeChart,DESIGN,// not used by plot
JFreeChart,DESIGN,// FIXME:  need a locale as well as a timezone
JFreeChart,DESIGN,// TODO: For JFreeChart 1.2.0 this method should go in the //       ShapeUtilities class
JFreeChart,DESIGN,// we'll have to use the method in the interface but // this doesn't have the paint and stroke settings...
JFreeChart,DESIGN,// FIXME: Check that there isn't already a series with the same key
JFreeChart,DESIGN,// I know it's bad to create object. better idea?
JFreeChart,DESIGN,// FIXME: clone generator
JFreeChart,DESIGN,// TODO: use a generator here
JFreeChart,IMPLEMENTATION,// TODO: I think we need to make sure the keys are actually cloned // whereas the paint instances are always immutable so they're OK
JFreeChart,IMPLEMENTATION,// FIXME: draw outliers
JFreeChart,IMPLEMENTATION,// TODO: I think we need to make sure the keys are actually cloned // whereas the stroke instances are always immutable so they're OK
JFreeChart,IMPLEMENTATION,// not implemented
JFreeChart,IMPLEMENTATION,"/**     * Returns a string representing the week (e.g. ""Week 9 2002"").     *     * TODO: look at internationalisation.     *     * @return A string representing the week.     */"
JFreeChart,IMPLEMENTATION,// FIXME: show a dialog with the error
JFreeChart,IMPLEMENTATION,// TODO: draw the interval marker with a 3D effect
JFreeChart,IMPLEMENTATION,// TODO: add serialization support for images
JFreeChart,IMPLEMENTATION,// could make this configurable
JFreeChart,IMPLEMENTATION,// TODO see if we need to apply some line color and style to the // axis traces
JFreeChart,IMPLEMENTATION,// FIXME:  implement this...
JFreeChart,IMPLEMENTATION,"/** * An annotation that allows an image to be placed at some location on * an {@link XYPlot}. * * TODO:  implement serialization properly (image is not serializable). */"
JFreeChart,WITHOUT_CLASSIFICATION,// if not check if there is a paint defined for the specified key
JFreeChart,WITHOUT_CLASSIFICATION,// RANGE / RANGE
JFreeChart,WITHOUT_CLASSIFICATION,// height is OK but width must be constrained
JFreeChart,WITHOUT_CLASSIFICATION,// do we need to fill the buffer?
JFreeChart,WITHOUT_CLASSIFICATION,// check that the clone doesn't share the same underlying arrays.
JFreeChart,WITHOUT_CLASSIFICATION,// now replacing the dataset should update the axis range...
JFreeChart,WITHOUT_CLASSIFICATION,// minorTickCount
JFreeChart,WITHOUT_CLASSIFICATION,// create a dataset...
JFreeChart,WITHOUT_CLASSIFICATION,// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)
JFreeChart,WITHOUT_CLASSIFICATION,// build first tab
JFreeChart,WITHOUT_CLASSIFICATION,/*Comparable k =*/
JFreeChart,WITHOUT_CLASSIFICATION,//row 2: background paint for the chart
JFreeChart,WITHOUT_CLASSIFICATION,// mercuryPaint
JFreeChart,WITHOUT_CLASSIFICATION,// period
JFreeChart,WITHOUT_CLASSIFICATION,// should get IllegalArgumentException for negative index
JFreeChart,WITHOUT_CLASSIFICATION,// create a legend if requested...
JFreeChart,WITHOUT_CLASSIFICATION,// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();
JFreeChart,WITHOUT_CLASSIFICATION,// Dispose of any fonts we have created
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,//empty cell // row 2
JFreeChart,WITHOUT_CLASSIFICATION,// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);
JFreeChart,WITHOUT_CLASSIFICATION,// Create the color-change dialog
JFreeChart,WITHOUT_CLASSIFICATION,// draw the item labels if there are any...
JFreeChart,WITHOUT_CLASSIFICATION,// build second tab
JFreeChart,WITHOUT_CLASSIFICATION,// you can add a null list - it would have been better if this // required EMPTY_LIST
JFreeChart,WITHOUT_CLASSIFICATION,// row 4
JFreeChart,WITHOUT_CLASSIFICATION,// check if previously colinear
JFreeChart,WITHOUT_CLASSIFICATION,// set the plot properties...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour
JFreeChart,WITHOUT_CLASSIFICATION,//label.setFont(font);
JFreeChart,WITHOUT_CLASSIFICATION,// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
JFreeChart,WITHOUT_CLASSIFICATION,// don't need to do anything
JFreeChart,WITHOUT_CLASSIFICATION,// no need to instantiate this
JFreeChart,WITHOUT_CLASSIFICATION,// row 1
JFreeChart,WITHOUT_CLASSIFICATION,// roseHighlightPaint
JFreeChart,WITHOUT_CLASSIFICATION,// return the appropriate axis editor
JFreeChart,WITHOUT_CLASSIFICATION,/* TimeSeriesDataItem item = */
JFreeChart,WITHOUT_CLASSIFICATION,// Create the new font and set it into the title // label
JFreeChart,WITHOUT_CLASSIFICATION,/* shape visible = */
JFreeChart,WITHOUT_CLASSIFICATION,// check a regular value
JFreeChart,WITHOUT_CLASSIFICATION,// test collection 3 which doesn't define all tasks in all series
JFreeChart,WITHOUT_CLASSIFICATION,/* XYSeries s = */
JFreeChart,WITHOUT_CLASSIFICATION,// row 3
JFreeChart,WITHOUT_CLASSIFICATION,// when the dataset contains one or more series but those series  // contain no items we expect the value range to be null
JFreeChart,WITHOUT_CLASSIFICATION,// Use a colored text field to show the color
JFreeChart,WITHOUT_CLASSIFICATION,//not first tick to be displayed //no tick label
JFreeChart,WITHOUT_CLASSIFICATION,// Create the font-change dialog
JFreeChart,WITHOUT_CLASSIFICATION,// in the following code barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute because we should extend the non-base end of the bar
JFreeChart,WITHOUT_CLASSIFICATION,// Get the item count for the series so that we can know which is the // end of the series.
JFreeChart,WITHOUT_CLASSIFICATION,//deal with range axis
JFreeChart,WITHOUT_CLASSIFICATION,/* shape filled = */
JFreeChart,WITHOUT_CLASSIFICATION,// set the range axis to display integers only...
JFreeChart,WITHOUT_CLASSIFICATION,// convert the font size (in pt for awt) to height in pixels for swt
JFreeChart,WITHOUT_CLASSIFICATION,// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...
JFreeChart,WITHOUT_CLASSIFICATION,// use item paint for outlines by // default not outline paint
JFreeChart,WITHOUT_CLASSIFICATION,// handle the special case where the dataset has y-intervals that // we want to measure
JFreeChart,WITHOUT_CLASSIFICATION,/*CategoryPlot plot =*/
JFreeChart,WITHOUT_CLASSIFICATION,//deal with domain axis
JFreeChart,WITHOUT_CLASSIFICATION,// we're doing this for testing only and make sure that we // only add data in ascending order by x-value
JFreeChart,WITHOUT_CLASSIFICATION,// verify max value
JFreeChart,WITHOUT_CLASSIFICATION,// change a series outline stroke
JFreeChart,WITHOUT_CLASSIFICATION,// verify min value
JFreeChart,WITHOUT_CLASSIFICATION,// check an inherited attribute
JFreeChart,WITHOUT_CLASSIFICATION,//gridBandPaint
JFreeChart,WITHOUT_CLASSIFICATION,// starts at the back wraps around front and // finishes at back again
JFreeChart,WITHOUT_CLASSIFICATION,//deal with plot appearance
JFreeChart,WITHOUT_CLASSIFICATION,// test a customised instance
JFreeChart,WITHOUT_CLASSIFICATION,// row 4: orientation
JFreeChart,WITHOUT_CLASSIFICATION,// rangeAxisLocation...
JFreeChart,WITHOUT_CLASSIFICATION,// row 2
JFreeChart,WITHOUT_CLASSIFICATION,// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards the original transform is restored
JFreeChart,WITHOUT_CLASSIFICATION,// row 3: background paint
JFreeChart,WITHOUT_CLASSIFICATION,// time zone
JFreeChart,WITHOUT_CLASSIFICATION,// row 1: stroke
JFreeChart,WITHOUT_CLASSIFICATION,// clip top and bottom bounds to data area
JFreeChart,WITHOUT_CLASSIFICATION,// check dataset with one time period
JFreeChart,WITHOUT_CLASSIFICATION,// BAR X
JFreeChart,WITHOUT_CLASSIFICATION,// we can't do anything
JFreeChart,WITHOUT_CLASSIFICATION,// sectionOutlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// we use ValueMarker for the tests because we need a concrete // subclass...
JFreeChart,WITHOUT_CLASSIFICATION,// borderVisible
JFreeChart,WITHOUT_CLASSIFICATION,// to be consistent with other Graphics2D implementations
JFreeChart,WITHOUT_CLASSIFICATION,// validate base timeline exclusions added as timeline's esceptions
JFreeChart,WITHOUT_CLASSIFICATION,// domainAxisLocation - no longer a separate field but test anyway...
JFreeChart,WITHOUT_CLASSIFICATION,// row keys...
JFreeChart,WITHOUT_CLASSIFICATION,//private TickUnits standardTickUnits;
JFreeChart,WITHOUT_CLASSIFICATION,// backgroundImage
JFreeChart,WITHOUT_CLASSIFICATION,// try unknown column key
JFreeChart,WITHOUT_CLASSIFICATION,// minorTickLength
JFreeChart,WITHOUT_CLASSIFICATION,// when the dataset contains one or more series but those series // contain no items we still expect the range to be null
JFreeChart,WITHOUT_CLASSIFICATION,// labelFont
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01010 - bottom and right only
JFreeChart,WITHOUT_CLASSIFICATION,// build the third tab
JFreeChart,WITHOUT_CLASSIFICATION,// do we need to resize the buffer?
JFreeChart,WITHOUT_CLASSIFICATION,// column keys...
JFreeChart,WITHOUT_CLASSIFICATION,// even though the axis is not visible we need ticks for the // gridlines...
JFreeChart,WITHOUT_CLASSIFICATION,// ok and cancel buttons
JFreeChart,WITHOUT_CLASSIFICATION,// does nothing - override if necessary
JFreeChart,WITHOUT_CLASSIFICATION,// don't zoom unless the mouse pointer is in the plot's data area
JFreeChart,WITHOUT_CLASSIFICATION,// if there is a tool tip we expect it to generate the title and // alt values so we only add an empty alt if there is no tooltip
JFreeChart,WITHOUT_CLASSIFICATION,// borderStroke
JFreeChart,WITHOUT_CLASSIFICATION,// ensure we have a maximum value to use on the axes
JFreeChart,WITHOUT_CLASSIFICATION,// we dispose resources we own but user must dispose gc
JFreeChart,WITHOUT_CLASSIFICATION,// remove plot2 but plot1 is removed instead
JFreeChart,WITHOUT_CLASSIFICATION,// set the line style to solid by default
JFreeChart,WITHOUT_CLASSIFICATION,// we are starting a new series path
JFreeChart,WITHOUT_CLASSIFICATION,// apply dash style if any
JFreeChart,WITHOUT_CLASSIFICATION,// it is too slow to look at every data item so let's just look at // the first middle and last items...
JFreeChart,WITHOUT_CLASSIFICATION,//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer
JFreeChart,WITHOUT_CLASSIFICATION,//axisLabelPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// properties // save // print // zoom // tooltips
JFreeChart,WITHOUT_CLASSIFICATION,// retrieve the swt font description in an os indept way
JFreeChart,WITHOUT_CLASSIFICATION,// collect entity and tool tip information...
JFreeChart,WITHOUT_CLASSIFICATION,// create a new awt font with the appropiate data
JFreeChart,WITHOUT_CLASSIFICATION,// and independent...
JFreeChart,WITHOUT_CLASSIFICATION,// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer
JFreeChart,WITHOUT_CLASSIFICATION,// first get the range without the interval then expand it for the // interval width
JFreeChart,WITHOUT_CLASSIFICATION,// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()) swtColor);
JFreeChart,WITHOUT_CLASSIFICATION,// renderingHints
JFreeChart,WITHOUT_CLASSIFICATION,// Next setup the plot area
JFreeChart,WITHOUT_CLASSIFICATION,//this.myColor = new Color(getDisplay() color.getRGB());
JFreeChart,WITHOUT_CLASSIFICATION,// seems to be the same...
JFreeChart,WITHOUT_CLASSIFICATION,// SWT and AWT share the same style constants.
JFreeChart,WITHOUT_CLASSIFICATION,// set the axis properties
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseStroke(Stroke boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// create the dataset...
JFreeChart,WITHOUT_CLASSIFICATION,// null will be returned
JFreeChart,WITHOUT_CLASSIFICATION,// subtitles
JFreeChart,WITHOUT_CLASSIFICATION,// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode which we do when we're not using // the buffer (if there is a buffer then at the end of this method we // just trigger a repaint)
JFreeChart,WITHOUT_CLASSIFICATION,// borderPaint
JFreeChart,WITHOUT_CLASSIFICATION,// draw the markers that are associated with a specific dataset...
JFreeChart,WITHOUT_CLASSIFICATION,// title
JFreeChart,WITHOUT_CLASSIFICATION,// start with a unit that is at least 1/10th of the axis length
JFreeChart,WITHOUT_CLASSIFICATION,// backgroundPaint
JFreeChart,WITHOUT_CLASSIFICATION,// adjust the plot area for interior spacing and labels...
JFreeChart,WITHOUT_CLASSIFICATION,// plot
JFreeChart,WITHOUT_CLASSIFICATION,// create the chart...
JFreeChart,WITHOUT_CLASSIFICATION,// add an item entity if this information is being collected
JFreeChart,WITHOUT_CLASSIFICATION,// try a Double.POSITIVE_INFINITY
JFreeChart,WITHOUT_CLASSIFICATION,// Reference: http://www.antigrain.com/research/bezier_interpolation/
JFreeChart,WITHOUT_CLASSIFICATION,// pdfDocument class will be null so the function will return false
JFreeChart,WITHOUT_CLASSIFICATION,// as a special case if the bar colour has alpha == 0 we draw // nothing.
JFreeChart,WITHOUT_CLASSIFICATION,//private double angle;
JFreeChart,WITHOUT_CLASSIFICATION,// avoid to draw overlapping tick labels
JFreeChart,WITHOUT_CLASSIFICATION,// check independence
JFreeChart,WITHOUT_CLASSIFICATION,// a null key should throw an IllegalArgumentException
JFreeChart,WITHOUT_CLASSIFICATION,// adding something to the returned list should NOT change the chart
JFreeChart,WITHOUT_CLASSIFICATION,//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0 axis.getLowerBound() EPSILON);
JFreeChart,WITHOUT_CLASSIFICATION,// perform the zoom on each range axis
JFreeChart,WITHOUT_CLASSIFICATION,// include legend
JFreeChart,WITHOUT_CLASSIFICATION,// draw the domain grid lines if any...
JFreeChart,WITHOUT_CLASSIFICATION,// chart title
JFreeChart,WITHOUT_CLASSIFICATION,// check for bounds interval that includes 1
JFreeChart,WITHOUT_CLASSIFICATION,// outlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// deregister the collection as a change listener to each series in the // collection
JFreeChart,WITHOUT_CLASSIFICATION,//private Paint arrowPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// value 1
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// align this rectangle to the frameAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// data // include legend // tooltips // urls
JFreeChart,WITHOUT_CLASSIFICATION,// standard test
JFreeChart,WITHOUT_CLASSIFICATION,// setup for collecting optional entity info...
JFreeChart,WITHOUT_CLASSIFICATION,//private NumberTickUnit tickUnit;
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing if item is not visible
JFreeChart,WITHOUT_CLASSIFICATION,//drawingSupplier;
JFreeChart,WITHOUT_CLASSIFICATION,// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
JFreeChart,WITHOUT_CLASSIFICATION,// use reflection to get the SVG string
JFreeChart,WITHOUT_CLASSIFICATION,//legendItemPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// we suppress shadow generation because SVG is a vector format and // the shadow effect is applied via bitmap effects...
JFreeChart,WITHOUT_CLASSIFICATION,// clear any exceptions in this timeline
JFreeChart,WITHOUT_CLASSIFICATION,// create array xIndex to hold // new column indices
JFreeChart,WITHOUT_CLASSIFICATION,// domainAxis...
JFreeChart,WITHOUT_CLASSIFICATION,// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
JFreeChart,WITHOUT_CLASSIFICATION,//wallPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// selected rectangle shouldn't extend outside the data area...
JFreeChart,WITHOUT_CLASSIFICATION,// if the axes use a linear scale you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;
JFreeChart,WITHOUT_CLASSIFICATION,// close
JFreeChart,WITHOUT_CLASSIFICATION,// reserve some space for the domain axis...
JFreeChart,WITHOUT_CLASSIFICATION,// seriesKey
JFreeChart,WITHOUT_CLASSIFICATION,// check that the listener lists are independent
JFreeChart,WITHOUT_CLASSIFICATION,//shadowPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// reset the min and max
JFreeChart,WITHOUT_CLASSIFICATION,//private Stroke arrowStroke;
JFreeChart,WITHOUT_CLASSIFICATION,// return the override if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,//shadowVisible;
JFreeChart,WITHOUT_CLASSIFICATION,// bar is not visible
JFreeChart,WITHOUT_CLASSIFICATION,// actual value set below
JFreeChart,WITHOUT_CLASSIFICATION,//tickLabelPaint;
JFreeChart,WITHOUT_CLASSIFICATION,//parameter value is > 0 // The Math.log() function is based on e not 10.
JFreeChart,WITHOUT_CLASSIFICATION,//thermometerPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically use advanceTime() followed by this:
JFreeChart,WITHOUT_CLASSIFICATION,// now try to reject equality...
JFreeChart,WITHOUT_CLASSIFICATION,//barPainter;
JFreeChart,WITHOUT_CLASSIFICATION,// if the axis is not visible don't draw it...
JFreeChart,WITHOUT_CLASSIFICATION,//xyBarPainter;
JFreeChart,WITHOUT_CLASSIFICATION,// shadowXOffset
JFreeChart,WITHOUT_CLASSIFICATION,//errorIndicatorPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// draw the plot (axes and data visualisation)
JFreeChart,WITHOUT_CLASSIFICATION,//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):
JFreeChart,WITHOUT_CLASSIFICATION,// find optimum height
JFreeChart,WITHOUT_CLASSIFICATION,//private double tipRadius;
JFreeChart,WITHOUT_CLASSIFICATION,// add a second dataset plotted against a second x axis
JFreeChart,WITHOUT_CLASSIFICATION,// Note that for consistency with the AWT implementation it is // necessary to switch temporarily the foreground and background // colours
JFreeChart,WITHOUT_CLASSIFICATION,// work out if scaling is required...
JFreeChart,WITHOUT_CLASSIFICATION,//private double arrowLength;
JFreeChart,WITHOUT_CLASSIFICATION,// don't draw this tick label
JFreeChart,WITHOUT_CLASSIFICATION,//private double baseRadius;
JFreeChart,WITHOUT_CLASSIFICATION,// redraw the zoom rectangle (if present) - if useBuffer is false // we use XOR so we can XOR the rectangle away again without redrawing // the chart
JFreeChart,WITHOUT_CLASSIFICATION,//private boolean autoRangeIncludesZero;
JFreeChart,WITHOUT_CLASSIFICATION,// set the outline paint to fully transparent then the legend shape // will just have the same colour as the lines drawn by the renderer
JFreeChart,WITHOUT_CLASSIFICATION,// first field contains the row key
JFreeChart,WITHOUT_CLASSIFICATION,// weight
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01001 - bottom and center only
JFreeChart,WITHOUT_CLASSIFICATION,// now map the dataset to the second xAxis
JFreeChart,WITHOUT_CLASSIFICATION,//g2.clip(clipArea);
JFreeChart,WITHOUT_CLASSIFICATION,// five dates to check...
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//private double labelOffset;
JFreeChart,WITHOUT_CLASSIFICATION,//handle panning if we have a start point else unregister
JFreeChart,WITHOUT_CLASSIFICATION,/* BufferedImage image = */
JFreeChart,WITHOUT_CLASSIFICATION,// @mgs: using the method's return value was missing
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10100 - top and left only
JFreeChart,WITHOUT_CLASSIFICATION,//get upper bound value
JFreeChart,WITHOUT_CLASSIFICATION,// value
JFreeChart,WITHOUT_CLASSIFICATION,// Unregister the collection as a change listener to each series in // the collection.
JFreeChart,WITHOUT_CLASSIFICATION,// stroke
JFreeChart,WITHOUT_CLASSIFICATION,// create the renderer...
JFreeChart,WITHOUT_CLASSIFICATION,// replace an existing series
JFreeChart,WITHOUT_CLASSIFICATION,// category
JFreeChart,WITHOUT_CLASSIFICATION,// add an entity for the item but only if it falls within the // data area...
JFreeChart,WITHOUT_CLASSIFICATION,// categoryAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// START: check d0 and d1
JFreeChart,WITHOUT_CLASSIFICATION,// tickMarkPosition
JFreeChart,WITHOUT_CLASSIFICATION,// test a default instance
JFreeChart,WITHOUT_CLASSIFICATION,// check that setting the min date to something on or after the // current min date works...
JFreeChart,WITHOUT_CLASSIFICATION,// offset the start of the boxes if the total width used is smaller // than the category width
JFreeChart,WITHOUT_CLASSIFICATION,// tickUnit
JFreeChart,WITHOUT_CLASSIFICATION,// draw the category labels and axis label
JFreeChart,WITHOUT_CLASSIFICATION,// timeline
JFreeChart,WITHOUT_CLASSIFICATION,//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.
JFreeChart,WITHOUT_CLASSIFICATION,// range
JFreeChart,WITHOUT_CLASSIFICATION,// suppresses compiler warning
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// the following fields are inherited from the AbstractXYItemRenderer
JFreeChart,WITHOUT_CLASSIFICATION,// if the bug is still present this leads to an endless loop
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11000 - top and bottom only
JFreeChart,WITHOUT_CLASSIFICATION,// END: check d3 and d4
JFreeChart,WITHOUT_CLASSIFICATION,// MIDDLE: check d1 d2 and d3
JFreeChart,WITHOUT_CLASSIFICATION,// if this series belongs to a dataset the dataset might veto the // change if it results in two series within the dataset having the // same key
JFreeChart,WITHOUT_CLASSIFICATION,/*JFreeChart chart =*/
JFreeChart,WITHOUT_CLASSIFICATION,// '+' remember value is negative
JFreeChart,WITHOUT_CLASSIFICATION,// an empty dataset should return a null range
JFreeChart,WITHOUT_CLASSIFICATION,// changing the item that was added should not change the series
JFreeChart,WITHOUT_CLASSIFICATION,// baseStroke
JFreeChart,WITHOUT_CLASSIFICATION,//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient
JFreeChart,WITHOUT_CLASSIFICATION,// argument checking delegated...
JFreeChart,WITHOUT_CLASSIFICATION,// try an empty dataset - should return a null range
JFreeChart,WITHOUT_CLASSIFICATION,// shapeLocation
JFreeChart,WITHOUT_CLASSIFICATION,// the row may not have an entry for this key in which case the // return value is null
JFreeChart,WITHOUT_CLASSIFICATION,// test independence
JFreeChart,WITHOUT_CLASSIFICATION,// here we need to update the UI for the popup menu if the panel // has one...
JFreeChart,WITHOUT_CLASSIFICATION,//private double arrowWidth;
JFreeChart,WITHOUT_CLASSIFICATION,// both axes
JFreeChart,WITHOUT_CLASSIFICATION,// END: check d0
JFreeChart,WITHOUT_CLASSIFICATION,// reserve space for the range axes (if any)...
JFreeChart,WITHOUT_CLASSIFICATION,// START: check d0
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// fetch listeners from local storage
JFreeChart,WITHOUT_CLASSIFICATION,// case 1 - object is mutable but not PublicCloneable
JFreeChart,WITHOUT_CLASSIFICATION,// work out the space required by the domain axis...
JFreeChart,WITHOUT_CLASSIFICATION,// MIDDLE: check d0
JFreeChart,WITHOUT_CLASSIFICATION,// check retrieve value by key
JFreeChart,WITHOUT_CLASSIFICATION,// get desired width and height from somewhere then...
JFreeChart,WITHOUT_CLASSIFICATION,// no plot no data
JFreeChart,WITHOUT_CLASSIFICATION,// Shifting with a delta of 0 does not change the range
JFreeChart,WITHOUT_CLASSIFICATION,// set axis bounds to be both greater than 1
JFreeChart,WITHOUT_CLASSIFICATION,/// Get the column names and cache them.
JFreeChart,WITHOUT_CLASSIFICATION,// check that changing a tick label font in a1 doesn't change a2
JFreeChart,WITHOUT_CLASSIFICATION,// check that changing a tick label paint in a1 doesn't change a2
JFreeChart,WITHOUT_CLASSIFICATION,// null dataset throws IllegalArgumentException
JFreeChart,WITHOUT_CLASSIFICATION,// check that changing a category label tooltip in a1 doesn't change a2
JFreeChart,WITHOUT_CLASSIFICATION,// if the popup menu has already been triggered then ignore dragging...
JFreeChart,WITHOUT_CLASSIFICATION,// lowerMargin
JFreeChart,WITHOUT_CLASSIFICATION,// check for both bounds smaller than 1
JFreeChart,WITHOUT_CLASSIFICATION,// the line is visible - if it wasn't we'd have // returned false from within the while loop above
JFreeChart,WITHOUT_CLASSIFICATION,// the CategoryDataset interface expects a list of series but // we've stored them in an array...
JFreeChart,WITHOUT_CLASSIFICATION,// categoryMargin
JFreeChart,WITHOUT_CLASSIFICATION,// upperMargin
JFreeChart,WITHOUT_CLASSIFICATION,// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.
JFreeChart,WITHOUT_CLASSIFICATION,// set start and end date
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00101 - left and center items
JFreeChart,WITHOUT_CLASSIFICATION,// create the canvas and add the required listeners
JFreeChart,WITHOUT_CLASSIFICATION,// fillPaintList
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is before any scaling to fit the panel)
JFreeChart,WITHOUT_CLASSIFICATION,// if fixed auto range then derive lower bound...
JFreeChart,WITHOUT_CLASSIFICATION,// set the new dataset and register the chart as a change listener...
JFreeChart,WITHOUT_CLASSIFICATION,// advance line Stroke
JFreeChart,WITHOUT_CLASSIFICATION,// only draw if we have good values
JFreeChart,WITHOUT_CLASSIFICATION,// offset
JFreeChart,WITHOUT_CLASSIFICATION,// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.
JFreeChart,WITHOUT_CLASSIFICATION,// try a null key - should throw an exception
JFreeChart,WITHOUT_CLASSIFICATION,// compute common denominator
JFreeChart,WITHOUT_CLASSIFICATION,//private double fixedAutoRange;
JFreeChart,WITHOUT_CLASSIFICATION,// paint
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 2 : Comparing to a general object // ---------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// tickLabelPaint
JFreeChart,WITHOUT_CLASSIFICATION,// register as a listener with sub-components...
JFreeChart,WITHOUT_CLASSIFICATION,// categoryLabelURLs
JFreeChart,WITHOUT_CLASSIFICATION,// draw domain crosshair if required...
JFreeChart,WITHOUT_CLASSIFICATION,// now draw annotations and render data items...
JFreeChart,WITHOUT_CLASSIFICATION,// tickLabelPaint2
JFreeChart,WITHOUT_CLASSIFICATION,// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //
JFreeChart,WITHOUT_CLASSIFICATION,//private Shape leftArrow;
JFreeChart,WITHOUT_CLASSIFICATION,// verify attributes set during object construction
JFreeChart,WITHOUT_CLASSIFICATION,// after s1 is removed from the collection we should be able to set // the key to anything we want...
JFreeChart,WITHOUT_CLASSIFICATION,// cycle bound mapping
JFreeChart,WITHOUT_CLASSIFICATION,// many of the zoom methods need a screen location - all we have is // the zoomPoint but it might be null.  Here we grab the x and y // coordinates or use defaults...
JFreeChart,WITHOUT_CLASSIFICATION,// ----------------------- // --- Private Methods --- // -----------------------
JFreeChart,WITHOUT_CLASSIFICATION,// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min
JFreeChart,WITHOUT_CLASSIFICATION,// generic map for each series
JFreeChart,WITHOUT_CLASSIFICATION,// reduce the default margins
JFreeChart,WITHOUT_CLASSIFICATION,// advance line Visible
JFreeChart,WITHOUT_CLASSIFICATION,// for MacOSX we can't use the CTRL key for mouse drags see: // http://developer.apple.com/qa/qa2004/qa1362.html
JFreeChart,WITHOUT_CLASSIFICATION,/* PUT exclusions in test */
JFreeChart,WITHOUT_CLASSIFICATION,// try a dataset with some content...
JFreeChart,WITHOUT_CLASSIFICATION,// Set start time
JFreeChart,WITHOUT_CLASSIFICATION,//lower bound and margin OK; get log10 of lower bound
JFreeChart,WITHOUT_CLASSIFICATION,// Create a segmented time line (segment size : 15 minutes)
JFreeChart,WITHOUT_CLASSIFICATION,// redrawing the chart every time...
JFreeChart,WITHOUT_CLASSIFICATION,/** These constants control test cycles in the validateXXXX methods. */
JFreeChart,WITHOUT_CLASSIFICATION,// make the chart area a square
JFreeChart,WITHOUT_CLASSIFICATION,/*Quarter q =*/
JFreeChart,WITHOUT_CLASSIFICATION,// make the background of the buffer clear and transparent
JFreeChart,WITHOUT_CLASSIFICATION,// add minor ticks (for gridlines)
JFreeChart,WITHOUT_CLASSIFICATION,// a Double.NaN should be ignored
JFreeChart,WITHOUT_CLASSIFICATION,// calculate 9am on the first Monday after 2001-01-01
JFreeChart,WITHOUT_CLASSIFICATION,// default instances
JFreeChart,WITHOUT_CLASSIFICATION,// low
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the max label width from the plot dimensions because // a circular pie can leave a lot more room for labels...
JFreeChart,WITHOUT_CLASSIFICATION,// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...
JFreeChart,WITHOUT_CLASSIFICATION,// if there is an explicit mapping to the default group it is counted
JFreeChart,WITHOUT_CLASSIFICATION,// test 9am-4pm Monday through Friday timeline
JFreeChart,WITHOUT_CLASSIFICATION,// the segment is entirely at the // front of the chart
JFreeChart,WITHOUT_CLASSIFICATION,// RANGE / NONE
JFreeChart,WITHOUT_CLASSIFICATION,// test some included and excluded segments
JFreeChart,WITHOUT_CLASSIFICATION,//// STROKE ///////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01000 - bottom item only
JFreeChart,WITHOUT_CLASSIFICATION,// zap the buffer onto the panel...
JFreeChart,WITHOUT_CLASSIFICATION,// logically consecutive segments non-physically consecutive // (with non-contained time in between)
JFreeChart,WITHOUT_CLASSIFICATION,// POSITIVE ITEM LABEL POSITION
JFreeChart,WITHOUT_CLASSIFICATION,// verify segments are consecutive and correct
JFreeChart,WITHOUT_CLASSIFICATION,// get the data point...
JFreeChart,WITHOUT_CLASSIFICATION,// test inc() method
JFreeChart,WITHOUT_CLASSIFICATION,// we create a new but empty chartMouseListeners list
JFreeChart,WITHOUT_CLASSIFICATION,// visible flag...
JFreeChart,WITHOUT_CLASSIFICATION,//dmo: (end dmo additions)
JFreeChart,WITHOUT_CLASSIFICATION,// try next segment
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelsVisible
JFreeChart,WITHOUT_CLASSIFICATION,// exclude current exception and last one
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// check that the series visible flag is observed
JFreeChart,WITHOUT_CLASSIFICATION,// go to another segment to continue test
JFreeChart,WITHOUT_CLASSIFICATION,// no data in the parent plot
JFreeChart,WITHOUT_CLASSIFICATION,// make the link area a square if the pie chart is to be circular... // is circular?
JFreeChart,WITHOUT_CLASSIFICATION,// test inc(n) method
JFreeChart,WITHOUT_CLASSIFICATION,// fixed domain axis space...
JFreeChart,WITHOUT_CLASSIFICATION,// select a tick unit that is the next one bigger than the current // (log) range divided by 50
JFreeChart,WITHOUT_CLASSIFICATION,// font
JFreeChart,WITHOUT_CLASSIFICATION,// tick label insets...
JFreeChart,WITHOUT_CLASSIFICATION,// the link area defines the dog leg points for the linking lines to // the labels
JFreeChart,WITHOUT_CLASSIFICATION,// verify list of exceptions
JFreeChart,WITHOUT_CLASSIFICATION,// lowerBound
JFreeChart,WITHOUT_CLASSIFICATION,// tick labels visible flag...
JFreeChart,WITHOUT_CLASSIFICATION,// fill in the exceptions
JFreeChart,WITHOUT_CLASSIFICATION,// rangeAxisLocation - no longer a separate field but test anyway...
JFreeChart,WITHOUT_CLASSIFICATION,// should be an excluded segment
JFreeChart,WITHOUT_CLASSIFICATION,// add an entity for the item but only if it falls within the data // area...
JFreeChart,WITHOUT_CLASSIFICATION,// should be an included segment
JFreeChart,WITHOUT_CLASSIFICATION,// include current exception and last one
JFreeChart,WITHOUT_CLASSIFICATION,// tick mark paint...
JFreeChart,WITHOUT_CLASSIFICATION,// we need to guard against this.zoomPoint being null
JFreeChart,WITHOUT_CLASSIFICATION,//long v = stl.toTimelineValue(946684800020L);
JFreeChart,WITHOUT_CLASSIFICATION,// strokeList
JFreeChart,WITHOUT_CLASSIFICATION,// tickLabelOffset
JFreeChart,WITHOUT_CLASSIFICATION,// if multiple axes are mapped the first in the list should be // returned...
JFreeChart,WITHOUT_CLASSIFICATION,// only add an exception if it is currently an included segment
JFreeChart,WITHOUT_CLASSIFICATION,// consider time periods to be ordered after general objects
JFreeChart,WITHOUT_CLASSIFICATION,// add our exceptions and store locally in ArrayList of Longs
JFreeChart,WITHOUT_CLASSIFICATION,// private Plot parent <-- don't clone the parent plot but take care // childs in combined plots instead
JFreeChart,WITHOUT_CLASSIFICATION,// some checks that the clone is independent of the original
JFreeChart,WITHOUT_CLASSIFICATION,// make array of exceptions
JFreeChart,WITHOUT_CLASSIFICATION,// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...
JFreeChart,WITHOUT_CLASSIFICATION,// start time...
JFreeChart,WITHOUT_CLASSIFICATION,// try replacing an existing value
JFreeChart,WITHOUT_CLASSIFICATION,// add the base timeline exclusions as timeline's esceptions
JFreeChart,WITHOUT_CLASSIFICATION,// adjust the plot area by the interior spacing value
JFreeChart,WITHOUT_CLASSIFICATION,// 1-Jan-2000
JFreeChart,WITHOUT_CLASSIFICATION,//  Remove series 2 and add new series
JFreeChart,WITHOUT_CLASSIFICATION,// subLabelPaint
JFreeChart,WITHOUT_CLASSIFICATION,// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
JFreeChart,WITHOUT_CLASSIFICATION,// by default the renderer with index 0 is used
JFreeChart,WITHOUT_CLASSIFICATION,// ensure the autorange is at least <minRange> in size...
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// set up info collection...
JFreeChart,WITHOUT_CLASSIFICATION,// subLabelFont
JFreeChart,WITHOUT_CLASSIFICATION,// this replaces the entry with the current minimum value but the new // minimum value is now in a different item
JFreeChart,WITHOUT_CLASSIFICATION,// verify all timeline segments included in the // baseTimeline.segment are now exceptions
JFreeChart,WITHOUT_CLASSIFICATION,// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************
JFreeChart,WITHOUT_CLASSIFICATION,// subcategories
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// physically consecutive
JFreeChart,WITHOUT_CLASSIFICATION,// hasn't implemented DomainInfo so iterate...
JFreeChart,WITHOUT_CLASSIFICATION,// if there is no separator we assume the first four characters // are YYYY
JFreeChart,WITHOUT_CLASSIFICATION,// label font...
JFreeChart,WITHOUT_CLASSIFICATION,// adjust the drawing area for the plot insets (if any)...
JFreeChart,WITHOUT_CLASSIFICATION,// label...
JFreeChart,WITHOUT_CLASSIFICATION,// pre-fetch the colors for each key...this is because the subplots // may not display every key but we need the coloring to be // consistent...
JFreeChart,WITHOUT_CLASSIFICATION,// label paint...
JFreeChart,WITHOUT_CLASSIFICATION,// holds the moving average sum
JFreeChart,WITHOUT_CLASSIFICATION,// attributed label...
JFreeChart,WITHOUT_CLASSIFICATION,// now add some more data
JFreeChart,WITHOUT_CLASSIFICATION,// label insets...
JFreeChart,WITHOUT_CLASSIFICATION,// if the box has been drawn backwards restore the auto bounds
JFreeChart,WITHOUT_CLASSIFICATION,// high
JFreeChart,WITHOUT_CLASSIFICATION,"/*                 * Lots can go wrong while fiddling with Images Color Models                 * & such!  If anything at all goes awry just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway so no harm                 * done)                 */"
JFreeChart,WITHOUT_CLASSIFICATION,// axis line stroke...
JFreeChart,WITHOUT_CLASSIFICATION,// Add each point to Area (x y)
JFreeChart,WITHOUT_CLASSIFICATION,// label angle...
JFreeChart,WITHOUT_CLASSIFICATION,// if the axis is not visible no additional space is required...
JFreeChart,WITHOUT_CLASSIFICATION,// axis line visible...
JFreeChart,WITHOUT_CLASSIFICATION,// NONE / FIXED
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10001 - top and center only
JFreeChart,WITHOUT_CLASSIFICATION,// axis line visible flag...
JFreeChart,WITHOUT_CLASSIFICATION,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014 by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License or * (at your option) any later version. * * This library is distributed in the hope that it will be useful but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not write to the Free Software * Foundation Inc. 51 Franklin Street Fifth Floor Boston MA  02110-1301 * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014 by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1 most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation as the *               exception are now RuntimeExceptions as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2 because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart() set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */"
JFreeChart,WITHOUT_CLASSIFICATION,// label location...
JFreeChart,WITHOUT_CLASSIFICATION,// tick label paint...
JFreeChart,WITHOUT_CLASSIFICATION,// go through each zoom menu item and decide whether or not to // enable it...
JFreeChart,WITHOUT_CLASSIFICATION,// tick mark inside length...
JFreeChart,WITHOUT_CLASSIFICATION,// if the source point doesn't fall within a subplot we do the // zoom on all subplots...
JFreeChart,WITHOUT_CLASSIFICATION,// fixed dimension...
JFreeChart,WITHOUT_CLASSIFICATION,// tick mark outside length...
JFreeChart,WITHOUT_CLASSIFICATION,// NONE / RANGE
JFreeChart,WITHOUT_CLASSIFICATION,//get absolute value of log10 value
JFreeChart,WITHOUT_CLASSIFICATION,//private Shape downArrow;
JFreeChart,WITHOUT_CLASSIFICATION,//upper bound and margin OK; get log10 of upper bound
JFreeChart,WITHOUT_CLASSIFICATION,//private Shape rightArrow;
JFreeChart,WITHOUT_CLASSIFICATION,// add a second renderer with the same index as dataset2 now it will // be used
JFreeChart,WITHOUT_CLASSIFICATION,//private Shape upArrow;
JFreeChart,WITHOUT_CLASSIFICATION,// NONE / NONE
JFreeChart,WITHOUT_CLASSIFICATION,// in the rendering process there is special handling for item // zero so we can't support processing of visible data items only
JFreeChart,WITHOUT_CLASSIFICATION,// verticalTickLabels
JFreeChart,WITHOUT_CLASSIFICATION,// update (x1 y1) (x2 y2) and f1 and f2 using intersections // then recheck
JFreeChart,WITHOUT_CLASSIFICATION,// axisLineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// yearFormatter
JFreeChart,WITHOUT_CLASSIFICATION,// check arguments...
JFreeChart,WITHOUT_CLASSIFICATION,// locale
JFreeChart,WITHOUT_CLASSIFICATION,// if series are in columns then the categories are the row keys
JFreeChart,WITHOUT_CLASSIFICATION,// showYear[]
JFreeChart,WITHOUT_CLASSIFICATION,// when the dataset contains no series we expect the range to be null
JFreeChart,WITHOUT_CLASSIFICATION,// chars
JFreeChart,WITHOUT_CLASSIFICATION,// now repeat for a vertical axis
JFreeChart,WITHOUT_CLASSIFICATION,// FIXED / RANGE
JFreeChart,WITHOUT_CLASSIFICATION,// draw the annotations (if any)...
JFreeChart,WITHOUT_CLASSIFICATION,//end point is lower right corner --> diagonal gradient
JFreeChart,WITHOUT_CLASSIFICATION,// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.
JFreeChart,WITHOUT_CLASSIFICATION,// FIXED / NONE
JFreeChart,WITHOUT_CLASSIFICATION,// RANGE / FIXED
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00100 - left item only
JFreeChart,WITHOUT_CLASSIFICATION,// this is the last period but it is only partially visible // so check that the label will fit before displaying it...
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00010 - right item only
JFreeChart,WITHOUT_CLASSIFICATION,// check that there is some data to display...
JFreeChart,WITHOUT_CLASSIFICATION,// FIXED / FIXED
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10111
JFreeChart,WITHOUT_CLASSIFICATION,//only 1 power of 10 value it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks
JFreeChart,WITHOUT_CLASSIFICATION,// draw the block without collecting entities
JFreeChart,WITHOUT_CLASSIFICATION,// try case where right item is shorter than center item
JFreeChart,WITHOUT_CLASSIFICATION,// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()
JFreeChart,WITHOUT_CLASSIFICATION,// should be 2 items
JFreeChart,WITHOUT_CLASSIFICATION,// if the incoming state is null no information will be passed // back to the caller - but we create a temporary state to record // the plot area since that is used later by the axes
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00011 - right and center items
JFreeChart,WITHOUT_CLASSIFICATION,// check if this addition will exceed the maximum item count...
JFreeChart,WITHOUT_CLASSIFICATION,// try case where left item is shorter than center item
JFreeChart,WITHOUT_CLASSIFICATION,// here we check that the average marker will in fact be // visible before drawing it...
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10110 - top left and right
JFreeChart,WITHOUT_CLASSIFICATION,// check a series with one item
JFreeChart,WITHOUT_CLASSIFICATION,// if we've been panning we need to reset now that the mouse is  // released...
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00110 - left and right items
JFreeChart,WITHOUT_CLASSIFICATION,// add an entity for the item...
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the generator table
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00111 - left right and center items
JFreeChart,WITHOUT_CLASSIFICATION,// try an array containing a single Number and a null
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Minute object // -------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11100
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11001
JFreeChart,WITHOUT_CLASSIFICATION,// add a value that isn't in the xRange
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11111 - all
JFreeChart,WITHOUT_CLASSIFICATION,// a Collection containing a NaN will return Double.NaN for the result
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11110
JFreeChart,WITHOUT_CLASSIFICATION,// special case - if the underlying rectangle uses ints we // need to create one that uses doubles
JFreeChart,WITHOUT_CLASSIFICATION,// create dataset 1...
JFreeChart,WITHOUT_CLASSIFICATION,// set up popup menu...
JFreeChart,WITHOUT_CLASSIFICATION,// no need to create entity if we can't save it anyways...
JFreeChart,WITHOUT_CLASSIFICATION,// erase the zoom rectangle
JFreeChart,WITHOUT_CLASSIFICATION,// secondary DatasetDomainAxisMap...
JFreeChart,WITHOUT_CLASSIFICATION,// test a series with 1 item
JFreeChart,WITHOUT_CLASSIFICATION,// if the initial averaging period is to be excluded then // calculate the lowest x-value to have an average calculated...
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11010 - top bottom and right
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01100
JFreeChart,WITHOUT_CLASSIFICATION,// initialize the members of "seriesNames" array so they won't be null:
JFreeChart,WITHOUT_CLASSIFICATION,// remove a value
JFreeChart,WITHOUT_CLASSIFICATION,// wrong outcome
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01011 - bottom right and center
JFreeChart,WITHOUT_CLASSIFICATION,// change rendering order to ensure that bar overlapping is the // right way around
JFreeChart,WITHOUT_CLASSIFICATION,// check that removing by index also works
JFreeChart,WITHOUT_CLASSIFICATION,// no additional methods required
JFreeChart,WITHOUT_CLASSIFICATION,// now we should be allowed to change s1's key to anything but "S2"
JFreeChart,WITHOUT_CLASSIFICATION,// standard case - plain XYDataset
JFreeChart,WITHOUT_CLASSIFICATION,// either autoWidth is off or autoIntervalWidth was not set.
JFreeChart,WITHOUT_CLASSIFICATION,//dmo: added this panel for colorbar control. (start dmo additions)
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10011 - top right and center
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01110 - bottom. left and right
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01101 - bottom left and center
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10000 - top item only
JFreeChart,WITHOUT_CLASSIFICATION,// check that the new bin doesn't overlap with any existing bin
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10010 - right and top only
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11011
JFreeChart,WITHOUT_CLASSIFICATION,// defer null argument check
JFreeChart,WITHOUT_CLASSIFICATION,// some setup...
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing if item is not visible or null
JFreeChart,WITHOUT_CLASSIFICATION,// Y format
JFreeChart,WITHOUT_CLASSIFICATION,// handle three cases by dataset type
JFreeChart,WITHOUT_CLASSIFICATION,// tooltip format
JFreeChart,WITHOUT_CLASSIFICATION,"/* // ""Extras"" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series int item)    {      return super.getXValue(series item);    }    public float getUntranslatedY(int series int item)    {      return super.getY(series item);    }  */"
JFreeChart,WITHOUT_CLASSIFICATION,// date format
JFreeChart,WITHOUT_CLASSIFICATION,//  If data can be < 0 the next 2 methods should be modified
JFreeChart,WITHOUT_CLASSIFICATION,// create subplot 1...
JFreeChart,WITHOUT_CLASSIFICATION,//  Create new dataset with keys above threshold percentThreshold
JFreeChart,WITHOUT_CLASSIFICATION,// try a null value
JFreeChart,WITHOUT_CLASSIFICATION,// now extrapolate based on label height and unit height...
JFreeChart,WITHOUT_CLASSIFICATION,// another test...
JFreeChart,WITHOUT_CLASSIFICATION,// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end
JFreeChart,WITHOUT_CLASSIFICATION,// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment
JFreeChart,WITHOUT_CLASSIFICATION,// x number format
JFreeChart,WITHOUT_CLASSIFICATION,// format string...
JFreeChart,WITHOUT_CLASSIFICATION,// Add last point @ y=0 for fillPath and close path
JFreeChart,WITHOUT_CLASSIFICATION,// x date format
JFreeChart,WITHOUT_CLASSIFICATION,// y number format
JFreeChart,WITHOUT_CLASSIFICATION,// orientation...
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// create subplot 2...
JFreeChart,WITHOUT_CLASSIFICATION,//yAdj = -descent - leading + (float) bounds.getHeight();
JFreeChart,WITHOUT_CLASSIFICATION,// add the subplots...
JFreeChart,WITHOUT_CLASSIFICATION,// the actual panning occurs later in the mouseDragged()  // method
JFreeChart,WITHOUT_CLASSIFICATION,// separatorPaint
JFreeChart,WITHOUT_CLASSIFICATION,//apply upper margin by increasing upper bound:
JFreeChart,WITHOUT_CLASSIFICATION,// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...
JFreeChart,WITHOUT_CLASSIFICATION,// for item labels we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.
JFreeChart,WITHOUT_CLASSIFICATION,// axisOffset...
JFreeChart,WITHOUT_CLASSIFICATION,// Absolute value since the relative x // positions are reversed for horizontal orientation
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00000 - no items
JFreeChart,WITHOUT_CLASSIFICATION,// request with a negative index
JFreeChart,WITHOUT_CLASSIFICATION,// try negative row index
JFreeChart,WITHOUT_CLASSIFICATION,// domainAxes...
JFreeChart,WITHOUT_CLASSIFICATION,// work out the number of periods to skip for labelling
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//turn off anti-aliasing when filling rectangles
JFreeChart,WITHOUT_CLASSIFICATION,// draw shared domain axis...
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 11101
JFreeChart,WITHOUT_CLASSIFICATION,// check handling when the dataset is a regular XYDataset not an // XYZDataset...
JFreeChart,WITHOUT_CLASSIFICATION,// get the previous data point...
JFreeChart,WITHOUT_CLASSIFICATION,// rendering order...
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the data area...
JFreeChart,WITHOUT_CLASSIFICATION,// domainAxisLocations...
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 2 - object is mutable AND PublicCloneable
JFreeChart,WITHOUT_CLASSIFICATION,// try a default instance
JFreeChart,WITHOUT_CLASSIFICATION,// renderers...
JFreeChart,WITHOUT_CLASSIFICATION,// forces recalculation of the axis range
JFreeChart,WITHOUT_CLASSIFICATION,// closeTickPaint
JFreeChart,WITHOUT_CLASSIFICATION,// rangeAxes...
JFreeChart,WITHOUT_CLASSIFICATION,// fake a dataset change event to update axes...
JFreeChart,WITHOUT_CLASSIFICATION,// rangeAxisLocations...
JFreeChart,WITHOUT_CLASSIFICATION,// get a list of keys...
JFreeChart,WITHOUT_CLASSIFICATION,//first tick of group; create label text
JFreeChart,WITHOUT_CLASSIFICATION,// annotations
JFreeChart,WITHOUT_CLASSIFICATION,// handle panning if we have a start point
JFreeChart,WITHOUT_CLASSIFICATION,// draw the arrow...
JFreeChart,WITHOUT_CLASSIFICATION,// is there an alignment adjustment to be made?
JFreeChart,WITHOUT_CLASSIFICATION,// rangeGridlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// Generate the grid
JFreeChart,WITHOUT_CLASSIFICATION,// delegate argument checking to XYDataItem...
JFreeChart,WITHOUT_CLASSIFICATION,// rangeGridlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,"/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts set the flag on the         * OutlierListCollection         */"
JFreeChart,WITHOUT_CLASSIFICATION,/* Rectangle2D hotspot = */
JFreeChart,WITHOUT_CLASSIFICATION,// rowRenderingOrder...
JFreeChart,WITHOUT_CLASSIFICATION,// a key that hasn't been mapped should return the default group
JFreeChart,WITHOUT_CLASSIFICATION,// background range markers...
JFreeChart,WITHOUT_CLASSIFICATION,// this should never happen with the existing code but throw // an exception in case future changes make it possible...
JFreeChart,WITHOUT_CLASSIFICATION,// rangeCrosshairValue
JFreeChart,WITHOUT_CLASSIFICATION,// default is to notify listeners when the // chart changes
JFreeChart,WITHOUT_CLASSIFICATION,//parameter value is < -10 //calculate log using positive value:
JFreeChart,WITHOUT_CLASSIFICATION,// starts at the front finishes at the back (going // around the left side)
JFreeChart,WITHOUT_CLASSIFICATION,// labelGenerator
JFreeChart,WITHOUT_CLASSIFICATION,"/*         * we assum super is always initialized to all-zero matrix so the         * total sum should be 0 upon initialization. However we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */"
JFreeChart,WITHOUT_CLASSIFICATION,// starts at back finishes at front (CLOCKWISE)
JFreeChart,WITHOUT_CLASSIFICATION,// background domain markers
JFreeChart,WITHOUT_CLASSIFICATION,// override default
JFreeChart,WITHOUT_CLASSIFICATION,// foreground range markers...
JFreeChart,WITHOUT_CLASSIFICATION,// special case where the lowest x-value is >= xLow
JFreeChart,WITHOUT_CLASSIFICATION,// foreground domain markers
JFreeChart,WITHOUT_CLASSIFICATION,// make sure there are no exceptions
JFreeChart,WITHOUT_CLASSIFICATION,//return toTimelineValue(dateDomainValue.getTime());
JFreeChart,WITHOUT_CLASSIFICATION,//calculate power using positive value; then negate
JFreeChart,WITHOUT_CLASSIFICATION,// create a new space object if one wasn't supplied...
JFreeChart,WITHOUT_CLASSIFICATION,// check for independence
JFreeChart,WITHOUT_CLASSIFICATION,// define the default locations for up to 8 axes...
JFreeChart,WITHOUT_CLASSIFICATION,//// SERIES OUTLINE PAINT ////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// fixed range axis space...
JFreeChart,WITHOUT_CLASSIFICATION,// send a dataset change event to self...
JFreeChart,WITHOUT_CLASSIFICATION,// shadowGenerator
JFreeChart,WITHOUT_CLASSIFICATION,// axis line paint...
JFreeChart,WITHOUT_CLASSIFICATION,// try a dataset with a single value
JFreeChart,WITHOUT_CLASSIFICATION,//parameter value is <= 0 //use as-is
JFreeChart,WITHOUT_CLASSIFICATION,// we didn't get an exception so all is good
JFreeChart,WITHOUT_CLASSIFICATION,// the x value is not within the axis range
JFreeChart,WITHOUT_CLASSIFICATION,// correct outcome
JFreeChart,WITHOUT_CLASSIFICATION,// should be equal...
JFreeChart,WITHOUT_CLASSIFICATION,// dial outline paint
JFreeChart,WITHOUT_CLASSIFICATION,// add a second dataset
JFreeChart,WITHOUT_CLASSIFICATION,// get the current data item...
JFreeChart,WITHOUT_CLASSIFICATION,// check second argument less than first argument
JFreeChart,WITHOUT_CLASSIFICATION,// labelPaint
JFreeChart,WITHOUT_CLASSIFICATION,// check index == getItemCount() throws exception
JFreeChart,WITHOUT_CLASSIFICATION,// we should be able to give a dataset an arbitrary index
JFreeChart,WITHOUT_CLASSIFICATION,// if the plot area is too small just return...
JFreeChart,WITHOUT_CLASSIFICATION,// Set XOR mode to draw the zoom rectangle
JFreeChart,WITHOUT_CLASSIFICATION,// we should be able to give a renderer an arbitrary index
JFreeChart,WITHOUT_CLASSIFICATION,// outline paint
JFreeChart,WITHOUT_CLASSIFICATION,// domainGridlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// are we using the chart buffer?
JFreeChart,WITHOUT_CLASSIFICATION,// draw average - SPECIAL AIMS REQUIREMENT
JFreeChart,WITHOUT_CLASSIFICATION,// toolTipGenerator
JFreeChart,WITHOUT_CLASSIFICATION,// adjust the drawing area for plot insets (if any)...
JFreeChart,WITHOUT_CLASSIFICATION,// drawBorder
JFreeChart,WITHOUT_CLASSIFICATION,// can we pan this plot?
JFreeChart,WITHOUT_CLASSIFICATION,// tick label paint
JFreeChart,WITHOUT_CLASSIFICATION,// force a redraw // new entity code...
JFreeChart,WITHOUT_CLASSIFICATION,// update the linking line target for later // add an entity for the pie section
JFreeChart,WITHOUT_CLASSIFICATION,// XYDataset only provides methods for reading a dataset...
JFreeChart,WITHOUT_CLASSIFICATION,// tick label font
JFreeChart,WITHOUT_CLASSIFICATION,// remove the point i-periodCount out of the rolling sum.
JFreeChart,WITHOUT_CLASSIFICATION,// value paint
JFreeChart,WITHOUT_CLASSIFICATION,// check if there are any values earlier than specified by the history // count...
JFreeChart,WITHOUT_CLASSIFICATION,// value font
JFreeChart,WITHOUT_CLASSIFICATION,// set up some objects...
JFreeChart,WITHOUT_CLASSIFICATION,// needle paint
JFreeChart,WITHOUT_CLASSIFICATION,// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
JFreeChart,WITHOUT_CLASSIFICATION,//stroke
JFreeChart,WITHOUT_CLASSIFICATION,// Draw the new zoom rectangle...
JFreeChart,WITHOUT_CLASSIFICATION,// tick label format
JFreeChart,WITHOUT_CLASSIFICATION,// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());
JFreeChart,WITHOUT_CLASSIFICATION,//alpha
JFreeChart,WITHOUT_CLASSIFICATION,// draw border
JFreeChart,WITHOUT_CLASSIFICATION,// since the items are ordered we could be more clever here and avoid // iterating over all the data
JFreeChart,WITHOUT_CLASSIFICATION,//paint
JFreeChart,WITHOUT_CLASSIFICATION,// as a class variable initializes == 0
JFreeChart,WITHOUT_CLASSIFICATION,// tick paint
JFreeChart,WITHOUT_CLASSIFICATION,// meter angle
JFreeChart,WITHOUT_CLASSIFICATION,// add the subtrahend's points to the polygon in reverse
JFreeChart,WITHOUT_CLASSIFICATION,//key
JFreeChart,WITHOUT_CLASSIFICATION,// stop listening for changes to the existing chart
JFreeChart,WITHOUT_CLASSIFICATION,/// we have rotation
JFreeChart,WITHOUT_CLASSIFICATION,//get positive exponent //create multiplier value //multiply round up and divide for bound value:
JFreeChart,WITHOUT_CLASSIFICATION,// change the generator and make sure it only affects p1
JFreeChart,WITHOUT_CLASSIFICATION,//outlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// secondary RangeAxes...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the axis label (note that 'state' is passed in *and* // returned)...
JFreeChart,WITHOUT_CLASSIFICATION,// roseCenterPaint
JFreeChart,WITHOUT_CLASSIFICATION,// create the plot...
JFreeChart,WITHOUT_CLASSIFICATION,// rosePaint
JFreeChart,WITHOUT_CLASSIFICATION,// first determine the size of the chart rendering area...
JFreeChart,WITHOUT_CLASSIFICATION,// Reset to the default 'overwrite' mode
JFreeChart,WITHOUT_CLASSIFICATION,// interiorGap
JFreeChart,WITHOUT_CLASSIFICATION,// interiorGap...
JFreeChart,WITHOUT_CLASSIFICATION,// extent
JFreeChart,WITHOUT_CLASSIFICATION,// labelGap
JFreeChart,WITHOUT_CLASSIFICATION,// sectionPaint
JFreeChart,WITHOUT_CLASSIFICATION,// additional dataArea modifications //check whether modification is
JFreeChart,WITHOUT_CLASSIFICATION,// circular
JFreeChart,WITHOUT_CLASSIFICATION,// another empty series
JFreeChart,WITHOUT_CLASSIFICATION,// ignoreNullValues
JFreeChart,WITHOUT_CLASSIFICATION,// direction
JFreeChart,WITHOUT_CLASSIFICATION,// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...
JFreeChart,WITHOUT_CLASSIFICATION,// sectionPaintMap
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// when the dataset contains no series we expect the value range to  // be null
JFreeChart,WITHOUT_CLASSIFICATION,// labelOutlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// separatorsVisible
JFreeChart,WITHOUT_CLASSIFICATION,// super.drawSecondaryPass(g2 plot dataset pass series item // domainAxis dataArea rangeAxis crosshairState entities);
JFreeChart,WITHOUT_CLASSIFICATION,// labelOutlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// shadowPaint
JFreeChart,WITHOUT_CLASSIFICATION,// newestAt takes value previously held // by oldestAT
JFreeChart,WITHOUT_CLASSIFICATION,// shadowYOffset
JFreeChart,WITHOUT_CLASSIFICATION,// outlineVisible
JFreeChart,WITHOUT_CLASSIFICATION,//get log10 version of lower bound and round to integer:
JFreeChart,WITHOUT_CLASSIFICATION,// try a customised instance
JFreeChart,WITHOUT_CLASSIFICATION,// links visible
JFreeChart,WITHOUT_CLASSIFICATION,// verify various indices inside a segment are the same segment
JFreeChart,WITHOUT_CLASSIFICATION,// maximumLabelWidth
JFreeChart,WITHOUT_CLASSIFICATION,// explodePercentages
JFreeChart,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */"
JFreeChart,WITHOUT_CLASSIFICATION,// labelShadowPaint
JFreeChart,WITHOUT_CLASSIFICATION,// we suppress shadow generation because PDF is a vector format and // the shadow effect is applied via bitmap effects...
JFreeChart,WITHOUT_CLASSIFICATION,// handle transparency and compositing.
JFreeChart,WITHOUT_CLASSIFICATION,// startAngle
JFreeChart,WITHOUT_CLASSIFICATION,// a list to store the series index and bar region so we can draw // all the labels at the end...
JFreeChart,WITHOUT_CLASSIFICATION,// get the relevant source coordinate given the plot orientation
JFreeChart,WITHOUT_CLASSIFICATION,// store the current time zone
JFreeChart,WITHOUT_CLASSIFICATION,// axisLinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// previous data point...
JFreeChart,WITHOUT_CLASSIFICATION,// check that the URL generator has been cloned
JFreeChart,WITHOUT_CLASSIFICATION,// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));
JFreeChart,WITHOUT_CLASSIFICATION,// urlGenerator
JFreeChart,WITHOUT_CLASSIFICATION,// linkMargin
JFreeChart,WITHOUT_CLASSIFICATION,// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made
JFreeChart,WITHOUT_CLASSIFICATION,// labelLinkStroke
JFreeChart,WITHOUT_CLASSIFICATION,// only needed if calculating percentages
JFreeChart,WITHOUT_CLASSIFICATION,// legendItemShape
JFreeChart,WITHOUT_CLASSIFICATION,// offset the start of the box if the box width is smaller than the // category width
JFreeChart,WITHOUT_CLASSIFICATION,// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3
JFreeChart,WITHOUT_CLASSIFICATION,// the clone references the same dataset as the original
JFreeChart,WITHOUT_CLASSIFICATION,// plot is likely registered as a listener with the existing axis...
JFreeChart,WITHOUT_CLASSIFICATION,// check that zero items are ignored if requested
JFreeChart,WITHOUT_CLASSIFICATION,// get two consecutive segments for various tests
JFreeChart,WITHOUT_CLASSIFICATION,// outlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// submit the current data point as a crosshair candidate
JFreeChart,WITHOUT_CLASSIFICATION,// check that null items are ignored if requested
JFreeChart,WITHOUT_CLASSIFICATION,// we can't use the following valueOf() method because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));
JFreeChart,WITHOUT_CLASSIFICATION,// this should have been defined as a boolean primitive because // allowing null values is a nuisance...but it is part of the final // API now so we'll have to support it.
JFreeChart,WITHOUT_CLASSIFICATION,// change the shape and make sure it only affects p1
JFreeChart,WITHOUT_CLASSIFICATION,// we don't know anything about the ordering of the x-values // but we can still skip any initial values that fall outside the // range...
JFreeChart,WITHOUT_CLASSIFICATION,// check that negative items are always ignored
JFreeChart,WITHOUT_CLASSIFICATION,// draw the item label if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,// noDataMessagePaint
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// noDataMessageFont
JFreeChart,WITHOUT_CLASSIFICATION,// noDataMessage
JFreeChart,WITHOUT_CLASSIFICATION,// de-register the composite as a listener for the chart.
JFreeChart,WITHOUT_CLASSIFICATION,// try a null collection
JFreeChart,WITHOUT_CLASSIFICATION,// foregroundAlpha
JFreeChart,WITHOUT_CLASSIFICATION,// draw the top axes
JFreeChart,WITHOUT_CLASSIFICATION,// drawingSupplier
JFreeChart,WITHOUT_CLASSIFICATION,// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...
JFreeChart,WITHOUT_CLASSIFICATION,// backgroundAlpha
JFreeChart,WITHOUT_CLASSIFICATION,// secondary renderers
JFreeChart,WITHOUT_CLASSIFICATION,// row 1: antialiasing
JFreeChart,WITHOUT_CLASSIFICATION,// dataExtractOrder
JFreeChart,WITHOUT_CLASSIFICATION,// maxValue
JFreeChart,WITHOUT_CLASSIFICATION,// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?
JFreeChart,WITHOUT_CLASSIFICATION,// valueFont
JFreeChart,WITHOUT_CLASSIFICATION,// if a subtrahend is not specified assume it is zero
JFreeChart,WITHOUT_CLASSIFICATION,// key not found
JFreeChart,WITHOUT_CLASSIFICATION,// if we get to here we know that duplicate X values are not permitted
JFreeChart,WITHOUT_CLASSIFICATION,// polygon definitions
JFreeChart,WITHOUT_CLASSIFICATION,// since the flow layout is relatively straightforward // no information needs to be recorded here
JFreeChart,WITHOUT_CLASSIFICATION,// draw the label
JFreeChart,WITHOUT_CLASSIFICATION,// copy a range before the start of the series data...
JFreeChart,WITHOUT_CLASSIFICATION,// add another value
JFreeChart,WITHOUT_CLASSIFICATION,// change a series paint
JFreeChart,WITHOUT_CLASSIFICATION,// add a second dataset plotted against a second axis
JFreeChart,WITHOUT_CLASSIFICATION,// no event is generated if the dataset is already empty
JFreeChart,WITHOUT_CLASSIFICATION,// axisLabelGap
JFreeChart,WITHOUT_CLASSIFICATION,// Performs the actual drawing here ...
JFreeChart,WITHOUT_CLASSIFICATION,// secondary DomainAxisLocations...
JFreeChart,WITHOUT_CLASSIFICATION,// if there is an existing dataset remove the plot from the list of // change listeners...
JFreeChart,WITHOUT_CLASSIFICATION,// webFilled
JFreeChart,WITHOUT_CLASSIFICATION,// check that super class fields are being looked at...
JFreeChart,WITHOUT_CLASSIFICATION,// change the legendItemShape
JFreeChart,WITHOUT_CLASSIFICATION,// axisIndices can be: // 1.  null; // 2.  non-empty containing only Integer objects that are unique.
JFreeChart,WITHOUT_CLASSIFICATION,// thermometerPaint
JFreeChart,WITHOUT_CLASSIFICATION,// valueLocation
JFreeChart,WITHOUT_CLASSIFICATION,// now add a third value to the series...
JFreeChart,WITHOUT_CLASSIFICATION,// as far as I know the Locale for the calendar only affects week // number calculations and since DateTickUnit doesn't do week // arithmetic the default locale (whatever it is) should be fine // here...
JFreeChart,WITHOUT_CLASSIFICATION,//first tick of group // did not do zero tick last // iteration
JFreeChart,WITHOUT_CLASSIFICATION,// domainAxisLocation...
JFreeChart,WITHOUT_CLASSIFICATION,// delegate 'info' and 'source' argument checks...
JFreeChart,WITHOUT_CLASSIFICATION,// loop over intervals between nodes
JFreeChart,WITHOUT_CLASSIFICATION,// valueFormat
JFreeChart,WITHOUT_CLASSIFICATION,// valuePaint
JFreeChart,WITHOUT_CLASSIFICATION,// dataset index
JFreeChart,WITHOUT_CLASSIFICATION,// axisLocation
JFreeChart,WITHOUT_CLASSIFICATION,// thermometerStroke
JFreeChart,WITHOUT_CLASSIFICATION,// this doesn't work
JFreeChart,WITHOUT_CLASSIFICATION,// check if starting new column
JFreeChart,WITHOUT_CLASSIFICATION,// secondary RangeAxisLocations...
JFreeChart,WITHOUT_CLASSIFICATION,// secondary DomainAxes...
JFreeChart,WITHOUT_CLASSIFICATION,// rangeAxis...
JFreeChart,WITHOUT_CLASSIFICATION,// renderer
JFreeChart,WITHOUT_CLASSIFICATION,// change a series outline paint
JFreeChart,WITHOUT_CLASSIFICATION,// for mouseReleased event (horizontalZoom || verticalZoom) // will be true so we can just test for either being false; // otherwise both are true
JFreeChart,WITHOUT_CLASSIFICATION,// parent plot...
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelFontList
JFreeChart,WITHOUT_CLASSIFICATION,//outlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// try a collection with a single number plus a null
JFreeChart,WITHOUT_CLASSIFICATION,// restore original tooltip dealys
JFreeChart,WITHOUT_CLASSIFICATION,// z number format
JFreeChart,WITHOUT_CLASSIFICATION,// data
JFreeChart,WITHOUT_CLASSIFICATION,// do we need to redraw the buffer?
JFreeChart,WITHOUT_CLASSIFICATION,// locale should not matter here
JFreeChart,WITHOUT_CLASSIFICATION,// since this is only used by clearRect() we don't update the GC yet
JFreeChart,WITHOUT_CLASSIFICATION,// when the x-values are sorted in descending order the lower // bound is found by calculating relative to the xHigh value
JFreeChart,WITHOUT_CLASSIFICATION,// fixed legend items
JFreeChart,WITHOUT_CLASSIFICATION,// relay the event from the canvas to our registered listeners
JFreeChart,WITHOUT_CLASSIFICATION,// use item paint for fills by default
JFreeChart,WITHOUT_CLASSIFICATION,// BarRenderer
JFreeChart,WITHOUT_CLASSIFICATION,// textAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// create storage for listeners...
JFreeChart,WITHOUT_CLASSIFICATION,// tickLabelFont
JFreeChart,WITHOUT_CLASSIFICATION,// last item in series draw the lot... // set up the alpha-transparency...
JFreeChart,WITHOUT_CLASSIFICATION,//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
JFreeChart,WITHOUT_CLASSIFICATION,//tick value not between 0 & 1 //show tick label if it's the first or last in // the set or if it's 1-5; beyond that show // fewer as the values get larger:
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 10101 - top left and center
JFreeChart,WITHOUT_CLASSIFICATION,// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1] x y[j+1] and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]
JFreeChart,WITHOUT_CLASSIFICATION,// 2. check whether the column is now empty.
JFreeChart,WITHOUT_CLASSIFICATION,// adjust for insets...
JFreeChart,WITHOUT_CLASSIFICATION,// can't allow duplicate values so we need to check whether // there is an item with the given x-value already
JFreeChart,WITHOUT_CLASSIFICATION,// no renderer 1
JFreeChart,WITHOUT_CLASSIFICATION,//private NumberFormat numberFormatOverride;
JFreeChart,WITHOUT_CLASSIFICATION,// OUTLINE STROKE
JFreeChart,WITHOUT_CLASSIFICATION,// quadrant paint
JFreeChart,WITHOUT_CLASSIFICATION,// create the polygon // add the minuend's points to polygon
JFreeChart,WITHOUT_CLASSIFICATION,// return the generator for ALL series if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,// paint sequence
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// draw the tick marks and labels...
JFreeChart,WITHOUT_CLASSIFICATION,// now test that the clone is independent of the original
JFreeChart,WITHOUT_CLASSIFICATION,// shape sequence
JFreeChart,WITHOUT_CLASSIFICATION,// outline stroke sequence
JFreeChart,WITHOUT_CLASSIFICATION,// for a series with no data we expect {-1 -1}...
JFreeChart,WITHOUT_CLASSIFICATION,// outline paint sequence
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseItemLabelPaint' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// now overwrite this item with another
JFreeChart,WITHOUT_CLASSIFICATION,// create dataset 2...
JFreeChart,WITHOUT_CLASSIFICATION,// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions
JFreeChart,WITHOUT_CLASSIFICATION,// gradient paint transformer
JFreeChart,WITHOUT_CLASSIFICATION,// paint index
JFreeChart,WITHOUT_CLASSIFICATION,/* ComparableObjectItem item1 = */
JFreeChart,WITHOUT_CLASSIFICATION,// in this case every color has a range of values
JFreeChart,WITHOUT_CLASSIFICATION,// with no buffer we use XOR to draw the rectangle "over" the // chart...
JFreeChart,WITHOUT_CLASSIFICATION,// only relevant when this is a subplot
JFreeChart,WITHOUT_CLASSIFICATION,// create an array of items in reverse order
JFreeChart,WITHOUT_CLASSIFICATION,// upperBound
JFreeChart,WITHOUT_CLASSIFICATION,// compute common deltas
JFreeChart,WITHOUT_CLASSIFICATION,// tickRadius
JFreeChart,WITHOUT_CLASSIFICATION,// clear the flag
JFreeChart,WITHOUT_CLASSIFICATION,// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
JFreeChart,WITHOUT_CLASSIFICATION,// radius
JFreeChart,WITHOUT_CLASSIFICATION,// try a few checks to ensure that the clone is independent of the // original
JFreeChart,WITHOUT_CLASSIFICATION,// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)
JFreeChart,WITHOUT_CLASSIFICATION,// verify that the plot is listening to the cloned renderer
JFreeChart,WITHOUT_CLASSIFICATION,// check key order
JFreeChart,WITHOUT_CLASSIFICATION,// shape index
JFreeChart,WITHOUT_CLASSIFICATION,// draw median
JFreeChart,WITHOUT_CLASSIFICATION,// now try to reject equality
JFreeChart,WITHOUT_CLASSIFICATION,// check negative index throws exception
JFreeChart,WITHOUT_CLASSIFICATION,// outline stroke index
JFreeChart,WITHOUT_CLASSIFICATION,// we don't know anything about the ordering of the x-values // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point
JFreeChart,WITHOUT_CLASSIFICATION,// now remove a3 but since a3.equals(a1) this will in fact remove // a1...
JFreeChart,WITHOUT_CLASSIFICATION,// add a value to the second series
JFreeChart,WITHOUT_CLASSIFICATION,// actually removes a1
JFreeChart,WITHOUT_CLASSIFICATION,// check that the generator has been cloned
JFreeChart,WITHOUT_CLASSIFICATION,// check for unknown column
JFreeChart,WITHOUT_CLASSIFICATION,//// SECTION OUTLINE PAINT ////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// if there are only null items we get a NaNRange
JFreeChart,WITHOUT_CLASSIFICATION,// copy the middle three items...
JFreeChart,WITHOUT_CLASSIFICATION,// visible
JFreeChart,WITHOUT_CLASSIFICATION,// shape
JFreeChart,WITHOUT_CLASSIFICATION,// check that empty dataset is handled OK
JFreeChart,WITHOUT_CLASSIFICATION,// continue and separate the labels only if necessary
JFreeChart,WITHOUT_CLASSIFICATION,// set up the category names...
JFreeChart,WITHOUT_CLASSIFICATION,// dateFormatOverride
JFreeChart,WITHOUT_CLASSIFICATION,//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.
JFreeChart,WITHOUT_CLASSIFICATION,// a column of all null values is still counted...
JFreeChart,WITHOUT_CLASSIFICATION,// outer radius
JFreeChart,WITHOUT_CLASSIFICATION,// first arrange without constraints then see if the width fits // within the required range...if not call arrangeFN() at max width
JFreeChart,WITHOUT_CLASSIFICATION,// now when the default group is mapped to it shouldn't increase the // group count...
JFreeChart,WITHOUT_CLASSIFICATION,// foregroundPaint
JFreeChart,WITHOUT_CLASSIFICATION,// The split may occur in either x splitted segments if any but // not in both
JFreeChart,WITHOUT_CLASSIFICATION,// inner radius
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// foreground paint
JFreeChart,WITHOUT_CLASSIFICATION,// tick mark stroke...
JFreeChart,WITHOUT_CLASSIFICATION,// confirm overwriting an existing value
JFreeChart,WITHOUT_CLASSIFICATION,// frameAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// angle
JFreeChart,WITHOUT_CLASSIFICATION,// 'negativeItemLabelAnchor' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// clear a mapping
JFreeChart,WITHOUT_CLASSIFICATION,// test a custom instance
JFreeChart,WITHOUT_CLASSIFICATION,// templateValue
JFreeChart,WITHOUT_CLASSIFICATION,// outline stroke
JFreeChart,WITHOUT_CLASSIFICATION,// fill paint
JFreeChart,WITHOUT_CLASSIFICATION,// check retrieve value by index
JFreeChart,WITHOUT_CLASSIFICATION,// valueAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// not a HighLowDataset so just draw a line connecting this point // with the previous point...
JFreeChart,WITHOUT_CLASSIFICATION,// dial cap
JFreeChart,WITHOUT_CLASSIFICATION,// now make a change to the renderer and see if it triggers a plot // change event...
JFreeChart,WITHOUT_CLASSIFICATION,// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick
JFreeChart,WITHOUT_CLASSIFICATION,//get the coordinates of the original GradientPaint
JFreeChart,WITHOUT_CLASSIFICATION,// frame
JFreeChart,WITHOUT_CLASSIFICATION,// negative paint
JFreeChart,WITHOUT_CLASSIFICATION,// view
JFreeChart,WITHOUT_CLASSIFICATION,// if negative then set flag and make positive
JFreeChart,WITHOUT_CLASSIFICATION,// layer
JFreeChart,WITHOUT_CLASSIFICATION,// populate deprecated fields
JFreeChart,WITHOUT_CLASSIFICATION,// check that a null dataset returns null bounds
JFreeChart,WITHOUT_CLASSIFICATION,// standard ResourceBundle behaviour
JFreeChart,WITHOUT_CLASSIFICATION,// apply the margins - these should apply to the exponent range
JFreeChart,WITHOUT_CLASSIFICATION,//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;
JFreeChart,WITHOUT_CLASSIFICATION,// check a series with four items
JFreeChart,WITHOUT_CLASSIFICATION,// outlineStrokeList
JFreeChart,WITHOUT_CLASSIFICATION,// majorTickLength
JFreeChart,WITHOUT_CLASSIFICATION,//cursor = midX - COLUMN_RADIUS - AXIS_GAP;
JFreeChart,WITHOUT_CLASSIFICATION,// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.
JFreeChart,WITHOUT_CLASSIFICATION,// majorTickStroke
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseOutlinePaint' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// try a null dataset - should return a null range
JFreeChart,WITHOUT_CLASSIFICATION,// majorTickIncrement
JFreeChart,WITHOUT_CLASSIFICATION,// Add the last point (x0)
JFreeChart,WITHOUT_CLASSIFICATION,// majorTickPaint
JFreeChart,WITHOUT_CLASSIFICATION,// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method typically in the init() method of an // applet...
JFreeChart,WITHOUT_CLASSIFICATION,// label
JFreeChart,WITHOUT_CLASSIFICATION,// outline paint index
JFreeChart,WITHOUT_CLASSIFICATION,// seriesVisible
JFreeChart,WITHOUT_CLASSIFICATION,// baseSeriesVisible
JFreeChart,WITHOUT_CLASSIFICATION,// second pass adds shapes where the items are ..
JFreeChart,WITHOUT_CLASSIFICATION,// have to use a concrete subclass...
JFreeChart,WITHOUT_CLASSIFICATION,//parameter value is > 10 // The Math.log() function is based on e not 10.
JFreeChart,WITHOUT_CLASSIFICATION,// cycle through all the segments contained in the BaseTimeline // exception segment
JFreeChart,WITHOUT_CLASSIFICATION,// can't find any differences
JFreeChart,WITHOUT_CLASSIFICATION,// test default instance
JFreeChart,WITHOUT_CLASSIFICATION,// -------------------- // --- Constructors --- // --------------------
JFreeChart,WITHOUT_CLASSIFICATION,// seriesVisibleList
JFreeChart,WITHOUT_CLASSIFICATION,// adjust for padding...
JFreeChart,WITHOUT_CLASSIFICATION,// outlinePaintList
JFreeChart,WITHOUT_CLASSIFICATION,// get the axis label size and update the space object...
JFreeChart,WITHOUT_CLASSIFICATION,// check that setting the max date to something on or before the // current min date works...
JFreeChart,WITHOUT_CLASSIFICATION,// work out the anchor point
JFreeChart,WITHOUT_CLASSIFICATION,// baseFillPaint
JFreeChart,WITHOUT_CLASSIFICATION,// just the lines no filling
JFreeChart,WITHOUT_CLASSIFICATION,// baseShape
JFreeChart,WITHOUT_CLASSIFICATION,// check a series with two items
JFreeChart,WITHOUT_CLASSIFICATION,//small log values in use; create numeric value for tick
JFreeChart,WITHOUT_CLASSIFICATION,// createEntitiesList;
JFreeChart,WITHOUT_CLASSIFICATION,// If the segment must be splitted insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0
JFreeChart,WITHOUT_CLASSIFICATION,// complicate things a little...
JFreeChart,WITHOUT_CLASSIFICATION,// customise the title position and font
JFreeChart,WITHOUT_CLASSIFICATION,// shapeList
JFreeChart,WITHOUT_CLASSIFICATION,// baseOutlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// add the new chart
JFreeChart,WITHOUT_CLASSIFICATION,// seem to be the same...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the plot background and axes...
JFreeChart,WITHOUT_CLASSIFICATION,// slope
JFreeChart,WITHOUT_CLASSIFICATION,// no renderer no gridlines...
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelPaint
JFreeChart,WITHOUT_CLASSIFICATION,// while the tick labels overlap and there are more tick sizes available // choose the next bigger label
JFreeChart,WITHOUT_CLASSIFICATION,// ...but this does!
JFreeChart,WITHOUT_CLASSIFICATION,// this is not one of our included segment skip it
JFreeChart,WITHOUT_CLASSIFICATION,// baseItemLabelFont
JFreeChart,WITHOUT_CLASSIFICATION,// work out the value label and position
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelFont
JFreeChart,WITHOUT_CLASSIFICATION,// draw the lower shadow...
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelPaintList
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another so there is effectively only one bar per category for // the purpose of the bar width calculation
JFreeChart,WITHOUT_CLASSIFICATION,// sanity check for data area...
JFreeChart,WITHOUT_CLASSIFICATION,// createEntities;
JFreeChart,WITHOUT_CLASSIFICATION,/* y-axis label */
JFreeChart,WITHOUT_CLASSIFICATION,// baseItemLabelPaint
JFreeChart,WITHOUT_CLASSIFICATION,// if no initial zoom point was set ignore dragging...
JFreeChart,WITHOUT_CLASSIFICATION,// SHAPE
JFreeChart,WITHOUT_CLASSIFICATION,// baseOutlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// insets
JFreeChart,WITHOUT_CLASSIFICATION,// now check autoPopulate==true
JFreeChart,WITHOUT_CLASSIFICATION,// baseLegendShape
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM_LABELS_VISIBLE
JFreeChart,WITHOUT_CLASSIFICATION,// legendShape
JFreeChart,WITHOUT_CLASSIFICATION,// legendTextFont
JFreeChart,WITHOUT_CLASSIFICATION,// OUTLINE PAINT
JFreeChart,WITHOUT_CLASSIFICATION,// baseLegendTextFont
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM_LABEL_FONT
JFreeChart,WITHOUT_CLASSIFICATION,// failed
JFreeChart,WITHOUT_CLASSIFICATION,// NEGATIVE ITEM LABEL ANCHOR
JFreeChart,WITHOUT_CLASSIFICATION,// check a series with no items
JFreeChart,WITHOUT_CLASSIFICATION,// now remove series 2 from collection 2
JFreeChart,WITHOUT_CLASSIFICATION,// first test for equality (contains or contained)
JFreeChart,WITHOUT_CLASSIFICATION,// add series to collection 1 should be not equal
JFreeChart,WITHOUT_CLASSIFICATION,// it is unlikely that 'state' will be null but check anyway...
JFreeChart,WITHOUT_CLASSIFICATION,// check a series with repeating items
JFreeChart,WITHOUT_CLASSIFICATION,// check a series with three items
JFreeChart,WITHOUT_CLASSIFICATION,// check dataset with two time periods
JFreeChart,WITHOUT_CLASSIFICATION,//private Paint negativeBarPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// we're doing this for testing only and make sure that we // only add data in descending order by x-value
JFreeChart,WITHOUT_CLASSIFICATION,// try with gradient paint
JFreeChart,WITHOUT_CLASSIFICATION,// drawYError
JFreeChart,WITHOUT_CLASSIFICATION,// positiveBarPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// Compute number of labels
JFreeChart,WITHOUT_CLASSIFICATION,// lastBarPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// firstBarPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// the renderer should not be equal to a BarRenderer
JFreeChart,WITHOUT_CLASSIFICATION,// quick check for independence
JFreeChart,WITHOUT_CLASSIFICATION,// TOP
JFreeChart,WITHOUT_CLASSIFICATION,// set flag true if negative values not allowed and the // lower bound is between 0 and 10:
JFreeChart,WITHOUT_CLASSIFICATION,// what is our alignment?
JFreeChart,WITHOUT_CLASSIFICATION,// urlGeneratorList
JFreeChart,WITHOUT_CLASSIFICATION,// RIGHT
JFreeChart,WITHOUT_CLASSIFICATION,// drawBarOutline
JFreeChart,WITHOUT_CLASSIFICATION,// autoWidthFactor
JFreeChart,WITHOUT_CLASSIFICATION,// itemMargin
JFreeChart,WITHOUT_CLASSIFICATION,// try something from the base class
JFreeChart,WITHOUT_CLASSIFICATION,// base value
JFreeChart,WITHOUT_CLASSIFICATION,// minimumBarLength
JFreeChart,WITHOUT_CLASSIFICATION,// maximumBarWidth
JFreeChart,WITHOUT_CLASSIFICATION,// barPainter
JFreeChart,WITHOUT_CLASSIFICATION,// shadowsVisible
JFreeChart,WITHOUT_CLASSIFICATION,// try null argument
JFreeChart,WITHOUT_CLASSIFICATION,// setUseYInterval
JFreeChart,WITHOUT_CLASSIFICATION,// try empty dataset
JFreeChart,WITHOUT_CLASSIFICATION,// setDrawBarOutline()
JFreeChart,WITHOUT_CLASSIFICATION,// setBase()
JFreeChart,WITHOUT_CLASSIFICATION,// legendBar
JFreeChart,WITHOUT_CLASSIFICATION,// setMargin()
JFreeChart,WITHOUT_CLASSIFICATION,// check a list containing a non-Number object
JFreeChart,WITHOUT_CLASSIFICATION,// autoWidthMethod
JFreeChart,WITHOUT_CLASSIFICATION,// drawOpenTicks
JFreeChart,WITHOUT_CLASSIFICATION,// roundXCoordinates
JFreeChart,WITHOUT_CLASSIFICATION,// legendLine
JFreeChart,WITHOUT_CLASSIFICATION,// drawXError
JFreeChart,WITHOUT_CLASSIFICATION,// drawCloseTicks
JFreeChart,WITHOUT_CLASSIFICATION,// openTickPaint
JFreeChart,WITHOUT_CLASSIFICATION,// tickLength
JFreeChart,WITHOUT_CLASSIFICATION,// candleWidth
JFreeChart,WITHOUT_CLASSIFICATION,// drawVolume
JFreeChart,WITHOUT_CLASSIFICATION,// first arrange without constraints and see if this fits within // the required ranges...
JFreeChart,WITHOUT_CLASSIFICATION,// downPaint
JFreeChart,WITHOUT_CLASSIFICATION,// upPaint
JFreeChart,WITHOUT_CLASSIFICATION,// check boxPaint null also
JFreeChart,WITHOUT_CLASSIFICATION,// find out where to place the label...
JFreeChart,WITHOUT_CLASSIFICATION,// linePaint
JFreeChart,WITHOUT_CLASSIFICATION,// fillPaint
JFreeChart,WITHOUT_CLASSIFICATION,// make sure that modifying the returned array doesn't change the // function
JFreeChart,WITHOUT_CLASSIFICATION,// stripOutlineVisible
JFreeChart,WITHOUT_CLASSIFICATION,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013 by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License or * (at your option) any later version. * * This library is distributed in the hope that it will be useful but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not write to the Free Software * Foundation Inc. 51 Franklin Street Fifth Floor Boston MA  02110-1301 * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013 by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities removed method *               writeImageMap(PrintWriter String ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */"
JFreeChart,WITHOUT_CLASSIFICATION,// autoWidthGap
JFreeChart,WITHOUT_CLASSIFICATION,// BOTTOM
JFreeChart,WITHOUT_CLASSIFICATION,/* TimeSeries result = */
JFreeChart,WITHOUT_CLASSIFICATION,// locale shouldn't matter here
JFreeChart,WITHOUT_CLASSIFICATION,// stripWidth
JFreeChart,WITHOUT_CLASSIFICATION,// axisOffset
JFreeChart,WITHOUT_CLASSIFICATION,// test findDomainBounds as well
JFreeChart,WITHOUT_CLASSIFICATION,// check the bounds of a simple dataset
JFreeChart,WITHOUT_CLASSIFICATION,// axis
JFreeChart,WITHOUT_CLASSIFICATION,// blockHeight
JFreeChart,WITHOUT_CLASSIFICATION,// blockWidth
JFreeChart,WITHOUT_CLASSIFICATION,// paintScale
JFreeChart,WITHOUT_CLASSIFICATION,// shapeOutlineVisible
JFreeChart,WITHOUT_CLASSIFICATION,// stripOutlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// stripOutlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// Anwender hat abgebrochen.
JFreeChart,WITHOUT_CLASSIFICATION,// line
JFreeChart,WITHOUT_CLASSIFICATION,// simple case
JFreeChart,WITHOUT_CLASSIFICATION,// shapeAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// is the clone independent
JFreeChart,WITHOUT_CLASSIFICATION,// lineStroke
JFreeChart,WITHOUT_CLASSIFICATION,// try deleting null
JFreeChart,WITHOUT_CLASSIFICATION,// if we modify the original list it's best if the URL generator is // not affected
JFreeChart,WITHOUT_CLASSIFICATION,// the clone contains a reference to the original object
JFreeChart,WITHOUT_CLASSIFICATION,// start with the current tick unit...
JFreeChart,WITHOUT_CLASSIFICATION,// try null calendar
JFreeChart,WITHOUT_CLASSIFICATION,// all tick labels have the same width (equal to the height of // the font)...
JFreeChart,WITHOUT_CLASSIFICATION,// check null argument 1
JFreeChart,WITHOUT_CLASSIFICATION,// check that clone is independent of the original
JFreeChart,WITHOUT_CLASSIFICATION,// check sorted rows
JFreeChart,WITHOUT_CLASSIFICATION,// the clone contains a reference to a CLONE of the original object
JFreeChart,WITHOUT_CLASSIFICATION,// try null key
JFreeChart,WITHOUT_CLASSIFICATION,// confirm that the clone is independent of the original
JFreeChart,WITHOUT_CLASSIFICATION,// replace an existing value
JFreeChart,WITHOUT_CLASSIFICATION,// request width index == itemCount
JFreeChart,WITHOUT_CLASSIFICATION,// try row index too high
JFreeChart,WITHOUT_CLASSIFICATION,// check handling of null key
JFreeChart,WITHOUT_CLASSIFICATION,// check null argument
JFreeChart,WITHOUT_CLASSIFICATION,// check null list
JFreeChart,WITHOUT_CLASSIFICATION,// Scaling with a factor of 1 does not change the range
JFreeChart,WITHOUT_CLASSIFICATION,// try unknown key
JFreeChart,WITHOUT_CLASSIFICATION,// try key index == itemCount
JFreeChart,WITHOUT_CLASSIFICATION,// try negative key index
JFreeChart,WITHOUT_CLASSIFICATION,/*Range r2 =*/
JFreeChart,WITHOUT_CLASSIFICATION,// Lower > upper: mid point is used
JFreeChart,WITHOUT_CLASSIFICATION,// Expand by 0% does not change the range
JFreeChart,WITHOUT_CLASSIFICATION,// map a key to a new group
JFreeChart,WITHOUT_CLASSIFICATION,// check an empty dataset
JFreeChart,WITHOUT_CLASSIFICATION,// autoSort
JFreeChart,WITHOUT_CLASSIFICATION,// remove an item
JFreeChart,WITHOUT_CLASSIFICATION,// add a value
JFreeChart,WITHOUT_CLASSIFICATION,// calculate midnight of first monday after 1/1/1900 relative to // current locale
JFreeChart,WITHOUT_CLASSIFICATION,// try null keys
JFreeChart,WITHOUT_CLASSIFICATION,// now overwrite group "G2"...
JFreeChart,WITHOUT_CLASSIFICATION,// a new map always has 1 group (the default group)
JFreeChart,WITHOUT_CLASSIFICATION,// text
JFreeChart,WITHOUT_CLASSIFICATION,// the default group is always at index 0
JFreeChart,WITHOUT_CLASSIFICATION,// if the default group is not mapped to it should still count towards // the group count...
JFreeChart,WITHOUT_CLASSIFICATION,// indices are assigned in the order that groups are originally mapped
JFreeChart,WITHOUT_CLASSIFICATION,// check invalid indices
JFreeChart,WITHOUT_CLASSIFICATION,// a non-existent group should return -1
JFreeChart,WITHOUT_CLASSIFICATION,// a null argument should throw an exception
JFreeChart,WITHOUT_CLASSIFICATION,// a small check for independence
JFreeChart,WITHOUT_CLASSIFICATION,/* Number n = */
JFreeChart,WITHOUT_CLASSIFICATION,// try an array containing a single Number
JFreeChart,WITHOUT_CLASSIFICATION,/* Comparable k = */
JFreeChart,WITHOUT_CLASSIFICATION,// try column index too high
JFreeChart,WITHOUT_CLASSIFICATION,// try negative column index
JFreeChart,WITHOUT_CLASSIFICATION,// try null column key
JFreeChart,WITHOUT_CLASSIFICATION,// try null row key
JFreeChart,WITHOUT_CLASSIFICATION,// try unknown row key
JFreeChart,WITHOUT_CLASSIFICATION,// try null
JFreeChart,WITHOUT_CLASSIFICATION,// try a null source
JFreeChart,WITHOUT_CLASSIFICATION,// basic check for independence
JFreeChart,WITHOUT_CLASSIFICATION,// it's OK to use an index equal to the size of the list
JFreeChart,WITHOUT_CLASSIFICATION,// this is expected
JFreeChart,WITHOUT_CLASSIFICATION,// defer argument checks...
JFreeChart,WITHOUT_CLASSIFICATION,// test null source
JFreeChart,WITHOUT_CLASSIFICATION,// check that two empty datasets are equal
JFreeChart,WITHOUT_CLASSIFICATION,/* Number n =*/
JFreeChart,WITHOUT_CLASSIFICATION,// another item
JFreeChart,WITHOUT_CLASSIFICATION,// increment an unknown row
JFreeChart,WITHOUT_CLASSIFICATION,// increment a null value
JFreeChart,WITHOUT_CLASSIFICATION,// a row of all null values is still counted...
JFreeChart,WITHOUT_CLASSIFICATION,// LEFT
JFreeChart,WITHOUT_CLASSIFICATION,// increment an unknown column
JFreeChart,WITHOUT_CLASSIFICATION,// rotation anchor
JFreeChart,WITHOUT_CLASSIFICATION,/* Number start = */
JFreeChart,WITHOUT_CLASSIFICATION,// define subtasks
JFreeChart,WITHOUT_CLASSIFICATION,// note that we don't define taskB1
JFreeChart,WITHOUT_CLASSIFICATION,/* int count = */
JFreeChart,WITHOUT_CLASSIFICATION,/* Number end = */
JFreeChart,WITHOUT_CLASSIFICATION,// what if we don't want the interval?
JFreeChart,WITHOUT_CLASSIFICATION,// simple check for independence
JFreeChart,WITHOUT_CLASSIFICATION,// try a single item
JFreeChart,WITHOUT_CLASSIFICATION,// a dataset with a single value
JFreeChart,WITHOUT_CLASSIFICATION,// an item in series 2
JFreeChart,WITHOUT_CLASSIFICATION,// null is ignored
JFreeChart,WITHOUT_CLASSIFICATION,// pass on the event to the auxiliary handlers
JFreeChart,WITHOUT_CLASSIFICATION,// check another regular value
JFreeChart,WITHOUT_CLASSIFICATION,// adding a second series
JFreeChart,WITHOUT_CLASSIFICATION,// advance line Paint
JFreeChart,WITHOUT_CLASSIFICATION,// overwrite the value
JFreeChart,WITHOUT_CLASSIFICATION,// check a NaN
JFreeChart,WITHOUT_CLASSIFICATION,// check a null value
JFreeChart,WITHOUT_CLASSIFICATION,// does nothing unless overridden
JFreeChart,WITHOUT_CLASSIFICATION,// an empty dataset should return a null max
JFreeChart,WITHOUT_CLASSIFICATION,// and that simple aggregation works
JFreeChart,WITHOUT_CLASSIFICATION,// got it!
JFreeChart,WITHOUT_CLASSIFICATION,// Double.NaN DOESN'T mess things up
JFreeChart,WITHOUT_CLASSIFICATION,// empty dataset returns null
JFreeChart,WITHOUT_CLASSIFICATION,// null range throws IllegalArgumentException
JFreeChart,WITHOUT_CLASSIFICATION,// null list throws IllegalArgumentException
JFreeChart,WITHOUT_CLASSIFICATION,// try a Double.NEGATIVE_INFINITY
JFreeChart,WITHOUT_CLASSIFICATION,// try some nulls
JFreeChart,WITHOUT_CLASSIFICATION,/* TimeSeries s = */
JFreeChart,WITHOUT_CLASSIFICATION,//no initial zoom rectangle exists but the handler is set //as life handler unregister
JFreeChart,WITHOUT_CLASSIFICATION,// add a second series
JFreeChart,WITHOUT_CLASSIFICATION,// an empty dataset should return null for bounds
JFreeChart,WITHOUT_CLASSIFICATION,// try a Double.NaN
JFreeChart,WITHOUT_CLASSIFICATION,//gets the outline stroke width of the plot
JFreeChart,WITHOUT_CLASSIFICATION,// Add exception in included segments
JFreeChart,WITHOUT_CLASSIFICATION,// try a dataset with two values
JFreeChart,WITHOUT_CLASSIFICATION,// try null list
JFreeChart,WITHOUT_CLASSIFICATION,// Saturday and Sundays are non business hours
JFreeChart,WITHOUT_CLASSIFICATION,// try a list containing a single value
JFreeChart,WITHOUT_CLASSIFICATION,// test empty series
JFreeChart,WITHOUT_CLASSIFICATION,// try an array containing a single Number and a NaN
JFreeChart,WITHOUT_CLASSIFICATION,// try single value
JFreeChart,WITHOUT_CLASSIFICATION,// try a null argument
JFreeChart,WITHOUT_CLASSIFICATION,// try a collection with a single number
JFreeChart,WITHOUT_CLASSIFICATION,// try an empty collection
JFreeChart,WITHOUT_CLASSIFICATION,// try a collection with several numbers
JFreeChart,WITHOUT_CLASSIFICATION,// try zero length array
JFreeChart,WITHOUT_CLASSIFICATION,// try a collection with a single number plus a NaN
JFreeChart,WITHOUT_CLASSIFICATION,// check list containing null
JFreeChart,WITHOUT_CLASSIFICATION,// we call refresh ticks just to get the maximum width or height
JFreeChart,WITHOUT_CLASSIFICATION,// check empty list
JFreeChart,WITHOUT_CLASSIFICATION,/*item = */
JFreeChart,WITHOUT_CLASSIFICATION,// copy a range that begins before and ends in the middle of the // series...
JFreeChart,WITHOUT_CLASSIFICATION,// try deleting a time period that doesn't exist...
JFreeChart,WITHOUT_CLASSIFICATION,// copy a range that includes only the first item in the series...
JFreeChart,WITHOUT_CLASSIFICATION,// copy the last item...
JFreeChart,WITHOUT_CLASSIFICATION,// capLength
JFreeChart,WITHOUT_CLASSIFICATION,// copy just the first item...
JFreeChart,WITHOUT_CLASSIFICATION,// copy the first two items...
JFreeChart,WITHOUT_CLASSIFICATION,// copy the last two items...
JFreeChart,WITHOUT_CLASSIFICATION,// rotation angle
JFreeChart,WITHOUT_CLASSIFICATION,// try an array containing no items
JFreeChart,WITHOUT_CLASSIFICATION,//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two if it's the first or last // in the set or if it's 1-5; beyond that // show fewer as the values get larger:
JFreeChart,WITHOUT_CLASSIFICATION,// changing the overwritten record shouldn't affect the series
JFreeChart,WITHOUT_CLASSIFICATION,// store the plot and its weight
JFreeChart,WITHOUT_CLASSIFICATION,// check negative first argument
JFreeChart,WITHOUT_CLASSIFICATION,// can't get anything yet...just an exception
JFreeChart,WITHOUT_CLASSIFICATION,//first tick of series or not too small a value and // one of first 3 ticks or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):
JFreeChart,WITHOUT_CLASSIFICATION,/*TimeSeriesDataItem item =*/
JFreeChart,WITHOUT_CLASSIFICATION,// test series with one item
JFreeChart,WITHOUT_CLASSIFICATION,// test series with two items
JFreeChart,WITHOUT_CLASSIFICATION,//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;
JFreeChart,WITHOUT_CLASSIFICATION,// tests with values
JFreeChart,WITHOUT_CLASSIFICATION,// try null array
JFreeChart,WITHOUT_CLASSIFICATION,//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int
JFreeChart,WITHOUT_CLASSIFICATION,// this line triggers the defect
JFreeChart,WITHOUT_CLASSIFICATION,// test a series with two items
JFreeChart,WITHOUT_CLASSIFICATION,// test 1...
JFreeChart,WITHOUT_CLASSIFICATION,//negatives not allowed and lower range bound is zero //use data range bound instead
JFreeChart,WITHOUT_CLASSIFICATION,// null items are ignored
JFreeChart,WITHOUT_CLASSIFICATION,// test 3...
JFreeChart,WITHOUT_CLASSIFICATION,//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:
JFreeChart,WITHOUT_CLASSIFICATION,// domain description - null
JFreeChart,WITHOUT_CLASSIFICATION,// range description
JFreeChart,WITHOUT_CLASSIFICATION,// a null item should throw an IllegalArgumentException
JFreeChart,WITHOUT_CLASSIFICATION,// test 2...
JFreeChart,WITHOUT_CLASSIFICATION,// add a fourth time period
JFreeChart,WITHOUT_CLASSIFICATION,// check empty dataset
JFreeChart,WITHOUT_CLASSIFICATION,// range description - null
JFreeChart,WITHOUT_CLASSIFICATION,// restore the default time zone
JFreeChart,WITHOUT_CLASSIFICATION,// work out the maximum height or width of the non-shared axes...
JFreeChart,WITHOUT_CLASSIFICATION,// first day of week is Sunday
JFreeChart,WITHOUT_CLASSIFICATION,// now add a second value to the series...
JFreeChart,WITHOUT_CLASSIFICATION,// add a third time period
JFreeChart,WITHOUT_CLASSIFICATION,// now test with a single value in the series...
JFreeChart,WITHOUT_CLASSIFICATION,// try null zone
JFreeChart,WITHOUT_CLASSIFICATION,// first day of week is monday
JFreeChart,WITHOUT_CLASSIFICATION,// now remove series 2 from collection 1 to make them equal again
JFreeChart,WITHOUT_CLASSIFICATION,// newly created collections should be equal
JFreeChart,WITHOUT_CLASSIFICATION,// now add the same series to collection 2 to make them equal again...
JFreeChart,WITHOUT_CLASSIFICATION,// shapeVisible
JFreeChart,WITHOUT_CLASSIFICATION,// Make sure there's nothing left
JFreeChart,WITHOUT_CLASSIFICATION,// the moving average series has 7 items the first three // days (11 12 13 August are skipped)
JFreeChart,WITHOUT_CLASSIFICATION,// look at lower and upper bounds...
JFreeChart,WITHOUT_CLASSIFICATION,// for efficiency we just use the first last and middle items to // compute a hashCode...
JFreeChart,WITHOUT_CLASSIFICATION,// now add another series
JFreeChart,WITHOUT_CLASSIFICATION,// and check the first series too...
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Second object // -------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...
JFreeChart,WITHOUT_CLASSIFICATION,//if flag then change to log version of lowest value // to make range begin at a 10^n value:
JFreeChart,WITHOUT_CLASSIFICATION,// add an empty series
JFreeChart,WITHOUT_CLASSIFICATION,// add a series
JFreeChart,WITHOUT_CLASSIFICATION,//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));
JFreeChart,WITHOUT_CLASSIFICATION,// call parent method // setup flag based on bounds values
JFreeChart,WITHOUT_CLASSIFICATION,// check for series key out of bounds
JFreeChart,WITHOUT_CLASSIFICATION,// after setting up all the subplots the shared range axis may need // reconfiguring
JFreeChart,WITHOUT_CLASSIFICATION,// check that adding a series will overwrite the old series
JFreeChart,WITHOUT_CLASSIFICATION,// xHigh
JFreeChart,WITHOUT_CLASSIFICATION,// first check that a valid renaming works
JFreeChart,WITHOUT_CLASSIFICATION,// next check that setting a duplicate key fails
JFreeChart,WITHOUT_CLASSIFICATION,// got the required exception
JFreeChart,WITHOUT_CLASSIFICATION,//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:
JFreeChart,WITHOUT_CLASSIFICATION,// try an index out of bounds
JFreeChart,WITHOUT_CLASSIFICATION,// still 2
JFreeChart,WITHOUT_CLASSIFICATION,// check null key
JFreeChart,WITHOUT_CLASSIFICATION,// hasn't implemented RangeInfo so we'll have to iterate...
JFreeChart,WITHOUT_CLASSIFICATION,// xLow
JFreeChart,WITHOUT_CLASSIFICATION,// yHigh
JFreeChart,WITHOUT_CLASSIFICATION,// yLow
JFreeChart,WITHOUT_CLASSIFICATION,//  Test that there are 6 X points and some specific values
JFreeChart,WITHOUT_CLASSIFICATION,// the series name should not  // change because "C" is already the key for the other series in the // collection
JFreeChart,WITHOUT_CLASSIFICATION,//  Remove series 1
JFreeChart,WITHOUT_CLASSIFICATION,// after adding a point to a series check that there are now 7 // items in each series
JFreeChart,WITHOUT_CLASSIFICATION,//  Test that there are still 7 X points
JFreeChart,WITHOUT_CLASSIFICATION,// WITH AUTOPRUNING
JFreeChart,WITHOUT_CLASSIFICATION,//  Test that there are now 4 X points
JFreeChart,WITHOUT_CLASSIFICATION,// establish the coordinates of the top left corner of the drawing area
JFreeChart,WITHOUT_CLASSIFICATION,// 1 value pruned.
JFreeChart,WITHOUT_CLASSIFICATION,// WITHOUT AUTOPRUNING
JFreeChart,WITHOUT_CLASSIFICATION,// still 2.
JFreeChart,WITHOUT_CLASSIFICATION,// here we do a check to see if the user is installing the "Legacy" // theme and reset the bar painters in that case...
JFreeChart,WITHOUT_CLASSIFICATION,// if the current stroke is not a BasicStroke then it is handled as // a special case
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator //            boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// text anchor
JFreeChart,WITHOUT_CLASSIFICATION,// milliseconds somewhere in 2006
JFreeChart,WITHOUT_CLASSIFICATION,// starts at back and wraps right around to the // back again
JFreeChart,WITHOUT_CLASSIFICATION,//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);
JFreeChart,WITHOUT_CLASSIFICATION,// the pie sections are arranged ANTICLOCKWISE
JFreeChart,WITHOUT_CLASSIFICATION,// if this cell held a maximum and/or minimum value we'll need to // update the cached bounds...
JFreeChart,WITHOUT_CLASSIFICATION,// handle a special case - if the bar colour has alpha == 0 it is // invisible so we shouldn't draw any shadow
JFreeChart,WITHOUT_CLASSIFICATION,// For the case were the first tick is greater // than minZ
JFreeChart,WITHOUT_CLASSIFICATION,// retrieve an item
JFreeChart,WITHOUT_CLASSIFICATION,// key
JFreeChart,WITHOUT_CLASSIFICATION,// if we are drawing a perfect circle we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.
JFreeChart,WITHOUT_CLASSIFICATION,// draw the sections at the top of the pie (and set up tooltips)...
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// deregister the collection as a change listener to each series in // the collection.
JFreeChart,WITHOUT_CLASSIFICATION,// average radius // outlier radius
JFreeChart,WITHOUT_CLASSIFICATION,// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.
JFreeChart,WITHOUT_CLASSIFICATION,// errorPaint
JFreeChart,WITHOUT_CLASSIFICATION,// positive paint
JFreeChart,WITHOUT_CLASSIFICATION,// the first initialization must precede creation of the ValueSet array: // establishes length of each array
JFreeChart,WITHOUT_CLASSIFICATION,// starts at the back and finishes at the front // (wrapping the left side)
JFreeChart,WITHOUT_CLASSIFICATION,// if the 'notify' flag has been switched to false we don't notify // the listeners
JFreeChart,WITHOUT_CLASSIFICATION,// errorStroke
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesToolTipGenerator(int CategoryToolTipGenerator //            boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,/* shape outlined = */
JFreeChart,WITHOUT_CLASSIFICATION,// the intersect is at the next point for both the minuend // and subtrahend
JFreeChart,WITHOUT_CLASSIFICATION,// draw outliers // outlier radius
JFreeChart,WITHOUT_CLASSIFICATION,// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point
JFreeChart,WITHOUT_CLASSIFICATION,// map
JFreeChart,WITHOUT_CLASSIFICATION,// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.
JFreeChart,WITHOUT_CLASSIFICATION,// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one
JFreeChart,WITHOUT_CLASSIFICATION,//if less than 1.0 then make it 1.0 //add in margin and get exponential value:
JFreeChart,WITHOUT_CLASSIFICATION,// labelLinkPaint
JFreeChart,WITHOUT_CLASSIFICATION,// paintList
JFreeChart,WITHOUT_CLASSIFICATION,// calculate plotAreas of all sub-plots maximum vertical/horizontal // axis width/height
JFreeChart,WITHOUT_CLASSIFICATION,// OPTIONAL CUSTOMISATION COMPLETED.
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABEL PAINT  /////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelGenerator
JFreeChart,WITHOUT_CLASSIFICATION,// create the new color and set it to the // SwtPaintCanvas
JFreeChart,WITHOUT_CLASSIFICATION,// seriesOutlineStroke
JFreeChart,WITHOUT_CLASSIFICATION,//private boolean autoTickUnitSelection;
JFreeChart,WITHOUT_CLASSIFICATION,// is there an override?
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// quadrant origin
JFreeChart,WITHOUT_CLASSIFICATION,// now check that all datasets renderers and axes are being listened // too...
JFreeChart,WITHOUT_CLASSIFICATION,// background paint
JFreeChart,WITHOUT_CLASSIFICATION,// work out the mid angle (0 - 90 and 270 - 360) = right // otherwise left
JFreeChart,WITHOUT_CLASSIFICATION,// these methods should throw an IndexOutOfBoundsException since the // column is too high...
JFreeChart,WITHOUT_CLASSIFICATION,// range markers
JFreeChart,WITHOUT_CLASSIFICATION,// regular equality for the datasets doesn't check the fields just // the data values...so let's check some more things...
JFreeChart,WITHOUT_CLASSIFICATION,// after clearing reverts to // default group
JFreeChart,WITHOUT_CLASSIFICATION,// nothing defined - do we autoPopulate?
JFreeChart,WITHOUT_CLASSIFICATION,// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset
JFreeChart,WITHOUT_CLASSIFICATION,// null argument check delegated...
JFreeChart,WITHOUT_CLASSIFICATION,// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.
JFreeChart,WITHOUT_CLASSIFICATION,// secondary range markers
JFreeChart,WITHOUT_CLASSIFICATION,// delegate...
JFreeChart,WITHOUT_CLASSIFICATION,// rotationAnchor
JFreeChart,WITHOUT_CLASSIFICATION,// no axis no gridlines...
JFreeChart,WITHOUT_CLASSIFICATION,// include legend // tooltips // urls
JFreeChart,WITHOUT_CLASSIFICATION,// rotationAngle
JFreeChart,WITHOUT_CLASSIFICATION,// can't zoom domain axis
JFreeChart,WITHOUT_CLASSIFICATION,// get the source coordinate - this plot has always a VERTICAL // orientation
JFreeChart,WITHOUT_CLASSIFICATION,// toolTipText
JFreeChart,WITHOUT_CLASSIFICATION,// the above should cover all the options...
JFreeChart,WITHOUT_CLASSIFICATION,// have to use a subclass of // AbstractRenderer
JFreeChart,WITHOUT_CLASSIFICATION,// test monday though friday timeline
JFreeChart,WITHOUT_CLASSIFICATION,// find first Monday after 2001-01-01
JFreeChart,WITHOUT_CLASSIFICATION,// no domain axis to zoom
JFreeChart,WITHOUT_CLASSIFICATION,// stroke index
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 00001 - center item only
JFreeChart,WITHOUT_CLASSIFICATION,// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
JFreeChart,WITHOUT_CLASSIFICATION,// expandToFitSpace
JFreeChart,WITHOUT_CLASSIFICATION,// category 1
JFreeChart,WITHOUT_CLASSIFICATION,// PAINT
JFreeChart,WITHOUT_CLASSIFICATION,// STROKE
JFreeChart,WITHOUT_CLASSIFICATION,// basePaint
JFreeChart,WITHOUT_CLASSIFICATION,// category 2
JFreeChart,WITHOUT_CLASSIFICATION,// value 2
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: calculate xx0
JFreeChart,WITHOUT_CLASSIFICATION,// LEFT POLYGON
JFreeChart,WITHOUT_CLASSIFICATION,// y date format
JFreeChart,WITHOUT_CLASSIFICATION,// margin
JFreeChart,WITHOUT_CLASSIFICATION,// current data point...
JFreeChart,WITHOUT_CLASSIFICATION,// clip left and right bounds to data area
JFreeChart,WITHOUT_CLASSIFICATION,// z date format
JFreeChart,WITHOUT_CLASSIFICATION,// domain description
JFreeChart,WITHOUT_CLASSIFICATION,// calculate bar width...
JFreeChart,WITHOUT_CLASSIFICATION,// the indicator bounds is calculated from the templateValue (which // determines the minimum size) the maxTemplateValue (which if // specified provides a maximum size) and the actual value
JFreeChart,WITHOUT_CLASSIFICATION,// chart title // data // include legend
JFreeChart,WITHOUT_CLASSIFICATION,// get a reference to the plot for further customisation...
JFreeChart,WITHOUT_CLASSIFICATION,////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// shapesVisible
JFreeChart,WITHOUT_CLASSIFICATION,// handle zoom box
JFreeChart,WITHOUT_CLASSIFICATION,// ok exception is expected
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing override if necessary
JFreeChart,WITHOUT_CLASSIFICATION,//private boolean autoRangeStickyZero;
JFreeChart,WITHOUT_CLASSIFICATION,// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible
JFreeChart,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */"
JFreeChart,WITHOUT_CLASSIFICATION,"/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */"
JFreeChart,WITHOUT_CLASSIFICATION,// ignoreZeroValues
JFreeChart,WITHOUT_CLASSIFICATION,// open
JFreeChart,WITHOUT_CLASSIFICATION,// new entity code
JFreeChart,WITHOUT_CLASSIFICATION,// disable bar outlines...
JFreeChart,WITHOUT_CLASSIFICATION,//TODO private boolean fillZoomRectangle = true;
JFreeChart,WITHOUT_CLASSIFICATION,// start new row
JFreeChart,WITHOUT_CLASSIFICATION,// width is OK but height must be constrained
JFreeChart,WITHOUT_CLASSIFICATION,// start new column
JFreeChart,WITHOUT_CLASSIFICATION,/* x-axis label*/
JFreeChart,WITHOUT_CLASSIFICATION,// use gradients and white borders for the section colours
JFreeChart,WITHOUT_CLASSIFICATION,// DEPRECATED FIELDS AND METHODS...
JFreeChart,WITHOUT_CLASSIFICATION,// swap rows and columns to match plotArea shape
JFreeChart,WITHOUT_CLASSIFICATION,// draw the markers...
JFreeChart,WITHOUT_CLASSIFICATION,// super.setSeriesPaint(series paint);
JFreeChart,WITHOUT_CLASSIFICATION,// add the insets
JFreeChart,WITHOUT_CLASSIFICATION,// for data in ascending order by x-value we are (broadly) looking // for the index of the highest x-value that is less than xLow
JFreeChart,WITHOUT_CLASSIFICATION,// subtitle 1 is the legend
JFreeChart,WITHOUT_CLASSIFICATION,// BAR Y
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the maximum allowed candle width from the axis...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the outline...
JFreeChart,WITHOUT_CLASSIFICATION,// check that a legend item needs to be displayed...
JFreeChart,WITHOUT_CLASSIFICATION,// work out the label anchor point...
JFreeChart,WITHOUT_CLASSIFICATION,// higlight the background corners...
JFreeChart,WITHOUT_CLASSIFICATION,// fast-forward through leading tails
JFreeChart,WITHOUT_CLASSIFICATION,// get the x and y coordinates
JFreeChart,WITHOUT_CLASSIFICATION,// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities
JFreeChart,WITHOUT_CLASSIFICATION,// here we check that the average marker will in fact be visible // before drawing it...
JFreeChart,WITHOUT_CLASSIFICATION,// check that minItem limit is observed
JFreeChart,WITHOUT_CLASSIFICATION,//assert itemIndex >= 0 && itemIndex < getItemCount();
JFreeChart,WITHOUT_CLASSIFICATION,// skip if chart is null
JFreeChart,WITHOUT_CLASSIFICATION,//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);
JFreeChart,WITHOUT_CLASSIFICATION,// AXIS 2
JFreeChart,WITHOUT_CLASSIFICATION,// for value in bounds do the lookup...
JFreeChart,WITHOUT_CLASSIFICATION,// shapeFilled
JFreeChart,WITHOUT_CLASSIFICATION,// domainAxis - no longer a separate field but test anyway...
JFreeChart,WITHOUT_CLASSIFICATION,//itemLabelPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// separatorStroke
JFreeChart,WITHOUT_CLASSIFICATION,// sectionDepth
JFreeChart,WITHOUT_CLASSIFICATION,// we don't know anything about the ordering of the x-values // but we can still skip any trailing values that fall outside the // range...
JFreeChart,WITHOUT_CLASSIFICATION,// rangeAxis - no longer a separate field but test anyway...
JFreeChart,WITHOUT_CLASSIFICATION,//extraLargeFont
JFreeChart,WITHOUT_CLASSIFICATION,// renderer - no longer a separate field but test anyway...
JFreeChart,WITHOUT_CLASSIFICATION,// leave the y values (y1 y0) untranslated as it is going to be be // stacked up later by previous series values after this it will be // translated.
JFreeChart,WITHOUT_CLASSIFICATION,//largeFont
JFreeChart,WITHOUT_CLASSIFICATION,// set up the series names...
JFreeChart,WITHOUT_CLASSIFICATION,//regularFont;
JFreeChart,WITHOUT_CLASSIFICATION,// there should be no change event when clearing an empty series
JFreeChart,WITHOUT_CLASSIFICATION,//titlePaint;
JFreeChart,WITHOUT_CLASSIFICATION,// clean up
JFreeChart,WITHOUT_CLASSIFICATION,// anchorValue
JFreeChart,WITHOUT_CLASSIFICATION,// tick marks visible flag...
JFreeChart,WITHOUT_CLASSIFICATION,// TBLRC // 01111
JFreeChart,WITHOUT_CLASSIFICATION,// tick label font...
JFreeChart,WITHOUT_CLASSIFICATION,// anti-aliasing
JFreeChart,WITHOUT_CLASSIFICATION,// rangeCrosshairPaint
JFreeChart,WITHOUT_CLASSIFICATION,// draw outliers
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBasePaint(int Paint boolean)?
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM URL GENERATOR
JFreeChart,WITHOUT_CLASSIFICATION,/* BufferedImage img =*/
JFreeChart,WITHOUT_CLASSIFICATION,//SerialUtilities.writeImage(this.image stream);
JFreeChart,WITHOUT_CLASSIFICATION,// process all renderers
JFreeChart,WITHOUT_CLASSIFICATION,// reserve space for the primary domain axis...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the bottom circle
JFreeChart,WITHOUT_CLASSIFICATION,// range markers - no longer separate fields but test anyway...
JFreeChart,WITHOUT_CLASSIFICATION,// set a custom background for the chart
JFreeChart,WITHOUT_CLASSIFICATION,// process all range axes
JFreeChart,WITHOUT_CLASSIFICATION,/* line visible */
JFreeChart,WITHOUT_CLASSIFICATION,/* shape outlined */
JFreeChart,WITHOUT_CLASSIFICATION,/* line visible = */
JFreeChart,WITHOUT_CLASSIFICATION,//subtitlePaint;
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the bar width
JFreeChart,WITHOUT_CLASSIFICATION,// -------------------------- // --- ChartPanel Methods --- // --------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// ------------------------ // --- Member Variables --- // ------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// ----------------- // --- Constants --- // -----------------
JFreeChart,WITHOUT_CLASSIFICATION,// process all domain axes
JFreeChart,WITHOUT_CLASSIFICATION,// Cycle when necessary
JFreeChart,WITHOUT_CLASSIFICATION,// wait till we are at the last item for the row then draw the // whole stack at once
JFreeChart,WITHOUT_CLASSIFICATION,// ---------------------- // --- Public Methods --- // ----------------------
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing at all
JFreeChart,WITHOUT_CLASSIFICATION,// add the chart title if one has been specified...
JFreeChart,WITHOUT_CLASSIFICATION,// by default the outline and background won't be visible
JFreeChart,WITHOUT_CLASSIFICATION,// process all annotations
JFreeChart,WITHOUT_CLASSIFICATION,"/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides         * those values are unused AFAIK. */"
JFreeChart,WITHOUT_CLASSIFICATION,// LineRenderer3D
JFreeChart,WITHOUT_CLASSIFICATION,// BarRenderer3D
JFreeChart,WITHOUT_CLASSIFICATION,// this fires a ChartChangeEvent
JFreeChart,WITHOUT_CLASSIFICATION,// added the following hint because of  // http://stackoverflow.com/questions/7785082/
JFreeChart,WITHOUT_CLASSIFICATION,// clear the section attributes so that the theme's DrawingSupplier // will be used
JFreeChart,WITHOUT_CLASSIFICATION,// if the flag is being set to true there may be queued up changes...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the title and subtitles...
JFreeChart,WITHOUT_CLASSIFICATION,// ensure no drawing occurs outside chart area...
JFreeChart,WITHOUT_CLASSIFICATION,// handle GradientPaint as a special case
JFreeChart,WITHOUT_CLASSIFICATION,// do not notify while zooming each axis
JFreeChart,WITHOUT_CLASSIFICATION,// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// this generates the change event too
JFreeChart,WITHOUT_CLASSIFICATION,// use ImageIcon because it waits for the image to load...
JFreeChart,WITHOUT_CLASSIFICATION,// load only when required
JFreeChart,WITHOUT_CLASSIFICATION,// seem to be the same
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME //this.image = SerialUtilities.readImage(stream);
JFreeChart,WITHOUT_CLASSIFICATION,// if we don't have at least 2 (x y) coordinates just return
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME //SerialUtilities.writeImage(this.image stream);
JFreeChart,WITHOUT_CLASSIFICATION,// return a new chart containing the overlaid plot...
JFreeChart,WITHOUT_CLASSIFICATION,//this.image = SerialUtilities.readImage(stream);
JFreeChart,WITHOUT_CLASSIFICATION,// add a second dataset and renderer...
JFreeChart,WITHOUT_CLASSIFICATION,// create plot ...
JFreeChart,WITHOUT_CLASSIFICATION,//  create transform & transform shape
JFreeChart,WITHOUT_CLASSIFICATION,// compute transform matrix elements via sample points. Assume no // rotation or shear.
JFreeChart,WITHOUT_CLASSIFICATION,// when zooming to sub-millisecond ranges it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:
JFreeChart,WITHOUT_CLASSIFICATION,// baseCreateEntities;
JFreeChart,WITHOUT_CLASSIFICATION,//for each power of 10 value; create ten ticks
JFreeChart,WITHOUT_CLASSIFICATION,// handle axis trace
JFreeChart,WITHOUT_CLASSIFICATION,// AXIS 4
JFreeChart,WITHOUT_CLASSIFICATION,// or redrawing the chart every time...
JFreeChart,WITHOUT_CLASSIFICATION,// regular number axis
JFreeChart,WITHOUT_CLASSIFICATION,// what is the available space for one unit?
JFreeChart,WITHOUT_CLASSIFICATION,// all tick labels have the same width (equal to the height of the // font)...
JFreeChart,WITHOUT_CLASSIFICATION,// there are no more candidates
JFreeChart,WITHOUT_CLASSIFICATION,// It's up to the plot which clones up to restore the correct references
JFreeChart,WITHOUT_CLASSIFICATION,// if the axis has a fixed dimension return it...
JFreeChart,WITHOUT_CLASSIFICATION,// displayStart > displayEnd need to handle split
JFreeChart,WITHOUT_CLASSIFICATION,// no plot no data.
JFreeChart,WITHOUT_CLASSIFICATION,//negative values not allowed
JFreeChart,WITHOUT_CLASSIFICATION,//get log10 version of upper bound and round to integer:
JFreeChart,WITHOUT_CLASSIFICATION,// is the category valid?
JFreeChart,WITHOUT_CLASSIFICATION,//setup number formatter obj
JFreeChart,WITHOUT_CLASSIFICATION,// add space for the outer tick labels if any...
JFreeChart,WITHOUT_CLASSIFICATION,// this is the first period but it is only partially visible // so check that the label will fit before displaying it...
JFreeChart,WITHOUT_CLASSIFICATION,// legendTextPaint
JFreeChart,WITHOUT_CLASSIFICATION,// work out the initial gap
JFreeChart,WITHOUT_CLASSIFICATION,// draw minor tick marks
JFreeChart,WITHOUT_CLASSIFICATION,// work out the trailing gap
JFreeChart,WITHOUT_CLASSIFICATION,// if autoRange is true then the current range is irrelevant
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the max size of the tick labels (if visible)...
JFreeChart,WITHOUT_CLASSIFICATION,// need to work out the space used by the tick labels... // so we can update the cursor...
JFreeChart,WITHOUT_CLASSIFICATION,//return value; negate if original value was negative:
JFreeChart,WITHOUT_CLASSIFICATION,//invert adjustLog10
JFreeChart,WITHOUT_CLASSIFICATION,//calculate ceil using negative value:
JFreeChart,WITHOUT_CLASSIFICATION,//negative values are allowed
JFreeChart,WITHOUT_CLASSIFICATION,//get lower bound value:
JFreeChart,WITHOUT_CLASSIFICATION,//parameter value is -10 > val < 10 //use as-is
JFreeChart,WITHOUT_CLASSIFICATION,// if < 10 then //increase so 0 translates to 0
JFreeChart,WITHOUT_CLASSIFICATION,//setup for "1e#"-style tick labels or regular // numeric tick labels depending on flag:
JFreeChart,WITHOUT_CLASSIFICATION,//calculate floor using negative value:
JFreeChart,WITHOUT_CLASSIFICATION,//setup flag based on bounds values
JFreeChart,WITHOUT_CLASSIFICATION,//no real data present
JFreeChart,WITHOUT_CLASSIFICATION,//need to account for case where upper==0.0
JFreeChart,WITHOUT_CLASSIFICATION,//actual data is present //get lower bound value
JFreeChart,WITHOUT_CLASSIFICATION,//apply lower margin by decreasing lower bound:
JFreeChart,WITHOUT_CLASSIFICATION,//strict flag set allow-negatives not set and values <= 0
JFreeChart,WITHOUT_CLASSIFICATION,//not small log values in use; allow for values <= 0 //if did zero tick last iter then
JFreeChart,WITHOUT_CLASSIFICATION,//no tick label to be shown
JFreeChart,WITHOUT_CLASSIFICATION,//create tick label (force use of fmt obj):
JFreeChart,WITHOUT_CLASSIFICATION,//create tick label:
JFreeChart,WITHOUT_CLASSIFICATION,//for each tick to be displayed
JFreeChart,WITHOUT_CLASSIFICATION,//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):
JFreeChart,WITHOUT_CLASSIFICATION,//not "1e#"-type label // if positive exponent then // make integer
JFreeChart,WITHOUT_CLASSIFICATION,//not "log10"-type label
JFreeChart,WITHOUT_CLASSIFICATION,//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick
JFreeChart,WITHOUT_CLASSIFICATION,//small log values in use
JFreeChart,WITHOUT_CLASSIFICATION,// did not do zero tick last iteration
JFreeChart,WITHOUT_CLASSIFICATION,//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:
JFreeChart,WITHOUT_CLASSIFICATION,//for each tick with a label to be displayed
JFreeChart,WITHOUT_CLASSIFICATION,//tick value not below lowest data value
JFreeChart,WITHOUT_CLASSIFICATION,// if past highest data value then exit // method
JFreeChart,WITHOUT_CLASSIFICATION,//negative exponent; create fractional value //set exact number of fractional digits to // be shown:
JFreeChart,WITHOUT_CLASSIFICATION,//if flag then //create "1e#"-type label
JFreeChart,WITHOUT_CLASSIFICATION,//get lower bound value
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM_LABEL_PAINT
JFreeChart,WITHOUT_CLASSIFICATION,//create "1e#"-type label
JFreeChart,WITHOUT_CLASSIFICATION,// check the new minimum date relative to the current maximum date
JFreeChart,WITHOUT_CLASSIFICATION,//decrement to do 1.0 tick now
JFreeChart,WITHOUT_CLASSIFICATION,//first or last tick on graph or value is 1.0 //create label for tick:
JFreeChart,WITHOUT_CLASSIFICATION,//create "log10"-type label
JFreeChart,WITHOUT_CLASSIFICATION,// milliseconds
JFreeChart,WITHOUT_CLASSIFICATION,// not first tick of group //no label //make sure flag cleared
JFreeChart,WITHOUT_CLASSIFICATION,//create tick object and add to list:
JFreeChart,WITHOUT_CLASSIFICATION,//if past highest data value then exit method
JFreeChart,WITHOUT_CLASSIFICATION,// did zero tick last iteration //no label //clear flag
JFreeChart,WITHOUT_CLASSIFICATION,// date formatters
JFreeChart,WITHOUT_CLASSIFICATION,// usually the range will be a DateRange but if it isn't do a // conversion...
JFreeChart,WITHOUT_CLASSIFICATION,//if flag then //create "log10"-type label
JFreeChart,WITHOUT_CLASSIFICATION,//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):
JFreeChart,WITHOUT_CLASSIFICATION,// check the new maximum date relative to the current minimum date
JFreeChart,WITHOUT_CLASSIFICATION,// get a locale-specific resource bundle...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the chart background...
JFreeChart,WITHOUT_CLASSIFICATION,// then extrapolate...
JFreeChart,WITHOUT_CLASSIFICATION,// even though the axis is not visible we need to refresh ticks in // case the grid is being drawn...
JFreeChart,WITHOUT_CLASSIFICATION,// days
JFreeChart,WITHOUT_CLASSIFICATION,// minutes
JFreeChart,WITHOUT_CLASSIFICATION,//Timeline hasn't method getStartTime()
JFreeChart,WITHOUT_CLASSIFICATION,// years
JFreeChart,WITHOUT_CLASSIFICATION,// months
JFreeChart,WITHOUT_CLASSIFICATION,// hours
JFreeChart,WITHOUT_CLASSIFICATION,// make final selection...
JFreeChart,WITHOUT_CLASSIFICATION,// could add a flag to make the following correction optional...
JFreeChart,WITHOUT_CLASSIFICATION,// 'tickMarkPosition' is immutable : no need to clone
JFreeChart,WITHOUT_CLASSIFICATION,// no action required.
JFreeChart,WITHOUT_CLASSIFICATION,// 'dateTickUnit' is immutable : no need to clone
JFreeChart,WITHOUT_CLASSIFICATION,// record the chart area if info is requested...
JFreeChart,WITHOUT_CLASSIFICATION,// step down in size until the current size is too small or there are  // no more units
JFreeChart,WITHOUT_CLASSIFICATION,// now process the plot if there is one
JFreeChart,WITHOUT_CLASSIFICATION,// if there is no specific font use the general one...
JFreeChart,WITHOUT_CLASSIFICATION,// if there is no specific paint use the general one...
JFreeChart,WITHOUT_CLASSIFICATION,// nothing required
JFreeChart,WITHOUT_CLASSIFICATION,// find first excluded base segment starting fromDomainValue
JFreeChart,WITHOUT_CLASSIFICATION,// make a time zone with no DST for our Calendar calculations
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// move forward exceptionSegmentCount segments skipping // excluded segments
JFreeChart,WITHOUT_CLASSIFICATION,// last series so we are ready to draw the min and max
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// verify that baseTimeline is compatible with us
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the result as if no exceptions
JFreeChart,WITHOUT_CLASSIFICATION,// find all consecutive included segments
JFreeChart,WITHOUT_CLASSIFICATION,// adjust result for any exceptions in the result calculated
JFreeChart,WITHOUT_CLASSIFICATION,// skip exception or excluded segments we may fall on
JFreeChart,WITHOUT_CLASSIFICATION,// skip all whole exception segments in the range
JFreeChart,WITHOUT_CLASSIFICATION,// add the interval as an exception
JFreeChart,WITHOUT_CLASSIFICATION,// first check that autoPopulate==false works as expected
JFreeChart,WITHOUT_CLASSIFICATION,// long start = Math.max( //     fromSegment.getSegmentStart() this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd() this.segmentEnd);
JFreeChart,WITHOUT_CLASSIFICATION,// cycle over all the base segments groups in the range
JFreeChart,WITHOUT_CLASSIFICATION,// cycle through all the segments contained in the base exclusion // area
JFreeChart,WITHOUT_CLASSIFICATION,// go to next base segment group
JFreeChart,WITHOUT_CLASSIFICATION,// If tick overlap when cycling update last tick too
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the adjusted data area taking into account the 3D effect...
JFreeChart,WITHOUT_CLASSIFICATION,// check if we need to collect chart entities from the container
JFreeChart,WITHOUT_CLASSIFICATION,// suppresses compiler warnings
JFreeChart,WITHOUT_CLASSIFICATION,// seriesOutlinePaint
JFreeChart,WITHOUT_CLASSIFICATION,// update but dont draw tick marks (needed for stepped colors)
JFreeChart,WITHOUT_CLASSIFICATION,// inverted
JFreeChart,WITHOUT_CLASSIFICATION,// draw mean - SPECIAL AIMS REQUIREMENT...
JFreeChart,WITHOUT_CLASSIFICATION,// allow fixed thickness
JFreeChart,WITHOUT_CLASSIFICATION,// default make height of plotArea
JFreeChart,WITHOUT_CLASSIFICATION,// remember these values for next comparison
JFreeChart,WITHOUT_CLASSIFICATION,// transparent
JFreeChart,WITHOUT_CLASSIFICATION,// ensure that all the symbols are displayed
JFreeChart,WITHOUT_CLASSIFICATION,// catches null also
JFreeChart,WITHOUT_CLASSIFICATION,// this ensure that the grid bands will be displayed correctly.
JFreeChart,WITHOUT_CLASSIFICATION,// must be top or bottom
JFreeChart,WITHOUT_CLASSIFICATION,// From outlier array sort out which are outliers and put these into a // list If there are any farouts set the flag on the // OutlierListCollection
JFreeChart,WITHOUT_CLASSIFICATION,// zap the buffer onto the canvas...
JFreeChart,WITHOUT_CLASSIFICATION,// avoid possible sun.dc.pr.PRException: endPath: bad path
JFreeChart,WITHOUT_CLASSIFICATION,// null is handled fine here...
JFreeChart,WITHOUT_CLASSIFICATION,// place in this row (truncated) anyway
JFreeChart,WITHOUT_CLASSIFICATION,// find optimum height then map to range
JFreeChart,WITHOUT_CLASSIFICATION,//Block b = (Block) blocks.get(i);
JFreeChart,WITHOUT_CLASSIFICATION,// can safely ignore
JFreeChart,WITHOUT_CLASSIFICATION,// handle tool tips in a simple way
JFreeChart,WITHOUT_CLASSIFICATION,// find optimum width and map to range
JFreeChart,WITHOUT_CLASSIFICATION,// since the flow layout is relatively straightforward no information // needs to be recorded here
JFreeChart,WITHOUT_CLASSIFICATION,// chart title // data // no legend // tooltips // no URL generation
JFreeChart,WITHOUT_CLASSIFICATION,// this default implementation will just fill the available // border space with a single color
JFreeChart,WITHOUT_CLASSIFICATION,// nothing to clear
JFreeChart,WITHOUT_CLASSIFICATION,// fixed width
JFreeChart,WITHOUT_CLASSIFICATION,// find optimum height and map to range
JFreeChart,WITHOUT_CLASSIFICATION,// if the area has zero height or width we shouldn't draw anything
JFreeChart,WITHOUT_CLASSIFICATION,// check if initial polygon needs to be clipped
JFreeChart,WITHOUT_CLASSIFICATION,// place in this column (truncated) anyway
JFreeChart,WITHOUT_CLASSIFICATION,// autoRange
JFreeChart,WITHOUT_CLASSIFICATION,// customise the section label appearance
JFreeChart,WITHOUT_CLASSIFICATION,// pass to the super-class for handling
JFreeChart,WITHOUT_CLASSIFICATION,// add a subtitle giving the data source
JFreeChart,WITHOUT_CLASSIFICATION,// Insets values
JFreeChart,WITHOUT_CLASSIFICATION,// figure out what type of axis we have and instantiate the // appropriate panel
JFreeChart,WITHOUT_CLASSIFICATION,// create a panel for the settings...
JFreeChart,WITHOUT_CLASSIFICATION,// populate the deprecated fields
JFreeChart,WITHOUT_CLASSIFICATION,//      end fix by rfuller
JFreeChart,WITHOUT_CLASSIFICATION,// pass to super-class for handling
JFreeChart,WITHOUT_CLASSIFICATION,// update the deprecated field
JFreeChart,WITHOUT_CLASSIFICATION,//same as for ChartEntity!
JFreeChart,WITHOUT_CLASSIFICATION,// then the axis properties...
JFreeChart,WITHOUT_CLASSIFICATION,// check the deprecated fields
JFreeChart,WITHOUT_CLASSIFICATION,// update the deprecated fields
JFreeChart,WITHOUT_CLASSIFICATION,// try the parent plot
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME
JFreeChart,WITHOUT_CLASSIFICATION,//      fix by rfuller
JFreeChart,WITHOUT_CLASSIFICATION,//dmo added //dmo added
JFreeChart,WITHOUT_CLASSIFICATION,// baseSeriesPaint
JFreeChart,WITHOUT_CLASSIFICATION,// record the plot area...
JFreeChart,WITHOUT_CLASSIFICATION,// title // x-axis label // y-axis label
JFreeChart,WITHOUT_CLASSIFICATION,// set the default stroke for all series
JFreeChart,WITHOUT_CLASSIFICATION,// does nothing unless overridden
JFreeChart,WITHOUT_CLASSIFICATION,// force a redraw
JFreeChart,WITHOUT_CLASSIFICATION,// the URL text should already have been escaped by the URL generator
JFreeChart,WITHOUT_CLASSIFICATION,//if we have been panning reset the cursor //unregister in any case
JFreeChart,WITHOUT_CLASSIFICATION,// the actual panning occurs later in the mouseDragged() method
JFreeChart,WITHOUT_CLASSIFICATION,/// we have rotation huston please spin me
JFreeChart,WITHOUT_CLASSIFICATION,// no fields to test
JFreeChart,WITHOUT_CLASSIFICATION,// we expect the line to be vertical or horizontal // vertical
JFreeChart,WITHOUT_CLASSIFICATION,//int maxX = (int) (plotArea.getMaxX());
JFreeChart,WITHOUT_CLASSIFICATION,// isArrowAtTop
JFreeChart,WITHOUT_CLASSIFICATION,// horizontal
JFreeChart,WITHOUT_CLASSIFICATION,/// we have rotation houston please spin me
JFreeChart,WITHOUT_CLASSIFICATION,// configure the range axis...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the shared axis
JFreeChart,WITHOUT_CLASSIFICATION,// set the width and height of non-shared axis of all sub-plots
JFreeChart,WITHOUT_CLASSIFICATION,// calculate sub-plot area
JFreeChart,WITHOUT_CLASSIFICATION,// default preserves previous // behaviour
JFreeChart,WITHOUT_CLASSIFICATION,// the range axis is deserialized before the subplots so its value // range is likely to be incorrect...
JFreeChart,WITHOUT_CLASSIFICATION,// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.
JFreeChart,WITHOUT_CLASSIFICATION,// draw all the charts
JFreeChart,WITHOUT_CLASSIFICATION,// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.
JFreeChart,WITHOUT_CLASSIFICATION,// get the data source - return if null;
JFreeChart,WITHOUT_CLASSIFICATION,// this is a paint we don't recognise
JFreeChart,WITHOUT_CLASSIFICATION,// the link area defines the dog-leg point for the linking lines to // the labels
JFreeChart,WITHOUT_CLASSIFICATION,// if too any elements
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing by default.
JFreeChart,WITHOUT_CLASSIFICATION,// if depth is negative don't draw anything
JFreeChart,WITHOUT_CLASSIFICATION,// and finishes at back
JFreeChart,WITHOUT_CLASSIFICATION,// the segment starts at the front and wraps all // the way around // the back and finishes at the front again
JFreeChart,WITHOUT_CLASSIFICATION,// start at front
JFreeChart,WITHOUT_CLASSIFICATION,// draw the height
JFreeChart,WITHOUT_CLASSIFICATION,// for CLOCKWISE charts the extent will be negative...
JFreeChart,WITHOUT_CLASSIFICATION,// cycle through again drawing only the sides at the front...
JFreeChart,WITHOUT_CLASSIFICATION,// segments wraps right around the back...
JFreeChart,WITHOUT_CLASSIFICATION,// segment starts at back
JFreeChart,WITHOUT_CLASSIFICATION,// and finishes at the front
JFreeChart,WITHOUT_CLASSIFICATION,// whole segment stays at the back
JFreeChart,WITHOUT_CLASSIFICATION,// segments starts at front and finishes at back...
JFreeChart,WITHOUT_CLASSIFICATION,// segment only occupies the front
JFreeChart,WITHOUT_CLASSIFICATION,//dmo //zero when the parameter is not set
JFreeChart,WITHOUT_CLASSIFICATION,// never updated the subtrahend if it is implied to be zero
JFreeChart,WITHOUT_CLASSIFICATION,// draw horizontal crosshair if required...
JFreeChart,WITHOUT_CLASSIFICATION,// draw vertical crosshair if required...
JFreeChart,WITHOUT_CLASSIFICATION,// ratio represents axis units
JFreeChart,WITHOUT_CLASSIFICATION,// ratio represents pixels
JFreeChart,WITHOUT_CLASSIFICATION,// draw the plot background...
JFreeChart,WITHOUT_CLASSIFICATION,// get the data points
JFreeChart,WITHOUT_CLASSIFICATION,// segment starts at the front
JFreeChart,WITHOUT_CLASSIFICATION,// just the horizontal axis...
JFreeChart,WITHOUT_CLASSIFICATION,// just the vertical axis...
JFreeChart,WITHOUT_CLASSIFICATION,// end of column
JFreeChart,WITHOUT_CLASSIFICATION,// the following relies on the fact that the intervals are immutable
JFreeChart,WITHOUT_CLASSIFICATION,// seriesPaintList
JFreeChart,WITHOUT_CLASSIFICATION,// this is a new column
JFreeChart,WITHOUT_CLASSIFICATION,// plot the data (unless the dataset is null)...
JFreeChart,WITHOUT_CLASSIFICATION,//Object oldValue = this.urlGenerator;
JFreeChart,WITHOUT_CLASSIFICATION,//Object oldValue = this.toolTipGenerator;
JFreeChart,WITHOUT_CLASSIFICATION,// draw the background
JFreeChart,WITHOUT_CLASSIFICATION,// can't find any difference
JFreeChart,WITHOUT_CLASSIFICATION,// intentionally blank
JFreeChart,WITHOUT_CLASSIFICATION,// set the anchor value for the range axis...
JFreeChart,WITHOUT_CLASSIFICATION,// make the link area a square if the pie chart is to be circular...
JFreeChart,WITHOUT_CLASSIFICATION,// send a dataset change event to self to trigger plot change event
JFreeChart,WITHOUT_CLASSIFICATION,// check if line segments are colinear
JFreeChart,WITHOUT_CLASSIFICATION,// delegate
JFreeChart,WITHOUT_CLASSIFICATION,// AXIS 3
JFreeChart,WITHOUT_CLASSIFICATION,//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);
JFreeChart,WITHOUT_CLASSIFICATION,// add a tooltip for the section...
JFreeChart,WITHOUT_CLASSIFICATION,// draw all the subplots
JFreeChart,WITHOUT_CLASSIFICATION,// the segment starts at the back (still extending // CLOCKWISE)
JFreeChart,WITHOUT_CLASSIFICATION,// override is only for documentation purposes
JFreeChart,WITHOUT_CLASSIFICATION,// y is minor
JFreeChart,WITHOUT_CLASSIFICATION,// if not check if there is a stroke defined for the specified key
JFreeChart,WITHOUT_CLASSIFICATION,// draw the wafer
JFreeChart,WITHOUT_CLASSIFICATION,//get major dimension
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the paint table
JFreeChart,WITHOUT_CLASSIFICATION,//ellipse diameter is the minor dimension
JFreeChart,WITHOUT_CLASSIFICATION,//set upperLeft point // x is minor
JFreeChart,WITHOUT_CLASSIFICATION,// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down
JFreeChart,WITHOUT_CLASSIFICATION,//// SECTION PAINT ////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//// SECTION OUTLINE STROKE ///////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// seriesPaint
JFreeChart,WITHOUT_CLASSIFICATION,// cycle through once drawing only the sides at the back...
JFreeChart,WITHOUT_CLASSIFICATION,// classify the keys according to which side the label will appear...
JFreeChart,WITHOUT_CLASSIFICATION,// clear the point vectors
JFreeChart,WITHOUT_CLASSIFICATION,// no range axis // no renderer
JFreeChart,WITHOUT_CLASSIFICATION,// draw the right labels...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the labels...
JFreeChart,WITHOUT_CLASSIFICATION,// can't find any difference...
JFreeChart,WITHOUT_CLASSIFICATION,//hh * getInteriorGap();
JFreeChart,WITHOUT_CLASSIFICATION,// line not visible
JFreeChart,WITHOUT_CLASSIFICATION,// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...
JFreeChart,WITHOUT_CLASSIFICATION,// create the bounds for the inner arc
JFreeChart,WITHOUT_CLASSIFICATION,// set the anchor value for the vertical axis...
JFreeChart,WITHOUT_CLASSIFICATION,// after setting up all the subplots the shared domain axis may need // reconfiguring
JFreeChart,WITHOUT_CLASSIFICATION,// delegate 'state' and 'source' argument checks...
JFreeChart,WITHOUT_CLASSIFICATION,// showValueLines
JFreeChart,WITHOUT_CLASSIFICATION,// column keys provide potential keys for individual pies
JFreeChart,WITHOUT_CLASSIFICATION,// update the section colors to match the global colors...
JFreeChart,WITHOUT_CLASSIFICATION,// calculate inner arc in reverse direction for later // GeneralPath construction
JFreeChart,WITHOUT_CLASSIFICATION,// the columns variable is always >= rows
JFreeChart,WITHOUT_CLASSIFICATION,// add an entity for the pie section
JFreeChart,WITHOUT_CLASSIFICATION,// row keys provide potential keys for individual pies
JFreeChart,WITHOUT_CLASSIFICATION,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014 by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License or * (at your option) any later version. * * This library is distributed in the hope that it will be useful but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not write to the Free Software * Foundation Inc. 51 Franklin Street Fifth Floor Boston MA  02110-1301 * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014 by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West Advanced Micro Devices Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary) updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis() and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization register plot as a listener with its *               axes dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers() as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged() since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method plus a fix for bug drawing *               category labels thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex() datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke() fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697 by Richard West for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */"
JFreeChart,WITHOUT_CLASSIFICATION,// allocate storage for dataset axes and renderers
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABELS VISIBLE //////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//// SERIES PAINT /////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// add the unique categories from this dataset
JFreeChart,WITHOUT_CLASSIFICATION,// don't let anyone draw outside the data area
JFreeChart,WITHOUT_CLASSIFICATION,// the first axis in the list is used for data <--> Java2D
JFreeChart,WITHOUT_CLASSIFICATION,// reserve space for any domain axes...
JFreeChart,WITHOUT_CLASSIFICATION,// get the legend items for the datasets...
JFreeChart,WITHOUT_CLASSIFICATION,// if there is a renderer it draws the background otherwise use the // default background...
JFreeChart,WITHOUT_CLASSIFICATION,// specify the anchor X and Y coordinates in Java2D space for the // cases where these are not updated during rendering (i.e. no lock // on data)
JFreeChart,WITHOUT_CLASSIFICATION,// reserve some space for the range axis...
JFreeChart,WITHOUT_CLASSIFICATION,// add domain axes to lists...
JFreeChart,WITHOUT_CLASSIFICATION,// now render data items...
JFreeChart,WITHOUT_CLASSIFICATION,// set up the alpha-transparency...
JFreeChart,WITHOUT_CLASSIFICATION,// draw an outline around the plot area...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the foreground markers...
JFreeChart,WITHOUT_CLASSIFICATION,// grab the plot's annotations
JFreeChart,WITHOUT_CLASSIFICATION,// iterate through the datasets that map to the axis and get the union // of the ranges.
JFreeChart,WITHOUT_CLASSIFICATION,// draw the bottom axes
JFreeChart,WITHOUT_CLASSIFICATION,// draw the left axes
JFreeChart,WITHOUT_CLASSIFICATION,// add range axes to lists...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the right axes
JFreeChart,WITHOUT_CLASSIFICATION,// now check that the chart is usable...
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing because the plot is not pannable along the domain axes
JFreeChart,WITHOUT_CLASSIFICATION,// provides a 'no action' default
JFreeChart,WITHOUT_CLASSIFICATION,// draw the range grid lines if any...
JFreeChart,WITHOUT_CLASSIFICATION,// stroke sequence
JFreeChart,WITHOUT_CLASSIFICATION,// AxisLocation is immutable so we can just copy the maps
JFreeChart,WITHOUT_CLASSIFICATION,// some subclasses override this method completely so don't put // anything here that *must* be done
JFreeChart,WITHOUT_CLASSIFICATION,// delegate to other method
JFreeChart,WITHOUT_CLASSIFICATION,// not currently serialized
JFreeChart,WITHOUT_CLASSIFICATION,// headPercent
JFreeChart,WITHOUT_CLASSIFICATION,// square
JFreeChart,WITHOUT_CLASSIFICATION,// check null argument...
JFreeChart,WITHOUT_CLASSIFICATION,// we don't need the sign
JFreeChart,WITHOUT_CLASSIFICATION,// baseSectionPaint
JFreeChart,WITHOUT_CLASSIFICATION,// the datasets are not cloned but listeners need to be added...
JFreeChart,WITHOUT_CLASSIFICATION,// fillType == TO_UPPER_BOUND
JFreeChart,WITHOUT_CLASSIFICATION,// normalize angle
JFreeChart,WITHOUT_CLASSIFICATION,// draw the radius grid lines if any...
JFreeChart,WITHOUT_CLASSIFICATION,// now for each dataset get the renderer and the appropriate axis // and render the dataset...
JFreeChart,WITHOUT_CLASSIFICATION,"/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(ii-1) = sub[i]  for 2<=i<=n        a(ii)   = diag[i] for 1<=i<=n        a(ii+1) = sup[i]  for 1<=i<=n-1        (the values sub[1] sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays 0 is unused */"
JFreeChart,WITHOUT_CLASSIFICATION,// horizontal ellipse
JFreeChart,WITHOUT_CLASSIFICATION,// horizontal rectangle
JFreeChart,WITHOUT_CLASSIFICATION,// up-pointing triangle
JFreeChart,WITHOUT_CLASSIFICATION,// right-pointing triangle
JFreeChart,WITHOUT_CLASSIFICATION,// this represents the situation // for drawing a horizontal bar.
JFreeChart,WITHOUT_CLASSIFICATION,// left-pointing triangle
JFreeChart,WITHOUT_CLASSIFICATION,// vertical rectangle
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the paint list
JFreeChart,WITHOUT_CLASSIFICATION,// draw the polygon series...
JFreeChart,WITHOUT_CLASSIFICATION,// verify independence of fixed legend item collection
JFreeChart,WITHOUT_CLASSIFICATION,//// SERIES OUTLINE STROKE /////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// draw the axis and category label
JFreeChart,WITHOUT_CLASSIFICATION,// plot the data...
JFreeChart,WITHOUT_CLASSIFICATION,// Now actually plot each of the series polygons..
JFreeChart,WITHOUT_CLASSIFICATION,// 1 = end of axis
JFreeChart,WITHOUT_CLASSIFICATION,// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon
JFreeChart,WITHOUT_CLASSIFICATION,/* shapeFilled=*/
JFreeChart,WITHOUT_CLASSIFICATION,// Finds our starting angle from the centre for this axis
JFreeChart,WITHOUT_CLASSIFICATION,// down-pointing triangle
JFreeChart,WITHOUT_CLASSIFICATION,// circle
JFreeChart,WITHOUT_CLASSIFICATION,// diamond
JFreeChart,WITHOUT_CLASSIFICATION,//  Check that the graph being served was created by the current user //  or that it begins with "public"
JFreeChart,WITHOUT_CLASSIFICATION,// set the anchor value for the horizontal axis...
JFreeChart,WITHOUT_CLASSIFICATION,// Plot the polygon
JFreeChart,WITHOUT_CLASSIFICATION,// draw range crosshair if required...
JFreeChart,WITHOUT_CLASSIFICATION,// put an elipse at the point being plotted..
JFreeChart,WITHOUT_CLASSIFICATION,// pass mouse down event if some ChartMouseListener are listening
JFreeChart,WITHOUT_CLASSIFICATION,// reserve space for the domain axes...
JFreeChart,WITHOUT_CLASSIFICATION,// allocate storage for datasets axes and renderers (all optional)
JFreeChart,WITHOUT_CLASSIFICATION,//          negatives = true;
JFreeChart,WITHOUT_CLASSIFICATION,// if series are in rows then the categories are the column keys
JFreeChart,WITHOUT_CLASSIFICATION,// Lastly fill the web polygon if this is required
JFreeChart,WITHOUT_CLASSIFICATION,//  value = Math.pow(10value);
JFreeChart,WITHOUT_CLASSIFICATION,// clone share data sets => add the clone as listener to the dataset
JFreeChart,WITHOUT_CLASSIFICATION,// no zooming possible
JFreeChart,WITHOUT_CLASSIFICATION,//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;
JFreeChart,WITHOUT_CLASSIFICATION,// reserve space for the range axes...
JFreeChart,WITHOUT_CLASSIFICATION,// is it a domain axis?
JFreeChart,WITHOUT_CLASSIFICATION,//render series in forward order
JFreeChart,WITHOUT_CLASSIFICATION,// draw background annotations
JFreeChart,WITHOUT_CLASSIFICATION,/// Draw N S E W
JFreeChart,WITHOUT_CLASSIFICATION,//render series in reverse order
JFreeChart,WITHOUT_CLASSIFICATION,// draw foreground annotations
JFreeChart,WITHOUT_CLASSIFICATION,// render data items...
JFreeChart,WITHOUT_CLASSIFICATION,// no default renderer available
JFreeChart,WITHOUT_CLASSIFICATION,// we can't draw quadrants without a valid x-axis
JFreeChart,WITHOUT_CLASSIFICATION,// can't render anything without axes
JFreeChart,WITHOUT_CLASSIFICATION,// we can't draw quadrants without a valid y-axis
JFreeChart,WITHOUT_CLASSIFICATION,// use the TextTitle class because it is a concrete subclass
JFreeChart,WITHOUT_CLASSIFICATION,// if the event was caused by a change to series visibility then // the axis ranges might need updating...
JFreeChart,WITHOUT_CLASSIFICATION,// we don't clone the listeners
JFreeChart,WITHOUT_CLASSIFICATION,/// Squares
JFreeChart,WITHOUT_CLASSIFICATION,// if there is an existing dataset remove the plot from the list // of change listeners...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the item shapes
JFreeChart,WITHOUT_CLASSIFICATION,// the textAlignment and the horizontalAlignment are separate things // but it makes sense for the default textAlignment to match the // title's horizontal alignment...
JFreeChart,WITHOUT_CLASSIFICATION,// or is it a range axis?
JFreeChart,WITHOUT_CLASSIFICATION,// perform the zoom on each domain axis
JFreeChart,WITHOUT_CLASSIFICATION,// register the plot as a listener with its axes datasets and // renderers...
JFreeChart,WITHOUT_CLASSIFICATION,// lineVisible
JFreeChart,WITHOUT_CLASSIFICATION,//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);
JFreeChart,WITHOUT_CLASSIFICATION,// we don't use the calendar or numberFormat fields but equals(Object) // is failing without them being non-null
JFreeChart,WITHOUT_CLASSIFICATION,// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?
JFreeChart,WITHOUT_CLASSIFICATION,//  draw units indicator
JFreeChart,WITHOUT_CLASSIFICATION,// already calculated // already calculated
JFreeChart,WITHOUT_CLASSIFICATION,// plot is registered as a listener with the existing axis...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the cap if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,// draw text value on screen
JFreeChart,WITHOUT_CLASSIFICATION,// draw start of normal range
JFreeChart,WITHOUT_CLASSIFICATION,//// FILL PAINT //////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// draw the axis...
JFreeChart,WITHOUT_CLASSIFICATION,// draw start of warning range
JFreeChart,WITHOUT_CLASSIFICATION,// draw start of critical range
JFreeChart,WITHOUT_CLASSIFICATION,// pieIndex...
JFreeChart,WITHOUT_CLASSIFICATION,// draw range indicators...
JFreeChart,WITHOUT_CLASSIFICATION,// draw thermometer outline
JFreeChart,WITHOUT_CLASSIFICATION,// draw the border
JFreeChart,WITHOUT_CLASSIFICATION,// draw the outline of the filled polygon
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the bounds of the template value
JFreeChart,WITHOUT_CLASSIFICATION,/* lineVisible= */
JFreeChart,WITHOUT_CLASSIFICATION,// urlText
JFreeChart,WITHOUT_CLASSIFICATION,// now find the text anchor point
JFreeChart,WITHOUT_CLASSIFICATION,// adjust text bounds to match string position
JFreeChart,WITHOUT_CLASSIFICATION,// draw the pointers
JFreeChart,WITHOUT_CLASSIFICATION,// draw the background if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,// first expand the viewing area into a drawing frame
JFreeChart,WITHOUT_CLASSIFICATION,// now do the minor tick marks
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the stroke table
JFreeChart,WITHOUT_CLASSIFICATION,// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key but that we // have already checked that the key is valid for the 2D structure
JFreeChart,WITHOUT_CLASSIFICATION,// SERIES VISIBLE (not yet respected by all renderers)
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the position list
JFreeChart,WITHOUT_CLASSIFICATION,// OUTLINE PAINT //////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the shape list
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the position table
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABEL FONT //////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//  Iterate and find all keys below threshold percentThreshold
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM LABEL VISIBILITY...
JFreeChart,WITHOUT_CLASSIFICATION,// POSITIVE ITEM LABEL POSITION...
JFreeChart,WITHOUT_CLASSIFICATION,// otherwise look up the boolean table
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABEL PAINT  ////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// 'paint' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// NEGATIVE ITEM LABEL POSITION...
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseStroke' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'outlinePaint' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'stroke' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'basePaint' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// skip any items that don't need including...
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseItemLabelAnchor' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,//create a temporary vector // set x to some arbitary value (used below)
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseOutlineStroke' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseItemLabelFont' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// shapeList // baseShape
JFreeChart,WITHOUT_CLASSIFICATION,// in this case every color has a unique value
JFreeChart,WITHOUT_CLASSIFICATION,// 'postiveItemLabelAnchor' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'itemLabelPaint' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'itemLabelFont' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'itemLabelsVisible' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// 'baseNegativeItemLabelAnchor' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// assign a color for each unique value
JFreeChart,WITHOUT_CLASSIFICATION,//System.err.print(" creating new outlier list ");
JFreeChart,WITHOUT_CLASSIFICATION,// === DEPRECATED CODE ===
JFreeChart,WITHOUT_CLASSIFICATION,// 'outlineStroke' : immutable no need to clone reference
JFreeChart,WITHOUT_CLASSIFICATION,// listeners are not restored automatically but storage must be // provided...
JFreeChart,WITHOUT_CLASSIFICATION,// handle special case where value is less that item zero
JFreeChart,WITHOUT_CLASSIFICATION,//// TOOL TIP GENERATOR ///////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// special case where the highest x-value is < xLow
JFreeChart,WITHOUT_CLASSIFICATION,//// URL GENERATOR ////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// more values than paints so map // multiple values to the same color
JFreeChart,WITHOUT_CLASSIFICATION,// if there is no plot there is no dataset to access...
JFreeChart,WITHOUT_CLASSIFICATION,// return the overall setting if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,// end class wafermaprenderer
JFreeChart,WITHOUT_CLASSIFICATION,// when the x-values are descending the upper bound is found by // comparing against xLow
JFreeChart,WITHOUT_CLASSIFICATION,// handle negative value
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: calculate xxLeft and xxRight
JFreeChart,WITHOUT_CLASSIFICATION,// end foreach map entry // end else
JFreeChart,WITHOUT_CLASSIFICATION,// handle positive value
JFreeChart,WITHOUT_CLASSIFICATION,// RIGHT POLYGON
JFreeChart,WITHOUT_CLASSIFICATION,// SHAPES FILLED
JFreeChart,WITHOUT_CLASSIFICATION,// '+' because v is negative
JFreeChart,WITHOUT_CLASSIFICATION,// handle value outside bounds...
JFreeChart,WITHOUT_CLASSIFICATION,// handle rendering separately for the two plot orientations...
JFreeChart,WITHOUT_CLASSIFICATION,// look for any keys that we don't already know about...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the blocks
JFreeChart,WITHOUT_CLASSIFICATION,// the commented out code would be better but only if // RendererChangeEvent is immutable which it isn't.  See if there is // a way to fix this...
JFreeChart,WITHOUT_CLASSIFICATION,// SHAPES VISIBLE
JFreeChart,WITHOUT_CLASSIFICATION,// contained titles
JFreeChart,WITHOUT_CLASSIFICATION,// preserves old behaviour
JFreeChart,WITHOUT_CLASSIFICATION,// LINES VISIBLE
JFreeChart,WITHOUT_CLASSIFICATION,// value 0
JFreeChart,WITHOUT_CLASSIFICATION,// nothing is drawn for null...
JFreeChart,WITHOUT_CLASSIFICATION,// put an outline around the data area...
JFreeChart,WITHOUT_CLASSIFICATION,// fetch the series remove the change listener then remove the series.
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing if both the line and shape are not visible
JFreeChart,WITHOUT_CLASSIFICATION,// cases 5 6 7 and 8
JFreeChart,WITHOUT_CLASSIFICATION,// get the clipping values...
JFreeChart,WITHOUT_CLASSIFICATION,// set the default item label positions
JFreeChart,WITHOUT_CLASSIFICATION,// fill background...
JFreeChart,WITHOUT_CLASSIFICATION,// highlight the background corners...
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM LABEL GENERATOR
JFreeChart,WITHOUT_CLASSIFICATION,// draw the bar...
JFreeChart,WITHOUT_CLASSIFICATION,// check the value we are plotting...
JFreeChart,WITHOUT_CLASSIFICATION,// the bar is not visible
JFreeChart,WITHOUT_CLASSIFICATION,// URL GENERATOR
JFreeChart,WITHOUT_CLASSIFICATION,// TOOL TIP GENERATOR
JFreeChart,WITHOUT_CLASSIFICATION,// defensive check
JFreeChart,WITHOUT_CLASSIFICATION,// no new methods
JFreeChart,WITHOUT_CLASSIFICATION,// now draw the outlines if visible...
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesOutlineStroke(int Stroke boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// cases 1 2 3 and 4
JFreeChart,WITHOUT_CLASSIFICATION,// handle special case of BoxAndWhiskerDataset
JFreeChart,WITHOUT_CLASSIFICATION,// let the superclass handle it...
JFreeChart,WITHOUT_CLASSIFICATION,// standard deviation lines
JFreeChart,WITHOUT_CLASSIFICATION,// cases 9 10 11 and 12
JFreeChart,WITHOUT_CLASSIFICATION,// draw background image if there is one...
JFreeChart,WITHOUT_CLASSIFICATION,//ChartEditorManager.getChartEditor(canvas.getDisplay() this.chart);
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesOutlinePaint(int Paint boolean)?
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseItemLabelPaint(Paint boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// DRAW THE BARS...
JFreeChart,WITHOUT_CLASSIFICATION,// nothing is drawn for null values...
JFreeChart,WITHOUT_CLASSIFICATION,//plotBackgroundPaint;
JFreeChart,WITHOUT_CLASSIFICATION,// no fields to compute...
JFreeChart,WITHOUT_CLASSIFICATION,// 100 percent so it will not apply unless changed
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseOutlineStroke(Stroke boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// units
JFreeChart,WITHOUT_CLASSIFICATION,//// SHAPE /////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// remove old items if necessary but // don't notify anyone because that // happens next anyway...
JFreeChart,WITHOUT_CLASSIFICATION,// tick labels visible
JFreeChart,WITHOUT_CLASSIFICATION,// tick size
JFreeChart,WITHOUT_CLASSIFICATION,//standard deviation lines
JFreeChart,WITHOUT_CLASSIFICATION,// switch x and y
JFreeChart,WITHOUT_CLASSIFICATION,// upright bar
JFreeChart,WITHOUT_CLASSIFICATION,// extend x0's flat bar
JFreeChart,WITHOUT_CLASSIFICATION,// or: x0s + 2*(x0-x0s)
JFreeChart,WITHOUT_CLASSIFICATION,// or: x1s + 2*(x1-x1s)
JFreeChart,WITHOUT_CLASSIFICATION,// the clone and the original share a reference to the SAME dataset
JFreeChart,WITHOUT_CLASSIFICATION,//plotOutlinePaint;
JFreeChart,WITHOUT_CLASSIFICATION,//// OUTLINE PAINT /////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// x1's flat bar
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesShape(int Shape boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// BAR WIDTH
JFreeChart,WITHOUT_CLASSIFICATION,//// PAINT /////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013 by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License or * (at your option) any later version. * * This library is distributed in the hope that it will be useful but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not write to the Free Software * Foundation Inc. 51 Franklin Street Fifth Floor Boston MA  02110-1301 * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011 by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint fillPaint outlinePaint stroke *               outlineStroke shape itemLabelsVisible itemLabelFont *               itemLabelPaint positiveItemLabelPosition *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */"
JFreeChart,WITHOUT_CLASSIFICATION,// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call) improves performance. //
JFreeChart,WITHOUT_CLASSIFICATION,// BAR HEIGHT
JFreeChart,WITHOUT_CLASSIFICATION,// row 2: outline color
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesPaint(int Paint boolean)?
JFreeChart,WITHOUT_CLASSIFICATION,//// FILL PAINT /////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesStroke(int Stroke boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,//// STROKE ////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseShape(Shape boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseOutlinePaint(Paint boolean)?
JFreeChart,WITHOUT_CLASSIFICATION,// ITEM LABELS VISIBLE
JFreeChart,WITHOUT_CLASSIFICATION,//// OUTLINE STROKE ////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesItemLabelGenerator(int CategoryItemLabelGenerator //            boolean)
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABEL FONT  //////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setBaseItemLabelFont(Font boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesItemLabelPaint(int Paint boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME: add setSeriesItemLabelFont(int Font boolean) ?
JFreeChart,WITHOUT_CLASSIFICATION,// create an actual polygon
JFreeChart,WITHOUT_CLASSIFICATION,// create a line renderer only
JFreeChart,WITHOUT_CLASSIFICATION,// draw the upper shadow...
JFreeChart,WITHOUT_CLASSIFICATION,// connect to the previous point
JFreeChart,WITHOUT_CLASSIFICATION,// need to handle cluster centering as a special case
JFreeChart,WITHOUT_CLASSIFICATION,// first check the number we are plotting...
JFreeChart,WITHOUT_CLASSIFICATION,// 100 percent so it will not apply unless // changed
JFreeChart,WITHOUT_CLASSIFICATION,// we'll set this to false if there is at // least one non-null data item...
JFreeChart,WITHOUT_CLASSIFICATION,// set the default item label positions which will only be used if // the user requests visible item labels...
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the box width
JFreeChart,WITHOUT_CLASSIFICATION,// treat the last column value as an absolute
JFreeChart,WITHOUT_CLASSIFICATION,// offset the start of the box if the box width is smaller than // the category width
JFreeChart,WITHOUT_CLASSIFICATION,// alternatively sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the box...
JFreeChart,WITHOUT_CLASSIFICATION,"/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */"
JFreeChart,WITHOUT_CLASSIFICATION,// Create a new Area for the series
JFreeChart,WITHOUT_CLASSIFICATION,// start from Y = rangeBase
JFreeChart,WITHOUT_CLASSIFICATION,// draw median...
JFreeChart,WITHOUT_CLASSIFICATION,// average radius
JFreeChart,WITHOUT_CLASSIFICATION,// draw yOutliers...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the body...
JFreeChart,WITHOUT_CLASSIFICATION,// draw farout indicators
JFreeChart,WITHOUT_CLASSIFICATION,// disable visible items optimisation - it doesn't work for this // renderer...
JFreeChart,WITHOUT_CLASSIFICATION,// not just a horizontal bar but need to perform a 'step'.
JFreeChart,WITHOUT_CLASSIFICATION,// The first point is (x this.baseYValue)
JFreeChart,WITHOUT_CLASSIFICATION,// check if series are disjoint (i.e. domain-spans do not overlap)
JFreeChart,WITHOUT_CLASSIFICATION,// TODO getSeriesShape(n).getBounds().height / 2;
JFreeChart,WITHOUT_CLASSIFICATION,// project onto minuend
JFreeChart,WITHOUT_CLASSIFICATION,// fill the polygon
JFreeChart,WITHOUT_CLASSIFICATION,// draw an outline around the Area.
JFreeChart,WITHOUT_CLASSIFICATION,// TODO getSeriesShape(n).getBounds().width / 2;
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing...this is just a hook for subclasses
JFreeChart,WITHOUT_CLASSIFICATION,// start new area when needed (see above)
JFreeChart,WITHOUT_CLASSIFICATION,// draw optional guide lines
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the arrow head and draw it...
JFreeChart,WITHOUT_CLASSIFICATION,// there are no fields to check
JFreeChart,WITHOUT_CLASSIFICATION,//labelLinkStyle;
JFreeChart,WITHOUT_CLASSIFICATION,// orientation is HORIZONTAL
JFreeChart,WITHOUT_CLASSIFICATION,// check if either series is a degenerate case (i.e. less than 2 points)
JFreeChart,WITHOUT_CLASSIFICATION,// try a listener type that isn't registered
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABEL FONT ///////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// state
JFreeChart,WITHOUT_CLASSIFICATION,// can't draw anything
JFreeChart,WITHOUT_CLASSIFICATION,// start of algorithm
JFreeChart,WITHOUT_CLASSIFICATION,// subtrahend needs to be fast forwarded
JFreeChart,WITHOUT_CLASSIFICATION,// DEPRECATED METHODS
JFreeChart,WITHOUT_CLASSIFICATION,// if the series is sorted the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...
JFreeChart,WITHOUT_CLASSIFICATION,//// ANNOTATIONS //////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// check for intersect
JFreeChart,WITHOUT_CLASSIFICATION,// deassert b_*FastForward (only matters for 1st time through loop)
JFreeChart,WITHOUT_CLASSIFICATION,// set new starting point for the polygon
JFreeChart,WITHOUT_CLASSIFICATION,// project onto subtrahend
JFreeChart,WITHOUT_CLASSIFICATION,// pass mouse move event if some ChartMouseListener are listening
JFreeChart,WITHOUT_CLASSIFICATION,// clear colinear points and flag
JFreeChart,WITHOUT_CLASSIFICATION,// compute numerators
JFreeChart,WITHOUT_CLASSIFICATION,// this won't happen :)
JFreeChart,WITHOUT_CLASSIFICATION,// compute the point of intersection
JFreeChart,WITHOUT_CLASSIFICATION,// check if the line segments intersect
JFreeChart,WITHOUT_CLASSIFICATION,// test if both grahphs have a vertical rise at the same x-value
JFreeChart,WITHOUT_CLASSIFICATION,// add intersection point to the polygon
JFreeChart,WITHOUT_CLASSIFICATION,//// PAINT ////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// return straight away if the item is not visible
JFreeChart,WITHOUT_CLASSIFICATION,// add interection point to new polygon
JFreeChart,WITHOUT_CLASSIFICATION,// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?
JFreeChart,WITHOUT_CLASSIFICATION,// set the maxY and minY values to intersect y-value
JFreeChart,WITHOUT_CLASSIFICATION,// labelType...
JFreeChart,WITHOUT_CLASSIFICATION,// add the last point of the minuned and subtrahend
JFreeChart,WITHOUT_CLASSIFICATION,// consider last point of minuend and subtrahend for determining // positivity
JFreeChart,WITHOUT_CLASSIFICATION,// check if the final polygon needs to be clipped
JFreeChart,WITHOUT_CLASSIFICATION,// the SWTGraphics2D class doesn't handle GradientPaint well so // replace the gradient painter from the default theme with a // standard painter...
JFreeChart,WITHOUT_CLASSIFICATION,// advance the subtrahend if needed
JFreeChart,WITHOUT_CLASSIFICATION,//// VISIBLE //////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// advance the minuend if needed
JFreeChart,WITHOUT_CLASSIFICATION,// vertical orientation
JFreeChart,WITHOUT_CLASSIFICATION,// advance minuend and subtrahend to intesect
JFreeChart,WITHOUT_CLASSIFICATION,// a Range object cannot be equal to a different object type
JFreeChart,WITHOUT_CLASSIFICATION,// bad axisNumber
JFreeChart,WITHOUT_CLASSIFICATION,// compute slope components
JFreeChart,WITHOUT_CLASSIFICATION,//// DRAWING //////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// may be negative
JFreeChart,WITHOUT_CLASSIFICATION,//// OUTLINE PAINT ////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// interval
JFreeChart,WITHOUT_CLASSIFICATION,// first pass draws the shading
JFreeChart,WITHOUT_CLASSIFICATION,//// OUTLINE STROKE ///////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//// SHAPE ////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//// ITEM LABEL GENERATOR /////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,//// LEGEND ITEMS /////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// FIXME:
JFreeChart,WITHOUT_CLASSIFICATION,//  Get height adjustment based on stack and translate to Java2D values
JFreeChart,WITHOUT_CLASSIFICATION,// add an entity if this info is being collected
JFreeChart,WITHOUT_CLASSIFICATION,// if the renderer isn't assigned to a plot then we don't have a // dataset...
JFreeChart,WITHOUT_CLASSIFICATION,//  On first pass render the areas line and outlines
JFreeChart,WITHOUT_CLASSIFICATION,// Use a SwtPaintCanvas to show the color note that we must set the // heightHint.
JFreeChart,WITHOUT_CLASSIFICATION,//  Get series Paint and Stroke
JFreeChart,WITHOUT_CLASSIFICATION,// start from previous height (ph1)
JFreeChart,WITHOUT_CLASSIFICATION,//labelLinkPaint;
JFreeChart,WITHOUT_CLASSIFICATION,//  Draw an outline around the Area.
JFreeChart,WITHOUT_CLASSIFICATION,// The first point is (x 0)
JFreeChart,WITHOUT_CLASSIFICATION,// dial shape
JFreeChart,WITHOUT_CLASSIFICATION,// we need at least two points to draw something
JFreeChart,WITHOUT_CLASSIFICATION,// construct path
JFreeChart,WITHOUT_CLASSIFICATION,// if this is the last item draw the path ...
JFreeChart,WITHOUT_CLASSIFICATION,// update path to reflect latest point
JFreeChart,WITHOUT_CLASSIFICATION,// now create a new title and replace the existing title several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent
JFreeChart,WITHOUT_CLASSIFICATION,// On second pass render shapes and collect entity and tooltip // information
JFreeChart,WITHOUT_CLASSIFICATION,// Add points from last series to complete the base of the // polygon
JFreeChart,WITHOUT_CLASSIFICATION,// Collect points
JFreeChart,WITHOUT_CLASSIFICATION,// draw path
JFreeChart,WITHOUT_CLASSIFICATION,// construct spline // number of points // Newton form coefficients // x-coordinates of nodes
JFreeChart,WITHOUT_CLASSIFICATION,// we need at least 3 points to spline. Draw simple line // for two points
JFreeChart,WITHOUT_CLASSIFICATION,// we're running on JRE 1.3.1 so this is the best we have...
JFreeChart,WITHOUT_CLASSIFICATION,// note that a[0]=a[np-1]=0
JFreeChart,WITHOUT_CLASSIFICATION,// dial background paint
JFreeChart,WITHOUT_CLASSIFICATION,// get the label position..
JFreeChart,WITHOUT_CLASSIFICATION,// name
JFreeChart,WITHOUT_CLASSIFICATION,// just the range axis...
JFreeChart,WITHOUT_CLASSIFICATION,// then draw the line...
JFreeChart,WITHOUT_CLASSIFICATION,// fill under the curve...
JFreeChart,WITHOUT_CLASSIFICATION,// just the domain axis...
JFreeChart,WITHOUT_CLASSIFICATION,// now draw the real shape
JFreeChart,WITHOUT_CLASSIFICATION,/*      factorization and forward substitution */
JFreeChart,WITHOUT_CLASSIFICATION,// reset points vector
JFreeChart,WITHOUT_CLASSIFICATION,// should never get here
JFreeChart,WITHOUT_CLASSIFICATION,// map a key to the default group
JFreeChart,WITHOUT_CLASSIFICATION,// 'plot' : just retain reference not a deep copy
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the step point
JFreeChart,WITHOUT_CLASSIFICATION,//this handles the need to perform a 'step'.
JFreeChart,WITHOUT_CLASSIFICATION,//this handles the need to perform a 'step'. // calculate the step point
JFreeChart,WITHOUT_CLASSIFICATION,// submit this data item as a candidate for the crosshair point
JFreeChart,WITHOUT_CLASSIFICATION,// create a new area polygon for the series
JFreeChart,WITHOUT_CLASSIFICATION,// the first point is (x 0)
JFreeChart,WITHOUT_CLASSIFICATION,// no change
JFreeChart,WITHOUT_CLASSIFICATION,// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart
JFreeChart,WITHOUT_CLASSIFICATION,// here we use BooleanUtilities to remain compatible with JDKs < 1.4
JFreeChart,WITHOUT_CLASSIFICATION,// update the max value
JFreeChart,WITHOUT_CLASSIFICATION,// need to make sure we are adding *after* any duplicates
JFreeChart,WITHOUT_CLASSIFICATION,// we needed to get this far even for invisible items to ensure that // seriesPath updates happened but now there is nothing more we need // to do for non-visible items...
JFreeChart,WITHOUT_CLASSIFICATION,// If the line is not wrapping then parent is OK
JFreeChart,WITHOUT_CLASSIFICATION,// draw the body
JFreeChart,WITHOUT_CLASSIFICATION,// only draw a line if the gap between the current and // previous data point is within the threshold
JFreeChart,WITHOUT_CLASSIFICATION,// draw the lower shadow
JFreeChart,WITHOUT_CLASSIFICATION,// draw the upper shadow
JFreeChart,WITHOUT_CLASSIFICATION,// this method must be overridden if you want to display images
JFreeChart,WITHOUT_CLASSIFICATION,// first pass draws the background (lines for instance)
JFreeChart,WITHOUT_CLASSIFICATION,//  Fill the polygon
JFreeChart,WITHOUT_CLASSIFICATION,//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// Now split the segment as needed
JFreeChart,WITHOUT_CLASSIFICATION,// should not get here
JFreeChart,WITHOUT_CLASSIFICATION,// yOutliers can be null but we'd prefer it to be an empty list in // that case...
JFreeChart,WITHOUT_CLASSIFICATION,// draw farout
JFreeChart,WITHOUT_CLASSIFICATION,// draw yOutliers
JFreeChart,WITHOUT_CLASSIFICATION,// minuend needs to be fast forwarded
JFreeChart,WITHOUT_CLASSIFICATION,// If null don't draw line at all
JFreeChart,WITHOUT_CLASSIFICATION,//initalize xValues yValues and zValues arrays.
JFreeChart,WITHOUT_CLASSIFICATION,// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made
JFreeChart,WITHOUT_CLASSIFICATION,// If null don't draw line => then delegate to parent
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the highest volume in the dataset...
JFreeChart,WITHOUT_CLASSIFICATION,// draw the error bar for the y-interval
JFreeChart,WITHOUT_CLASSIFICATION,// draw the error bar for the x-interval
JFreeChart,WITHOUT_CLASSIFICATION,// transpose the dimensions because the title is rotated
JFreeChart,WITHOUT_CLASSIFICATION,// include the interval if there is one
JFreeChart,WITHOUT_CLASSIFICATION,//domainGridlinePaint;
JFreeChart,WITHOUT_CLASSIFICATION,// no need to instantiate this class
JFreeChart,WITHOUT_CLASSIFICATION,// handle item label drawing now that we know all the bars have // been drawn...
JFreeChart,WITHOUT_CLASSIFICATION,// we didn't find the key
JFreeChart,WITHOUT_CLASSIFICATION,// update the crosshair point
JFreeChart,WITHOUT_CLASSIFICATION,// don't bother with parsing
JFreeChart,WITHOUT_CLASSIFICATION,// --- DEPRECATED CODE ----------------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// RectangleInsets is immutable => same reference in clone OK
JFreeChart,WITHOUT_CLASSIFICATION,//  Add chart to deletion list in session
JFreeChart,WITHOUT_CLASSIFICATION,//  Serve it up
JFreeChart,WITHOUT_CLASSIFICATION,//  Replace ".." with "" //  This is to prevent access to the rest of the file system
JFreeChart,WITHOUT_CLASSIFICATION,//  Set HTTP headers
JFreeChart,WITHOUT_CLASSIFICATION,// suppress compiler warning
JFreeChart,WITHOUT_CLASSIFICATION,// svgClass will be null so the function will return false
JFreeChart,WITHOUT_CLASSIFICATION,// determine the space required for the axis
JFreeChart,WITHOUT_CLASSIFICATION,// this includes the case where the underlying dataset is null
JFreeChart,WITHOUT_CLASSIFICATION,// get the lastest pixel
JFreeChart,WITHOUT_CLASSIFICATION,// first point is outside so we update it against one of the // four sides then continue
JFreeChart,WITHOUT_CLASSIFICATION,// second point is outside so we update it against one of the // four sides then continue
JFreeChart,WITHOUT_CLASSIFICATION,//reserve variables to store the coordinates of the resulting GradientPaint
JFreeChart,WITHOUT_CLASSIFICATION,// Red // Green // Blue
JFreeChart,WITHOUT_CLASSIFICATION,// ALWAYS null
JFreeChart,WITHOUT_CLASSIFICATION,// Red // Green // Blue. Now map computed colour to // nearest in Palette...
JFreeChart,WITHOUT_CLASSIFICATION,// RGB (+ optional Alpha which we leave // unchanged)
JFreeChart,WITHOUT_CLASSIFICATION,// <- this is the code that actually COPIES the pixels
JFreeChart,WITHOUT_CLASSIFICATION,"/*         * Buffered Images may have properties but NEVER disclose them!         * Nevertheless just in case someone implements getPropertyNames()         * one day...         */"
JFreeChart,WITHOUT_CLASSIFICATION,/* Ignore alpha-channel -> */
JFreeChart,WITHOUT_CLASSIFICATION,//get the coordinates of the shape that is to be filled
JFreeChart,WITHOUT_CLASSIFICATION,// substitute the filtered URL list
JFreeChart,WITHOUT_CLASSIFICATION,// all methods are static no need to instantiate
JFreeChart,WITHOUT_CLASSIFICATION,// vertical pass
JFreeChart,WITHOUT_CLASSIFICATION,// substract the oldest pixel from the sum
JFreeChart,WITHOUT_CLASSIFICATION,//start point is upper left corner
JFreeChart,WITHOUT_CLASSIFICATION,/* (pix-buffer is large enough for all pixels of one row) */
JFreeChart,WITHOUT_CLASSIFICATION,//start point is lower left right corner --> diagonal gradient
JFreeChart,WITHOUT_CLASSIFICATION,// horizontal pass
JFreeChart,WITHOUT_CLASSIFICATION,// check that the column key is defined in the 2D structure
JFreeChart,WITHOUT_CLASSIFICATION,// consider these to be ordered after general objects
JFreeChart,WITHOUT_CLASSIFICATION,// this will include the case where the underlying dataset is null
JFreeChart,WITHOUT_CLASSIFICATION,// 1. check whether the row is now empty.
JFreeChart,WITHOUT_CLASSIFICATION,// but the row data requires a deep copy
JFreeChart,WITHOUT_CLASSIFICATION,//  Check the file exists
JFreeChart,WITHOUT_CLASSIFICATION,//int columnIndex = getColumnIndex(columnKey);
JFreeChart,WITHOUT_CLASSIFICATION,/* Placeholder */
JFreeChart,WITHOUT_CLASSIFICATION,// for the keys a shallow copy should be fine because keys // should be immutable...
JFreeChart,WITHOUT_CLASSIFICATION,// no new methods required
JFreeChart,WITHOUT_CLASSIFICATION,// Map the nongrid data into the new regular grid
JFreeChart,WITHOUT_CLASSIFICATION,// does the series exist?
JFreeChart,WITHOUT_CLASSIFICATION,// Find min max for the x and y axes
JFreeChart,WITHOUT_CLASSIFICATION,// fetch the value...
JFreeChart,WITHOUT_CLASSIFICATION,// update the data...
JFreeChart,WITHOUT_CLASSIFICATION,//step through all the values and add them to the hash
JFreeChart,WITHOUT_CLASSIFICATION,// store Number as Double
JFreeChart,WITHOUT_CLASSIFICATION,// scale by the inverse of distance^power
JFreeChart,WITHOUT_CLASSIFICATION,// if d is real small set the inverse to a large number // to avoid INF
JFreeChart,WITHOUT_CLASSIFICATION,// Determine the cell size
JFreeChart,WITHOUT_CLASSIFICATION,//remove distance of the sum
JFreeChart,WITHOUT_CLASSIFICATION,// the CategoryDataset interface expects a list of categories but // we've stored them in an array...
JFreeChart,WITHOUT_CLASSIFICATION,//store data as Long
JFreeChart,WITHOUT_CLASSIFICATION,// remove all the series from the collection and notify listeners.
JFreeChart,WITHOUT_CLASSIFICATION,// set x to most recent value
JFreeChart,WITHOUT_CLASSIFICATION,//store index where new //column starts
JFreeChart,WITHOUT_CLASSIFICATION,// already know 'a' isn't null
JFreeChart,WITHOUT_CLASSIFICATION,// calculate constant values
JFreeChart,WITHOUT_CLASSIFICATION,// store y and z axes // as Doubles
JFreeChart,WITHOUT_CLASSIFICATION,//  Do not add key to dataset
JFreeChart,WITHOUT_CLASSIFICATION,// now try to instantiate this ;-)
JFreeChart,WITHOUT_CLASSIFICATION,// now do the work...
JFreeChart,WITHOUT_CLASSIFICATION,//  Add other category if applicable
JFreeChart,WITHOUT_CLASSIFICATION,//  Add key to dataset
JFreeChart,WITHOUT_CLASSIFICATION,// if the dataset implements DomainInfo life is easier
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// update the min value
JFreeChart,WITHOUT_CLASSIFICATION,// handle the standard case (plain CategoryDataset)
JFreeChart,WITHOUT_CLASSIFICATION,// create the temporary directory if it doesn't exist
JFreeChart,WITHOUT_CLASSIFICATION,/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
JFreeChart,WITHOUT_CLASSIFICATION,// handle special case of OHLCDataset
JFreeChart,WITHOUT_CLASSIFICATION,// handle special case of IntervalXYDataset
JFreeChart,WITHOUT_CLASSIFICATION,// if the dataset implements DomainInfo life is easy
JFreeChart,WITHOUT_CLASSIFICATION,// work out the minimum value...
JFreeChart,WITHOUT_CLASSIFICATION,// minimum and maximum for each group...
JFreeChart,WITHOUT_CLASSIFICATION,// maps our series into our parent's
JFreeChart,WITHOUT_CLASSIFICATION,// add the series...
JFreeChart,WITHOUT_CLASSIFICATION,// more difficult case - evaluate later...
JFreeChart,WITHOUT_CLASSIFICATION,// Are we working with a time series.
JFreeChart,WITHOUT_CLASSIFICATION,// exact match on first item
JFreeChart,WITHOUT_CLASSIFICATION,// exact match
JFreeChart,WITHOUT_CLASSIFICATION,// delegate null check on dataset
JFreeChart,WITHOUT_CLASSIFICATION,// overridden to make public
JFreeChart,WITHOUT_CLASSIFICATION,// no crossing of x
JFreeChart,WITHOUT_CLASSIFICATION,// spanning match
JFreeChart,WITHOUT_CLASSIFICATION,// Might need to add to free memory from any previous result sets
JFreeChart,WITHOUT_CLASSIFICATION,// no new methods added.
JFreeChart,WITHOUT_CLASSIFICATION,// prior to 1.0.14 we just fired a PropertyChange - so we need to // keep doing this
JFreeChart,WITHOUT_CLASSIFICATION,// not a value can't use it (defaults to null)
JFreeChart,WITHOUT_CLASSIFICATION,// Remove any previous old data
JFreeChart,WITHOUT_CLASSIFICATION,// first line contains column keys
JFreeChart,WITHOUT_CLASSIFICATION,// first column contains the row key...
JFreeChart,WITHOUT_CLASSIFICATION,// remaining fields contain values
JFreeChart,WITHOUT_CLASSIFICATION,// suppress (value defaults to null)
JFreeChart,WITHOUT_CLASSIFICATION,// lower bounds are the same
JFreeChart,WITHOUT_CLASSIFICATION,// pretty sure this shouldn't ever happen
JFreeChart,WITHOUT_CLASSIFICATION,// first field is ignored since // column 0 is for row keys
JFreeChart,WITHOUT_CLASSIFICATION,// fill the bins
JFreeChart,WITHOUT_CLASSIFICATION,/// First column is X data
JFreeChart,WITHOUT_CLASSIFICATION,/// Determine max and min values.
JFreeChart,WITHOUT_CLASSIFICATION,// Get all rows. // rows = new ArrayList();
JFreeChart,WITHOUT_CLASSIFICATION,// pass values to other constructor
JFreeChart,WITHOUT_CLASSIFICATION,// sum of x x^2 x * y y
JFreeChart,WITHOUT_CLASSIFICATION,// update the cached range values...
JFreeChart,WITHOUT_CLASSIFICATION,// update cached min and max values
JFreeChart,WITHOUT_CLASSIFICATION,// defer null argument checks
JFreeChart,WITHOUT_CLASSIFICATION,// intercept
JFreeChart,WITHOUT_CLASSIFICATION,// calculate the sum and count
JFreeChart,WITHOUT_CLASSIFICATION,// treat nulls the same as NaNs
JFreeChart,WITHOUT_CLASSIFICATION,// check for zero pivot element
JFreeChart,WITHOUT_CLASSIFICATION,// iterate over all data items and update mins and maxes
JFreeChart,WITHOUT_CLASSIFICATION,// update cached range values
JFreeChart,WITHOUT_CLASSIFICATION,// Tell the listeners a new table has arrived.
JFreeChart,WITHOUT_CLASSIFICATION,// make the change (if it's not a duplicate time period)...
JFreeChart,WITHOUT_CLASSIFICATION,// remove old items and notify if necessary
JFreeChart,WITHOUT_CLASSIFICATION,// we are at the last minute in the hour...
JFreeChart,WITHOUT_CLASSIFICATION,// won't get here...
JFreeChart,WITHOUT_CLASSIFICATION,// find the serial index of the period specified by 'latest'
JFreeChart,WITHOUT_CLASSIFICATION,// see comments about priority of // 10 in validateObject()
JFreeChart,WITHOUT_CLASSIFICATION,// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead synchronize the loop that calls it.
JFreeChart,WITHOUT_CLASSIFICATION,//rangeGridlinePaint;
JFreeChart,WITHOUT_CLASSIFICATION,// figure out if we need to iterate through all the y-values // to find the revised minY / maxY
JFreeChart,WITHOUT_CLASSIFICATION,// we are at the first hour in the day...
JFreeChart,WITHOUT_CLASSIFICATION,// if the hour is 0 - 23 then create an hour
JFreeChart,WITHOUT_CLASSIFICATION,// start is after last data item
JFreeChart,WITHOUT_CLASSIFICATION,// But if that series array already exists just overwrite its contents //synchronized(this) //{
JFreeChart,WITHOUT_CLASSIFICATION,// we are at the last hour in the day...
JFreeChart,WITHOUT_CLASSIFICATION,// update the time series appropriately
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Hour object // -----------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// cached values used for interface DomainInfo:
JFreeChart,WITHOUT_CLASSIFICATION,// an arbitrary safe default value
JFreeChart,WITHOUT_CLASSIFICATION,// parse the string...
JFreeChart,WITHOUT_CLASSIFICATION,// work out the average for the earlier values...
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Year object // -----------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// default value;
JFreeChart,WITHOUT_CLASSIFICATION,// autoinit's to null.
JFreeChart,WITHOUT_CLASSIFICATION,// But if that series array already exists just overwrite its contents
JFreeChart,WITHOUT_CLASSIFICATION,// create the year...
JFreeChart,WITHOUT_CLASSIFICATION,// remaining lines contain a row key and data values
JFreeChart,WITHOUT_CLASSIFICATION,// create an array holding the group indices for each series...
JFreeChart,WITHOUT_CLASSIFICATION,// if the initial averaging period is to be excluded then // calculate the index of the // first data item to have an average calculated...
JFreeChart,WITHOUT_CLASSIFICATION,// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection
JFreeChart,WITHOUT_CLASSIFICATION,// Avoid IndexOutOfBoundsException:
JFreeChart,WITHOUT_CLASSIFICATION,/// Expand the following for all defined TimePeriods:
JFreeChart,WITHOUT_CLASSIFICATION,///  .. etc....
JFreeChart,WITHOUT_CLASSIFICATION,//{ // deep copy from values[] caller // can safely discard that array
JFreeChart,WITHOUT_CLASSIFICATION,// Methods for managing the FIFO's:
JFreeChart,WITHOUT_CLASSIFICATION,// handle special case of BoxAndWhiskerXYDataset
JFreeChart,WITHOUT_CLASSIFICATION,// a Long kept updated by advanceTime()
JFreeChart,WITHOUT_CLASSIFICATION,// else  [implicit here]
JFreeChart,WITHOUT_CLASSIFICATION,// no translation needed
JFreeChart,WITHOUT_CLASSIFICATION,// if the oldest data contained a maximum Y-value invalidate the stored //   Y-max and Y-range data:
JFreeChart,WITHOUT_CLASSIFICATION,// Now advance "oldestAt" wrapping at end of the array
JFreeChart,WITHOUT_CLASSIFICATION,// index to select the "series"
JFreeChart,WITHOUT_CLASSIFICATION,// Update the domain limits: //(time is kept in msec)
JFreeChart,WITHOUT_CLASSIFICATION,// check whether the "valueHistory" array member exists; if not // create them:
JFreeChart,WITHOUT_CLASSIFICATION,// find the Q and the integer following it (remove both from the // string)...
JFreeChart,WITHOUT_CLASSIFICATION,// the following code handles the line for the y-values...it's // all done by code in the super class
JFreeChart,WITHOUT_CLASSIFICATION,// Don't synchronize this!! // Instead synchronize the loop that calls it.
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Quarter object // --------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// NULL value -> insert point on base line // instead of 'step point'
JFreeChart,WITHOUT_CLASSIFICATION,// do nothing so null is returned
JFreeChart,WITHOUT_CLASSIFICATION,// replace any /  or - with a space
JFreeChart,WITHOUT_CLASSIFICATION,// Update the array of TimePeriods:
JFreeChart,WITHOUT_CLASSIFICATION,// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Day object // ----------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// we need to work out if the previous year has 52 or 53 weeks...
JFreeChart,WITHOUT_CLASSIFICATION,// to be defensive let's check that the source series does in fact // belong to this collection
JFreeChart,WITHOUT_CLASSIFICATION,// check if the new series name already exists for another series
JFreeChart,WITHOUT_CLASSIFICATION,// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //
JFreeChart,WITHOUT_CLASSIFICATION,// if it is not the series name then we have no interest
JFreeChart,WITHOUT_CLASSIFICATION,// check arguments...delegated // fetch the series name...
JFreeChart,WITHOUT_CLASSIFICATION,// suppress
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Week object // --------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// trim whitespace from either end of the string
JFreeChart,WITHOUT_CLASSIFICATION,//axisOffset;
JFreeChart,WITHOUT_CLASSIFICATION,// CASE 1 : Comparing to another Month object // --------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// all arrays equal length // so ignore argument:
JFreeChart,WITHOUT_CLASSIFICATION,// --- DEPRECATED METHODS -------------------------------------------------
JFreeChart,WITHOUT_CLASSIFICATION,// now it is trickier to determine if the month or year is first
JFreeChart,WITHOUT_CLASSIFICATION,//  wipe the next (about to be used) set of data slots
JFreeChart,WITHOUT_CLASSIFICATION,// no attributes to read
JFreeChart,WITHOUT_CLASSIFICATION,//this.key = null;
JFreeChart,WITHOUT_CLASSIFICATION,//private Comparable key;
JFreeChart,WITHOUT_CLASSIFICATION,// we can't be sure of the order
JFreeChart,WITHOUT_CLASSIFICATION,// Remove all the series from the collection and notify listeners.
JFreeChart,WITHOUT_CLASSIFICATION,// check arguments...delegated
JFreeChart,WITHOUT_CLASSIFICATION,// need to configure the intervalDelegate to match the original
JFreeChart,WITHOUT_CLASSIFICATION,// add a new series
JFreeChart,WITHOUT_CLASSIFICATION,// false preserves the old behaviour // prior to introducing this flag
JFreeChart,WITHOUT_CLASSIFICATION,// everything is fine: autoWidth is on and an autoIntervalWidth // was set.
JFreeChart,WITHOUT_CLASSIFICATION,// this.x is not allowed to be null...
JFreeChart,WITHOUT_CLASSIFICATION,// all series have the same number of items in // this dataset
JFreeChart,WITHOUT_CLASSIFICATION,// In version 0.9.12 in response to several developer requests I changed // the 'data' attribute from 'private' to 'protected' so that others can // make subclasses that work directly with the underlying data structure.
JFreeChart,WITHOUT_CLASSIFICATION,// figure out if we need to iterate through all the y-values
JFreeChart,WITHOUT_CLASSIFICATION,// try a class that isn't a listener
