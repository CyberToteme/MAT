//  IMPORTANT! For async scenario, we must remove context from current thread, so we always create a new RpcContext for the next invoke for the same thread. 
//  TODO: 2017/8/30 to move somewhere else better 
//  FIXME: now we need to check first, then load 
//  TODO Context.SESSIONS is the best option here? (In jetty 9.x, it becomes ServletContextHandler.SESSIONS) 
//  TODO move names to Constants 
// ignore concurrent problem? 
// TODO add this to provider config 
//  special treatment of array values was suggested by 'lizongbo' 
//  TODO we should leave this setting to slf4j 
//  FIXME: when the thread pool is full, SERVER_THREADPOOL_EXHAUSTED_ERROR cannot return properly,   therefore the consumer side has to wait until gets timeout. This is a temporary solution to prevent   this scenario from happening, but a better solution should be considered later. 
//  The initial value is null and the midway may be assigned to null, please use the local variable reference 
//  FIXME REQUEST_CONTEXT 
// is it possible to go here ? 
//  for example, object transported on the wire doesn't implement Serializable 
// bug: DUBBO-425 
//  FIXME log error message in Codec and handle in caught() of IoHanndler? 
// There may be some problem handling chinese (negative number recognition). Ignoring this problem, the backspace key is only meaningfully input in a real telnet program. 
/*       This UT is unstable, consider remove it later.      @see https://github.com/apache/dubbo/issues/1787      */
//  bug: DUBBO-132 
//  TODO do more sophisticated exception handling and output 
/*  * TODO for now kryo serialization doesn't deny classes that don't implement the serializable interface * * <pre> *     e.g. &lt;dubbo:protocol serialization="kryo" /&gt; * </pre>  */
//  DELIM_START was escaped, thus should not be incremented 
//  TODO users can override this mapper, but we just rely on the current priority strategy of resteasy 
// FIXME: waiting for embedded Nacos suport, then we can open the switch. 
// TODO generic invoker？ 
/*      * FIXME, this instance will always be a type of DynamicConfiguration, ConfigCenterConfig will load the instance at startup and assign it to here.      */
//  TODO Do not want to use spaces? See: DUBBO-502, URL class handles special conventions for special characters. 
//  should destroy resource? 
//  hack, use reflection to get the shared channel.
//  TODO Notification failure does not restore mechanism guarantee 
// TODO fix npe  context.isProviderSide(); 
// TODO we needs use force writing to file so that buffer gets clear and new log can be written. 
// Reselect before retry to avoid a change of candidate `invokers`.  NOTE: if `invokers` changed, then `invoked` also lose accuracy. 
/*  * TODO load as SPI will be better?  */
// fixme, reject exception can not be sent to consumer because thread pool is full, resulting in consumers waiting till timeout. 
/*  * TODO refactor using mockito  */
//  generally a client can only be closed once, here it is closed twice, counter is incorrect 
// TODO A temporary solution to the problem that the exception information can not be sent to the opposite end after the thread pool is full. Need a refactoring  fix The thread pool is full, refuses to call, does not return, and causes the consumer to wait for time out 
//  TODO in the future maybe we can just use a single rest client and connection manager 
//  Caution!! 
// TODO solve merge problem  = Constants.DEFAULT_STUB_EVENT; 
//  FIXME: a hack to make org.apache.dubbo.remoting.exchange.support.DefaultFuture.closeChannel work 
/*  is the buffer big enough?  */
//  BUG: DUBBO-846 in version 2.0.9, config retry="false" on provider's method doesn't work 
//  FIXME: this exposes the design flaw in RouterChain 
//  FIXME RESPONSE_CONTEXT 
//  TODO jetty will by default enable keepAlive so the xml config has no effect now 
// cannot write == not Available ? 
//  TODO Wrapper cannot handle this scenario correctly: the classname contains '$' 
//  On server side, thrift can not handle exceptions not declared in idl 
// TODO assert error log 
/*  * This class represents an unfinished RPC call, it will hold some context information for this call, for example RpcContext and Invocation, * so that when the call finishes and the result returns, it can guarantee all the contexts being recovered as the same as when the call was made * before any callback is invoked. * <p> * TODO if it's reasonable or even right to keep a reference to Invocation? * <p> * As {@link Result} implements CompletionStage, {@link AsyncRpcResult} allows you to easily build a async filter chain whose status will be * driven entirely by the state of the underlying RPC call. * <p> * AsyncRpcResult does not contain any concrete value (except the underlying value bring by CompletableFuture), consider it as a status transfer node. * {@link #getValue()} and {@link #getException()} are all inherited from {@link Result} interface, implementing them are mainly * for compatibility consideration. Because many legacy {@link Filter} implementation are most possibly to call getValue directly.  */
//  FIXME should put exception in future? 
//  DUBBO-571 methods key in provider's URLONE doesn't contain the methods from inherited super interface 
/*  * ContextFilterTest.java * TODO need to enhance assertion  */
//  FIXME: this code looks useless 
//  TODO due to dubbo's current architecture,   it will be called from registry protocol in the shutdown process and won't appear in logs 
//  TODO can we load successfully for a different classloader?. 
// The status input has a problem, and the read information is wrong when the serialization is serialized. 
//  FIXME: not sure why AbstractReferenceConfig has both isGeneric and getGeneric 
//  FIXME result is an AsyncRpcResult instance. 
//  FIXME, should cancel and restart timer tasks if parameters in the new URL are different? 
/*  * TODO Extract more code here if necessary  */
//  FIXME RMI protocol doesn't support casting to EchoService yet. 
//  dubbo's original impl can't support the use of ServletContext          server.addHandler(servletHandler); 
//  Deprecated! Subscribe to override rules in 2.6.x or before. 
//  Subscribe the override data   FIXME When the provider subscribes, it will affect the scene : a certain JVM exposes the service and call    the same service. Because the subscribed is cached key with the name of the service, it causes the 
/*      * Should be called after Config was fully initialized.     * // FIXME: this method should be completely replaced by appendParameters     *     * @return     * @see AbstractConfig#appendParameters(Map, Object, String)     * <p>     * Notice! This method should include all properties in the returning map, treat @Parameter differently compared to appendParameters.      */
// TODO Can the value returned by getChannel() be null? need improvement. 
//  TODO, to support wildcards 
//  FIXME: cannot guarantee the sequence of the merge result, check implementation in   MergeableClusterInvoker#invoke 
//  FIXME Is there any need of failing back to Constants.ANY_VALUE or the first available method invokers when invokers is null? 
//  TODO more configs to add 
//  BuG: DUBBO-146 Provider doesn't have exception output, and consumer has timeout error when serialization fails
//  FIXME There's no place to release connectionExecutor! 
//  TODO: refactor it 
//  If every invoker has the same weight? 
/*  * TODO this may not be a pretty elegant solution, *  */
//  FIXME log error info in Codec and put all error handle logic in IoHanndler? 
//  can't shutdown nioEventLoopGroup because the method will be invoked when closing one channel but not a client,   but when and how to close the nioEventLoopGroup ?   nioEventLoopGroup.shutdownGracefully(); 
/*  * FIXME: is this really necessary? PropertiesConfiguration should have already covered this: * @see PropertiesConfiguration * @See ConfigUtils#getProperty(String)  */
/*      * the resident routers must being initialized before address notification.     * FIXME: this method should not be public      */
//  TODO there may have duplicate refresh 
// fixme replace this with better method 
//  TODO for now we don't consider the differences of encoding and server limit 
/*      * FIXME check @Parameter(required=true) and any conditions that need to match.      */
/*           RMI needs extra parameter since it uses customized remote invocation object          The customized RemoteInvocation was firstly introduced in v2.6.3; The package was renamed to 'org.apache.*' since v2.7.0          Considering the above two conditions, we need to check before sending customized RemoteInvocation:          1. if the provider version is v2.7.0 or higher, send 'org.apache.dubbo.rpc.protocol.rmi.RmiRemoteInvocation'.          2. if the provider version is v2.6.3 or higher, send 'com.alibaba.dubbo.rpc.protocol.rmi.RmiRemoteInvocation'.          3. if the provider version is lower than v2.6.3, does not use customized RemoteInvocation.          */
//  TODO exist concurrent gap 
//  TODO: 2017/8/31 FIXME The thread pool should be used to refresh the address, otherwise the task may be accumulated. 
/*      * If there's no dynamic tag rule being set, use static tag in URL.     * <p>     * A typical scenario is a Consumer using version 2.7.x calls Providers using version 2.6.x or lower,     * the Consumer should always respect the tag in provider URL regardless of whether a dynamic tag rule has been set to it or not.     * <p>     * TODO, to guarantee consistent behavior of interoperability between 2.6- and 2.7+, this method should has the same logic with the TagRouter in 2.6.x.     *     * @param invokers     * @param url     * @param invocation     * @param <T>     * @return      */
//  Construct using org.apache.dubbo.common.serialize.protobuf.support.MapValue.Map.newBuilder() 
//  1. No service provider 2. Service providers are disabled 
//  closing closed means the process is being closed and close is finished 
//  get data length. 
//  The monitoring center is responsible for deleting outdated dirty data 
//  Key-Value pair, stores both match and mismatch conditions 
//  -default is not included 
//  allow string arg to enum type, @see PojoUtils.realize0() 
//  check length. 
//         assertEquals(echo.$echo("test"), "test");          assertEquals(echo.$echo("abcdefg"), "abcdefg");          assertEquals(echo.$echo(1234), 1234); 
/*  translate stored positions  */
// final int length = PerformanceUtils.getIntProperty("length", 1024); 
//  Dubbo RPC protocol version, for compatibility, it must not be between 2.0.10 ~ 2.6.2
//  desc2name 
//  The parameters of the test service query need to be with the providermerge.
//  for test 
//  for the exception not found in method's signature, print ERROR message in server's log. 
// yyline = yychar = yycolumn = 0; 
//  Use PBResponseType.newBuilder() to construct. 
//  check duplicated candidate bean 
// mark the future is sent 
//  Remove async property to avoid being passed to the following invoke chain. 
//  should not override
//  This should never happen;
//  other thread cancel this timeout or stop the timer. 
/* invoker = protocol.refer( Demo.class, url );        Assertions.assertNotNull( invoker );        RpcInvocation invocation = new RpcInvocation();        invocation.setMethodName( "echoString" );        invocation.setParameterTypes( new Class<?>[]{ String.class } );        String arg = "Hello, World!";        invocation.setArguments( new Object[] { arg } );        Result result = invoker.invoke( invocation );        Assertions.assertEquals( arg, result.getResult() ); */
//  "[[Ljava/lang/Object;" ==> "[[Ljava.lang.Object;" 
//  search in caller's classloader 
//  logging output 
// Boundary condition test . 
/*  first: make room (if you can)  */
//  concurrent cache initialization 
//  parameters 
//  test timeout of lease 
//  When starting the subscription center, 
// Check whether the mock value is legal 
//  take first one 
//  null out prev, next and bucket to allow for GC. 
//  Resolve placeholders 
//  TEST Pb Service metaData builder 
//  Start reconnection timer 
//  If the Config Center is given the highest priority, it will override all the other configurations 
// |10011111|20-stats=ok|id=0|length=0 
//  begin to construct a NullPointerException with empty stackTrace 
// Merged with this configuration 
//  Healthy Instances 
//  for test validation 
//  ============================A gorgeous line of segmentation================================================ 
// private int port; 
//  ~ end of method decode 
//   If the server side has synchronized data, just write a single machine 
//  check for required fields   check for sub-struct validity 
//  test recover 
//  since security manager is not installed.
//  parameter fields 
//  The parameters of the provider for the inspection service need merge
/*  If the Config Center product you use have some special parameters that is not covered by this class, you can add it to here.    For example, with XML:      <dubbo:config-center>           <dubbo:parameter key="{your key}" value="{your value}" />      </dubbo:config-center>      */
//  Restore any other contexts in here if necessary.
// cancel a future 
//  If the bean is not initialized, invoke init()   issue: https://github.com/apache/dubbo/issues/3429 
//  callback method when async-call has exception thrown 
// check format of pattern 
//  test all methods 
//  ================== Util methods ================== 
//  ======================================================     invoker related data preparing 
//  from api 
//  Should remain unchanged. 
// Check the index of current selected invoker, if it's not the last one, choose the one at index+1. 
//  Map<serviceName, List<notificationListener>> 
// argument type 
// default base64. 
//  Record the index of the least active invoker in leastIndexes order 
//  G for GET, and P for POST 
//  1 : 9 : 6 
//  callback method when async-call is invoked 
//  write header. 
//  copy reference 
//  as proto3 only accept one protobuf parameter 
//  First, try picking a invoker not in `selected`. 
//  throw demo exception
//  set category 
//  merge override parameters 
// SPI should be get from SpiExtensionFactory
//  update registry 
// test multiple urls 
/*  (non-Javadoc)         * @see org.apache.dubbo.remoting.transport.support.ChannelHandlerAdapter#caught(org.apache.dubbo.remoting.Channel, java.lang.Throwable)          */
//  decode object. 
//  create 
//  fall back to use method getResourceAsStream 
//  add constructors 
//  Notify the other threads waiting for the initialization at start(). 
//  skip test. 
//  Check the file change 
//  if "getName" method is absent 
//  update local exporter 
//  Ignore those fields 
//  save bind port, used as url's key later 
//  ~ end of method destroy 
//  impl constructor 
//  For test purpose 
//  AbstractChannelBuffer 
//  handle nested generic type 
//                  ^^^^^^^ Caution , parse as host 
//  Local disk cache, where the special key value.registries records the list of registry centers, and the others are the list of notified service providers 
// Initial value 0 
//  If you only have a single redis, you need to take a rest to avoid overtaking a lot of CPU resources 
//  service not found.
// private int yycolumn; 
//  callback method when async-call is returned 
//  Reset the number of least active invokers 
//  if it's declared as local reference   'scope=local' is equivalent to 'injvm=true', injvm will be deprecated in the future release 
// change recycle time to 1 ms 
//  The KV part of the condition expression 
//  multicast ipv6 address, 
//  .addParameter("refer.autodestroy", "true") 
//  Any exception will be ignored to handle 
//  only for attachments 
//  check deleted invoker 
//  guess version fro jar file name if nothing's found from MANIFEST.MF 
//  skip multicast registry since we cannot connect to it via Socket 
//     public List<URL> getBackupUrls() {          List<org.apache.dubbo.common.URL> res = super.getBackupUrls();          return res.stream().map(url -> new URL(url)).collect(Collectors.toList());      } 
//  @@protoc_insertion_point(builder_scope:org.apache.dubbo.common.serialize.protobuf.model.PBResponseType) 
//  ======================================================     test Start   ====================================================== 
//  present in both local and remote, uses local url params 
//  for reuse SerializeWriter buf 
//  Bean compare 
//  If (not every invoker has the same weight & at least one invoker's weight>0), select randomly based on    totalWeight. 
//  check against type and superclasses 
//  create request. 
//  trim the leading "/" 
//  timeout after 5 seconds. 
//  add invocationid in async operation by default 
//  Appends value array attributes 
//  just add urls which needs retry. 
//  Optional 
/*  user code:  */
//  Append backup parameter as other servers 
//     public PropertyInjector getPropertyInjector() {          return propertyInjector;      } 
//  Get invokers from cache, only runtime routers will be executed. 
//  store back cached position 
//  Use default configs defined explicitly on global configs 
//  doesn't need to distinguish version for callback 
//  Register @Reference Annotation Bean Processor 
//  @@protoc_insertion_point(builder_scope:org.apache.dubbo.common.serialize.protobuf.model.PBRequestType) 
//  allow repeats in siblings 
//  test group 
//  create Proxy class. 
// zzAtBOL  = true; 
//  If override url is not enabled or is invalid, just return. 
//  this is a defensive operation to avoid client is closed by accident, the initial state of the client is false 
//  current node 
//  report same error when get is invoked for multiple times 
//  @@protoc_insertion_point(interface_extends:org.apache.dubbo.common.serialize.protobuf.model.PBResponseType) 
//  parameter callback rule: method-name.parameter-index(starting from 0).callback 
/*  The namespace of the config center, generally it's used for multi-tenant,    but it's real meaning depends on the actual Config Center you use.     */
//  available to test 
//  no match category 
//  now just added some very common classes 
//  if it's callback service on client side 
//  directly throw if it's dubbo exception 
//  callback instance when async-call is invoked 
//  Fill the unprocessedTimeouts so we can return them from stop() method. 
//  since the rule can be changed by config center, we should copy one to use. 
//  Null Point check 
//  get status. 
//  init table. 
//  this UT maybe only works on particular platform, assert only when value is not null. 
//  At least one single machine is available. 
//  ~ end of loop method map 
//  default deregister critical server after 
//  encode response data or error message. 
//         this.context = context;      }        public String getContext() {          return context;      } 
//  Because it's a strictly round robin, so the abs delta should be < 10 too 
//  header. 
//  should output cost or not 
//  @@protoc_insertion_point(builder_implements:org.apache.dubbo.common.serialize.protobuf.model.PhoneNumber) 
//  confirm only 1 register success 
//  should not happen here 
//  this only works for servlet containers 
//  column definition 
//  it can be invoke successfully 
//  check pong at client 
//  create new decode table. 
//  Integer representation of value 
//  if only one empty 
/*  Linux Pause  */
// force:direct mock 
// ignore concurrency problem 
//  prevents grpc on sending watchResponse to a closed watch client. 
//  the sumInvoker1 : sumInvoker2 approximately equal to 1: 9 
//  #5 ReferenceBean (Field Injection #3) 
//  add imported packages 
/*      * <p>Repeat a String {@code repeat} times to form a     * new String, with a String separator injected each time. </p>     *     * <pre>     * StringUtils.repeat(null, null, 2) = null     * StringUtils.repeat(null, "x", 2)  = null     * StringUtils.repeat("", null, 0)   = ""     * StringUtils.repeat("", "", 2)     = ""     * StringUtils.repeat("", "x", 3)    = "xxx"     * StringUtils.repeat("?", ", ", 3)  = "?, ?, ?"     * </pre>     *     * @param str       the String to repeat, may be null     * @param separator the String to inject, may be null     * @param repeat    number of times to repeat str, negative treated as zero     * @return a new String consisting of the original String repeated,     * {@code null} if null String input     * @since 2.5      */
//  <ip:port, channel> 
//  init task and start timer. 
//  generic invocation is not local reference 
/*                  *  if we have no interface watcher listener,                 *  find the current listener or create one for the current root, put or get only once.                  */
/*                                                  *  if new interface event arrived, we watch their direct children,                                                 *  eg: /dubbo/interface, /dubbo/interface and so on.                                                  */
//  check if notify successfully 
//  full list of addresses from registry, classified by method name. 
//  List<U> urls = mockRegistry.getSubscribedUrls(); 
// java.sql.Date 
//  TODO for now just do xml output 
//  check for primitive array types because they   unfortunately cannot be cast to Object[] 
// r times [sleep] r 10 or r 10 100 
//  Request a non-exists method
// release mina resouces. 
//         Thread.sleep(100000); 
// verifyExporterUrlGeneration(regConfForService, regConfForServiceTable); 
/*  Used to specify the key that your properties file mapping to, most of the time you do not need to change this parameter.    Notice that for Apollo, this parameter is meaningless, set the 'namespace' is enough.     */
//  ================ complex POJO ============= 
//  echo(int) 
//  The sum of weights 
//  cast to EchoService 
//  end construct a NullPointerException with empty stackTrace 
// test multiple unregisters 
//  did not find parameter in URL type 
//  TODO protocol 
// can't find command 
//  Every invoker has the same weight? 
//  loop up before registry 
//  Rely on reconnect timer to reconnect when AbstractClient.doConnect fails to init the connection 
//  data to collect from url 
//  normal case 
//  Initialization at the time of injection, the assertion is not null   Initialization at the time of injection, the assertion is not null 
//  duplicated jar is found
//  from system property 
//  tell tomcat to fail on startup failures. 
//  Use PBRequestType.newBuilder() to construct. 
//  The least active value of all invokers 
//  it's a generic reference 
/*  Windows Ctrl+C  */
//  double check to avoid dup close 
//  ======== Reference config default values, will take effect if reference's attribute is not set  ======== 
//  onResponse callback 
//  close once, counter counts down from 2 to 1, no warning occurs 
//  if no failed report, wait how many times to run retry task. 
//  magic 
//     private Map<String, String> extraHttpHeaders	= new HashMap<String, String>(); 
//  For testing purposes only 
//  SUCCESS 
//  still init for the same ReferenceConfig if the cache is different 
//  not a registry url, must be direct invoke. 
//  property of custom type or primitive type 
//  Register center address 
//  check if there's duplicated jar 
//  default value 
//  weightTestRpcStatus3 active is 1 
//  Not equal 
//  no match service interface 
//  process implemented interfaces 
// Make sure that the subscribe call has just been called once count.incrementAndGet after the call is completed  Wait for the timer. 
//  dubbo check 
//  double byte char 
//  Close all invokers 
//  ---- service statistics ----   invocation cost   current concurrent count 
//  FIXME 
//  present in local url but not in remote url 
//  From Ancestor 
//  backward compatibility 
//  set magic number. 
// ignore error 
//  message 
/* url = url.addParameter( "echoString." + Constants.TIMEOUT_KEY, Integer.MAX_VALUE );        invoker = protocol.refer( Demo.class, url );        org.junit.jupiter.api.Assertions.assertNotNull( invoker );        RpcInvocation invocation = new RpcInvocation();        invocation.setMethodName( "echoString" );        invocation.setParameterTypes( new Class<?>[]{ String.class } );        String arg = "Hello, World!";        invocation.setArguments( new Object[] { arg } );                invocation.setAttachment(Constants.INTERFACE_KEY, DemoImpl.class.getName());        Result result = invoker.invoke( invocation );        Assertions.assertNull( result.getResult() );        Assertions.assertTrue( result.getException() instanceof RpcException ); */
//  asert empty 
//  If a Key has no corresponding Value, then the Key also used as the Value. 
//  Requires JDK 7 or higher, Foo<int[]> is no longer GenericArrayType 
//  check && override if necessary 
//  ReferenceBean should be initialized and get immediately 
// add 300ms to ensure that the delayService has been exported 
//  Growth of skipping times   If the number of skipping times increases by more than 10, take the random number 
//  Read port from property 
//  Tag request 
//  "name" property is present 
// this.listener = listener; 
// .addParameter(Constants.ON_DISCONNECT_KEY, "disconnect") 
//           ReferenceAnnotationBeanPostProcessor beanPostProcessor = context.getBean(BEAN_NAME,                  ReferenceAnnotationBeanPostProcessor.class);              Map<InjectionMetadata.InjectedElement, ReferenceBean<?>> referenceBeanMap =                  beanPostProcessor.getInjectedMethodReferenceBeanMap();   
//  send heartbeat when read idle. 
//  If the serialization key is json or fastjson 
//  can use thrift codec only 
//  @@protoc_insertion_point(builder_scope:Map) 
//  2 invokers=================================== 
//  If a task should be canceled we put this to another queue which will be processed on each tick.   So this means that we will have a GC latency of max. 1 tick duration which is good enough. This way 
//  verify save group, save error 
//  "Ljava/lang/Object;" ==> "java.lang.Object" 
//         this.propertyInjector = factory.getInjectorFactory().createPropertyInjector(getScannableClass(), factory); 
//  we need to read the local cache file for future Registry fault tolerance processing.
//  this.listener = null; 
//  registry port, not used as bind port by default 
//  directly throw if it's JDK exception 
//         invoker.destroy(); 
//  Hessian2  
//  register first 
//  NetUtils.getLocalHost is the ip address consumer registered to registry. 
// Check whether the mock class is a implementation of the interfaceClass, and if it has a default constructor 
/*  * ScriptRouterFactory * <p> * Example URLS used by Script Router Factory： * <ol> * <li> script://registryAddress?type=js&rule=xxxx * <li> script:///path/to/routerfile.js?type=js&rule=xxxx * <li> script://D:\path\to\routerfile.js?type=js&rule=xxxx * <li> script://C:/path/to/routerfile.js?type=js&rule=xxxx * </ol> * The host value in URL points out the address of the source content of the Script Router，Registry、File etc *  */
//  filter by dynamic tag group first 
//  Merge the provider side parameters 
//  multiple callbacks in the method 
//  Sending a cancellation request to the server side 
//  now we don't use the 'values' map to hold these objects 
//  export to remote if the config is not local (export to local only when config is local) 
//  handshake 
// echo  
//  replace the latest "," to be ")" 
//             {"generic", "generic", "boolean", false, true, "", "", "", "", ""}, 
//  we may want to avoid exposing the dubbo exception details to certain clients 
//  if no notify URL, add empty protocol URL 
//  dubbo request id 
// this.listener = null; 
// Map interface class change to HashMap implement 
// check config conflict 
//  read one byte to guess protocol 
// Filter the parameters that do not need to be output in url(Starting with .) 
//  test default 
//  Other 
//  use global group 'dubbo' if no group specified 
//  verify compatibility when 2.0.5 invokes 2.0.3, enum in custom parameter 
//  If protocol is configured at the reference side, only the matching protocol is selected 
//  "setName" and "getName" methods are present   the param type is String   set bean name to the value of the "name" property 
/*  The config center cluster, it's real meaning may very on different Config Center products.  */
//  numRead < 0 
//  from dubbo.properties 
//  ipv4 multicast address 
//  Get PropertySource mapped to 'dubbo.properties' in Spring Environment. 
//  convert list to array 
// The exception is thrown for the first time to see if the back will be called again to incrementAndGet 
//  Nested collection or map. 
//  ARG 
//  Request timeout in milliseconds for register center 
//  If all invokers have the same weight value or totalWeight=0, return evenly. 
/*                   package was renamed to 'org.apache.dubbo' in v2.7.0, so only provider versions after v2.7.0 can                  recognize org.apache.xxx.HttpRemoteInvocation'.                  */
//  export one service first, to test connection sharing 
//  read the parameters 
//  Map<serviceName, queryString> 
// sync update cache file 
//  Add since 2.7.0 
//  return statement 
//  Customized inject-object if necessary 
//  ---- for service consumer ---- 
//  Register DubboConfigAliasPostProcessor 
//  let's rock it! 
//  Set<invokerUrls> cache invokeUrls to invokers mapping. 
//  careful 
//  max allowed execute times 
//  As long as one client is not available, you need to replace the unavailable client with the available one. 
// java.util.Date 
//  Defensive fault tolerance 
//  As `javassist` have a strict restriction of argument types, request will fail if Invocation do not contains complete parameter type information 
//  args 
//  property without generic type should not be build ex method return List 
//  padding 
//  push name. 
//  remove extra space at line's end 
//  The service has a normal sync method signature, should get future from RpcContext. 
//  check again 
//  merged from dubbox 
//             {"generic", "generic", "boolean", false, false, "", "", "", "", ""}, 
// biz error should not throw and affect biz thread.
//  unexport one service 
// impl mock 
//  @@protoc_insertion_point(builder_implements:org.apache.dubbo.common.serialize.protobuf.model.PBResponseType) 
// 00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0 
//  Wait until the startTime is initialized by the worker. 
//  asserts aliases 
//  retry to offer the task into queue. 
//  Check and connect to the metadata 
//  send error message to Consumer, otherwise, Consumer will wait until timeout. 
// create registry by spi/ioc 
//  encoder 
//  Impossible 
//  version 1.0.0 represents Dubbo rpc protocol before v2.6.2 
//  help for gc 
//  id attribute appears since 2.7.3 
// The address you see at the registry 
//  Not in the cache, refer again 
//  Resolve placeholder 
// Allocating one in advance, this list is certain to be used. 
// ================================================================================================ 
//  check if unsubscribe successfully 
// rate or interval has changed, rebuild 
//  note: URL is value's type 
//  true means to accept foreign IP 
//             {"timeout", "registry.timeout", "int", 5000, 9000, "", "", "", "", ""},              {"file", "registry.file", "string", "", "regConfForServiceTable.log", "", "", "", "", ""},              {"wait", "registry.wait", "int", 0, 9000, "", "", "", "", ""},              {"transport", "registry.transporter", "string", "netty", "mina", "", "", "", "", ""}, 
//  Password to login register center 
//  replace ":" to "," 
//  avoid creating too many connections， so add lock 
//  init atomic reference 
//             {"version", "version", "string", "0.0.0", "1.2.3", "", "", "", "", ""},              {"group", "group", "string", "", "HaominTest", "", "", "", "", ""}, 
//  mock environment variables 
//  window system don't support ":" in file name 
//  load class 
//  no need to generate multiple exporters for different channel in the same JVM, cache key cannot collide. 
//  only used for javassist 
//  The argument must be the concrete NacosServiceName 
//  Enum property has two setting method.   skip setXXXValue(int value) 
//  Remove the expired   Defensive fault tolerance 
// init queue and executor 
//  reconnect with a delay; avoiding immediate retry on a long connection downtime. 
//  default is false 
//  trigger delete after unavailable 
//  We use 0 as an indicator for the uninitialized value here, so make sure it's not 0 when initialized. 
//  reset status since connection is shared among invokers 
//  instance will never delete or recreate. 
/*                      *  if we are interested in special categories (providers, consumers, routers and so on),                     *  we find out the current container or create one for the url, put or get only once.                      */
/*                      *  if we have no category watcher listener,                     *  we find out the current listener or create one for the current category, put or get only once.                      */
//  encode 
//  ignore 
//  range cases 
//  header length. 
/*  * TODO Comment of ProtocolUtils  */
//  item name. 
//  containing all routers, reconstruct every time 'route://' urls change. 
/*      * get unCollection unMap property name from setting method.<br/>     * ex:setXXX();<br/>     *     * @param methodName     * @return      */
//  dynamic class tag interface. 
// line 
//  ignore default attribute value 
//  Put the first least active invoker first in leastIndexes 
// prevent other UT's failure 
//  If override url has port, means it is a provider address. We want to control a specific provider with this override url, it may take effect on the specific provider instance or on consumers holding this provider instance. 
//  Make sure if it is a copied buffer. 
//  init queue and executor 
//  we must disable the debug logging for production use 
//  to false, which means it will invoke any providers without a tag unless it's explicitly disallowed. 
// RegistryServer.reloadCache(); 
//  @Parameter(key="key1", useKeyAsProperty=false) 
//  NOTE: Hessian2 throws ArrayIndexOutOfBoundsException instead of IOException, let's live with this. 
// dump every 10 minutes 
//  ======== Deprecated ======== 
//  empty protocol will default to 'dubbo' 
//  collect data 
//  The index of invokers having the same least active value (leastActive) 
//  use interface class name list as key. 
//  Map<url, Invoker> cache service url to invoker mapping. 
//  client type setting. 
//  Host 
//  <component name or id, <data-name, data-value>> 
//         Assertions.assertEquals(response.getProtocolVersion(), obj.getVersion()); 
//  The number of invokers having the same least active value (leastActive) 
//  currentPoolThreadSize >= max 
//  List<String> addresses = tagRouterRule.filter(providerApp);   return all addresses in dynamic tag group. 
//         tomcat.getConnector().setProperty(                  "minSpareThreads", String.valueOf(url.getParameter(Constants.THREADS_KEY, Constants.DEFAULT_THREADS))); 
//  write object. 
// java.sql.Timestamp 
//  Object $invoke(String method, String[] parameterTypes, Object[] args) throws GenericException; 
//  URL address separated regular expression for parsing the service provider URL list in the file cache 
//  if value doesn't change, return immediately   value != null 
//  retry task schedule period 
//  Whether the consumer's machine has only one process   Multiple processes in the same machine cannot be unicast with unicast or there will be only one process receiving information
//  ignore attribute name to skip 
// 		assertThat(result.getName(), is("abc"));  		assertThat(result.getAge(), is(30)); 
//  Process the component type of an array. 
//  If none of the invokers has a local signal, pick the first one available. 
//  pre-route and build cache, notice that route cache should build on original Invoker list. 
//  path 
// client side error 
//  parseConfigurators will recognize app/service config automatically. 
//  set codec. 
// Two different methods should always use the same invoker every time. 
//  Construct using org.apache.dubbo.common.serialize.protobuf.model.GooglePB.PhoneNumber.newBuilder() 
//  process extended super class 
//  cycle report the data switch 
// callback interface 
//  Start multiple threads 
//  4. unexport service 
//  message header length placeholder 
//  impl methods. 
/*  invalidate buffer     */
/*     } */
//  check if subscribe successfully 
//  Try to get a cached definition 
//  encode response verson ??          Assertions.assertEquals(response.getProtocolVersion(), obj.getVersion()); 
//  setup 
// Ensure that the main thread is online 
//  Disable new tasks from being submitted 
//  ~ end of loop map 
//  draw one line 
//  id MUST be present in AbstractConfig   id MUST NOT be equal to bean name   id MUST NOT be present in AliasRegistry 
//  register, subscribe, notify, unsubscribe, unregister 
//  test order 
//  output one error every 5000 invocations. 
//  1.0.0   Dubbo implementation version, usually is jar version. 
//  Check and connect to the registry 
//  check the file change 
//  it's declared as remote reference 
//  Close the unused Invoker 
//  if the type is not primitive, we choose to believe what the invoker want is a null value 
//  ======================================================     private helper 
//  #1 ReferenceBean (Method Injection #1) 
//  connect. 
//  check for required fields 
//  concurrent counter 
//  must be executed after unsubscribing 
/*   retry task map  */
//  Compatible with the old version 
// Check whether the mock value is legal, if it is illegal, throw exception 
//  When modifying the configuration through override, you need to re-expose the newly modified service. 
//             ex.printStackTrace(); 
//  get Throwable class 
//  message body 
//  no welcome output for http protocol 
//  protocol key is the second 
//  check for required fields   alas, we cannot check 'arg' because it's a primitive and you chose the non-beans generator. 
//  tab 
//  Test @Transactional is present or not 
//  Create client and build connection 
//  here is non-biz exception, wrap it. 
//  code.append("   }");   } 
//  Make sure the buffer content is independent from each other. 
//  The final root path would be: /configRootPath/"config" 
//  parse bind port from environment 
//  The lock for client acquisition process, lock the creation process of the client instance to prevent repeated clients 
//  Add the timeout to the timeout queue which will be processed on the next tick.   During processing all the queued HashedWheelTimeouts will be added to the correct HashedWheelBucket. 
//  Test my-registry2 bean presentation 
// private boolean zzEOFDone; 
//  first elements 
// decide if we need to re-publish 
//  state. 
//  Start file save timer 
//  header size 
// Content 
// fail-mock 
//  and Update 
//         url = url.addParameter( Constants.TIMEOUT_KEY, Integer.MAX_VALUE ); 
// The registry is initially pushed to override only, and the dirctory state should be false because there is no invoker. 
/*  * Default {@link HelloService} annotation with Spring's {@link Service} * and Dubbo's {@link org.apache.dubbo.config.annotation.Service} * * @since TODO  */
//  the first invoker's weight 
//  Save Error 
//  if path is not the same as interface name then we should keep INTERFACE_KEY,   otherwise, the registry structure of zookeeper would be '/dubbo/path/providers',   but what we expect is '/dubbo/interface/providers' 
// if protocol is only injvm ,not register 
//  service name 
//  com.alipay.test.TestService:1.0:group@dubbo 
//  Trim all whitespace 
//  one callback in the method 
//  we can make again use of our MpscLinkedQueue and so minimize the locking / overhead as much as possible. 
//  then unsubscribe 
/*                      * at the first time, we want to pull already category and then watch their direct children,                     *  eg: /dubbo/interface/providers, /dubbo/interface/consumers and so on.                      */
//  Timer for failure retry, regular check if there is a request for failure, and if there is, an unlimited retry 
//  The parameters of the inspection registry need to be cleared 
//  print ending separation line 
// must equal the bytes 
//  only for attachment 
//  add methods 
//  handle array generic type 
//  "java.lang.Object" ==> "Ljava.lang.Object;" 
//  for test content 
//  TODO We only care the changes happened on a specific path level, for example    /dubbo/config/dubbo/configurators, other config changes not in this level will be ignored, 
//  just for test 
//  null url 
//  create class 
/*                  *  if we are interested in all interfaces,                 *  find out the current container or create one for the url, put or get only once.                  */
//  null out prev and next to allow for GC. 
//  Build pool with SoftReferences enabled (optional) 
// final String onerror = PerformanceUtils.getProperty("onerror", "continue"); 
// object to bytearray 
//  remove module: "x.y.z" 
//         consulRegistry.destroy();          assertThat(consulRegistry.isAvailable(), is(false)); 
//  Asserts Null fields 
//  More than one methods, mismatch 
//  expect nothing happen 
//  separator 
//  providers 
//         invoker.retryFailed();// when retry the invoker which get from failed map already is not the mocked invoker,so 
//  lazy connect, need set send.reconnect = true, to avoid channel bad status. 
//  Retry another server 
// argument: index -1 represents not set 
//  Accumulate the total weight of the least active invoker 
//  2. export service and get url parameter string from db 
//  Can be null 
//  release port if used 
//  received the cancel response 
//  invoke id. 
//  Subscribed services 
//  visit all methods 
// only decode necessary bytes 
//  if protocol is not injvm checkRegistry 
//  check if the output equals the input urls 
//  convert argument type 
/*  split CIDR to address and prefix part  */
//  wait for timer to finish 
//  send readonly event when server closes, it's enabled by default 
//  Nacos use empty string as default name space, replace default namespace "dubbo" to "" 
/*                  * at the first time, we want to pull already interface and then watch their direct children,                 *  eg: /dubbo/interface, /dubbo/interface and so on.                  */
//  
//  Decide the behaviour when initial connection try fails, 'true' means interrupt the whole process once fail. 
//  method has no URL parameter 
//  version 
// test one url 
//  @@protoc_insertion_point(interface_extends:org.apache.dubbo.common.serialize.protobuf.model.PBRequestType) 
//  no need to call unexport() here, see   org.apache.dubbo.config.spring.extension.SpringExtensionFactory.ShutdownHookListener 
//  ================ final field test ================ 
//  Assertions.assertEquals("{\"code\":\"001\",\"message\":\"AAAAAAAA\"}", json); 
//                 .setAttachments(attachments)  // merged from dubbox 
// Avoid add the same invoker several times. 
// private boolean zzAtBOL = true; 
//  return default version if no version info is found 
//  verify compatibility when 2.0.5 invokes 2.0.3 
// SERVER 
// decode argument ,may be callback 
//  @@protoc_insertion_point(interface_extends:org.apache.dubbo.common.serialize.protobuf.model.PhoneNumber) 
//             ReferenceBean<?> referenceBean = entry.getValue();                assertThat(referenceBean.getModule().getName(), is("defaultModule"));              assertThat(referenceBean.getMonitor(), not(nullValue()));          }      } 
//  if not configured, connection is shared, otherwise, one connection for one service 
// Avoid collision 
// java.sql.Time 
//                             rowbuf.append(" ");                          } 
/*  error codes  */
//  NOTE: It should be determined on the business level whether the `When condition` can be empty or not.
// ====================================================== 
//         super.destroy(); 
// client can export a service which's only for server to invoke 
//  by default, go through local reference if there's the service exposed locally 
//  public field 
//  write header.   write data. 
//  subscribe first 
//  The timeout was placed into a wrong slot. This should never happen. 
//  url to registry 
//  graceful close 
//  retry again. If failed again, throw exception. 
//  backward compatibility to spring 2.0.1 
//  let's simply use url's hashcode to generate unique service id for now 
/*  Linux Enter  */
//  try to put the value 
//  user customized class 
//  jedis gets the result comparison 
//  been invoked once, it's close status is false 
//  Check whether url is to be applied to the current service 
//  default true 
//  We always return true for previously defined Router, that is, old Router doesn't support cache anymore.          return true; 
//  replace "=" to "," 
//  workerState can be 0 or 2 at this moment - let it always be 2. 
//  message flag. 
//  get the class def for obj and type 
//             {"delay", "delay", "int", 0, 5, "", "", "", "", ""}, // not boolean 
//  The parameter urls are sorted   Repeated url 
//  Put new invoker in cache 
//  no servicekey 
//  Release the lock 
//  getter method not found, throw
//  The invoker wrap relation would be: RegistryAwareClusterInvoker(StaticDirectory) -> FailoverClusterInvoker(RegistryDirectory, will execute route) -> Invoker 
//  create rpc invoker. 
//  Filter out all the least active invokers 
//  Protobuf property has two setting method.   skip setXXX(com.google.protobuf.Builder value) 
//  inner nodes cache judgement 
//  prepare 
//         ExtensionLoader.getExtensionLoader(Ext9Empty.class).getSupportedExtensions(); 
//  for previous dubbo version(2.0.10/020010~2.6.2/020602), this version is the jar's version, so they need to   be ignore 
//  Dynamic param 
// the fist element in `indexedVariables` is a set to keep all the InternalThreadLocal to remove  look at method `addToVariablesToRemove` 
//  verify listener 
// Simulation: all invokers are destroyed 
//  Save 
//  mark it's a callback, for troubleshooting 
//  try to modify the key 
// Start validation of parameter values 
//  relatedQuery error, no id and email is passed, will trigger validation exception for both Save 
// never mind if ephemeral 
//  Create clients and build connections 
//  If the clients is empty, then the first initialization is 
//  in order to avoid closing a client multiple times, a counter is used in case of connection per jvm, every   time when client.close() is called, counter counts down once, and when counter reaches zero, client will be   closed. 
//  Build and remove last ":" 
//  Set interface 
//  Load configuration from  system properties -> externalConfiguration -> RegistryConfig -> dubbo.properties 
//  Try to match one by one 
//  provider 
// init history 
//  Ignore - it will be ready very soon.
//  directly throw if exception class and interface class are in the same jar file. 
//  notify one invoker 
// throw  ChannelEventRunnable.runtimeExeception(int logger) not in execute exception 
//  find handler by message class. 
//  process constructors, fields, methods 
// The test call is independent of the path of the registry url 
//  Set 
//  log  output 
//  Since we have subscribe testUrl, here should return a empty set instead of null 
//  border 
//  remove 'default.' prefix for configs from ConsumerConfig   appendParameters(map, consumer, Constants.DEFAULT_KEY); 
//  Required 
//  volatile, please copy reference to use 
//  for backward compatibility   -Ddubbo.registry.address is now deprecated. 
//  Return a invoker based on the random value. 
//  fire event to all listeners 
//  Process parameter types. 
//  Reconnect the timer to check whether the connection is available at a time, and when unavailable, an infinite reconnection 
//  remove path: "group-module-x.y.z" 
//  save for later use 
//  Performance tuned for 2.0 (JDK1.4) 
// weight changed 
//  BIO is not allowed since it has severe performance issue. 
//  no match service version 
//  get consumer's global configuration 
//  @Parameter(exclude=true) 
//  The null value is unallowed in the ConcurrentHashMap. 
//  Ensure we don't schedule for past. 
//  tree node 
// private int yychar; 
//  since the retry task will not be very much. 128 ticks is enough. 
//  #3 ReferenceBean (Method Injection #2) 
//  ephemeral is expired 
//  @@protoc_insertion_point(class_scope:org.apache.dubbo.common.serialize.protobuf.model.PBRequestType) 
//  has one sync callback 
//  easy for mock 
//  First page data 
//  wildcard cases 
//  currently for test purpose 
//         Thread.sleep(100000);//for debug 
//  override url with configurator from "override://" URL for dubbo 2.6 and before 
//  support com.alibaba.dubbo.common.extension.Activate 
//  data rows 
// spin 
//  2.8.x is reserved for dubbox 
// do nothing 
// fix:#4585 
// not pass the condition 
//       uncomment is unblock invoking          serviceURL = serviceURL.addParameter("yyy."+Constants.ASYNC_KEY,String.valueOf(true));          consumerUrl = consumerUrl.addParameter("yyy."+Constants.ASYNC_KEY,String.valueOf(true)); 
//  mock protocol 
/*  if not: blow it up  */
// key value pair pattern. 
//  all attributes of REFER_KEY 
//  Remove all instances associated with this loader as well 
//  If the server has entered the shutdown process, reject any new connection 
//  set timeout status. 
//  From Parent 
//  This urls contain parameter and it donot inherit from the parameter of url in MultipleRegistry 
// The current, may have been merged many times 
//  setup attachment 
//  decode response. 
//  Start part of the condition expression. 
//  if a url is specified, don't do local reference 
//  available first 
// The failedsubcribe corresponding key will be cleared when unsubscribing 
//  without ROUTER_KEY, the first router should not be created. 
//  search common-used logging frameworks 
//  sorting makes it easy to compare between lists 
//  wait close done. 
//  biz exception 
//  Bind annotation attributes 
//  Max times to retry to save properties to local cache file 
// set ip 
//  inner class name include $. 
//  property of map 
//  response received, latch counts down to zero 
//  for thrift codec 
// must shutdown thread pool ,if not will lead to OOM 
//         int timeout = ConfigUtils.getServerShutdownTimeout();          Thread.sleep(timeout + 1000);          assertEquals(false, exporter.getInvoker().isAvailable()); 
//  Find all interfaces from the annotated class   To resolve an issue : https://github.com/apache/dubbo/issues/3251 
//  unrefer 
//  Cancel the reconnection timer 
//  Remote @Service Bean 
// The parameters can not be rereferenced 
//  The Value in the KV part, if Value have more than one items.   Should be separated by ',' 
// override 
// ignore 
//  The sequence would be: SystemConfiguration -> AbstractConfig -> AppExternalConfiguration -> ExternalConfiguration -> PropertiesConfiguration 
//  have free worker. put task into queue to let the worker deal with task. 
//  callback instance when async-call has exception thrown 
// If the `invoker` is in the  `selected` or invoker is unavailable && availablecheck is true, reselect. 
//  compile 
//  retry loop.   last exception.   invoked invokers. 
/*      * if {@link #key()} is specified, it will be used as the key for the annotated property when generating url.     * by default, this key will also be used to retrieve the config value:     * <pre>     * {@code     *  class ExampleConfig {     *      // Dubbo will try to get "dubbo.example.alias_for_item=xxx" from .properties, if you want to use the original property     *      // "dubbo.example.item=xxx", you need to set useKeyAsProperty=false.     *      @Parameter(key = "alias_for_item")     *      public getItem();     *  }     * }     *     * </pre>      */
// Cached invoker urls, convenient for comparison 
//  wildcard condition 
//  toMergeMethodInvokerMap() will wrap some invokers having different groups, those wrapped invokers not should be routed. 
//  release ClassGenerator 
//                       ^^ only tow slash! 
//  @@protoc_insertion_point(class_scope:Map) 
//  Unavailable codes mean the system will be right back.   (e.g., can't connect, lost leader)   Treat Internal codes as if something failed, leaving the   system in an inconsistent state, but retrying could make progress.   (e.g., failed in middle of send, corrupted frame) 
//  URL address separator, used in file cache, service provider URL separation 
//  return immediately if there's no change 
//  verify if it's idempotent 
//  @@protoc_insertion_point(message_implements:org.apache.dubbo.common.serialize.protobuf.model.PBResponseType) 
//  If there's no tagged providers that can match the current tagged request. force.tag is set by default 
//  List 
//  the total count 
/*          * The fill length can not be less than 256, because by default, hessian reads 256 bytes from the stream each time.         * Refer Hessian2Input.readBuffer for more details          */
//  Choose an invoker from all the least active invokers 
/*  the .properties file under 'configFile' is global shared while .properties under this one is limited only to this application     */
//  if client connect or disconnect to server, zookeeper will queue   watched event(Watcher.Event.EventType.None, .., path = null). 
//  Copy from javassist.bytecode.annotation.Annotation.createMemberValue(ConstPool, CtClass); 
//  must present 4 segments 
//  for CuratorZookeeperClient 
//  do refer 
//  given that repeat(String, int) is quite optimized, better to rely on it than try and splice this into it 
//  get URL directly 
//  use 1st key, key1 
//  limit input stream. 
//  test old @Activate group 
//  Double check whether or not it is connected 
/*  * Serialization strategy interface that specifies a serializer. (SPI, Singleton, ThreadSafe) * * The default extension is hessian2 and the default serialization implementation of the dubbo protocol. * <pre> *     e.g. &lt;dubbo:protocol serialization="xxx" /&gt; * </pre>  */
//  process all timeouts 
// The same invoker, exporter that multiple exported are different 
// exist overridden method 
//  override url with configurator from configurators from "service-name.configurators" 
//  fix issue#619 
//  create service proxy 
//  ======== protocol default values, it'll take effect when protocol's attributes are not set ======== 
//  then unregister 
//  never has a retry task. then start a new task for retry. 
//  property of list 
//  export to local if the config is not remote (export to remote only when config is remote) 
//  log output 
/*  * ValidationFilter invoke the validation by finding the right {@link Validator} instance based on the * configured <b>validation</b> attribute value of invoker url before the actual method invocation. * * <pre> *     e.g. &lt;dubbo:method name="save" validation="jvalidation" /&gt; *     In the above configuration a validation has been configured of type jvalidation. On invocation of method <b>save</b> *     dubbo will invoke {@link org.apache.dubbo.validation.support.jvalidation.JValidator} * </pre> * * To add a new type of validation * <pre> *     e.g. &lt;dubbo:method name="save" validation="special" /&gt; *     where "special" is representing a validator for special character. * </pre> * * developer needs to do * <br/> * 1)Implement a SpecialValidation.java class (package name xxx.yyy.zzz) either by implementing {@link Validation} or extending {@link org.apache.dubbo.validation.support.AbstractValidation} <br/> * 2)Implement a SpecialValidator.java class (package name xxx.yyy.zzz) <br/> * 3)Add an entry <b>special</b>=<b>xxx.yyy.zzz.SpecialValidation</b> under <b>META-INF folders org.apache.dubbo.validation.Validation file</b>. * * @see Validation * @see Validator * @see Filter * @see org.apache.dubbo.validation.support.AbstractValidation  */
//  do not increment in method beforeExecute! 
//  String property has two setting method.   skip setXXXBytes(com.google.protobuf.ByteString value) 
//         kryo.setReferences(false); 
// linux end 
//  connection events 
//  logger 
//  Fall back to class name as cache key, for backwards compatibility with custom callers. 
//  Record a failed registration request to a failed list, retry regularly 
//  subscribe 
//  get request id. 
//  for sending over wire 
//  onError callback 
//  The sequence would be: SystemConfiguration -> AppExternalConfiguration -> ExternalConfiguration -> AbstractConfig -> PropertiesConfiguration 
//  message header length 
//  Use Default implementation 
// proxieeClass = c; 
//  Generate and write a response. 
//  Wait a while for existing tasks to terminate 
//  check ping & pong at server 
//  Process string to char array for generic invoke   See   - https://github.com/apache/dubbo/issues/2003 
//  if it's a callback, create proxy on client side, callback interface on client side can be invoked through channel   need get URL from channel and env when decode 
//  Convert tickDuration to nanos. 
//  getUsers 
//  just add new valid channel to NettyChannel's cache 
//  Config Center should always being started first. 
// private int yyline; 
//  because the two interfaces are initialized, the ReferenceCountExchangeClient reference counter is 2 
//  Registers @Service Bean first 
/* package */
/*  * EventFilterTest.java * TODO rely on callback integration test for now  */
//  Not match comparison 
//  Append default category if absent 
//  Remove all annotated-classes that have been registered 
//  id 
//  if it's auto resize, then calculate the possible max width 
//  skip the setting method with Pb entity builder as parameter 
//  Use Map.newBuilder() to construct. 
//  The first time is inaccurate. 
// change by fengting listener   {"listener", "exporter.listener", "string", "", "", "", "", "", "", ""},  {"filter", "service.filter", "string", "", "", "", "", "", "", ""}, 
//  Local disk cache, where the special key value.registries records the list of metadata centers, and the others are the list of notified service providers 
//  ~ end of else 
//  is the concrete service name 
//  verify cache, same result is returned for multiple invocations (in fact, the return value increases   on every invocation on the server side) 
//  no separator is required for the first item 
//  check for required fields of primitive type, which can't be checked in the validate method 
//  destroy all the registries 
//  Ignore all the exceptions and wait for the next retry 
//  Bind 
//  protocol key is the first 
//  mark buffer is not empty 
//  ======================================================     tests start   ======================================================   
// to judge if we need to delay publish 
//  message like : XxxService , XxxService 10 , XxxService xxxMethod , XxxService xxxMethod 10 
//  Lock the registry access process to ensure a single instance of the registry 
//  @@protoc_insertion_point(outer_class_scope) 
//  @Adaptive example, do not specify a explicit key. 
//  policy 
//     ConcurrentMap<String, Channel> channels = new ConcurrentHashMap<String, Channel>(); 
//  getAndIncrement() When it grows to MAX_VALUE, it will grow to MIN_VALUE, and the negative can be used as ID 
//  Wait for connection 
//  unsubscribe. 
//             logger.warn(t.getMessage(), t);          } 
// message like : xxxMethod, xxxMethod 10 
//  File cache timing writing 
//  register 
//  server will close channel when server don't receive any heartbeat from client util timeout. 
//  
// exchangeClients[i] = Exchangers.connect(url,handler);
//  if bind ip is not found in environment, keep looking up 
//  monitor 
//  Other events are passed down directly 
//  by default, port to registry 
//  Windows backspace echo 
//  connection should be lazy 
//  Do not check whether the connection is successful or not, always create Invoker! 
//  if the pattern is subnet format, it will not be allowed to config port param in pattern. 
//  Notified services 
//  @@protoc_insertion_point(enum_scope:org.apache.dubbo.common.serialize.protobuf.model.PhoneType) 
//  trigger ArrayMerger 
//  no @Adaptive 
//  reference retry init will add url to urls, lead to OOM   user specified URL, could be peer-to-peer address, or register center's address. 
//  Delete Error 
//  Get the active number of the invoker 
//  one channel can have multiple callback instances, no need to re-export for different instance. 
//  fill in message length and header length 
//  callback limits 
//  one of the properties of an argument is an instance of URL. 
//  Sending a registration request to the server side 
//  The field define the zookeeper server , including protocol, host, port, username, password 
//  If The return value of "getName" method is not null 
//  backspace 
//  Convert Map to MutablePropertyValues 
//  TODO get from ConfigManager first, only create if absent. 
/*      * Decide which target extension to be injected. The name of the target extension is decided by the parameter passed     * in the URL, and the parameter names are given by this method.     * <p>     * If the specified parameters are not found from {@link URL}, then the default extension will be used for     * dependency injection (specified in its interface's {@link SPI}).     * <p>     * For example, given <code>String[] {"key1", "key2"}</code>:     * <ol>     * <li>find parameter 'key1' in URL, use its value as the extension's name</li>     * <li>try 'key2' for extension's name if 'key1' is not found (or its value is empty) in URL</li>     * <li>use default extension if 'key2' doesn't exist either</li>     * <li>otherwise, throw {@link IllegalStateException}</li>     * </ol>     * If the parameter names are empty, then a default parameter name is generated from interface's     * class name with the rule: divide classname from capital char into several parts, and separate the parts with     * dot '.', for example, for {@code org.apache.dubbo.xxx.YyyInvokerWrapper}, the generated name is     * <code>String[] {"yyy.invoker.wrapper"}</code>.     *     * @return parameter names in URL      */
//  FIX
//  20 is the default maxTotal of current PoolingClientConnectionManager 
//  reach the most times of retry. 
//  use RpcContextFilter
//  Construct using org.apache.dubbo.common.serialize.protobuf.model.GooglePB.PBResponseType.newBuilder() 
//  Create some data for test 
//  make sure null and base64 encoded string can work 
//  Expected
//  maxHistory=0 Infinite history 
// ctx.start(); 
//  Make sure all properties are copied. 
//  remove timeout that was either processed or cancelled by updating the linked-list 
//  The escape character preceding the delimiter start is   itself escaped: "abc x:\\{}"   we have to consume one backward slash 
//  directly throw if the exception appears in the signature 
// int idx = server.indexOf(':'); 
//  count down 
//  Convert parameters into map 
//  url to export locally 
//  split service name to segments   (required) segments[0] = category   (required) segments[1] = serviceInterface   (optional) segments[2] = version   (optional) segments[3] = group 
//  test message header length 
//  cancel refer, directly remove from the map 
//  unlikely but not impossible: read 0 characters, but not at end of stream 
// stop timer 
//  count up 
//  init notify listener 
/*                       The customized 'com.alibaba.dubbo.rpc.protocol.http.HttpRemoteInvocation' was firstly introduced                      in v2.6.3. The main purpose is to support transformation of attachments in HttpInvokerProtocol, see                      https://github.com/apache/dubbo/pull/1827. To guarantee interoperability with lower                      versions, we need to check if the provider is v2.6.3 or higher before sending customized                      HttpRemoteInvocation.                      */
//  by default, reference local service if there is 
// Merge the urls of configurators 
//  get return type 
//  transfer only max. 100000 timeouts per tick to prevent a thread to stale the workerThread when it just   adds new timeouts in a loop. 
//  Listeners list for subscribed services 
//  if null, will return the initialize value.  Assertions.assertNull(RpcContext.getContext()); 
//  delete listener and register 
// change db.index=1 
// .addParameter(Constants.STUB_KEY, RegistryServiceStub.class.getName()) 
//  cores theads are all alive. 
//  Sum 
//  Lock up the registry shutdown process 
/* registryDirectory.notify(serviceUrls);        RouterChain routerChain = registryDirectory.getRouterChain();        //default invocation selector        Assertions.assertEquals(1 + 1, routers.size());        Assertions.assertTrue(ScriptRouter.class == routers.get(1).getClass() || ScriptRouter.class == routers.get(0).getClass());        registryDirectory.notify(new ArrayList<URL>());        routers = registryDirectory.getRouters();        Assertions.assertEquals(1 + 1, routers.size());        Assertions.assertTrue(ScriptRouter.class == routers.get(1).getClass() || ScriptRouter.class == routers.get(0).getClass());        serviceUrls.clear();        serviceUrls.add(routerurl.addParameter(Constants.ROUTER_KEY, Constants.ROUTER_TYPE_CLEAR));        registryDirectory.notify(serviceUrls);        routers = registryDirectory.getRouters();        Assertions.assertEquals(0 + 1, routers.size()); */
//   subscription information to cover. 
// export stub service 
//  Record the weight the first least active invoker 
//  Just pick an available invoker using loadbalance policy 
/* , localContext */
//  make sure first time callback successfully 
// {"filter", "service.filter", "string", "", "", "", "", "", "", ""},  {"listener", "listener", "string", "", "", "", "", "", "", ""}, 
//  ExchangeClient client = arrays.get(0); 
//  ================ Array Type ================  
//  check the setter/getter whether match 
// If no mock was configured, return null directly 
// The origin invoker 
//  DUBBO-147 find all invoker instances which have been tried from RpcContext 
//  test netty client 
// {"mock", "mock", "string", "false", "dubbo.test.HelloServiceMock", "true", "", "", "", ""}, 
//  unlock 
//  create exception response. 
//  no-op 
//  escape 
//  unregister. 
//  no more variables   this is a simple string 
// private ChannelListener listener; 
//  range condition 
//  server supports reset, use together with override 
//  2.0.2 
//  use CompareAndSet to sum 
//  timeout in 15 seconds. 
//  process width cache 
//         // get arguments          Object arguments = ReflectionUtil.parseArguments(                  invocation.getMethod(), invocation.getArguments(), useNamedParams);            // invoke it          return jsonRpcHttpClient.invoke(                  invocation.getMethod().getName(),                  arguments,                  retType, extraHttpHeaders);
//  clear buffer 
//  init decoder map. 
//  Ignore it. 
//  init the object 
/*  * Autogenerated by Dubbo Compiler (0.1.0) * <p> * Thrift (0.7.0) * <p> * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING  */
//  ======================================================     data table manipulation utils 
//  Sending a canceling subscription request to the server side 
//  ignore error log 
//  bind ip is used as registry ip by default 
//  Allow to access   local reference 
//  @@protoc_insertion_point(interface_extends:Map) 
//  It's safe to declare it as singleton since it runs on single thread only 
//  remain 
//  find parameterized type 
//  @@protoc_insertion_point(builder_implements:Map) 
//  get translated positions and possibly new buffer 
//  Null point check 
//  do nothing 
//         testStartupConfig();          testProviderConfig();          testPathCache();          testTreeCache();          testCuratorListener();         Thread.sleep(100000); 
//  2. if there are some addresses that are not in any dynamic tag group, continue to filter using the   static tag group. 
//  Each invoke has the same weight (only one invoker here) 
//  connection error causes client to release all resources including current watcher
//  assert tags 
//  If it is the first invoker or the active number of the invoker is less than the current least active number 
//  verify if the first cache item is expired in LRU cache 
//  contributors: lizongbo: proposed special treatment of array parameter values   Joern Huxhorn: pointed out double[] omission, suggested deep array copy 
//  @Parameter(key="key2", useKeyAsProperty=true) 
//         URL consumerurl = serviceurl;          Invoker<DemoService> reference = protocol.refer(DemoService.class, consumerurl);          DemoService demoProxy = (DemoService)proxyFactory.createProxy(reference); 
// configure the cache 
// ignore overloaded method 
//  export one service 
//  Initialize the startTime. 
//             {"", "", "", "", "", "", "", "", "", ""}, 
//  loop up after registry 
//  get version. 
// Header 
//  need to consider backward-compatibility if it's a callback 
//  enable heartbeat by default 
// excluded = true              {"filter", "service.filter", "string", "default", "-generic", "", "", "", "", ""},  excluded = true              {"listener", "exporter.listener", "string", "default", "-deprecated", "", "", "", "", ""},  {"", "", "", "", "", "", "", "", "", ""}, 
//  backward compatibility for version 2.0.0 
//  print inner separation lines 
/*                                          *  because etcd3 does not support direct children watch events,                                         *  we should filter not interface events. if we watch /dubbo                                         *  and /dubbo/interface, when we put a key-value pair {/dubbo/interface/hello hello},                                         *  we will got events in watching path /dubbo.                                          */
//  Save OK 
//  return url.getServiceKey(); 
//  Merge the consumer side parameters 
//  empty protocol 
//  valid port range is (0, 65535] 
//  when return type is not the subclass of return type from the signature and not an interface 
//  default time-to-live in millisecond 
//  service name   method name 
// int port = (int) (1000 * Math.random() + 10000); 
/*  index in packed string   */
//  Remove configurations from provider, some items should be affected by provider. 
//  Do not need to close
//  get cache by class loader. 
//  No matching results 
//  check if methods exist in the remote service interface 
//  create XmlRpcHttpClient 
//  Initialization at construction time, assertion not null   Initialization at construction time, assertion not null   Initialization at construction time, assertion not null   Initialization at construction time, assertion not null, and always assign non null value 
//  cached fields: 
//  present in both local and remote, but uses remote value. 
//  use 1st key, protocol 
//  3. - setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,int index,java.lang.Object value） 
//  pop name. 
// invoke method --> init client 
//  loop methods, get override value and set the new value back to method 
// onthrow callback not configured
//  @@protoc_insertion_point(class_scope:org.apache.dubbo.common.serialize.protobuf.model.PhoneNumber) 
//  reset 
//  Close old channel   copy reference 
//  Construct using org.apache.dubbo.common.serialize.protobuf.model.GooglePB.PBRequestType.newBuilder() 
//  Custom type 
//  application 
// decode 
// init channel 
//  set request and serialization flag. 
//  to verify interfaceClass is an interface 
// Clear first, previous test case will make sure that the right invoker2 will be used. 
//  get stackTrace value 
//  remove group: "module-x.y.z" 
// value calculate 
// Configured with mock 
// The parameters are different and must be rereferenced. 
//  never select invoker3 because it's active is more than invoker1 and invoker2 
//  appender 
//  Append first page into list 
/*  Windows Enter  */
//  do refer duplicated 
//  counters 
//  treat url and configuration differently, the value should always present in configuration though it may not need to present in url. 
//  If more than 1 page 
//  print first separation line 
//  no need to generate adaptive class since there's no adaptive method found.
//  array begin. 
// when both mismatches and matches contain the same value, then using mismatches first 
//  Primitive type 
//  HeaderExchangeChannel.removeChannelIfDisconnected(channel); 
// this will throw a exception
//  ~ end of if 
//  string   int   override 
//  default db.index=0 
//  send error message to Consumer, otherwise, Consumer will wait till timeout. 
//  object begin. 
//  if the timeout is the tail modify the tail to be the prev node. 
// The listener of the consumer and the provider can be stored together, all based on the service name 
/* client.request("world\r\n");        Future future = client.request("world", 10000);        String result = (String)future.get();        Assertions.assertEquals("Did you say 'world'?\r\n",result); */
//  returns current version of Response to consumer side. 
//  DemoServiceImpl with @Transactional 
//  load classes 
//  Generated by the protocol buffer compiler.  DO NOT EDIT!   source: GooglePB.proto 
//  Test filter condition 
//  Registers ReferenceAnnotationBeanPostProcessor 
//  need separator for others 
//  read server info from property 
//  if field name end with List, should skip 
//  The combination of directoryUrl and override is at the end of notify, which can't be handled here 
/*  index in unpacked array  */
//  For providers, this is used to enable custom proxy to generate invoker 
// ////////////////////////////////////////////////////////// 
//  forbid 
// first add into the list   remove the individul param 
//  this is only for compatibility 
//  Cache check interval (second) 
//  return 404 when fail to construct command context 
// windows end 
// zzEOFDone = false; 
//  has pad char. 
//  alignment 
//  token type 
// tmperately add a new invoker 
//  if invoker is destroyed due to address refresh from registry, let's allow the current invoke to proceed 
//  we use the loading status of DynamicConfiguration to decide whether ConfigCenter has been initiated. 
//  refresh all configs here, 
//  property defined as "repeated string" transform to ProtocolStringList,   should be build as List<String>.
// Ensure that a new exporter instance is returned every time export 
//  write array. 
//  set thread pool. 
//  registry 
//  The Value in the KV part. 
// override clean 
//  ================ Primitive Type ================  
// throw  ChannelEventRunnable.runtimeExeception(int logger) not in execute exception  (expected = RemotingException.class) 
//  find version info from MANIFEST.MF first 
//  save for 2.6.x compatibility, for example, TraceFilter in Zipkin uses com.alibaba.xxx.FutureAdapter 
//  Use PhoneNumber.newBuilder() to construct. 
//  this is used for tracing if instid has published service or not. 
//             + "&"+Constants.CHANNEL_HANDLER_KEY+"=connection" 
//  prevents grpc on sending error to a closed watch client. 
//  format: "pid@hostname" 
//  References "ref" property to annotated-@Service Bean 
//  Config center has the highest priority 
//  Must be even 
//  do not touch this method, if you want terminate this stream. 
//  Publish ServiceBeanExportedEvent 
//  client can expose a service for server to invoke only. 
//  Combine filters and listeners on Provider and Consumer 
//  make the grpc call to watch the key 
// bad object 
//  the weight of every invokers 
//  The weight of the first least active invoker 
//  Normalize ticksPerWheel to power of two and initialize the wheel. 
// encode resault check need decode 
//  TODO figure out the meaning of cancel in DefaultFuture. 
/*      * get map property name from setting method.<br/>     * ex: putAllXXX();<br/>     *     * @param methodName     * @return      */
//  If @Service bean is local one 
//  bad request 
//  client has been replaced with lazy client. lazy client is fetched from referenceclientmap, and since it's 
//  add scene judgement in windows environment Fix 2557 
//  alive 1 second 
//  collect timer for collecting statistics data 
//  Decide to fail or to continue when failed to connect to remote server. 
//  result field id is 0 
//  handle response. 
//  For test 
//  header length 
//  add fields 
//  1. all addresses are in dynamic tag group, return empty list. 
//  remove 'default.' prefix for configs from ProviderConfig   appendParameters(map, provider, Constants.DEFAULT_KEY); 
/*  finally: fill the buffer with new input  */
// Assertions.assertEquals("properties", overrideConfig.getUseKeyAsProperty()); 
//  service3 interface is not equals server2 
//  Was cancelled in the meantime. 
/* ------------------------------------test invokers for weight--------------------------------------- */
//  Registry Collection Map<RegistryAddress, Registry> 
//  registry ip is not used for bind ip by default 
//  ignore, there is no need any log here since some class implement the interface: EnvironmentAware,   ApplicationAware, etc. They only have setter method, otherwise will cause the error log during application start up. 
// create a real instance to keep the attribute values; 
//  Forbid to access 
//  parse setXXX(String string) 
//  add the tail string which contains no variables and return   the result. 
//  process imported classes 
//  First, pick the invoker (XXXClusterInvoker) that comes from the local registry, distinguish by a 'default' key. 
//  if our future is success, mark the future to sent. 
//  present in local url but not in remote url, parameters of remote url is empty 
//  config 
//  Finds all BeanDefinitionHolders of @Service whether @ComponentScan scans or not. 
//  Exactly one method, match 
/*  Linux Ctrl+C  */
//  whether the channel is closed 
//  Rethrow exception 
//  then destroy, the multicast socket will be closed 
//         Assertions.assertEquals(                  serviceURL.setPath(service).addParameters("check", "false", "interface", DemoService.class.getName(), REMOTE_APPLICATION_KEY, serviceURL.getParameter(APPLICATION_KEY))                  , invokers.get(0).getUrl()          ); 
//  Translate url list to Invoker map 
//  check if the output is generated by a fixed way 
//  Alarm when spare memory < 2M 
//  Reconnecting detection cycle: 3 seconds (unit:millisecond) 
//  @@protoc_insertion_point(message_implements:Map) 
//  set request id. 
//  encode request data. 
//  clear attachments which is binding to current thread. 
//  jcache parameter is the full-qualified class name of SPI implementation 
//  merge - configuration 
// RegistryController.startRegistryIfAbsence(1); 
//  decrease any way 
//  isTypeMatch() is called to avoid duplicate and incorrect update, for example, we have two 'setGeneric' methods in ReferenceConfig. 
// After pushing two provider, the directory state is restored to true 
//  default watch timeout in millisecond 
//  special logic for enum 
//  destroy all the protocols 
// get real invoked method name from invocation 
//  Refresh Dubbo Environment 
/*  error messages for the codes above  */
//  send statistics data 
//  decode request. 
//  filter general setting method   1. - setUnknownFields( com.google.protobuf.UnknownFieldSet unknownFields)   2. - setField(com.google.protobuf.Descriptors.FieldDescriptor field,java.lang.Object value) 
//  add dynamic class tag. 
//  check extName == null?
//  write 
//  attachment will be bind to invocation 
//  Because javassist compiles using the caller class loader, we should't use HelloService directly 
// future.cancel(true); 
//  Test multiple binding 
//  notify flag 
//     @Test 
//  system may be recover later, current connect won't be lost 
//  host is the same, sort by priority 
//  Scheduled executor service 
//  use interface's name as service path to export if it's not found on client side 
//  whether to share connection 
// ClassLoader - ClassPool 
//  the latest latch just for 3. Because retry method has been removed. 
//  Start server 
//  Initially disable 
//  all processed 
// callback 
// TODO SoftReference 
//  required 
// If the telnet data and request data are in the same data packet, we should guarantee that the receipt of request data won't be affected by the factor that telnet does not have an end characters. 
//  Reset the active number of the current invoker to the least active number 
//  copy -> modify -> update reference 
//  value is not set, use the value generated from class name as the key 
//  create Mixin class. 
//                 protocol.readI32(); // skip the first message length 
//  use 2nd key, protocol 
//  say name 
//  end of object. 
// this.handler = null; 
//  export service. 
//  The name of bean annotated @Service 
//     private final boolean isCallBack;      private final boolean isFuture; 
/*      * This is used to convert a configuration nodePath into a key     * TODO doc     *     * @param path     * @return key (nodePath less the config root path)      */
//  If current invoker's active value equals with leaseActive, then accumulating. 
//  ~ 
//  local injvm and registry protocol, so expected is 2 
//                             activeLimitFilter.listener().onError(expected, invoker, invocation); 
//  If the startup detection is opened, the Exception is thrown directly. 
//  get users 
// has nothing use 
/*  ignore  */
// Enabled by override rule 
//  end of methods for 
//  @Test 
//  directly throw if it's checked exception 
// test geturl 
//  find server. 
//  Port   Append backup parameter as other servers 
//  service scope by default. 
//  because helloServiceInvoker and demoServiceInvoker use share connect， so client list must be equal 
//  returned port range is [30000, 39999] 
//  ID 
//  we want these objects to be as generic as possible 
// sticky: invoker.isAvailable() should always be checked before using when availablecheck is true. 
//  Log output 
//  currently, the version value in Response records the version of Request 
//  The lock for the acquisition process of the registry 
// TODO response test 
//  @@protoc_insertion_point(class_scope:org.apache.dubbo.common.serialize.protobuf.model.PBResponseType) 
// Note the implicit contract (although the description is added to the interface declaration, but extensibility is a problem. The practice placed in the attachment needs to be improved)
//  Initialization at construction time, assertion not null, and always assign non null value 
// Assertions.assertEquals(ThriftCodec.getSeqId(), message.seqid); 
// local invoke will return directly 
//           invoker.destroy();          reference.destroy(); 
//  add implemented interfaces 
//  parse setXXX(com.google.protobuf.Message value) 
//  create MixinInstance class. 
//  by default, host to registry 
//  If a method doesn't have a merger, only invoke one Group 
//  test chinese 
/*  List routers = registryDirectory.getRouters();        Assertions.assertEquals(1 + 1, routers.size());        serviceUrls.clear();        serviceUrls.add(routerurl.addParameter(Constants.ROUTER_KEY, Constants.ROUTER_TYPE_CLEAR));        registryDirectory.notify(serviceUrls);        routers = registryDirectory.getRouters();        Assertions.assertEquals(0 + 1, routers.size()); */
//  for backward compatibility 
//  found parameter in URL type 
//  reput this task when catch exception. 
//  assert addresses 
//  If (not every invoker has the same weight & at least one invoker's weight>0), select randomly based on totalWeight. 
/*      * get list property name from setting method.<br/>     * ex： getXXXList()<br/>     *     * @param methodName     * @return      */
// .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout()) 
//  TODO optimization 
//  return false to let executor create new worker. 
//  3 invoker notifications=================================== 
// {"local", "local", "string", "false", "HelloServiceLocal", "true", "", "", "", ""},  {"local", "local", "string", "false", "true", "", "", "", "", ""}, 
//  Fixed router instances: ConfigConditionRouter, TagRouter, e.g., the rule for each instance may change but the 
// test unsubscribe 
//  return default version when any exception is thrown 
// directory will return a list of normal invokers if Constants.INVOCATION_NEED_MOCK is present in invocation, otherwise, a list of mock invokers will return. 
//  add heartbeat cycle to avoid unstable ut. 
//  Prevent JVM from exiting 
//  Prevent overflow. 
//  don't export when none is configured 
//  test value 
//  #2 ReferenceBean (Field Injection #1) 
//  From Child 
//  local variable, convenient for debug 
// Thread.sleep(20000); 
// Need to be restored to the original providerUrl
//  proceed invocation chain 
//  due to the effect of LazyConnectExchangeClient, the client will be "revived" whenever there is a call. 
//  Output, tps is not for accuracy, but it reflects the situation to a certain extent. 
//  TODO 
//  Can be unset. 
//  getDesc 
//  Compatible version 1.0  fix by tony.chenl DUBBO-44 
//  init encoder map. 
//  indent length 
//  The last two parameters are reserved for compatibility with the old configuration 
// no mock 
//  registry url is available   use RegistryAwareCluster only when register's CLUSTER is available 
//  e.g., version number 2.6.3 will convert to 2060300 
//  we only process String properties for now 
//  This object is going to be GCed and it is assumed the ship has sailed to do a proper shutdown. If   we have not yet shutdown then we want to make sure we decrement the active instance count. 
//  TODO add this to provider config
//  Test username or password contains "@" 
//  No Category Parameter 
//  you can customize name and type of client thread pool by THREAD_NAME_KEY and THREADPOOL_KEY in CommonConstants.   the handler will be warped: MultiMessageHandler->HeartbeatHandler->handler 
//  callback instance when async-call is returned 
//  export service 
//  no need to new client again 
/*  The group of the config center, generally it's used to identify an isolated space for a batch of config items,    but it's real meaning depends on the actual Config Center you use.     */
//  The null value unallowed in the ConcurrentHashMap. 
//  Set ignored* 
// To solve the problem of RMI repeated exposure port conflicts, the services that have been exposed are no longer exposed.  providerurl <--> exporter 
//  create proxy 
//     private boolean isExternalServer; 
// header 
// if local service interface's method's return type is not instance of return value 
// test one unregister 
//  Get the weight of the invoker's configuration. The default value is 100. 
// content 
//  add default extension 
//  not allow to save null, but allow to update with null which means not update the field 
//  Queue 
//  ~ end of loop field map 
//  connectNum must be greater than or equal to 1 
//  it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor. 
//  ip:port -> ExchangeServer 
// 32 8 first add space and then add backspace. 
//  ~ end of catch 
//  maybe url has many subscribed paths 
//  check duplicate jar package 
//  store back cached positions 
//  Sending a subscription request to the server side 
// .addLast("logging",new LoggingHandler(LogLevel.INFO))//for debug 
//  decrease Time 
//  Type of handle 
//  use last registry url 
//  currently we use a single header to hold the attachments so that the total attachment size limit is about 8k 
//  create ProxyInstance class. 
//  default value is true 
//  @@protoc_insertion_point(message_implements:org.apache.dubbo.common.serialize.protobuf.model.PBRequestType) 
//  ================ Complex Collection Type ================  
//  @@protoc_insertion_point(message_implements:org.apache.dubbo.common.serialize.protobuf.model.PhoneNumber) 
//  get operate will throw a timeout exception, because the future is timeout. 
// excluded = true 
//  backward compatibility for the default value in old version's xsd 
//  Check whether or not it is connected 
//  cache time (second) 
//  If the local @Service Bean exists, build a proxy of ReferenceBean 
//  If no mock was configured, return null directly 
//  module 
// export an stub service for dispatching event 
//  Customized parameters 
//  ======================================================     data column definition 
// convert error fail fast .  ignore concurrent problem. 
// result dependent on method order. 
// Test the matching of protocol and select only the matched protocol for refer 
//  ignore NoNode Exception.
//  ---- for service provider ---- 
//  if this file exist, firstly delete it. 
//  check parameters 
// export invoker 
//  check for required fields   alas, we cannot check 'id' because it's a primitive and you chose the non-beans generator.   check for sub-struct validity
// Check if the localClass a constructor with parameter who's type is interfaceClass 
//  load 
// 00000010-response/oneway/hearbeat=false/hessian |20-stats=ok|id=0|length=0 
//  blocking 
//  if we are requesting for a Provider with a specific tag 
//  pass attachments to result 
//  ====================================================== 
//  here a three shared connection is established between a consumer process and a provider process. 
//  target the method, and get its signature 
//  no methods 
//  Is it synchronized to save the file
//  URL cannot be transferred automatically from the server side to the client side by using API, instead,   it needs manually specified.
//         provConf.setApplication(appConfForProvider); 
//  may have concurrency issue 
//  stores the configuration key-value pairs 
//  the scope for referring/exporting a service, if it's local, it means searching in current JVM only. 
// Failure can not be called to listener. 
//  Let the client not reply to the heartbeat, and turn off automatic reconnect to simulate the client dropped. 
//  group="a,b" or group="*" 
// just for connected 
//  continue 
//  We will update our cache file after each notification.   When our Registry has a subscribe failure due to network jitter, we can return at least the existing cache URL. 
//  protocol 
//  consumer 
//  we may already added some attachments into RpcContext before this filter (e.g. in rest protocol) 
//  check if recover successfully 
//  only update the state it will be removed from HashedWheelBucket on next tick. 
//  handle request. 
//  Mark the client into the closure process 
//  Register CustomEditors for special fields 
//  getName 
//  message length placeholder 
//  We will check enabled status inside each router. 
//  default cache.size is 1000 for LRU, should have cache expired if invoke more than 1001 times 
//  get statistics data 
//  Registered services 
//  save any parameter in registry that will be useful to the new url. 
//  abnormal case  
//  Quick check on the concurrent map first, with minimal locking. 
//  if result is not null OR it's null but force=true, return result directly 
//  Transform File URL into Script Route URL, and Load   file:///d:/path/to/route.js?router=script ==> script:///d:/path/to/route.js?type=js&rule=<file-content>   Replace original protocol (maybe 'file') with 'script'   Use file suffix to config script type, e.g., js, groovy ... 
//  remove suffix ".jar": "path/to/group-module-x.y.z" 
// 00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0 
//  default or set void.class for purpose. 
/*  * Marker for extension interface * <p/> * Changes on extension configuration file <br/> * Use <code>Protocol</code> as an example, its configuration file 'META-INF/dubbo/com.xxx.Protocol' is changes from: <br/> * <pre> *     com.foo.XxxProtocol *     com.foo.YyyProtocol * </pre> * <p> * to key-value pair <br/> * <pre> *     xxx=com.foo.XxxProtocol *     yyy=com.foo.YyyProtocol * </pre> * <br/> * The reason for this change is: * <p> * If there's third party library referenced by static field or by method in extension implementation, its class will * fail to initialize if the third party library doesn't exist. In this case, dubbo cannot figure out extension's id * therefore cannot be able to map the exception information with the extension, if the previous format is used. * <p/> * For example: * <p> * Fails to load Extension("mina"). When user configure to use mina, dubbo will complain the extension cannot be loaded, * instead of reporting which extract extension implementation fails and the extract reason. * </p> * * @deprecated because it's too general, switch to use {@link org.apache.dubbo.common.extension.SPI}  */
//  wait timeout ms 
// return directly 
//  Initialize 
//  TODO carries class info every time. 
//  mock zookeeper://xxx?mock=return null 
//  invoke 
//  Username to login register center 
//  Check the number of skipping times 
//  interface cannot be null 
//  override url don't have a port, means the ip override url specify is a consumer address or 0.0.0.0   1.If it is a consumer ip address, the intention is to control a specific consumer instance, it must takes effect at the consumer side, any provider received this override url should ignore;   2.If the ip is 0.0.0.0, this override url can be used on consumer, and also can be used on provider 
//  ~ end of method serializeInternal 
//  Try the next server 
//  Instead of using Dubbo's configuration, I would suggest use the original configuration method Apollo provides.
// private String host; 
//  whether to auto resize 
//  name2desc 
//  take effect on all providers, so address must be 0.0.0.0, otherwise it won't flow to this if branch 
// Test retries and 
// just for one method 
//  scheduled executor service 
//  Process return type. 
//             {"timeout", "registry.timeout", "int", 5000, 9000, "", "", "", "", ""},              {"file", "registry.file", "string", "", "regConfForServiceTable.log", "", "", "", "", ""},              {"wait", "registry.wait", "int", 0, 9000, "", "", "", "", ""},              {"transport", "registry.transporter", "string", "netty", "mina", "", "", "", "", ""},              {"subscribe", "subscribe", "boolean", true, false, "", "", "", "", ""}, 
//  message length 
//  short name condition 
// TODO to calculate consumerAddressNum 
//  add method, for verifying against method, automatic fallback (see dubbo protocol) 
//  ==== Template method ==== 
//  Test filter won't throw an exception 
//  put into waiting map. 
//  end of array. 
//  clear first 
//  Method routing and Other condition routing can work together 
//  <method desc,method instance>   <constructor desc,constructor instance> 
//  Since 2.6.6 https://github.com/apache/dubbo/issues/3193 
//  TODO for now just do plain text output
//  Since injvm protocol is configured explicitly, we don't need to set any extra flag, use normal refer process. 
//  isset id assignments 
// All of them are called 4 times. A successful attempt to lose 1. subscribe will not be done 
//  parse setXXX(SomeEnum value) 
//  ServiceBean Bean name 
//     private PropertyInjector propertyInjector;      private String context = null; 
//  to notify configurator/router changes 
//  use 'zookeeper' as the default configcenter. 
//  Add methods parameters 
//  enable sending readonly event when server closes by default 
//  append the characters following the last {} pair. 
//  Check if "serialization id" passed from network matches the id on this side(only take effect for JDK serialization), for security purpose. 
// The anyhost parameter of override may be added automatically, it can't change the judgement of changing url 
//  Get properties under specified prefix from PropertySources 
//  Reset totalWeight 
//  DO NOTHING 
//  Reconnection timer, regular check connection is available. If unavailable, unlimited reconnection. 
//  need to configure if there's return value before the invocation in order to help invoker to judge if it's   necessary to return future.
//  override url with configurator from configurator from "app-name.configurators" 
//  No content , ignore directly 
//  impossible 
//  Local disk cache file 
//  TODO how to assert thread action
//  if not auto resize, return preset width 
// =================================================================================== 
//  @@protoc_insertion_point(builder_implements:org.apache.dubbo.common.serialize.protobuf.model.PBRequestType) 
// All service providers can not be disabled through override. 
//  biz exception. 
// One is the same, one is different 
//  create a new List of invokers 
//  timeout check 
//  keep every provider's category. 
//  otherwise, wrap with RuntimeException and throw back to the client 
//  Remove ServiceBean when it's exported 
//  the number of pages 
// init request string 
// not set onreturn callback 
//  BAD
// final int concurrent = PerformanceUtils.getIntProperty("concurrent", 100);  int r = PerformanceUtils.getIntProperty("runs", 10000);  final int runs = r > 0 ? r : Integer.MAX_VALUE; 
//  ================ Simple Type ================  
//  register service3 should not trigger notify
//  idleTimeout should be at least more than twice heartBeat because possible retries of client. 
//  local reference 
//  use 2nd key, key2 
// ============================================================================================================================= 
//         String serviceStr = ""; 
//  ~ end of loop serverMap 
//  [Issue] SpringStatusChecker execute errors on non-XML Spring configuration   issue : https://github.com/apache/dubbo/issues/3615   ignore GenericXmlApplicationContext
//  magic header. 
//  test recover nothing 
//  1. fill corresponding config with data 
//  receive a new packet   buffer 
//  The sum of the warmup weights of all the least active invokers 
//  Cache key is url that does not merge with consumer side parameters, regardless of how the consumer combines parameters, if the server url changes, then refer again 
//         server.getDeployment().getMediaTypeMappings().put("xml", "application/xml"); 
//   a method start with $ is illegal in soap          // cast to EchoService          EchoService echo = proxy.getProxy(protocol.refer(EchoService.class, URL.valueOf("webservice://127.0.0.1:9010/" + DemoService.class.getName() + "?client=netty"))); 
//  Map<serviceName, Map<url, queryString>> 
// record change 
//  frame 
//  If we got exactly one invoker having the least active value, return this invoker directly. 
//  @@protoc_insertion_point(builder_scope:org.apache.dubbo.common.serialize.protobuf.model.PhoneNumber) 
//  Get PropertySource mapped to 'application.dubbo.properties' in Spring Environment. 
//         Thread.sleep(10000000); 
//         java.util.Iterator<Registry> registryIterable = multipleRegistry.getServiceRegistries().values().iterator();          Registry firstRegistry = registryIterable.next();          Registry secondRegistry = registryIterable.next(); 
//  if there's no bind port found from environment, keep looking up. 
//  excluded 
//  find URL getter method 
//  Subscribe logic guarantees the first notify to return 
//  java.lang.IllegalArgumentException: argument type mismatch 
//         URL serviceUrl2 = URL.valueOf("http2://multiple2/" + SERVICE_NAME + "?notify=false&methods=test1,test2&category=providers"); 
//  column width 
/*  * Marker for extension interface * <p/> * Changes on extension configuration file <br/> * Use <code>Protocol</code> as an example, its configuration file 'META-INF/dubbo/com.xxx.Protocol' is changed from: <br/> * <pre> *     com.foo.XxxProtocol *     com.foo.YyyProtocol * </pre> * <p> * to key-value pair <br/> * <pre> *     xxx=com.foo.XxxProtocol *     yyy=com.foo.YyyProtocol * </pre> * <br/> * The reason for this change is: * <p> * If there's third party library referenced by static field or by method in extension implementation, its class will * fail to initialize if the third party library doesn't exist. In this case, dubbo cannot figure out extension's id * therefore cannot be able to map the exception information with the extension, if the previous format is used. * <p/> * For example: * <p> * Fails to load Extension("mina"). When user configure to use mina, dubbo will complain the extension cannot be loaded, * instead of reporting which extract extension implementation fails and the extract reason. * </p>  */
//  check magic number. 
// try-with-resources 
//  If there is a client in the list that is no longer available, create a new one to replace him. 
//  if timeout is also the tail we need to adjust the entry too 
//  remove if not accept 
//  Multiple values 
//  #4 ReferenceBean (Field Injection #2) 
//             channel.close(); 
//  Number of invokers 
//  binding attachments into invocation. 
// test subscribe 
/*  request|1111...|request  */
//  this will not override, use 'key' instead, @Parameter(key="key1", useKeyAsProperty=false) 
//  Just read one server's data 
//  assemble URL from register center's configuration   if protocols not injvm checkRegistry 
//  process GET request and POST request separately. Check url for GET, and check body for POST 
//  add into default group 
//  Delete OK 
//  set response status. 
//  Guard against overflow. 
//  resolve future.awaitUninterruptibly() dead lock 
//  reference should not be null, and is the implementation of the given interface
//         final String canonicalName = clazz.getCanonicalName(); 
//  We add listeners to make sure our out bound event is correct.   If our out bound event has an error (in most cases the encoder fails),   we need to have the request return directly instead of blocking the invoke process. 
//  Port 
//  FAILOVER: return all Providers without any tags.
//  add initial values 
//  re-throws the actual Exception. 
//         consumerConf.setApplication(appConfForConsumer); 
// Assertions.assertEquals(proxy.hashCode(), invoker.hashCode()); 
//  Extend the expiration time   Defensive fault tolerance 
//  dynamic tag group doesn't have any item about the requested app OR it's null after filtered by   dynamic tag group but force=false. check static tag 
/*  indicate end of file  */
//  String[] to Map 
// queue.size  
//  register Alias rather than a new bean name, in order to reduce duplicated beans 
//  control char. 
//  mark buffer is used, exit mark status! 
//  Single Config Bindings 
//  Every least active invoker has the same weight value?
//  never return 0 even if n1 equals n2, otherwise, o1 and o2 will override each other in collection like HashSet 
//  TODO this should not be using the default charset because it's not an input and might introduce flakiness 
//  TODO Make this work with pending elements
/*  * The DSL for declaring plugins to inject into an included build. * * TODO: Plugins need to be located in this build's buildSrc. * * @since 4.6  */
//  TODO some kind of context of why the method was attached (e.g. which plugin declared the rule)   TODO some kind of instance state for the method (might be the same as context above) 
//  TODO: Need to track version/implementation of symbol strip tool. 
//  Return a dummy implementation of this as creating a real hasher drags ~20 more services   along with it, and a hasher isn't actually needed on the worker process side at the moment. 
//  there's a risk, for some methods, that the hash is always   recomputed but it won't be worse than before 
//  This isn't quite right. Should close the worker classpath cache once we're finished with the worker processes. This may be before the end of this build   or they may be used across multiple builds 
//  TODO Need a better mechanism to wire tasks into lifecycle 
//  TODO:Cedric This is not quite right. We assume that if we are asking for a specific binary, then we resolve to the assembly instead   of the jar, but it should be somehow parameterized 
//  Ensure that at most one action that may have access to the mutable state of the build runs at a given time   TODO - move this to a better home and reuse 
//  TODO:HH Use managed views for this, only applied when the respective language is applied
//  TODO: There has to be a simpler way to do this.   We want to create a buildable filecollection based on a filtered view of selected source directory sets 
//  Passing null for sha1 - TODO - consider using the etag which is an MD5 hash of the file (when less than 5Gb) 
//  TODO:ADAM - need to do this earlier 
//  TODO - exception when no default type 
//  Don't force evaluation of rules here, let the task container do what it needs to
//  result is a scala.util.Either   right is a Seq of files that were generated   left is routes compilation errors   TODO: It might be nice to pass along these errors in some way 
//  TODO deleteOnExit won't clean up non-empty directories (and it leaks memory for long-running processes). 
/*  * Meta-info about a Java component. * * TODO - this is some legacy stuff, to be merged into other component interfaces  */
//  TODO: Need to track version/implementation of symbol extraction tool. 
//  TODO: This should be modeled differently, perhaps as a dependency on the implementation configuration 
//  This is not super nice, but dependencies are created through reflection, for decoration   and assume a constructor with 3 arguments (Group, Name, Version) which is suitable for   most cases. We could create an empty attribute set directly in the AbstractDependencyImpl,   but then it wouldn't be mutable. Therefore we proceed with "late injection" of the attributes 
//  TODO - should split this up, so that the inputs are attached to an object that represents the binary, which is then later used to configure the link/assemble tasks 
//  we need to wrap this into a loop, because there's always a risk   that the method, which is weakly referenced, has been collected   in between the creation time and now 
//  TODO(daniel): Should support in a better way multi file invocation. 
//  It's true right now that this is always coming from the TestKit, but might not be in the future.
//  TODO - don't select again here, as the selection is already performed to select the toolchain 
//  TODO include link to documentation giving more explanation of what's going on here. 
//  TODO: Migrate this away from here 
//  This looks ugly, very ugly, but that is apparently what Ant does itself 
//  TODO - should be incremental 
//  TODO: this is terrible 
//  TODO: This should actually be a Routable message with a single handler,   but we need some way to correlate a given request with a specific response channel 
//  TODO - this is pretty nasty, look at avoiding using a time bomb stub here 
// TODO:rbo Change the parameter type to `Transformer<String, @Nullable String>` once we migrate to Java 8
// TODO - make this work on windows  originalIn.close();
//  TODO better exception type 
//  Note: This would be better housed in a scope that encapsulated the tree of Gradle objects. 
// is it sane enough? 
/*  * A {@link org.gradle.api.file.ConfigurableFileCollection} that can be used as a task input property. Caches the matching set of files during task execution, and discards the result after task execution. * * TODO - disallow further changes to this collection once task has started * TODO - keep the file entries to snapshot later, to avoid a stat on each file during snapshot  */
//  TODO This class, DefaultBuildOperationQueue and ExecutionPlan have many of the same   behavior and concerns - we should look for a way to generalize this pattern. 
// TODO:instant-execution: remove this 
//  Can only set once: should really be part of the constructor   Can only set once: should really be part of the constructor
//  This isn't quite right, as we may lose precision when converting to a double 
//  decimalFormat is not thread safe - synchronize access to the instance 
//  TODO - wire this stuff in properly 
//  TODO:ADAM - need to cleanup completion too, if not used 
//  TODO: Need to check for proper type/cast 
//  TODO - should use a resolver so that this method is consistent with Project.uri(string) 
//  TODO wolfs - schedule fingerprinting separately, it can be done without having the project lock 
//  Note: don't actually remove this in 6.0, the deprecation is here to encourage people to use ObjectFactory instead. Just remove the overload and the nag and leave the method here
//  todo: consider multithreading/multiprocess issues   Teamcity has the concept of a "wave" of messages   where each thread/process uses a unique wave id 
//  TODO - reduce duplication with Swift binary 
// TODO: move bootclasspath to platform 
//  TODO: This should be modeled as a source set 
//  TODO - the project model should be reachable from ProjectState without another lookup 
//  TODO: Locate this tool from a tool provider   hide main symbol 
//  TODO: This prefix shouldn't be hardcoded 
//  TODO:LPTR Remove projection for reference node   This shouldn't be needed, but if there's no actual value referenced, model report can only   show the type of the node if we do this for now. It should use the schema instead to find   the type of the property node instead. 
//  TODO:ADAM - switch the logging back on. Need to make sending messages from daemon to client async wrt log event generation                  LOGGER.debug("Ignoring failure to extract throwable stack trace.", ignored); 
//  TODO: Need failure handling, e.g., cannot clone repository 
//  TODO This should actually compare a SortedSet 
//  TODO - validate that it's a valid model path 
//  The visual C++ tools use the path to find other executables   TODO:ADAM - restrict this to the specific path for the target tool 
//  TODO:pm Move this to WARN level once we fixed maven-publish, see gradle/gradle#1662 
//  TODO:ADAM - This isn't quite right   MB: I think ^ refers to the first capable classloader loading the class. This could be different   from the loader which originally loaded it, which could pose equality and lifecycle issues. 
//  TODO:Cedric This is an approximation: when a component wants to compile against the assembly of   a library (not the jar), then we should give it the *stubbed classes* instead of the raw classes. However:   - there's no such thing as a "stubbed classes assembly"   - for performance reasons only the classes that belong to the API are stubbed, so we would miss the classes that do not belong to the API   So this makes the UsageKind.API misleading (should this be COMPILE?).
/*  * An _immutable_ view of the variant of a component. * * TODO - this should replace or merge into VariantResolveMetadata, OutgoingVariant, ConfigurationMetadata  */
//  because it's a capability conflict resolution, there is only one candidate per module identifier   so we can be lenient wrt the version number used in the descriptor, which helps whenever the user   used the convenience "notation" method 
//  TODO improve lookup by reusing AvailableJavaHomes testfixture   for now we play it safe and just return false; 
//  TODO - should decorate 
//  TODO removing this stuff from the store should be handled through some sort of decoration 
//  TODO: fix the way we work out which exception is important: TaskExecutionException is not always the most helpful
//  TODO: do we need any factories here? 
//  TODO:HH This should be moved back into languageNative project 
//  TODO make this work with pending elements
//  TODO: Ultimately, this should be some kind of 3rd party dependency that's visible to dependency management.
//  TODO: These should come from somewhere else, probably 
//  TODO: This should become smarter and move into the compiler infrastructure instead     of the task, similar to how the other native languages are done.     For now, this does a rudimentary incremental build analysis by looking at     which files changed . 
/*  * A minimal resolver, which does not use any native services. Used during bootstrap only. You should generally use {@link FileResolver} instead. * * TODO - share more stuff with AbstractFileResolver.  */
// a list instance is needed here, as org.gradle.internal.snapshot.ValueSnapshotter.processValue() does not support  serializing Iterators directly 
//  TODO:lptr this should be added only if the scan plugin is applied, but SnapshotTaskInputsOperationIntegrationTest   TODO:lptr expects it to be added also when the build cache is enabled (but not the scan plugin) 
//  TODO: We should set this for macOS, but this currently breaks XCTest support for Swift   when Swift depends on C++ libraries built by Gradle. 
//  TODO:lptr When we drop Java 8 support we can switch to using ClassLoader.getName() instead of storing our own
//  TODO: Provide an abstraction for accessing resources within the same module (maven-metadata, directory listing, etc)   That way we can avoid passing `ivyPatterns` and `artifactPatterns` around everywhere 
//  TODO:instant-execution - remove kotlin predicate after updating the wrapper
/*      * Closes the tooling API, releasing all resources. Blocks until completed.     *     * <p>May attempt to expire some or all daemons started by this tooling API client. The exact behaviour here is implementation-specific and not guaranteed.     * The expiration is best effort only. This method may return before the daemons have stopped.</p>     *     * <p>Note: this is not yet part of the public tooling API yet.</p>     *     * TODO - need to model this as a long running operation, and allow stdout, stderr and progress listener to be supplied.     * TODO - need to define exceptions.     * TODO - no further operations are allowed after this has been called     * TODO - cancel current operations or block until complete     * TODO - introduce a 'tooling API client' interface and move this method there      */
//  TODO LD use something more stable than a cast here 
//  TODO: Make this more intelligent by matching the attributes of the runtime usage on the variant identities 
//  Workaround for backwards compatibility. Previously, this case would unintentionally cause the method to be invoked on the owner   continue below 
//  TODO - capitalise the target name in the task name   TODO - don't create a launch target for a library 
/*      * Create binaries for test suites. TODO: This should really be a @ComponentBinaries rule, but at this point we have no clue what the concrete binary type is, so everything has to be duplicated in     * specific plugins. See usages for example.      */
//  Did we already consider it as an output after the previous execution? 
//  TODO: To get rid of this, we need a `FunctionalSourceSet` instance here, and that's surprisingly difficult to get. 
//  TODO generic model related super exception? 
//  TODO - this should work for any build, rather than just an included build 
//  Workaround for https://issues.gradle.org/browse/GRADLE-2625 
//  TODO: We basically don't support copying custom Javadoc options
//  TODO: This exists because we detect all available native tool chains on a system (clang, gcc, swiftc, msvc).     Many of our old tests assume that available tool chains can compile many/most languages, so they do not try to   restrict the required set of tool chains.     The swiftc tool chain can build _only_ Swift, so tests that expect to use the swiftc tool chain properly annotate   their requirements with ToolChainRequirement.SWIFTC (or a version-specific requirement).     Our multi-test runner is smart enough to disable tests that do not meet the test's requirements, but since many   of the old tests do not have requirements, we assume the tests require a "C" like tool chain (GCC, Clang, MSVC).     In the future... we want to go back to old tests and annotate them with tool chains requirements.
// we don't handle Variables at the moment because users didn't request it yet  and it would probably push us to add support in the tooling api to retrieve the variable mappings.
//  TODO: VersionSelector should be more descriptive, so it can be directly translated 
//  TODO:LPTR Should be a content-less @InputDirectory 
//  TODO Need a smarter way to map usage to artifact classifier 
/*      * TODO once source compatibility is raised to 1.7, this should be rewritten using the java.nio.FileSystem API,     * which can deal with jars and folders the same way instead of duplicating code.      */
//  TODO - better exception 
// TODO SF this method accepts Closure instance as parameter but does not work correctly for it 
//  TODO find a better way to present this information in the error message   Attempt to mimic Gradle nested exception output 
//  TODO: we should really find a better solution for this...   maybe we could use a FilterReader instead of a FilterInputStream? 
//  not fully accurate but a sensible fallback   see http://stackoverflow.com/questions/1288102/how-do-i-detect-whether-the-file-system-is-case-sensitive 
//  TODO not sure if we can clean up the generics here and do less unchecked casting 
//  TODO - deal with more than one header dir, e.g. generated public headers 
//  TODO: projectDependency should be transformed based on defaultProject (and other context) elsewhere. 
//  TODO: This will have to be changed when we support setting credentials directly on the authentication 
//  TODO: this is an approximation as we know swift currently supports only 64-bit runtimes - eventually, we'll want to query for this 
// TODO the async work tracker should wait for children of an operation to finish first.  It should not be necessary to call it here. 
//  TODO - reduce duplication with C++ binary 
//  TODO: This should be more specific to just the tasks that create the class files? 
//  TODO: we aren't considering the filter 
//  TODO - exception when type cannot be created 
//  TODO bind with the sourceCompatibility property   TODO link to runtime configuration ? 
//  We track this as an input since the Scala compiler output may depend on it.   TODO: This should be replaced by a property in the Scala toolchain as soon as we model these. 
//  TODO:LPTR Instead of the first view property, we should figure out these parameters from the actual property 
//  TODO - DSL documentation? 
//  TODO We can probably now support more versions with `strictly` but we'll need more test coverage 
//  TODO: move this to ObjectFactory 
// there are some exceptions attached to the suite. Let's make sure they are reported to the user.  this may happen for example when suite initialisation fails and no tests are executed 
//  TODO: Does a static library have runtime elements? 
//  TODO:LPTR This ignores changes to Project.buildDir after model node has been created
//  TODO:LPTR Remove projection for reference node   This shouldn't be needed, but if there's no actual value referenced, model report can only   show the type of the node if we do this for now. It should use the schema instead to find 
//  TODO: what if this errors? 
//  TODO:instant-execution - remove this 
//  TODO: remove this special case 
//  Need to move those implicit JVM args that contain a space to the Gradle command-line (if possible)   Note that this isn't strictly correct as some system properties can only be set on JVM start up.   Should change the implementation to deal with these properly
//  Doesn't really make sense 
// "type-only model reference of type '%s'%s is ambiguous as multiple model elements are available for this type:%n  %s (created by %s)%n  %s (created by %s)",
//  TODO - exceptions thrown here should point to some extensive documentation on the concept of class rule sources 
//  TODO - move this to a base plugin   Setup the dependency on the main binary   This should all be replaced by a single dependency that points at some "testable" variants of the main binary 
//  TODO - should we support this?   Adds a void $propName(Object value) method that simply delegates to the converting setter method 
//  TODO: Send a message to workers to change their log level rather than stopping 
//  TODO - this should also be using the decorating instantiator but cannot for backwards compatibility 
//  TODO - visit the contents of this collection instead.   This is just a super simple implementation for now 
//  TODO We should get rid of this reflection (will need to reimplement the parser to act on the metadata directly) 
//  TODO: do we want to keep using SourceDirectorySet in the new API?   would feel more natural if dirs could be added directly to LanguageSourceSet   could also think about extending SourceDirectorySet 
//  TODO:LPTR This should be removed once BinaryContainer is a ModelMap   We need to also implement all the interfaces of the delegate type because otherwise   BinaryContainer won't recognize managed binaries as BinarySpecInternal
//  todo - stream serialised value to file   todo - handle hash collisions (properly, this time)   todo - don't store null links to child blocks in leaf index blocks   todo - align block boundaries   todo - thread safety control   todo - merge small values into a single data block   todo - discard when file corrupt   todo - include data directly in index entry when serializer can guarantee small fixed sized data   todo - free list leaks disk space   todo - merge adjacent free blocks   todo - use more efficient lookup for free block with nearest size 
//  TODO - binaries aren't an input to this rule, they're an input to the action 
/*  * Specifies how to build and where to place a native executable file. * * <p>TODO:HH resolve naming conflict with existing NativeExecutableSpec</p>  */
//  This should be replaced by some stronger modelling and made open rather than hardcoding a set of source languages here 
//  We moved the API back into internal, so this isn't really correct. 
//  TODO - refactor this action out so it can be unit tested 
//  TODO - error if there are unknowns? 
//  TODO:ADAM - using a UUID means we create a ClassLoader hierarchy for each daemon process we talk to. Instead, use the spec to decide whether to reuse a ClassLoader 
//  TODO - should supply and check for the same parameters as passed to reserveNewClient() 
//  TODO - should use the _install_ task for an executable 
//  Implement this if you need to specify individual toolchains via "org.gradle.integtest.versions" 
//  todo annotate as required 
//  TODO: CC cannot enable this assertion because moduleSource is not serialized, so doesn't appear in the deserialized form  assert metadata.equals(forceRead);
//  todo An ExcludeRule is a value object but we don't enforce immutability for DefaultExcludeRule as strong as we   should (we expose the Map). We should provide a better API for ExcludeRule (I don't want to use unmodifiable Map).   As soon as DefaultExcludeRule is truly immutable, we don't need to create a new instance of DefaultExcludeRule.
//  production code should handle these exceptions more gracefully 
//  TODO - this isn't quite right 
//  The isEmpty check is not required, might look innocent, but Guava's performance bad for an empty immutable list   because it still creates an inner class for an iterator, which delegates to an Array iterator, which does... nothing.   so just adding this check has a significant impact because most components do not declare any capability 
// TODO SF add quotes to both formats (there will be *lots* of tests failing so I'm not sure if it is worth it). 
//  TODO(ew): Consider whether this belongs in BuildProgressArea or here 
//  TODO It would be better if these were added via a separate managed view, rather than hard coded. 
//  Shouldn't really be here. Currently this goal is used by {@link #bindAllReferences} which also expects the subject to be bound 
//  This doesn't work.   It used to because at the bottom of the hierarchy chain the object implemented methodMissing().   However, our normal “decorated” classes do not do this so it is not realistic. 
//  TODO: This returns the wrong public type for domain objects   created with the eager APIs or added directly to the container.   This can leak internal types.   We do not currently keep track of the type used when creating   a domain object (via create) or the type of the container when   a domain object is added directly (via add). 
//  TODO:LPTR What happens when the property has multiple accessors in the same role but with different type? 
//  TODO: Should not be ignoring DEPENDENCY_ATTRIBUTE modifications after resolve
// TODO this should be a container of platforms 
/*      * TODO - hack to avoid classloading issues. We should use org.gradle.util.TextUtil     *     * Currently we can't use it reliably because it causes CNF issues with cross version integration tests running against tooling api < 1.3.      */
//  TODO: else, verify that the build definition is the same 
//  TODO - make this lazy 
//  TODO should this take Object? 
//  Used by the Kotlin-dsl base plugin   TODO - remove this 
//  TODO - sources is not actual an input to binaries, it's an input to each binary
//  TODO - mix in Groovy support using bytecode decoration instead   TODO - validate closure parameters to check they are within bounds
// TODO this class attempts to mimic the behavior of the output of mvn help:effective-pom  instead of this class we should walk the maven project object model (instead of parsing the xml!)
/*      * we have a name foo.bar and an import foo.foo. This means foo.bar is possibly     * foo.foo.bar rather than foo.bar. This means to cut at the dot in foo.bar and     * foo for import      */
//  TODO - remove this once the above is removed 
/*  * TODO only here because Kotlin DSL uses this. Please remove once that is fixed.  */
//  Hold the lock while creating the connection. Not generally good form.   In this instance, blocks other threads from creating the connection at the same time 
//  Currently retains strong references to types that are not loaded using a VisitableURLClassLoader   This is fine for JVM types, but a problem when a custom ClassLoader is used (which should probably be deprecated instead of supported) 
// We might fail hard here on the assumption that something weird happened to the daemon.  However, since we haven't yet started running the build, we can recover by just trying again... 
//  todo: improve configuration of reports 
//  TODO: turn into Set? 
/*             There's a potential problem here in that DisconnectableInputStream reads from input in the background.            This won't automatically stop when the process is over. Therefore, if input is not closed then this thread            will run forever. It would be better to ensure that this thread stops when the process does.          */
//  TODO - need to do a better job of routing messages when there are multiple endpoints. This is just going to forward all queued messages to the first   waiting endpoint, even if there are multiple waiting to do work 
//  Create test suite component   TODO - Reuse logic from Swift*Plugin   TODO - component name and extension name aren't the same   TODO - should use `src/xctest/swift` as the convention?   Add the test suite and extension 
//  Do not use this. It's here because some of the services this type needs are not easily accessed in certain cases and will be removed ay some point. Use one of the other methods instead 
//  Workaround for when the task is given an input file that doesn't exist
//  TODO: Figure out how to get rid of origin scope id in snapshot outputs step 
//  get rid of the ivy [] token, as [ ] are not valid URI characters 
//  todo remove this property once configuration can handle normal file system dependencies 
//  This piece of ugliness copies the JAXP (ie XML API) provider, if any, from the system ClassLoader. Here's why:     1. When looking for a provider, JAXP looks for a service resource in the context ClassLoader, which is our isolated ClassLoader. If our classpath above does not contain a      provider, this returns null. If it does contain a provider, JAXP extracts the classname from the service resource.   2. If not found, JAXP looks for a service resource in the system ClassLoader. This happens to include all the application classes specified on the classpath. If the application      classpath does not contain a provider, this returns null. If it does contain a provider, JAXP extracts the implementation classname from the service resource.   3. If not found, JAXP uses a default classname   4. JAXP attempts to load the provider using the context ClassLoader. which is our isolated ClassLoader. This is fine if the classname came from step 1 or 3. It blows up if the      classname came from step 2.     So, as a workaround, locate and make visible XML parser classes from the system classloader in our isolated ClassLoader.     Note that in practise, this is only triggered when running in our tests 
//  TODO Will be implemented without hard-coded access to `$GRADLE_USER_HOME/gradle.properties` for 5.1 in #6084 
//  TODO: This hard-codes the assumption of a 'compile' configuration on the external module   Instead, we should be creating an API configuration for each resolved module 
//  This is a legacy quirk.   Scans use this to determine that progress logging is indicating start/finish of tasks.   This can be removed in Gradle 5.0 (along with the concept of a “logging category” of an operation) 
//  See the comment in #taskCompleted, above, for why this is here and why this is a problem 
//  TODO: CC the special casing of virtual platform should go away if we can implement   disambiguation of variants for a _single_ component 
//  TODO This should actually extend from the api dependencies, but since Swift currently   requires all dependencies to be treated like api dependencies (with transitivity) we just   use the implementation dependencies here.  See https://bugs.swift.org/browse/SR-1393. 
//  TODO: Replace this with `JvmAssembly` once that type is public 
// this is not very nice might be good enough until we get rid of ResolvedConfiguration and friends  avoid traversing the graph causing the full ResolvedDependency graph to be loaded for the most typical scenario 
//  Not implemented - not yet required. Please implement if required 
//  TODO: Extract the non-filesystem parts of the FileSystemChangeWaiter into a separate interface   This isn't really tied to file system watching, we just need another type of waiter. 
/*  * TODO: This class sources Gradle metadata files, but there's no corresponding ModuleComponentResolveMetadata for this metadata yet. * Because of this, we will generate an empty instance (either a Ivy or Maven) based on the repository type.  */
//  TODO - this isn't correct, assumes that a side effect is to add the element 
//  TODO: `classes` should be a little more tied to the classesDirs for a SourceSet so every plugin   doesn't need to do this. 
//  This is really not cool, but we cannot rely on `readAttributes` because it will   THROW AN EXCEPTION if the file is missing, which is really incredibly slow just   to determine if a file exists or not. 
// TODO: use Twirl library instead? 
//  DO NOT USE THIS CONSTRUCTOR DIRECTLY   It's only there for backwards compatibility with the Nebula plugin 
//  Groovy does something very strange here.   For some reason (probably because the class is Java), it won't employ any dynamism.   Even implementing invokeMethod at the Java level has no effect. 
//  TODO Change to Set? 
//  TODO(daniel): Should support in a better way multi file invocation.   Override this method to have multi file invocation 
//  @Todo: refactor this task configuration to extend a copy task and use replace tokens 
//  TODO:REUSE Refactor after removing reuse   This is horrendously bad.   We need to set the platform, _before_ the @Defaults rules of NativeBinaryRules assign the toolchain.   We can't just assign the toolchain here because the initializer would be closing over the toolchain which is not reusable, and this breaks model reuse.   So here we are just closing over the safely reusable things and then using proper dependencies for the tool chain registry.   Unfortunately, we can't do it in the create action because that would fire _after_ @Defaults rules.   We have to use a @Defaults rule to assign the tool chain because it needs to be there in user @Mutate rules   Or at least, the file locations do so that they can be tweaked.   LD - 5/6/14 
//  Check enum equality without checking loading ClassLoader.   There is a slight risk that two versions of the same enum class are compared,   (that's why classloaders are used in equality checks), but checking both name   and ordinal should make this very unlikely. 
// TODO version - could be different from main artifact's version 
//  Should really be a parameter to the 'withContent' methods or baked into the accessor 
//  TODO - error messages   TODO - display names for this container and the Provider implementations 
//  Not subtypes as we don't know whether they are immutable or not 
//  TODO: This check should really be done in the compiler process 
//  Forced dependencies are only supported for enforced platforms, so it is currently hardcoded.   Should we want to add this as a first class concept to Gradle metadata, then it should be available on the component variant   metadata as well. 
//  TODO Remove this attempt to guess packaging from artifacts. Packaging should come from component, or be explicitly set.
//  Was it created during execution? 
//  TODO: Deprecate and eventually prevent these mutations when already resolved
//  TODO: this doesn't quite guarantee immutability, because the source may be holding closures that are doing god knows what 
//  TODO: Get rid of destinationDirectory entirely and replace it with a   collection of link outputs 
//  TODO: Migrate this to the worker API once the FileSystem and FileOperations services can be injected
//  TODO:LPTR Have the paths of the projects serve as @Input maybe? 
//  This could be handled, just not implemented yet 
//  TODO: Wrong, using the full classpath of the application
//  this is not very beautiful but at some point we will   get rid of ArchiveOutputStreamFactory in favor of the writable Resource 
// this if is a bit cheesy but 1-letter classname surely means a generic type and the warning will be useless 
/*      * Creates an instance of the given task type without invoking its constructors. This is used to recreate a task instance from the instant execution cache.     *     * TODO:instant-execution - review this      */
//  TODO - this selection should happen per target platform
//  TODO Resolve the JavaPlatform and ScalaPlatform from their PlatformResolvers, rather than instantiating directly
//  TODO should include some context on what the rule was trying to do (create vs. mutate) 
//  TODO: Get this from somewhere else? 
//  This is here to trigger creation of the ShutdownCoordinator. Could do this in a nicer way 
//  TODO:pm Move this to RunAsBuildOperationBuildActionRunner when BuildOperationWorkerRegistry scope is changed 
// TODO - outputEventListener and buildStandardInput are per-build settings  so down the road we should refactor the code accordingly and potentially attach them to BuildActionParameters 
//  Platform specific arguments   TODO: Need to lazily configure compile task
//  If this occurs while running gradle or running integration tests, it is indicative of a problem.   If this occurs while running unit tests, then either use the NativeServicesTestFixture or the '@UsesNativeServices' annotation. 
//  Ugly, but there are a few places where we need to instantiate a JavaDebugOptions and a regular ObjectFactory service   is not available. 
// TODO adding the parent project first because the converter needs it this way ATM. This is oversimplified.  the converter should not depend on the order of reactor projects.  we should add coverage for nested multi-project builds with multiple parents. 
//  there's a possibility that this listener is called concurrently with   the build finished listener. If the message happens to be a graceful expire   one, then there's a large risk that we create a deadlock, because we're trying to   remove the same listener from 2 different notifications. To avoid this, we just   set the reference to null, which says that we're taking care of removing the listener
//  TODO: Need to track version/implementation of ar tool.
//  TODO Change this to only add SWIFT_API artifacts and instead parse modulemaps to discover compile task inputs
//  Rough implementation to get something to work 
//  TODO: This is not a great paradigm for creating a temporary directory.   See http://guava-libraries.googlecode.com/svn/tags/release08/javadoc/com/google/common/io/Files.html#createTempDir%28%29 for an alternative. 
//  TODO: This should be part of the cached result? 
//  Implementation is currently dumb, can be made smarter 
//  TODO:RBO Clarify what it means and what's possible to do with it.   TODO:RBO E.g. Can the return value always be used to resolve back to the identified component? If so, how?   TODO:RBO Wouldn't it be better to define a proper type for project/model paths?
//  TODO: This can throw a NPE: will need an identifier for a variant without an owning component 
//  This implementation is broken. It does not consider include and exclude patterns 
//  TODO LJA Using the root as the NodeState here is a bit of a cheat, investigate if we can track the proper NodeState 
/*      * Produces an ArtifactIdentifier for this artifact (it's not actually an identifier - just a bucket of attributes).     * TODO:ADAM - remove this      */
//  TODO - property order needs to be deterministic across JVM invocations, i.e. sort the properties by name
//  TODO - this will leave invalid types in the cache when it fails 
//  Should repositories be able to participate in incremental?   At the least, they may be able to express themselves as output files   They *might* have input files and other dependencies as well though   Inputs: The credentials they need may be expressed in a file   Dependencies: Can't think of a case here 
//  TODO - have to do much better here 
//  TODO: these should be moved off to a separate type
//  TODO:LPTR This should be @Defaults @Each PlayApplicationBinarySpecInternal 
//  TODO we should refactor this to general, compatibility mapping solution, as we have it for model loading. See HasCompatibilityMapping class. 
//  This is a heuristic, more than truth: it is possible that the 2 long hashs   are identical AND that the sizes of collections are identical, but it's   extremely unlikely (never happened on test cases even on large dependency graph) 
//  failing, seems to be that set method override doesn't work for iterables - GRADLE-2097  assertThat(call("{ bean, list -> bean.things(list) }", bean, new LinkedList<Object>()), nullValue());  assertThat(bean.getThings().size(), equalTo(0)); 
//  TODO: This isn't quite right. We're leaking the _implementation_ type here.  But for tasks, this is usually right. 
//  TODO return a richer data structure that provides meta data about how the source was found, for use is diagnostics 
//  The configuration has been used in a resolution, and it is an error for build logic to change any dependencies,   exclude rules or parent configurations (values that will affect the resolved graph).
//  This method is sometimes called directly (i.e. not via an operation executor).   In these cases, the context is null. 
//  TODO:LPTR What is with the "metaClass" property here? 
//  TODO this doesn't belong here, that java plugin should add an extension to this guy with this 
//  need to make this better 
//  workaround for bug in TestNG 6.2 (apparently fixed in some 6.3.x): listener is notified twice per event 
//  TODO: This isn't correct. This means that we've detected a cycle while determining the execution plan, but the graph walker did not find one.   https://github.com/gradle/gradle/issues/2293 
//  TODO:Cedric The following validation should in theory happen in its own rule, but it is not possible now because   there's no way to iterate on the map as subject of a `@Validate` rule without Gradle thinking you're trying to mutate it
// TODO: Simplify this class by busting it up into a locator for legacy SDKs and locator(s) for Windows 8 kits 
//  TODO - this is all terribly lame. We need some proper reporting here (which means implementing Reporting). 
//  TODO - implement these cases 
//  TODO(daniel): Swift compiler should extends from an abstraction of NativeCompiler (most of it applies to SwiftCompiler) 
//  TODO: should use target platform to make this decision 
//  TODO There should be a more explicit way to execute an action against existing services 
//  Have an unprocessed/new selector for this module. Need to re-select the target version. 
//  TODO: Assets should probably be a source set too 
// TODO:instant-execution - use the class generator instead 
//  TODO - implement this by moving this resolver to live alongside the external resolvers 
//  TODO This should use the same `MutationValidator` infrastructure that we use for other mutation types 
//  Is the cached version still current? 
//  TODO: we should just cache these classloaders and eject/stop them when they are no longer in use 
//  TODO - should be >= self closed 
//  TODO:LPTR We should collect all source sets in the project source set, however this messes up ComponentReportRenderer 
//  TODO Only log expired workers count, log their "identity" once they are nameable/describable 
//  TODO This is not nice: work out a better way to collect the plugin requests from invoking the plugins block. 
//  TODO This is a brain-dead way to ensure that the reference project's model is ready to access 
//  TODO - this is not quite right, eg given *,!A->A;*,!B->B the result should be B->A and A->B but will in fact be B-> and A-> 
//  The very first event starts the Initializing phase   TODO - should use BuildRequestMetaData to determine the build start time 
//  one should really avoid using this constructor as it is totally inefficient   and reserved to spurious cases when the components have dots in names   (and this can happen if a task name contains dots)
//  TODO - bust up this hierarchy and compose using interfaces instead 
//  Simulate a stuck worker. There's probably a way to inject this failure... 
//  TODO - this should be an outgoing variant of the component under test 
//  Add an install task   TODO - should probably not add this for all executables? 
//  TODO:lptr why don't we check runningNodes here like we do in hasNodesRemaining()? 
//  Dumb terminal doesn't support ANSI control codes.   TODO - remove this when we use Terminal rather than JAnsi to render to console 
/*  * An amount is an immutable value of some quantity, such as duration or length. Each amount has a decimal value and associated units. * * TODO - need to sort out scaling when dividing or converting between units.  */
//  Trailing slash in name indicates that entry is a directory 
//  allow organisation synonyms, like 'org' or 'organization' 
//  No include expression, ignore 
//  rc-1, 1.0 
//  noop 
//  If node was previously traversed, need to remove outgoing edges. 
//  Simple scheme is to just present the public type of the container 
//  A nullable reference 
//  Always publish `ComponentWithVariants` 
/*      * Maven supports wildcards in exclusion rules according to:     * http://www.smartjava.org/content/maven-and-wildcard-exclusions     * https://issues.apache.org/jira/browse/MNG-3832     * This should be used for non-transitive dependencies      */
//  Returns an approximation of a composite variant 
//  We have some batched up conflicts. Resolve the first, and continue traversing the graph 
// Each build request carries it's own log level and it is used during the execution of the build (see LogToClient) 
//  Implementation note: It is only necessary to override visit methods   for AST nodes that reference statements. For ClosureExpression we rely on   the assumption that it always references a BlockStatement and hence our   visitBlockStatement() method gets called.
//  Workspace scope is expected to be persisted in the project cache dir since 4.0. 
//  register eagerly so stop() is triggered when services are being stopped 
//  may be we have C[k1:v1] -> should become (C)([k1:v1]) 
//  Construct a new CompilerOptions class 
//    Add `publicType`   
//  Swap the Foreground and Background bits. 
//  Configure the component 
//  This is called from the download thread. Only forward the events when not cancelled 
//  This insanity is needed for the case where someone calls pluginContainer.add(new SomePlugin())   That is, the plugin container has the instance that we want, but we don't think (we can't know) it has been applied
//  Register the project's source set output directories 
// no scheme means someone passed a relative url. In our context only file relative urls make sense. 
//  Sha256 is not part of core-services (i.e. no Hashing.sha256() available), hence we use plain Guava classes here. 
//  anything other than PropertyExpressions or   VariableExpressions will stop resolving 
//  If a delimiter; if dot, swap to groupToken, otherwise the rest belongs in qualifier. 
//  GENERATE ConfigureUtil.configureUsing(v); 
//  Ignore the rule if it expects Ivy metadata and this isn't an Ivy module 
//  Missing files can be ignored 
//  Matches: task <identifier> <operator> <expression> | task <string> <operator> <expression>   Map to: passThrough(task('<identifier>') <operator> <expression>) | passThrough(task(<string>) <operator> <expression>) 
//  No overlap no cry 
//  CopyProcessingSpec overrides to broaden return type 
//  Assume individual files have no dependencies 
//  For testing 
//  a local component that provides a JVM assembly 
//  we hold other project locks that we should release first 
//  Retain buffer if there is capacity in the queue, otherwise discard 
//  Sort source files to work around https://issues.apache.org/jira/browse/GROOVY-7966 
//  No macro includes were seen in the include graph of this file, so the result can be reused if this file is seen again 
//  Use an injected ObjectFactory to create a Server object 
//  TODO:ADAM - switch the logging back on.                  LOGGER.debug("Ignoring failure to extract throwable cause.", ignored);
//  On Windows, / and \ are separators, on Unix only / is a separator. 
//  Discard the body when the expression is not resolvable 
//  GROOVY-4043: Do this check up the hierarchy, if needed 
//  TODO - add stripped symbols to the installation
//  Matches: task <identifier>(<options-map>) <closure> 
//  Take a snapshot while holding lock 
//  TODO - all this matching stuff is constant for a given DependencyMetadata instance
//  -----------------------------------------------   ---- Delegate CopySpec methods to rootSpec ----   ----------------------------------------------- 
//  Matches: task <identifier> <closure> 
// TODO move to base-services once the ProgressLogger dependency is removed
//  Only for relative positioning 
//  Capture changes in execution outcome 
//  Mark this listener type as being notified 
//  Register as a 'logger' to support this being replaced by build logic. 
//  Fallback to failing the task in case we don't know anything special   about the error 
//  Notify caches that lock is to be released. The caches may do work on the cache files during this 
//  Don't list versions for gradleMetadata if maven-metadata.xml will be checked. 
//  since we have B and want to get A we start with the most   outer class, put them together and then see if that does   already exist. In case of B from within A$B we are done   after the first step already. In case of for example   A.B.C.D.E.F and accessing E from F we test A$E=failed,   A$B$E=failed, A$B$C$E=fail, A$B$C$D$E=success 
//  not supported by javax.xml.transform.Transformer; use two spaces instead 
//  Short circuit logic when only 2 candidates 
//  In a similar way to Ivy, Maven may use other hosts for additional artifacts, but not POMs 
//  TODO get normal resolving to set declaring class
//  copy in case any actions mutate the store 
//  we would normally log at a lower level than lifecycle, but the Ant message priority is actually higher   than (or equal to) the set lifecycle log level 
//  producer doesn't declare anything, so we assume that it only provides the implicit capability 
//  Source dir already at the start of the path, just use the include path 
//  Configuration artifacts are determined locally 
//  Can discard the state required to create instance 
//  For stats we don't really care about thread safety 
/* Mutable */
//  No parent, we're done 
//  Skip, visitor is not interested 
//  complete cancelling key 
// noinspection OptionalGetWithoutIsPresent 
//  library, albeit only for selected classes that run a high risk of being statically referenced from a transform.
//  GENERATE public <type> <getter>() { return <field> } 
//  GENERATE private DynamicObject dynamicObjectHelper 
//  Always treat as non-empty 
//  the type of the property node instead. 
//  If the failure handler rethrows exception, then execution of other nodes is aborted. (--continue will collect failures) 
// exclude rules for a dependency specified in gradle DSL 
//  Create a processor that processes events in its own thread 
//  Only consider one candidate, because matchesUniqueVersion means that there's no ambiguity on the version number 
//  Not required, but Guava's performance bad for an empty immutable list 
/*  unsupported by this transformer  */
//  Always schedule the generation task after the clean task 
//  If there's more than one module, merge them into a module set 
//  some impls support this but not factory.setAttribute("indent-number") 
//  If any of the child strategies don't expire the daemon, the daemon will not expire.   Otherwise, the daemon will expire and aggregate the reasons together. 
// it means the registry didn't exist yet 
//  not supported 
//  If there is a transform for the language into one of the component inputs, add a default source set 
//  Allows individual identification for debugging 
//  only print first Gradle script stack trace element 
//  Finalizing here, as we need this to run after any 'assembling' task (jar, link, etc) is created.   TODO: Convert this to `@BinaryTasks` when we model a `NativeAssembly` instead of wiring compile tasks directly to LinkTask 
//  Never use empty settings when the settings were explicitly set 
//  Need to double check that the target still has hard edges to it 
//  We will only add dependencies to the leaves if there is such a published module 
//  Don't bother searching remotely 
//  Disallow classes from Groovy Jar that reference external classes. Such classes must be loaded from astTransformClassLoader,   or a NoClassDefFoundError will occur. Essentially this is drawing a line between the Groovy compiler and the Groovy 
//  When a Provider is used as a task dependency (rather than as a task input), need to unpack the value 
//  Metadata builder uses mutable project state, so synchronize access to the project state 
//  This special case is for Maven snapshots with Gradle Module Metadata when we need to remap the file name, which   corresponds to the unique timestamp, to the SNAPSHOT version, for backwards compatibility 
//  Part of a strongly connected component (ie cycle) - move values to root of the component   The root is the first node of the component we encountered 
//    Add `getName()`   
//  Remove all the classes other than the main class 
//  Necessary for Groovy compilation to pick up output of regular and joint Java compilation,   and for joint Java compilation to pick up the output of regular Java compilation.   Assumes that output of regular Java compilation (which is not under this task's control) also goes   into spec.getDestinationDir(). We could configure this on source set level, but then spec.getDestinationDir()   would end up on the compile class path of every compile task for that source set, which may not be desirable.
//  Call directly on the delegate to avoid some dynamic dispatch 
//  We need to sort here since the file order obtained from the filesystem   can change between machines and we always want to have the same shaded jars. 
//  Check that the object has already been serialized. 
//  This configuration cannot be mutated, but some parent configurations provide artifacts 
// This one should go away once we complete the auto-apply plugins 
/*         Note: Aether implicitly uses a thread pool and tasks to perform transfers,        so we manually propagate the current build operation ref so logging is correctly associated.      */
//  throw new MissingPropertyException(name, <view-type>.class) 
//  GENERATE getInstantiator() 
//  Find the candidates with the highest base version 
//  Hold the lock until we actually start accepting connections for the case when stop is called from another   thread while we are in the middle here. 
//  the platform itself is greater than the forced version 
//  GENERATE services.get(ObjectFactory.class) 
//  Replace result if we fail on warning 
//  Find and remove common prefix 
//  Serialize the worker implementation classpath, this is consumed by GradleWorkerMain 
//  else, might be a link which points to nothing, or has been removed while we're visiting, or ... 
//  Try to configure an element 
/*      * Returns Whether the transformer can transform     * these arguments at all.      */
//  Do not check for opaque properties when implementing PropertyMixIn, as this is expensive 
//  This does almost the same thing as passing through DesugaredAttributeContainerSerializer / DesugaringAttributeContainerSerializer.   Those make some assumptions about allowed attribute value types that we can't - we serialize everything else to a string instead. 
//  We don't adjust the column value as in the event we unwrap, we want to keep correctness 
//  see if the grammar if out-of-date by way of its importVocab 
//  only way I know of to determine current log level 
//  TODO: Reuse more of CommandlineActionFactory
//  Serialize the actual security manager type, this is consumed by BootstrapSecurityManager 
//  The accumulated exclusions that apply to this edge based on the path from the root 
// prefix internal fields with _ so that they don't get into the way of propertyMissing() 
//  TODO validate that the plugin accepts this kind of argument
//  We must be on some Unix variant, including Cygwin or MSYS(2) on Windows... 
//  TODO(ew): inject BuildOperationIdentifierRegistry instead of static use 
//  Guard against TestNG calling this hook more than once with the same testClass.   See https://github.com/cbeust/testng/issues/1618 for details. 
//  Parallel configuration 
//  Should not reach this point as this is validated in the test framework implementation - just propagate the failure 
//  consumer expressed no preference, defaults to library 
//  Order is significant. Injection handler should be at the end 
//  https://en.wikipedia.org/wiki/Standard_error 
//  Queue this up for checking again later 
//  All of these field names are really long to prevent collisions with the groovy setters.   Groovy will try to set the private fields if given the opportunity.   This makes it much more difficult for this to happen accidentally.
//  Get any errors from the compiler result 
//  [baseName]-[appendix]-[version]-[classifier].[extension] 
//  Try to infer the effective jvm options for the currently running process.   We only care about 'managed' jvm args, anything else is unimportant to the running build 
//  Add the library and extension 
//  Should use ProjectState instead
//  2. the graph contains first-level dependencies which have been substituted (likely) so we're going to iterate on dependencies instead 
//  Reuse the same version as last build 
//  Used just to test the mechanism 
//  Add incoming artifact transforms 
//  This should live closer to the project itself
//  no daemon process has started yet 
//  Treat everything else as a single file 
//  TODO Add a deprecation warning in Gradle 6.0
//  Convert once, in order to write the Ivy descriptor with _all_ configurations 
//  no outputs file 
//  build tasks without project reference 
//  XCTest executable   Sync the binary to the BUILT_PRODUCTS_DIR, otherwise Xcode won't find any tests 
// supplied java location 
//  If we can't discover the version from the normal metadata, make some assumptions 
//  Create tasks for solutions, projects and filters 
//  this loop builds a name from right to left each name part   separated by "." 
//  No args 
//  Else, continue below 
//  Rename `LinuxMain.swift` to `main.swift` so the entry point is correctly detected by swiftc 
// class results may be created earlier, where we don't yet have access to the start time 
//  Add to the end of the queue, so that we traverse the graph in breadth-wise order to pick up as many conflicts as   possible before attempting to resolve them 
//  Use the index here so we can apply any filters to the realized element 
//  this work has to be done before classes are loaded, otherwise there are risks that   the PermGen space is full before we create the reflection methods 
//  GroovySystem.getMetaClassRegistry() 
//  parallel safe version of Compiler.compilerInterface() 
//  visit the method call, because one of the args may be an input method call 
//  We can't close replaced loaders immediately, because their classes may be used during shutdown,   after the return of the reload() call that caused the loader to be swapped out.   We have no way of knowing when the loader is actually done with, so we use the request after the request   that triggered the reload as the trigger point to close the replaced loader. 
//  Matches: task <method-call> <operator> <expression> 
//  A ∪ (A ∩ B) ∪ (A ∩ C) -> A 
// In case the output event arrives after completion of the test  and we need to have a matching descriptor to inform the user which test this output belongs to  we will use the current parent 
//  generate documentation 
//  This is a hidden property that may be useful to track down issues. Remove when NTLM Auth is solid. 
//  Should not happen when reading from a StringReader 
//  GENERATE private MetaClass metaClass = GroovySystem.getMetaClassRegistry().getMetaClass(getClass()) 
//  If we reach this point it means we have a dependency which doesn't belong to the resolution result   Which can mean two things: 
//  Wrap the processor in an actor, to make it thread-safe 
//  from this point down, logging is sent back to the client 
//  Java source files are supported, too. Therefore we should care about the relative path. 
//  Show any contextual cause recursively 
//  Use an arbitrary ordering when the artifacts have the same public attributes 
//  Other home dir cached and not in use, clean it up
//  We're making an assumption here that the target's plugin registry is backed classLoaderScope.   Because we are only build.gradle files right now, this holds. 
//  Build configuration for GradleWorkerMain 
//  start logging now that the logging manager is connected 
//  First try to resolve the artifacts locally before going remote 
//  Add to the front of the queue, to flush out configurations that are no longer required. 
//  Controls when to disable reading default authentication credentials, should be used in tests only 
//  If the jansi.force property is set, then we force to output 
//  Using the test sources feature introduced in Eclipse Photon 
//  Flaky 
//  Mix in some Groovy DSL support. Should decorate instead 
//  don't care 
//  Service calls have no effect, no need to register them 
//  just serialize as a String as best we can 
//  Create Visual Studio project extensions 
//  See https://issues.gradle.org/browse/GRADLE-1589 
//  Run the build and get the build outcomes model 
//  Done 
//  Reach into meta class to avoid lookup 
//  Windows at least will sometimes throw odd exceptions like java.nio.file.AccessDeniedException   if the file gets deleted while the watch is being set up. 
// verify that the parsed descriptor is the correct parent module. 
//  We need to attach failures on unattached dependencies too, in case a node wasn't selected   at all, but we still want to see an error message for it. 
//  For now, we only create test suites for static library variants 
//  We'll get this when we try to look up "ProgramFilesDir (x86)" on a 32-bit OS 
//  Serialize configuration for the worker process to it stdin 
/*  (non-Javadoc)         * @see org.apache.ivy.plugins.parser.m2.PomDependencyMgt#getVersion()          */
//  Only use this for top level init scripts 
//  Never up to date; we don't understand the data structures. 
//  TODO: Combine these with MutationGuard
//  setup the default configurations used when mapping to resolved versions 
//  A very dumb strategy for invalidating cache 
//  There is a chance we could not attach target configurations previously 
//  Add the Gradle API filter between the user classloader and the worker infrastructure classloader 
//  We need a consistent index here 
//  Object converted = $typeConverter.convert(foo, Float.class, false); 
//  Read body 
//  Mixed case 
//  Always expand empty node 
//  A dependency artifact will be defined if the descriptor specified a classifier or non-default type attribute. 
//  TODO(ew): Consider whether this belongs in Console or here 
//  stream has been closed, don't bother reading anything else 
//  only care about HTTP hosts right now 
//  Call return new <implClass>(param1) 
//  Listen for the end of configuration of the root project of the root build,   and discard buffered notifications if no listeners have yet appeared.   This avoids buffering until the end of the build when no listener comes. 
//  Assume that test has renamed itself (this can actually happen) 
//  Expire recently unused Daemons when memory pressure is high 
//  FindBugs cannot handle missing directories 
//  Only count non-CREATE events, since creation also causes a modification event, unless the event is for a directory. 
//  Retain strong reference 
//  Augment the environment for the execution 
//  Transient, don't serialize all the views that happen to have been visited, recreate them when visited via the deserialized view 
//  some implementation uses null to represent bootstrap classloader   i.e. Object.class.getClassLoader()==null 
//  TaskListenerInternal 
//  Ignore. Currently the actions don't need to run, it's just better if they do   By the time this node is notified that the task in the other build has completed, it's too late to run the action   Instead, the action should be attached to the task in the other build rather than here 
//  Here, we will distribute A ∩ (B ∪ C) if, and only if, at   least one of the distribution operations (A ∩ B) can be simplified 
//  Find the nearest parent up that we care about and use that as the parent. 
//  When the outputs are generated, throw away all state for files that do not live in an append-only cache.   This is intentionally very simple, to be improved later 
//  and class as property 
//  A launchable created by the provider - just hand it back 
//  Must run each action 
//  The other is better, current is not part of result 
//  this shouldn't happen, resolvers should call notFound() 
//  Redirect stderr to stdout when both stdout and stderr are attached to a console. Assume that they are attached to the same console   This avoids interleaving problems when stdout and stderr end up at the same location 
//  get(<type>) 
//  Should get back some kind of reference that can be queried below instead of looking the task up every time 
//  This is the root block. Can have any number of children <= maxChildIndexEntries 
//  There are enough entries in this block and the left sibling to make up 2 blocks, so redistribute   the entries evenly between them 
//  the deployment descriptor already exists; no need to generate it 
/*  (non-Javadoc)         * @see org.apache.ivy.plugins.parser.m2.PomDependencyMgt#getGroupId()          */
//  GENERATE objectFactory.directoryProperty() 
//  Sanitise the exception and report it 
//  https://github.com/gradle/gradle/issues/2319 
//  Return the group to use for the given build operation, searching up the build operation hierarchy for the first group 
//  Split line if a single line goes over 1 MB 
//  Intentionally not the text 
//  in which case we output "" to stay compatible with existing builds that scan the script for it 
//  Resolving a project component can cause traversal to other projects, at which   point we could release the project lock and allow another task to run.  We can't   use a cache loader here because it is synchronized.  If the other task also tries   to resolve a project component, he can block trying to get the lock around the   loader while still holding the project lock.  To avoid this deadlock, we check,   then release the project lock only if we need to resolve the project and ensure   that only the thread holding the lock can populate the metadata for a project.
//  the name is a type so remove it from the scoping   as it is only a classvariable, it is only in   referencedClassVariables, but must be removed   for each parentscope too 
//  Layout 
//  Add any finalizers to the queue 
//  We know all are compatibles, so this is only possible if some disambiguation happens but not getting us to 1 candidate 
//  should this be null?
//  /proc/meminfo is in kB since Linux 4.0, see https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/fs/proc/task_mmu.c?id=39a8804455fb23f09157341d3ba7db6d7ae6ee76#n22 
//  Because the same suffix is used for all decorating class generator instances, share the same cache as well 
//  check if directory is already watched   on Windows, check if any parent is already watched 
//  Should really fail here if sourcesToCompile is not empty: no transform for this source set in this binary 
//  Include the shortest path from each version that has a direct dependency on the broken dependency, back to the root 
//  Ignore the subkey if it doesn't have a folder and version 
// directly printing to the stream to avoid log level filtering. 
/*         The song and dance with Action<Runnable> is to ease testing.        See DisconnectableInputStreamTest      */
//  Add dependencies to the start of the queue 
//  end element marker 
// when 
//  Don't configure anything 
//  Target: arm 
//  Add if absent 
//  GENERATE private ConventionMapping mapping 
//  Initialize Matchers once and then reset them for performance 
//  Project has no publications: simply use the project name in place of the dependency name 
//  only add confs if they are specified. if they aren't, endElement will handle this 
//  This second check is only done so that we can make the difference between an uninitialized rule (never seen before) and   a rule which is not reusable 
//  this.getServices() 
//  Currently visiting the successor node - we're in a cycle 
// for gradle distribution specific dependencies 
//  Handle anyOf first because we don't want to special case it in   every other case 
//  Adds a void $propName(Closure<?> cl) method that executes the closure 
//  Stopping, so result doesn't really matter. 
//  More information: http://blog.jetbrains.com/scala/2014/10/30/scala-plugin-update-for-intellij-idea-14-rc-is-out/ 
//  Configurations are built on-demand, but only once. 
//  We have enough local data to make a comparison, get the remote metadata 
//  we do not resolve a vanilla name starting with a lower case letter   try to resolve against a default import, because we know that the 
//  A launchable synthesized by the consumer - unpack it into a set of task names 
// offset based implementation is only safe up to certain figure  because of the int max value  for large streams/files (huge builds), we need to roll the file 
//  TODO - deal with more than one directory
//  private member: implementation details 
//  Don't inline the Groovy jar as the Groovy “tools locator” searches for it by name 
//  TODO:ADAM - switch the logging back on.                  LOGGER.debug("Ignoring failure to serialize throwable.", ignored);
//  min chunk size 4kB, max size 1MB 
// for updates to private JDK caches of the environment state 
//  Set the system properties and use this process 
//  Was it updated during execution?
//  Foreground daemon cannot be 'told' what's his startup options as the client sits in the same process so we will infer the jvm opts from the inputArguments() 
//  round to nearest second 
//  this.field = value 
//  Configure the included build to discover available modules 
//  Initialize SSLContext 
//  J flags can not be set in the option file   add additional option files 
//  use the max heap as an approximation 
//  Collect artifact sets in a list, using the id of the set as its index in the list 
//  If no errors, get the compiled source and write it to the destination file 
//  For now, required and preferred are treated the same 
//  Does not need to be redrawn if component is out of bound 
//  Prevent construction 
//  the removal of the method will be reported   the removed methods will be reported   the added methods will be reported 
/*              * We know that DefaultScript & friends don't have user-visible nested types,             * so don't try to look up nonsensical types like org.gradle.Script#sourceCompatibility              */
//  We don't know what the type is - let Guava take care of it. 
//  Query the declared methods of the meta class 
//  check interfaces at this level first 
//  Could be different to ids in the requests as they may be unqualified 
//  Could potentially also look whether we have the details for an ancestor directory tree   Could possibly infer that the path refers to a directory, if we have details for a descendant path (and it's not a missing file) 
//  set up a configuration named 'antlr' for the user to specify the antlr libs to use in case   they want a specific version etc. 
//  <class>.getDeclaredMethod(<getter-name>) 
//  This will propagate through the graph and prune configurations that are no longer required. 
// by keying the failures only by 'requested' we lose some precision  at edge case we'll lose info about a different exception if we have different failure for the same requested version 
//  wait for it to open 
//  Serialize the application classpath, this is consumed by BootstrapSecurityManager 
// TODO: all methods 
//  check module node imports aliases   the while loop enables a check for inner classes which are not fully imported, 
//  this situation occurs when there was no branch defined   in the original dependency descriptor. So the dynamicId   shouldn't contain a branch neither 
//  TODO: Honor changes to build directory 
//  the target component exists, so we need to fallback to the traditional selection process 
//  happens when dispatching to taskdef via createNode() 
//  Retain strong references to the values created for this session 
//  Configure test binary to compile against binary under test 
//  If this task uses a pre-compiled header 
//  only define a Scala SDK for a module if we could create a scalaSdkLibrary 
//  Flushing data split across previous and current appending 
//  GENERATE public DynamicObject getAsDynamicObject() { 
//  TODO: Publishing for test executable?
//  Skip things that aren't files 
//  next character is not a separator 
//  need to run operation under cache lock 
//  Total number of garbage collection events observed in the window 
//  Buckets of dependencies 
//  Force loading to check if method handle is supported 
//  Wrap in generic 'build failed' cross version exception 
//  Otherwise, macro or macro function call 
//  can't be equal otherwise wouldn't have been collected 
//  TODO: Reuse more of BuildActionsFactory
//  Configure test binary to link against tested component compiled objects 
//  Use writeFile because the cache can internally recover from datafile   corruption, so we don't care at this level if it's corrupt 
//  Exit value is unreliable for determination of process failure. 
//  Setup the dependency on the main binary   This should all be replaced by a single dependency that points at some "testable" variants of the main binary 
//  TODO: consider entryAttributes in equals, hashCode, and toString 
//  invokeMethod(this, name, args) 
//  Used by the Kotlin plugin 
//  Last entry, complete the result 
//  a class consisting of a vanilla name can never be   a static inner class, because at least one dot is   required for this. Example: foo.bar -> foo$bar 
//  Copy selection failure 
//  It's almost always the same attribute sets which are compared, so in order to avoid a lot of memory allocation   during computation of the intersection, we cache the result here. 
//  Pull-only always comes first 
//  Look for model(«») (i.e. call to model with anything other than non literal closure) 
//  Authoritative result - don't need to try remote 
//  do some checks up-front, so we avoid creating the queue in most cases   Cases we want to handle:   - List<String>   - Class<?>   - List<Class<?>>   - Integer[]   - ? extends BaseType   - Class<?>[] 
//  create the listener adapters right when the ConsumerOperationParameters are instantiated but no earlier,   this ensures that when multiple requests are issued that are built from the same builder, such requests do not share any state kept in the listener adapters   e.g. if the listener adapters do per-request caching, such caching must not leak between different requests built from the same builder
//  Snapshot the state and notify the caches 
//  Currently not required 
//  TODO: synchronization 
//  We're sorting the names of the configurations and later attributes   to make sure the output is consistently the same between invocations 
//  don't forward 
//  Allow only certain things from the underlying classloader 
//  Don't add if our last record has a `:taskName` status, and this one is `:taskName SOMETHING` 
//  Assume that each artifact points to a unique file, and use the relative path from the project as the id 
//  Matches: task <identifier> <arg-list> | task <string> <arg-list>   Map to: task("<identifier>", <arg-list>) | task(<string>, <arg-list>) 
//  Remove license files that cause collisions between a LICENSE file and a license/ directory. 
//  If no expiration strategies exist, the daemon will not expire. 
//  overwrite rather than append libraries 
//  let's see if we can find a single variant which has exactly the requested artifacts 
//  Check to see if there are any compatible canceled daemons and wait to see if one becomes idle 
//  count every event on OSX 
//  Info about the owning task can be inferred, and we don't provide any further info at this point.   This is largely to expose timing information about executed tasks 
//  Assume 8.1 
//  don't bother trying to handle primitive arrays specially 
//  Attempt to merge with the left sibling 
//  for command file format, see http://docs.oracle.com/javase/6/docs/technotes/tools/windows/javac.html#commandlineargfile   use platform character and line encoding 
//  This can happen on Windows 
//  fully visit the class hierarchy before any interfaces in order to meet the contract   of PropertyDetails.getGetters() etc. 
//  caches 
//  If no current selection for module, just use the candidate. 
//  Running the task requires access to the task's owning project 
//  all the values are equal, but we store all the binaries that match that value   and incrementally build a list of binaries which are excluded because of a better match 
//  store thrown exception 
//  lock on demand 
//  not the same provider 
//  Already completed 
//  Encode as ascii 
//  Another process may have already copied the compiler interface JAR   Avoid copying over same existing file to avoid locking problems 
//  Lock is in use - mark as contended 
//  Handles both junctions and real symlinks (https://www.2brightsparks.com/resources/articles/NTFS-Hard-Links-Junctions-and-Symbolic-Links.pdf) 
//  Should not happen reading from a StringReader 
//  Attaches the owning WorkerExecutor to this factory 
//  Same as the length of this, minus the last element, minus the dot between them 
//  Keep the argument from this expression 
//  Are all file snapshots after execution accounted for as new entries?
//  we must use a String literal here, otherwise using things like Foo.class.name will trigger unnecessary   loading of classes in the classloader of the DefaultIsolatedAntBuilder, which is not what we want. 
//  Create the tasks for each C++ binary that is registered 
//  an exclude all is for modules, not artifacts 
//  Adds a void set$PropName(Object value) method that fails 
//  start element marker 
//  This should only be used for top-level builds 
//  Else, wait for the next update event 
//  Don't care, collect the artifacts later (in the correct order) 
//  Verify that none of the listed "versions" do match another pattern 
//  We've already validated the inputs: should never get here. 
//  Use this thread to process any work - this allows work to be executed using the   worker lease acquired by this thread even if the executor thread pool is full of   workers from other threads.  In other words, it ensures that all worker leases   are being utilized, regardless of the bounds of the thread pool. 
//  Restrict the decorations to those required to decorate all views reachable from this type 
//  cached resolved values 
//  do not fail the build as feature is non-critical 
//  do not remove task descriptors because they might be needed to describe subsequent tasks' dependencies 
//  avoid clone 
//  TODO - take care of this in the selector parser 
//  gradleFileResource type is mapped to AntFileResource 
//  A javac warning, ignore 
//  No support for command file 
//  Configure an implicit variant 
//  Path is an ancestor of this 
//  Copied from Method.isDefault() 
//  This should come from the compiler classpath only 
//  Consider every node that must run before the finalizer 
//  Do not hold lock while removing listener, as the listener may still be receiving events on another thread and will need to acquire the lock to handle these events 
//  Create all of the pipeline eagerly as soon as this is enabled, to track the state of build operations.   All of the pipelines do this, so should instead have a single stage that tracks this for all pipelines and that can replay the current state to new pipelines   Then, a pipeline can be added for each listener as required 
//  Once the node has been discovered, changing the target is not allowed, as it changes the promise of the node as well 
//  fall back to the default logic 
//  A set of progress operations that have been forwarded 
//  First child node 
//  this is necessary to prevent O(n^2) behavior in xcode project loading 
//  GENERATE super.getAsDynamicObject() 
//  Transform closure 
//  Should instead forward these to the task's validation context 
//  Mutable property 
//  DependencyResolutionListener 
//  end of tag marker 
//  Have read some data - let readers know 
//  Adds a void $propName(Closure<?> cl) method that throws MME, to avoid attempts to convert closure to something else 
//  Nexus uses sha1 etags, with a constant prefix   e.g {SHA1{b8ad5573a5e9eba7d48ed77a48ad098e3ec2590b}} 
//  part of a cycle : use the 'minimum' component as the root of the cycle 
//  Look for a realized object 
//  String[] 
//  Also releases any locks 
//  Not already known, attempt to resolve the parent 
// The first argument is not really used but it is very useful in diagnosing, i.e. running 'jps -m' 
// when root suite is completed we stop redirecting 
//  let the delegate resolver select among them 
//  Setting time to 0 because we need API jars to be identical independently of   the timestamps of class files 
//  for storing to field 
//  Property is readable and all getters and setters are abstract 
//  Wait for work to be submitted if the queue is empty and our worker count is under max workers   This attempts to keep up to max workers threads alive once they've been started. 
//  Ignore the decorated service 
//  Add a create task 
//  Directory has something in it already 
//  Source file has not changed and no include files 
//  Do a shallow render of any constraint edges, and do not mark the node as visited. 
//  assert the exit value signals success 
//  should be protected, but use of the class generator forces it to be public 
//  Turn off request logging, this can end up logging OAUTH   tokens which should not ever be in a build log 
//  Ignore some broken samples before the given date 
//  GENERATE new BeanDynamicObject(this) 
//  Both of these values are effectively part of a cross Gradle version contract.   Do not change them. 
//  TODO Use IvyArtifact here
//  Not part of a strongly connected component or the root of a strongly connected component 
//  modifies in place 
//  Copy the snapshots whose values are the same, then snapshot remaining values 
//  Serialize the incoming class and parameters (if necessary) 
//  null if type == UNDEFINED 
//  Only * characters: matches #1 above 
/*      * Checks whether the plugin marker artifact exists in the backing artifacts repositories.      */
//  this exception means that we want to try again. 
//  Probe for artifact with classifier 
//  note: BigInteger and BigDecimal are also imported by default 
//  SoftwareModel 
//  At this point we must have annotations on this private getter 
//  Create a SourceFile object to represent an "empty" extern 
//  <tr>     <td><literal><link linkend="$id">$name</link>$signature</literal></td>     <td>$description</td>   </tr> 
//  Any windows GCC compatible implementation (mingw, cygwin) 
//  ml/ml64 have position sensitive arguments,   e.g., /Fo must appear before /c and /c must appear before the source file. 
//  extract the files that were generated 
//  First scan for annotation, and short circuit transformation if not present 
//  asking isResolved here allows to check if a primitive   type name like "int" was used to make t. In such a case   we have nothing left to do. 
//  According to absolute positioning 
//  Make the argument serializers available so work implementations can register their own serializers 
//  Not sure under what scenario (if any) this would occur,   but there's no sense in collecting the descriptor if it does.
//  Rethrow 
//  We can only determine if two DaemonStopEvent point at the same daemon if we know the PIDs 
//  Use an IdeaModule to reference a project 
//  literal followed by at least one * 
//  Lifecycle messages 
//  If we've freed memory, invalidate the current OS memory snapshot 
//  consumer didn't express any preference, everything fits 
//  Traverse graph 
//  Enabled caching if task type is annotated with @CacheableTask 
//  Wrap build failure in 'cancelled' cross version exception 
//  alternatively, we could return project.getLayout().files(Runnable)   would differ in the following ways: 1. live (not sure if we want live here) 2. no autowiring (probably want autowiring here) 
//  Run the rules and try to find something again. 
//  Invalid paths fall through to here 
//  TODO - set ACL here if necessary
//  A map from progress operation id seen in event -> progress operation id that should be forwarded 
// just in case we have a bug related to logging,  printing some exit info directly to file: 
//  Register the defined substitutions for included build 
//  only need to decorate when this callback is delayed 
//  The task status line may appear twice - once for the execution, once for the UP-TO-DATE/SKIPPED/etc   So don't add to the task list if this is an update to a previously added task.
//  all tasks have the same value 
//  Create the domain object 
//  Calculate how many rows of the status area overlap with the text area 
//  An object-like macro 
//  Set up worker ClassLoader 
// eg. 'someTask' or 'sT'  eg. '', ':' or ':foo:bar' 
//  Watch for the client disconnecting before we call stop() 
//  separator 
//  ProjectStateWrapper might contain the configured eclipse project name 
// 1) we've seen the replacement, register new conflict and return 
//  Add new labels to the unused queue 
//  This is final - use {@link TaskDependencyContainer#visitDependencies} to provide the dependencies instead. 
// noinspection unchecked 
//  TODO: Add test name to the report   @formatter:off
//  triggering file resolve 
//  only an input for other task instances 
//  Wrap in a <span>, to work around CSS problem in IE 
//  Collect a map from component to its owning component. This might be better to move to the component or some publications model 
//  Can use arg without conversion 
//  super class not on the classpath - unable to scan parent class 
//  Get the next page, in the next iteration of this loop. 
//  Have already visited this node - skip it 
//  the class property stops resolving, dynamic property names too 
//  Missing ',' 
//  Match recording is optimized for the general case of a single match 
//  this happens when JNA is not in the path.. or   this happens when the stdout is being redirected to a file. 
//  
//  Add an adapter for each newly added target 
/*      * Groovy manipulates the JVM to let GString extend String.     * Whenever we have a Set or Map containing Strings, it might also     * contain GStrings. This breaks deserialization on the client.     * This method forces GString to String conversion.      */
//  only write if we have results, otherwise truncate 
//  TODO: Synchronization 
// we could retrieve annotations at construction time and hold references to them but unfortunately  in IBM JDK strong references are held from annotation instance to class in which it is used so we have to reflect 
//  Restore the existing object being deserialized. 
//  handle decoding underflow, multi-byte unicode character at buffer chunk boundary 
//  Either no cached, or it's changed. See if we can find something local with the same checksum 
//  we need to make sure the variants we consider provide the implicit capability 
// FileCollection files = ProjectBuilder.builder().build().files();  assertThat(call("{ bean, fc -> bean.files fc}", bean, files), nullValue());  assertThat(bean.getFiles(), sameInstance(files)); 
//  Do not reprocess 
//  relink, produce another object file   hide _main symbol 
//  Intentionally not a “create” method as this should not be exposed as a service 
//  Track any progress operation that either can't be display due to label shortage or child progress operation is already been displayed 
//  Assume 80 wide. This is to minimize wrapping on console where we don't know the width (eg mintty)   It's not intended to be a correct solution, simply a work around 
// noinspection ResultOfMethodCallIgnored 
//  Not looking at a match 
//  doesn't exist on either side, nothing to compare 
//  https://github.com/gradle/gradle/issues/9380   Remove a srcDir from a sourceSet 
//  Ignore artifact transforms 
//  Constraint: only consider explicit exclusions declared for this constraint 
//  check next level of interfaces 
//  This is expensive to calculate, so cache the result 
//  ignore anonymous classes 
//  standalone test suite 
//  When build output area is not visible, position the cursor at the end of the output area 
//  try to resolve a public static inner class' name 
//  fallback: take the name from the ProjectState 
//  Log the error but analyze the remaining interfaces. We could for example run into https://bugs.openjdk.java.net/browse/JDK-7032558 
//  Synthesize a start event 
// querying runtime for each invocation 
//  Eventually add blank line before section 
//  else, assume we can write to anything that exists and is not a directory 
//  Called from generated code on failure to convert the supplied value for a property to the property type 
//  System.nanoTime() can go backwards under some circumstances.   http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6458294   This max() call ensures that we don't return negative durations. 
//  Some POMs depend on themselves, don't add this dependency: Ivy doesn't allow this! 
//  TODO:instant-execution reconsider type visibility 
/*     This can't be called just include, because it has the same erasure as include(Iterable<String>).      */
//  setProperty(this, name, value) 
//  One of the Scala plugins is applied, but ScalaRuntime extension is missing or the ScalaPlatform is undefined.   we can't create a Scala SDK without either one 
//  Re-wording to exception message to get rid of the fqcn it contains
//  GENERATE getAsDynamicObject().setProperty(name, value) 
//  attributes. 
// assertThat(call("{ bean -> bean.things([1,2,3]) }", bean), nullValue());  assertThat(bean.getThings().size(), equalTo(3)); 
//  TODO:LPTR This should be like @Finalize void generatedSourcesAreInputs(@Each PlayApplicationBinarySpecInternal binary) 
//  It is okay to have redundant generated 'is'-getters 
/*      * This inner class hides the fact that the actual de-duplication algorithm is stateful.      */
// we're spinning a thread to do work to avoid blocking the connection  This means that the Daemon potentially can do multiple things but we only allows a single build at a time 
//  look into the module node if there is a class with that name 
//  Type is more complicated, need to check everything. 
//  Register at least the project buildDir as a directory to be deleted. 
//  TODO - use circular buffers to avoid copying   TODO - share a single initializer with MultiChannelQueue
//  Do nothing by default 
//  In Kotlin:     > Boolean accessor methods (where the name of the getter starts with is and the name of   > the setter starts with set) are represented as properties which have the same name as   > the getter method. Boolean properties are visible with a `is` prefix in Kotlin     https://kotlinlang.org/docs/reference/java-interop.html#getters-and-setters     This code assumes all configurable Boolean property getters follow the `is` prefix convention.   
/*      * Replaces the currently visited expression with the specified expression.      */
//  currently we only look in script code; could extend this to build script classes 
//  Ensure resource transport protocol, authentication types and credentials are all compatible 
//     @Rule 
//  we replace '.' only in the className part   with '$' to find an inner class. The case that   the package is really a class is handled elsewhere 
//  Always abort execution for an execution failure (as opposed to a node failure) 
//  Box value 
//  Back to being a pending dependency   Clear remaining incoming edges, as they must be all from constraints 
//  Notify upwards of currently existing descendant spec hierarchy 
//  For Maven we don't really know if an optional dependency is required for runtime or compile   so we use the safest: compile 
//  when FileVisitOption.FOLLOW_LINKS, we only get here when link couldn't be followed 
//  modifies args in place 
//  construct project tasks 
//  Locked by the same process, treat as if locked by another process 
//  end::jupiter-example[] 
//  We *absolutely* need to avoid polluting the project with ClassInfo from *our* classloader   So this class must NOT call any dynamic Groovy code. This means we must do what follows using   good old java reflection! 
//  Gcc on windows requires the path to be set 
//  jarName format: org.jacoco.agent-<version>.jar 
//  Continue 
//  Disable command line file for now because some custom assemblers   don't understand the same arguments as GCC. 
//  in particular, this is about GStrings 
//  Should retain this on the metadata rather than calculate on each invocation 
//  Collect this early, as the process' current directory can change during embedded test execution
// task properties:
// we can try sending something to the daemon and try out if he is really dead or use jps  if he's really dead we should deregister it if it is not already deregistered.  if the daemon is not dead we might continue receiving from him (and try to find the bug in messaging infrastructure) 
//  crash 
//  GENERATE getConvention() 
//  node and any subclass resolving will then take place elsewhere 
//  Set the context classloader to the bootstrap classloader, to work around how JAXP locates implementation classes   This should ensure that the JAXP classes provided by the JVM are used, rather than some other implementation 
//  Delete the coverage file before the task executes, so we don't append to a leftover file from the last execution.   This makes the task cacheable even if multiple JVMs write to same destination file, e.g. when executing tests in parallel.   The JaCoCo agent supports writing in parallel to the same file, see https://github.com/jacoco/jacoco/pull/52. 
/*      * The manifest if this is a jar file and has a manifest, null otherwise.      */
//  Either a resolvable expression or a non-empty unresolvable expression, collect. Ignore includes with no value 
//  Deployments are considered outOfDate until initial execution with file watching 
//  When the component defines a precompiled header, we need to check if the precompiled header is the _first_ header in the source file.   For source files that do not include the precompiled header as the first file, we emit a warning   For source files that do include the precompiled header, we mark them as a "source file for pch"   The native compiler then adds the appropriate compiler arguments for those source files that can use PCH 
//  Object propertyMissing(String name) 
//  Body is an expression with one or more arguments 
//  Always publish process info for multi-request workers 
//  the platform doesn't exist, so we're building a lenient one 
//  Don't bother resolving local components asynchronously 
//  A report to be generated, ignore 
//  Authoritative result means don't do remote search 
//  no dynamic constraints defined, so dynamicId equals revId 
//  Write rich content to stdout and plain content to stderr 
//  Build may have failed before getting to projectsLoaded 
//  Create test lifecycle task 
//  Ensure binding validation has been done. This should happen elsewhere 
//  invoked by Groovy 
//  IDEA doesn't like the result of file.toURI() so use the absolute path instead 
//  Version isn't used, except by a human looking at the output of jps. 
//  No tool chains can build for this platform. Assemble a description of why 
//  We need to use the deprecated constructor as it is compatible with certain previous versions of the Zinc compiler 
//  Need to compile all secondary routes ("Foo.routes") before primary ("routes") 
// handler.registerResolver(new UpgradeCapabilityResolver()); 
//  we do not do our name mangling to find an inner class   if the type is a ConstructedClassWithPackage, because in this case we   are resolving the name at a different place already 
/*      * <p>Allows the container to be configured, creating missing objects as they are referenced.</p>     *     * <p>TODO: example usage</p>     *     * @param configureClosure The closure to configure this container with     * @return This.      */
//  Ends up with: 1 2 3 -> 4 <- 5 6 
//  This agent should be loaded via the custom system ClassLoader 
//  Update the cache entry in the index: this resets the age of the cached entry to zero 
//  Should be excluded 
//  Still 'updated' with reason when version remains the same. 
//  check for duplicate entries in java and resources 
//  Use Throwable to record the location where a suffix was registered, to allow diagnostics when a collision is found   This may have performance implications, however the assumption is that class generators are global scoped objects that are created once and in very small numbers 
//  Strategy mutations will not require a re-resolve 
//  Maven local 
//  Adds a void $propName(Closure<?> cl) method that delegates to model state 
//  Print something to verify it is after task execution 
//  This is used only to retain strong references to the values 
// windows needs an additional backslash in jar urls 
//  Add a line before the first question that has been asked of the user   This makes the assumption that all questions happen together, which is ok for now   It would be better to allow this handler to ask the output renderers to show a blank line before the prompt, if not already present 
//  should not happen
//  Versions before 3.2 would throw away the cause. There was also a regression in 4.0.x 
//  This cannot be CopyOnWriteArrayList because we need to iterate it in reverse,   which requires atomically getting an iterator and the size.   Moreover, we iterate this list far more often that we mutate,   making a (albeit home grown) copy-on-write strategy more appealing. 
//  No more unused label? Try to resize. 
//  Some POMs depend on themselves through their parent POM, don't add this dependency   since Ivy doesn't allow this!   Example: http://repo2.maven.org/maven2/com/atomikos/atomikos-util/3.6.4/atomikos-util-3.6.4.pom 
// Assuming the message has correct format. Not bullet proof, but seems to work ok for now. 
//  A nested instance 
//  Use the origin file when it can satisfy the basename requirements 
//  https://docs.oracle.com/javase/specs/jls/se12/html/jls-3.html#jls-Keyword 
//  we must not use interrupt() because it would automatically   close the connection (sending data from an interrupted thread   automatically closes the connection) 
//  Eagerly calculate the file if this will be used as a dependency of some task   This is to avoid having to lock the project when a consuming task in another project runs 
//  legacy mode for internal APIs 
//  Clear previous traversal state, if any 
//  Notify threads that may be waiting on this task to complete.   This is required because although all builds may share the same coordination service, the 'something may have changed' event that is fired when a task in this build completes   happens before the state tracked here is updated, and so the worker threads in the consuming build may think the task has not completed and go back to sleep waiting for some   other event to happen, which may not. Signalling again here means that all worker threads in all builds will be woken up which can be expensive.   It would be much better to avoid duplicating the task state here and instead have the task executors communicate directly with each other, possibly via some abstraction   that represents the task outcome
// we don't want to support "--flag true" syntax 
//  Execute the health check that should send out a DaemonExpiration event   if the daemon is unhealthy 
//  this is an artifact asked for a particular dependency 
//  origins have to be stored until the end of the build 
//  Parking space for the write cursor 
//  Caller must be holding lock 
//  Don't close 
//  skipped versions were not used in a release 
//  Fallback to ClassLoader's lookup 
// argument quoting:   - " must be encoded as \"   - % must be encoded as %%   - pathological case: \" must be encoded as \\\", but other than that, \ MUST NOT be quoted   - other characters (including ') will not be quoted   - use a state machine rather than regexps 
//  test if vanilla name is current class name 
//  revisit all dependencies and possibly change the classpath order! 
//  Any node that the preceding task must run after is also a preceding node. 
//  return var 
//  Never up to date 
//  line gap between the text area and the status area. 
//  expand the thread pool until we hit max workers 
//  otherwise, keep lock open 
//  -1 because of Z_ERROR 
//  Work backwards from highest version, return the first candidate with qualified version and release status, or candidate with unqualified version 
//  externals are mapped to linked resources so we just need a name of the resource, without full path   non unique folder names are naively deduped by adding parent filename as a prefix till unique   since this seems like a rare edge case this simple approach should be enough 
//  Use the ABI as the hash 
//  need to defer loading of Zinc/sbt/Scala classes until we are   running in the compiler daemon and have them on the class path 
//  GENERATE super.<propName>(v) 
//  At this point, we need the component metadata, because it may declare attributes that are needed for matching   Component metadata may not necessarily hit the network if there is a custom component metadata supplier 
//  GENERATE private boolean <flag-name>; 
//  Expire when Daemon Registry becomes unreachable for some reason 
//  <tr>     <td><link linkend="$id"><literal>$name</literal></link</td>     <td>$description</td>   </tr> 
//  the new value is a better fit than the old one 
//  A single leaf node as child and total text is not too long, collapse 
//  Define a classes variant to use for compilation 
//  Edge states are deduplicated, this is a performance optimization 
//  Only remove edges that come from a different node than the source of the dependency going back to pending   The edges from the "From" will be removed first 
//  Coercion is an expensive process, so we cache the result of coercing to other attribute types.   We can afford using a hashmap here because attributes are interned, and their lifetime doesn't   exceed a build 
//  Detach the process from the parent terminal/console 
//  This is the first time we've seen the module, so register with conflict resolver. 
//  TODO: Whenever we allow _user_ services to be injected, this would have to know   from which classloader we need to load the service 
//  Source file has not been compiled before, or its include file graph has changed in some way   Calculate the include file graph for the source file and mark for recompilation 
//  Gradle core plus worker implementation classes 
//  TODO: Does a static library really have any runtime elements?
//  todo CC: check that it ok to do this if configurations have attributes 
//  Prefer direct transformation over indirect transformation 
//  Classes or resources requested, some Jars found, let's prefer these 
//  Check if type is Factory<? extends ElementType> 
//  The default name for a model is the name of the Java interface 
//  Compile the javascript file with the options we've created 
//  We should never attempt to join strings so if you see this, there's a problem 
//  Create a new group for tasks or configure project 
//  If we've never resolved, must resolve 
//  On Linux, we assume swift is installed into /opt/swift 
//  This already throws when creating `apiElements` so be eager to have a clear error message 
//  2 or more lines that look like stack trace elements 
// for example: ':a SKIPPED' or ':foo:bar:baz UP-TO-DATE' but not ':a' 
//  Maintain a hierarchy of all progress operations in progress — heads up: this is a *forest*, not just 1 tree 
//  Already have a hard dependency, this optional dependency is not pending. 
//  If the client has not set a location for SOURCE_OUTPUT, javac outputs those files to the CLASS_OUTPUT directory, so clean that instead. 
//  Literal followed by *: matches #3 above 
//  This may be thrown by the caller of this method at a later time 
//  Exclude rules 
// The maximum number of times to retry a request when S3 responds with a http 5xx error 
//  most outer class is now element 0 
//  3.x - 4.6 works on Java 7 - 8 
//  First need to populate the default variant version mapping strategy with the default values   provided by plugins 
//  Any available tool chain 
//  Lock is held while creating ClassLoader - nothing else can happen while this is running 
//  Treat all models returned to the action as part of the same object graph 
//  We don't use Attribute.INTENSITY_BOLD_OFF as it's rarely supported like Windows 10 
//  The wrapper uses the .ok file to identify distributions that are safe to use.   If we delete anything from the distribution before deleting the OK file, the   wrapper will attempt to use the distribution as-is and fail in strange and unrecoverable   ways. 
//  may be we have C[k1:v1, k2:v2] -> should become (C)([k1:v1, k2:v2]) 
//  A new module. Check for conflict with capabilities and module replacements. 
//  attributes 
//  return silently when directory doesn't exist 
//  so "leaks" into the public API of this component 
//  this.instantiator = AsmBackedClassGenerator.getInstantiatorForNext() 
//  Log configuration 
//  Isolate parameters in this thread prior to starting work in a separate thread 
//  not holding the cache lock, can stop now 
//  These are used to discard references to tasks so they can be garbage collected 
//  Generate inputReferences() method 
//  Special handling for artifacts declared for optional dependencies 
//  the following only needs to be done serially to preserve ordering of dependencies in the graph: we have visited the edges   but we still didn't add the result to the queue. Doing it from resolve threads would result in non-reproducible graphs, where   edges could be added in different order. To avoid this, the addition of new edges is done serially. 
//  Only false if no declared outputs AND no Task.upToDateWhen spec. We force to true for incremental tasks. 
//  a local component cannot have attributes (for now). However, variants of the component   itself may. 
//  TODO - put this somewhere else 
// Making the daemon infrastructure log with DEBUG. This is only for the infrastructure! 
//  Tasks are ignored by providers if launchables is not null 
// replace wildcard '*' with '.*' 
//  now, do our processing using the antlr preprocessor results whenever possible. 
//  Note: beforeEvaluate and afterEvaluate ops do not throw, instead mark state as failed 
//  Optimizes comparisons by making sure that the 2 elements of   the pair are "sorted" by hashcode ascending 
//  Return null to remove the statement 
//  Reached the end of input, worker has crashed or exited 
//  Ignore this progress operation, and map any reference to it to its parent (or whatever its parent is mapped to 
//  This code path will always be a no-op following the changes in DefaultImmutableAttributesFactory   However this code will have to remain forever while the other one should be removed at some point (Gradle 7.0?) 
//  Protects the following state 
//  Still starting up 
//  Show the direct cause of the last contextual cause only 
//  populates descriptors, last descriptor in wins for a given architecture 
//  We have a cached version, but it might be out of date, so we tell the upstreams to revalidate too 
//  1.1, 1.2 
//  determine the package name :( 
//  Force the user home services to be stopped first, the dependencies between the user home services and the global services are not preserved currently 
//  TODO: do not reference mutable state 
//  At this stage, 'strictly' implies 'requires'. 
//  Invert the map of (file extension -> UTI) pairs to   (UTI -> [file extension 1, ...]) pairs. 
//  A primitive type 
//  We could do this in Java, which would be easier. However, Twirl only has a Java interface in version 1.3+   If we used Java here then Gradle's TwirlCompiler would need to support both ScalaMethod for Twirl 1.0-1.2 and Java's Method for Twirl 1.3+   Method definition: https://github.com/playframework/twirl/blob/1.3.12/compiler/src/main/scala/play/twirl/compiler/TwirlCompiler.scala#L167 
//  clean up comments and new lines 
//     private ClassLoader methodParamClassLoader; 
//  Managed internal views are allowed not to be implemented by the default implementation 
//  equality has been tested before so we know groups are different 
//  Checking if there is a type variable to resolve, since resolving the type variable via `TypeToken` is quite expensive. 
//  if found only one project dependency - return it, otherwise call the next resolver 
//  invoke the typed setter 
//  All requests completed, write response 
//  Don't render empty 'requested' reason 
//  guessing right side part of a mapping 
//  Assume an infrastructure problem 
//  this.metaClass = <value> 
//  Remove Kotlin DSL and Kotlin jars 
//  maybe it matched through coercion 
//  Start the download in another thread and wait for the result 
//  '\\\r\n' discarded from stream 
//  Make sure file order is always consistent 
//  If previous resolve failed, no point in re-resolving 
//  If we are pretending that we don't have a sourcepath, the compiler will   look on the classpath for sources. Since we don't want to bring in any   sources implicitly from the classpath, we have to ignore source files   found on the classpath. 
//  Dependencies de-duplication 
//  we have for example a class name A, are in class X   and there is a nested class A$X. we want to be able   to access that class directly, so A becomes a valid   name in X. 
//  we're writing 2 copies of the resource: one relocated, the other not, in order to support `getResource/getResourceAsStream` with   both absolute and relative paths 
//  Cannot visit local artifacts until transform has been executed 
//  Note the order in which the build phase are added is important 
//  the "status" attribute is mandatory, so if it's missing, we need to add it 
//  Stop cancelling before sending end-of-input 
//  GENERATE private <type> <property-field-name>; 
//  Handler to detect Gradle metadata redirects 
//  Task is not required - skip it 
//  NOTE: we use non-blocking IO as there is no reliable way when using blocking IO to shutdown reads while   keeping writes active. For example, Socket.shutdownInput() does not work on Windows. 
//  If they change, continuity of the IDs will be broken. 
//  Zero or more * characters followed by at least one !* 
//  We can only have attributes if we have the factory, then need to copy 
//  We don't care about producing nodes that haven't finished yet 
//  The eclipse workspace contains projects from root and included builds. Check projects from all builds   so that models built for included builds do not consider projects from parent builds as external. 
//  Broken version 
// no mode infos available - fall back to defaults 
//  start of tag marker 
//  add groovy-ant to bring in Groovydoc for Groovy 2.0+ 
//  No hard dependency, queue up pending dependency in case we see a hard dependency later. 
//  TODO: Assumes there's a single 'main' Swift component 
//  the ansi escapes. 
//  It is possible that multiple threads will execute this branch concurrently, when the type is missing. However, the contract for `get()` below will ensure that   only one thread will actually generate the implementation class
//  Index of the artifact set == the id of the artifact set 
//  Version not found at this base path 
//  NOTE: Windows uses Path, but allows asking for PATH, and PATH         is set within builder object for some things such         as CommandLineIntegrationTest, try PATH first, and         then revert to default of Path if null 
//  Use Java serialization for everything else 
//  Save the processed metadata for next time. 
//  TODO:LPTR Should be @Nested with @Console inside 
//  We need to add missing files as source roots, since the package name for deleted files provided by IncrementalTaskInputs also need to be determined. 
//  ignore classes in method bodies 
//  There are only enough entries to make up 1 block, so move the entries of the right sibling into   this block and discard this block. Might also need to merge the parent 
//                 resolution.setLibraryBinary(null); 
//  A path, either "" or <> delimited 
//  If we get here, we have no idea how much memory the worker is using 
//  Work around some bugs in Input.skip() 
//  the ansi escapes for piping it into ansi color aware commands (e.g. less -r) 
//  remove build listener 
//  core javadoc options 
//  Need to make sure we remove duplicates, so we can't just compose iterators from source collections 
//  The provider is of compatible type and the element was either already realized or we are removing a provider to the element 
//  And now let's make sure we do not have another version of that virtual platform missing its metadata 
//  Current Model 
//  we add a package if there is none yet and the module has one. But we   do not add that if the type is a ConstructedClassWithPackage. The code in ConstructedClassWithPackage   hasPackageName() will return true if ConstructedClassWithPackage#className has no dots.   but since the prefix may have them and the code there does ignore that 
//  PatternFilterable overrides to broaden return type 
//    Generate factory class   
//  java.lang.Object found, which is not a test class 
//  If there are 'pending' dependencies that share a target with any of these outgoing edges,   then reset the state of the node that owns those dependencies.   This way, all edges of the node will be re-processed. 
//  the regular typed setter 
//  Inject 
//  Axe everything after the expected exception 
//  Use a Class-Path manifest JAR to circumvent too long command line issues on Windows (cap 8191)   Classpath is huge here because it's the test runtime classpath 
//  API first 
//  stderr of Gradle is redirected to stdout of xcodebuild tool. To work around, we consider xcodebuild stdout and stderr as   the error output only if xcodebuild failed most likely due to Gradle. 
//  Treat all errors as warnings, for backwards compatibility 
//  tag::host-and-path[] 
//  Just the minimal stuff necessary for the worker infrastructure 
//  unclear what the best thing to do here would be 
//  TODO wolfs: Move these identifiers to the actual strategy classes when they live in :snapshots 
//  May (or may not) be mutable - unpack the state 
//  Host: x86   Target: ia64 
//  Previously traversed but new constraints no longer pending, so partial traversing 
//  ...  end::sample[] 
//  MODULE_WORKING_DIR doesn't seem to work correctly and MODULE_DIR seems to be in `.idea/modules/<path-to-subproject>`   See https://youtrack.jetbrains.com/issue/IDEA-194910 
//  Note: order is crucial here. Nodes are traversed through these states in the order defined below 
//  Ignore 
//  verbose output is written to stderr for some reason 
//  V 
//  These errors happen if the JNI lib is not available for your platform.   But since we are on ANSI friendly platform, assume the user is on the console. 
//  in order to avoid tracking the set of enqueued nodes 
//  we assume generated file collections have no build dependencies 
//  Always need the files, as we need to run the transform in order to calculate the output artifacts. 
//  For each candidate node, add it to the preceding nodes. 
//  Add tasks to build various kinds of components 
//  Don't need these things, they're provided by the runtime 
//  Loop over all listed versions, sorted by LATEST first 
//  is method that returns Boolean is not a getter according to JavaBeans, but include it for compatibility with Groovy 
//  The following code was patched according to the following PR: https://github.com/fusesource/jansi/pull/70 
//  if we reach this point it means the node selection was restarted, but   effectively it has the same incoming edges as before, so we can return   the result we computed last time 
//  Create test suite test task 
//  Protects the following fields 
//  This happens when the connection between the worker and the build daemon is closed for some reason,   possibly because the build daemon died unexpectedly. 
//  not a valid signature
// remember if module id was annotated 
//  property requires >= JAXP 1.5 / Java8 
//  Capture non-file input changes 
//  Add the items in this page of results to the list we'll return. 
//  This will cause problems on Windows if the path to the Gradle executable that is used has a space in it (e.g. the user's dir is c:/Users/Luke Daley/)   This is fundamentally a windows issue: You can't have arguments with spaces in them if the path to the batch script has a space   We could work around this by setting -Dgradle.user.home but GRADLE-1730 (which affects 1.0-milestone-3) means that that   is problematic as well. For now, we just don't support running the int tests from a path with a space in it on Windows.   When we stop testing against M3 we should change to use the system property. 
//  TODO - should iterate over each candidate until we successfully copy into the cache
//  TODO: Replace with native test task
//  Must close each input first 
//  64 bit   32 bit 
//  prevent file system change events when generated content 
//  there are no left candidate, do not bother checking other attributes 
// partial match 
//  TODO:lptr this should be added only if the scan plugin is applied, but SnapshotTaskInputsOperationIntegrationTest     expects it to be added also when the build cache is enabled (but not the scan plugin)
//  Based on https://github.com/playframework/twirl/blob/1.3.13/compiler/src/main/scala/play/twirl/compiler/TwirlCompiler.scala#L156     
//  no-op 
//  path(Type) 
//  Find the status line for the previous record of this task 
//  Inherit implementation dependencies 
//  Register the domain object 
//  Temporary Classpath implementation for new jvm component model 
//  Special case "build successful" when there is no result object to send 
/*              * NOTE! The JDK code to create SSLContexts relies on the values of the given system properties.             *             * To prevent concurrent changes to system properties from interfering with this, we need to synchronize access/modifications             * to system properties.  This is best effort since we can't prevent user code from modifying system properties willy-nilly.             *             * The most critical system property is java.home. Changing this property while trying to create a SSLContext can cause many strange             * problems:             * https://github.com/gradle/gradle/issues/8830             * https://github.com/gradle/gradle/issues/8039             * https://github.com/gradle/gradle/issues/7842             * https://github.com/gradle/gradle/issues/2588              */
//  append full stack trace 
//  tag::custom-task-class[] 
//  Use the file from the cache when it does not 
//  see if the grammar if out-of-date by way of its super-grammar(s) as gleaned from parsing the grammar file 
//  This is a performance optimization. Most modules do not declare capabilities. So, instead of systematically registering   an implicit capability for each module that we see, we only consider modules which _declare_ capabilities. If they do,   then we try to find a module which provides the same capability. It that module has been found, then we register it.   Otherwise, we have nothing to do. This avoids most of registrations.
//  Use a dummy security manager, which hacks the application classpath into the system ClassLoader 
//  GENERATE this.services() 
//  A reference to this class 
//  checks if it's a derived platform 
//  Discard actions after execution 
//  Set explicit build file, if required 
//  Gradle's log levels correspond to slf4j log levels   as implemented in OutputEventListenerBackedLogger.   These levels are mapped to java.util.logging.Levels   corresponding to the mapping implemented in the   SLF4JBridgeHandler which is installed by this logging system. 
//  Not the first g++ in the path, needs the path variable updated 
//  Ivy can resolve files from multiple hosts, so we need to look at all   of the possible URLs used by the Ivy resolver to identify all of the repositories 
//  When age == 0, verified since the start of this build, assume the meta-data hasn't changed 
//  Keep this expression 
//  retrieve content from URL and write to output 
//  Default Eclipse JRE paths:   https://github.com/eclipse/eclipse.jdt.debug/blob/master/org.eclipse.jdt.launching/plugin.xml#L241-L303 
//  Callable<? extends String> 
//  Consider variant aware components with no buildable binaries as non-buildables 
// the default 
//  Only use this for top level project scripts 
//  Any available Visual Studio >= 2019 
//  TODO: Make plan executor respond to changes in parallelism configuration 
//  TODO: Change the default location for these reports to follow the convention defined in #configureReportOutputDirectory
//  do nothing 
//  An application ClassLoader: Inspect class to collect up the classpath for it 
//  do not include module-info files, as they would represent a bundled dependency module, instead of Gradle itself 
// We might leave that in if we decide it's a good idea for an extra safety net. 
//  User scope is expected to be persisted in the global cache since 4.0. 
// The matching is very simple at the moment but it should solve majority of cases.  It operates using String#contains and it tests either requested or selected module.
//  Move default values into body of closure, so they can use <inputs-lvar> 
//  Check that given daemon still exists in registry - a daemon registry could be removed and recreated between checks 
//  could make resolveDependencies() cache its result for later use by GenerateIdeaModule 
//  need to validate that the selected configuration still matches the consumer attributes   Note that this validation only occurs when `dependencyConfiguration != null` (otherwise we would select with attribute matching)
//  rename project dependencies 
//  Convert Swift-like macros to a Map like NativeCompileSpec expects 
// TODO:HH installTask.dependsOn(executable)
//  Will create `ivy.xml` even for Maven publishing! (as long as `Upload.uploadDescriptor == true`) 
//  The directory is now empty so delete it 
//  Take a deep copy of the compilerArgs because the following methods mutate it. 
//  NOTE: might make sense to respect per-compile-task log level 
//  Prefer 64-bit tools when building on a 64-bit OS 
//  No separating whitespace between the #define and the name 
//  we don't decorate everything in BuildListener, just projectsLoaded/projectsEvaluated 
//  as we don't have this right now we simulate it by reaching up the tree. 
//  Do nothing. 
//  Can get duplicate start events 
//  Copy built-on-demand state 
//  Lower or equal priority but higher version, keep higher scope and exclusions 
//  Any available Visual Studio >= 2017 
//  check module static imports (for static inner classes) 
//  because we need the attributes to be computes lazily too, because of component metadata rules. 
//  type 1 = ? extends T 
//  GENERATE new ConventionAwareHelper(this, getConvention()) 
//  Only download in parallel if there is more than 1 component to download 
//  Otherwise, just reuse previous result 
//  Rethrow the first failure 
// this does not change 
//  On rare occasions, exitValue == 0 when the process is expected to fail, and the error output indicates failure. 
//  2) create an AntlrTask for this sourceSet following the gradle 
//  Track all unused labels to display future progress operation 
//  Include as binary when the target project is not included in the workspace 
//  Collect changes that would trigger a rebuild 
//  if there is a cause, it's an invalid name exception 
//  TODO - add linkRenderer.link(property) 
//  Already started 
//  Start task execution if necessary: this is required for building plugin artifacts,   since these are built on-demand prior to the regular start signal for included builds. 
//  Only expand the thread pool if there is work in the queue or we know that work is about to be submitted (i.e. force == true) 
//  from this point down, the daemon is 'busy' 
//  Callable<S> 
// 2) new module is a replacement to a module we've seen already, register conflict and return 
// builds old model of resolved dependency graph based on the result events 
//  Any available Swift compiler <= 4 
//  Have not visited this node yet. Push its successors onto the queue in front of this node and visit   them 
//  This is a special case for backwards compatibility: it is possible to have   a cycle where the root component depends on a library which transitively   depends on a different version of the root module. In this case, we effectively   allow 2 modules to have the same capability, so we filter the nodes coming   from transitive dependencies
//  If any of the input values are not available for this selection, ignore the rule 
//  throw new ReadOnlyPropertyException(name, <view-type>.class) 
// add description only to the first module 
//  Order is significant 
/*         When writing a file into the filestore a marker file with this suffix is written alongside,        then removed after the write. This is used to detect partially written files (due to a serious crash)        and to silently clean them.      */
//  Any available Visual Studio >= 2015 
//  The file names passed to -cp are canonicalised by the JVM when it creates the system classloader, and so the file names are   lost if they happen to refer to links, for example, into the Gradle artifact cache. Try to reconstitute the file names   from the system classpath 
//  can be null in tests, ResolveState cannot be mocked   can be null in tests, ComponentState cannot be mocked 
//  Generate args 
//  Only use for system Java/Groovy classes; arbitrary use on the build classpath will result in class/jar leaks. 
//  Snapshot POMs use -SNAPSHOT instead of the timestamp as version, so validate against the expected id 
//  No need to resolve type parameters if the method is from the same class. 
//  Any available Visual Studio >= 2012 
//  We throw away all state between builds 
//  note: this is here to override the default Groovy Collection.findAll { } method. 
//  Not yet implemented 
//  Collect only the shortest paths 
//  this configuration is a child of toAdd, so no need to add it 
//  Reached the end of input, worker has exited without failing 
//  don't evaluate children, see if we know it's without validating it 
//  Collect any container level add actions then add the object specific action 
//  Should ask the annotation handler to figure this out instead
//  Transient fields 
//  Have to alter the "type" of the artifact to match what is published 
//  Cannot configure Slf4j logger. This will happen if:   - Tests are executed with a custom classloader (e.g using `java.system.class.loader`)   - Tests are run with `--module-path`, effectively hiding Gradle classes
//  10%   384M 
//  Any available Visual Studio >= 2013 
// then 
//  Search in the standard installation locations 
//  We do not consider injecting constructors public API 
//  For now, 'requires' implies 'prefers', and 'strictly' implies 'requires'   Only publish the defining constraint. 
//  Clear the user's environment 
//  Order is optimised for humans looking at the log. 
//  where the transform class is loaded from) 
//  For test suites (including suite-like custom Runners), if the test suite class   matches the filter, run the entire suite instead of filtering away its contents. 
//  not holding the cache lock, flush is done so notify flush thread and continue 
//  attribute name 
//  Include file graph for this source file has not changed, skip this file 
//  When deriving variants for the Java ecosystem, we actually have 2 components "mixed together": the library and the platform   and there's no way to figure out what was the intent when it was published. So we derive variants, but we also need   to use generic JAVA_API and JAVA_RUNTIME attributes, instead of more precise JAVA_API_JARS and JAVA_RUNTIME_JARS   because of the platform aspect (which aren't jars but "something"). Using JAVA_API_JARS for the library part and   JAVA_API for the platform would lead to selection of the platform when we don't want them (in other words in a single   component we cannot mix precise usages with more generic ones)
//  There are only enough entries to make up 1 block, so move the entries of the left sibling into   this block and discard the left sibling. Might also need to merge the parent 
//  JGit properties work from their relocated locations and conflict if they are left in place. 
//  Attempt to determine whether the compiler is the correct implementation 
//  we don't know about this kind of archive task 
//  Compile all secondary routes files first 
//  Read configuration from stdin 
//  since we need access to the method and that it's weakly referenced   we always need to double check that it hasn't been collected 
//  found the first project dependency 
//  If the Java plugin is applied, we want to express that the "compile" and "runtime" variants   are mapped to some attributes, which can be used in the version mapping strategy.   This is only required for POM publication, because the variants have _implicit_ attributes that we want explicit for matching 
//  fail fast, this should not happen 
//  Only unpack one level of Providers, since Provider<Provider<>> is not supported - we don't need two levels of laziness. 
//  Must prepare to bind inputs first 
//  One or more '*' followed by one or more non-wildcard: matches #2 above 
// already handled elsewhere 
// close all streams and redirect IO 
//  If there's more than group, merge them into a group set 
// Keeps the class set analysis of the given JavaCompile task 
//  This test class should be loaded via the custom system ClassLoader 
//  this.getClass() 
//  If no implementation classpath has been provided, just use the application classloader 
//  read entire response 
//  Didn't find node at path 
//  Already invoking a method on the mix-in 
//  Compare 2 static selectors semantically 
//  Remove compile and AST types from the Groovy loader 
//  now handle dirs 
//  Have visited all of this node's successors 
//  Kotlin passes these types for its own basic types 
//  subclass hook, allowing us to fake the context for testing 
//  Enhance already reported failures 
// checks if candidate project is dependent of the origin project with given configuration 
//  will be removed in 6.0 
// replacement candidates are the only important candidates 
//  We only cache the result of parsing the Maven settings files, but allow this value to be updated in-flight   via system properties. This allows the local maven repo to be overridden when publishing to maven   (see http://forums.gradle.org/gradle/topics/override_location_of_the_local_maven_repo). 
//  fact. We check here for ConstructedClassWithPackage. 
//  Inject missing interfaces to support the usage of plugins compiled with older Gradle versions.   A normal gradle build does this by adding the MixInLegacyTypesClassLoader to the class loader hierarchy.   In a test run, which is essentially a plain Java application, the classpath is flattened and injected   into the system class loader and there exists no Gradle class loader hierarchy in the running test. (See Implementation   in ApplicationClassesInSystemClassLoaderWorkerImplementationFactory, BootstrapSecurityManager and GradleWorkerMain.)   Thus, we inject the missing interfaces directly into the system class loader used to load all classes in the test.
//  Need to lock the cache in order to write to the module metadata store 
//  put var #1 ('foo') on the stack   push the constant Class onto the stack   push int 1 or 0 (interpreted as true or false) onto the stack 
//  As an optimization first check if the method name is among the candidates before we construct an equivalence wrapper 
//  Need to perform the actual resolve
//  else, unchanged; check next file 
//  fall back to standard out 
//  Token concatenation is only allowed inside a #define body   Arbitrary tokens won't resolve to an include path   Treat both these cases as an unresolvable include directive 
//  Track currently associated label with its progress operation 
//  Couldn't find a registration for the given type 
//  creating before locking, have to create the most flexible setup 
//  try to reconstruct the exception 
//  Attempt to merge with the right sibling 
//  We have an exclusive lock (whether we asked for it or not). 
//  Already at the front. If not at the front, need to recreate 
// copy configuration from parent descriptor 
//  + setter methods for the above - assume we’ve defined them 
//  List modules based on metadata files, but only if we won't check for maven-metadata (which is preferred) 
//  used in integration tests 
//  end::custom-task-class[] 
/*         Note: there is deliberately no internal synchronizing or caching at this level.        Class generation should be performed behind a ManagedProxyFactory.      */
//  Should use `InstantiatorFactory` instead to pick up some validation, but this is currently somewhat expensive
//  TODO: Add other build like files `build.gradle.kts`, `settings.gradle(.kts)`, other `.gradle`, `gradle.properties`
//  Something else may have removed it 
//  _changed_ since last execution, possibly by another task 
//  This can happen when a method fails which this method depends on 
//           dynamicObjectHelper = <init>        }        return dynamicObjectHelper;   } 
//  Transforms do not require project state 
//  The only reason for this unit test is to verify that no StackOverflowException is being thrown when   many patterns are passed to getPatternsMatcher. See https://github.com/gradle/gradle/issues/10329 
//  TODO IntSet 
//  GENERATE public ConventionMapping getConventionMapping() { 
//  make sure we can store it in order or we'll have surprises on deserialization 
//  <inputs-lvar> = <inputs-field> 
//  default packages do not contain classes like these 
//  Include the display name anyway 
//  ...   end::custom-task-class[] 
//  It's important that we do not block waiting for the lock while holding the project mutation lock.   Doing so can lead to deadlocks. 
//  An @Ignored class, ignore the event. We don't get testIgnored events for each method, so we have   generate them on our own 
//  Package private accessor used by MessageDigestHasher.putHash for performance reasons 
//  FileCollection is-a Iterable, Buildable and TaskDependencyContainer, so check before checking for these things 
//  there is at least one candidate which does NOT provide this attribute 
//  Matches: task <identifier>(<options-map>) 
//  TODO validations on method: synthetic, bridge methods, varargs, abstract, native
//  non leading ':' 
//  Already seen this class, skip it 
//  Iterate over unicode characters 
//  Get the metadata first to see if it's there 
//  Should use some variation of DefaultClassMap below to associate values with classes, as currently we retain a strong reference to each value for one session after the ClassLoader   for the entry's key is discarded, which is unnecessary because we won't attempt to locate the entry again once the ClassLoader has been discarded
/*      * When the artifacts declared in a component are modified for publishing (name/classifier/extension), then the     * Maven publication no longer represents the underlying java component. Instead of     * publishing incorrect metadata, we fail any attempt to publish the module metadata.     *     * In the long term, we will likely prevent any modification of artifacts added from a component. Instead, we will     * make it easier to modify the component(s) produced by a project, allowing the     * published metadata to accurately reflect the local component metadata.      */
/*          * SourceSet has no access to configurations where we could ask for a lenient view. This                * means we have to deal with possible dependency resolution issues here. We catch and                * log the exceptions here so that the Eclipse model can be generated even if there are         * unresolvable dependencies defined in the configuration.         *         * We can probably do better by inspecting the runtime classpath and finding out which         * Configurations are part of it and only traversing any extra file collections manually.                 */
//  Remove the "daemon starting" message 
//  need to take copy to prevent ConcurrentModificationException 
//  Ignore overrides of Object and GroovyObject methods 
//  If this default is ever changed, ensure the documentation on PathSensitive is updated as well as this guide:   https://guides.gradle.org/using-build-cache/#relocatability 
//  Index of the artifact set == the id of the artifact set, but reversed when sort order is dependency first 
//  IMPORTANT: return must be closed when done with. 
//  check Jar exists 
//  Add all included builds from the command-line 
//  Absolute coordinate system 
// done writing data, release any resources 
//  Assume all the other compilers are ok, if they happen to be installed 
//  The public result for the configuration has been calculated.   It is an error to change anything that would change the dependencies or artifacts 
//  JVM args that must be used for the build JVM 
//  GENERATE getAsDynamicObject().invokeMethod(name, (args instanceof Object[]) ? args : new Object[] { args }) 
//  tag name 
//  GENERATE public MetaClass getMetaClass() { 
//  This should pass 50% of the time 
//  GENERATE public Convention getConvention() { return getAsDynamicObject().getConvention(); } 
//  Callable<? extends T> 
//  Reuse parent label if possible 
// We need to ensure that the conflict is orderly injected to the list of conflicts  Brand new conflict goes to the end  If we find any matching conflict we have to hook up with it 
//  Any Swift 5.x compiler 
//  Do nothing since the only side effect is that we wouldn't   be able to log the plugin descriptor file name.  Shouldn't   be a reasonable scenario where this occurs since these   descriptors should be generated from real files. 
//  If there is no known last descriptor, associate it with the root test suite 
/* This is an internal option, it's used in com.sun.tools.javac.util.Names#createTable(Options options). The -XD backdoor switch is used to set it, as described in a comment        in com.sun.tools.javac.main.RecognizedOptions#getAll(OptionHelper helper). This option was introduced in JDK 7 and controls if compiler's name tables should be reused.        Without this option being set they are stored in a static list using soft references which can lead to memory pressure and performance deterioration        when using the daemon, especially when using small heap and building a large project.        Due to a bug (https://builds.gradle.org/viewLog.html?buildId=284033&tab=buildResultsDiv&buildTypeId=Gradle_Master_Performance_PerformanceExperimentsLinux) no instances of        SharedNameTable are actually ever reused. It has been fixed for JDK9 and we should consider not using this option with JDK9 as not using it  will quite probably improve the        performance of compilation.        Using this option leads to significant performance improvements when using daemon and compiling java sources with JDK7 and JDK8. */
//  cleanup 
//  there is nothing to be done. 
//  Note: used by generated subtypes 
//  Invalid lock state, need to do a real resolution to gather locking failures 
//  Apply strategies for "all variants" 
//  not a single candidate 
//  exclude the dependencies already provided by SCALA_CONTAINER; prevents problems with Eclipse Scala plugin 
//  A sibling node 
//  When the state changes to `SHOULD_RUN`, the dependencies need to be reprocessed since they also may be required now. 
//  Node must be at the predecessor state before calculating dependencies 
//  NOTE : locateOrBuildGenerationPlan populates the generationPlans map 
//  Path == prefix 
//  since we use the main source set, we need to make sure the compile classpath and runtime classpath are properly configured 
//  -r : Add files to static archive, creating if required   -c : Don't write message to standard error when creating archive   -s : Create an object file index (equivalent to running 'ranlib') 
//  Trailing slash on name indicates entry is a directory 
//  Exclude tasks from `buildSrc` 
//  Initialize and collect any new outgoing edges of this node 
//  Don't need to do anything 
//  Select the first variant 
//  if we already hold the project lock for this project 
//  Initial state. Only path and some projections are known here   All projections are defined   Private data has been created, initial rules discovered   Default values have been applied 
//  if the worker has not reported memory usage yet for some reason, or does not support it, 
// for example: ':hey' or ':a SKIPPED' or ':foo:bar:baz UP-TO-DATE' but not ':a FOO' 
// without it, the parent hangs without receiving the message above (flushing does not help). 
//  save name before redirect 
//  Send a end-of-line. This is a workaround to convince the console that the cursor is at the start of the line to avoid indenting the next line of text that is displayed   It would be better for the console to listen for stuff read from stdin that would also be echoed to the output and update its state based on this
//  Wrap the result processor chain up in a blocking actor, to make the whole thing thread-safe 
//  HttpClient is used as a parameter of a public method 
//  Path is a descendant of this 
//  Overrides the global ClasspathFingerPrinter, currently need to have the parent parameter 
//  Resolve the dependency graph 
//  We have a matching component id that was rejected. These are handled later in the resolution process   (after conflict resolution), so it is not a failure at this stage. 
//  Don't serialize the causes - we'll serialize them separately later 
//  Variants 
//  Nothing found - do a second pass 
//  No auto-applied plugins available 
//  Ignore, as the node in the other build's execution graph takes care of this 
//  only if there are no conf defined in sub elements 
//  A new top level node, implicitly finish the previous node 
//  Use an EclipseProject to reference a project 
//  When running a test in a daemon executer, the input is buffered until a   newline char is received 
//  We could do a better job of figuring this out 
//  end::options-of-dynamic-processor[] 
//  in theory we don't need the synchronized here, but let's be safer in the beginning 
//  Maven repos are handled by MavenPlugin 
//  Ignore inner classes 
//  Avoid iterating on candidates if there's no requested attribute 
//  Fail fast 
//  Run any actions to add/modify dependencies 
//  Keep until the listener is created 
//  need to wrap all dependencies to force them 
/*      * Configures the project and all of its sub-projects, including task discovery and binding model rules.      */
//  Since Java 9, version should be X instead of 1.X   However, to keep backward compatibility, we change from 11 
// so that we don't miss out default tasks 
//  On macOS, we assume co-located Xcode is installed into /opt/xcode and default location at /Applications/Xcode.app     We need to search for Clang differently on macOS because we need to know the Xcode version for x86 support. 
//  Clean the interrupted status   because some test class processors do work here, e.g. JUnitPlatform 
//  iterate from the inner most to the outer and check for classes   this check will ignore a .class property, for Example Integer.class will be   a PropertyExpression with the ClassExpression of Integer as objectExpression 
//  There is no setter for this property 
//  We know that we're running single-threaded here, so we can use lenient project locking 
//  We use static private methods because private/protected methods are disallowed   in managed types. 
//  Path is Iterable, but we don't want to unpack it 
//  Source file has changed 
//  Skip prebuilt libraries 
//  ModelRegistrations.Builder methods 
//  Not attached to a console 
//  If we broke out of the comparison because there was a difference, we can reuse the snapshot of the new element 
//  else, throw it away 
//  any of the ansi sequences. 
//  ModelRegistry methods 
//  Add an assemble task for each binary and also wire the development binary in to the `assemble` task 
// configure verbosely only if arguments do not specify any log level. 
//  The selector failed or the module has been deselected. Do not attach. 
// See: NameValidator.FORBIDDEN_CHARACTERS 
//  Always assume a candidate from a lock will satisfy the latest version selector 
//  Map the arguments of the argument from this expression 
//  Mix in to Groovy DSL 
//  class in root package - should not happen 
//  with a lower case letter anymore 
//  this is a published artifact 
//  cancel OP_WRITE selection 
//  User likely doesn't care about daemons that stopped a long time ago 
//  Mappings between public and impl types   If the list of mappings grows we should move it to a data structure 
//  Remove the handler 
//  pre-compute the hashcode as it's going to be used anyway, and this object   is used as a key in several hash maps 
//  Any available GCC implementation (including mingw, cygwin, but not clang) 
//  Note: this may be a temporary measure while existing infrastructure is being ported to managed model elements 
//  Invoke the setter method, to pick up type coercion 
//  END 
//  We know it's an archive, but not what kind of archive   We know it's an artifact, but that's all we know for sure 
//  Adding an optional dependency: see if we already have a hard dependency on the same module 
//  GENERATE public <return-type> <setter>(<type> v) { <return-type> v = super.<setter>(v); __<prop>__ = true; return v; } 
//  Rewrite the method call to match TransformedModelDslBacking#create(String, Closure), which is what the delegate will be 
//  Filter imported classes which are not available yet 
/*          * This method returns the dependencies in buckets (projects first, then modules, then files),         * because that's what we used to do since 1.0. It would be better to return the dependencies         * in the same order as they come from the resolver, but we'll need to change all the tests for         * that, so defer that until later.          */
//  Must be no higher than this scope as needs cache repository services. 
//  guard against edge cases (e.g. JUnit 4 classes with custom runners that report the class as ignored after reporting it as started) 
//  Default Xcode installation 
//  Another thread holds the lock, release the project lock and wait for the other thread to finish 
//  Transitive dependency 
//  All dependencies visited 
//  We limit the inner class lookups here by using ConstructedClassWithPackage.   This way only the name will change, the packagePrefix will   not be included in the lookup. The case where the   packagePrefix is really a class is handled elsewhere.   WARNING: This code does not expect a class that has a static            inner class in DEFAULT_IMPORTS 
//  started, update the log level 
//  tag::isolating-annotation-processor[] 
//  if not a number, i.e. 2.ABD 
//  Same value 
//  Else, ignore abstract methods on non-abstract classes as some other tooling (e.g. the Groovy compiler) has decided this is ok 
//  Add the source of the source set to the include paths to resolve any headers that may be in source directories 
//  have visited all consumers, so visit this node 
//  check custom packaging 
//  Library or executable 
//  Matches: task <arg> or task(<arg>) 
//  End of the stream 
//  Thrown when jna cannot initialize the native stuff 
//  throws T 
//  Check if type extends Factory<? extends ElementType> 
//  We could support an unfiltered DirectoryFileTree here as a cacheable root,   but because @OutputDirectory also doesn't support it we choose not to. 
//  These are here just so that ProjectInternal can implement FileOperations to work around https://github.com/gradle/gradle/issues/6027 
//  This substitution is effectively a force 
//  Without this, HTTP Client prohibits multiple redirects to the same location within the same context 
//  not provided by older client versions 
//  TODO: Locking around this state 
//  Look for parameter substitutions 
//  getProperty(this, name) 
//  Eventually convert manifest content to UTF-8 before handing it to java.util.jar.Manifest 
//  Resolve it now 
//  The name of the test class 
//  If an annotation processor is detected, we need to force Java stub generation, so the we can process annotations on Groovy classes   We are forcing stub generation by tricking the groovy compiler into thinking there are java files to compile.   All java files are just passed to the compile method of the JavaCompiler and aren't processed internally by the Groovy Compiler.   Since we're maintaining our own list of Java files independent of what's passed by the Groovy compiler, adding a non-existent java file   to the sources won't cause any issues. 
//  Pass 2, compile everything except buildscript {}, pluginRepositories{}, and plugin requests, then run 
//  Update timestamp so that working directory is not garbage collected 
//  Find first position where values are different 
//  keep the ordering we had in earlier gradle versions 
//  All local/cached options failed, get directly 
//  Should use stronger modelling for this and make the set of tools open, rather than hard-coding here 
//  Remove .pdb file if present 
//  TODO: Enable this by default when toolVersion >= 6.0.0 if it's stable enough. 
//  Target module can change, if this is called as the result of a module replacement conflict. 
//  ProjectEvaluationListener 
//  For project dependencies de-duplication   Ignore scope on purpose   Ignore version because Maven doesn't support dependencies with different versions on different scopes   Ignore exclusions because we don't know how to choose/merge them   Consequence is that we use the highest version and the exclusions of highest priority dependency when de-duplicating   Use Maven Dependency "Management Key" as discriminator: groupId:artifactId:type:classifier
//  import checks that stack is not empty 
//  Write plain content to stdout and rich content to stderr 
//  Allow the publication to participate in incremental build 
//  Non-null when the result of visiting this file can be reused 
//  Determine the actual sources to clean/compile 
//  5) register fact that antlr should be run before compiling 
//  Read and verify count 
//  we have C[*:map] -> should become (C) map 
//  These versions couldn't handle milestone patches 
//  Only when this node has a transitive incoming edge 
//  TODO given that all the closures are from the same file, we should do the relativising once.        that would entail adding location information to the model {} outer closure.
//  avoiding us to implement a costly visitor and potentially missing edge cases 
//  By default we assume your Unix tty can handle ANSI codes.   Just wrap it up so that when we get closed, we reset the 
//  Else, ignore 
//  Calculated on demand 
//  If the operation hasn't finished normally (because of a shortcut or an error), we close it without a cache key 
//  isOpen was added in gradle 5.6. for 5.5 we default to true 
//  used only as defaultconf, not used for 
//  Context of the app under test. 
//  We don't do anything here, as older consumers call this method when the project connection is closed but then later attempt to reuse the connection 
//  GENERATE getAsDynamicObject().hasProperty(name); 
//  Strategy changes in a parent configuration do not affect this configuration, or any of its children, in any way 
//  Use the Jars when nothing has been requested 
//  create our own metaInf which runs after mainSpec's files 
//  Unrecognized expression or extra stuff after the expression, possibly another expression 
//  Check each unique edge in the include file graph 
//  Then use attribute specific mapping 
//  toAdd is a child, so implies this configuration 
//  Elements that may or may not be interesting only for build dependency calculation 
//  Read-only nested property with managed type 
//  Currently, we only track the major version. 
//  convert the file urls to cached jar files 
//  using a transforming classloader is only required for older buggy Groovy versions 
// calling overloaded method with extra behavior: 
//  there's an ambiguity, but we may have several variants matching the requested capabilities.   Here we're going to check if in the candidates, there's a single one _strictly_ matching the requested capabilities. 
//  Add these as separate specs, so they are not affected by the changes to the main spec 
//  path within its build (i.e. including project path)   path within the build tree (i.e. including project path)   path of the owning build 
//  No compatible daemons available - start a new daemon 
//  probably facing JDK-8046686 
//  GENERATE objectFactory.fileProperty() 
//  Badly formed arguments 
//  new value 
//  Look for a provider with that name 
//  List modules based on metadata files (artifact version is not considered in listVersionsForAllPatterns()) 
//  This is a safety net, it's unsure whether this can happen, because it's likely (certain?)   that for a specific module resolve state, all selectors are of the same type 
//  Do conflict resolution to choose the best out of current selection and candidate. 
// remove SLF4J error out like 'Class path contains multiple SLF4J bindings.'  See: https://github.com/gradle/performance/issues/375#issuecomment-315103861 
//  That is the state a node is in when it was selected but the selection violates a constraint (reject or strictly) 
// Assuming that the diagnostics were printed out to the last line. It's not bullet-proof but seems to be doing fine. 
//  Versions before 4.1 would log "CONFIGURE SUCCESSFUL" for model/action execution (but "BUILD FAILED" for task/test execution) 
//  On any line except the bottom most one, a new line simply move the cursor to the next row.   Note: the next row has a lower index. 
//  Visit the edges after sorting the components in consumer-first order 
//  Do not include implicit builds in workspace 
//  Choose explicit variant 
//  Preserve logging of headers for progress operations started outside of the build operation executor as was done in Gradle 3.x 
//  exclusions optimizations 
//  Use of a LinkedList for 2 reasons: `Set` proved to have a significant negative impact on performance   And list will see a lot of removals, which ArrayList isn't very well suited for. 
//  Only keep track of removed options that were present in the command line 
//  something happened, but we don't know what 
//  We cannot clean in progress markers, or in progress files here because   the file system visitor stuff can't handle the file system mutating while visiting 
//  tag::functional-test-junit[] 
//  Use a GradleProject to reference a project 
//  Check to see if there are any compatible idle daemons 
//  Maven adds inherited dependencies last 
//  A system class, skip it 
//  never swallow java.lang.Error 
//  Remove the "Expiring Daemon" message 
//  Make sure that map only contains Boolean.TRUE and Boolean.FALSE values and no other Boolean instances.   This is necessary because:   1. serialization/deserialization of the compile spec doesn't preserve Boolean.TRUE/Boolean.FALSE but creates new instances 
//  The contract of useCache() means we have to provide some basic synchronization. 
//  This means that the signature was not required and we couldn't generate the signature   (most likely project.required == false and there is no signatory)   So just noop 
/*  Parsing state  */
//  First step is to find an entry with the explicit inputs in the cache 
//  try to deserialize the original exception 
//  Special case some common combinations of names and paths 
//     ((PropertyInternal)<getter>()).setFromAnyValue(p);   } 
//  With multiple unclassified artifacts, choose the one with extension matching pom packaging 
//  Disallow instance fields. This doesn't guarantee that the object is immutable, just makes it less likely   We might tighten this constraint to also disallow any _code_ on immutable types that reaches out to static state 
//  restore only if there was a save operation first 
//  Nothing found locally - try a remote search for all resolve states that were not yet searched remotely 
//  Empty path, might match when more elements added 
//  If implements MethodMixIn, do not attempt to locate opaque method, as this is expensive 
//  We get only the first element here, nothing else. But Collection   forces us to use an iterator. 
//    Add constructor   
//  The changes about the interface's methods will be reported already 
// we don't really need to launch the daemon to acquire information needed for BuildEnvironment 
//  In order for the Groovy stubs to have annotation processors invoked against them, they must be compiled as source.   Classes compiled as a result of being on the -sourcepath do not have the annotation processor run against them 
//  Provide an implicit empty argument 
//  Create build configuration at the project level from all target's build configuration 
//  When implementing PropertyMixIn, do not check for opaque properties, as this can be expensive 
//  or all of them were rejected 
//  Object methodMissing(String name, Object args) 
//  not a 'Jar', not a 'test' 
//  Redraw every entry of this area 
//  This is fine, just ignore it 
//  TODO some representation of state of the inputs 
//  prefer to use the actual memory usage reported by the worker 
//  In order to use a newer version of jna the resources must not be available in the old location 
//  Exit early as we are reusing the create actions from the provider 
//  This shouldn't be the case, however, start and complete events are filtered in the prior stage when the logging level is > lifecycle   Should instead move the filtering after this stage 
//  Allow currently executing and enforced tasks to complete, but skip everything else. 
//  GENERATE objectFactory.setProperty(type) 
//  Target: x64 
//  Generate: Object[] unpackState() { state = new Object[<size>]; state[x] = <prop-field>; return state; } 
//  Callable 
// after redirecting we need to add the new std out/err to the renderer singleton 
//  Mark the connection has being handled 
//  Remove classes from core Gradle API 
//  Matches: task <method-call> 
//  Largest free block is too small 
//  This is a potential nested rule.   Visit method parameters 
// (SF) this is a workaround until this story is completed. I'm hardcoding setting the idle timeout to be max X mins.  this way we avoid potential runaway daemons that steal resources on linux and break builds on windows. 
//  Generated script class name must be unique - take advantage of this to avoid delegation 
//  count from left of screen, 0 = left most   count from bottom of screen, 0 = bottom most, 1 == 2nd from bottom 
//  We need to update pending count outside of withLocks() so that we don't have a race   condition where the pending count is 0, but a child worker lease is still held when   the parent lease is released. 
//  must be a @ClassRule; use the rule's class name instead 
//  By default, we push to the local cache. 
//  Copied from ToolProvider.defaultJavaCompilerName 
//  will flush any unterminated lines out synchronously 
//  no default mapping found for this configuration, map   configuration to itself 
//  Check if there are any transitive incoming edges at all. Don't traverse if not. 
//  <thead>     <tr>       <td>Block</td>       <td>Description</td>     </tr>   </thead> 
//  we're asking for a runtime variant, prefer -jars first 
//  GradleBuild tasks operate with their own build session and tree scope.   Therefore, they have their own RootBuildCacheControllerRef.   This prevents them from reusing the build cache configuration defined by the root.   There is no way to detect that a Gradle instance represents a GradleBuild invocation.   If there were, that would be a better heuristic than this. 
//  Generate new Object[] { args } 
// Logging exception here is only needed because by default Gradle does not show the stack trace 
//  Add attributes to be applied given the extension 
//  we're asking for an API variant, prefer -jars first for runtime 
//  nothing to do 
//  Always append a new line at EOF 
//  stop at super and this 
//  Don't generate method if it's not part of the view schema 
//  We have to go through URIish and back to deal with differences between how   Java File and Git implement file URIs. 
//  only check for the last byte of a multi-byte line separator   besides this, always check for '\n' 
//  non-heap spaces are not garbage collected 
//  Capture all output, lazily up until two new lines and an END_OF_TASK designation 
//  in order to make sure that the CacheEntry is not collected   while the cached class loader is still in use, we need to keep a strong reference onto 0
//  GENERATE new MixInExtensibleDynamicObject(this, getClass().getSuperClass(), super.getAsDynamicObject(), this.services()) 
//  assume EJB is the most common kind of EAR deployment 
//  Automatically substitute all available modules 
//  Force back to configure so that task graph will get reevaluated 
//  avoids creation of empty hashset 
//  full match 
//  copy one by one until the underflow has been resolved 
//  Order is important! 
//  static alias only for inner classes and must be at end of chain 
//  Task has already been run. This can happen when the owning build is used both at configuration time and execution time   This should move earlier in task scheduling, so that a worker thread does not even bother trying to run this task 
//  Disallow work-in-progress to take up more than half of the console display   If the screen size is unknown, allow 4 lines 
//  repositories 
//  Badly form args list 
//  By default, we do not push to the remote cache. 
//  For a dependency from _another_ build to _this_ build, don't make the artifact buildable   Making these artifacts buildable leads to poor error reporting due to direct task dependency cycle (losing the intervening build dependencies) 
//  this mimics the behavior of the Ant javac task (and therefore AntJavaCompiler),   which silently excludes files not ending in .java 
//  Handle trivial cases with 0 or 1 elements in both current and previous 
//  Latest is only given priority if it's in a require 
//  Should run after edges only exist between tasks, so this cast is safe 
//  Called from transformed DSL rules 
// noinspection SimplifiableIfStatement 
//  There was a breaking change after 0.8 
//  Use the loaded settings if it includes the target project (based on build file, project dir or current dir) 
//  Prefer having javac validate the location over us, by calling it first. 
//  this.super() 
//  Create a client that will match based on the daemon startup parameters. 
// in case one wants to synchronize this method,  bear in mind that it is blocking so it cannot share the same lock as others 
//  Write header 
//  Implementation provided by decoration 
//  should never happen 
//  network authentication required 
//  Determine the net exclusion for this node, by inspecting all transitive incoming edges 
//  Failure 
//  If we can detect that stdout is not a tty.. then setup 
/*             The semantics of this method are that the given action should be notified if the            Daemon is going to be terminated at the end of this build.            It is not a generic outlet for “expiry events”.            Ideally, the value given would describe the problem and not be phrased in terms of why we are shutting down,            but this is a practical compromise born out of piggy backing on the expiration listener mechanism to implement it.          */
//  Callable<String> 
//  Same serialized content - value has not changed 
//  Output events 
//  Generate: static Class generatedFrom() { ... } 
//  The hfs+ file system stores file names in decomposed form. Don't use precomposed characters on macOS, as way too few things normalise text correctly 
//  skip the UTF-8 BOM 
//  scan parent class 
//  We temporarily want to allow skipping the publication of Gradle module metadata 
//  old versions don't send a type 
// quote ', ", \, $. Probably not perfect. TODO: identify non-working cases, fail-fast on them 
//  CopySourceSpec overrides to broaden return type 
//  This will be the left most property 
//  A local, anonymous class or a private inner class - ignore the reference 
//  Alternate appending packages at beginning and end until we reach max length 
//  but all resolved ok 
// jdk5 does not have days, hours or minutes, normalizing to millis 
//  This is a workaround for https://issues.gradle.org/browse/GRADLE-3324.   Somehow the ArrayList 'result' in `org.sonatype.aether.impl.internal.Utils#sortMetadataGeneratorFactories` ends up   being a list of nulls on windows and IBM's 1.6 JDK. 
//  Failure to select the target variant/configurations from this component, given the dependency attributes/metadata. 
//  All items are complete. Do not release project lock and simply collect failures. 
//  Serialize configuration to daemon via the process' stdin 
//  Adding a small set with no duplicates 
//  We only need to hide "main", so only support short named symbols here. 
//  TODO: Duplicated in DefaultFileLockManager 
//  Write body 
//  Stop periodic checks 
//  Wire the antlr configuration into all antlr tasks 
//  A task created by a provider that does not understand launchables 
//  Make sure tree is removed if it exists already 
/*  how and what do we have to parse  */
//  The identity check is intentional here, do not replace with .equals() 
//  GENERATE <setter>(v) 
//  That means if the current class is not an InnerClassNode 
//  A ∩ (A ∪ B) ∩ (A ∪ C) -> A 
//  Only use this for top level settings scripts 
//  protocolVersion + lockId + type 
//  Special case for events defined prior to InternalProgressEvent 
//  element name 
//  Else, already visited 
//  boolean 
//  Use preemptive authorisation if no other authorisation has been established 
//  don't rename other types of dependencies 
//  The 'is'-getter is ignored, we can skip it in favor of the 'get'-getter 
//  if the return type doesn't use generics, then it's faster to just rely on the type name directly 
//  Defer creation of failures list, assume dispatch will succeed 
//  When Groovy coerces a Closure into an SAM type, then it creates a Proxy which is backed by the Closure.   We want to track the implementation of the Closure, since the class name and classloader of the proxy will not change. 
//  Virtual platforms require their constraints to be recomputed each time as each module addition can cause a shift in versions 
//  Supports building 32-bit binaries 
//  Remove the "Daemon will be shut down" message 
//  Here, we try to avoid using the reg exp backed pattern step, as it is expensive in terms of performance and heap usage.   There are several special cases we handle here:   1. '*'   2. '*' <literal>   3. <literal> '*'   4. <literal> '*' <literal>   5. <literal>   Everything else uses a reg exp. 
// failed to instantiate BlockJUnitRunner. try deprecated JUnitRunner (for JUnit < 4.5) 
//  we are at the first name part. This is the right most part.   If this part is in lower case, then we do not need a class   check. other parts of the property expression will be tested   by a different method call to this method, so foo.Bar.bar   can still be resolved to the class foo.Bar and the static   field bar. 
//  ordinary Groovy Gradle script   Kotlin Gradle script 
//  in the map, store a minimally populated LaunchableGradleTaskSelector that contains just the description and the path   replace the LaunchableGradleTaskSelector stored in the map iff we come across a task with the same name whose path has a smaller ordering   this way, for each task selector, its description will be the one from the selected task with the 'smallest' path 
//  the enqueue and dequeue methods are used for performance reasons 
//  remaining methods are here to make sure we didn't forget anything 
//  An internal counter used to track the number of outgoing edges   that use this selector. Since a module resolve state tracks all selectors   for this module, when considering selectors that need to be used when   choosing a version, we must only consider the ones which currently have   outgoing edges pointing to them. If not, then it means the module was 
//  Skip processing of any operations that both start and complete in the queue 
/*         TODO change this so that we extract all the information at compile time.        At the moment we use the transform to:        1. validate/restrict the syntax        2. transform rules into something more robust (e.g. foo.bar.baz {} into configure("foo.bar.baz", {})) - no dynamic propertyMissing() nonsense        3. hoist out input references (i.e. $()) into an annotation on rule closure classes to make available        This means we actually have to execute the code block in order to find the rule information within.        This is also problematic because it means we have to serialize this information into some form that fits into annotations.        Later, we will extract all the “up-front” information we need to know during compile time.        This will mean that we only need to execute the rules themselves, and not any code to actually register the rules.      */
//  Converts the binaries of a project library into regular binary instances 
//  if there are only 3 or fewer known subtypes, render them   in a single column 
//  not sure if this is required as its the parent of   deprecatedUsageLoader already
//  Worker didn't crash 
//  Classloader scope will be handled by the cache, class will be released when the classloader is. 
//  Deserialize the old value and use the equals() implementation. This will be removed at some point 
//  Time interval between the first event in the window and the last 
//  copy in case any actions mutate the store   linked list because the underlying store may preserve order   We make best effort not to create an intermediate collection if this container   is empty. 
//  Check ClassLoaders 
//  Flush and clean up 
//  Apache commons 
//  Needed to use inside lambda below 
//  Pad 
//  (macOS) Looks like: Test Case '-[AppTest.PassingTestSuite testCanPassTestCaseWithAssertion]' started.   (Linux) Looks like: Test Case 'PassingTestSuite.testCanPassTestCaseWithAssertion' started. 
//  Only initialize "name" child node if the schema has such a managed property.   This is not the case for a managed subtype of an unmanaged type that implements Named. 
//  for all commons attributes, make sure they are compatible with each other 
//  Any ProgressOperation in the parent chain has a message, the operation is considered renderable. 
/*      * Configures the project, discovers tasks and binds model rules.      */
// html does not like <a name="..."/> 
//  Missing parameter name 
//  Visit the selectors 
//  fallback to old behavior of always loading the resource 
//  Not quite immutable, see ImmutablePatternSet 
//  Should never get here, the last strategy should be a catch all
//  Add JVM args that were explicitly requested 
//  Before there was --scan, there was -Dscan or -Dscan=true or -Dscan=yes 
//  Already seen this ClassLoader 
//  some capabilities are explicitly required (in other words, we're not _necessarily_ looking for the default capability   so we need to filter the configurations 
//  there are still more than one candidate, but this time we know only a subset strictly matches the required attributes   so we perform another round of selection on the remaining candidates 
//  There has been a GC event 
//  No statements, or no statements that have an effect 
// noinspection ForLoopReplaceableByForEach 
//  if no installation can be located 
//  Matches: task <arg>{1, 3} 
//  Defaults 
//  XML declarations must be located at first position of first line 
//  2) we don't do progress logging for "downloading" 
//  Filter unexisting files as FindBugs can't handle them. 
//  CBZip2InputStream expects the opening "BZ" to be skipped 
//  try simplify 
//  We need to lock other processes out here because garbage collection can be under way in another process 
// we're making an assumption that all <pre> elements contain java code  this should mostly be true :)  if it isn't true then the syntax highlighting won't spoil the view too much anyway 
//  validate that the targetPlatform is valid 
//  Universal CRT is required only for VS2015 
//  GENERATE public boolean hasProperty(String name) { return getAsDynamicObject().hasProperty(name) } 
// CHECKSTYLE:ON 
//  We avoid using reflect, since that leads to class loading exceptions 
//  skip over stack trace 
//  <thead>     <tr>       <td>Method</td>       <td>Description</td>     </tr>   </thead> 
//  return state.equals(((GeneratedView)arg).__view_state()); 
//  When age == 0, verified since the start of this build, assume listing hasn't changed 
//  Emulate secondary inputs as a single property for now 
//  TODO - push all this stuff down to the tool chain and let it create the specific platform and provider 
//    Add `boolean immutable() { return true }`   
//  Don't know about this type 
//  Add the block line-number as an argument to call `plugins(int lineNumber, Closure pluginsBlock)` 
//  We check the params passed to the build factory 
//  Failed in another thread 
//  Called when some other problem occurs 
//  A project is involved, need to be aware of it
//  Store this because Locale.default is mutable and we want the unchanged default   We are assuming this class will be initialized before any code has a chance to change the default 
//  Only fire once 
//  Not a leaf node. Move up an entry from a leaf node, then possibly merge the leaf node 
//  If the configuration can still be mutated, we need to create a composite 
//  Disabled before 2.3 release due to not wanting to validate task names (which may contain invalid chars), at least not yet   ModelPath.validateName(name); 
//  Last group; what ever is left take that replace all characters that are not alphanum or '_' or '-' 
//  Else, the provider is of incompatible type, maybe we have a domain object collection of Provider, fallthrough 
//  TODO: Default branch can be different from just master 
//  only create an intermediate collection if there's something to copy 
//  Convert the UTF-8 manifest bytes to the requested content charset 
//  Same as above, if we have wrapped a closure in a WrappedConfigureAction or a ClosureBackedAction, we want to 
//  If there's an explicit dependency from consuming node to destroyer,   then we accept that as the will of the user 
//  check that groovy is visible. 
//  but visible as the surrounding class is imported and the inner class is public/protected static 
//  Wire the task into the library model 
//  Set the context classloader the bootstrap classloader, to work around the way that JAXP locates implementation classes   This should ensure that the JAXP classes provided by the JVM are used, rather than some other implementation 
//  Matches: task <expression> <operator> <expression> 
//  TODO: Removing `debug` from variant name to keep parity with previous Gradle version in tooling models
//  Use a random prefix to avoid reusing test directories 
//  fast path for two 
//  Ignore, deal with this problem later
//  Looks in the correct project registry for this binary 
//  Have visited this node's dependencies - add it to the graph 
//  Same size and no differences 
//  If textArea is on a status line but nothing was written, this means a new line was just written. While   we wait for additional text, we assume this row doesn't count as overlapping and use it as a status   line. In the opposite case, we want to scroll the progress area one more line. This avoid having an one 
//  Add artifact format as an implicit attribute when all artifacts have the same format 
//  TODO extract common stuff from this and ModelSet and reuse 
/*      * Allow null as a valid input. The default is to disallow null.     *     * <p>When this is enabled, all converters must be null safe.     *     * TODO - attach the null safety to each converter and infer whether null is a valid input or not.      */
//  (ia64 is no longer supported on later versions of Visual Studio) 
//  TODO - this belongs with the 'var' data structure 
//  Dependencies 
//  See JLS3 "Binary Compatibility" (13.1) 
//  This could probably be more efficient 
//  else ignore 
//  Not already known, attempt to self-close the parent 
//  TODO - introduce a new 'var' data structure that allows these conventions to be configured explicitly 
//  Calculate the actual type 
//  Clear environment variables that might effect cl.exe & link.exe 
//  Save the existing object being deserialized. 
//  Does nothing 
// it's possible that we receive an output for a suite here  in this case we will create the test result for a suite that normally would not be created  feels like this scenario should modelled more explicitly 
//  Check the normal metadata first 
//  Mark this version as rejected 
//  let's override this so that delegate isn't created at autowiring time (which would mean on every build) 
//  Was previously traversed, and no change to the set of modules that are linked by outgoing edges.   Don't need to traverse again, but hang on to the new filter since it may change the set of excluded artifacts. 
//  Jansi is required to log errors when generating Groovydoc 
//  For now just collect this as another dependency   TODO - collect this information and merge the metadata from the other module 
//  Short-circuit selector merging for single selector without 'prefer' 
/*         Note: the intention here is to work towards not having to create new objects        to meet the notification object interfaces.        Instead, the base types like BuildOperationDescriptor should implement them natively.        However, this will require restructuring this type and associated things such as        OperationStartEvent. This will happen later.      */
//  We might be able to use a cached/locally available version 
//  TODO: Combine with ProjectDependencyPublicationResolver
//  Read shared packages 
//  Do not forward events for rendering when there are no listeners to receive 
//  Ignore some broken samples 
//  <method>.getGenericReturnType() 
// when test is completed we should redirect output for the parent  so that log events emitted during @AfterSuite, @AfterClass are processed 
//  Add more data patterns to the default configuration to work around https://github.com/gradle/gradle/issues/1596 
//  Build a strongly typed (mergeable) exclude spec for each supplied rule 
//  Otherwise, already have a result, so reuse it 
//  End of path, might match when more elements added 
//  all of the interfaces that we decorate have 100% void methods  noinspection ConstantConditions 
//  TOOD:LPTR Should be just a relative path
//  first match, just record the value. We can't use "null" as the candidate value may be null 
//  TODO The scope information is superseded by test attributes. We can delete the corresponding code bits once we make sure that the majority of Buildship users use test sources.
//  If this configuration's version is in conflict, do not traverse.   If none of the incoming edges are transitive, remove previous state and do not traverse.   If not traversed before, simply add all selected outgoing edges (either hard or pending edges)   If traversed before:        If net exclusions for this node have not changed, ignore        If net exclusions for this node not changed, remove previous state and traverse outgoing edges again. 
//  Selected for the configuration 
//  TODO we are relying on the registration having established these links, we should be checking 
//  Forward output immediately when the focus is on this operation group 
//  Note that @CompileClasspath here is an approximation and must be fixed before de-incubating getAstTransformationClasspath()   See https://github.com/gradle/gradle/pull/9513 
//  This means the client has not reported memory usage yet 
//  first let antlr preprocess the grammars... 
/*             Note: we currently extract this information from the execution plan because it's            buried under functions in #filter. This could be detangled/simplified by introducing            excludeTasks(Iterable<Task>) as an analog to addEntryTasks(Iterable<Task>).            This is too drastic a change for the stage in the release cycle were exposing this information            was necessary, therefore the minimal change solution was implemented.          */
//  When cancelled, try to stop the download thread but don't attempt to wait for it to complete   Could possibly loop here for a while trying to force the thread to exit 
//  possibly an inner class 
//  File loop exceptions are ignored. When we encounter a loop (via symbolic links), we continue   so we include all the other files apart from the loop.   This way, we include each file only once. 
//  When dependency resolution has failed, we don't want the build operation listeners to fail as well   because:   1. the `failed` method will have been called with the user facing error   2. such an error may still lead to a valid dependency graph 
//  Recreate the invoker when deserialized, rather than serialize all its state 
/*  method was only introduced in Groovy 1.8  */
//  Generate: <init>(Object[] state) { } 
//  make convention mapping work (at least for 'main'...   ...and for 'jvmArgs') 
//  found more than one 
//  Rely on the default linkage for providing the headers 
//  Unrecognized extension 
//  The CustomRunner class will fail this test if this class is initialized before its    run method is triggered.
//  Cannot yet publish module metadata without component 
//  in-process Groovy compilation throws a CompilationFailedException from another classloader, hence testing class name equality   TODO:pm Prefer class over class name for equality check once using WorkerExecutor for in-process groovy compilation 
//  TODO - do not hold lock while computing value 
//  Generate: int getFactoryId() { return <factory-id-field> } 
//  Using the caches for these connections leaves the Jar files open. Don't use the cache, so that the Jar file is closed when the stream is closed below   There are other options for solving this that may be more performant. However a class is inspected this way once and the result reused, so this approach is probably fine
//  for guessing right side part of a mapping 
//  Update any previously known files with a bogus timestamp to force a rebuild 
//  In case of getting a ConstructedClassWithPackage here we do not do checks for partial   matches with imported classes. The ConstructedClassWithPackage is already a constructed 
//  See TestDataGeneratorTest for examples 
//  The compilation will generate the new mapping file   Only merge old mappings into new mapping on incremental recompilation 
//  Should be using ConfigureUtil (with DELEGATE_FIRST strategy), however for backwards compatibility need to use OWNER_FIRST 
//  TODO - calculate this list of classes dynamically 
//  Collect incremental input changes 
//  for Groovy <1.6, we need to call org.codehaus.groovy.runtime.InvokerHelper#getVersion 
//  Any configuring event received from nested or buildSrc builds before the root build starts configuring is ignored 
// optional 
//  First try to determine the artifacts in-memory (e.g using the metadata): don't use the cache in this case 
//  experimentation shows the following, excluded modules are   inherited from parent POMs if either of the following is true:   the <exclusions> element is missing or the <exclusions> element 
//  Chuck away the implicit target. It has already been executed 
//  construct build invocations from task selectors and project tasks 
/*                 val leftResult = result.left()                val errorSeq = left.get()                // convert errorSeq -> Java types              */
//  Configure the binaries 
//  For legacy software model behaviour, which is to assume that any kind of runtime can be built when any compiler is available 
//  Ensure that deploy jars are not also added into lib folder.   Allows the user to get transitive dependencies for a bean artifact by adding it to both earlib and deploy but only having the file once in the ear. 
//  Versions before 5.1 would unpack the exception and throw part of it, losing some context 
//  Maps from interned absolute path for a file to metadata for the file. 
//  Don't traverse path back to root when there is nothing that can possibly match 
//  Find failure section 
//  For example, when using a local access to resolve something remote 
//  Do we have an 'is'-getter as well as a 'get'-getter?
//  There are enough entries in this block and the right sibling to make up 2 blocks, so redistribute   the entries evenly between them 
//  Capture the relative file 
/*  if it's already OSGi compliant don't touch it  */
//  Already visited this node 
//  Collect a map from component to coordinates. This might be better to move to the component or some publications model 
//  For each module participating in the conflict, deselect the currently selection, and remove all outgoing edges from the version. 
//  Nothing accessible, always up to date 
//  This is not the root block. Must have children >= minIndexChildNodes 
//  Compile all main routes files last 
//  This is necessary so that the watcher indicates its not running if the runnable gets cancelled 
//  ok to use caller classloader 
//  here, we need to check that applying the new resolution filter   we would actually exclude exactly the same dependencies as in   the previous visit. It is important that this is NOT a heuristic   (it used to be) because if the filters are _equivalent_, we would 
//  Iterate through each page of results, and add them to our results list. 
//  Note that the sourceSet is the sourceSet this pre-compiled header will be used with - it's not an   input sourceSet to the compile task. 
//  Stop is very slow, clean it up later 
//  Maximum pool size is fixed, so we should only need to get it from the first event 
//  If no tasks is specified then the default tasks will be executed.   To work around this, we assign a new empty task for execution. 
//  See the comment for {@link #createIsolatedClassLoader} above 
// the unlock was confirmed we are waiting 
//  First try to determine the artifacts locally before going remote 
//  In case more descendants are added to downward hierarchy, make sure they'll notify us 
//  implementation based on Spock's StackTraceFilter class 
//  No C++ compiler, complain about it 
//  Need to override as error message is hardcoded in constructor of public type ResolveException
//  MSVC doesn't allow a space between Fo and the file name 
//  At this point we know that we have a match for pname. This may   mean, that name[pname.length()..<-1] is a static inner class.   For this the rest of the name does not need any dots in its name.   It is either completely a inner static class or it is not.   Since we do not want to have useless lookups we create the name   completely and use a ConstructedClassWithPackage to prevent lookups against the package. 
//  BuildListener 
//  Clean the interrupted status 
//  A work around for not being able to skip the task when an input _file_ does not exist 
//  Reserve 0 for null (to be added later) 
//    Add factory method   
//  Nothing - just return the highest version 
//    Add `getFactoryId()` 
//  TODO: Register these mappings somewhere 
//  AST transforms need their own class loader that shares compiler classes with the compiler itself 
//  Replace absent Provider with null.   This is required for allowing optional provider properties - all code which unpacks providers calls Provider.get() and would fail if an optional provider is passed.   Returning null from a Callable is ignored, and PropertyValue is a callable. 
//  Defer creation and resolution of configuration until required. Short-circuit when script does not require classpath 
//  Fall back to serialization 
//  If stdout and stderr are attached to the console 
//  Equal values are compatible 
//  https://docs.oracle.com/javase/specs/jls/se12/html/jls-3.html#jls-BooleanLiteral 
//  Zero or more * characters followed by literal followed by at least one * 
//  classpath change?
//  Use DirectInstantiator here to avoid setting up the instantiation infrastructure early 
//  Versions before 5.1 would sometimes add some additional 'build cancelled' exceptions 
//  References some fixed value expression, return it after macro expanding 
//  Swift tests will always have a toolchain requirement for swiftc 
//  else leading ':', this is ok 
//  We don't have mutable access to the project, so we throw a deprecation warning and then continue with   lenient locking to prevent deadlocks in user-managed threads. 
//  We don't really need to handle this.
// btw. the ibm vm+winXP also has some issues detecting closed streams by the child but we handle this problem differently. 
//  lists all the values a revision token listed by a given url lister 
//  TODO - also close console when it is replaced 
//  A sequence of tokens that look like a function call argument list. Should support an arbitrary token sequence 
//  TODO: Decide if we want to push the gate concept into TAPI or other entry points   currently, a gate is only used by continuous build and can only be controlled from within the build.
//  @Param({"md5.java", "md5.bc", "sha1.java", "sha1.bc", "blake2b.bc"}) 
//  Visit the nodes prior to visiting the edges 
//  Everything else treat as a generic operation 
//  Native Services 
// Skip content download 
//  Generate makeRule() method 
// noinspection SwitchStatementWithTooFewBranches 
//  Need to delete the previous archive, otherwise stale object files will remain 
//  only set the TaskOperation as the parent if the Tooling API Consumer is listening to task progress events 
//  TargetJDK does not include 1.1, 1.2 and 1.8;   Use same fallback as PMD 
//  buffer has been fully read, start at the beginning 
//  Exactly Visual Studio 2019 
//  Note: this listener manager is scoped to the root Gradle object. 
//  Default for everything else 
//  Ignore the tag section of the comment 
//  Matches: task <identifier> <arg-list> <operator> <expression>   Map to: passThrough(task('<identifier>', <arg-list>) <operator> <expression>) 
//  performs a fast analysis of classes referenced in bytecode (method bodies) 
//  If we have no caching options, just get the thing directly 
//  Anything left over only exists in the new list 
//  add the configurations from this temporary parser to this module descriptor 
//  Old Scala Plugin does not specify a ScalaPlatform 
//  The fingerprint hashes for non-regular files are slightly different to the snapshot hashes, we only need to compare them for regular files 
//  Implementation is provided by 'plugin-use' module 
//  Implementation is generated 
// just returns the original object 
//  Iterate over the metadata sources to see if they can provide the version list 
//  No identifier, allow anything except '(' or ',' or ')' 
//  Input events 
//  File did not exist before locking, use some initial state 
//  Start the pipeline in reverse order:   1. mark daemon as running   2. start handling incoming commands   3. start accepting incoming connections   4. advertise presence in registry 
//  Corner case of Maven -SNAPSHOT compat 
//  if the collection is a read-only property, it must be initialized first (it will never be null)   if the collection is *not* read-only, then we will initialize it only if the collection is the   subject of a rule, that is to say that it can be mutated. This may look strange, if a read-write   collection is null to initialize it to an empty list, but this is how the specs define reaw-write   collections of scalar types. 
//  Make sure all entries are always written in the same order 
//  we need to compute a hash for a constant, which is based on the name of the constant + its value   otherwise we miss the case where a class defines several constants with the same value, or when   two values are switched  non-private const 
/*      * Tries to minimize the number of requests to the resolution engine by batching up requests     * for sources/javadoc.     *     * There is still some inefficiency because the ArtifactCollection interface does not provide     * detailed failure results, so we have to fall back to the more expensive ResolutionResult API.     * We should fix this, as other IDE vendors will face the same problem.      */
//  Not sure this can happen, unless in error state 
//  ignore these test suites 
//  skip exact matches 
//  runtime check because method is used from Groovy where type bounds are not respected 
//  type, payload size 
//  Check that ivy.xml isn't duplicated 
//  When age == 0, verified since the start of this build, assume still missing 
//  TODO - allow @InputFile and @SkipWhenEmpty to be attached to getExecutableFile() 
//  Save a reference to the dependency that was written before 
//  Maybe this type belongs in the same package as the node that is doing the   static import. In that case, the package may not have been explicitly specified.   Try with the node's package too. If still not found, revert to original type name. 
//  Not marked as @Nullable because of Groovy compiler bug: https://issues.apache.org/jira/browse/GROOVY-8505 
//  This happens for IBM JDK 6 for nested interfaces -- see https://issues.apache.org/jira/browse/GROOVY-7010   Let's try to return something as close as possible to the intended value 
//  Not public. Evaluation of these specs is a major hot spot for large builds, so use an array for iteration 
//  Expire compatible, idle, not recently used Daemons after a short time 
// The values are based on what I have found in sbt-compiler-maven-plugin.googlecode.com and zinc documentation  Hard to say what effect they have on the incremental build 
//  Not a zip file 
//  Cannot convert 
//  static classes are used for the actions to avoid implicitly dragging project/tasks into the model registry 
//  Add outgoing configurations and publications 
//  eliminate the common root 
//  The strategy for sharing build cache configuration across included builds in a composite,   requires that the cache configuration be finalized (and cache controller available)   before configuring them. This achieves that. 
//  Pass build JVM args through to daemon via system property on the launcher JVM 
//  look into the compile unit if there is a class with that name 
//  When used as an input, add the producing tasks if known 
//  no changes yet   handle case where monotonic clock isn't monotonic 
//  type2 = ? extends S, never contained 
//  There is a possibility that a platform version was selected before a new member   of the platform was discovered. In this case, we need to restart the selection,   or some members will not be upgraded 
//  Serialize the worker config, this is consumed by SystemApplicationClassLoaderWorker 
//  values from `JvmPackageNameTest` 
//  We allow the gradle version to be overridden for tests that are sensitive   to the version and need to test with various different version patterns.   We use an env variable because these are easy to set on daemon startup,   whereas system properties are scrubbed at daemon startup.
//  Ignore input received after the monitor operation has been completed 
//  Restore the environment 
// noinspection ConstantConditions 
//  Create variants container only as required 
//  Currently not supported 
//  Different implementation - assume value has changed 
//  Float f = (Float) tmp   f==null?0:f.floatValue() 
//  if more than one conflicting project dependencies 
//  acquiring the exclusive lock can fail in the rare case where another process is just doing or has just done the cache initialization 
// started, enable 
//  Copied from http://hc.apache.org/httpcomponents-client-ga/ntlm.html 
//  return this.metaClass 
//  Ignored 
//  Reasonable default threshold bounds: between 384M and 1G 
//  solution   IllegalAccessException 
//  This can happen if this is used in a constructor or a @Before method. It also happens when using   @RunWith(SomeRunner) when the runner does not support rules. 
//  Mark all affected configurations as observed 
//  no filtering in place 
//  These will also be copied across to any daemon used 
//  Exactly Visual Studio 2013 
//  end::isolating-annotation-processor[] 
// (SF) This approach should generally work because at the moment we reset capturing output per suite  (see CaptureTestOutputTestResultProcessor) and that reset happens earlier in the chain.  So in theory when suite is completed, the output redirector has been already stopped  and there shouldn't be any output events passed  See also GRADLE-2035 
// when no daemon process has started yet 
//  This is a workaround for https://github.com/gradle/gradle-private/issues/1690 
//  Dummy rule to cause the extension to be realized 
//  The registered nodes may contain nodes which are no longer selected.   We don't remove them from the list in the first place because it proved to be   slower than filtering as needed. 
//  This is necessary because for the Tooling Api compatibility runner, NativeServices   can get initialized in a different classloader, which then makes it broken and unusable   in the test class (because the native shared library is loaded from another classloader).   By initializing it here, we ensure that it is loaded from the classloader the test class   also uses. 
//  GENERATE public ExtensionContainer getExtensions() { return getConvention(); } 
//  Read server address and start connecting 
//  Defer dependencies gathering as we need to resolve across project's boundaries 
//    Add `name` field   
//  Empty initial operation to trigger onStartWork calls 
//  2.x and 3.0-milestone-1 work on Java 6 - 8 
//  Use the highest preferred version that refines the chosen 'require' selector 
//  When not running from a Gradle distro, need runtime impl for launcher plus the search path to look for other modules 
//  to avoid silent retry 
//  end::aggregating-annotation-processor[] 
//  SkipWhenEmpty implies incremental.   If this file property is empty, then we clean up the previously generated outputs.   That means that there is a very close relation between the file property and the output. 
//  cannot compute at task execution time because we need association with source set 
//  end::functional-test-junit[] 
//  Ignore, this will be reported later 
// the unlock was just requested but not yet confirmed, give it some more time 
// triggered through tooling API of Gradle <2.3 - native-platform.dll is shared by tooling client (<2.3) and daemon (current) and it is locked by the client (<2.3 issue) 
//  Ignore all but the first recorded annotation 
//  This factory should be injected but leaves non-daemon threads running when used from the tooling API client 
//  the collection will only be initialized if more than one project candidate is found 
//  Check if node was previously traversed with the same net exclusion when not a virtual platform 
//  Read path to Gradle user home 
//  Don't care, collect the files later (in the correct order) 
//  Mandatory 
//  Ensure we have a scope 
//  TODO: Fix tests that rely on this being set before we process arguments like this... 
//  Used by generated code 
//  This deals with the fact that in TestNG, there are no class-level events,   but we nevertheless want to see the class name. We use "." rather than   " > " as a separator to make it clear that the class is not a separate   level. This matters when configuring granularity. 
//  Drain the buffer before returning end-of-stream 
//  assume indentation uses spaces 
//  Otherwise, we defer to the judgement of our internal backoff handler. 
//  slowest path, full distribution   (A ∪ B) ∩ (C ∪ D) = (A ∩ C) ∪ (A ∩ D) ∪ (B ∩ C) ∪ (B ∩ D) 
//  value 
//  Reset security manager the tests seem to have installed 
//  No supposed to happen 
//  Sort of determinism 
//  Keep the files and discard the origin values instead?
//  Short lived process, don't cache in memory 
//  Does not match element, will never match when more elements added 
//  We know that Jvm binaries are BinarySpec instances 
//  Search in the standard installation locations and construct 
//  This is used to parse a YAML file 
//  Check for duplicates 
//  Any work execution happening in nested or buildSrc builds before the root build has started executing work is ignored 
//  Write a line separator after any block 
//  The usage pattern of this exception providing the rule identity and the cause providing the detail is the   way it is due to how we render chained exceptions on build failures.   That is, because the information is usually dense, splitting things up this way provides better output. 
//  Take ownership 
//  Exactly Visual Studio 2017 
//          mapping = new ConventionAwareHelper(this, getConvention());       }       return mapping;   } 
//  If you update FILE_STORE, you may also need to update LocallyAvailableResourceFinderFactory 
//  Optimize for the single entry case, makes findEntry faster 
//  The following types can appear anywhere in the code   but say nothing about API or implementation usage 
//  RC has position sensitive arguments, the output args need to appear before the source file 
//  getMetaClass(..) 
//  Use this instead of Description.getMethodName(), it is not available in JUnit <= 4.5 
//  we don't currently hold the project lock 
//  1) Add a new 'antlr' virtual directory mapping 
//  Only called when node exists 
//  1.5 
//  Discard information region 
//  hashcode will always be used, so we precompute it in order to make sure we   won't compute it multiple times during comparisons 
//  created since last execution, possibly by another task 
//  Lock-in explicitly included builds 
//  Test Suite 'PassingTestSuite' started at 2017-10-30 10:45:47.828 
//  check for star imports (import static pkg.Outer.*) matching static inner classes 
//  Don't need to match on path 
//  GENERATE (args instanceof Object[]) ? args : new Object[] { args } 
//  Discard the calculated files collection too, but need to retain the display name for it 
//  We consider only extra attributes which are NOT on every candidate:   Because they are EXTRA attributes, we consider that a   candidate which does NOT provide this value is a better match 
//  nop if all ok 
//  if a SHA-256 hash sum has been defined in gradle-wrapper.properties, verify it here 
//  Since a single `Artifact` is shared between configurations, share the metadata type as well. 
//  Currently only snapshot the console output listener. Should snapshot all output listeners, and cleanup in restore() 
//  Setup component 
//  TODO - lock this down 
//  Exactly Visual Studio 2015 
//  This should turn into a set of converters at some point 
//  Important that this is constructed on the client so that it has the right gradleHomeDir and other state internally 
//  Convention 
//  1.4 
//  4) set up convention mapping for default sources (allows user to not have to specify) 
//  TODO: CC make capabilities accessible to rules
// remove the last walked should run after edge and restore state from before walking it 
//  Collect nodes as implicit capability providers if different than current node, selected and not having explicit capabilities 
//  Ensure a clean end of the line when the area scrolls 
//  same as default conf but is used 
//  Capture changes to implementation 
//  Broken meta-data, bail 
//  1.3 
//  if we reach this point, no match was found, either because there are no versions matching the selector 
//  Flags 
//  Capture input files state 
//  we have not root source folder information for the grammar files,   so we don't force relativeOutput as we can't calculate it.   This results in flat generated sources in the output directory 
//  Gradle stuff 
//  TODO: should validate that clazz is of a non parameterized type 
//  These fields are not covered by mutation lock 
//  Select all entry points. An entry point is a publication that does not contain a component whose parent is also published 
//  stack traces are filtered in call order (from bottom to top) 
//  TODO - this should be an input 
// allow the daemon to be started concurrently 
//  File.createTempFile sets the location of the temp directory to a static variable on the first call.  This prevents future   changes to java.io.tmpdir from having any effect in the same process.  We set this to use a common tmp directory for all   tests running in the same process so that we don't have a situation where one process initializes with a tmp directory   that it then removes, causing an IOException for any future tests that run in the same process and call File.createTempFile. 
//  Capture and restore this in case the build code calls Locale.setDefault() 
//  Ignore the version if the string cannot be read 
//  See https://issues.gradle.org/browse/GRADLE-3470 
//  Create a proxy 
//  Ignore the other values 
//  We can't use an immutable list here because some hashes can be null 
//  Look for 'our' daemon among the busy daemons - a daemon will start in busy state so that nobody else will grab it. 
// We cannot just delegate to the add method as we need the file content for checksum calculation here  and reexecuting the action isn't acceptable 
//  Read whether process info should be published 
//  List modules with missing metadata files 
//  Effectively read the manifest 
//  Loaded from a classes dir - assume we're running from the ide or tests 
//  for each source set we will: 
//  skip built-in properties 
//  this handles '\r' (MacOSX 9), '\r\n' (Windows) and '\n' (Linux/Unix/MacOSX 10) 
//  Make a copy of the closure, attach inputs and execute 
//  also check interfaces in case we have interfaces with nested classes 
//  Use the timestamped version for all published artifacts:   The timestamped version is hidden deep in `Metadata.versioning.snapshotVersions` 
//  Any Swift 4.x compiler 
//  ignore 
/*  @Nullable  */
//  Register a builder for the custom tooling model 
//  We need to check if the target version exists. For this, we have to try to get metadata for the aligned version.   If it's there, it means we can align, otherwise, we must NOT add the edge, or resolution would fail 
//  this method should have been added to the class 
//  @formatter:off 
//  Any Swift 3.x compiler 
//  Does not need to be redrawn 
//  is present, but empty. 
//  slowest path 
//  Otherwise do deep compare of outputs 
//  TODO - should attempt to flush the output stream prior to writing to the error stream (and vice versa)
//  Choose the shortest match 
//  Path is-a Iterable, so check before checking for Iterable 
//  kept for backwards compatibility of plugins using internal APIs 
//  GENERATE public Object invokeMethod(String name, Object params) { return getAsDynamicObject().invokeMethod(name, (Object[])params); } 
//  Fields used for performance optimizations: we avoid computing the derived dependencies (withConstraints, withoutConstraints, ...)   eagerly because it's very likely that those methods would only be called on the selected variant. Therefore it's a waste of time   to compute them eagerly when those filtering methods are called. We cannot use a dedicated, lazy wrapper over configuration metadata 
//  This line MUST be last! 
//  Replace deprecated usage values 
//  Basically, if we see an operation with a logging header and it's not grouped, just log it 
//  use reflection to support older JVMs while supporting Java 9 
//  Big-endian 
//  Apply any artifact type mappings to the attributes of the variant 
//  Using DefaultTestClassDescriptor to fake JUnit test 
//  Called under lock 
//  Meta data artifacts are determined locally 
//  GENERATE objectFactory.listProperty(type) 
//  Collapse the set 
//  Wait for any work still running in other threads 
//  Since s3 transport supports only one type of credentials at a time, let's use the first one found. 
//  @formatter:on 
//  Could return true if all of the read only properties point to immutable objects, but at this stage there are no such types supported 
//  add the module configuration's files 
//  Matches: task <identifier>, <arg>? 
//  Actual format: 'Apple Swift version 4.0.2 (...)' 
//  Overwrite the source to exclude `LinuxMain.swift` 
//  Unpack the provider 
//  remains the same as the content in the existing file 
//  No SDK information available in the registry 
//  Logging configuration 
//  Skip this for now 
//  https://github.com/gradle/gradle/issues/5763 
//  if we ask for "external" dependencies, it's still fine to bring a fat jar if nothing else is available 
//  Arbitrarily select and mark all as rejected 
//  Notify child configurations 
//  IDEA adds the JDK's bootstrap classpath to the classpath it uses to run test - remove this 
//  Can wait on request if previous handler allows waiting 
//  the order is strange logically but here for performance optimization 
//  only interrupt poller thread if it's not current thread 
//  Used to maintain timer 
//  test default imports 
//  Should reuse the link parsing stuff from JavadocLinkConverter instead 
//  if we are allowing unknowns, just pass through the whole arg 
//  Use the result of previous rules as the input for dependency substitution 
//  Not present in output, check error output. 
//  These could be injected directly to DefaultTransformerInvoker, too 
//  Used by HasPrefixAndSuffixPatternStep to ensure the suffix isn't matching any part of the prefix. 
//  Ignore future states of the input node 
//  Could be precomputed, but we avoid doing so if attributes are never requested 
//  It's often the case that all the candidate values are the same. In this case, we avoid   the creation of a set, and just iterate until we find a different value. Then, only in   this case, we lazily initialize a set and collect all the candidate values. 
// adding custom test listeners before Gradle's listeners.  this way, custom listeners are more powerful and, for example, they can change test status. 
// some validation: 
//  TODO: match with status, order versions correctly 
//  Check other behaviour still works 
//  Check already resolved results for a compatible version, and use it for this dependency rather than re-resolving. 
//  Evaluate init scripts 
//  It's an intersection, and this method is always called on the remainder   of a reduction operation. If the remainder is empty then it means that   the intersection is empty 
//  Any available GCC compatible implementation (including mingw, cygwin, and clang) 
//  When annotation processing isn't required, it's better to add the Groovy stubs as part of the source path.   This allows compilations to complete faster, because only the Groovy stubs that are needed by the java source are compiled. 
//  NOTE: There isn't much we can do about collection.matching { } filters as the spec requires a realized element, unless make major changes 
//  Presence of capabilities is bound to the definition of a capabilities extension to the project 
//  Do NOT change the order of members used in hash code here, it's been empirically   tested to reduce the number of collisions on a large dependency graph (performance test) 
//  Have received all requests, or have released something, so downstream can wait. This isn't quite right 
//  Avoid creating a copy if the resulting configuration is identical 
//  Convert Scala Seq[RoutesCompilationError] -> Java List<RoutesCompilationError> 
//  registry doesn't exist yet 
/*  (non-Javadoc)         * @see org.apache.ivy.plugins.parser.m2.PomDependencyMgt#getArtifactId()          */
//  Some other meta-class implementation - fall back to the public API 
//  A cycle, treat as resolved here 
//  To determine the dependencies of the class, load up the byte code and look for CONSTANT_Class entries in the constant pool 
//  There is some value to the other ways to locate MSBuild (aka matching the MSBuild installation with the VS installation), this is a last chance to try and locate a usable MSBuild installation which will just try to get the latest available MSBuild. We can refine this later. 
//  TODO: convert output file checks to a resource lock 
//  Gather the default tasks from this first group project 
//  Not empty: may match any case above 
//  Host: x64 
//  Remove the deprecations message: "Deprecated Gradle features...", "Use '--warning-mode all'...", "See https://docs.gradle.org...", and additional newline 
//  we must add the implicit capability here because it is assumed that if there's a rule   "addCapability" would effectively _add_ a capability, so the implicit one must not be forgotten 
//  1. Stop handling disconnects. Blocks until the handler has finished.   2. Stop the connection. This means that the thread receiving from the connection will receive a null and finish up.   3. Stop receiving incoming messages. Blocks until the receive thread has finished. This will notify the stdin and receive queues to signal end of input.   4. Stop the receive queue, to unblock any threads blocked in receive().   5. Stop handling stdin. Blocks until the handler has finished. Discards any queued input. 
//  tries to relocate literals in the form of foo.bar.Bar 
//  Based on https://github.com/playframework/playframework/blob/2.6.0/framework/src/build-link/src/main/java/play/TemplateImports.java 
//  Make sure getters end up before the setters 
//  GENERATE <method>(…, ConfigureUtil.configureUsing(v)); 
//  default Scala version 
//  TODO:ADAM - ARM only if the target OS is Windows 8 or later   TODO:MPUT - ARM also if the target OS is Windows RT or Windows Phone/Mobile/CE   TODO:ADAM - IA64 only if the target OS is Windows 2008 or earlier
//  Exception has already been reported 
//  Define some additional variants 
//  TODO - mix this in using decoration. Also validate closure parameter types, if declared 
// First, we replace slashes because they have special meaning in the javadoc options file  Then, we replace every linebreak with slash+linebreak. Slash is needed according to javadoc options file format 
// we don't serialise the module dependencies at this stage so we need to keep track  of the mapping module dependency <-> resolved dependency 
//  We intentionally consider “execution” done before doing afterEvaluate.   The Android plugin relies on this behaviour. 
//  Other stuff 
//  The following state needs to be tracked to consistently construct `ComponentOverrideMetadata` independent of the order dependencies are visited 
//  create a new temporary parser to read the configurations from   the specified file. 
//  Only called when node exists, therefore node is known 
// CHECKSTYLE:OFF 
//  TODO - the suffix should be a deterministic function of the known and enabled annotations   For now, just assign using a counter
//  for tests using rich console standard out and error are combined in output of execution result 
// there is already registered conflict with at least one matching participant, hook up to this conflict 
//  TODO: We should see if we can go back to using HttpClient again.   This implementation is borrowed from the Apache HttpClient project   https://github.com/apache/httpclient/blob/4.2.2/httpclient/src/main/java/org/apache/http/conn/ssl/SSLSocketFactory.java#L246-L354 
//  Contract requires build events are delivered by a single thread. This is taken care of by the daemon client when not in embedded mode   Need to apply some synchronization when in embedded mode 
//  end::custom-task-implementation[] 
//  Explain that Groovy, for compile, also needs the resources (#9872) 
//  no retry 
//  There are 2 possibilities here:   1. the "platform" referenced is a real module, in which case we directly add it to the graph   2. the "platform" is a virtual, constructed thing, in which case we add virtual edges to the graph 
// TODO reuse cached result from downstream users of our classes directory 
//  standard doclet options 
//  no luck 
//  verify URL by making a HTTP call 
//  this should really be <String, Object>, however properties loader signature expects a <String, String>   even if in practice it was never enforced (one can pass other property types, such as boolean) an   fixing the method signature would be a binary breaking change in a public API. 
//  Ignore files 
//  If the current target is a project component, it must be unmodified from the requested 
// this means that we receive an output before even starting any class (or too late).  we don't have a place for such output in any of the reports so skipping.  Unfortunately, this happens pretty often with current level of TestNG support  because output events emitted by constructor, beforeTest, beforeClass   are sent before test start event is started and there is no parent class event emitted by TestNG.  In short, the TestNG support could be better. See also TestNGOutputEventsIntegrationTest
//  After this point we only see getters 
// target does not exist in the map, there's no cycle for sure 
//  fine one or more project dependencies among conflicting modules 
//  _state == ARTIFACT_EXCLUDE || EXCLUDE 
//  barrier open, let it travel on 
//  ignore this installation for validation, it will be caught later 
//  On macOS, we assume co-located Xcode is installed into /opt/xcode and default location at /Applications/Xcode.app 
// this shouldn't happen if you call check availability with #available first 
//  Matches: task <name-value-pairs>, <identifier>, <arg>?   Map to: task(<name-value-pairs>, '<identifier>', <arg>?) 
//  could be caused by https://bugs.openjdk.java.net/browse/JDK-8011537 ignore problems in stopping 
//  Forward special cases directly to consumer 
//  can't delegate to compileClasspathLoader because this would result in ASTTransformation interface   (which is implemented by the transform class) being loaded by compileClasspathClassLoader (which is 
//  No 2.11 version of routes compiler published 
//  Default methods are public non-abstract instance methods declared in an interface. 
//  this.getMetaClass() 
//  The current filestore 
//  This uses the system classloader and will not release any loaded classes for the life of the daemon process.   Do not use this to load any classes which are part of the build; it will not release them when the build is complete. 
//  TODO - do not assume Maven layout 
//  when a selector changes from non forced to forced, we must reselect 
//  check that the length of the reserved region is enough for storing our content 
//    Generate implementation class   
// root should be the last entry 
//  legacy mode 
//  Print the header if:     we're in verbose mode OR we're in rich mode and some output has already been rendered     AND     we haven't displayed the header yet OR we've displayed the header but the status has since changed
//          metaClass = GroovySystem.getMetaClassRegistry().getMetaClass(getClass());       }       return metaClass;   } 
//  Don't need to do parameter substitution, return the value of the expression after macro expanding it 
//  Simplifies (A ∪ ...) ∩ A = A 
//  There is an inheritance hierarchy in play here, so the order   of the clauses is very important.
//  Flush any buffered events and update the clock 
// Ignore. It means the client has disconnected so no point sending him any log output.  we should be checking if client still listens elsewhere anyway. 
//  Need to check that versions do match, mismatch indicates a force was used 
//  else, already visited previously, skip 
//  do this after wtp is configured because wtp config is required to update classpath properly 
//  Implicit JVM args that should be used to fork a JVM 
//  Unbox value 
//  Add included builds defined in settings 
//  No target, or target is an ancestor of this node, so is already being handled 
// one binary store per id+threadId 
//  Remove any outgoing edges for the current selection 
//  Expire after normal idle timeout 
//  Generate sourceLocation() method 
//  <inputs-lvar> = <inputs-field> ?: <parent-inputs-lvar> 
//  Guava 
//  used internally to determine if a rule effectively did something 
//  TODO: Assumes there's a single 'main' C++ component 
//  Else, something has changed in the include file graph for this source file, so analyse again 
//  block until ready for write operations 
//  Compile the interface to a temp file and then copy it to the cache folder.   This avoids sporadic cache lock timeouts when the compiler interface JAR takes   a long time to generate while avoiding starving multiple compiler daemons. 
//  Any Swift compiler 
// 3) new module has more than 1 version, register conflict and return 
//  GENERATE public <returnType> <propName>(<type> v) { val = super.<propName>(v); __<prop>__ = true; return val; } 
//  No-op 
//  Foo can match both Foo and Foo$NestedClass 
//  Duplicate, ignore 
//  Always expand with trailing . 
//  Trigger a replay on this node, to add new constraints to graph 
//  not enough data points 
//  Unresolved - we have a selector that was deferred but the constraint has been removed in between
//  Called when the method throws an exception 
//  Collect for later, do not add until the graph is known to have not changed 
//  A further work around for missing ability to skip task when input file is missing (see #getInputFileIfExists below)
//  Returns a fixed value expression 
//  Try to move the file out of the way in case its permanently corrupt   Don't delete, so that it can be potentially used for debugging
// given 
//  note: it's not the role of this class to validate that the annotation is properly used, that   is to say only on a getter returning String or a Named instance, so we trust the result of   the call
//  Replace '.' with '/' in organisation 
// we don't like the assumption about the port very much 
//  Sort based on version 
//  GetMethod is used in a private method, so doesn't belong to the API 
//  If we aren't required and don't have a signatory then we just don't run 
//  What actually shows up on the console 
//  protects the following state 
//  Expose the task to build logic (for now) 
//  If no current test can be associated to the output, the last known descriptor is used.   See https://bugs.swift.org/browse/SR-1127 for more information. 
//  A cached ClassLoader 
//  super test class file not in test class directories 
//  Deprecations (these should just be rendered on the client instead of being sent to the daemon to send them back again) 
//  Capture the current state of things that we will change during execution 
//  The iteration order of zip.getEntries() is based on the hash of the zip entry. This isn't much use   to us. So, collect the entries in a map and iterate over them in alphabetical order.
//  Parent is a reference, need to resolve the target 
//  ensure type is registered 
//  We can compare here by length, because pname is always   a substring of name, so same length means they are equal. 
//  We found the desired settings file, now build the associated buildSrc before loading settings.  This allows   the settings script to reference classes in the buildSrc. 
//  in the binary inputs. 
//  Exclude frameworks for CLang - they need to be handled differently 
//  Should be final, and set in constructor 
//  The directory is passed as an argument since File.createTempFile sets the location   of the temp directory to a static variable on the first call unless a directory is passed to the call.   Some tests change java.io.tmpdir and this is to ensure that the current value of java.io.tmpdir gets used here. 
//  Avoid initializing the list if there are no components requiring download (a common case) 
//  Mix the implicit launcher JVM args in with the requested JVM args 
//  An identifier with no separator, so this is not an #include or #import directive, it is some other directive 
//  Make some assumptions about the console output 
//  Order from most recent to least recent 
//  Descriptor file has been deleted - ignore the entry 
//  This can happen when, for example, a @BeforeClass or @AfterClass method fails 
//  Use the resolved component id if available: this ensures that Maven Snapshot ids are correctly reported 
//  and  (A ∩ ...) ∪ A = A 
//  The `eclipse` task in the root project should generate Eclipse projects for all Gradle projects 
//  This URL is not recognized by the Mac console (too few leading slashes). We solve   this be creating an URI with an empty authority. 
//  Add in tools.jar to the systemClassloader parent 
//  Java and Kotlin Lambdas are coerced to SAM types at compile time, so no unpacking is necessary there. 
//  These methods return strings rather than types because it may be more complicated than what is able to be expressed via a ModelType.   Also, we don't want to encourage compatibility checking occurring by looping through such types as we have more options for optimising the compatibility check internally.   Also also, these methods are only called for reporting so values should typically not be precomputed. 
//  This is only required to avoid adding a new public constructor to the public `PatternSet` type. 
//  Based on https://github.com/playframework/playframework/blob/2.4.0/framework/src/build-link/src/main/java/play/TemplateImports.java 
//  Supported, but unavailable. Nothing to do. 
//  Could probably apply some caching and some immutable types 
//  Confirms there is enough space in candidate to fit both suffix and prefix. 
//  nothing to do, we don't store this 
//  Target: x86 
// model properties: 
//  No Visual Studio information available in the registry 
//  Ignore: All selectors failed, and will have failures recorded 
// cut the pre and postfix of this url 
//  Assume everything is loaded into the current classloader 
//  Note: this is currently not visible on {@link org.gradle.api.internal.TaskInternal} to avoid it leaking onto AbstractTask and so on to the public API. 
//  default value for older Gradle clients 
//  Callable<? extends Callable<?>> 
// override the params with the explicit settings provided by the tooling api 
//  Check dynamic object behaviour still works 
//  Cast to return type 
//  Should be constructed with the default system ClassLoader as root 
//  Ideally, we'd delegate directly to the AntBuilder, but its Closure class is different to our caller's   Closure class, so the AntBuilder's methodMissing() doesn't work. It just converts our Closures to String   because they are not an instanceof its Closure class. 
//  Cached state is not copied, since dependency inputs are different. 
//  Set the implicit system properties regardless of whether default JVM args are required or not, this should not interfere with tests' intentions 
//  Setting the length improves upload performance 
//  Ignore and fall back to growl notify 
//  TODO:Cedric find out why if we use the same ID directly, it fails resolution by trying to get the artifacts   from the resolving metadata instead of the resolved metadata 
//  according to JVM documentation 
//  Ensure target project is configured 
//  Lock protects the following state, using an intentionally simple locking strategy 
//  The target may already be modified from the original requested 
//  Skip properties with non-abstract getter or setter implementations 
//  release 
//  Taking the first selector here to determine the 'changing' status and 'client module' is our best bet to get the selector that will most likely be chosen in the end.   As selectors are sorted accordingly (see ModuleSelectors.SELECTOR_COMPARATOR). 
//  This is only used for testing purposes so we can test handling of fluid dependencies without adding dependency substitution rule 
//  Already seen this source file before. See if we can reuse the analysis from last time 
//  literal followed by * followed by literal: matches #4 above 
//  Now try each address 
//  We need to wrap the visitor so that the file seen by the visitor has already   been extracted from the archive and we do not try to extract it again.   It's unsafe to keep the FileVisitDetails provided by TarFileTree directly   because we do not expect to visit the same paths again (after extracting everything). 
//  note: this method is on TaskInternal 
//  When an artifact is being published it is first checked whether it is available.   If a transport returns `null` then it is assumed that artifact does not exist.   If we throw, an attempt to publish will fail altogether even if we use ResourceExceptions#getMissing(uri). 
//  We limit the inner class lookups here by using ConstructedClassWithPackage.   This way only the name will change, the packagePrefix will   not be included in the lookup. The case where the   packagePrefix is really a class is handled elsewhere. 
//  Serialize the worker, this is consumed by SystemApplicationClassLoaderWorker 
//  Always use x86 as default on windows 
//  Take a root worker lease, it won't ever be released as ProjectBuilder has no lifecycle 
//  Otherwise, expand 
//  List<? extends String>[] 
//  we have C[] if the list is empty -> should be an array then! 
// TODO:HH wire binary libs via executable 
//  Do not cache Test task if Jacoco doesn't produce its output as files 
//  do same decoration as in addListener to remove correctly 
//  GENERATE getAsDynamicObject().getProperty(name); 
//  everything excluded **only** applies to modules, not artifacts! 
//  Assume changed if reading old file fails 
//  Output reports per execution, not mixed.   Cross-project ModelRegistry operations do not happen concurrently. 
//  asking for a fat jar. If everything available is a shadow jar, that's fine 
//  Everything is an unmanaged struct that hasn't been handled before
//  Construct a new Compiler class 
//  It was no primitive type, so next we see if the name,   which is a vanilla name, starts with a lower case letter.   In that case we change it to a LowerCaseClass to let the   compiler skip the resolving at several places in this class. 
//  Parse parallelism flags 
//  Write the output 
//  Use Jansi's detection mechanism 
//    Add `Object unpackState() { return name }`   
//  Created only on demand 
//  Callable<?> 
//  Use the debug variant as the development binary   Prefer the host architecture, if present, else use the first architecture specified 
//  Toolchains should be using default configuration 
//  This instance ends up in build/gradle scoped services for nesteds   We don't want to invoke close at that time.   Instead, close it at the root. 
//  No matches - fall back to regexp 
//  Capture output files state 
//  If there is no previous state, then we do have output changes 
//  Should reuse `GlobalScopeServices` here, however this requires a bunch of stuff in order to discover the plugin service registries   For now, re-implement the discovery here 
//  This should apply some locking, but most access to the build state does not happen via this method yet 
//  Do not cache the task if we are not writing execution data to a file 
//  Not resolvable. Discard the body when the expression is not resolvable
//  Adding an action that is not a duplicate 
//  release the artifact to production 
//  Some interesting type references 
//  return this.name 
// ignore 
//  Lookup.defineClass can only define a class into same classloader as the lookup object   we have to use the fallback defineClass() if they're not same, which is the case of ManagedProxyClassGenerator 
//  Note: `null` for `settingsFile` means explicitly no settings         A non null value can be a non existent file, which is semantically equivalent to an empty file
//  Need another identifier 
//  GENERATE objectFactory.property(type) 
//  Download to temporary location 
//  Convert properties for logging  object 
//  Make sure it's always > 0 but without affecting the lower 32 bits 
//  For tests 
//  attempt resolution on all types, so don't short-circuit and stop if we've previously failed 
//  Left over data from previous append is only possible when a multi-chars new line is   been processed and split across multiple append calls. 
//  var = this.<field> 
//  Add dependencies for this goal 
//  the lock for this project is the only lock we hold 
//  FIXME: Always build type name to keep parity with previous Gradle version in tooling API
//  If there's more than one node selected for the same component, we need to add   the implicit capability to the list, in order to make sure we can discover conflicts   between variants of the same module. Note that the fact the implicit capability is   in general not included is not a bug but a performance optimization
//  Without this, the URLConnection will keep the backing Jar file open indefinitely   This will have a performance impact for Jar-backed `UriTextResource` instances
//  Wrap to prevent exposing Stoppable, as we don't want to stop at this scope 
//  Other home dir in use, close these. Otherwise, keep the services for next time 
//  Already realized, just run the action now 
//  Every selector was empty: simply 'resolve' one of them 
//  Cannot be private due to reflective instantiation 
//  Required for MavenLocal to verify the presence of the artifact 
//  Make sure more specific annotation doesn't get overwritten with less specific one 
//  Versions before 5.1 would discard context on forced cancel 
//  Register each child of each component 
//  IDEA Module for project in current build: don't include any module that has been excluded from project 
//  inverse process of resolveClasspath to make sure IncrementalResultStoringCompiler stores correct result 
//  Summary of deprecations is considered a part of the build summary 
//  A file that we can safely reuse the result for 
//  Not using setOptional(optional) in order to avoid <optional>false</optional> in the common case 
//  Caches the list of dependency states for dependencies 
//  It won't for arbitrary scripts though. 
//  TODO - prevent multiple threads from performing the same VCS populate operation at the same time 
//  Task graph is not calculated yet. Plugins can add tasks to it. 
//  since we might generate the deployment descriptor, record each top-level module 
//  Log events 
//  This import must be here due to a clash in Java 8 between this and java.util.Optional.   Be careful running “Optimize Imports” as it will wipe this out.   If there's no import below this comment, this has happened. 
//  These two are here to work around https://github.com/gradle/gradle/issues/6027 
//  remove leading '$', remove last child segment, use '/' as separator 
//  Returns a parameter 
//  Generate: Class immutable() { return <properties.empty> && <read-only-properties.empty> } 
//  Discard event 
//  Lock on demand 
//  Use the jar when nothing has been requested 
// InputStream originalIn = System.in; 
//  Decoration takes care of the implementation 
/*  * Exposes methods for those properties whose value is a closure. * * TODO: use composition instead of inheritance  */
//  TODO hook this in to the (daemon) build lifecycle
//  If there's more than one module id, merge them into a module id set 
//  In opposite to outgoing edges, virtual edges are for now pretty rare, so they are created lazily 
//  this.services = AsmBackedClassGenerator.getServicesForNext() 
//  make sure we don't interpret any tag while in description tag 
//  Force graph resolution as this is required to calculate build dependencies 
//  This generates a synthetic enforced platform variant with the same dependencies, similar to what the Maven variant derivation strategy does 
//  Climb up the hierarchy looking for the highest parent 
//  Netscape expires pattern 
//  The path to the project's task container in the model registry 
//  only one file 
//  Maps from interned absolute path for a file to snapshot for the file. 
//  Used by the JavaScript plugins 
//  for non-java projects there are no source sets configured 
//  If not set for >= JAXP 1.5 / Java8 won't allow referencing DTDs, e.g.   using http URLs, because Groovy's XmlParser requests FEATURE_SECURE_PROCESSING 
//  for performance, ignore flushes 
//     naming conventions via call to sourceSet.getTaskName() 
//  no common root 
//  tag::aggregating-annotation-processor[] 
//  If we're reaching this point, we're very likely going to iterate on the dependencies   several times. It appears that iterating using `dependencies` is expensive because of   the creation of an iterator and checking bounds. Iterating an array is faster. 
//  Create test suite executable 
//  TODO - reuse metaData if it was already fetched to select the component from the version list 
/*      * Indicates whether the tests should be run in deterministic order. Preserving the order guarantees that the complete test     * (including @BeforeXXX and @AfterXXX) is run in a test thread before the next test is run.     *     * Not required.     *     * If not present, the order will not be preserved.      */
//  ...   end::task-arg-method[] 
//  check module node import packages 
//  this allows us to generate the deployment descriptor after recording all modules it contains 
//  Use the runtime when nothing has been requested 
//  Unfortunate cast! see LibraryBinaryLocator 
//  path(Type) { ... } 
//  This means the client does not support reporting jvm memory info 
//  TODO: synchronization with other methods 
//  Discard this operation and all children 
//  NOTE: We do not want/need a decorated version of JavaForkOptions or JavaDebugOptions because   these immutable instances are held across builds and will retain classloaders/services in the decorated object 
//  Don't go up the parent chain.   Don't want to risk classes crossing “scope” boundaries and being non collectible. 
// see GRADLE-3027 
//  The name of the test method 
// we should consider to change the return type to DirectDependency, which requires adjustment in Kotlin DSL 
//  File resources are handled slightly differently at present.   file:// repos are treated differently   1) we don't cache their files
//  tag::sample[] 
//  Discard listeners 
//  This doesn't take into account build dependencies of the SourceDirectorySet.   Should just ditch SourceDirectorySet from here since it's not really a great model, and drags in too much baggage.
//  we don't know if the underlying collection can return a size in constant time 
//  We always ignore line order for matching out of parallel builds 
//  project.getDependencies().create(String) seems to be the only feasible way to create a Dependency with a classifier 
//  Upgrade required 
//  There is currently a requirement in the JDK9 javac implementation   that when javac is invoked with an explicitly empty sourcepath   (i.e. {@code --sourcepath ""}), it won't allow you to compile a java 9   module. However, we really want to explicitly set an empty sourcepath   so that we don't implicitly pull in unrequested sourcefiles which   haven't been snapshotted because we will consider the task up-to-date   if the implicit files change.     This implementation of hasLocation() pretends that the JavaFileManager   has no concept of a source path. 
// @Input 
//  Restarting this configuration after conflict resolution.   If this configuration belongs to the select version, queue ourselves up for traversal.   If not, then remove our incoming edges, which triggers them to be moved across to the selected configuration 
//  No compilers available, complain about the missing C compiler 
//  Task dependencies may be calculated more than once.   This guard is purely an optimisation. 
//  Fields guarded by lock 
//  Need to remember if a further element was matched by an earlier one, no need to consider it then 
//  Once the root build starts executing work, we are in Executing phase 
//  Use an OS selected port 
//  Can wait if this handler has completed or if the previous handler allows waiting 
//  Sort based on from component 
// LOG_LEVEL_MAPPING.put(LogLevel.INFO, Level.CONFIG);  LOG_LEVEL_MAPPING.put(LogLevel.LIFECYCLE, Level.WARNING);  LOG_LEVEL_MAPPING.put(LogLevel.WARN, Level.WARNING);  LOG_LEVEL_MAPPING.put(LogLevel.QUIET, Level.SEVERE);  LOG_LEVEL_MAPPING.put(LogLevel.ERROR, Level.SEVERE); 
//  Ends up with: 1 2 -> 3 <- 4 5 6 
//  Supports building both 32-bit and 64-bit binaries 
//  load the static type descriptor from class constants 
//  We'd have created an EmptyCurrentFileCollectionFingerprint if there were no file fingerprints 
//  we decided if we have a vanilla name starting with a lower case   letter that we will not try to resolve this name against .*   imports. Instead a full import is needed for these.   resolveAliasFromModule will do this check for us. This method   does also check the module contains a class in the same package   of this name. This check is not done for vanilla names starting 
//  Need to do this here, so that the transfer is 'restarted' when HttpClient reopens the resource (DIGEST AUTH only) 
//  Not an OpenJDK-compatible compiler or signature changed 
//  TODO:ADAM - Deprecate 
//  Ignore tasks created after not closed 
//  Already reached this goal 
//  We always want to include className, even if longer than max length 
//  A kotlinc warning, ignore 
//  Node must project item as S 
//  flatten because we need to serialize 
//  Add a JAVA_HOME if none provided 
// for testing 
//  when -Xmx1024m, Runtime.maxMemory() returns about 910   assume that Gradle itself uses about 150MB heap 
/*        The GroovyObject interface defines dynamic property and dynamic method methods. Implementers       are free to implement their own logic in these methods which makes it invisible to the metaclass.       The most notable case of this is Closure.       So in this case we use these methods directly on the GroovyObject in case it does implement logic at this level.      */
//  TODO: Stop all daemon services 
//  for each level in the file path, add the path 
// below could be better.  Throwing InvalidUserDataException here means that useful context information (including candidate formats, etc.) is not presented to the user 
//  If nobody said anything about this variant's target platform, use whatever the convention says 
//  Reference class via `ModelType` to avoid strong reference 
//  Used for testing the plugins DSL 
//  Create key manager 
//  if the version string cannot be parsed 
//  if exclusions == nothing, then the intersection will be "nothing" 
//  Separate Java class because IBM JDK 6 -- See https://issues.apache.org/jira/browse/GROOVY-7010 
//  Update the state region 
//  Using an array here because we're going to iterate pretty often and it avoids the creation of an iterator   that checks for concurrent modification 
//  This is copied from Ant (see org.apache.tools.ant.util.FileUtils.tryHardToDelete).   It mentions that there is a bug in the Windows JDK impls that this is a valid   workaround for. I've been unable to find a definitive reference to this bug.   The thinking is that if this is good enough for Ant, it's good enough for us.
//  The download thread may still be running. Ignore any further status events from it 
//  Fall back to propertyMissing, if available 
//  known value, only write index 
//  Not supported on Java 6 
//  avoid excess creation of Suggestion objects 
//  TODO - set header dir for applications 
//  Just an identifier, this is a token 
//  Not the first top level node 
//  tries to relocate literals in the form of foo/bar/Bar 
//  both are strings, we compare them taking into account special meaning 
//  This could very well be a zip (or something else we understand), but we can't know for sure.   The client may try to infer from the file extension. 
//  Build `buildSrc`, load settings.gradle, and construct composite (if appropriate) 
//  Check to see if we should adjust the level based on a set lifecycle log level 
//  Check environment 
//  Restart each configuration. For the evicted configuration, this means moving incoming dependencies across to the   matching selected configuration. For the select configuration, this mean traversing its dependencies. 
//  A function-like macro 
//  Object propertyMissing(String name, Object value) 
//  The provider does not know how to produce the value, so use the value instead 
//  Register capabilities for this node 
//  Set this.name = param1 
//  Milestone 4 was broken on the IBM jvm 
//  Replace if higher priority or version with highest priority and version
//  Serialize the shared packages, this is consumed by GradleWorkerMain 
//  Send some messages 
//  Could throw UncheckedIOException 
//  handle consumer < 2.7 
//      throw new IllegalStateException("Accessor already registered: " + type + " " + accessor);   } 
// no operation, if there is no script code provided 
//  this dependency is internal only 
//  Will be overwritten by setIdle if not idle. 
//  There is no script class when there are no statements or methods declared in the script 
//  TODO(daniel): Swift compiler should extends from an abstraction of NativeCompiler (most of is applies to SwiftCompiler) 
//  No services to be mixed in 
//  Any available Visual Studio implementation 
//  Here, we know that the user requested a specific classifier. There may be multiple   candidate variants left, but maybe only one of them provides the classified artifact   we're looking for. 
//  Expected 
//  non-serializable field 
//  Can only set once: should really be part of the constructor 
//  this.super(p0 .. pn) 
//  We don't care about nodes whose output is not consumed by anyone anymore 
//  throw new MissingMethodException(name, <view-type>.class, args) 
//  Because these properties can be convention mapped we need special handling in here.   If you add another one of these “modelled” properties, you need to update:   - maybeAppendModelledInstruction()   - maybePrependModelledInstruction()   - maybeSetModelledInstruction()   - getModelledInstructions()   - instructionValue() 
//  Milestone 3 
//  Override this, so that the working directory is not canonicalised. Some int tests require that   the working directory is not canonicalised 
//  Generate an authentication token, which must be provided by the client in any requests it makes 
//  TODO - creating a bundle should be done by some general purpose plugin 
//  Wire build dependent components tasks dependencies 
// ibm vm 1.6 + windows XP gotchas:  we need to print something else to the stream after we print the daemon greeting. 
//  TODO: Turn this into an `@implSpec` annotation on the comment above:   https://github.com/gradle/gradle/issues/7486 
//  see IdeaScalaConfigurer which requires the ipr to be generated first 
//  Map the arguments of this expression 
// noinspection SuspiciousMethodCalls 
//  TODO: remove these special cases
//  Don't retain the value, to allow ClassLoader to be collected 
//  Disallow custom services of type ServiceRegistry, as these are automatically provided 
//  Add a link task 
//  Assume this is a class and so has implemented all properties and methods somewhere in the superclass hierarchy 
//  This is so that VisualCpp has the object file of the generated source file available at link time 
//  If no result from 'require', just use the highest preferred version (no range merging) 
//  We are going to throw a CommandLineArgumentException below, but want the message   to reflect that we didn't recognise the first char (i.e. the option specifier) 
//  Take a copy because adding to an idMappings value may result in new mappings being added (i.e. ConcurrentModificationException) 
//  GENERATE super.<setter>(v) 
//  At this point:   If in daemon mode, the process has started successfully and all streams to the process have been closed   If in fork mode, the process has completed and all cleanup has been done   In both cases, all asynchronous work for the process has completed and we're done 
//  cache result because it is pretty expensive to compute 
//  trailing / or \ assumes ** 
//  https://github.com/gradle/gradle-private/issues/1368 
//  Milestone 8 and 9 
//  NOTE: meminfoMatcher is _not_ thread safe and access needs to be limited to a single thread. 
// otherwise the stream.size() returns max integer and the offset is no longer correct 
//  Broken in another thread 
//  Not supported for now 
//  end::host-and-path[] 
//  Include file changed 
//  Otherwise, try remotely 
//  This is a little coincidental: if view attributes have not been accessed, don't allow no matching variants 
//  TODO - we've already calculated the common prefix and calling plus() will calculate it again 
//  Add the unit test and extension 
//  Call this.super() 
//  A macro function call 
//  This ensures that subprojects are realized and register their project and project configuration IDE artifacts 
//  1. org.codehaus.groovy.classgen.asm.WriterController makes identity comparisons 
//  Milestone 6 
//  By removing the leading "/", this is no longer a "path" as defined by Eclipse 
//  Creates a control regexp pattern where extra revision tokens _must_ have the same value as the original one 
//  Notify any waiting flush threads that the worker is done, possibly with a failure 
//  Also use the generated class for itself 
//  Task execution services at all levels needs this 
//  no compatible variant found 
//  Ant is optional dependency of groovy(-all) module but mandatory dependency of Groovy compiler;   that's why we add it here. The following assumes that any Groovy compiler version supported by Gradle   is compatible with Gradle's current Ant version. 
//  usePluginsInInitScripts asserts using https://repo.gradle.org/gradle/repo 
//  used for log and date only 
//  Milestone 7 
//  Intentionally asymmetrical to getExecuted()   This prevents recursion on `project.afterEvaluate { project.evaluate() }` 
// adding the properties from the super class onto the inheriting class 
//  but should be 
//  A member of the class breaks binary compatibility.   That will be handled when the member is passed to `maybeViolation`. 
//  this.<services_method>() 
//  Empty or only whitespace 
//  re-use not possible across modules currently 
//  for backwards compatibility, we use the last added description 
//  On Linux, users cannot touch files they don't own but have write access to   because the JDK uses futimes() instead of futimens() [note the 'n'!]   see https://github.com/gradle/gradle/issues/7873 
//  <thead>     <tr>       <td>Property</td>       <td>Description</td>     </tr>   </thead> 
//  Read *.properties files 
//  implicitly don't clean up if this throws 
/*                              * For someone looking for the difference between this and the duplicate code above                             * this one uses the `testTaskProvider` and the `reportTask`. The other just                             * uses the `reportTask`.                             * https://github.com/gradle/gradle/issues/6343                              */
//  disable jar file caching to prevent file locking 
//  Add plugin implementation here 
/*  * A performance test that compares Gradle's current performance against * some baseline and fails if it is slower.  */
//  else, already visited or currently visiting (which means a cycle), skip 
//  Fix the source file name displayed in the error messages 
//  we can tell for sure 
//  When there is a class name match, return true for excluding it so that we can keep   searching in individual test methods for an exact match. If we return false here   instead, then we'll give up searching individual test methods and just ignore the   entire test class, which may not be what we want. 
/*          * Linux 4.x: MemAvailable         * Linux 3.x: MemFree + Buffers + Cached + SReclaimable - Mapped          */
//  These should come from the compiler classloader 
//  Acquire an exclusive lock on the information region and write our details there 
//  1.x works on Java 5 - 8 
//  trailing EOL 
//  Pom packaging doesn't matter when we have a single unclassified artifact 
//  Try each address in turn. Not all of them are necessarily reachable (eg when socket option IPV6_V6ONLY   is on - the default for debian and others), so we will try each of them until we can connect 
//  Use the display name anyway 
//  Use java 7 APIs, if available 
//  handle origin metadata 
//  Determine which output to produce at development time. 
//  BuildOperationListener dispatch is not serialized 
//  When running from a Gradle distro, only need launcher jar. The daemon can find everything from there. 
//  TODO - reuse graph, discard state once not required 
//  Collect the components to sort in consumer-first order 
//  replicate a little bit of AnnotationVisitor here   because we can't wait until later to do this 
//  This is the highest parent in the hierarchy 
//  No further mutation is allowed and there's no parent: the artifact set corresponds to this configuration own artifacts 
//  Do nothing for now 
//  Remove duplicates 
//  From compile configuration, or when the target's runtime configuration does not extend from compile, include the compile dependencies 
//  When creating the OSGi manifest, we must have a single view of all of the classes included in the jar. 
//  TODO - visit dependencies of this collection instead 
//  Don't write to the right-most column, as on some consoles the cursor will wrap to the next line and currently wrapping causes   layout weirdness 
//  We do not store the history if there was a failure and the outputs did not change, since then the next execution can be incremental.   For example the current execution fails because of a compile failure and for the next execution the source file is fixed, so only the one changed source file needs to be compiled. 
//  Check already-resolved dependencies and use this version if it's compatible 
//  Perform conflict resolution 
//  Caches the list of dependency states which are NOT excluded 
//  Relative coordinate system 
//  if the first call to getConfiguration is done before getDerivedVariants() is called   then it means we're using the legacy matching, without attributes, and that the metadata   we construct should _not_ include the constraints. We keep the constraints in the descriptors   because if we actually use attribute matching, we can select the platform variant which   does use constraints. 
/*      * Synchronizes on the system properties, because IvySettings iterates     * over them without taking a defensive copy. This can fail if another     * process sets a system property at that moment.      */
//  ANTLR 2 always returning 0 
//  TODO - do this inside some 'testng' suite, so that failures and logging are attached to 'testng' rather than some 'test worker' 
//  Progress events have no expensive logic of their own, so we don't do anything   with them. We only test the overhead of sending/receiving them 
//  Have not seen this node before - add its dependencies to the head of the queue and leave this   node in the queue   Make sure it has been configured 
//  Need tools.jar for compile tasks 
//  we handle the property part as if it were not part of the property 
//  We do not need to check instances of LowerCaseClass   to be a Class, because unless there was an import for   for this we do not lookup these cases. This was a decision   made on the mailing list. To ensure we will not visit this   method again we set a NO_CLASS for this name 
//  Trigger download of file, if required 
//  Do not substitute plugins from same build or builds that were not explicitly included 
// noinspection ThrowFromFinallyBlock 
//  this is an approximation: all "compiled" sources will use the same task dependency 
//  Shorten args and write out an options.txt file   This must be called only once per execute() 
//  At this point, the work-in-progress area may or may not have been resized due to maximum size constraint. 
//  Using a string instead of a plain ID here might look strange, but this turned out to be   the fastest of several experiments, including:        using ModuleIdentifier (initial implementation)      using ModuleIdentifier through ImmutableModuleIdentifierFactory (for interning)      using a 2-level map (by group, then by name)      using an interned string for the cachedId (interning turned out to cost as much as what we gain from faster checks in maps)     And none of them reached the performance of just using a good old string 
//  Copy the raw form 
//  Do not use a timestamp that is the same as the end of the last build or the start of this build 
//  When using IncrementalTaskInputs, keep the old behaviour of all file inputs being incremental 
//  unknown scope, defaulting to 'compile' 
//  Encode the character using hex notation 
//  Use an empty settings for a target build file located in the same directory as the settings file. 
//  at this point we know the component exists 
//  Any available Clang 
//  we cannot use md5 instead of sha1 here because cache will get corrupted due to its expectation of sha1 hashes 
//  discard static initializers 
//  GENERATE ((MixInExtensibleDynamicObject)getAsDynamicObject()).getConvention() 
//  If this Scala compile is published into a jar, generate a analysis mapping file 
//  Consume content for non-successful, responses. This avoids the connection being left open. 
//  Macro expand parameter 
//  Already in something to uncompress it 
//  Reset console mode 
//  Do not macro expand parameter 
//  gate hasn't been opened yet 
//  `getMaxWorkerCount() - 1` because main thread executes work as well. See https://github.com/gradle/gradle/issues/3273   TODO This could be more efficient, so that we only start a worker when there are none idle _and_ there is a worker lease available 
// don't synchronize value creation 
//  TODO: Locate this tool from a tool provider 
//  We have to keep this for a while: https://github.com/gradle/gradle/issues/4856 
//  Wire build dependent binaries tasks dependencies 
//  These files have an unreliable timestamp - discard any cached state for them and rehash next time they are seen 
//  If the previous result is still not rejected, do not need to re-resolve. The previous result is still good. 
// put the whole arguments string in single quotes, unless defaultJvmOpts was empty, 
//  A CONSTANT_Class entry, read the class descriptor 
//  we see a different value, or the set already exists, in which case we initialize   the set if it wasn't done already, and collect all values. 
//  Assuming format: 'Swift version 4.0.2 (...)' 
//  The “remote” may have already given us the checksum 
//  We need to resolve the classes into a set of files so @SkipWhenEmpty will work   Otherwise, a collection of empty directories is not seen as "empty" 
//  Let's make sure we never need to reallocate 
//  throws Exception 
//  This set represents the order in which elements are inserted to the store, either actual   or provided.  We construct a correct iteration order from this set. 
//  Yeah, setting the background intensity is not underlining.. but it's best we can do   using the Windows console API 
//  This could be more efficient; assume that removal happens much less often than addition 
//  (<type>)<service> 
//  Generate: Class publicType() { ... } 
//  protects the following state   Contains only application owned ClassLoaders 
//  These objects are going across the wire.   1. Convert any subclasses back to File in case the subclass isn't available in Gradle.   2. Make them absolute here to deal with a different root at the server 
//  Serialize anything else 
/*      * Does a defensive copy to avoid leaking class references through the MutablePropertyDetails     * contained in the maps values. The keyset would keep a strong reference back to the map     * and all its entries.      */
//  Also available via play.japi.twirl.compiler.TwirlCompiler.DEFAULT_IMPORTS but we would have to grab it via reflection 
//  extract exceptions 
//  summary 
//  TODO - mix Groovy DSL support in 
//  Order is important here, because they will be searched in that order 
/*      * Adds an action which is executed before this collection is mutated with the addition or removal of elements.     * Any exception thrown by the action will veto the mutation.     *     * TODO: Combine this with the MutationGuard or rework CompositeDomainObject to behave with MutationGuard/MutationValidator.     * The mutation validators used in DefaultConfiguration only expect to be used with add/remove methods and fail when we     * correctly try to also prevent all/withType/etc mutation methods.     *     * assertMutableCollectionContents is only used by add/remove methods, but we should remove this special handling and fix     * DefaultConfiguration and CompositeDomainObjects.      */
//  Null is ok if the ConstructorSelector says it's ok 
// create log file 
//  show all operation output when debug is enabled 
//  Transition any other nodes that depend on the predecessor state 
//  element names can only contain 0 or 1 colon   See http://www.w3.org/TR/2004/REC-xml-names11-20040204/#Conformance   If the name has a prefix, evaluate both prefix and name 
//  Coerce the value to the property type, if known 
/*          * MetaClass.getMetaProperty(name) is very expensive when the property is not known.         * Instead, we reach into the meta class to call a much more efficient lookup method.         * Since we do this in a hot code path, we also reuse the argument array used for the         * reflective call to save memory.          */
//  Don't collect build dependencies if not required 
//  please keep the formatting below as it helps enabling or disabling stages   optimizes for nulls, 2-params, ... mandatory   caches the result of TL operations   performs algebra   caches the result of optimization operations   the end of the chain, mandatory   shares the same caches as the top level one as after reducing we can find already cached merge operations 
//  Not part of the public API 
//  Clean-up old HTML report directories 
//  fix problems in updating jar files by disabling default caching of URL connections.   URLConnection default caching should be disabled since it causes jar file locking issues and JVM crashes in updating jar files.   Changes to jar files won't be noticed in all cases when caching is enabled.   sun.net.www.protocol.jar.JarURLConnection leaves the JarFile instance open if URLConnection caching is enabled. 
//  Here it means that we have validated that the entry is still up-to-date, and that means a couple of things:   1. the cache policy said that the entry is still valid (for example, `--refresh-dependencies` wasn't called)   2. if the rule is cacheable, we have validated that its discovered inputs are still the same 
// 2 gigs 
//  From every configuration other than compile, include both the runtime and compile dependencies 
//  Read serialized worker 
//  Only add confs if they are specified. if they aren't, endElement will handle this only if there are no conf defined in sub elements 
//  This is an empty root block, discard it 
//  buffer was full, just call Thread.yield 
//  These constants are defined here and not with the rest of their kind in HelpTasksPlugin because they are referenced   in the ‘core’ modules, which don't depend on ‘plugins’ where HelpTasksPlugin is defined. 
//  overwrite rather than append dependencies 
//  resolve constant-looking expressions statically (do here as gets transformed away later) 
//  Currently need to resolve the file, so that the artifact can be used in both a script classpath and the main build. Instead, this should be resolved as required 
//  Create unbuildable build configuration so the indexer can keep functioning 
//  Turn the requested watch points into actual enclosing directories that exist 
//  Need Transformer (part of AntBuilder API) from base services 
//  Create trust manager 
//  If we don't know what the max heap is, approximate it based on OS total memory 
//  Check for presence as the domain object may have been replaced 
//  Make convention mapping work 
//  Convert a second time with only the published configurations: this ensures that the correct artifacts are included 
//  nothing to do if no EclipseRuntime is supplied. 
//  Add separators before and after anything with a comment or that is a block or group of statements 
//  try to get the name from EclipseProject.name 
//  Shutdown the adapter Groovy system 
// Discard the compile loader 
//  Only report subject binding if target state is after node creation 
/*          * Remembers the unresolved dependency for later logging and also adds a fake         * file dependency, with the file path pointing to the attempted component selector.         * This shows up in the IDE as a red flag in the dependencies view. That's not the best         * usability and it also muddies the API contract, because we disguise an unresolved         * dependency as a file dependency, even though that file really doesn't exist.         *         * Instead, when generating files on the command line, the logged warning is enough.         * When using the Tooling API, a dedicated "unresolved dependency" object would be better         * and could be shown in a notification. The command line warning should probably be omitted in that case.          */
//  Set the visible included builds 
//  Nested closure 
//  Only cache non-overloaded methods by name 
//  Artifacts are not known until the file collection is queried 
//  Toolchains should be linking against stuff in the standard locations 
//  Have to pass build JVM args directly to launcher JVM 
//  Can't acquire lock, get details of owner to include in the error message 
//  Ignore things we know are empty 
//  Ping the owner via all available local addresses 
//  check our classpath 
//  @Inject is allowed on fields only 
// class file versions: 1.1 == 45, 1.2 == 46... 
//  TODO: When we support multiple components or configurable dependencies, we'll need to merge the confs of multiple dependencies with same id. 
//  ignore exception in shutdown 
//  If the target is a project component, it has not been modified from the requested 
//  GENERATE null 
//  return 
//  Detect anonymous static classes of enum constants with class body   See https://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#d5e12300   And https://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.9.1   "The optional class body of an enum constant implicitly defines an anonymous class declaration    that extends the immediately enclosing enum type." 
//  Hackery to make closure execution faster, by short-circuiting the expensive property and method lookup on Closure
//  Only managed implementation and value types are allowed as a managed property type unless marked with @Unmanaged 
/*  isInitialPass  */
//  Read-only property with managed type 
//  Do not traverse if seen already 
//  Inject the launcher JVM args via one of the environment variables 
//  If the classloader structure is flat, there's no need to send the classpath 
// we could potentially avoid creating value that is already being created by a different thread. 
//  Wait for the process' stdout to indicate that the process has been started successfully 
//  currently single list of optionals 
//  Expire under high JVM memory or GC pressure 
//  scenarioList contains duplicate scenarios because of rerun 
//  If the jansi.strip property is set, then we just strip the 
//  i >= 1 makes sure that commonElements < stackTrace.size() 
//  Use this instead of Description.getClassName(), it is not available in JUnit <= 4.5
//  GENERATE __<prop>__ = true 
//  Ignore any other outcome 
//  public methods belongs to your API 
//  TODO: Allow this to be added lazily 
// then we want to validate strictly 
//  Selection deferred as we know another selector will be added soon 
//  when a selector changes from non lock to lock, we must reselect 
//  Important that the launchables are unpacked on the client side, to avoid sending back any additional internal state that   the launchable may hold onto. For example, GradleTask implementations hold onto every task for every project in the build 
//  retry after getting "Bad file descriptor" exception 
//  Lambdas contain a name that's based on an index + timestamp at runtime and changes build-to-build.   This makes comparing two builds very difficult when a lambda is in the stack   changes SkipUpToDateStep$$Lambda$33.1050994387.apply -> SkipUpToDateStep$$Lambda$apply 
//  MutableModelNode methods 
// quote everything else 
//  This severs the connection between from this debugOptions to the other debugOptions 
//  just for reporting 
//  If we have a single common resolution, no conflicts to resolve 
//  must be an included build 
//  This is a slight different condition than that used for a dependency declared in a Gradle project,   which is (targetHasVariants || consumerHasAttributes), relying on the fallback to 'default' for consumer attributes without any variants. 
/*  * TODO - merge this and the component container  */
//  lookup class in all classloaders 
//  Either a macro function, a macro or token concatenation 
//  GENERATE instantiator.newInstance(type) 
//  1.8 
//  if not null, is not empty 
//  Read -D command line flags 
//  Should not happen 
//  0.9.1 couldn't handle anything with a timestamp whose timezone was behind GMT 
//  Caching involves 2 distinct caches, so that 2 scripts with the same (hash, classpath) do not get compiled twice   1. First, we look for a cache script which (path, hash) matches. This cache is invalidated when the compile classpath of the script changes   2. Then we look into the 2d cache for a "generic script" with the same hash, that will be remapped to the script class name   Both caches can be closed directly after use because:   For 1, if the script changes or its compile classpath changes, a different directory will be used   For 2, if the script changes, a different cache is used. If the classpath changes, the cache is invalidated, but classes are remapped to 1. anyway so never directly used 
//  Create a SourceFile object to represent the javascript file to compile 
//  Remove all the methods from the main class 
//  We don't support shrinking at the moment 
//  Create a synthetic id for the build, if the id is already used   Should instead use a structured id implementation of some kind instead 
//  exists == has content 
//  Do not process Object's or GroovyObject's methods 
//  TODO - this should be applied to all methods, including delegating methods 
//  Could potentially coordinate with a thread that is snapshotting an overlapping directory tree 
//  Supported, nothing to do. 
//  If the module matches, add the root component into the mix 
//  TODO: maybe we need to allow additional dirs like SourceSetOutput does   (esp. for backwards compatibility). Wonder if it's still necessary to distinguish   between classes and resources dirs, instead of just maintaining a collection of dirs.   As far as generated resources are concerned, it might be better to model   them as an additional (Buildable) ResourceSet. 
//  Too many requests (not available through HttpStatus.XXX) 
//  Unpacks the request to serialize across to the daemon and creates instance of   TestExecutionRequestAction 
//  cleanup() will abort the process as desired 
//  Include file not found (but previously was found) 
//  An empty capability list means that it's an implicit capability only 
//  read-write-execute for user only   read-write for user only 
/*          *  GROOVY-4009: when a normal variable is simply being used, there is no need to try to         *  resolve its type. Variable type resolve should proceed only if the variable is being declared.          */
//  Only handle the command line for now 
//  Turn off request logging unless debug mode is enabled 
//  Unknown type - just inspect ourselves. Should instead share this with all registries 
// fall back to default runner 
//  Resolvable configurations 
//  Based on the benchmark found in org.gradle.internal.nativeintegration.filesystem.FileMetadataAccessorBenchmark   and the results in the PR https://github.com/gradle/gradle/pull/1183   we're using "native platform" for Mac OS and a  mix of File and NIO API for Linux and Windows   Once JDK 9 is out, we need to revisit the choice, because testing for file.exists() should become much   cheaper using the pure NIO implementation. 
/*                 val rightResult = result.right()                val generatedFiles = right.get()                val empty = generatedFiles.isEmpty()                empty.booleanValue()              */
//  Matches: task args?, <identifier>, args? or task(args?, <identifier>, args?)   Map to: task(args?, '<identifier>', args?) 
//  Report fields with annotations that have not been seen while processing properties 
//  Snarl is not running 
//  If credential decides it can handle it, the return code or message indicated   something specific to authentication, and no backoff is desired. 
//  Body is a simple expression, including a macro function call with no arguments 
//  Enable the use of Gradle metadata. This is a temporary opt-in switch until available by default 
//  this is cached because used very often in sorting selectors 
//  ProviderInternal is-a TaskDependencyContainer, so check first 
//  Implementations should not wrap exceptions, this is done in DefaultObjectConfigurationAction
//  found an attribute with the same name, but they do not necessarily have the same type 
//  Consumable configurations 
//  Handle just empty string, single identifier or '(' params? ')', should handle more by parsing the tokens into an expression 
//  TODO: Add handling for Test-only dependencies once https://github.com/gradle/gradle/pull/9484 is merged 
//  No macro name 
//  Does not take effect until after execution has completed 
//  Only apply default locations when none explicitly configured 
//  empty text nodes hinder subsequent formatting 
//  Resolve it later 
//  First look for a property known to the meta-class 
//  component under test 
//  Just move back 2 seconds 
//  A first pass to do local resolves only 
//  TODO Deprecate and eventually prevent these mutations in parent when already resolved
//  Artifacts   Keep track of transformed artifacts as a given artifact may appear in multiple variants 
//  Ignore exclusions for dependencies with `<optional>true</optional>`, but not for <dependencyManagement>. 
//  JVM args that must be used to fork a JVM 
//  custom type 
// discovered java location 
//  Include all 'optional' dependencies in "optional" configuration 
//  ignored 
//  Assume VS 2015 
//  Create the and initialize the SSLContext 
//  We use an identity hashmap for performance, because we know that our attributes   are generated by a factory which guarantees same instances 
//  https://docs.oracle.com/javase/specs/jls/se12/html/jls-3.html#jls-NullLiteral 
//  Casts to Class below are to workaround Eclipse compiler bug   See: https://github.com/gradle/gradle/pull/200 
//  Clean up old stop events 
//  Exit code 0 = success   Exit code 1 = failed test(s)   anything else is considered an execution failure 
//  On macOS, we assume co-located Xcode is installed into /opt/xcode 
//  previous character is not a separator 
//  Defer attaching the model until all components have been (most likely) configured   TODO - make this relationship explicit to make this more reliable and offer better diagnostics 
/*                  * An extracted distribution usually looks like:                 * checksumDir/                 *      | gradle-5.5.1-bin.zip.ok                 *      | gradle-5.5.1-bin.zip.lck                 *      | gradle-5.5.1-bin.zip                 *      | gradle-5.5.1                  */
//  check package this class is defined in. The usage of ConstructedClassWithPackage here   means, that the module package will not be involved when the   compiler tries to find an inner class. 
//  4.x   2.x - 3.x   1.x 
//  On windows we know the console does not interpret ANSI codes.. 
//  following patterns are built upon constants above and should not be modified 
//  ordered by how much they filter 
//  By default the local cache is a directory cache 
//  we just need to get the lock for this project 
//  NOTE: When removing provider, we don't need to fireObjectRemoved as they were never added in the first place. 
//  In the same situation with NATIVE_HEADER_OUTPUT, javac just NPEs.  Don't bother. 
//  If the jansi.passthrough property is set, then don't interpret 
/*  * Benchmark                     Mode  Cnt          Score         Error  Units * OptionalBenchmark.nullCheck  thrpt   20  107887111.061 ±  882182.482  ops/s * OptionalBenchmark.optional   thrpt   20   86746312.090 ± 1150860.296  ops/s * */
//  we are currently adding a configuration to either an include, exclude or artifact   element   of a dependency. This means that we have to add this element to the corresponding   conf   of the current dependency descriptor 
//  path { ... } 
//  If the previous result was rejected, do not need to re-resolve (new rejects will be a superset of previous rejects) 
//  MinGW requires the path to be set 
//  superName can be null if what we are analyzing is `java.lang.Object`   which can happen when a custom Java SDK is on classpath (typically, android.jar) 
//  See if all entry points have the same identifier 
//  Unfortunately, we can't determine this at constructor time, because CacheBuilder   calls our constructor and it's not easy to pass arguments to it. 
//  virtual components have no source 
//  Collect any container level add actions added since the last call to configure() 
//  DO NOT change the signature of this method: it is a convention used in   our internal performance testing infrastructure 
//  Add the application and extension 
//  Try to configure element 
//  Pass 1, extract plugin requests and plugin repositories and execute buildscript {}, ignoring (i.e. not even compiling) anything else 
//  another case we want to check here is if we are in a   nested class A$B$C and want to access B without   qualifying it by A.B. A alone will work, since that   is the qualified (minus package) name of that class   anyway. 
//  First things first, retro compatibility 
//  to strip the ANSI sequences.. 
//  1.0-milestone-5 was broken where jna was not available  noinspection SimplifiableIfStatement 
//  TODO: This is where the password information would go
//  If unknown, try a remote search 
//  For custom ivy pattern matchers, don't inspect the rule any more deeply: this prevents us from doing smart merging later 
// No conflict with matching participants found, create new 
//  tag::options-of-dynamic-processor[] 
//  if the included ivy file is not found on file system, tries to resolve using 
//  TODO - display name 
//  Prevent further tests (ignored) from triggering start actions 
//  Known, but not buildable 
//  Stop the pipeline:   1. mark daemon as stopped, so that any incoming requests will be rejected with 'daemon unavailable'   2. remove presence from registry   3. stop accepting new connections   4. wait for commands in progress to finish (except for abandoned long running commands, like running a build) 
//  Example: http://repo2.maven.org/maven2/net/jini/jsk-platform/2.1/jsk-platform-2.1.pom 
//  ExecuteBuild should be the last action, but in case we want to decorate the result in the future 
//  GENERATE public <type> <getter>() { return (<type>)getConventionMapping().getConventionValue(super.<getter>(), '<prop>', __<prop>__); } 
//  new entry 
//  Else, has been removed by something else - ignore 
//  Need to use a 'foreign' build id to make BuildIdentifier.isCurrentBuild and BuildIdentifier.name work in dependency results 
//  We use a set here because for excludes, order of edges is irrelevant   so we hit the cache more by using a set 
//  NOTE: the space in the directory name is intentional
// browsers dont understand <a name="..."/> 
//  Convert properties to ParallelismConfiguration object 
//  Delegate class is not visible to managed view type -> view type is more general than delegate type, so use the delegate classloader instead 
// module was already visited, there is a cycle 
//  hot path; create as little as possible… 
//  These are implemented as a system property, but don't really function like one   So we include it in this “no system property” set. 
//  We need scala.util.parsing.input.Positional 
//  There's no authentication involved, requests can be done concurrently 
//  Start preparing the result 
//  Deserialize the worker action 
//  Add tasks created through rules to the actual task container 
//  Can probably skip this 
//  Split out up the output into main content and post build content 
//  ... 
//  Use a defensive copy of the build definition, as it may be mutated during build execution 
//  https://docs.oracle.com/javase/specs/jls/se12/html/jls-3.html#jls-Identifier 
//  Can get duplicate finish events 
//  This method is effectively part of a cross Gradle version contract. 
//  Read worker implementation classpath 
//  Any logging prior to this point will not end up in the daemon log file. 
//  with normalized line endings 
//  The following values are relatively expensive to create, so defer creation until required 
//  Use java 7 APIs, if available, otherwise fallback to no-op 
//  Move into cache 
// iterate and stop all daemons 
//  Read header 
//  2 lines: 1 for BuildStatus and 1 for Cursor parking space 
//  construct task selectors 
//  Get the CompilationLevel.SIMPLE_OPTIMIZATIONS class and set it on the CompilerOptions class 
//  The task dependencies for the configuration have been calculated using Configuration.getBuildDependencies(). 
//  Consumer version is provided by client 1.2 and later 
//  Write rich content to both stdout and stderr 
//  Replace 'Returns the ...'/'Sets the ...' with 'The ...'
//  it's rare that a component would declare more than 1 capability
//  we don't want to add core classloader explicitly here. 
//  The 'get'-getter was ignored, we can override it with the 'is'`-getter 
// this rule is just here to ensure backwards compatibility for builds that create publications with model rules 
//  Lock the state region, with the requested mode 
//  Ignore private getters without annotations 
//  Discard the node so it can be garbage collected. Some Ant tasks cache a potentially large amount of state   in fields. 
//  for each remaining level in the relativeTo path, add a .. 
//  Ends up with: 1 2 -> 3 <- 4 5 
//  Not part of a normal visitor, see ClosureCreationInterceptingVerifier 
//  Don't need to unpack the serialized failure. It will already have been reported and is not used by anything downstream of this action. 
//  Flushing data coming only from current appending 
// in theory this should not happen
//  What is actually exposed 
//  visible tasks are specified as those that have a non-empty group 
//  Don't track publications to repositories configured without a base URL 
//  GROOVY-3110: It may be an inner enum defined by this class itself, in which case it does not need to be   explicitly qualified by the currentClass name 
//  Append to failures for locking and fail on version conflict 
//  sort for determinism 
//  Perform the work per repository 
//  3) Set up the Antlr output directory (adding to javac inputs!) 
//  GENERATE public <return type> <method>(Closure v) { return <method>(…, ConfigureUtil.configureUsing(v)); } 
//  Now visit the result in order 
//  TODO merge in IoActions
// we need to filter at the level child runners because the suite is not doing the right thing here 
//  So, we just ignore the exception if the dir doesn't exist anymore 
//  block until the listener has finished notifying. 
//  should never happen here
//  Deduplicates the include file states, as these are often shared between source files 
//  Currently the converter is stateless, doesn't need any external context, so for performance we return a singleton 
//  0.9-rc-1 was broken for Java 5 
//  Order dynamic selectors after static selectors 
//  Callable<? super String> 
//  Read logging config and setup logging 
//  This has the downside of adding play-java-forms for all kind of play projects   including Scala based projects. Still, users can exclude the dependency if they   want/need. Maybe in the future we can enable users to have some flag to specify   if the project is Java or Scala based. 
//  Self close parent in order to discover its children, or its target in the case of a reference 
//  Do nothing 
//  System types come from the system classloader and their classloader is null. 
//  If there are different output properties compared to the previous execution, then we do have output changes 
//  alternatively, we could return project.getLayout().files(Runnable)   would differ in at least the following ways: 1. live 2. no autowiring 
//  if the target was invalid 
//  Coerce the value to the type accepted by the property setter and invoke the setter directly 
//  release any other project locks we might happen to hold 
//  add groovy-templates for Groovy 2.5+ 
//  the main "Java" component 
//  We are handling the root of the tree here 
//  Try to use a new label 
//  No wildcards: matches #5 above 
//  Have not seen this node before - add its dependencies to the head of the queue and leave this   node in the queue 
//  push back remaining bytes of multi-byte unicode character 
//  BCPGOutputStream seems to do some internal buffering, it's unclear whether it's strictly required here though 
//  Logging 
// if we don't know the parent we will use the top suite  this way we always have and id to attach logging events for 
//  the old value is a better fit than the new one, let's ignore the new one altogether 
//  Important not to add until after it has been applied as there can be   plugins.withType() callbacks waiting to build on what the plugin did 
//  Choose the 'main' artifact based on its type. 
//  type1 = ? super T 
//  whatever the exclude filter, there are no dependencies 
//  5.x only supports up to Java 12, 5.6 was the last release 
//  Use highest version on highest scope, keep highest scope exclusions only 
//             new Inspector().inspectModel(result); 
//  unboxing and boxing does the trick 
//  Tasks graph is already calculated and tasks executed. Action or model builders can access tasks results. 
//  From fork options 
//  Tasks 
//  only set a non-null task list on the operationParamsBuilder if at least one task has been given to this method,   this is needed since any non-null list, even if empty, is treated as 'execute these tasks before building the model'   this would cause an error when fetching the BuildEnvironment model 
//  Overwrite property 
//  the cached class loader as long as the action is executed 
//  Defines all projections for the node   Initializes the node   Allows a mutation to setup default values for an element   Mutation action provided when an element is defined   Customisations   Post customisation default values   Post mutation validations 
//  If these are not null, we are pessimistic (loaders asked for before locking) 
//  Not known yet 
//  TODO wolfs: We use `_Decorated` here, since IDEA import currently relies on this   See https://github.com/gradle/gradle/issues/8244
//  Use the ANSIOutputStream to strip out the ANSI escape sequences. 
//  A decorating factory 
//  Host: x86 
//  Exclude framework directories for GCC - they are added as system search paths but they are actually not 
//  TODO: make build type configurable for components
//  currently, we leave it to ZincScalaCompiler to also compile the Java code 
//  Don't log 
//  evicted, but it can still be reintegrated later in a different path.
//  state, cachedResolvedConfiguration, and extendsFrom intentionally not copied - must re-resolve copy   copying extendsFrom could mess up dependencies when copy was re-resolved 
//  tag::task-arg-method[] 
//  GENERATE public Object getProperty(String name) { return getAsDynamicObject().getProperty(name); } 
//  This method tries to minimize the number of volatile read/writes.   Do NOT try to inline the variables there. 
//  shouldn't happen
//  TODO: Configure 'eclipse' projects too
//  do not delete parent dirs 
//  unspecified 
//  Synthesise a test for the broken configuration method 
//  See https://blogs.msdn.microsoft.com/vcblog/2016/10/07/compiler-tools-layout-in-visual-studio-15/ 
//  Should provide a Gradle version as parameter so this check can be more precise 
//  We need to work with the 'String' version of the usage attribute, since this is expected for all providers by the `PreferJavaRuntimeVariant` schema 
//  Queue this up for checking again later   This is done because we're checking what we have locally in cache, and there may be nothing   so we're queuing it back so that the next time we check in remote access. 
//  JAR is compatible with classes or resources 
//  Transform ProgressCompleteEvent into their corresponding progress OperationIdentifier. 
// we expect that all options must be applicable for each task 
//  no special validation 
//  '\\\n' discarded from stream 
//  The other is disambiguated by current, never consider other again 
//  add the file name 
//  Safety check: dispatching a message should not cause the thread to dispatch another message (eg should not do any logging) 
//  This logger has been replaced (for example using `Gradle.useLogger()`), so don't log anything 
// below does not help on windows environments. I was unable to get plain javadoc utility to work successfully with multiline options _in_ the options file.  at least, it will work out of the box on linux or mac environments.  on windows, the options file will have correct contents according to the javadoc spec but it may not work (the failure will be exactly the same as if we didn't replace line breaks) 
// so that logging gets its way to the daemon log: 
//  Only <function-call>+ <args-list> supported 
//  Explicit flush, System.err is an auto-flushing PrintWriter unless it is replaced. 
//  Don't need to generate a subclass
//  Note: We can't conclude anything if the label scrolled so we leave the erasing to the parent widget. 
//  Already reported 
//  GENERATE objectFactory.fileCollection() 
// Is there any other parent properties?
//  buffer is full, wait until it has been read 
//  The same gatekeeper that opened it must close it 
//  Write count 
//  track the closure itself, not the action class. 
//  This is a performance optimization, dependency states are deduplicated 
//  Rewrite the method call to match TransformedModelDslBacking#configure(String, Closure), which is what the delegate will be 
//  Don't attach to any labels 
//  Have visited this node's dependencies - add it to the end of the plan 
//  Need gradle core to pick up ant logging adapter, AntBuilder and such 
//  Ignore missing files 
//  Don't care 
//  tag::custom-task-implementation[] 
// Find an existing matching conflict 
//  Not present, assume no failure details 
//  Suppress - checkstyle gets confused with type params on the outer type 
//  Commit all changes in the working tree 
//  Not yet supported for implicit included builds 
//  Default behavior is to always be buildable.  Binary implementations should define what   criteria make them buildable or not. 
//  Only merge if about the same capability, otherwise last wins 
//  Goal has previously been achieved or is no longer required 
//  Compare 2 dynamic selectors lexicographically 
//  handle tree 
//  get(<type>, <annotation>) 
//  Once the root build starts configuring, we are in Configuring phase 
//  Discard state that is no longer required 
//  does not override equals() but hashCode() in order to cache the latter's   pre-computed value to improve performance when used in HashMaps 
//  When this function has no parameters, we don't need to substitute parameters, so return the expression after macro expanding it   Also handle calling a zero args function, as we also don't need to substitute parameters 
//  Use an options file to pass across application classpath 
//  if the plugin has already been added 
//  Empty RHS 
//  If the event has no logging header, it doesn't manifest as console output. 
//  same classes may be found in different classpath trees/jars   and we keep only the first one 
//  We have to add these after the system properties so they can override any system properties   (identical properties later in the command line override earlier ones) 
// we don't merge anything in the iws, yet.  I kept the logic for the sake of consistency   and compatibility with pre M4 ways of configuring IDEA information. 
//  The last comment line is the timestamp 
//  Don't need to lock anything until we use the caches 
//  Handle failure 
//  If we detect a transformation in the classpath, we need to recompile, because we could typically be facing the case where   2 entries are reversed in the order of classpath elements, and one class that was shadowing the other is now visible 
//  Deserialize the class and parameters in the workerClassLoader (the context classloader) 
// end of workaround. 
//  If abortAll is set, also stop enforced tasks. 
//  Don't map 
//  Ignore for now 
//  delivery was interrupted, return silently 
//  Nothing special to check for UCRT 
//  We have a conflict
//  Have not visited the successor node, so add to the queue for visiting 
//  Build events 
//  would normally log at a level higher than (or equal to) lifecycle, but the Ant message priority is   actually lower than the set lifecycle log level 
// Need to do parameter substitution, return the value of the expression after parameter substitutions and macro expanding the result 
//  Prefer a selector that strictly matches the selected version
//  Cached resolved executables 
//  buffer was still full after non-blocking retries, now block 
//  Capture or log all failures 
//  If no authState has been established and this is a PUT or POST request, add preemptive authorisation 
//  consumer didn't express any preferences, everything fits 
//  Catch any unchecked io exceptions and add the file path for troubleshooting 
//  Historic note: this class still uses the Groovy JsonBuilder, as it was originally developed as a Groovy class. 
//  This is a workaround for https://github.com/gradle/gradle/issues/4241   Several early typed operations have `buildPath` property,   the value of which can only be determined after the settings file for the build has loaded.     The workaround is to buffer all operation notifications in memory until the root build's settings have loaded.   This works because all possible settings files have been evaluated by the time the root one has been.   This is not guaranteed to hold into the future.   A proper solution would be to change the operation details/results to be   truly immutable and convey values known at the time. 
//  Create a client that will not match any existing daemons, so it will always startup a new one 
//  try the owner 
//  Includes trailing '/' 
//  Only share an ArtifactSet if the artifacts are not filtered by the dependency 
//  Make sure hash codes are serializable with a single byte length 
//  The first directory is the one created by JvmComponentPlugin.configureJvmBinaries()   to be used as the default output directory for processed resources 
//  For tests in default method of interface,   we might not be able to get the implementation class directly.   In this case, we need to retrieve test plan to get the real implementation class. 
//  Just read the state region 
//  TODO - move this to PropertyValue instead
//  The value is true if it is an output file, false if it is a parent of an output file 
//  Matches: task <identifier> or task(<identifier>) 
//  Hackery
/*                      * TODO Extensions like Flex Mojos use custom scopes like "merged", "internal", "external", etc. In                     * order to don't break backward-compat with those, only warn but don't error out.                      */
/*      * TODO this needs to accept a {@link OverConstrainedVersionException} as returned by     *       {@link #getVersionRangeViolation(int)} but it's not used like that in     *       DefaultLegacyArtifactCollector      */
//  it's the building of the grandchild project, having already cached the child project   (but not the parent project), which causes the problem. 
//  TODO I would like to get rid of this. jvz. 
/*          * NOTE: This should be considered a quirk to support interop with Maven's legacy ArtifactDeployer which         * processes one artifact at a time and hence cannot associate the artifacts from the same project to use the         * same timestamp+buildno for the snapshot versions. Allowing the caller to pass in metadata from a previous         * deployment allows to re-establish the association between the artifacts of the same project.          */
//  TODO I'm really wondering where this method belongs; smells like it should be on MavenProject, but for some   reason it isn't ? This localization is kind-of a code smell. 
//  TODO: hack because metadata isn't generated in m2e correctly and i want to run the maven i have in the 
//  TODO this does not belong here. 
//  this is FOUL!          snapshotArtifact.isSnapshot(); 
//  NOTE: There's java.nio.charset.MalformedInputException and sun.io.MalformedInputException 
/*      * Derive the path portion of the given URL.     *     * @param url the repository URL     * @return the basedir of the repository     * TODO need to URL decode for spaces?      */
// TODO restore these if it makes sense 
//  TODO could the configuration be passed to lookup and the configurator known to plexus via the descriptor   so that this method could entirely be handled by a plexus lookup? 
// TODO error reporting 
//  TODO This replacing shouldn't be necessary as user.home should be in the 
//  TODO currently this is first wins, but really we should take the latest by comparing either the   snapshot timestamp, or some other timestamp later encoded into the metadata.   TODO this needs to be repeated here so the merging doesn't interfere with the written metadata    - we'd be much better having a pristine input, and an ongoing metadata for merging instead 
//  TODO what about wildcards? Just specifying groups? versions? 
//  TODO Use StringUtils here 
//  TODO From a concurrency perspective, this class is not good. The combination of mutable/immutable state is not nice 
//  TODO we probably want to warn the user that he is building an artifact with   different values than in dependencyManagement 
//  ---------------------------------------------------------------------------------   I'm not sure if this last regexp was really intended to disallow the usage of   network paths as user.home directory. Unfortunately it did. I removed it and   have not detected any problems yet.   ---------------------------------------------------------------------------------   path = path.replaceAll( "//", "/" ); 
//  TODO better way than static? this might hide messages in a reactor 
/*  * This exception is thrown if an application attempts to attach * two of the same artifacts to a single project. * * @author pgier * @author jdcasey * TODO Make this a checked exception, and modify the API of MavenProjectHelper. * Currently, this modification would create compatibility problems for existing plugins.  */
// TODO lifecycles being executed  TODO what runs in each phase  TODO plugins that need downloading  TODO project dependencies that need downloading  TODO unfortunately the plugins need to be downloaded in order to get the plugin.xml file. need to externalize this        from the plugin archive.  TODO this will be the class that people get in IDEs to modify 
/*          * NOTE: For plugins that depend on other plugin artifacts the plugin realm contains more than one plugin         * descriptor. However, only the first descriptor is of interest.          */
//  TODO not sure about this here, and may want a getLog on here as well/instead 
//  TODO Does this check need to happen here? Had to add the same call   below when we iterate on child nodes -- will that suffice? 
//  TODO MNG-5766 changes likely made this redundant 
//  TODO Move this to plexus-utils' PathTool. 
//  go find the version. This is a total hack. See previous comment. 
/*          * NOTE: This is primarily to keep backward-compat with Maven 2.x which did not validate that dependencies are         * unique within a single POM. Upon multiple declarations, 2.x just kept the last one but retained the order of         * the first occurrence. So when we're in lenient/compat mode, we have to deal with such broken POMs and mimic         * the way 2.x works. When we're in strict mode, the removal of duplicates just saves other merging steps from         * aftereffects and bogus error messages.          */
//  TODO Validate for < 0? 
/*          * MNG-4312: We neither have reserved all of the above magic expressions nor is their set fixed/well-known (it         * gets occasionally extended by newer Maven versions). This imposes the risk for existing plugins to         * unintentionally use such a magic expression for an ordinary system property. So here we check whether we         * ended up with a magic value that is not compatible with the type of the configured mojo parameter (a string         * could still be converted by the configurator so we leave those alone). If so, back off to evaluating the         * expression from properties only.          */
//    This is not ideal but there are events specifically for configuration from the CLI which I don't   believe are really valid but there are ITs which assert the right events are published so this   needs to be supported so the EventSpyDispatcher needs to be put in the CliRequest so that   it can be accessed by configuration processors. 
//  TODO could we use a map? Maybe if the parent did that for components too, as this is too vulnerable to 
//  TODO current policy is to retain the original version - is this correct, do we need strategies or is that handled elsewhere? 
//  TODO The configuration for the lifecycle needs to be externalized so that I can use the annotations properly for the   wiring and reference and external source for the lifecycle configuration. 
//  TODO a similar test should be created to test the dependency management (basically all usages   of DefaultModelBuilder.getCache() are affected by MNG-6530 
//  TODO shouldn't the versions be merged across relocations? 
//  TODO this should not need to be handed off... 
//  note this will not be hit for Maven 1.x project.xml as it is an incompatible schema 
//  TODO push all common bits back to plexus cli and prepare for transition to Guice. We don't need 50 ways to make CLIs 
//  ------------------------------------------------------------------------   Metadata Resolution Exceptions: ArtifactResolutionExceptions   ------------------------------------------------------------------------ 
// TODO why is this using the context 
//  TODO !![jc; 28-jul-2005] check this; if we're using '-r' and there are aggregator tasks, this will result in weirdness. 
//  Validate versions aren't inherited when using parent ranges the same way as when read externally. 
//  TODO need to externalize CliRequest 
//    We should get a whole slew of dependencies resolving this artifact transitively 
//  NOTE: We SHOULD NOT be inheriting status, since this is an assessment of the POM quality.   NOTE: We SHOULD NOT be inheriting relocation, since this relates to a single POM 
//  TODO could be more efficient by sorting the list and then moving along the restrictions in order? 
//  set the recommended version   TODO maybe its better to just pass the range through to retrieval and use a   transformation? 
//    There are too many ConfigurationProcessors so we don't know which one to run so report the error.   
//  1.any < 1.1 ? 
/*  * Exception that occurs when an artifact file is used, but has not been resolved. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO it may be better for artifact.getFile() to throw it - perhaps it is a runtime exception?  */
//  TODO log message or throw exception? 
/*      * NOTE: This exists merely for backward-compat with legacy-style lifecycle definitions and allows configuration     * injection to work instead of failing.      */
//  This class needs to stick around because it was exposed the the remote resources plugin started using it instead of   getting the repositories from the project. 
//  Maven 2.x quirk: an artifact always points at the local repo, regardless whether resolved or not 
//  TODO Optimize; or maybe just rewrite the whole way aggregating mojos are being run. 
/*              * NOTE: getId() was added in 3.x and is as such not implemented by plugins compiled against 2.x APIs.              */
//  TODO don't catch exception 
//  TODO use settings? 
/*      * TODO: Whether duplicates should be removed looks like an option for the generated merger.      */
// TODO These two tests display a lack of symmetry with respect to the input which is a free form string and the        mojo descriptor which comes back. All the free form parsing needs to be done somewhere else, this is        really the function of the CLI, and then the pre-processing of that output still needs to be fed into        a hinting process which helps flesh out the full specification of the plugin. The plugin manager should        only deal in concrete terms -- all version finding mumbo jumbo is a customization to base functionality        the plugin manager provides. 
// TODO this will be the basis of the customizable lifecycle execution so need to figure this out quickly. 
//  TODO Use the following two instead of manageArtifact   TODO Remove ResolutionListenerDM interface 
//  We have collected all the problems so let's mimic the way the old code worked and just blow up right here.   That's right lets just let it rip right here and send a big incomprehensible blob of text at unsuspecting   users. Bad dog!
//  note: see MNG-3454. This causes a problem, but fixing it may break more.
//  FIXME: This is hacky. What if module directory doesn't match artifactid, and parent   is coming from the repository?? 
//  NOTE: DuplicateArtifactAttachmentException is currently unchecked, so be careful removing this try/catch!   This is necessary to avoid creating compatibility problems for existing plugins that use   MavenProjectHelper.attachArtifact(..). 
/*  * Describes a version transformation during artifact resolution. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO try and refactor to remove abstract main.methods - not particular happy about current design  */
/*      * @return the required dependencies in a specified scope     * TODO the name is not intelligible      */
//  TODO shouldn't need to double up on this work, only done for simplicity of handling   recommended 
//    Trying to give loggers back is a bad idea. Ceki said so :-)   notice to self: what was this method supposed to do?   
//  TODO Kristian wonders if this class really is necessary and if it overlaps other concepts. 
//  TODO might be better to have source.retrieve() throw a specific exception for this   situation 
//  This is really a wagon TransferFailedException so something went wrong after we successfully   retrieved the metadata. 
/*  * Filter to exclude from a list of artifact patterns. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO I think this is equiv. to exclusion set filter in maven-core  */
//  TODO this is only to provide a project for plugins that don't need a project to execute but need some   of the values from a MavenProject. Ideally this should be something internal and nothing outside Maven 
//  TODO why MVN adds dot /./ in paths??? 
//  TODO introducing a space here...not sure what else to do but collapse whitespace 
//  igorf: Way too many declared exceptions!
/*  * Describes repository directory metadata. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO not happy about the store method - they use "this"  */
//  TODO We currently cannot tell which <dependencyManagement> section contained the management        information. When the resolver provides this information, these log messages should be updated        to contain it. 
//  TODO Hack to make the cycle detection the same for the new graph builder 
//  TODO the antrun plugin has its own configurator, the only plugin that does. might need to think about how that works   TODO remove the coreArtifactFilterManager 
//    TODO jvz Why isn't all this checking the job of the duty of the workspace resolver, we know that we   have a model that is suitable, yet more checks are done here and the one for the version is problematic   before because with parents as ranges it will never work in this scenario.   
/*      * TODO: The order of the merged list could be controlled by an attribute in the model association: target-first,     * source-first, dominant-first, recessive-first      */
//  TODO add better exception 
//  TODO let the scope handler deal with this 
//  artifact or not. things like the stupid dummy artifact coming from surefire.
//  this is just silly, lookupList should return an empty list! 
//  TODO This needs to be colorized 
/*      * TODO: Whether the merge continues recursively into an existing node or not could be an option for the generated     * merger      */
/*  * Specific problems during resolution that we want to account for: * <ul> *   <li>missing metadata</li> *   <li>version range violations</li> *   <li>version circular dependencies</li> *   <li>missing artifacts</li> *   <li>network/transfer errors</li> *   <li>file system errors: permissions</li> * </ul> * * @author Jason van Zyl * TODO carlos: all these possible has*Exceptions and get*Exceptions main.methods make the clients too *       complex requiring a long list of checks, need to create a parent/interface/encapsulation *       for the types of exceptions  */
/*      * TODO this needs to accept a {@link OverConstrainedVersionException} as returned by     *       {@link #getVersionRangeViolation(int)} but it's not used like that in     *       {@link org.apache.maven.repository.legacy.resolver.DefaultLegacyArtifactCollector}      */
//  MAVENAPI FIXME: the DAG used is NOT only used to represent the dependency relation,   but also for <parent>, <build><plugin>, <reports>. We need multiple DAG's   since a DAG can only handle 1 type of relationship properly.   Usecase:  This is detected as a cycle:   org.apache.maven:maven-plugin-api                -(PARENT)->   org.apache.maven:maven                           -(inherited REPORTING)->   org.apache.maven.plugins:maven-checkstyle-plugin -(DEPENDENCY)->   org.apache.maven:maven-plugin-api   In this case, both the verify and the report goals are called   in a different lifecycle. Though the compiler-plugin has a valid usecase, although   that seems to work fine. We need to take versions and lifecycle into account. 
//  Don't want the artifact's version in here, as this is stored in the directory above that 
/*  * Use a regular expression search to find and resolve expressions within the POM. * * @author jdcasey Created on Feb 3, 2005 * TODO Consolidate this logic with the PluginParameterExpressionEvaluator, minus deprecations/bans.  */
//  FIXME: Filter out the inherited == false stuff! 
/*      * TODO pluginDescriptor classRealm and artifacts are set as a side effect of this     *      call, which is not nice.     * @throws PluginResolutionException      */
//  We need to set the file here or the resolver will fail with an NPE, not fully equipped to deal   with multiple local repository implementations yet. 
//  TODO if it was null, we really need to go find them now... or is this taken care of by the ordering? 
//  This won't be valid, but it constructs something easy to read in the error message 
//  TODO This should eventually be migrated to DefaultPathTranslator. 
/*                      * NOTE: Other configurators like the map-oriented one don't call into the listener, so do it the                     * hard way.                      */
/*  * Wraps an active project instance to be able to receive updates from its artifact without affecting the original * attributes of this artifact. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO I think this exposes a design flaw in that the immutable and mutable parts of an artifact are in one class and * should be split. ie scope, file, etc depend on the context of use, whereas everything else is immutable.  */
//  Some better conventions for the test poms needs to be created and each of these tests   that represent a verification of a specification item needs to be a couple lines at most.   The expressions help a lot, but we need a clean to pick up a directory of POMs, automatically load   them into a resolver, create the expression to extract the data to validate the Model, and the URI   to validate the properties. We also need a way to navigate from the Tex specification documents to 
//  TODO classpath check doesn't belong here - that's the other method 
//  TODO Not entirely the same message 
//  TODO this could be a lot nicer... should really be in the snapshot transformation? 
//  TODO should this be part of mediation? 
//  FIXME: somehow report to the user   that there are too many '..' elements.   For now, ignore the extra '..'. 
/*              * MNG-4900: Hack to workaround deficiency of legacy API which makes it impossible for plugins to access the             * global profile manager which is required to build a POM like a CLI invocation does. Failure to consider             * the activated profiles can cause repo declarations to be lost which in turn will result in artifact             * resolution failures, in particular when using the enhanced local repo which guards access to local files             * based on the configured remote repos.              */
//  TODO without #, this could just be an evaluate call... 
//    Builder, concurrency and parallelism     We preserve the existing main.methods for builder selection which is to look for various inputs in the threading   configuration. We don't have an easy way to allow a pluggable builder to provide its own configuration   parameters but this is sufficient for now. Ultimately we want components like Builders to provide a way to   extend the command line to accept its own configuration parameters.
//  TODO ick. this forces the OCE that should have come from the previous call. It is still 
// Maybe it's better to move some of those main.methods to separate class (SoC).
//  TODO Not sure how best to set these for this implementation... 
/*          * NOTE: This should be considered a quirk to support interop with Maven's legacy ArtifactDeployer which         * processes one artifact at a time and hence cannot associate the artifacts from the same project to use the         * same version index. Allowing the caller to pass in metadata from a previous deployment allows to re-establish         * the association between the artifacts of the same project.          */
//  TODO shouldn't need a file intermediatary - improve wagon to take a stream 
//  TODO should we deprecate? 
//  shouldn't it be java-sources given the classifier?   shouldn't it be false given the classifier? 
//  validation error, continue project building and delay failing to help IDEs   result.getProblems().addAll(e.getProblems()) ? 
/*  * The bean containing the Mojo descriptor.<br> * For more information about the usage tag, have a look to: * <a href="https://maven.apache.org/developers/mojo-api-specification.html"> * https://maven.apache.org/developers/mojo-api-specification.html</a> * * TODO is there a need for the delegation of MavenMojoDescriptor to this? * Why not just extend ComponentDescriptor here?  */
//  TODO add better exception that can detail the two conflicting artifacts 
//  TODO Remove this! 
//  TODO also do this logging for other metadata? 
/*          * NOTE: From Artifact.hasClassifier(), an empty string and a null both denote "no classifier". However, some         * plugins only check for null, so be sure to nullify an empty classifier.          */
//  TODO not sure that it should assume this, maybe the calls to addMetadata should pre-merge, then artifact   replaces? 
//  Why are we just ignoring this exception? Are exceptions are being used for flow control 
//  TODO This is too early for build extensions, so maybe just remove it? 
/*          * The workspace/reactor is in flux so we better not assume definitive information for any of its         * artifacts/projects.          */
//  blech! this isn't even intelligible as a method name. provided for   consistency... 
/*  * Pseudo test to generate documentation fragment about supported CLI options. TODO such documentation generation code * should not be necessary as unit test but should be run during site generation (Velocity? Doxia macro?)  */
//  TODO throw something instead? 
//  will be reported via storeInlocalRepository 
//         {              message.append( "There was 1 validation error: " );          }          else          {              message.append( "There was " + messages.size() + " validation errors: " + NEWLINE );          }   
//  then relative path calculation will fail during build from disk but success when calculated from repo
//  workspace 
//  NOTE: Enforce recursive merge to trigger merging/inheritance logic for executions
/*  (non-Javadoc)    * @see org.apache.maven.profiles.ProfileManager#explicitlyDeactivate(java.lang.String)     */
//  Sun/Oracle advises to empty the char array 
//  ----------------------------------------------------------------------   Requirements   ---------------------------------------------------------------------- 
//  Arch 
//  Comments 
//  constants -------------------------------------------------------------- 
//  noop 
//  USED BY REMOTE RESOURCES PLUGIN 
//  meta-versions are not valid <version/> values...don't write them.
//  Post 
//  MNG-3769: the [probably relocated] artifact is excluded.   We could process exclusions on relocated artifact details in the   MavenMetadataSource.createArtifacts(..) step, BUT that would   require resolving the POM from the repository very early on in   the build.
//  UpdatePolicy 
//  disown the parent 
//  ------------------------------------------------------------------------   ErrorArtifactExceptions: ArtifactResolutionExceptions   ------------------------------------------------------------------------
//  @Configuration(source="org/apache/maven/lifecycle/lifecycles.xml") 
//  phase 1 
//  Was not an expression
//  Includes 
//    The plugin has a custom component configurator but does not have a custom mojo execution configurator   so fall back to the default mojo execution configurator.   
//  We need to take in multiple lifecycles
/*  MNG-3938  */
//  v1-->v2 
// [01] clean:clean  [02] resources:resources  [03] compiler:compile  [04] it:generate-metadata  [05] resources:testResources  [06] compiler:testCompile  [07] it:generate-test-metadata  [08] surefire:test  [09] jar:jar  [10] install:install   
//    Acceptable versions for continuous delivery     changelist   revision   sha1   
//  BASE64Encoder b64 = new BASE64Encoder(); 
//  We want to eliminate any relative path nonsense and lock down the path so we   need to fully resolve it before any sub-modules use the path. This can happen   when you are using a custom settings.xml that contains a relative path entry   for the local repository setting. 
//    We enter the session scope right after the MavenSession creation and before any of the   AbstractLifecycleParticipant lookups   so that @SessionScoped components can be @Injected into AbstractLifecycleParticipants.   
/*              * MNG-2277, the check below compensates for our bad plugin support where we ended up with aggregator             * plugins that require dependency resolution although they usually run in phases of the build where project             * artifacts haven't been assembled yet. The prime example of this is "mvn release:prepare".              */
//  exact matches win first 
//  -------------------------------------------------------------------------------------   Alright, here's the justification for all the regexp wizardry below...     Continuum and other server-like apps may need to locate the user-level and   global-level settings somewhere other than ${user.home} and ${maven.home},   respectively. Using a simple replacement of these patterns will allow them   to specify the absolute path to these files in a customized components.xml   file. Ideally, we'd do full pattern-evaluation against the sysprops, but this   is a first step. There are several replacements below, in order to normalize   the path character before we operate on the string as a regex input, and   in order to avoid surprises with the File construction...   ------------------------------------------------------------------------------------- 
//  for the special case of a drive-relative Windows path, make sure it's absolute to save plugins from trouble 
//  Path Utils 
//  TODO figure out how to use the same PluginDescriptor when running mojos
//  ----------------------------------------------------------------------   Reactor Failure Mode   ---------------------------------------------------------------------- 
//  populate the configuration section 
//  this should never happen since we checked all possible error sources before but better be sure 
//  Keep this class in sync with org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.GraphLogger 
//  -------< groupId:artifactId >------- 
/* MNG-3900 */
//  Contributor 
//  version but the restriction is identical 
//  ----------------------------------------------------------------------------------------------------------------       D E P R E C A T E D       ----------------------------------------------------------------------------------------------------------------     Everything below will be removed for Maven 4.0.0     ---------------------------------------------------------------------------------------------------------------- 
//  likely Boolean -> boolean, Short -> int etc. conversions, it's not the problem case we try to avoid 
//  should have been AbstractToolchain... 
//  last ANSI escape code is reset: no next color 
//  guard against modification/removal of keys in the given properties (MNG-5670, MNG-6053, MNG-6105) 
//  We only check for groupId/artifactId/version/classifier cause if there is another   module with the same groupId/artifactId/version/classifier this will fail the build   earlier like "Project '...' is duplicated in the reactor.   So it is sufficient to check only groupId/artifactId/version/classifier and not the   packaging type. 
/*                      * Most existing extensions don't define exported packages, i.e. no classes are to be exposed to                     * plugins, yet the components provided by the extension (e.g. artifact handlers) must be                     * accessible, i.e. we still must import the extension realm into the project realm.                      */
//  ok 
// ------------------------------------------------------------------------------------------ 
//  version skew drop back to resolution from the repository 
//  aliases 
//  ----------------------------------------------------------------------   Goal specific configuration   ---------------------------------------------------------------------- 
//  Used by m2eclipse 
//  Group id 
//  normal for non-http wagons 
//  phase 2 
/*      * @see junit.framework.TestCase#setUp()      */
//  2nd pass of initialization: resolve and build parent if necessary 
// =================================================================================================== 
//  no workspace resolver or workspace resolver returned null (i.e. model not in workspace) 
//  to be processed in the outer catch block 
//  hide constructor 
//  -----------------------------------------------------------------------   , String version, String artifactUri ) 
//  nothing to do. 
//  NB this is live injected collection 
//  The remaining are basically "for future expansion" 
//  optional flag is not managed
//  remove once createArtifacts() is removed 
//  CHECKSTYLE_OFF: MagicNumber 
/* MNG-1957 */
/*  MNG-4102 */
//  ignore. The parent artifact will handle metadata.   we must fail silently here to avoid problems with the artifact transformers.
/*                  * NOTE: This is to provide a migration path for implementors of the legacy API which did not know about                 * getLifecycles().                  */
//  lower than 2^63 
//  "pluginPrefix:goal" or "groupId:artifactId[:version]:goal" 
//                              
//  of cause 
//  add default toolchain 
//  switch dominant with recessive 
//  ----------------------------------------------------------------------   Dependencies   ---------------------------------------------------------------------- 
//  ChildScmConnectionInheritAppendPath 
// */ 
//  this node 
//  ----------[ packaging ]---------- 
//  SnapshotRepository 
//  avoid concurrent modification if someone else sets/removes an unrelated system property 
//  3. the parent's <inherited/> flag is set to true 
//  resolve plugin artifacts 
//  Prefixes 
//    Public API   
//  Plugin management :: aggregate 
//  USED BY DEPENDENCY PLUGIN, ARCHETYPE DOWNLOADER 
//  DeveloperConnection 
//  v1-->v3 
//  Backward compat 
//  parent references child with directory name (which is not artifact id) 
//  It's a POM - we don't need to retrieve it first
/*  MNG-3567 */
//  TODO deep compare the lists
//  Dependencies 
//  Unsubscribe 
//  ensure canonical order of standard lifecycles 
//  This is being lazy instead of making interface 
//  System 
//  re-build pom with modified parent 
//  added to retain compile artifactScope. Remove if you want compile inherited as runtime 
/*  MNG-4008  */
//  if we haven't added this arg to the buffer, and we ARE building an argument   buffer, then append it with a preceding space...again, not sure what else to   do other than collapse whitespace. 
//  keep the checksum files from showing up on the download monitor... 
//  TargetPath 
//  only show msg if a change is actually taking place 
//  overlaps 
//  prime realm cache 
//  ModelVersion 
//  [groupId]:artifactId 
//  Id 
/*     * @see org.apache.maven.artifact.resolver.conflict.ConflictResolverFactory#getConflictResolver(java.lang.String)     */
//  inheritance assembly 
//  BuildBase 
/*  getArtifact  */
//  org.apache.maven.plugins:maven-remote-resources-plugin:1.0:process@executionId 
//  still unreadable even in non-strict mode, rethrow original error 
//  unset the firstRun flag, so we don't get caught in an infinite loop... 
//  MNG-5670 guard against ConcurrentModificationException   MNG-6053 guard against key without value
//  path was already absolute, just normalize file separator and we're done 
//  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////     Project collection     //////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
//  changes above not being propagated to the map 
//  collect drop list 
/*  don't call createDependencyArtifact as it'll ignore test and provided scopes  */
//  clear the calculated artifactMap 
//  for each finished project 
//  else fall back to default log level specified in conf   see https://issues.apache.org/jira/browse/MNG-2570 
//  Plugin0 [plexus] 
//  the order of these two is non-deterministic, based on when they're added to the reactor. 
//  special case: if there is a windows drive letter, then keep the original return value 
//  Not going to happen 
//  Site 3.x 
//  model path translation 
//  org.apache.maven.its.mng4834:parent:0.1 
//  Plugins 
//  nop 
//  Properties 
//  ----------------------------------------------------------------------   I'm leaving the setting of system properties here as not to break   the SystemPropertyProfileActivator. This won't harm embedding. jvz.   ---------------------------------------------------------------------- 
//  add missing '/' between url and path 
//  ExcludeDefaults 
//    The projects need to be topologically after the participants have run their afterProjectsRead(session)   because the participant is free to change the dependencies of a project which can potentially change the   topological order of the projects, and therefore can potentially change the build order.     Note that participants may affect the topological order of the projects but it is   not expected that a participant will add or remove projects from the session.   
//  Keep this class in sync with org.apache.maven.project.DefaultProjectDependenciesResolver.GraphLogger 
//  main.methods ----------------------------------------------------------------
//  ------------------------------------------------------------------------   Exceptions   ------------------------------------------------------------------------
/*              * This logic (using filesystem, against wanted independence from the user environment) exists only for the             * sake of backward-compat with 2.x (MNG-5000). In general, it is wrong to             * base URL inheritance on the module directory names as this information is unavailable for POMs in the             * repository. In other words, modules where artifactId != moduleDirName will see different effective URLs             * depending on how the model was constructed (from filesystem or from repository).              */
//  ----------------------------------------------------------------------------   We need to allow per execution user and global settings as the embedder   might be running in a mode where its executing many threads with totally   different settings.   ---------------------------------------------------------------------------- 
//  fail fast on RuntimeExceptions, Errors and "other" Throwables   assume these are system errors and further build is meaningless
//  but ok from repo: local disk is ignored 
//  end hack 
//  ----------------------------------------------------------------------   Options that are set on the command line become system properties   and therefore are set in the session properties. System properties   are most dominant.   ---------------------------------------------------------------------- 
// insert classifier only if it was used in the artifact 
//  nothing here 
/*     	 *       v2    	 *   v1<    	 *      v3-v4    	 *    	  */
//  build project once 
//    All of this needs to go away and be couched in terms of the execution request 
//  build from disk expected to fail 
/*  && s2 != null  */
//  if we're building an argument, keep doing so. 
//  MNG-3832: Aether (part of M3+) supports wildcard expressions for exclusions
//  only set those on 2nd phase, ignore on 1st pass 
//  Empirical data from 3.x, actual =40 
//  Enabled 
/*  MNG-3846 */
//  else assume "never" 
//    We expect at most 2 implementations to be available. The SettingsXmlConfigurationProcessor implementation   is always available in the core and likely always will be, but we may have another ConfigurationProcessor   present supplied by the user. The rule is that we only allow the execution of one ConfigurationProcessor.   If there is more than one then we execute the one supplied by the user, otherwise we execute the   the default SettingsXmlConfigurationProcessor. 
//  Exclusions 
//  -----------------------------------------------------------------------------------------------   Tests which exercise the lifecycle executor when it is dealing with default lifecycle phases.   ----------------------------------------------------------------------------------------------- 
//  For some reason with the introduction of MNG-1577 we have the case in Yoko where a depMan section has   something like the following:     <dependencyManagement>       <dependencies>           <!--  Yoko modules -->           <dependency>               <groupId>org.apache.yoko</groupId>               <artifactId>yoko-core</artifactId>               <version>${version}</version>           </dependency>   ...     And the range is not set so we'll check here and set it. jvz.
//  System.err.println("Linked("+requestedScope+") 
//  drive-relative Windows path 
//  Checksum policy 
//  does nothing 
//  Mocks to inject into toolchainManager 
//  Recursive (really to just process the top-level POM) 
//  Needs to go away
/*  MNG-2309 */
//  these are local 
/*  MNG-2591  */
//  Optional 
//  marker interface for cache keys 
//  the declaring project MUST be listed after the plugin and its plugin-level dep, though. 
//  sleep for 10ms just in case this is windows holding a file lock 
//  Propagate the parallel flag to the root session and all of the cloned sessions in each project segment 
//  we don't canonicalize on unix to avoid interfering with symlinks
/*  MNG-4193  */
//  notify listeners about "soft" project build failures only 
//    1) Setup initial properties.     2) Validate local repository directory is accessible.     3) Create RepositorySystemSession.     4) Create MavenSession.     5) Execute AbstractLifecycleParticipant.afterSessionStart(session)     6) Get reactor projects looking for general POM errors     7) Create ProjectDependencyGraph using trimming which takes into account --projects and reactor mode.   This ensures that the projects passed into the ReactorReader are only those specified.     8) Create ReactorReader with the getProjectMap( projects ). NOTE that getProjectMap(projects) is the code that   checks for duplicate projects definitions in the build. Ideally this type of duplicate checking should be   part of getting the reactor projects in 6). The duplicate checking is conflated with getProjectMap(projects).     9) Execute AbstractLifecycleParticipant.afterProjectsRead(session)     10) Create ProjectDependencyGraph without trimming (as trimming was done in 7). A new topological sort is   required after the execution of 9) as the AbstractLifecycleParticipants are free to mutate the MavenProject   instances, which may change dependencies which can, in turn, affect the build order.     11) Execute LifecycleStarter.start() 
//  local wins now, and irrelevant if not local as test/provided aren't transitive   assertEquals( "Check artifactScope", Artifact.SCOPE_RUNTIME, artifact.getArtifactScope() ); 
//         child.setPluginRepositories(              ModelUtils.mergeRepositoryLists( child.getPluginRepositories(), parent.getPluginRepositories() ) ); 
//  ignore, see above 
/* - test projects for each of these- how to categorize the problems so that the id of the problem can be match to a page with descriptive help and the test  project- nice little sample projects that could be run in the core as well as integration testsAll Possible Errors- invalid lifecycle phase (maybe same as bad CLI param, though you were talking about embedder too)- <module> specified is not found- malformed settings- malformed POM- local repository not writable- remote repositories not available- artifact metadata missing- extension metadata missing- extension artifact missing- artifact metadata retrieval problem- version range violation- circular dependency- artifact missing- artifact retrieval exception- md5 checksum doesn't match for local artifact, need to redownload this- POM doesn't exist for a goal that requires one- parent POM missing (in both the repository + relative path)- component not foundPlugins:- plugin metadata missing- plugin metadata retrieval problem- plugin artifact missing- plugin artifact retrieval problem- plugin dependency metadata missing- plugin dependency metadata retrieval problem- plugin configuration problem- plugin execution failure due to something that is know to possibly go wrong (like compilation failure)- plugin execution error due to something that is not expected to go wrong (the compiler executable missing)- asking to use a plugin for which you do not have a version defined - tools to easily select versions- goal not found in a plugin (probably could list the ones that are)  */
//  plugin management injection 
//  would ever need this so it should not be exposed in a public API
//  MNG-5509   See org.eclipse.aether.connector.wagon.WagonRepositoryConnector.connectWagon(Wagon)
//    Publisher 
//  ------------------------------------------------------------------------   Repositories   ------------------------------------------------------------------------ 
//  This supports painless invocation by the Verifier during embedded execution of the core ITs 
/*  (non-Javadoc)    * @see org.apache.maven.profiles.ProfileManager#getActiveProfiles()     */
//  reactor failure modes 
//  Extensions are accumulated 
//  check all transitive deps of a compile dependency are compile scope, except for runtime and test 
//  use the local copy, or if it doesn't exist - go to the remote repo for it 
/*  && rootArtifact.getFile() == null  */
//  ChecksumPolicy 
//  , String version, String artifactUri ) 
//  verifies profile applied 
//  load the child project, which inherits from p0... 
//  Cyclic Dependency Error 
// InstallResult install( RepositorySystemSession session, InstallRequest request )                  throws InstallationException;   release, snapshot unique ou non unique, attachment 
//  more english-friendly method...keep the code clean! :) 
/*  artifacts  */
//  Plugin1 [antlr] 
//  Beer comes straight after package in stub, much like real life. 
//  as they are not both null 
//  if not then i need to grab the mojo descriptor and look at the phase that is specified 
//  tests ------------------------------------------------------------------ 
//  assume it won't ever be.
//  versions with string lengths from 1 to 19 
//  Update snapshots 
//  +" has been terminated on this entry set\n-------------------\n"   +ins   +"\n-------------------\n"   ); 
// [01] resources:resources  [02] compiler:compile  [03] it:generate-metadata  [04] resources:testResources  [05] compiler:testCompile  [06] plexus-component-metadata:generate-test-metadata  [07] surefire:test  [08] jar:jar   
//  Metadata cannot be retrieved 
//  TODO configure these on the repository 
//  be sure we're testing the right class, i.e. DefaultVersionResolver.class 
//  Cipher uses Strings 
/*  MNG-3545  */
//  check with getPom( baseName + "-expected" ) 
//    Retriever 
//  this will run at most twice. The first time, the firstRun flag is turned off, and if the retry flag   is set on the first run, it will be turned off and not re-set on the second try. This is because the 
//  File 
//  make sure IncludesArtifactFilter is not equal ExcludesArtifactFilter! 
//  previously we cloned the artifact, but it is more efficient to just update the artifactScope   if problems are later discovered that the original object needs its original artifactScope value,    cloning may   again be appropriate 
//  Length 11+ chars 
//  very important to use the parentPlugins List, rather than parentContainer.getPlugins() 
//  metadata is added via addPluginArtifactMetadata 
//    Our settings.xml source is historically how we have configured Maven from the CLI so we are going to   have to honour its existence forever. So let's run it.   
// LocalRepositoryManager newLocalRepositoryManager( LocalRepository localRepository ); 
//  Base directory 
//  multi projects build entry point 
// VersionRangeResult resolveVersionRange( RepositorySystemSession session, VersionRangeRequest request )                  throws VersionRangeResolutionException; 
//  Activation 
//  initial try, use locally cached metadata 
//  default: fail fast   default: true   default: false   optional   optional 
/*  MNG-4102  */
//  only merge plugin definition from the parent if at least one   of these is true:   1. we're not processing the plugins in an inheritance-based merge   2. the parent's <inherited/> flag is not set 
//  parent references child with artifactId (which is not directory name) 
//  ----------------------------------------------------------------------     ---------------------------------------------------------------------- 
//  The root artifact may, or may not be resolved so we need to check before we attempt to resolve.   This is often an artifact like a POM that is taken from disk and we already have hold of the   file reference. But this may be a Maven Plugin that we need to resolve from a remote repository   as well as its dependencies. 
//  ChildSiteUrlInheritAppendPath 
//  otherwise, we trim the trailing " and append to the buffer. 
//  read poms separately 
//  OutputDirectory 
//  for performance, check digits instead of relying later on catching NumberFormatException 
//  retain baseVersion 
//  Organization 
//  -----------------------------------------------------------------------------------------------   Tests which exercise the lifecycle executor when it is dealing with individual goals.   ----------------------------------------------------------------------------------------------- 
//  ------------------------------------------------------------------------------------- 
//  NOTE: There's no notion of taskSegment equality.
//  Remove remaining TransferListener instances (checksum handlers removed in above finally clause) 
//  NOTE: The case of a trailing quote is handled by nullifying the arg buffer. 
// ------------------------------------------------------------------- 
//    Raw file transfers   
//  We have metadata retrieval problems, or there are cycles that have been detected   so we give this back to the calling code and let them deal with this information   appropriately. 
//  file system errors 
//  Repository 
//  ------------------------------------------------------------------------------------------- 
//  effective line, with indent and reset if end is colored 
/*        At the moment, this class is totally immutable, and this is in line with thoughts about the       pre-calculated execution plan that stays the same during the execution.       If deciding to add mutable state to this class, it should be at least considered to       separate this into a separate mutable structure.      */
//  pure user error, suppress stack trace 
//  from here to the end of the method is dealing with merging of the <executions/> section. 
//  Family 
//  The system scoped dependencies will be present in the classloader for the plugin 
//  It would be cool if there was a hook that i could use to setup a test environment.   I want to setup a local/remote repositories for testing but i don't want to have   to change them when i change the layout of the repositories. So i want to generate   the structure i want to test by using the artifact handler manager which dictates   the layout used for a particular artifact type. 
//  start building an argument here. 
//      
//  this was a failed transfer, and we don't want to retry. 
//  previous one is more dominant 
//  Plugin groups 
//  won't happen 
//  We have no POM file.   
//    We are taking as much as we can from the DefaultArtifact.equals(). The requested artifact has no file so   we want to remove that from the comparison.   
//  Jdk 
//  Site 
//    Taken from LegacyRepositorySystem   
//  We will attempt to get nab a system property as a way to specify a   parameter to a plugins. My particular case here is allowing the surefire   plugin to run a single test so I want to specify that class on the cli   as a parameter. 
//  Tag 
//    Run the user supplied ConfigurationProcessor   
//  check all transitive deps of a default dependency are compile scope, except for runtime and test 
//  Directory 
/*          * NOTE: Not used by Maven core, only here to provide backward-compat with plugins like the Install Plugin.          */
//                           String nonProxyHosts )      {          ProxyInfo proxyInfo = new ProxyInfo();          proxyInfo.setHost( host );          proxyInfo.setType( protocol );          proxyInfo.setPort( port );          proxyInfo.setNonProxyHosts( nonProxyHosts );          proxyInfo.setUserName( username );          proxyInfo.setPassword( password );            proxies.put( protocol, proxyInfo );            wagonManager.addProxy( protocol, host, port, username, password, nonProxyHosts );      } 
//  Distribution 
//  do nothing 
//               TreeSet<MetadataGraphEdge> deps = new TreeSet<MetadataGraphEdge>(                          new Comparator<MetadataGraphEdge>()                          {                              public int compare( MetadataGraphEdge e1                                                , MetadataGraphEdge e2                                                )                              { 
//  <groupId>:<artifactId>:<goal> 
// TODO maven-site-plugin -- not used by the plugin directly, but used by Doxia Integration Tool & MPIR 
//  This is the case where someone has executed a single goal from the command line   of the form:     mvn remote-resources:process     From the metadata stored on the server which has been created as part of a standard   Maven plugin deployment we will find the right PluginDescriptor from the remote   repository. 
//  This is used by the SITE plugin. 
//  inverse order 
//  append childPathAdjustment and childDirectory to parent url 
//  redirect stdout and stderr to file 
//  The rest is deprecated   USED BY MAVEN ASSEMBLY PLUGIN 2.2-beta-2 
//    Deprecated
/*  s1 != null &&  */
/* MNG- 4008 */
/*  farthest = runtime  */
//  We are going to take the project packaging and find all plugin in the default lifecycle and create   fully populated Plugin objects, including executions with goals and default configuration taken   from the plugin.xml inside a plugin.     TODO This whole method could probably removed by injecting lifeCyclePluginAnalyzer straight into client site.   TODO But for some reason the whole plexus appcontext refuses to start when I try this. 
// ---------------------------------------------------------------------------- 
//    New interface main.methods for the repository system.
//  muxer.setThisModuleComplete( projectBuild ); 
//  ArrayIndexOutOfBoundsException are typical indication of threading issues 
// noinspection ObjectEquality 
//  Used to import dependencyManagement dependencies 
//  now add all options, except for -D with cli first then config file 
//  ----------------------------------------------------------------------   Online vs. Offline requirement   ---------------------------------------------------------------------- 
//  we want to see all top-level thread groups 
//  Transfer listeners 
//    Code taken from LegacyRepositorySystem   
//  Reactor 
//  update policy doesn't affect contents 
//  the parent version is not a range, we have version skew, drop back to resolution from repo 
// addParameterUsageInfo( expression, messageBuffer ); 
//  Scope 
//  url 
//    Don't need any of this 
//  ----------------------------------------------------------------------   Plugins   ---------------------------------------------------------------------- 
//  Exists 
//  1.1 > 1-sp 
//  then relative path calculation will success during build from disk but fail when calculated from repo 
//  We do this in here so we can checksum the artifact metadata too, otherwise it could be metadata itself 
//  TestSourceDirectory 
// DeployResult deploy( RepositorySystemSession session, DeployRequest request )                  throws DeploymentException; 
//  Errors
//  string tokenizer won't detect these and ignores them
//  Contextualizable main.methods -----------------------------------------------
/*  (non-Javadoc)    * @see org.apache.maven.profiles.ProfileManager#explicitlyActivate(java.lang.String)     */
//  remove whitespaces at the end 
//  would like to throw this, but we have crappy stuff in the repo 
/*  MNG-786 */
//  copy fields 
//  Transfer Error
//  continue the build 
//  Beer comes straight after package in stub 
//  NOTE: The check for missing plugin versions is handled directly by the model builder 
//  qualifier is the whole version, including "-" 
//  Building Project Name Version    [i/n] 
//  InceptionYear 
//  But it was reset by the call to setVersionRange on restricting the version 
//  dependency management import 
//    Here we just need to know that a version is fine to use but this validation we can do in our workspace   resolver.   
//  write baseName + "-actual" 
//  ----------------------------------------------------------------------   Field validation   ---------------------------------------------------------------------- 
// not sure it's necessary to provide a default toolchain here.  only version can be eventually supplied, and
// fail( "should have failed since module reference == artifactId != directory name" ); 
//  special case: if omitted // on protocol, keep path as is 
//  the same instance can be provided multiple times under different Key's   deduplicate instances to avoid redundant beforeXXX/afterXXX callbacks 
//  runtime exceptions are most likely bugs in maven, let them bubble up to the user 
//  This is required by the surefire plugin 
//  enables no-arg constructor 
/* if_not[MAVEN4] */
//  the args are easy, cli first then config file 
//  version schemes not really supported: fully transformed as qualifier 
//  1.1 > 1-1 
//  test interpolation of basedir values in mojo configuration 
//  Won't happen 
//  read and validate raw model 
//  verify 
//  Empty path entry ("...//.."), remove. 
// TODO remote-resources-plugin 
//  ----------------------------------------------------------------------   Object overrides   ---------------------------------------------------------------------- 
//  we update the build number anyway so that it doesn't get lost. It requires the timestamp to take effect 
//  if this is the case of "-Dfoo=bar", then we need to adjust the buffer. 
/*  MNG-3836 */
//  validation error, continue project building and delay failing to help IDEs 
//  MNG-1927, MNG-2124, MNG-3355:   If the build section is present and the project directory is non-null, we should make   sure interpolation of the directories below uses translated paths.   Afterward, we'll double back and translate any paths that weren't covered during interpolation via the   code below...
//  override from command line 
//  check with getPom( "module-path-not-artifactId-effective" ) 
// -------------------------------------------------------------------  ------------------------------------------------------------------- 
//  use key as is 
//  ensure resulting url ends with slash if initial url was 
//  DefaultProjectBuilder 
//  Adding this back in for compatibility with the verifier that hard codes this option. 
//  LOG STREAMS 
//  Children 
//  Message 
//  Interactive 
//  ordering 
//  inceptionYear 
//  Conflict Resolution 
//  rethrow original errors and runtime exceptions 
//  managedVersionMap 
//  test and provided are not transitive, so exclude them 
//  a1 = alpha-1, b1 = beta-1, m1 = milestone-1 
//    Used by Tycho and will break users and force them to upgrade to Maven 3.1 so we should really leave   this here, possibly indefinitely. 
//  ArtifactId is neither inherited nor injected 
//  Missing 
/*  MNG-3760 */
//  Layout 
//  system scope is historic only - and simple 
/*  pluginArtifact  */
//  ArtifactId 
//  USED BY REMOTE RESOURCES PLUGIN, DEPENDENCY PLUGIN, SHADE PLUGIN 
//  OrganizationUrl 
/*  (non-Javadoc)    * @see org.apache.maven.profiles.ProfileManager#explicitlyActivate(java.util.List)     */
//  TODO Consider throwing UnsupportedSomething on hashCode/equals
//  invalid version range, so drop back to resolution from the repository 
//  unless it's an entry point.   currently processing the entry point - it should not have any entry incident edges 
//  use DefaultJavaToolChain for compatibility with maven 3.2.3 and earlier 
//  Version Range Violation 
//  no edges - don't need this vertex any more 
//  schedule independent projects 
//   <proxies>      <proxy>        <active>true</active>        <protocol>http</protocol>        <host>proxy.somewhere.com</host>        <port>8080</port>        <username>proxyuser</username>        <password>somepassword</password>        <nonProxyHosts>www.google.com|*.somewhere.com</nonProxyHosts>      </proxy>    </proxies> 
//  Overwrite existing values in model properties. Otherwise it's not possible 
//  -------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------- 
/*  MNG-2591 */
//  igorf: plugin realm comes later   assertNotNull( mojoDescriptor.getRealm() ); 
//  RelativePath 
//  valid - check if it is greater than the currently matched version 
//  This appears only to be used in test code 
//  [prefix]:[goal] 
//  system scopes come through unchanged... 
//  advance res2 
//  Select an appropriate available version from the (now restricted) range   Note this version was selected before to get the appropriate POM 
//  ----------------------------------------------------------------------- 
/*  MNG-3979  */
//    Default to the standard multithreaded builder   
//  we have a value, so it has to match the system value... 
//  exports descriptors are entirely optional 
//  Reset - only needed for 'getId'. 
//  check for exact match 
//  notice: extension and classifier not really used in this test... 
//  Subscribe 
//  DefaultGoal 
//  if this fails, forget about it, we'll try to overwrite it anyway so no need 
//  Don't use snapshot metadata for LATEST (which isSnapshot returns true for) 
/*  MNG-6386  */
//  PluginManagement 
//  enables default constructor 
//  ciManagement 
//  advance res1 
//    Be nice to whittle this down to Session, maybe add task segments to the session. The session really is the   the place to store reactor related information.   
//  assertTrue( new DefaultArtifactVersion( "1.0-alpha10" ).compareTo( new DefaultArtifactVersion( "1.0-alpha1" ) ) > 0 ); 
//  used by the site plugin 3.x 
//  TODO figure out how to reuse ModelLocator.locatePom(File) here 
//  Remove any previous repository with this Id 
//  We retrieve the POM below in the retrieval step. 
//  schedule dependent projects, if all of their requirements are met 
/*  MNG-4129  */
/*         LifecycleMappingsXpp3Reader reader = new LifecycleMappingsXpp3Reader();        LifecycleConfiguration config = reader.read( new InputStreamReader( getClass().getResourceAsStream( "/lifecycle.xml" ) ) );        assertEquals( "check number of lifecycles", 1, config.getLifecycles().size() );        Lifecycle l = (Lifecycle) config.getLifecycles().iterator().next();        assertEquals( "check id", "clover", l.getId() );        assertEquals( "check number of phases", 1, l.getPhases().size() );        Phase p = (Phase) l.getPhases().iterator().next();        assertEquals( "check id", "generate-sources", p.getId() );        assertEquals( "check number of executions", 1, p.getExecutions().size() );        Execution e = (Execution) p.getExecutions().iterator().next();        assertEquals( "check configuration", "true", ((Xpp3Dom) e.getConfiguration()).getChild( "debug" ).getValue() );        assertEquals( "check number of goals", 1, e.getGoals().size() );        String g = (String) e.getGoals().iterator().next();        assertEquals( "check goal", "clover:compiler", g );         */
//  Start all the threads 
//  this is a live injected collection 
//    Internal   
//  ----------------------------------------------------------------------   Dependency requirement   ---------------------------------------------------------------------- 
//  reportArtifacts 
//  check all transitive deps of a provided dependency are provided scope, except for test 
//  reset the retry flag. 
//  overlap 
//  ----------------------------------------------------------------------   Parameters   ---------------------------------------------------------------------- 
//  ignore for now and delay failure to higher level processing 
//  ConflictResolverFactory main.methods ----------------------------------------
//  try to verify the SHA-1 checksum for this file. 
//  clone source roots 
//  NOTE: Enforce recursive merge to trigger merging/inheritance logic for executions as well
//  if we need to update artifactScope of nearest to use farthest artifactScope, use the   nearest version, but farthest artifactScope 
//  lifecycle phase 
//  ignore plugin descriptor parsing errors at this point   these errors will reported during calculation of project build execution plan
//  this should always be the case for non-super POM instances... 
//  Test may fail if we get interrupted 
//    Make sure the Maven home directory is an absolute path to save us from confusion with say drive-relative   Windows paths.   
//  legacy support for maven-gpg-plugin:1.0 
//  site 
//    This should probably be a separate tool and not be baked into Maven.
//  ----------------------------------------------------------------------   Project requirement   ---------------------------------------------------------------------- 
//  if we also fail to verify based on the MD5 checksum, and the checksum transfer/read   succeeded, then we need to determine whether to retry or handle it as a failure. 
//  Not totally sure if this is needed for anything
//  This is required right now. 
//  fields ----------------------------------------------------------------- 
//  not critical here 
//  ------------------------------------------------------------------------ 
//  second try, refetch all (possibly outdated) metadata that wasn't updated in the first attempt 
//        
/*      * @see org.codehaus.plexus.PlexusTestCase#tearDown()      */
//  MNG-4543
//  ---------------------------------------------------------------------   --------------------------------------------------------------------- 
//  Mirrors 
//  otherwise it is ignore 
//  Use the recommended version from the specified VersionRange since there is no   original recommended version 
//  populate the provides section 
/*  system and provided dependencies are not transitive  */
//  Used by m2e but will be removed, really. 
//  1 extra '/' to remove 
//  Profiles 
//  single entry in the classpath, populated from itself 
//  reports configuration 
//  Connection 
//  Reports 
/*  putArtifact  */
//                             + project1.getScm().getDeveloperConnection() );            assertEquals( project1.getScm().getUrl(), "http://host/viewer?path=/p0/modules/p1" );          assertEquals( project1.getScm().getConnection(), "scm:svn:http://host/p0/modules/p1" );          assertEquals( project1.getScm().getDeveloperConnection(),                        "scm:svn:https://host/p0/modules/p1" );      } 
//  touch file so that this is not checked again until interval has passed 
//  Packaging 
//  ------------------------------------------------------------------------   Circular Dependency Exceptions   ------------------------------------------------------------------------ 
//  assertVersionOlder( "1.0-alpha-1-SNAPSHOT", "1.0-SNAPSHOT" ); 
// ----------------------------------------------------------------------------------------------------  ---------------------------------------------------------------------------------------------------- 
//  cannot inherit from null parent. 
//  remove the originating artifact if it is also in managed versions to avoid being modified during resolution 
/*      * TODO share with DefaultPluginMappingManager.      */
//  enable default constructor 
//  we use a dedicated comparator because we control our model version scheme. 
//  The fall-through indicates that the artifact cannot be found; 
//  compare against each other (including itself) 
//  delete the local copy so the old details aren't used. 
//  drive-relative Windows path, don't align with base dir but with drive root 
//  used by maven-dependency-tree and maven-dependency-plugin 
//  -TC2.2 
//  Needs to go away   These are really overrides now, projects defining dependencies for a plugin that override what is
//  Plugins are aggregated if Plugin.inherit != false 
//  profile injection 
//  this block prevents MNG-1703 
//  special case: if there is a windows drive letter using |, switch to : 
//  refresh logger in case container got customized by spy 
//  read projects together 
//    Put in a bogus file to make sure missing files cause the resolution to fail. 
//  Settings files 
//  no mojo in this POM 
//  TODO Copied from the DefaultInterpolator. We likely want to resurrect the PathTranslator or at least a   similar component for re-usage 
//  make projects that depend on me, and projects that I depend on 
//  forked phase 
//  sisu uses realm imports to establish component visibility 
//  First iteration - add initial id after version resolution. 
// Needed to make this method package visible to make writing a unit test possible 
//  Inherited 
//  to avoid constant folding by the compiler, this field must *not* be final 
/*  MNG-3944 */
//  fill in domain md with actual version data 
//  reports conversion to decoupled site plugin 
//  specified in the plugin itself. 
//          
//  ------------------------------------------------------------------------     ------------------------------------------------------------------------ 
/*  MNG-4070  */
//  Servers 
/*  farthest = test  */
//  ----------------------------------------------------------------------   I would like to be able to lookup the Mojo object using a key but   we have a limitation in modello that will be remedied shortly. So   for now I have to iterate through and see what we have.   ---------------------------------------------------------------------- 
//  Maybe do something ?
/*  transformer  */
// [01] clean:clean  [02] modello:xpp3-writer  [03] modello:java  [04] modello:xpp3-reader  [05] modello:xpp3-writer  [06] modello:java  [07] modello:xpp3-reader  [08] plugin:descriptor  [09] resources:resources  [10] compiler:compile  [11] resources:testResources  [12] compiler:testCompile  [13] surefire:test  [14] jar:jar  [15] plugin:addPluginArtifactMetadata  [16] install:install   
//  ----------------------------------------------------------------------   Mojo execution   ---------------------------------------------------------------------- 
//  licenses 
//  1-0 = 1- (normalize) = 1 
//  Profiles are neither inherited nor injected 
//  don't stop processing in case a future segment explicitly excludes this repo 
/*                  * NOTE: This is a sanity check of the cache hit. If the cached parent POM was locally resolved, the                 * child's <relativePath> should point at that parent, too. If it doesn't, we ignore the cache and                 * resolve externally, to mimic the behavior if the cache didn't exist in the first place. Otherwise,                 * the cache would obscure a bad POM.                  */
//  Roles 
//  type is inherited from the super pom 
/*  farthest = provided  */
//    System scoped version which should 
//  PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,   CycleDetectedInPluginGraphException; 
//  ----------------------------------------------------------------------   Test and compile sourceroots.   ---------------------------------------------------------------------- 
//  check all transitive deps of a test dependency are test, except test and provided which is skipped 
//  ----------------------------------------------------------------------   Profile Activation   ---------------------------------------------------------------------- 
//  make sure repeated entries are skipped 
//  flush the calculated artifactMap 
//  null case is covered by canDetermineActivation(), so we can do a straight startsWith() here. 
//  Maven 
//  for instance if package produced nothing or classifier problems. 
//  [MNG-6074] Maven should produce an error if no model version has been set in a POM file used to build an   effective model.     As of 3.4, the model version is mandatory even in raw models. The XML element still is optional in the   XML schema and this will not change anytime soon. We do not want to build effective models based on   models without a version starting with 3.4.
//  USED BY SUREFIRE, DEPENDENCY PLUGIN 
//  ChildScmUrlInheritAppendPath 
//  NOTE: Some plugins like Surefire access this field directly!
//  CHECKSTYLE_ON: LineLength   TODO Move me to Maven Shared Utils
//  Reports :: aggregate 
//  constructors ----------------------------------------------------------- 
//  enable re-resolution 
//  the metadata source looks up the default impl, so we have to trick it 
//  url normalization 
//  Also, we need to ensure that any exclusions it presents are   added to the artifact before we retrieve the metadata   for the artifact; otherwise we may end up with unwanted 
//  ignore 
//  this one should never happen in practice... 
/*          * NOTE: This provides backward-compat with maven-deploy-plugin:2.4 which bypasses the repository factory when         * using an alternative deployment location.          */
//  This will put this plugin last in the sorted map 
/*     	 *       v2    	 *   v1<    	 *       v3-v4    	 *    	  */
// TODO This prevents a cycle in the composition which shows us another problem we need to deal with.  @Requirement 
//  we cannot set this directly in the MDO due to the interactions with dependency management 
//  drive-relative Windows path, don't align with project directory but with drive root 
//         throws Exception      {          File localRepo = getLocalRepositoryPath();            ArtifactFactory factory = (ArtifactFactory) lookup( ArtifactFactory.class );          Artifact artifact = factory.createProjectArtifact( "maven", "p1", "1.0" );            ArtifactRepositoryFactory repoFactory = (ArtifactRepositoryFactory) lookup( ArtifactRepositoryFactory.class );          ArtifactRepository localArtifactRepo = repoFactory.createLocalRepository( localRepo );            MavenProject project1 = getProjectBuilder().buildFromRepository( artifact, Collections.EMPTY_LIST, localArtifactRepo );   
//  TODO should this be inside the above check? 
//  TODO this should not be allowed to be null. 
//  normalize separators 
//  this tricks plexus-component-metadata generate required metadata 
//  MNG-2123: null is a valid response to getSelectedVersion, don't
//  LOG LEVEL 
//  Deploy 
//  The build has been set but we want to step in here and fill in   values that have not been set by the child. 
/*  * Metadata for the artifact version directory of the repository. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO split instantiation (versioning, plugin mappings) from definition  */
//  Now the fully interpolated model is available: reconfigure the resolver 
/*         Wait until we are sure the print-stream thread is running.          */
/*  current POM rules all, if nearest is in current pom, do not update its artifactScope  */
//  we need the null check for pre-build legacy plugins... 
//  effective model validation 
//  I'm not entirely sure about the order but this should do...
//  calculated from request attributes. 
//  this relies heavily on the equals() and hashCode() for ComponentDescriptor,   which uses role:roleHint for identity...and roleHint == goalPrefix:goal.   role does not vary for Mojos. 
/*  (non-Javadoc)     * @see org.apache.maven.profiles.ProfileManager#addProfiles(java.util.List)      */
//  Notifiers 
//  special "aliases" a, b and m for alpha, beta and milestone 
//  Type 
//  check all transitive deps of a runtime dependency are runtime scope, except for test 
//  Only select snapshots that are unresolved (eg 1.0-SNAPSHOT, not 1.0-20050607.123456) 
//     {          setGroupId( af.getGroupId() );          setArtifactId( af.getArtifactId() );          setVersion( af.getVersion() );          setType( af.getType() );          setScope( af.getScope() );          setClassifier( af.getClassifier() );          //setUri( af.getDownloadUrl() );            this.resolved = af.isResolved();      } 
//  ----------------------------------------------------------------------   Components   ---------------------------------------------------------------------- 
//  this is the unusual version string, with 'H' in the middle 
//  Exceptions 
//  look for last ANSI escape sequence to check if nextColor 
//  session may be different from rootSession seeded in DefaultMaven   explicitly seed the right session here to make sure it is used by Guice 
//  ----------------------------------------------------------------------------   Settings equivalents   ---------------------------------------------------------------------------- 
//  ----------------------------------------------------------------------   Test artifact generation for unit tests   ---------------------------------------------------------------------- 
//  ----------------------------------------------------------------------   Project building   ---------------------------------------------------------------------- 
//  dependencies. 
//  NOTE: The PluginConfigurationExpander already merged the plugin-level config in 
//  add eventual current color inherited from previous line 
//            
//  ----------------------------------------------------------------------------   I'm fully aware that the file could just be moved using File.rename but   there are bugs in various JVM that have problems doing this across   different filesystem. So we'll incur the small hit to actually copy   here and be safe. jvz.   ----------------------------------------------------------------------------
//  first pass: build without building parent. 
/*  Allow for this test running across midnight  */
//    All the parts that were taken out of MavenProject for Maven 4.0.0   
/*      * Parse maven-...-plugin.     *     * TODO move to plugin-tools-api as a default only      */
/*  MNG-4000  */
//  system scope come through unchanged... 
//    Settings in core 
//  MNG-1911 / MNG-5572: Building plugins with extensions cannot be part of reactor
//  use this if we can, but prefer the original if possible 
//  Either the original or the specified version ranges have no restrictions 
//  Archive 
//  This should probably be moved to a separate stub
//  context of the container and thus the value would be interpolated by Plexus 
/*      * @see org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable#contextualize(org.codehaus.plexus.context.Context)      */
//  CHECKSTYLE_ON: MagicNumber 
//  pluginArtifacts 
//  if we're in the process of building up another arg, push it and start over.   this is for the case: "-Dfoo=bar "-Dfoo2=bar two" (note the first unterminated quote) 
//  We have a prefix and goal     idea:idea 
//  Maybe also make one with LifeCycleTasks 
/*  * Allows core extensions to participate in Maven build session lifecycle. * * All callback main.methods (will) follow beforeXXX/afterXXX naming pattern to * indicate at what lifecycle point it is being called. * * @see <a href="https://maven.apache.org/examples/maven-3-lifecycle-extensions.html">example</a> * @see <a href="https://issues.apache.org/jira/browse/MNG-4224">MNG-4224</a> * @since 3.0-alpha-3  */
//  calculated. 
//  don't need a deep copy, they don't get modified or added/removed to/from - but make them unmodifiable to be 
//  ----------------------------------------------------------------------     p1 inherits from p0   p0 inherits from super model     or we can show it graphically as:     p1 ---> p0 --> super model     ---------------------------------------------------------------------- 
//  an ordinary relative path, align with project directory 
//  developers 
/*  farthest = compile  */
//    Used by Tycho and will break users and force them to upgrade to Maven 3.1 so we should really leave   this here, possibly indefinitely.   
//  papa 
//  eaten, handled by repo system 
//  MNG-5368: Log a message instead of returning 'null' silently.
/*         This will not work until the RR plugin is released to get rid of the binding to the reporting exception which is a mistake.        This happens after removing the reporting API from the core:        java.lang.NoClassDefFoundError: org/apache/maven/reporting/MavenReportException        MavenSession session = createMavenSession( getProject( "project-with-inheritance" ) );        String goal = "process";        Plugin plugin = new Plugin();        plugin.setGroupId( "org.apache.maven.plugins" );        plugin.setArtifactId( "maven-remote-resources-plugin" );        plugin.setVersion( "1.0-beta-2" );        MojoDescriptor mojoDescriptor = pluginManager.getMojoDescriptor( plugin, goal, session.getCurrentProject(), session.getLocalRepository() );        assertPluginDescriptor( mojoDescriptor, "org.apache.maven.plugins", "maven-remote-resources-plugin", "1.0-beta-2" );        MojoExecution mojoExecution = new MojoExecution( mojoDescriptor );        pluginManager.executeMojo( session, mojoExecution );         */
//  We are doing something like "mvn clean:clean" where no version is specified but this   project we are working on has the version specified in the POM so the version should come from there. 
//    If we're logging to a file then we don't want the console transfer listener as it will spew   download progress all over the place   
// ----------------------------------------------------------------------------  ---------------------------------------------------------------------------- 
//  Name 
//  This one we will eat when looking through remote repositories   because we want to cycle through them all before squawking. 
/*                  * This is purely for backward-compat with 2.x where <extensions> consisting of a single artifact where                 * loaded into the core and hence available to plugins, in contrast to bigger extensions that were                 * loaded into a dedicated realm which is invisible to plugins (MNG-2749).                  */
//  ----------------------------------------------------------------------   System properties handling   ---------------------------------------------------------------------- 
// ------------------------------------------------------------------------ 
//  MNG-6170: Only schedule other modules from reactor if we have more modules to build than one.
//  If we're processing this merge as an inheritance, we have to build up a list of   plugins that were considered for inheritance. 
//  Length 7-8 chars 
//  calculated on-demand. 
//  -----------------------------------------------------------------------------------------------   Testing help   ----------------------------------------------------------------------------------------------- 
//  TODO configure on repository 
//  same instance from spec cache 
//    Deployer 
//  -T2.2C 
// TODO remove the update check manager  TODO separate into retriever and publisher  TODO remove hardcoding of checksum logic
//  1.any < 1-1 
//  forked goal 
//  read .mvn/maven.config 
//  we're going to parse this back in as XML so we need to escape XML markup 
//  1-1 < 1.0.x 
//  goal was missing - pass through to MojoNotFoundException 
//  intentionally blank 
//  ScriptSourceDirectory 
//  reload plugin realm from cache 
//  <groupId>:<artifactId>:<version>:<goal> 
//  ReportSets 
//  added to retain compile scope. Remove if you want compile inherited as runtime
//  ISO 8601-compliant timestamp for machine readability 
//  clear the inherited flag in the merge result. 
/*     * @see org.apache.maven.artifact.resolver.conflict.ConflictResolver#resolveConflict(org.apache.maven.artifact.resolver.ResolutionNode,    *      org.apache.maven.artifact.resolver.ResolutionNode)     */
//  lower than 2^31 
//  sure! 
//  ----------------------------------------------------------------------   Top-level elements   ---------------------------------------------------------------------- 
//  We are forcing the use of the plugin realm for all lookups that might occur during   the lifecycle that is part of the lookup. Here we are specifically trying to keep   lookups that occur in contextualize calls in line with the right realm. 
//  restore activation 
/*  MNG-3925  */
/* end[MAVEN4] */
//  expected failure 
//  default over to the main project builder... 
//  remove null trailing items: 0, "", empty list 
//  classical   now b < c, but before MNG-5568, we had b > c
//  ----------------------------------------------------------------------   Delegate to the model   ---------------------------------------------------------------------- 
/*  MNG-3887  */
//  description 
//  clean 
//  case insensitive 
//  The two phases below are really for future expansion, some would say they lack a drink   The point being that they do not really have to match the "real" stuff,
//  v3-->v4 
//  for the anonymous classes 
//  MNG-2861: match version can return null
//  TODO test reversed restrictions on all below 
// ------------------------------------------------------------------------  ------------------------------------------------------------------------ 
// List<MetadataResult> resolveMetadata( RepositorySystemSession session,                                        Collection<? extends MetadataRequest> requests ); 
//    Derive these from the URL   
//  warn if it is set to anything other than ignore
//  replace activation value with interpolated value 
//  TODO 
//  edge case - single vertex graph 
//    Allow the builder to be overridden by the user if requested. The builders are now pluggable. 
//  single project build entry point 
//  The first definition wins. 
/*  MNG-3984 */
//  move on to next in r2 
//  0 at the beginning of a number has a special handling 
//  TODO Make multiple segments on projectBuildList 
//  display progress [i/n] 
//  5 January 2014 
//  invalid 
//  see if this is a negative match 
//  If people want to deploy it 
//  don't add if they are equal and one is not inclusive 
//  We have everything that we need     org.apache.maven.plugins:maven-remote-resources-plugin:1.0:process     groupId   artifactId   version   goal   
//  Length 9 chars 
//  1-rc < 1, 1-ga > 1 
//  org.apache.maven.plugins:maven-remote-resources-plugin:1.0:process   TODO take repo mans into account as one may be aggregating prefixes of many   TODO collect at the root of the repository, read the one at the root, and fetch remote if something is missing   or the user forces the issue
//  Remove every checksum listener 
//  if we find the original, use that 
//  TestCase main.methods -------------------------------------------------------
//  if this is shorter, then invert the compare and mul with -1 
//  Build 
// based on ModeBuildingResult.validationLevel 
//  OS 
//  MNG-2199: What else to check here ?
//  Get local midnight boundary 
//  If people are going to make their own lifecycles then we need to tell people how to namespace them correctly   so that they don't interfere with internally defined lifecycles. 
//  finally add the CLI system properties 
//  layer the creation of a project builder configuration with a request, but this will need to be   a Maven subclass because we don't want to couple maven to the project builder which we need to   separate. 
/*  MNG-3937 */
//  If there is no version to be found then we need to look in the repository metadata for   this plugin and see what's specified as the latest release. 
/*  farthest = system  */
//  leading / was previously stripped 
//  not a proper url so returns false; 
//  ----------------------------------------------------------------------   MavenProjectBuilder Implementation   ---------------------------------------------------------------------- 
//  if this fails, forget about it 
//  Classifier 
/*          * NOTE: Plugins like maven-release-plugin query the path to the settings.xml to pass it into a forked Maven and         * the CLI will fail when called with a non-existing settings, so be sure to only point at actual files. Having         * a null file should be harmless as this case matches general Maven 2.x behavior...          */
//  Only used for testing 
//  fallback to loose class files only if artifacts haven't been packaged yet   and only for plain old jars. Not war files, not ear files, not anything else. 
/*  MNG-3877 */
//  new-style report configuration already present: warn since this new style has been deprecated   in favor of classical reporting section MSITE-647 / MSITE-684 
//  assertVersionOlder( "2.0.1-xyz-SNAPSHOT", "2.0.1-SNAPSHOT" ); 
//  see DOXIASITETOOLS-167 & MPIR-349 
//                                       return e2.getPomOrder() - e1.getPomOrder();                                  }                                    return e2.getDepth() - e1.getDepth();                              }                          }                      ); 
//  profile activation 
//  Now we expect the host 
//    If we have a system scoped artifact then we do not want any searching in local or remote repositories   and we want artifact resolution to only return the system scoped artifact itself.
//  When this happens we have a Maven 1.x POM, or some invalid POM.   It should have never found its way into Maven 2.x repository but it did. 
//  ----------------------------------------------------------------------   Logging   ---------------------------------------------------------------------- 
//  resembles a SNAPSHOT   10 digit number   15 digit number   20 digit number 
//  LOG COLOR 
//  Metadata cannot be found 
//  test that mojo which does not require dependency resolution trigger no downloading of dependencies 
//  Constructor 
//  prevent additional checks of this artifact until it expires again 
/*  MNG-3811 */
// void manageArtifactVersion( Artifact artifact, Artifact replacement ); 
// ---------------------------------------------------------------------------------------------------- 
//  Local repository 
//  NOTE: Backward-compat with maven-help-plugin:2.1 
//    At this point the DefaultModelBuildingListener has fired and it populates the   remote repositories with those found in the pom.xml, along with the existing externally   defined repositories.   
// ------------------------------------------------------------------ 
//    Maven4: We may want to evaluate how this is used but we add these separate as the    getExecutionProperties is deprecated in MavenSession.   
//  ----------------------------------------------------------------------   Reactor Make Mode   ---------------------------------------------------------------------- 
//  this is the default behavior. 
//  The CLI should win for defining properties 
//  ----------------------------------------------------------------------   The local repository for this category of tests   ---------------------------------------------------------------------- 
//  After the collection we will have the artifact object in the result but they will not be resolved yet.
//  move on to next in r1 
//  This will catch cases like <version></version> or <version/> 
//  since this list is a local one, and may have been modified during processing. 
//  works, but we don't fail on cycles presently 
//  Message below is checked for in the MNG-4463 core IT. 
//  helper to determine if problems contain error 
// assuming Type is available in current ClassLoader 
//  enable no-arg constructor 
//  ----------------------------------------------------------------------------   Request   ---------------------------------------------------------------------------- 
//  ----------------------------------------------------------------------   Accessors   ---------------------------------------------------------------------- 
//  TODO use newest conflict resolver 
//  These are cases where the artifact just isn't present in any of the remote repositories   because it wasn't deployed, or it was deployed in the wrong place.
//    Ignore   
//  this is expected 
//  NOTE: Order counts here! 
//  Relocation 
//  No, this does not print to system.out. It's part of the test 
//  Ensure it is not printed as 1.5.0 
//  have been resolved. 
//    Implementation   
//  and catch here rather than have it return null
//  groupId:artifactId -> (version -> vertex) 
//  to delete on exit 
/*          * This provides backward-compat with 2.x that allowed plugins like the maven-remote-resources-plugin:1.0 to         * populate the builder configuration with model repositories instead of artifact repositories.          */
//  no edges - nothing to worry about 
// no inspection unchecked
//  We are doing something like "mvn resources:resources" where no version is specified but this   project we are working on has the version specified in the POM so the version should come from there. 
//  assertVersionEqual( "2.0-0-SNAPSHOT", "2.0-SNAPSHOT" ); 
//  do nothing for now 
//  sanity checks 
//  default: batch mode which goes along with interactive   default: false   default: false   default: warn 
//  Don't consider the artifact's version in here, as this is stored in the directory above that 
//    Parsing errors can happen during the processing of the arguments and we prefer not having to check if   the logger is null and construct this so we can use an SLF4J logger everywhere.   
//  lifecycle bindings injection 
//  muxer.associateThreadWithProjectSegment( projectBuild ); 
//  We have everything that we need except the version     org.apache.maven.plugins:maven-remote-resources-plugin:???:process     groupId   artifactId   ???   goal   
//  TODO figure out way to avoid duplicated message 
//  ------------------------------------------------------------------------   Version Range Violations   ------------------------------------------------------------------------ 
//  MNG-2123: if the previous node was not a range, then it wouldn't have any available   versions. We just clobbered the selected version above. (why? i have no idea.)   So since we are here and this is ranges we must go figure out the version (for a   third time...)
//  Pre-store the checksums as any future puts will overwrite them 
//  indications to use these in comparison 
//  default cache does not track record usage 
//  don't log it. 
/*          * NOTE: Metadata at the g:a level contains a collection of available versions. After merging, we can't tell         * which repository provides which version so the metadata manager must not restrict the artifact resolution to         * the repository with the most recent updates.          */
//  
//  version 
//  the test in question and vice versa. A little Eclipse plugin would do the trick. 
//  entry point 
//  now - drop vertices 
//  ModelBase 
//  if it already exists locally we were just trying to force it - ignore the update
//  parentData.setModel( interpolatedParent ); 
//  We don't consider the version range in the comparison, just the resolved version 
/*          * Grab plugin executions that are bound to the selected lifecycle phases from project. The effective model of         * the project already contains the plugin executions induced by the project's packaging type. Remember, all         * phases of interest and only those are in the lifecycle mapping, if a phase has no value in the map, we are         * not interested in any of the executions bound to it.          */
//  <mirrors>     <mirror>       <id>nexus</id>       <mirrorOf>*</mirrorOf>       <url>http://repository.sonatype.org/content/groups/public</url>     </mirror>   </mirrors> 
//  This should take care of creating destination directory now on
// -----------------------------------------------------------------------  ----------------------------------------------------------------------- 
// void manageArtifactScope( Artifact artifact, Artifact replacement ); 
//  really don't care if it failed here only log warning 
/*          * Initialize mapping from lifecycle phase to bound mojos. The key set of this map denotes the phases the caller         * is interested in, i.e. all phases up to and including the specified phase.          */
//  for each exception   - knowing what artifacts are missing   - project building exception   - invalid project model exception: list of markers   - xmlpull parser exception 
//  Goals 
//  We want to send the root artifact back in the result but we need to do this after the other dependencies 
//  JDK8: this should be a call to map.merge( key, v, remapping ) 
//  CHECKSTYLE_OFF: LineLength 
//  SourceDirectory 
/*  MNG-3827 */
//  grab it first, because it's about to change... 
//  Version 
// SyncContext newSyncContext( RepositorySystemSession session, boolean shared ); 
//  If it was optional and not a direct dependency,   we don't add it or its children, just allow the update of the version and artifactScope 
//  MNG-2861: the artifact data has changed. If the available versions where previously   retrieved, we need to update it.
//  should never happen because attributes have no children 
//  Will show up last in the sorted map 
//  DownloadUrl 
//  NOTE: The upper-case packaging name is intentional, that's a special hinting mode used for certain tests 
//  ----------------------------------------------------------------------   Local repository   ---------------------------------------------------------------------- 
//  Content 
//  Property 
//  Scm 
//  don't pull in the transitive deps of a system-scoped dependency. 
//  Offline 
//  TODO take repo mans into account as one may be aggregating prefixes of many   TODO collect at the root of the repository, read the one at the root, and fetch remote if something is missing   or the user forces the issue
/*  MNG-3906 */
//  Intentionally notNull because Super POM may not contain a modelId 
//  modelVersion is neither inherited nor injected 
//    Artifact Repository Creation 
//  default cache does not track plugin usage 
//  Install 
//  This means a module which is build has a dependency which has the same   groupId, artifactId, version and classifier coordinates. This is in consequence   a self reference or in other words a circular reference which can not being resolved.
//  These main.methods deal with construction intact Plugin object that look like they come from a standard   <plugin/> block in a Maven POM. We have to do some wiggling to pull the sources of information   together and this really shows the problem of constructing a sensible default configuration but   it's all encapsulated here so it appears normalized to the POM builder.
//  Logging 
//  --------------------------------------------------------------------- 
//  groupId:artifactId:version -> project 
//  resolve plugin version as necessary 
//  no ide workspace artifact resolution 
//  to define the version via command line: mvn -Drevision=6.5.7 ... 
//  explicitly exclude. Set result and stop processing. 
//  model interpolation 
//  check for 'ALGO (name) = CHECKSUM' like used by openssl 
//  used by the Maven ITs 
//  MNG-4488 where let invalid parents slide on by
//  clone properties modifyable by plugins in a forked lifecycle 
//  default (or at least some of them) 
/*  MNG-3886 */
//    These settings values need to be removed and pushed down into a provider of configuration information   
//  Version mediation 
//  ArtifactFactory 
//  plugins configuration 
//  ----------------------------------------------------------------------   Properties containing info about the currently running version of Maven   These override any corresponding properties set on the command line   ---------------------------------------------------------------------- 
//  We need to eat any quotes surrounding arguments... 
//  relative path, e.g. "sub", "../sub" or "." 
//  direct dependency retains its scope 
//  prepare 
//  correct 
//  no op 
//  NOTE: The lifecycle order can affect implied execution ids so we better be deterministic. 
//  issueManagement 
//  Locally installed file is newer, don't use the resolved version 
//  Configuration 
//  test restricting empty sets 
//  Proxies 
//  NOTE: To avoid inconsistencies, we'll use the TCCL exclusively for lookups 
//    Desired order of precedence for local artifact repositories     Reactor   Workspace   User Local Repository 
//  Currently disabled 
//  CHECKSTYLE_ON: LineLength 
//     /**       * Returns a list of {@link java.io.File}s which represents the bootstrap libraries for the       * runtime environment. The Bootstrap libraries include libraries in JRE's       * extension directory, if there are any.       *       * @return List       */      List getBootstrapLibraries();        /**       * Returns a list of {@link java.io.File}s which represent the libraries recognized by       * default by the platform. Usually it corresponds to contents of CLASSPATH       * environment variable.       *       * @return List       */      List getStandardLibraries();        /**       * Returns a {@link java.io.File}s which represent the locations of the source of the JDK,       * or an empty collection when the location is not set or is invalid.       *       * @return List       */      List getSourceDirectories();        /**       * Returns a {@link java.io.File}s which represent the locations of the Javadoc for this platform,       * or empty collection if the location is not set or invalid       *       * @return List       */      List getJavadocFolders(); 
//  Here we will actually not have any artifacts because the ProjectDependenciesResolver is not involved here. So   right now it's not valid to ask for artifacts unless plugins require the artifacts. 
//  model normalization 
//  this case is not specified, might also return -1 
//  if the POM didn't exist, retry if any repo is configured to always update 
//  path is already absolute, we're done 
//  Message below is checked for in the MNG-2199 core IT. 
//  should never happen since checked isDigits(s) before  
//  Prerequisites are neither inherited nor injected 
//  USED BY MAVEN ASSEMBLY PLUGIN 
//  set the recommended version 
//  Description 
// This will fail on a validation error if incorrect 
/*     public int containerCountForUri( String uri )        throws IOException    {        Validate.notEmpty( uri, "uri can neither be null nor empty " );        ModelDataSource source = new DefaultModelDataSource();        source.init( domainModel.getModelProperties(), null );        return source.queryFor( uri ).size();    }	 */
//  ignore if failed as we will overwrite 
/*  * A conflict resolver factory that obtains instances from a plexus container. * * @author <a href="mailto:markhobson@gmail.com">Mark Hobson</a> * TODO you don't need the container in here with the active maps (jvz). * @since 3.0  */
//  Parent is added as an edge, but must not cause a cycle - so we remove any other edges it has   in conflict 
//  ChildProjectUrlInheritAppendPath 
/*  avoid modifying the managed Versions parameter creating a new map  */
//  record the error and mark the project as failed 
/*  (non-Javadoc)    * @see org.apache.maven.profiles.ProfileManager#addProfile(org.apache.maven.model.Profile)     */
/*  parent  */
//  GroupId 
//  TODO into artifactScope handler 
//  Add the root artifact (as the first artifact to retain logical order of class path!) 
//  Value 
//  modify parent 
//  check for external:* 
//  release artifact repository 
/* MNG-3938 */
//  ----------------------------------------------------------------------   Configuration   ---------------------------------------------------------------------- 
//  TestOutputDirectory 
// ------------------------------------------------------------------------------------------  ------------------------------------------------------------------------------------------ 
// VersionResult resolveVersion( RepositorySystemSession session, VersionRequest request )                  throws VersionResolutionException; 
//    These are the only main.methods we need in our primordial logger
/*  farthest is runtime and nearest has lower priority, change to runtime  */
//  extensions realm is expected to be fully setup at this point   any exception means a problem in maven code, not a user error 
//  default 
// TODO completely separate local and remote artifact repositories 
//  remove everything after the first space (if available) 
//  Excludes 
//    The request has not set any local or remote repositories as the system scoped dependency being resolved should only   give us the dependency off the disk and nothing more. 
//  used by maven-dependency-tree 
//  ChildScmDeveloperConnectionInheritAppendPath 
//  continue the build but ban all projects that depend on the failed one 
//  expected 
//  If this child node is a managed dependency, ensure   we are using the dependency management version   of this child if applicable b/c we want to use the   managed version's POM, *not* any other version's POM. 
//  Here, we need to determine which policy to use. Release updateInterval will be used when   the metadata refers to a release artifact or meta-version, and snapshot updateInterval will be used when   it refers to a snapshot artifact or meta-version.   NOTE: Release metadata includes version information about artifacts that have been released, to allow   meta-versions like RELEASE and LATEST to resolve, and also to allow retrieval of the range of valid, released   artifacts available. 
//  verify a few typical parameters are not duplicated 
//  There is only a single threadsafe plugin here... 
/*  MNG-3864 */
//  -------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------- 
//  consider the username&password because a repo manager might block artifacts depending on authorization 
//  Use the original recommended version since it exists 
//  This is like a filter but overrides all transitive versions 
//  Can be both "LifeCycleTask" (clean/install) and "GoalTask" (org.mortbay.jetty:maven-jetty-plugin:6.1.19:run) 
//  process the list 
//  a Maven 1.x pom will not even   update the resource if we stop supporting modelVersion 4.0.0 
//  guard against case where best-effort resolution for invalid models is requested 
//                                 { 
//  neither inherited nor injected 
//  NOI18N 
//  the default execution path only knows the DefaultModelProblemCollector,   only reason it's not in signature is because it's package private 
//  this block verifies MNG-1703
/* MNG-3995 */
//  ------------------------------------------------------------------------   Local Repository     1. Use a value has been passed in via the configuration   2. Use value in the resultant settings   3. Use default value   ------------------------------------------------------------------------ 
//  FinalName 
//  consider the URL (instead of the id) as this most closely relates to the contents in the repo 
//  Phase 
//  no separator between number and character 
// NOI18N 
//  All projects are the statics from this class 
//  Executions 
//  dependency management injection 
//  expected failure: wrong relative path calculation
//  restore profiles with file activation to their value before full interpolation 
//  if we're processing this as an inheritance-based merge, and   the parent's <inherited/> flag is not set, then we need to 
/*  MNG-1995  */
//  relocated dependency artifact is declared excluded, no need to add and recurse   further 
//  default cache does not track extension usage 
//  carry on 
//  draw the NPE. 
//  beware meta-versions! 
//  extensionArtifacts 
//  save profile activations before interpolation, since they are evaluated with limited scope 
//  The parent version may have resolved to something different, so we take what we asked for...   instead of - child.setVersion( parent.getVersion() ); 
//  We are going to take the project packaging and find all plugins in the default lifecycle and create   fully populated Plugin objects, including executions with goals and default configuration taken   from the plugin.xml inside a plugin.   
// noinspection SimplifiableIfStatement 
//  So now we have an url of the form file://<path> 
//  execute 
//  test a build where projects use different versions of the same plugin 
// mkleint: does this need to be public?
//  if the phase is specified then I don't have to go fetch the plugin yet and pull it down   to examine the phase it is associated to. 
//  Resources 
//  Url 
//  USED BY INVOKER PLUGIN 
/*  parentImports  */
//  reinstate the download monitor... 
//  if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum   file...we'll try again with the MD5 checksum. 
//  can't happen 
/*  farthest is compile and nearest is not (has lower priority), change to compile  */
//  Timing (remove this) 
//  Filtering 
//  assume it is not assignable from Collection or Map 
//  TestResources 
//  This test verifies the baseline structure used in subsequent tests. If this fails, the rest will fail. 
/*  MNG-3943 */
//  when model is read from repo, a stream is used, then pomFile == null   (has consequences in inheritance algorithm since getProjectDirectory() returns null) 
//  we need to get the latest file for the project, not the artifact that was created at one point in time
/* MNG-3803 */
//  make a copy so the original in the POM doesn't get messed with 
//  fix for MNG-2221 (assembly cache was not being populated for later reference): 
//  USED BY MAVEN HELP PLUGIN 
//  mailingLists 
//  Attributes 
//  Extensions 
//  ------------------------------------------------------------------------   Artifact Transfer Mechanism   ------------------------------------------------------------------------ 
/*                             NOTE: Users occasionally misuse the id "local" for remote repos which screws up the metadata                            of the local repository. This is especially troublesome during snapshot resolution so we try                            to handle that gracefully.                              */
//  1.0 == 1, 1.1 > 1 
//  this has to be a separate "if" statement, to capture the case of: "-Dfoo=bar" 
//  if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the    checksum doesn't match. This could be a problem with the server (ibiblio HTTP-200 error   page), so we'll try this up to two times. On the second try, we'll handle it as a bona-fide   error, based on the repository's checksum checking policy. 
//  older wagons throw this. Just get() instead 
//  same instance from version cache 
// TODO turn an equivalent back on when the RR plugin is released. 
//  SystemPath 
//  If file could not be found or was not valid, start from scratch 
/*                      * NOTE: We intentionally only support ${basedir} and not ${project.basedir} as the latter form                     * would suggest that other project.* expressions can be used which is however beyond the design.                      */
//  an ordinary relative path, align with base dir 
//  build the regular repos after extensions are loaded to allow for custom layouts 
//  Email 
//  protected main.methods ------------------------------------------------------
//  !final 
//  just to make sure all the bases are covered... 
//  ConflictResolver main.methods -----------------------------------------------
//  simple checks first to short circuit processing below. 
//  TODO this checking for file == null happens because the resolver has been confused about the root 
//  For a given project packaging find all the plugins that are bound to any registered   lifecycles. The project builder needs to now what default plugin information needs to be   merged into POM being built. Once the POM builder has this plugin information, versions can be assigned   by the POM builder because they will have to be defined in plugin management. Once this is setComplete then it   can be passed back so that the default configuration information can be populated.     We need to know the specific version so that we can lookup the right version of the plugin descriptor   which tells us what the default configuration is.   
/*  (non-Javadoc)    * @see org.apache.maven.profiles.ProfileManager#explicitlyDeactivate(java.util.List)     */
/*          * Determine the lifecycle that corresponds to the given phase.          */
/*          * Probably is not worth it, but here I make sure I restore request         * to its original state.          */
//  default does nothing 
//  1-1 > 1-sp 
//  Length 7 chars 
//  if the POM has no file, we cached a missing artifact, only return the cached data if no update forced 
//  local wins now, and irrelevant if not local as test/provided aren't transitive   assertEquals( "Check artifactScope", Artifact.SCOPE_COMPILE, artifact.getArtifactScope() ); 
/*  MNG-3899  */
//  Before we update the version of the artifact, we need to know   whether we are working on a transitive dependency or not. This   allows depMgmt to always override transitive dependencies, while   explicit child override depMgmt (viz. depMgmt should only   provide defaults to children, but should override transitives).   We can do this by calling isChildOfRootNode on the current node. 
//  We leave in optional ones, but don't pick up its dependencies 
/*  MNG-2174  */
// TODO used by the Enforcer plugin 
//  org.eclipse:emf:2.3.0-v200706262000   org.eclipse.wst.common_core.feature_2.0.0.v200706041905-7C78EK9E_EkMNfNOd2d8qq 
//  Filters 
//  Just hide the one method we want behind the RepositorySystem interface. 
/*  MNG-2174 */
//  The temporary file is named destination + ".tmp" and is done this way to ensure   that the temporary file is in the same file system as the destination because the   File.renameTo operation doesn't really work across file systems.   So we will attempt to do a File.renameTo for efficiency and atomicity, if this fails   then we will use a brute force copy and delete the temporary file. 
//  snapshot artifact repository 
//  don't allow construction. 
//  ----------------------------------------------------------------------   Artifact repository policies   ---------------------------------------------------------------------- 
//  bad url just skip it here. It should have been validated already, but the wagon lookup will deal with it 
//    Customizations available via the CLI   
//  Map types of artifacts 
//  create and cache extensions realms 
//  make copy to get rid of needless overhead for dynamic lookups 
//  ----------------------------------------------------------------------   Now that we have everything that we need we will fire up plexus and   bring the maven component to life for use.   ---------------------------------------------------------------------- 
//  1 will make it throw a RuntimeException - SpEL will let this through 
//  simply must not bail; we don't want non-existent resources to result in an Exception 
//  for now just make a new array; TODO: optimize 
//  Read-write transaction -> flush the Hibernate Session.   Further check: only flush when not FlushMode.MANUAL. 
//  some case would not have been really necessary, but we can't know this at this point). 
//  this test is a bit fragile, but gets the job done, proving that an   attempt was made to look up the AJ aspect. It's due to classpath issues   in .integration-tests that it's not found.
//  Instantiation failure, maybe too early... 
/* 	 * Eat an identifier, possibly qualified (meaning that it is dotted).	 * TODO AndyC Could create complete identifiers (a.b.c) here rather than a sequence of them? (a, b, c)	  */
//  TODO: broken comparison since Mockito 2.2 upgrade   verifyIdenticalInvocations(expectedLexicalHandler, actualLexicalHandler); 
//  Is the test class annotated with @TestConstructor? 
//  should not be called, since we return false for canRead(Class) 
//  TODO don't lose generic info for the new map 
//  we have work todo... 
//  Abort test? 
//  Default reader selection necessary? 
//  TODO Determine why setExceptionToRaise() is unused. 
//  We don't trust the JMS provider: It might throw RuntimeException or Error. 
//  TODO Future optimization - if followed by a static method call, skip generating code here 
//  TODO: Optimization: Process only if this() specifies a type and not an identifier. 
//  Have we already encountered that Locale before? 
//  Direct annotation present? 
// FIXME revisit in case of reentrant sync deadlock
//  It has already caused a field error with a rejected value. 
//  TODO - only handles 2-dimensional arrays 
//  TODO: Make me final when deprecated methods are removed 
//  TODO [SPR-13537] Change equalTo(null) to equalTo(""). 
//  TODO: error? 
//  Has the existing bean definition bean marked as a framework-generated bean? 
//  Resolve plain BeanDefinition, without contained name: use dummy name. 
//  Expose RequestContext? 
//  Is the stream closed? 
//  TODO May fail on either call: may want to tighten up definition 
//  verification!? 
/* 	 * SPR-6038: detect HSQL and stop illegal locks being taken.	 * TODO: Against Quartz 2.2, this test's job doesn't actually execute anymore...	  */
//  If they were numbers, were they compatible? 
//  Direct match? 
//  TODO should be able to make this assertion: need to fix target handling   in AdvisedSupport  assertEquals(target2, ((Advised) proxied).getTarget()); 
//  TODO: shouldn't the wildcard lower the score?  		assertEquals(-1,  				comparator.compare(parse("/hotels/new"), parse("/hotels/new.*"))); 
//  TODO this will currently map, would be nice for optimization  assertTrue(ajexp.matches(HasGeneric.class));  assertFalse(ajexp.matches(TestBean.class)); 
//  Value not of required type? 
//  Plain PersistenceException wrapper for underlying exception?   Make sure the nested exception message is properly exposed,   along the lines of Spring's NestedRuntimeException.getMessage() 
//  Open frame not sent yet?   If in the session initialization thread, then cache, otherwise wait. 
//  TODO: remove reflection when build requires JDK 9+ 
//  Custom editor for this type? 
//  TODO: optimize 
//  TODO better exception handling 
//  Could actually try to figure out interface from create? 
//  Remove corresponding bean from singleton cache, if any. Shouldn't usually   be necessary, rather just meant for overriding a context's default beans 
//  For MySQL: exception class name indicating a timeout? 
//  It would be nice to partially match a path and get any bound variables in one step 
//  TODO -- this fails with NPE due to ArrayToObject converter - discuss with Andy  setValueExpectError("arrayContainer.doubles[1]", new ArrayList<String>());  setValueExpectError("arrayContainer.shorts[1]", new ArrayList<String>()); 
//  TODO: make sure Callback is null 
//  TODO if you change type pattern from org.springframework.beans..*   to org.springframework..* it also matches introduction.   Perhaps generated advisor bean definition could be made to depend   on the introduction, in which case this would not be a problem.
//  JSR-330 API not available - Provider interface simply not supported then. 
//  TODO document this behaviour. 
//  We can optimize this because it's all new:   There is no replacement of existing property values. 
//  one error (should not include delimiter) 
// bad method (too many args, doesn't obey class contract) 
//  TODO replace this check: no longer possible  assertEquals(advised.getTarget(), this); 
//  TODO this seems rather bogus, should we eagerly show an error? 
//  TODO is this caching safe - passing the expression around will mean this executor is also being passed around 
//  TODO possible optimization here if we cache the discovered type reference, but can we do that? 
// FIXME inline? 
//  TODO might want to control this behaviour...   Do we really want to call remove after a remote exception? 
//  TODO used to catch UnknownAdviceTypeException, but   with CGLIB some errors are in proxy creation and are wrapped   in aspect exception. Error message is still fine.  assertTrue(ex.getMessage().indexOf("ntroduction") > -1);
//  TODO: returns just 1 as of AspectJ 1.9 beta 3, not detecting the applicable lambda expression anymore   assertEquals(2, ctx.getBean(CountingAspect.class).count); 
//  TODO: fix Reactor support 
//  TODO this looks like a serious issue (but not a new one): the context object against which arguments are evaluated seems wrong:  		evaluate("{a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8,i:9,j:10}.?[isEven(value) == 'y']", "[2, 4, 6, 8, 10]", ArrayList.class); 
//  TODO: Why does this test fail? It hasn't been run before, so it maybe never actually passed... 
//  TODO: what does this mean? This method is not used in SpEL so probably ignorable? 
//  slight hack for Linux/Unix systems 
//  TODO fails due to conversionservice handling of String[] to Object...  	expression = parser.parseExpression("#append2(#stringArray)"); 
//  TODO Determine why connectWithError() is unused. 
//  We don't trust the JDBC driver: It might throw RuntimeException or Error. 
//  not implemented 
//  TODO: Reactor usually times out on Windows ...
//  TODO: It's just an adapter but returning 0 might still have side effects... 
//  Bean Validation 2.0: currently not implemented here since it would imply   a hard dependency on the new javax.validation.ClockProvider interface.   To be resolved once Spring Framework requires Bean Validation 2.0+.   Obtain the native ValidatorFactory through unwrap(ValidatorFactory.class)   instead which will fully support a getClockProvider() call as well. 
//  TODO could do with more refactoring around argument handling and varargs 
/* 	 * Further TODO for compilation:	 *	 * - OpMinus with a single literal operand could be treated as a negative literal. Will save a	 *   pointless loading of 0 and then a subtract instruction in code gen.	 * - allow other accessors/resolvers to participate in compilation and create their own code	 * - A TypeReference followed by (what ends up as) a static method invocation can really skip	 *   code gen for the TypeReference since once that is used to locate the method it is not	 *   used again.	 * - The opEq implementation is quite basic. It will compare numbers of the same type (allowing	 *   them to be their boxed or unboxed variants) or compare object references. It does not	 *   compile expressions where numbers are of different types or when objects implement	 *   Comparable.     *	 * Compiled nodes:	 *	 * TypeReference	 * OperatorInstanceOf	 * StringLiteral	 * NullLiteral	 * RealLiteral	 * IntLiteral	 * LongLiteral	 * BooleanLiteral	 * FloatLiteral	 * OpOr	 * OpAnd	 * OperatorNot	 * Ternary	 * Elvis	 * VariableReference	 * OpLt	 * OpLe	 * OpGt	 * OpGe	 * OpEq	 * OpNe	 * OpPlus	 * OpMinus	 * OpMultiply	 * OpDivide	 * MethodReference	 * PropertyOrFieldReference	 * Indexer	 * CompoundExpression	 * ConstructorReference	 * FunctionReference	 * InlineList	 * OpModulus	 *	 * Not yet compiled (some may never need to be):	 * Assign	 * BeanReference	 * Identifier	 * OpDec	 * OpBetween	 * OpMatches	 * OpPower	 * OpInc	 * Projection	 * QualifiedId	 * Selection	  */
//  TODO currently failing as with new ObjectToArray converter closest constructor 
//  TODO: small memory optimization here (can skip creation for methods with no advice) 
//  TODO: publisherToMono/CompletableFuture vs Single (ISE on multiple elements)? 
//  TODO currently failing since setValue does a getValue and "Wien" string != PlaceOfBirth - check with andy 
//  TODO Is the resolver/executor model too pervasive in this package? 
//  TODO: refactor in AbstractBeanFactory (tests for AbstractBeanFactory) 
//  No implementation, just an addition of the tag interface StatefulJob   in order to allow stateful method invoking jobs. 
//  The target does not implement the hashCode() method itself. 
//  TODO possible optimization - only regex match if rest of pattern matches?   Benefit likely to vary pattern to pattern 
//  Not implemented 
//  The above result is likely to be incomplete, i.e. only containing file system references.   We need to have pointers to each of the jar files on the classpath as well... 
//  TODO need to make this conditionally occur based on a debug flag 
//  TODO: maybe try and detect this as a special case in parser? 
//  TODO what is the end position for a method reference? the name or the last arg? 
//  This method may throw any BeansException, which won't be caught   here, if there is a critical failure such as no matching field.   We can attempt to deal only with less serious exceptions. 
//  TODO Do we need special handling when patterns contain multiple dots? 
//  ---- workaround ----
//  TODO: Consider optimization by caching the list of the aspect names 
/* 	 * Tomcat: ClientAbortException or EOFException	 * Jetty: EofException	 * WildFly, GlassFish: java.io.IOException "Broken pipe" (already covered)	 * <p>TODO:	 * This definition is currently duplicated between HttpWebHandlerAdapter	 * and AbstractSockJsSession. It is a candidate for a common utility class.	 * @see #indicatesDisconnectedClient(Throwable)	  */
/*  * Tests for pooling invoker interceptor. * TODO: need to make these tests stronger: it's hard to * make too many assumptions about a pool. * * @author Rod Johnson * @author Rob Harrop * @author Chris Beams * @author Stephane Nicoll  */
//  This is a hack to be able to get the generated key from a database that doesn't support   get generated keys feature. HSQL is one, PostgreSQL is another. Postgres uses a RETURNING   clause while HSQL uses a second query that has to be executed with the same connection. 
//  Can't clearly figure out exact method due to type converting / autowiring! 
//  Workaround  caching issue... 
//  JCA WorkManager resolved lazily - may not be available. 
//  TODO unable to build correct type descriptor 
//  it should behave like ours 
//  Check it contains all 
//  int 
//  for this to work, an actual WebJar must be on the test classpath 
//  Skip over any content from the start of the comment to the EOL 
//  Should not happen...
//  BeanFactory interface not registered as resolvable type in a plain factory. 
//  Create EntityManagerFactory directly through PersistenceProvider. 
//  Probably a proxy interfering with target type match -> throw meaningful exception. 
//  Will do JNDI lookup to get home but won't call create   Could actually try to figure out interface from create?
//  TODO: could call the conversion service to convert the value to a String
//  Should not happen.. 
//  Register the JPA EntityManager's JDBC Connection for the DataSource, if set. 
// 	assertTrue(((SpelNodeImpl)((SpelExpression) expression).getAST()).isCompilable());  	assertCanCompile(expression); 
//  Second request: same session 
//  SPR-12170 
//  expire immediately so we can check expiration started 
//  Implementation of DeferredResultProcessingInterceptor methods 
//  Any other reactive type, typically a Flux 
//  Parse num_element_value_pairs and element_value_pairs and visit these values. 
//  Get and invoke the scheduled timeout task 
//  Standard JCA 1.5 "acknowledgeMode" apparently not supported (e.g. WebSphere MQ 6.0.2.1) 
//  no built in support for this: 
//  Remove exposed nestedPath value. 
//  Check nested map in list 
//  original value is not a Big* number - use standard long conversion 
//  Access long array 
//  First, check factory method return type, if applicable 
//  Ignore when no TransformerFactory implementation is available 
// -------------------------------------------------------------------------   Helper methods used by the operations above  ------------------------------------------------------------------------- 
//  Swap it back 
//  SPR-9079 
//  Note: the ordering of the initializers is intentionally: two, one. 
//  The new helper class here uses an upper bound on the generic 
//  should start since it's a dependency of an auto-started bean 
//  Check out of bounds 
//  If there are no listeners to inherit, we might need to merge the   locally declared listeners with the defaults. 
//  Absolutely needs thread-bound Executor to initialize. 
//  Already filtered 
//  Make ThemeSource aware of parent ThemeSource. 
//  Subtraction 
//  Ignore - no need to check resolvable type for manually registered singleton 
//  Create local SchedulerFactory instance (typically a StdSchedulerFactory) 
//  Get the value from the tag body 
//  SPR 17210 
//  At this point, we got a new result to process 
//  check original locale 
//  Visit the runtime invisible instruction annotations, if any. 
//  no init-param set  sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml"); 
//  before construction 
//  NOTE we are using mock references so we don't need to worry about GC 
//  Instead of postHandle and afterCompletion 
//  Delegate to WebContentGenerator for checking and preparing. 
//  inline list creation 
//  get the bean again 
//  check new theme namelocale 
//  the advice declared last has higher precedence 
//  1. First item received   2. writeFunction applied and writeCompletionBarrier subscribed to it   3. Write Publisher fails right after that and before request(n) from server 
//  Determine JmsListenerEndpointRegistry bean from the BeanFactory 
//  Possible values for the KIND field of an abstract type. 
//  Avoid creation of target Connection on pre-close cleanup (e.g. Hibernate Session) 
//  Efficiently check whether bean definition exists in this factory. 
//  depending on the configured hierarchy mode.s 
//  Controller-local first... 
//  - The offset of the AnnotationDefault attribute, or 0. 
//  Index of the next runtime visible type annotation to read (in the 
// ---------------------------------------------------------------------   Implementation of Lifecycle interface  --------------------------------------------------------------------- 
//  Type references 
//  SPR-13241 
//  mark which properties are required 
//  SPR-13374 
//  Two captures mean we use a RegexPathElement 
//  will it be compilable. 
//  Possibly on Tomcat when called too late: fall back to silent setStatus 
//  Keep backing up the inheritance hierarchy. 
//  We are only validating the request. The response is mocked out.   hotel.getId() == 42   hotel.getName().equals("Holiday Inn") 
//  no match, no forward slash included 
//  "read-only not supported" SQLException -> ignore, it's just a hint anyway 
//  should handle Shopper (beats Greetable since it is a class) 
//  PROJECTION 
//  WebRequest / NativeWebRequest / ServletWebRequest 
//  CORS lookup 
//  Do not modify the Session: just mark the request accordingly. 
//  Fail if we're already creating this bean instance:   We're assumably within a circular reference. 
//  This is a format that cannot be parsed by new Date(String) 
//  colors.put("black", "schwarz"); 
//  Use defaults?
//    / mapping (default servlet)   
//  SPR-13375 
//  Plain variant: just find a default bean 
//  Can now remove it 
//  foo.iii == 99 
//  id attribute is supported, but we don't want it 
//  Do invoke this filter... 
//  RMIClientSocketFactory specified for registry access.   Unfortunately, due to RMI API limitations, this means   that we need to parse the RMI URL ourselves and perform   straight LocateRegistry.getRegistry/Registry.lookup calls. 
// -------------------   SPR-16103 classes  ------------------- 
//  SPR-8718 
/* 		public int return5() {			return 5;		}		 */
//  Full SLF4J SPI including location awareness support 
//  Must not be able to set enter message with exception placeholder 
//  Publish event via parent context as well... 
//  Route and metadata 
//  Forwarded to the "default" servlet via <mvc:default-servlet-handler/> 
//  Add property values based on autowire by name if applicable. 
//  SPR-15772 
//  Or, and, not expressions 
//  try to update the attribute again 
//  Check if repackaging is needed... 
//  Ensure user configured an appropriate DataSource/TransactionManager pair. 
//  Invoked method threw a checked exception.   We must rethrow it. The client won't see the interceptor. 
//  Default editors for primitive arrays. 
//  Search parent types for method that has same signature as bridge. 
//  Fresh ResourceBundle.getBundle call in order to let ResourceBundle   do its native caching, at the expense of more extensive lookup steps. 
//  Only do attribute scanning for public annotations; we'd run into   IllegalAccessExceptions otherwise, and we don't want to mess with   accessibility in a SecurityManager environment. 
//  This implementation does nothing!   It's not overloaded 
//  Optimize for Mono 
//  create the proxy definition 
//  valueOf() invokes the constructor 
//  SPR-11326 
//  Reverse the list so that we can traverse "down" the hierarchy. 
//  Couldn't determine resource URL - return null to indicate   that there is no appropriate text representation. 
//  SPR-17429 
//  SPR-13111 
//  disable caching for reliable leak detection, see https://github.com/netty/netty/issues/5275 
//  Interceptor behind regexp advisor 
//  @Transactional(readOnly = true) 
//  Release underlying connection back to the connection manager 
//  try first time 
//  default HandlerAdapters if no other adapters are found. 
//  Media type from "produces" attribute 
//  registered listeners above - but here potentially with additional metadata. 
//  the arguments should have been converted to the box form of the required type. 
//  Still in startup registration phase 
//  PUT 
//  SPR-11325 
//  JCA 
//  there a couple of mappings defined with which we can test the   path matching, let's do that... 
//  First non-basic Decoder (e.g. CBOR, Protobuf) 
//  Ignore non-existent default lifecycle methods. 
//  Rationale for the following assertion:     The field value for the custom rule is null when JUnit sees it. JUnit then   ignores the null value, and at a later point in time Spring injects the rule   from the ApplicationContext and overrides the null field value. But that's too   late: JUnit never sees the rule supplied by Spring via dependency injection. 
//  Typically a MalformedURLException or AccessControlException. 
//  method with changing target 
//  If EJB 3.1 API not present, simply ignore. 
//  Correct the position for the error before re-throwing 
//  - consolidate the state scattered in these two instances into the canonical instance: 
//  Standard Bean Validation 1.1 API 
//  next trigger is in one second because second is wildcard 
//  See SPR-10945 Serialized events result in a null source 
//  Try to connect using client. 
//  A normal return value: will lead to a commit. 
//  Explicit cast for compatibility with covariant return type on JDK 9's ByteBuffer 
//  SPR-13379 
//  nop = 0 (0x0)   aconst_null = 1 (0x1)   iconst_m1 = 2 (0x2)   iconst_0 = 3 (0x3)   iconst_1 = 4 (0x4)   iconst_2 = 5 (0x5)   iconst_3 = 6 (0x6)   iconst_4 = 7 (0x7)   iconst_5 = 8 (0x8)   lconst_0 = 9 (0x9)   lconst_1 = 10 (0xa)   fconst_0 = 11 (0xb)   fconst_1 = 12 (0xc)   fconst_2 = 13 (0xd)   dconst_0 = 14 (0xe)   dconst_1 = 15 (0xf)   bipush = 16 (0x10)   sipush = 17 (0x11)   ldc = 18 (0x12)   ldc_w = 19 (0x13)   ldc2_w = 20 (0x14)   iload = 21 (0x15)   lload = 22 (0x16)   fload = 23 (0x17)   dload = 24 (0x18)   aload = 25 (0x19)   iload_0 = 26 (0x1a)   iload_1 = 27 (0x1b)   iload_2 = 28 (0x1c)   iload_3 = 29 (0x1d)   lload_0 = 30 (0x1e)   lload_1 = 31 (0x1f)   lload_2 = 32 (0x20)   lload_3 = 33 (0x21)   fload_0 = 34 (0x22)   fload_1 = 35 (0x23)   fload_2 = 36 (0x24)   fload_3 = 37 (0x25)   dload_0 = 38 (0x26)   dload_1 = 39 (0x27)   dload_2 = 40 (0x28)   dload_3 = 41 (0x29)   aload_0 = 42 (0x2a)   aload_1 = 43 (0x2b)   aload_2 = 44 (0x2c)   aload_3 = 45 (0x2d)   iaload = 46 (0x2e)   laload = 47 (0x2f)   faload = 48 (0x30)   daload = 49 (0x31)   aaload = 50 (0x32)   baload = 51 (0x33)   caload = 52 (0x34)   saload = 53 (0x35)   istore = 54 (0x36)   lstore = 55 (0x37)   fstore = 56 (0x38)   dstore = 57 (0x39)   astore = 58 (0x3a)   istore_0 = 59 (0x3b)   istore_1 = 60 (0x3c)   istore_2 = 61 (0x3d)   istore_3 = 62 (0x3e)   lstore_0 = 63 (0x3f)   lstore_1 = 64 (0x40)   lstore_2 = 65 (0x41)   lstore_3 = 66 (0x42)   fstore_0 = 67 (0x43)   fstore_1 = 68 (0x44)   fstore_2 = 69 (0x45)   fstore_3 = 70 (0x46)   dstore_0 = 71 (0x47)   dstore_1 = 72 (0x48)   dstore_2 = 73 (0x49)   dstore_3 = 74 (0x4a)   astore_0 = 75 (0x4b)   astore_1 = 76 (0x4c)   astore_2 = 77 (0x4d)   astore_3 = 78 (0x4e)   iastore = 79 (0x4f)   lastore = 80 (0x50)   fastore = 81 (0x51)   dastore = 82 (0x52)   aastore = 83 (0x53)   bastore = 84 (0x54)   castore = 85 (0x55)   sastore = 86 (0x56)   pop = 87 (0x57)   pop2 = 88 (0x58)   dup = 89 (0x59)   dup_x1 = 90 (0x5a)   dup_x2 = 91 (0x5b)   dup2 = 92 (0x5c)   dup2_x1 = 93 (0x5d)   dup2_x2 = 94 (0x5e)   swap = 95 (0x5f)   iadd = 96 (0x60)   ladd = 97 (0x61)   fadd = 98 (0x62)   dadd = 99 (0x63)   isub = 100 (0x64)   lsub = 101 (0x65)   fsub = 102 (0x66)   dsub = 103 (0x67)   imul = 104 (0x68)   lmul = 105 (0x69)   fmul = 106 (0x6a)   dmul = 107 (0x6b)   idiv = 108 (0x6c)   ldiv = 109 (0x6d)   fdiv = 110 (0x6e)   ddiv = 111 (0x6f)   irem = 112 (0x70)   lrem = 113 (0x71)   frem = 114 (0x72)   drem = 115 (0x73)   ineg = 116 (0x74)   lneg = 117 (0x75)   fneg = 118 (0x76)   dneg = 119 (0x77)   ishl = 120 (0x78)   lshl = 121 (0x79)   ishr = 122 (0x7a)   lshr = 123 (0x7b)   iushr = 124 (0x7c)   lushr = 125 (0x7d)   iand = 126 (0x7e)   land = 127 (0x7f)   ior = 128 (0x80)   lor = 129 (0x81)   ixor = 130 (0x82)   lxor = 131 (0x83)   iinc = 132 (0x84)   i2l = 133 (0x85)   i2f = 134 (0x86)   i2d = 135 (0x87)   l2i = 136 (0x88)   l2f = 137 (0x89)   l2d = 138 (0x8a)   f2i = 139 (0x8b)   f2l = 140 (0x8c)   f2d = 141 (0x8d)   d2i = 142 (0x8e)   d2l = 143 (0x8f)   d2f = 144 (0x90)   i2b = 145 (0x91)   i2c = 146 (0x92)   i2s = 147 (0x93)   lcmp = 148 (0x94)   fcmpl = 149 (0x95)   fcmpg = 150 (0x96)   dcmpl = 151 (0x97)   dcmpg = 152 (0x98)   ifeq = 153 (0x99)   ifne = 154 (0x9a)   iflt = 155 (0x9b)   ifge = 156 (0x9c)   ifgt = 157 (0x9d)   ifle = 158 (0x9e)   if_icmpeq = 159 (0x9f)   if_icmpne = 160 (0xa0)   if_icmplt = 161 (0xa1)   if_icmpge = 162 (0xa2)   if_icmpgt = 163 (0xa3)   if_icmple = 164 (0xa4)   if_acmpeq = 165 (0xa5)   if_acmpne = 166 (0xa6)   goto = 167 (0xa7)   jsr = 168 (0xa8)   ret = 169 (0xa9)   tableswitch = 170 (0xaa)   lookupswitch = 171 (0xab)   ireturn = 172 (0xac)   lreturn = 173 (0xad)   freturn = 174 (0xae)   dreturn = 175 (0xaf)   areturn = 176 (0xb0)   return = 177 (0xb1)   getstatic = 178 (0xb2)   putstatic = 179 (0xb3)   getfield = 180 (0xb4)   putfield = 181 (0xb5)   invokevirtual = 182 (0xb6)   invokespecial = 183 (0xb7)   invokestatic = 184 (0xb8)   invokeinterface = 185 (0xb9)   invokedynamic = 186 (0xba)   new = 187 (0xbb)   newarray = 188 (0xbc)   anewarray = 189 (0xbd)   arraylength = 190 (0xbe)   athrow = 191 (0xbf)   checkcast = 192 (0xc0)   instanceof = 193 (0xc1)   monitorenter = 194 (0xc2)   monitorexit = 195 (0xc3)   wide = 196 (0xc4)   multianewarray = 197 (0xc5)   ifnull = 198 (0xc6)   ifnonnull = 199 (0xc7)   goto_w = 200 (0xc8)   jsr_w = 201 (0xc9) 
//  Convert the merged properties, if necessary. 
// Added a brief snooze here - seems to fix occasional  java.net.BindException: Address already in use errors 
//  request attribute 
//  -----------------------------------------------------------------------------------------------   Constructor and accessors   ----------------------------------------------------------------------------------------------- 
//  SPR-14577 
//  SPR-16972 
//  We need this resolver separate from ServerWebExchangeArgumentResolver which   implements SyncHandlerMethodArgumentResolver. 
//  relative to the persistence unit root, according to the JPA spec 
//  The provider may support on-demand cache creation... 
//  No header value sent at all 
//  HttpServletRequest exposes some headers as properties:   we should include those if not already present 
//  Try custom editor... 
//  Avoid cancelHeartbeat() and responseLock within server "close" callback 
//  Store result in a local variable in order to appease the   Eclipse compiler with regard to inferred generics. 
//  Check it affects JNDI 
//  Fallback for ClassLoaders without parent/child relationship: 
//  Primarily ".xml" files but for any other extension as well 
// ds.setDriverClassName("foobar"); 
//  two events: ContextRefreshedEvent and TestEvent 
//  Baseline: 
//  This will cause creation of default SQL translator. 
//  An invalid scoped proxy arrangement - let's ignore it. 
//  Use bind error processor to create FieldError. 
//  Otherwise, expose null/empty value and associated BindingResult 
//  ServerEndpointConfig.Configurator implementation 
//  We have exactly one match. 
//  Do not initialize FactoryBeans here: We need to leave all regular beans   uninitialized to let the bean factory post-processors apply to them!   Separate between BeanDefinitionRegistryPostProcessors that implement   PriorityOrdered, Ordered, and the rest. 
//  Nevertheless call commit, in order to reset the transaction timeout (if any). 
//  No value 
//  Protected template methods 
//  set new locale 
//  SPR-16844 
//  Unmarshalling 
//  do not flush the underlying response as the content as not been copied to it yet 
//  Name property value is overridden 
//  Now we have properties, process each one individually. 
//  SPR-17076 
//  Errors instance, even if no errors.
//  Quick check for existing entry on ConcurrentHashMap... 
//  request.setRequestURI("http://localhost:7070/example/bingo.html"); 
// 		SpelExpression expr = parser.parseExpression("(hasRole('SUPERVISOR') or (#a <  1.042)) and hasIpAddress('10.10.0.0/16')"); 
//  Invoke method on target Connection. 
//  Add its successors to the list of blocks to process. Note that {@link #pushSuccessors} does   not push basic blocks which are already in a list. Here this means either in the list of   blocks to process, or in the list of already processed blocks. This second list is 
//  Specific exception counter. Example: java.lang.RuntimeException 
//  SPR-16710 
//  Division 
//  root 
//  Clear cached merged bean definitions since the post-processors might have 
//  for os x / linux 
//  Proceed to the joinpoint through the interceptor chain. 
//  literals 
//  set JPA version (1.0 or 2.0) 
//  VARIABLE 
//  target invocation exception 
//  should fail with bogus rollback rule 
//  Intentionally not static 
//  Tag values for the constant pool entries (using the same order as in the JVMS). 
//  REAL_LITERAL :   ('.' (DECIMAL_DIGIT)+ (EXPONENT_PART)? (REAL_TYPE_SUFFIX)?) |   ((DECIMAL_DIGIT)+ '.' (DECIMAL_DIGIT)+ (EXPONENT_PART)? (REAL_TYPE_SUFFIX)?) |   ((DECIMAL_DIGIT)+ (EXPONENT_PART) (REAL_TYPE_SUFFIX)?) |   ((DECIMAL_DIGIT)+ (REAL_TYPE_SUFFIX));   fragment INTEGER_TYPE_SUFFIX : ( 'L' | 'l' );   fragment HEX_DIGIT :   '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F'|'a'|'b'|'c'|'d'|'e'|'f';     fragment EXPONENT_PART : 'e' (SIGN)* (DECIMAL_DIGIT)+ | 'E' (SIGN)*   (DECIMAL_DIGIT)+ ;   fragment SIGN : '+' | '-' ;   fragment REAL_TYPE_SUFFIX : 'F' | 'f' | 'D' | 'd';   INTEGER_LITERAL   : (DECIMAL_DIGIT)+ (INTEGER_TYPE_SUFFIX)?; 
//  Second request: session expires 
//  There must be an async result before dispatching 
//  Normal path element found. 
//  -1 if not known; should be known in all reasonable cases 
//  Nested types 
//  Unknown Number subtype -> best guess is double increment 
//  This one's for the tx (shared) 
//  https://github.com/rsocket/rsocket-java/issues/613 
/*  test methods in superclass  */
//  bean exists 
//  convertedValue == null 
//  @since 4.0.3 
//  ... and set through setter 
//  second invocation for bf2 -- should throw 
//  Candidate class is an ImportBeanDefinitionRegistrar ->   delegate to it to register additional bean definitions 
//  Read the max_stack, max_locals and code_length fields. 
//  SPR-7779 
//  gh-22952 
//  look up by type and default name 
//  Could apply dynamically to getAge/setAge but not to getName 
//  Should return the age before the third, AOP-induced birthday 
//  Annotation Class not resolvable 
//  Compute the stack size, ignoring TOP types that are just after a LONG or a DOUBLE. 
//  short 
//  Only check bean definition if it is complete. 
//  Check the set of scanned definitions for any further config classes and parse recursively if needed 
//  SPR-16715 
//  When the input is a map, we push a special context object on the stack   before calling the specified operation. This special context object   has two fields 'key' and 'value' that refer to the map entries key   and value, and they can be referenced in the operation   eg. {'a':'y','b':'n'}.![value=='y'?key:null]" == ['a', null] 
//  Remove Level 2   Should also remove Levels 3-A and 3-B, leaving only Level 1 as a context in the   cache but also removing the Level 1 hierarchy since all children have been 
//  Remove duplicate methods (possible due to resolved bridge methods) 
/* 	 * NOTE: We could avoid the code duplication between this class and the CGLIB	 * proxies by refactoring "invoke" into a template method. However, this approach	 * adds at least 10% performance overhead versus a copy-paste solution, so we sacrifice	 * elegance for performance. (We have a good test suite to ensure that the different	 * proxies behave the same :-)	 * This way, we can also more easily take advantage of minor optimizations in each class.	  */
//  gh-22959 
//  A competing write might have completed very quickly 
//  First child gives us the array type which will either be a primitive or reference type 
//  SPR-9420 
//  fetch async result similar to "asyncDispatch" builder 
//  second commit attempt 
//  the scope proxy has kicked in 
//  header not present 
//  Reset HTTP 1.0 Pragma header if present 
//  Must generate CGLIB subclass. 
// Add no interceptors 
//  'test string' 
//  won't actually do anything since we're not processing through an app ctx 
//  target type is declared as raw enum, treat the trimmed value as <enum.fqn>.FIELD_NAME 
//  SPR-6923 
//  Take a slow path if observing unexpected argument types 
//  The return value is the new value, not the original value 
//  Skip the argument types, one at a each loop iteration. 
//  SPR-15291 
//  Check if this is the alternative (textual) representation of an operator (see   alternativeOperatorNames) 
//  Just test anything: it will fail if context wasn't found 
//  Interesting hierarchical factory to test counts.   Slow to read so we cache it. 
//  config file doesn't matter - just a placeholder 
//  Skip 0 to 3 padding bytes. 
//  No name to resolve 
//  Determine autowire mode. 
//  1. external-general-entities and dtd support disabled (default) 
//  Do not allow eager init for type matching in case of a prioritized post-processor. 
//  Immediate event 
// -------------------------------------------------------------------------   Methods dealing with configuration properties  ------------------------------------------------------------------------- 
//  trigger a transaction 
//  This should always be true, since we're only calling this when active. 
//  Return the last level in the context hierarchy 
//  stack: right/left 
// 			ctx.setRootObject(new Manager("Luke"));  			ctx.setVariable("a",1.043d);  			value = (Boolean)expr.getValue(ctx,Boolean.class);  			assertFalse(value); 
//  Correctly returns false since JmxUtils won't navigate to the extended interface 
// SPR-14767 
//  SPR-11806 
//  register and start immediately 
//  Should never happen. 
//  Expired on retrieve or while processing request, or invalidated.. 
//  zero size array if nothing to pass as the varargs parameter 
// do something with object1 
//  it was a '.' or a '?.' 
//  probably a streaming request - let's simply ignore it 
//  Create the set of field types that may be annotated with @DateTimeFormat. 
//  Static factory methods 
//  Fallback to original instance 
//  audio/basic > audio/* 
//  Convert value to target type here. 
//  Ignore the first outgoing edge of the basic blocks ending with a jsr: these are virtual   edges which lead to the instruction just after the jsr, and do not correspond to a   possible execution path (see {@link #visitJumpInsn} and   {@link Label#FLAG_SUBROUTINE_CALLER}). 
//  Support images buttons, which would submit parameters as name_value.x=123 
//  Attempt to populate the cache entry 
//  Check whether current file size is different than original one. 
//  Search for TaskScheduler bean... 
//  skip the target_path structure: 
//  Prototype: new object on each call. 
//  test null assertion 
//  parseCheck("new int[] {3,2,1}.sort()");   }   
//  Check nested map 
//  JPA 2.0: return EntityManagerFactory's CriteriaBuilder/Metamodel (avoid creation of EntityManager) 
//  Use loadFactor to disable resize 
//  Eagerly resolve handler if referencing singleton via name. 
//  Possibly a bean constraint with property path: retrieve the actual property value.   However, explicitly avoid this for "address[]" style paths that we can't handle. 
//  Immediately trigger the request in a no-output scenario as well 
//  Write content type and also length (determined via byte array). 
//  Package private accessors... 
//  Copy and reset the nextAttribute field so that it can also be used in FieldWriter. 
//  This should happen only once, for the implicit first frame (which is explicitly visited   in ClassReader if the EXPAND_ASM_INSNS option is used - and COMPUTE_INSERTED_FRAMES   can't be set if EXPAND_ASM_INSNS is not used). 
//  There is definitely a variant, and it is everything after the country   code sans the separator between the country code and the variant. 
//  xLOAD or xSTORE 
//  The best we can do is to assume we're safe. 
//  fast default check 
//  Add to end of list 
//  Inner bean definition must receive same scope as containing bean. 
//  should never be invoked because isRuntime() returns false 
//  SPR-4789 
//  to the caller to convert them (e.g. through a ConversionService). 
//  Early cache initialization on startup 
//  Clocks go forward an hour so 2am doesn't exist in CET for this localDateTime 
//  Read-only attributes 
//  parseCheck("{1,2,3,4,5,6,7,8,9,10}.${#isEven(#this) == 'y'}",   "{1,2,3,4,5,6,7,8,9,10}.${(#isEven(#this) == 'y')}");   } 
//  Ask for re-resolution on next getTheme call. 
//  Probably no protocol in original jar URL, like "jar:C:/mypath/myjar.jar".   This usually indicates that the jar file resides in the file system. 
//  TODO This currently passes because of the Date(String) constructor fallback is used
//  Any Throwable other than RuntimeException and Error   has to be considered checked according to the JLS. 
//  assertTrue(AopUtils.isJdkDynamicProxy(bean)); 
//  visitLabel starts a new basic block (except for debug only labels), so we need to update the 
//  arguments for 'clone'-like method 
//  Same lenient fallback checking as in CachedIntrospectionResults... 
//  Service locator for a bean type 
// ---------------------------------------------------------------------   Various  --------------------------------------------------------------------- 
//  does not override handle() 
//  check de-registration works 
//  iii=42 
//  The dummy business method will throw an exception if the   necessary callbacks weren't invoked in the right order. 
//  Protect from infinite recursion in Undertow, where we can't check if data   is available, so all we can do is to try to read.   Generally, no need to check if we just came out of readAndPublish()... 
//  SPR-13867 
//  duplicate slash or backslash 
//  Shouldn't affect second 
//  Continue below... 
//  Skip String: CharSequenceDecoder + "*/*" comes after 
//  Fall back to InputStream adaptation in superclass 
//  Try InputStream resolution for jar resources 
//  SPR-16496 
//  Optimization to avoid creating ClassReader for super class. 
//  Note: attributeName is added to the constant pool by the call to computeAnnotationsSize   below. This assumes that there is at least one non-null element in the annotationWriters   sub-array (which is ensured by the lazy instantiation of this array in MethodWriter).   The attribute_name_index, attribute_length and num_parameters fields use 7 bytes, and each   element of the parameter_annotations array uses 2 bytes for its num_annotations field. 
//  Do nothing, no values found at all. 
//  Disable writing: next item will be cached.. 
//  Adding a 2nd Cookie should result in 2 Cookies. 
//  root still null 
//  If this resolver is not supposed to handle the given view,   return null to pass on to the next resolver in the chain. 
//  Check default behaviour is overridden 
//  is there more to this token than simply the kind 
//  Not streaming: write headers without committing response.. 
//  SPR-16362 
//  Remove destroyed bean's prepared dependency information. 
//  used only for error reporting 
//  Verify if locals are the same as in the previous frame. 
//  More than one operation found -> local declarations override interface-declared ones... 
//  Union with all setters 
//  A Resource object: add it to the result. 
//  Collections 
//  - The string corresponding to the SourceDebugExtension attribute, or null. 
//  Inner cast required by Eclipse IDE. 
//  The factory is calling the bean method in order to instantiate and register the bean   (i.e. via a getBean() call) -> invoke the super implementation of the method to actually   create the bean instance. 
//  Maps 
//  5xx 
//  key is foo.bar 
//  Last step: publish corresponding event. 
//  gh-23542 
//  Classic Hibernate getFlushMode() with FlushMode return type 
//  The user (i.e. not the factory) is requesting this bean through a call to   the bean method, direct or indirect. The bean may have already been marked   as 'in creation' in certain autowiring scenarios; if so, temporarily set   the in-creation status to false in order to avoid an exception. 
//  Start of the most recent variable capture in a particular path element 
//  Encode methods 
//  Register as ServletContext attribute, for ContextCleanupListener to detect it. 
//  must work with raw map in this test 
/* 	 * Separate static class to isolate Aalto dependency.	  */
//  Initialize and register a StaticMessageSource. 
//  Otherwise ignore new imported config class; existing non-imported class overrides it. 
//  Fields designed for test introspection 
//  we want to fall back to the default... 
//  If we have another kind of PersistenceException, throw it. 
//  We have been able to determine the arg names. 
//  Get as late as possible to minimize the time we "own" the target, 
//  SPR-16231 
//  SPR-16364 
// ---------------------------------------------------------------------------------------   Convenience methods for sending auto-converted messages  --------------------------------------------------------------------------------------- 
//  force use of Class.getClassLoader() 
//  Cannot access system ClassLoader - oh well, maybe the caller can live with null... 
//  Release Connection early, to avoid potential connection pool deadlock   in the case when the exception translator hasn't been initialized yet. 
//  varargs 2 - null is packed into the varargs 
//  Note: the following 'multi-line' layout is for enhanced code readability.         
//  SPR-11931 
//  Target Connection already held -> return it. 
//  Based purely on catchAll 
//  else 
//  Leave stack trace for later, if error is not handled... 
//  --- SmartContextLoader - loadContext() ---------------------------------- 
//  -----------------------------------------------------------------------------------------------   Equals, hashCode and toString.   ----------------------------------------------------------------------------------------------- 
//  Candidate class is an ImportSelector -> delegate to it to determine imports 
//  Allocate the cache of ConstantDynamic values, if there is at least one. 
//  up to last '**' 
//  try the numbers 0,1,2,null 
//  Specific environment settings defined, overriding any shared properties. 
//  Autodetect UserTransaction at its default JNDI location. 
//  Rely on default pointcut. 
//  Haven't had an afterCommit call: trigger a rollback. 
//  Set ResourceAdapter's ClassLoader as bean class loader. 
//  Special handling for this, target, @this, @target, @annotation   in Spring - we can optimize since we know we have exactly this class,   and there will never be matching subclass at runtime. 
//  Fetch RMI registry to expose. 
//  Evaluate dynamic method matcher here: static part will already have   been evaluated and found to match. 
//  Hibernate Query.list() method 
//  If we get here, otherProxy is the other AopProxy. 
//  SPR-16499 
//  Either there was no accessor or it no longer exists 
//  Serialization methods 
//  Fallback is to return an empty SQLErrorCodes instance. 
//  Logging related 
//  extension receivers are not explicitly named, but require a name for Java interoperability   $receiver is not a valid Kotlin identifier, but valid in Java, so it can be used here 
//  throw these two exceptions, besides PersistenceException. 
//  Check reference beyond end of collection 
//  Including json 
//  Match 
//  just tests that the (singleton) script-backed bean is able to be instantiated with references to its collaborators 
//  SPR-16103 
//  Here label.frame should be null. 
//  Recovery during active operation.. 
//  invoke constructor 
//  RowSet navigation methods 
//  following methods are used to test support for primitives 
//  allow getters and setters to be marked as operations directly 
//  assumably from commit call to the underlying JDBC connection 
//  A problem occurred whilst attempting to construct an object of type   'org.springframework.expression.spel.ConstructorInvocationTests$Tester'   using arguments '(java.lang.Integer)' 
//  Depends on age, name and spouse (TestBean) 
//  methodArgs : LPAREN! (argument (COMMA! argument)* (COMMA!)?)? RPAREN!; 
//  SPR-14939 
//  try any registered prefixes before giving up 
// assertEquals(2, conf.getInvocations()); 
//  no URL -> treat as file path 
//  ensure the custom environment took 
//  HttpServletRequest required for all further argument types 
//  We don't have an exact type but if bean definition target type or the factory 
// client.setHessian2(true); 
//  safe if same Class can be loaded from given ClassLoader 
//  Now sort out the final argument, which is the varargs one. Before entering this method, 
//  Value type adaptation, also covering java.util.Optional 
//  Participating in larger transaction 
//  Repeat a few times just to be sure... 
//  Check definition settings for new transaction. 
//  NOTE: We would actually expect that there are now ZERO entries in the   person table, since the transaction is rolled back by the framework;   however, since our JdbcTemplate and the transaction manager used by   the Spring TestContext Framework use two different DataSource   instances, our insert statements were executed in transactions that   are not controlled by the test framework. Consequently, there was no   rollback for the two insert statements in   modifyTestDataWithinTransaction().   
//  Make sure that the cache resolver is initialized. An exception cache resolver is only   required if the exceptionCacheName attribute is set on an operation. 
//  - The offset of the ModulePackages attribute, or 0. 
//  Unexpected exception from external delegation call -> close EntityManager and rethrow. 
//  Fix point algorithm: add the first basic block to a list of blocks to process (i.e. blocks   whose stack map frame has changed) and, while there are blocks to process, remove one from   the list and update the stack map frames of its successor blocks in the control flow graph   (which might change them, in which case these blocks must be processed too, and are thus   added to the list of blocks to process). Also compute the maximum stack size of the method, 
//  Set arguments: Does nothing if there are no parameters. 
//  Check that lookup methods exist and determine their overloaded status. 
//  Note: fields are ordered as in the ClassFile structure, and those related to attributes are   ordered as in Section 4.7 of the JVMS. 
//  Local variables are in variable scopes which come and go during evaluation.  Normal variables are   accessible through the evaluation context 
//  Can only generate bytecode where the right operand is a direct type reference,   not if it is indirect (for example when right operand is a variable reference) 
//  give up trying to compile it when it just doesn't seem to be possible. 
//  Massage return value if necessary 
//  was not available. 
//  Rollback 
//  Hessian 2.0 call... for some reason not handled in HessianServlet! 
//  Call two methods to test for SPR-3953-like condition 
//  Explicit access via Buffer base type for compatibility   with covariant return type on JDK 9's ByteBuffer... 
//  Normal case: URI contains context path. 
//  Set request attribute to fallback theme and remove cookie. 
//  See https://stackoverflow.com/questions/12626699/if-modified-since-http-header-passed-by-ie9-includes-length 
//  direct to the target using the fixed chain for that method. 
//  varargs conversion 
//  Copy request headers, as they might be pooled and recycled by   the server implementation once the handshake HTTP exchange is done. 
//  In 2.0 XSD as well as in 2.1 XSD. 
//  Multi-purpose return value types 
//  lazy scheduled tasks are a contradiction in terms -> force to false 
//  Take this as a close match if there isn't one already 
//  -> JobExecutionException, to be logged at info level by Quartz 
//  Assumes no overloading of test methods... 
//  Use a default of near-lowest precedence, still allowing for even lower precedence in other mappings 
//  destroyMethod 
//  Wrap the EntityManagerFactory in a factory implementing all its interfaces.   This allows interception of createEntityManager methods to return an   application-managed EntityManager proxy that automatically joins   existing transactions. 
//  Lazy invocation of the target method on the provided type 
//  TODO [SPR-9517] Enable ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass test cases   { ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.class, true }, // CGLIB proxy   { ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.class, false }, 
//  Create a new XmlBeanDefinitionReader for the given BeanFactory. 
//  but 07xxx will be bad grammar picked up by the fallback SQLState translator 
//  SPR-15674 (in comments) 
//  We could check canEncode but we're probably last in order anyway 
//  Ensure we have at least some HandlerExceptionResolvers, by registering 
//  SPR-14584 
//  set the new value 
//  value of false 
//  SPR-15782 
//  Index of the next runtime invisible type annotation to read (in the 
//  1. First item received   2. writeFunction applied and writeCompletionBarrier subscribed to it   3. writeFunction fails, e.g. to flush status and headers, before request(n) from server 
//  Make MessageSource aware of parent MessageSource. 
//  Attach any proxy target class metadata. 
// ---------------------------------------------------------------------   General convenience methods for working with Strings  --------------------------------------------------------------------- 
//  findAnnotation() does search on interfaces 
//  Load Level 3-A 
//  endif designates the instruction just after GOTO_W, and is visited as part of the 
//  Merged annotation chooses lowest depth 
//  Corresponding qualifier on bean implementation class? (for custom user types) 
//  Proceed with file system resolution... 
//  SPR-16108 
//  Ensure we have at least one HandlerMapping, by registering 
//  Annotations used on tested elements 
//  No current invocation... 
//  varargs 
//  Passing (int,Sub) on call to foo(Integer,Super) requires boxing conversion of argument zero 
//  SPR-13254 
//  Return early if [handlerStart,handlerEnd[ and [rangeStart,rangeEnd[ don't intersect. 
//  The method may be on an interface, but we need attributes from the target class. 
//  Cut off at latest possible point 
//  If we get here, we're supposed to shut down. 
//  Unsupported operations 
//  SPR-12647 
//  Load Level 3-B 
//  If no CacheManager given, fetch the default. 
//  Enforce comment prefix aliases within the global @SqlConfig. 
//  Spring 1.2 style 
//  the content of these attributes. 
//  SPR-17082 
//  --- ContextLoader ------------------------------------------------------- 
//  Will work for transactional and non-transactional connections. 
//  a default HandlerMapping if no other mappings are found. 
//  End of meaningful data... 
//  The invoker wraps any Throwable in a ThrowableWrapper instance so we   can just make sure that one bubbles up the stack. 
//  should not fail! 
//  all need converting to strings 
//  https://en.wikipedia.org/wiki/Billion_laughs   https://msdn.microsoft.com/en-us/magazine/ee335713.aspx 
//  static method, one parameter of reference type 
//  Nothing on the stack but something is needed 
//  Order of decoders may be significant for default data MimeType   selection in RSocketRequester.Builder 
//  SPR-16983 
//  Separate between BeanPostProcessors that implement PriorityOrdered, 
//  always false - but left operand code always driven   in case it had side effects 
//  config file doesn't matter.  just a placeholder 
//  Finally register the composite component. 
//  Check that logger survived deserialization 
//  Expanding the ASM specific instructions can introduce F_INSERT frames, even if the method   does not currently have any frame. These inserted frames must be computed by simulating the   effect of the bytecode instructions, one by one, starting from the implicit first frame.   For this, MethodWriter needs to know maxLocals before the first instruction is visited. To   ensure this, we visit the implicit first frame here (passing only maxLocals - the rest is   computed in MethodWriter). 
//  SPR-15785 
//  Rely on singleton semantics provided by the factory. 
//  SPR-12778 
//  frameDecoder does not apply to connectionSetupPayload   so retain here since handle expects it.. 
//  elvis has left the building 
//  WebSphere 
//  unadvised calls to static targets that cannot return this). 
//  The children might be further lists if they are not constants. In this   situation do not call back into generateCode() because it will register another clinit adder.   Instead, directly build the list here: 
//  dynamic resizes) and fill it with the ClassFile content. 
//  static @Bean methods have no constraints to validate -> return immediately 
//  Expose RequestContext instance for Spring macros. 
//  SPR-13257 
//  Signature attributes always use 8 bytes. 
//  Maintainer's note: changes made here should also be made in   AnnotationAsyncExecutionAspect#getExecutorQualifier 
//  The size, in bytes, to use when allocating the next byte[] 
//  need to touch the MBean proxy 
//  Nested transaction through nested begin and commit/rollback calls.   Usually only for JTA: Spring synchronization might get activated here   in case of a pre-existing JTA transaction. 
//  Ignore exception on close... 
//  Inequality between standard and synthesized annotations 
//  In case the map key is unqualified, we want it evaluated against the root object   so temporarily push that on whilst evaluating the key 
//  We're all set... find the unbound parameter, and bind it. 
// ctx.setConfigLocation("programmatic.xml"); // nothing set programmatically 
//  All keys should be strings 
//  Parse the argument types, one at a each loop iteration. 
//  Redeclared for visibility within simp.stomp 
//  Log message stuff 
//  Only pass in the NoLocal flag in case of a Topic (pub-sub mode):   Some JMS providers, such as WebSphere MQ 6.0, throw IllegalStateException   in case of the NoLocal flag being specified for a Queue. 
//  org.springframework.test.context.support --> 5 levels up to the root of the classpath 
//  class field 
//  Wildcard with suffix, e.g. application/*+xml 
//  If we haven't closed the Connection in beforeCompletion,   close it now. The holder might have been used for other   cleanup in the meantime, for example by a Hibernate Session. 
//  Bind the entity manager holder to the thread. 
/* 	 * This method never fails, allowing to try other possible ways to use an	 * server-agnostic weaver. This non-failure logic is required since	 * determining a load-time weaver based on the ClassLoader name alone may	 * legitimately fail due to other mismatches.	  */
//  2. Resolve unencoded resource 
//  NOTE: @ModelAttribute will NOT be found on the abstract superclass if   @RequestMapping is declared locally. Thus, we have to redeclare   @ModelAttribute locally as well. 
//  Cache region is not defined. Should create one with default properties. 
//  Unknown Number subtypes -> best guess is double multiplication 
//  Access float array 
//  New script content... 
//  Ignore, as does IndexedPropertyDescriptor#getPropertyType 
//  Let's create the outer bean named "innerBean",   to check whether it doesn't create any conflicts   with the actual inner beans named "innerBean". 
//  Can do custom FieldError registration with invalid value from ConstraintViolation,   as necessary for Hibernate Validator compatibility (non-indexed set path in field) 
//  Compute the length and the hash code of the bootstrap method. 
//  - The offset of the Module attribute, or 0. 
//  Note that ints is of type Collection<Integer>, but the collection returned   by createApproximateCollection() is of type Collection<Color>. Thus, 42   cannot be cast to a Color. 
//  Shouldn't proxy framework interfaces 
//  Not an int literal but an opminus with one operand:   expression = parser.parseExpression("-1");   assertCanCompile(expression);   assertEquals(-1, expression.getValue()); 
//  look for direct name match 
//  fallback to resource.readableChannel(), below 
//  non-standard write method 
// SPR-12372 & SPR-13455 
//  Avoid multiple adjacent whitespace characters 
//  Neither BindingResult nor target object available. 
//  Bean property binding and validation;   skipped in case of binding failure on construction. 
//  SPR-11443 
//  Implicitly invoked by set/setException: store current thread for   determining whether the given result has actually triggered completion   (since FutureTask.set/setException unfortunately don't expose that) 
//  No args -> delegate to standard getBean method. 
//  try resolving as relative path 
//  Fallback: setString or setNString binding 
//  reply 
//  gh-23175 
//  Required so that references (up container hierarchies) are correctly resolved. 
//  <-- no options whatsoever 
//  if it wasn't before, it is now 
//  SPR-16720 
//  Shared resource cache -> reset to local cache. 
// MapPersistenceExceptionTranslator mpet = new MapPersistenceExceptionTranslator(); 
//  Simple conversion: int to string 
//  SPR-9194 
//  New Session to be bound for the current method's scope... 
//  Shortcut if there is no work to do 
/* 	 * See SPR-6876	  */
//  given 
//  New in Jackson 2.7 
//  otherwise ignore beans where the class is not resolvable 
//  SPR-15524 
//  First invoke the user-specific ExceptionListener, if any. 
//  right is a float 
//  read method 
//  Subscriber methods and async I/O notification methods... 
//  RECEIPT frame 
//  If dstType is the NULL type, merge(srcType, dstType) = srcType, or TOP if srcType is not a   an array type or a reference type. 
//  Create Connection through invoking WSDataSource.getConnection(JDBCConnectionSpec) 
//  Type conversion from "Patty" to TestBean via TestBean(String) constructor 
//  In case of FactoryBean, return singleton status of created object. 
//  first call: cache miss 
//  Until this is fixed https://github.com/synchronoss/nio-multipart/issues/10 
//  ensure some send time elapses 
//  If not resolvable above and the referenced factory bean doesn't exist yet,   exit here - we don't want to force the creation of another bean just to 
//  the concrete type may not be a Boolean - can be String 
//  Supported methods and required session 
//  Deprecated HTTP 1.0 cache behavior, as in previous Spring versions 
//  We use {@link Label#getCanonicalInstance} to store the state of a basic block in only   one place, but this does not work for labels which have not been visited yet.   Therefore, when we detect here two labels having the same bytecode offset, we need to 
//  isEmpty() and size() 
//  Non existent field (or property): 
//  exception parameter cannot be cloned 
//  NOTE: the two DataSource instances are NOT the same! 
//  Lenient handling (e.g. error dispatch): ignore locale/timezone parse exceptions 
//  SPR-12771 
//  Runnable decorator to user-level FutureTask, if different 
//  Should never happen... would have thrown an exception before   and as a consequence led to a rollback, not to a commit call.   In any case, the transaction is already fully cleaned up. 
//  looking for the first extension 
//  First, register the BeanPostProcessors that implement PriorityOrdered. 
//  Check up until the varargs argument: 
//  length of a populated token stream 
//  Default value: null. 
//  Second try is the caching operation on the target class. 
//  constructors 
//  The target does not implement the equals(Object) method itself. 
//  next token is not "(" either, can't be a pc... 
//  Demonstrates we cant inject that event because the listener has a wildcard 
//  FunctionReference 
//  No cache in order to check every time if IFrame are authorized 
//  URL decode after request mapping, not before. 
//  Different parts of ternary expression are null 
//  Deep copy with overridden values. 
//  from: src/test/webapp/resources/Spring.js 
//  SPR-9062 
//  empty list '{}' 
//  getParentLogger() is required for JDBC 4.1 compatibility 
//  The operand is going to be read and then assigned to, we don't want to evaluate it twice. 
//  Let subclasses do some final clean-up if they wish... 
//  enforcing its full initialization... 
//  Check it didn't affect the other thread's copy 
//  functionOrVar   : (POUND ID LPAREN) => function   | var     function : POUND id=ID methodArgs -> ^(FUNCTIONREF[$id] methodArgs); 
//  against the Lockable interface introduced by the specific advisor 
//  variables and functions 
//  Fall back on default 
//  The present implementation always returns 1, making Quartz   always schedule any tasks that it feels like scheduling.   This could be made smarter for specific TaskExecutors,   for example calling {@code getMaximumPoolSize() - getActiveCount()}   on a {@code java.util.concurrent.ThreadPoolExecutor}. 
//  Look for matching annotation on the target class 
//  proceed with field lookup 
//  Can also obtain the mixin (this) this way  Lockable mixin = (Lockable) jp.getThis(); 
//  There is an initializer 
//  When resolving against a temporary class loader, exit early in order   to avoid storing the resolved Class in the bean definition. 
//  Parse and store the target_path structure. 
//  Lazily initialize the delegate if necessary. 
//  Client or server: single Resource... 
//  Only prefix the path delimiter if something exists before it 
//  -----------------------------------------------------------------------------------------------   Frame merging methods, used in the second step of the stack map frame computation algorithm   ----------------------------------------------------------------------------------------------- 
//  Remove whitespace from handler bean name. 
//  check position for final 'false' 
//  null means any registered server, but "" specifically means the platform server 
//  Delegate to JpaDialect for actual transaction begin. 
//  constructorArgs 
//  ASM API versions. 
//  SqlParameterValue overrides declared parameter meta-data, in particular for   independence from the declared parameter position in case of named parameters. 
//  OpDec 
//  Prefer remote registries due to cross-server SessionLookup 
//  -----------------------------------------------------------------------------------------------   Methods to handle uninitialized types   ----------------------------------------------------------------------------------------------- 
//  Check its unchanged 
//  interleaved writing 
//  Check the return value 
//  Use the Pointcuts matches method 
//  Stopping jetty will undeploy the servlet 
//  basic 
//  Name of table for this context 
//  Else only apply if there are no explicit handler mappings. 
//  Optimization to avoid creating ClassReader for super class 
//  just invoke any method to see if advice fired 
//  Check parent MessageSource, returning null if not found there.   Covers custom MessageSource impls and DelegatingMessageSource. 
//  Fetch prototype target bean... 
//  should throw, bad (non-interface-type) serviceLocator interface supplied 
//  Only accept fallback match if @Qualifier annotation has a value...   Otherwise it is just a marker for a custom qualifier annotation. 
//  Not allowed to access non-public methods...   Fallback: check locally declared public methods only. 
//  Strip the first key. 
//  Sanity check: check that argument conversion doesn't work with plain MethodInvoker 
//  Never use ASM for core java types 
//  The JDK does not contain default editors for number wrapper types! 
//  The wac environment's #initPropertySources will be called in any case when the context   is refreshed; do it eagerly here to ensure servlet property sources are in place for 
//  Now revert state of foh and try compiling it: 
//  non-static method, reference type return 
//  No choice but to go through all mappings... 
//  Extract column value from JDBC ResultSet. 
//  The final parameter may or may not need packaging into an array, or nothing may   have been passed to satisfy the varargs and so something needs to be built. 
//  caching disabled 
//  Three strings, optimal bytecode would only use one StringBuilder 
//  GenericTypeAwarePropertyDescriptor leniently resolves a set* write method   against a declared read method, so we prefer read method descriptors here. 
//  must not throw a NullPointerException 
//  Expose current TransactionStatus, preserving any existing TransactionStatus   for restoration after this transaction is complete. 
//  Invoke with a request parameter (RedirectView return value) 
// ---------------------------------------------------------------------   Copy methods for java.io.InputStream / java.io.OutputStream  --------------------------------------------------------------------- 
//  Must be first 
//  will return true if we're not proxying interfaces 
//  from DefaultPropertiesFileDetectionTestPropertySourceTests.properties 
//  - The offset of the RuntimeVisibleParameterAnnotations attribute, or 0. 
//  testing on Unix 
//  For parameter source lookups we need to provide case-insensitive lookup support   since the database meta-data is not necessarily providing case sensitive parameter names. 
//  Expose all standard FreeMarker hash models. 
//  Add default constructor to list of optional constructors, as fallback. 
//  The dummy business method will throw an exception if the   afterPropertiesSet() callback wasn't invoked 
//  optional .SecondMsg blah = 2; 
//  Unregister beans already registered by this exporter. 
//  If we get here, we know we have an AspectJ method.   Check that it's an AspectJ-annotated class 
//  stack: right/left   stack: right/left/left 
//  projection would be {false,true,false}   projection would be {false,true,false} 
//  Creating a new object instance in the getInterceptors() method   isn't a problem as we normally cache created chains. 
//  Deliver toString without touching a target EntityManager. 
//  Try to get charset value anyway 
//  Transacted session created by this container -> rollback. 
//  False positive, since an exception will be thrown once the session is   finally flushed (i.e., in production code) 
//  no real advice, but just reflective invocation of the target. 
//  This case should happen only once, for the visitLabel call in the constructor. Indeed, if   compute is equal to COMPUTE_MAX_STACK_AND_LOCAL_FROM_FRAMES, currentBasicBlock stays   unchanged. 
//  OpOr 
//  SPR-13876 
//  Handle minus sign, if present. 
//  Cache factory for both Locale and ResourceBundle list. 
//  Check that default behaviour is overridden 
//  no op 
// logicalOrExpression : logicalAndExpression (OR^ logicalAndExpression)*; 
//  Unresolved type variable, potentially nested -> never insist on exact match 
//  To be picked up by RedirectView 
//  Indicate that we can't obtain a transactional EntityManager. 
//  It's a prototype -> create a new instance. 
//  what happens on (Integer,String) passed to (Integer[]) ? 
//  increment/decrement operators - SPR-9751 
//  but a newly retrieved bean should have the default name 
//  AbstractBeanDefinition.prepareMethodOverrides(): 
//  ignore if just being asked for plain Validator 
//  The JVM opcode values (with the MethodVisitor method name used to visit them in comment, and   where '-' means 'same method name as on the previous line').   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-6.html. 
//  Actually destroy the bean now... 
//  SPR-15041 
//  Should NOT roll back on ServletException 
//  Allow for ViewResolver chaining... 
//  Do not consider an interface or an annotation... 
//  Look up by type and qualifier from @Transactional 
//  RxJava2 
//  This is the application-specific one 
//  method and class level -> method value, even if empty, overrides 
//  the biggest public class in the JDK (>60k) 
//  Store the offset of 'signature_index', and the value of 'index' and 'start_pc'. 
//  SPR-10859 
//  by the Spring AOP infrastructure after the first evaluation. 
//  variable access returning array 
//  JSR-107 support should create an exception cache resolver with the cache manager   and there is no way to set that exception cache resolver from the namespace 
//  @@protoc_insertion_point(builder_scope:Msg) 
//  Score related 
//  should handle Regular (exact) and VIP (closest match) 
//  failure scenario 
//  found character sequence ending comment or quote 
//  Create an array for the varargs arguments 
//  Bind the session holder to the thread. 
//  setAllSharedVariables methods. 
//  RxJava1 
//  Wrapped in Hibernate 5.2, with the constraint violation as cause 
//  should succeed 
//  gh-23179 
//  Annotation.equals is reflective and pretty slow, so let's check identity and proxy type first. 
//  Don't consume InputStream... 
//  Otherwise, just ignore it and continue... 
//  use of primitive as type for instanceof check - compilable 
//  Using the following method rather than direct reflection, we   get correct handling of InvocationTargetException 
//  Unexpectedly some invokers are still active after the receive timeout period   -> interrupt remaining receive attempts since we'd reject the messages anyway 
//  e.g. JORAM 
//  Now msg better be as expected even with different args 
//  SPR-15176 
//  no conversion required 
//  or suppress the interface on the proxy factory 
//  Sort lazily here, not in registerSynchronization. 
//  Don't try autowiring by type for type Object: never makes sense,   even if it technically is a unsatisfied, non-simple property. 
//  Can't assert it's equal to 4 as the pointcut may be optimized and only invoked once 
//  For now I am making #this not assignable 
//  Fall back on default, but only if the qualifier is present 
//  Create field error with code "required". 
//  Hibernate 5.1/5.2: manually enforce connection release mode AFTER_STATEMENT (the JTA default) 
//  SPR-12287 
//  private property will be accessed through getter() 
//  When we invoke A, it's NopInterceptor will have count == 1 
//  1. Resolve plain resource 
//  SPR-13747 
//  ----------------------------------------------------------------------------------------------   Methods to parse modules, fields and methods   ---------------------------------------------------------------------------------------------- 
//  Simple key/value pairs 
//  Register ScopeMetadataResolver if class name provided. 
//  was **/myLang 
//  Name of catalog for call 
//  Recursively process any member (nested) classes first 
//  Set the system property to something other than VALUE as a sanity   check. 
// ---------------------------------------------------------------------   Handling of current savepoint state  --------------------------------------------------------------------- 
//  no more ${expressions} found in string, add rest as static text 
//  the default: queue 
//  SPR-12286 
//  Add handlerBlock as a successor of all the basic blocks in the exception handler range. 
//  Returns the type_path_kind of the path element of the given index. 
//  trailing slash is optional   trailing slash is optional 
//  No bean definition found in this factory -> delegate to parent. 
//  List of SqlParameter objects to be used in call execution 
//  not encoding or the value contains no scheme - fallback to default 
//  SPR-13615 
//  implementing FactoryBean 
//  Ignore attribute change... 
//  we really want to return the proxy. 
//  Initialize RouteMatcher before parent initializes handler mappings 
//  URL paths found: Let's consider it a handler. 
//  Spring's CustomBooleanEditor accepts more flag values than the JDK's default editor. 
//  No other properties specified: check bean name. 
//  If there was (or perhaps still is) a transaction... 
//  Adding a 2nd cookie header should result in 2 cookies. 
//  An unresolvable bean type, probably from a lazy bean - let's ignore it. 
//  modified the original metadata, e.g. replacing placeholders in values... 
//  no ConcurrentModificationException 
//  Only paths on the default file system can be converted to a File:   Do exception translation for cases where conversion is not possible. 
//  Finally, re-register all internal BeanPostProcessors. 
//  Explicitly check implemented interfaces for setter/getter methods as well, 
//  Reset transaction isolation to previous value, if changed for the transaction. 
//  Reset 'active' flag. 
//  6 header bytes and 2 bytes for number_of_entries. 
//  Disallowing access to System#getenv means that our 
//  not compatible number types 
// ---------------------------------------------------------------------   Template methods  --------------------------------------------------------------------- 
//  No singleton instance found -> check bean definition. 
//  If already confirmed it cannot be a match, then return 
//  set the target 
//  Build Advisors for all AspectJ aspects in the bean factory. 
//  #1 and #3 have equivalent hash codes even though equals() returns false. 
//  Instantiate all remaining (non-lazy-init) singletons. 
//  JTA 1.1 TransactionSynchronizationRegistry available - use it. 
//  -----------------------------------------------------------------------------------------------   Methods to manage line numbers   ----------------------------------------------------------------------------------------------- 
//  Allow metaclass and other customization. 
//  SPR-16376 
//  Execute scripts directly against the DataSource 
//  If an editor was found, edit the value. 
//  Not managed (destroy has no impact).. 
//  Use (byte[] bytes) for Eclipse 
//  Gets additional call(s) from TransactionControl 
//  (which causes the '::' prefix in test output) 
//  Physically remove and close leaf nodes first (i.e., on the way back up the 
//  Test classic error code translation. We should move there next if the exception we pass in is not one 
//  Retrieval of bean instances 
//  interesting! standard Inspector picks up non-void return types on indexed write methods by default 
//  Support methods for use in "InvocableHandlerMethod" sub-class variants.. 
//  far from ideal 
//  Publisher<T> methods (we're the Publisher to the writeSubscriber).. 
//  Lifecycle 
//  Match object created by FactoryBean. 
//  non-existent scope 
//  Init RedirectView with WebAppCxt 
//  SPR-16246 
//  Should never be invoked as isRuntime returns false. 
//  Distinguish from default ListableBeanFactory behavior 
//  SPR-12283 
//  quote the returned message (this is the change)... 
//  Update the absolute maximum stack size of the method. 
//  ensure that override order is correct and that it is a singleton 
//  Transparently remove ResourceHolder that was marked as void... 
//  Success and error responses may use different content types 
//  Only set parent context as parent MessageSource if no parent MessageSource   registered already. 
/* 	 * Return if the given method name matches the mapped name.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,	 * as well as direct equality. Can be overridden in subclasses.	 * @param methodName the method name of the class	 * @param mappedName the name in the descriptor	 * @return if the names match	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
//  Mirrors AbstractHandlerExceptionResolver in spring-webmvc... 
//  Assume sync execution (e.g. encoding with Flux.just).. 
//  SPR-14949 
//  The transaction manager will flag an error if an incompatible tx already exists. 
//  should be dynamic proxy, implementing both interfaces 
//  We might still need view name translation for a plain error model... 
//  Replace GOTO with GOTO_W and JSR with JSR_W. 
//  isAnnotationInherited() does not currently traverse interface hierarchies. 
//  Note: The forwarded resource is supposed to determine the content type itself. 
//  Create EntityManager based on the info's vendor-specific type   (which might be more specific than the field's type). 
//  Avoid TypeDescriptor initialization if not necessary 
//  We know that we are optimizing so we can use the FixedStaticChainInterceptors. 
//  Now, invoke the postProcessBeanFactory callback of all processors handled so far. 
//  Must not be able to set enter message with return value placeholder 
//  Note that ints is of type Collection<Integer>, but the collection returned   by createCollection() is of type Collection<Color>. Thus, 42 cannot be cast   to a Color. 
//  Load Hibernate configuration from given location. 
//  Note: the following 'multi-line' layout is for enhanced code readability.                 
//  Use autowire-capable factory in order to support extended qualifier matching   (only exposed on the internal BeanFactory, not on the ApplicationContext). 
//  *sigh* complicated   Basically.. we have to have all parameters match up until the varargs one, then the rest of what is   being provided should be   the same type whilst the final argument to the method must be an array of that (oh, how easy...not) -   or the final parameter   we are supplied does match exactly (it is an array already). 
//  InlineMap 
//  We could not find it - got to look it up. 
//  Update the Http client so that it returns an updated  config 
//  no ApplicationContextInitializers have been declared -> nothing to do 
//  Save previous nestedPath value, build and expose current nestedPath value.   Use request scope to expose nestedPath to included pages too. 
//  Now repeat with GET 
//  However, if it is not compliant, do remove the improper trailing slash! 
//  --- 4xx Client Error --- 
//  multi annotations 
//  No transactional event execution at all 
//  Check whether aspect is enabled (to cope with cases where the AJ is pulled in automatically) 
//  This isn't serializable 
//  August: 31 days and not a daylight saving boundary 
//  Deserialize superclass fields. 
//  Evaluate it using a 'standard' context 
//  + 1 for states call! 
//  Placeholders not resolvable or resource not found when trying to open it 
//  Since it is impossible to determine the actual type of a type   parameter (!), we resort to requiring the caller to provide the   actual type as parameter, too.   Not set in a constructor to enable easy CGLIB-proxying (passing   constructor arguments to Spring AOP proxies is quite cumbersome). 
//  And then mock the file changing; i.e. the File says it has been modified 
//  but findAnnotationDeclaringClassForTypes() should still find it on classes. 
//  Track write listener calls from here on.. 
//  JMX-kind 
//  NameReverter saved it back 
//  No caching required, only call the underlying method 
//  skip - already processed in first phase above 
//  Convert elements to target type, if determined. 
//  multipart file field 
//  SPR-11308 
//  */* < audio/* 
//  Web and Scopes 
//  Knock out dynamic part 
//  Now add a new translator and verify it wins 
//  Unknown Number subtypes -> best guess is double division 
//  HTTP 1.1 header 
//  Custom methods 
//  parseCheck("{1,2,3,4,5,6,7,8,9,10}.!{#isEven()}");   } 
//  private class Servlet3SecurityContextHolderAwareRequestWrapper extends SecurityContextHolderAwareRequestWrapper 
//  Create and visit the first (implicit) frame. 
//  only supported as an output format 
//  Match raw bean instance (might be raw FactoryBean). 
//  Get back arrays of single elements 
//  ----------------------------------------------------------------------------------------------   Methods to parse annotations, type annotations and parameter annotations   ---------------------------------------------------------------------------------------------- 
//  Throw fallback producer exception since original was probably NoSuchBeanDefinitionException.
//  escaped ":" should be skipped 
//  No proxy needed. 
//  New in Spring 3.0: resolve placeholders in embedded values such as annotation attributes. 
//  Process captures   SPR-8455 
//  first code valid 
//  Same object is equal 
//  Used by DefaultClientResponseBuilder 
//  Servlet* PropertySources have precedence over System* PropertySources 
//  write method 
//  Massage return value if necessary. 
//  Full qualifier matching supported. 
//  Main assignability check about to follow 
//  e.g. Jackson's JsonMappingException, indicating an incomplete payload 
//  Could still be a custom variant of a convention-compatible ClassLoader 
//  Original handler must have been invoked as well... 
//  Could not possibly contain a currency code ->   try with locale and likely let it fail on parse. 
//  Also expose methods from java.lang.Class itself 
// -------------------------------------------------------------------------   Management of paused tasks  ------------------------------------------------------------------------- 
//  Apply transaction name (if any) to WebLogic transaction. 
//  TODO: Object.class if unresolvable
//  nested map 
//   The constructor arguments are name, birthday, and nationaltiy. 
//  Override global attribute with local attribute. 
//  No shutdown hook registered yet. 
//  gh-22576 
//  Now... we have the final argument in the method we are checking as a match and we have 0   or more other arguments left to pass to it. 
//  Checking that the "test class" name ends with "*Tests" ensures that an actual   test class is passed to this method as opposed to a "*Config" class which would   imply that we likely have been passed the 'declaringClass' instead of the   'rootDeclaringClass'. 
//  lookup foo on the root, then bar on that, then use that as the key into 
//  Determine bean scope. 
//  Non-null value but no obvious equality with the candidate value: 
//  @Autowired 
//  replace 'local' with new property source 
//  result == "2" 
//  non-static method 
//  Check to see if CachedIntrospectionResults is delegating to ExtendedBeanInfo as expected 
//  May need to resolve contained runtime references. 
//  Does the actual (non-CGLIB) superclass implement BeanFactoryAware?   If so, call its setBeanFactory() method. If not, just exit. 
//  If the types are equal, merge(sourceType, dstType) = dstType, so there is no change. 
//  Check property-specific editor first. 
//  Remove since we will be re-inserting the resolved attribute value 
//  UserTransaction has already been obtained from JNDI, so the   TransactionSynchronizationRegistry probably sits there as well. 
//  Adapt default cache level. 
//  Clear interruptions to ensure that the consumer closes successfully...   (working around misbehaving JMS providers such as ActiveMQ) 
//  Evaluate the specified MessageSourceResolvable, if any. 
//  We couldn't find the parameter value... 
//  Ignoring failure due to missing result, consider the cache put has to proceed 
//  non-abstract bean should work, even if it serves as parent 
//  See java.beans.PropertyDescriptor#PropertyDescriptor(PropertyDescriptor) 
//  Check fixed rate 
//  ConstantValue attributes always use 8 bytes. 
//  May happen e.g. with Groovy-generated methods 
//  Check transport connection first... 
//  Not allowed to change the transaction settings of the JDBC Connection. 
//  Autodetect any beans that are already MBeans. 
//  SPR-15795 
//  hotel.getId() == 42   hotel.getName().equals("Holiday Inn") 
//  public class SecurityContextHolderAwareRequestWrapper extends HttpServletRequestWrapper 
//  Test on full templates 
//  static getter 
//  We already validated the parameter above... 
// ---------------------------------------------------------------------------------------   Convenience methods for sending messages  --------------------------------------------------------------------------------------- 
//  left cannot be null at this point 
//  If the WebApplicationContext has no parent or the parent is not a WebApplicationContext,   set the current context as the root WebApplicationContext: 
//  Should wipe the cache. 
//  SPR-17094 
//  Else use the AOP_PROXY. 
//  No other order guarantees for methods with unresolvable dependencies (and methods that depend on them),   Required dependencies will be created via default constructor. 
//  any client frame other than CONNECT 
//  Invert the order if it is a reverse sort. 
//  Look for arg-type match elements. 
//  Skip the ClassFile's attributes_count field. 
//  parseCheck("{'a','b',null,'d',null}.nonNull()");   }   
//  Map entry iteration is less expensive to initialize than forEach with lambdas 
//  Iterate over the declared RowMappers and register the corresponding SqlParameter 
//  assertNull(bf.getBean(AssemblerInjection.class).assembler1);  TODO: accidental match   assertNull(bf.getBean(AssemblerInjection.class).assembler2); 
//  e.g. on Postgres: getObject returns a PGObject but we need a String 
//  Else rethrow to conform to the contracts of TestExecutionExceptionHandler and LifecycleMethodExecutionExceptionHandler 
//  Iterate over a copy to allow for init methods which in turn register new bean definitions.   While this may not be part of the regular factory bootstrap, it does otherwise work fine. 
//  Register default template loaders. 
//  getAnnotation() does not search on interfaces 
//  evals to 2147483647 
//  Unknown exception, typically a wrapper with a common MVC exception as cause   (since @ExceptionHandler type declarations also match first-level causes):   We only deal with top-level MVC exceptions here, so let's rethrow the given   exception for further processing through the HandlerExceptionResolver chain.
//  SPR-12634 
//  SPR-12501 
//  printAst(expr.getAST(),0); 
// ---------------------------------------------------------------------   BodyTag implementation  --------------------------------------------------------------------- 
//  Test fallback. We assume that no database will ever return this error code,   but 07xxx will be bad grammar picked up by the fallback SQLState translator 
//  @@protoc_insertion_point(outer_class_scope) 
//  SPR-13135 
//  Fall back to getObject without type specification, again 
//  SPR-9807 
//  RFC 6265 
//  Allow a subclass to provide custom initialization of the reader, 
//  They are reusable 
//  gh-22447 
//  We don't need an IntroductionAdvisor for this kind of introduction:   It's fully self-describing. 
//  '$' in the class name but no inner class -   assuming it's a special subclass (e.g. by OpenJPA) 
//  The following can also be used to directly access the   environment instead of relying on placeholder replacement.   @Value("#{ environment['enigma'] }") 
//  SPR-10105 
//  Pointing to existing alias - just remove placeholder 
//  No client or server specific multipart writers currently.. 
// consume OR 
//  assert: SpelCompiler.boxingCompatible(leftDesc, rightDesc) 
//  the default: same value as pubSubDomain 
//  nop 
//  Parse exclude and include filter elements. 
//  Consider changing this if live change of the factory is required... 
//  Only really happens on JBoss 4.2 in case of an early timeout...   Explicit rollback call necessary to clean up the transaction.   IllegalStateException expected on JBoss; call still necessary. 
// -------------------------------------------------------------------------   Implementation of the JCA WorkManager interface  ------------------------------------------------------------------------- 
// ---------------------------------------------------------------------   Implementation of BeanDefinitionRegistry  --------------------------------------------------------------------- 
//  SPR-16731 
//  we may have found some var names that were bound in previous primitive args binding step,   filter them out... 
//  Silently skip non-existing directories. 
//  Create and/or resize the output local variables array if necessary. 
//  User sessions from "this" registry only (i.e. one server) 
//  -----------------------------------------------------------------------------------------------   Default method to compute common super classes when computing stack map frames   ----------------------------------------------------------------------------------------------- 
//  Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear. 
//  ArrayList containing List<String> to List<Integer> 
//  Delete first and last characters of value: { and } 
//  "[[I" or "[[Ljava.lang.String;" style arrays 
//  should re-propagate updated attribute 
//  Fields for the control flow and data flow graph analysis algorithms (used to compute the   maximum stack size or the stack map frames). A control flow graph contains one node per "basic   block", and one edge per "jump" from one basic block to another. Each node (i.e., each basic   block) is represented with the Label object that corresponds to the first instruction of this   basic block. Each node also stores the list of its successors in the graph, as a linked list of   Edge objects.     The control flow analysis algorithms used to compute the maximum stack size or the stack map   frames are similar and use two steps. The first step, during the visit of each instruction,   builds information about the state of the local variables and the operand stack at the end of   each basic block, called the "output frame", <i>relatively</i> to the frame state at the   beginning of the basic block, which is called the "input frame", and which is <i>unknown</i>   during this step. The second step, in {@link MethodWriter#computeAllFrames} and {@link   MethodWriter#computeMaxStackAndLocal}, is a fix point algorithm   that computes information about the input frame of each basic block, from the input state of   the first basic block (known from the method signature), and by the using the previously   computed relative output frames.     The algorithm used to compute the maximum stack size only computes the relative output and   absolute input stack heights, while the algorithm used to compute stack map frames computes   relative output frames and absolute input frames.
//  Note: JBoss throws plain RuntimeException with RollbackException as cause. 
//  SPR-16863 
//  Try variable resolution against target type 
//  no class-level annotation 
//  Compute the concrete types of the stack operands at the end of the basic block corresponding   to this frame, by resolving its abstract output types, and merge these concrete types with 
//  Subclass of RemoteException 
//  May return early, but at least we already cancelled all known Timers. 
//  check reinitialization 
//  The following call to enigma() literally invokes the local   enigma() method, not a CGLIB proxied version, since these methods   are essentially factory bean methods. 
//  Message converters 
//  SPR-12226 and SPR-12660 
//  No defineClass variant available at all?
//  Get directly from Target 
//  must not kick in for map keys but rather only for map values. 
//  Complain louder if it exists but is no directory. 
//  SPR-2158 
//  OpLT 
// registrar.setMappedObjectNames(new Object[] {objectName, objectName2}); 
//  Check if we have a cached item matching the conditions 
//  SPR-13139 
//  Visit the InnerClasses attribute. 
//  IMPORTANT! Here we assume that the frames are ordered, as in the StackMapTable attribute,   although this is not guaranteed by the attribute format. This allows an incremental   extraction of the labels corresponding to this attribute (see the comment above for the   StackMapTable attribute).
//  some custom static bloc or <clinit> 
//  Private methods for use in State... 
//  the following assertions fail only during coverage runs   assertEquals(1, pu2.getJarFileUrls().size());   assertEquals(new ClassPathResource("order-supplemental.jar").getURL(), pu2.getJarFileUrls().get(0)); 
//  Parse the rest of the type_annotation structure, starting with the target_path structure 
//  OperatorNot 
//  Subscriber<Void> implementation 
//  OK, so no JTA 1.1 TransactionSynchronizationRegistry is available... 
//  Should wipe the cache 
//  Take getMessageConverters() List as-is when passed in here 
//  SPR-16868 
//  null is not an instanceof anything 
/*  this test case consists entirely of tests loaded as a suite.  */
//  does not throw an exception 
//  Locking should be independent; nop is shared 
//  Parse and create the argument types, one at each loop iteration. 
// 	    | constructor 
//  now unwrap scoped proxy 
//  if the introduced method throws an exception. 
//  SPR-12894 
//  ScopedProxyFactoryBean's "proxyTargetClass" default is TRUE, so we don't need to set it explicitly here. 
//  SPR-16734 
//  SPR-16601 
//  we DON'T want the default SimpleMessageConversion happening... 
//  Determine default... 
//  Indicates that the chosen instantiation strategy does not work on the given JVM.   Typically a failure to initialize the default SunReflectionFactoryInstantiator.   Let's assume that any subsequent attempts to use Objenesis will fail as well... 
//  from ApplicationListenerDetector (singleton beans and inner beans). 
//  Create 100 sessions 
//  Create the MethodInvocation clone. 
//  java.beans.Introspector returns the "wrong" declaring class for overridden read   methods, which in turn violates expectations in {@link ExtendedBeanInfo} regarding   method equality. Spring's {@link ClassUtils#getMostSpecificMethod(Method, Class)}   helps out here, and is now put into use in ExtendedBeanInfo as well.
//  We need to get a reference to the client-side targetsource 
//  Registry binding failed: let's unexport the RMI object as well. 
//  Load bean definitions from resource bundle. 
//  If dstType is any other type, merge(srcType, dstType) = TOP whatever srcType. 
//  Only accept unnamed parameters for index matches. 
//  Update the successor blocks of basicBlock in the control flow graph. 
//  Remaining transaction timeout overrides specified value. 
//  strange - FSXAC strips leading '/' unless prefixed with 'file:' 
//  marker object for classes that do not have any debug info 
//  Otherwise, assume that externally provided factory has been initialized with appropriate settings 
//  SPR-8867 
/*  Do Nothing  */
//  - The string corresponding to the ModuleMainClass attribute, or null. 
//  SPR-16604 
//  unary expressions 
//  primary differentiation 
//  When the condition is an empty string 
//  But the event was not actually published since the ApplicationContext 
//  Marshalling 
//  Ignore, after send failure 
//  For testing we want more control of the hash 
//  instantiation is sufficient to trigger failure if this is going to fail... 
//  properly create the remaining two instances 
//  Allow post-processors to modify the merged bean definition. 
//  Delegate the current ResourceLoader to it if possible 
//  beans are registered at this point - just grab them from the server 
//  Call coming in through InfrastructureProxy interface... 
//  We may need additional runtime (argument) check. 
//  Compare the values. 
//  Check that listInstance is not considered a bean of type FactoryMethods. 
//  typical classes). 
//  Check whether we got an absolute file path without "file:" prefix.   For backwards compatibility, we'll consider those as straight file path. 
//  Visit the SourceFile and SourceDebugExtenstion attributes. 
//  SPR-16869 
//  Invocation on EntityManager interface coming in... 
//  no occurrence -> can return input as-is 
//  SPR-9098 
//  We need to visit all indexed annotations. 
//  SPR-11560 
//  prove that the processor chokes on the invalid key 
//  Try field lookup as fallback: for JDK 1.5 enum or custom enum   with values defined as static fields. Resulting value still needs   to be checked, hence we don't return it right away. 
//  Case of an element_value with an annotation_value field.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1. 
//  Let it throw raw if the type of the exception is on the throws clause of the method. 
//  check position for OperatorAnd 
//  1. Set properties 
//  Visit the class declaration. The minor_version and major_version fields start 6 bytes before 
//  TODO SPR-6310: qualify relative path locations as done in AbstractContextLoader.modifyLocations
//  Passing (int,String) on call to foo(Integer,String) requires boxing conversion of argument zero 
//  Using nullSafeEquals for proper array equals comparisons 
//  In Gson, toJson with a type argument will exclusively use that given type,   ignoring the actual type of the object... which might be more specific,   e.g. a subclass of the specified type which includes additional fields.   As a consequence, we're only passing in parameterized type declarations   which might contain extra generics that the object instance doesn't retain. 
//  Don't try again 
//  SPR-13883 
//  User exception was the root cause - exit now 
//  Retrieve existing registry. 
//  jackson-datatype-joda not available 
//  avoiding inserting checkcast because first part of expression returns a Map 
//  SPR-11692 
//  assume an index otherwise 
//  "offset_delta + 1" rule in all cases. 
//  previous and current block references and list of successors. 
//  Fall back... 
//  ignore - we'll try ValidatorFactory unwrapping next 
//  Process default methods on interfaces 
//  This should work as SerializablePerson is equal 
//  Fall through to loadable check below 
//  Must not be able to set empty exception message 
//  ConstructorReference 
//  set because of @SesstionAttributes 
//  const_value_index, CONSTANT_Utf8 
//  Create a new collection or map ready for the indexer 
//  TODO following lines are a workaround for Hibernate bug   If Hibernate throws an exception due to flush(),   it actually HAS flushed, meaning that the database   was updated outside the transaction
/* 	 * See SPR-8543	  */
//  register the pointcut 
//  and fixedCallbacks into the callbacks array. 
//  This suffix does not close the initial prefix but rather   just one that occurred within the property name. 
//  Consider any CharSequence (including StringBuffer and StringBuilder) as a String. 
//  SPR-11919 
//  --- Given --- 
//  only on attempt as the second one lead to a recovery 
//  Check META-INF folder 
//  Check whether there is a reference to shared environment properties... 
//  do nothing 
//  If we don't run out of memory, then this test is a success. 
//  Check printStackTrace 
//  SPR-11917 
//  class, field, method 
//  Unexpected exception from external delegation call -> close Connection and rethrow. 
//  Method handling 
//  Order is very important: must add superclass, then   its superclass chain, then each interface and   its superinterfaces. 
//  No unclosed prefix(es) in the property name (left) ->   this is the suffix we are looking for. 
//  Hessian 4.0 check: another layer of InvocationTargetException. 
//  SPR-9657, SPR-11504 
//  clean start so that simpleBean is included 
//  Meta-annotation or (default) value lookup on an annotation type 
//  SPR-12149 
/* 	 * Oracle-based implementation for detecting the current schema.	  */
//  Exercise the comparator invocation code that runs in   equalityCheck() (called from interpreted and compiled code) 
//  Holds the compiled form of the expression (if it has been compiled) 
// SPR-16921 
//  Add constructor arguments. 
//  Escaped prefix -> use plain value. 
//  Create attribute instance 
//  Read the provides_index, provides_with_count and provides_with_index fields and visit them. 
//  Check whether an actual close attempt is necessary... 
//  SPR-13620 
//  worked when using an ApplicationContext (see commented), fails when using BeanFactory 
//  Haven't yet been into second branch 
//  Proof that the @Value field did not get set: 
//  Check for file with language and country localization. 
//  The (start_pc, index, signature_index) fields of each entry of the LocalVariableTypeTable. 
//  By setting setDefaultReadOnly(true), the user can no longer modify any entity... 
//  Returned resource path does not start with relative directory:   assuming absolute path returned -> strip absolute path. 
//  If no DefaultListableBeanFactory, can't pass the resolver along. 
//  The user has provided a custom LoadTimeWeaver instance 
//  Verifying 'parameterized' support: 
//  qualifier annotations have to be local 
/* 					weblogic.transaction.UserTransaction wut = (weblogic.transaction.UserTransaction) ut;					wut.begin(definition.getName());					 */
//  Use ObjectInputStream's default ClassLoader... 
//  Fall back on bean definition attribute 
// ---------------------------------------------------------------------   Implementation of PlatformTransactionManager  --------------------------------------------------------------------- 
//  Test empty String 
//  Note: @Transactional is inherited 
//  Try a URL connection content-length header 
//  Handling of IPv6 hosts as described in SPR-13525 
//  private class, can't compile it 
//  = 2 invocations 
//  -----------------------------------------------------------------------------------------------   Public methods   ----------------------------------------------------------------------------------------------- 
//  Check for Windows-style path 
//  gh-23297 
//  must be idempotent (i.e. the following lookup must still work); 
//  Alright, not on this interface then... 
//  SPR-14952 
//  Do this first, it may add ResponseBodyAdvice beans 
//  Can remove 
//  Remove the entity manager holder from the thread. 
//  Let the subclass process the properties. 
//  Use given NumberFormat for parsing text. 
//  Set the local variable. 
//  instance method BFPP interferes with lifecycle -> autowiring fails!   WARN-level logging should have been issued about returning BFPP from non-static @Bean method 
//  session created 
//  method with changing parameter types (change reference type) 
//  If successorBlock has changed it must be processed. Thus, if it is not already in the   list of blocks to process, add it to this list. 
//  SPR-12013 
//  will be managed correctly even if no transaction was created by this aspect. 
//  equals, hashCode, toString 
//  The config classes that imported this one were all skipped, therefore we are skipped... 
//  TODO verify remaining output for forms 5, 6, 7, 8, and 14 (fix whitespace)
//  Do the insert 
//  2 bytes each for access_flags, name_index, descriptor_index and attributes_count. 
//  Allow for matching with regular UnionMethodMatcher by providing same hash... 
//  - and make sure to NOT assign 'label' into 'currentBasicBlock' or 'lastBasicBlock', so 
//  abstract bean should throw exception on creation attempt 
//  empty map '{:}' 
//  Resolve merged bean definition locally. 
//  All reflection-detected methods found in ASM method set -> proceed 
//  If this gets changed, it must remain sorted... 
//  Get the names of the meta-data parameters 
//  get the bean again from the BF 
//  Third step: replace the ASM specific instructions, if any. 
//  SPR-10714 
//  SPR-16252 
//  go into more exhaustive comparisons. 
//  Ignore: indicates a reference back to the bean we're trying to advise.   We want to find advisors other than the currently created bean itself. 
//  SPR-9317 
//  Use prototype bean definition, to avoid registering bean as dependent bean. 
//  try another time, this time using Strings 
//  SPR-13757 
//  Candidate class not an ImportSelector or ImportBeanDefinitionRegistrar ->   process it as an @Configuration class 
//  Continue since the BytesMessage typically won't be used any further. 
//  Don't add advisors to an empty list; may indicate that proxying is just not required 
//  Otherwise pick concrete media type 
//  gh-22936 
//  ACC_DEPRECATED is ASM specific, the ClassFile format uses a Deprecated attribute instead. 
//  Async support options 
//  give other interceptors a chance to handle the timeout 
//  Write 
//  SPR-10848 
//  just want to ensure that it doesn't bomb 
//  No restriction of HTTP methods by default,   in particular for use with annotated controllers... 
//  There might be multiple 'best patterns', let's make sure we have the correct URI template variables 
//  will remove di 
//  - The offset of the LocalVariableTable attribute, or 0. 
//  concrete types 
//  Process any @ImportResource annotations 
//  Level 2 
// ---------------------------------------------------------------------   Implementation of MailSender  --------------------------------------------------------------------- 
//  Fails!
//  see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getProperties() 
//  Corresponding qualifier on factory method? (typically in configuration class)
//  If only one of the advisor (but not both) is PointcutAdvisor, then it is a mismatch.   Takes care of the situations where an IntroductionAdvisor is used (see SPR-3959). 
//  evaluates to false 
//  method that gets type converted parameters 
/* 	 * Controllers	  */
//  Detect a LoadTimeWeaver and prepare for weaving, if found. 
//  Check locale-independent common messages for the given message code. 
// ---------------------------------------------------------------------   Implementation of ReactiveTransactionManager  --------------------------------------------------------------------- 
//  SPR-13626 
/* 			* If useNewConnection is true, then we obtain a non-managed connection so our modifications			* are handled in a separate transaction. If it is false, then we use the current transaction's			* connection relying on the use of a non-transactional storage engine like MYISAM for the			* incrementer table. We also use straight JDBC code because we need to make sure that the insert			* and select are performed on the same connection (otherwise we can't be sure that last_insert_id()			* returned the correct value).			 */
// assertFalse(em.getTransaction().isActive()); 
//  Fulfill all the parameter requirements except the last one 
//  Close the state of this context itself. 
//  Build JobDetail instance. 
//  Some unknown type desired -> rely on getObject. 
//  Check that the perclause pointcut is valid 
//  Set the given MBeanServerForwarder, if any. 
// evaluate("aVarargsMethod('a')", 1, Integer.class); 
//  assert that only static OR non static are set, but not both or none 
//  VOID-RETURNING, NON-INDEXED write method 
//  Only consider bean as eligible if the bean name   is not defined as alias for some other bean. 
//  Cache editor for search type, to avoid the overhead   of repeated assignable-from checks. 
//  Check name as-is 
//  Note: not actually invoked within a transaction since the test class is   annotated with @MetaTxWithOverride(propagation = NOT_SUPPORTED) 
//  SPR-13627 
//  OpAnd 
//  Evaluate the "spring.objenesis.ignore" property upfront... 
//  Key should be coerced to string representation of 42 
//  Found a matching TargetSource. 
//  Check whether the UserTransaction or TransactionManager implements it... 
//  Passing (Sub,String) on call to foo(Super,String) is close match 
//  Pass custom isolation level on to EclipseLink's DatabaseLogin configuration   (since Spring 4.1.2) 
//  First, invoke the BeanFactoryPostProcessors that implement PriorityOrdered. 
//  -----------------------------------------------------------------------------------------------   Type table entries management.   ----------------------------------------------------------------------------------------------- 
//  Note: the following 'multi-line' layout is for enhanced code readability.                             
//  not changed 
//  Only non-simple types, even if not annotated 
//  Thus the following, though perhaps counter intuitive, must be false: 
//  Try LocaleResolver (we're within a DispatcherServlet request). 
//  A configuration class may not be final (CGLIB limitation) unless it declares proxyBeanMethods=false 
//  Level 1 
//  Create alias 
//  GZIP response found - need to unzip. 
//  Use Arrays.hashCode since ObjectUtils doesn't comply to to   Annotation#hashCode() 
//  Create new session if necessary. 
//  Create EntityManager based on the field's type. 
//  stack: right/left(1or2slots) 
//    suite of tests root requests for default servlets (SRV 11.2) on Websphere vs Tomcat and other containers   see: https://jira.springframework.org/browse/SPR-7064   
//  Should never be called since we return "true" from isAsyncReturnValue 
//  -----------------------------------------------------------------------------------------------   Methods to get Type(s) from a descriptor, a reflected Method or Constructor, other types, etc.   ----------------------------------------------------------------------------------------------- 
//  Take any bean name that we can determine URLs for. 
//  Still more specific class 
/*  * This class can be used to parse other classes containing constant definitions * in public static final members. The {@code asXXXX} methods of this class * allow these constant values to be accessed via their string names. * * <p>Consider class Foo containing {@code public final static int CONSTANT1 = 66;} * An instance of this class wrapping {@code Foo.class} will return the constant value * of 66 from its {@code asNumber} method given the argument {@code "CONSTANT1"}. * * <p>This class is ideal for use in PropertyEditors, enabling them to * recognize the same names as the constants themselves, and freeing them * from maintaining their own mapping. * * @author Rod Johnson * @author Juergen Hoeller * @since 16.03.2003  */
//  number of cache seconds 
//  else, let EmbeddedDatabaseFactory use the default "testdb" name 
//  N.B. this will sometimes fail if you use classpath: instead of classpath*:.   The result depends on the classpath - if test-classes are segregated from classes   and they come first on the classpath (like in Maven) then it breaks, if classes   comes first (like in Spring Build) then it is OK.
//  propagated to callers but the transaction still considered as committed. 
//  basic conversion int>String 
//  Explicit bean name found. 
//  Swallow - let original exception get through 
//  Instance methods 
//  Recalculate taking into account count inside lock and items that   will be purged 
//  try with exceptional 
//  First step: compute the number of argument types in methodDescriptor. 
//  Lazily prepare service and stub if necessary. 
//  Read the attribute_info's attribute_name and attribute_length fields. 
//  Not an incrementer so it must be a range (possibly empty) 
//  Additional candidate with same length 
//  ignore - might be an unresolved placeholder or non-existing base directory 
//  Publish the final event. 
//  Array required -> apply appropriate conversion of elements. 
//  test property set (tb.name) 
//  Create field error with the exceptions's code, e.g. "typeMismatch". 
//  Set enhanced subclass of the user-specified bean class 
//  Expose the form object name for nested tags... 
//  try to reuse 
//  Register alias for backwards compatibility with 4.1 
//  should not be called, since we override canConvertFrom/canConvertTo instead 
//  This had better be a Bad SQL Grammar code 
//  Steps in the binding algorithm... 
//  does not exist 
//  Handle close method: only close if not within a transaction. 
//  Read the switch labels. 
//  Shouldn't happen 
//  SPR-14828 
//  In case of FactoryBean, return prototype status of created object. 
//  Now copy both the callbacks from mainCallbacks 
//  SPR-16124 
//  has the concrete child bean values 
//  Use request configuration given by the user, when available 
//  Transaction rollback   Oracle: deadlock 
//  RouterFunctions.Visitor 
//  This will call the varargs concat with an empty array 
//  Now fast-forward by 31 minutes 
//  Generate the proxy class and create a proxy instance. 
//  blocks ending with JSR instructions (see {@link #visitJumpInsn)} that can reach 'r'. 
//  It may not be possible to produce a single DataBuffer synchronously 
//  Passing (Sub) on call to (Super[]) is close match 
// -------------------   SPR-3534 classes  ------------------- 
//  @Transactional 
//  queryResultString = "Nikola Tesla is a member of the IEEE Society" 
//  Check two per-instance mixins were distinct 
//  put exact matches on the front to be tried first? 
//  Make a properties entry by combining bean name and property. 
//  Remove the session holder from the thread. 
//  copy autowire settings from original bean definition. 
//  Not necessary to cast if the target & bridge have   the same return type.   (This conveniently includes void and primitive types,   which would fail if casted.  It's not possible to   covariant from boxed to unbox (or vice versa), so no having   to box/unbox for bridges).   TODO: It also isn't necessary to checkcast if the return is   assignable from the target.  (This would happen if a subclass   used covariant returns to narrow the return type within a bridge
//  SPR-16166: top-level JSON values 
//  Hessian 2.0 stream 
//  this should not match because of the administratorT 
//  Reproducing bug requires that the class specified in target() pointcut doesn't   include the advised method's implementation (instead a base class should include it) 
//  with the possible next task element 
//  JPA 2.0: handle unwrap method - could be a proxy match. 
//  emulate what happens when BFPPs are added to an application context: It's LIFO-based 
//  3.4L - not allowed 
//  Superclass found, return its annotation metadata and recurse 
//  SPR-14470 
//  and then the MessageConsumer gets created... 
//  reference is out of date. 
//  extra slashes and spaces 
//  Up to date 
//  Operator precedence 
//  Self description 
//  Default instance to be re-used across requests, unless one is configured explicitly 
//  skipping 
//  Resolve system properties: e.g. "${user.dir}" 
//  Lookup cached sub-PropertyAccessor, create new one if not found. 
//  We have a code or default text that we need to resolve. 
//  6 attribute header bytes, 6 bytes for name, flags and version, and 5 * 2 bytes for counts. 
//  java.util.logging as default 
//  Peek into the file to look for DOCTYPE. 
//  Object 
//  Full iteration necessary... 
//  if null assume the problem is because the right token was   not found at the end of the expression 
//  No re-broadcast 
//  Target Connection already fetched,   or target Connection necessary for current operation -> 
//  Update response 
//  Should also remove Level 3-B, leaving only Level 1. 
//  MultiValueMap implementation 
//  doSuspend failed - original transaction is still active... 
//  SPR-8858 
//  No custom TargetSource found. 
//  Property access on a class object 
//  RequestPredicates.Visitor 
//  name, create one 
//  slightly diff here because return value isn't a list, it is a single entity 
//  Configuration properties 
//  look up EJB home and create method 
//  SPR-17459 
//  Leniently match first line due to differences between JDK 8 and JDK 9+. 
//  Add the session identifier if needed   (Do not embed the session identifier in a remote link!) 
//  Assume a single argument object. 
//  In case of pre-bound Session, restore previous flush mode. 
//  Setup the types that we want to match against 
//  class to test naming of beans in an error message 
//  Recursively process the configuration class and its superclass hierarchy. 
//  -- OR -- 
//  invoke any method on the advised proxy to see if the interceptor has been invoked 
// -------------------------------------------------------------------------   Implementation of AbstractMessageListenerContainer's template methods  ------------------------------------------------------------------------- 
//  Uncompilable as argument conversion is occurring 
/*  value =  */
//  bytes respectively. 
//  Mono empty 
//  Base pattern matches a jar file - search for matching entries within. 
// ((Advised) pooled).setTargetSource(new SingletonTargetSource(new SerializablePerson())); 
//  GC could happen during restructure so we must be able to create a reference for a null entry 
//  See org.springframework.core.env.EnvironmentSystemIntegrationTests#mostSpecificDerivedClassDrivesEnvironment_withDevEnvAndDerivedDevConfigClass 
//  Fetch WebApplicationContext, either from DispatcherServlet or the root context. 
//  will probably never happen, doesn't make much sense 
//  SPR-15672 
//  used to test invalid methods that exist in the proxy interface 
//  Apply specific isolation level, if any. 
//  perform simple MBean count test 
//  a?:b (a if it isn't null, otherwise b) 
//  We keep ViewResolvers in sorted order. 
//  It doesn't matter if the referenced bean hasn't yet been registered: 
//  Second pass: look for method where arguments can be converted to parameter types. 
//  Visit the RuntimeInvisibleParameterAnnotations attribute. 
//  Applies statically but not dynamically 
//  If a filter is registered for this type, call it 
//  Match all elements up to the first ** 
//  ServletContext params are available 
//  Postgres-style "::" casting operator should be skipped 
//  properties 
//  Else, compare the inner classes entry nameSymbol.info - 1 with the arguments of this method   and throw an exception if there is a difference? 
//  those of the local variables in the input frame of dstFrame. 
//  Transaction active but no synchronization active. 
//  SPR-12624 
//  Add a new element to the list 
//  Not using "parseMimeType" to avoid static init cost 
//  Find all translators, being careful not to activate FactoryBeans. 
//  The method may be on an interface, so let's check on the target class as well. 
//  Shouldn't custom translate this 
//  Register all matching methods 
//  release all objects 
//  Register Calendars. 
//  - The offset of the Code attribute, or 0. 
//  Determine the path for the request dispatcher. 
//  Fail on next write 
//  ---------------------------------------------------------------------   Lifecycle methods   --------------------------------------------------------------------- 
//  result == "1" 
//  SPR-14210 
//  Bad session, just get out 
//  Generic assignment can be a little confusing, given:     List<CharSequence> c1, List<? extends CharSequence> c2, List<String> s;     c2 = s; is allowed and is often used for argument input, for example   see List.addAll(). You can get items from c2 but you cannot add items without   getting a generic type 'is not applicable for the arguments' error. This makes   sense since if you added a StringBuffer to c2 it would break the rules on s.     c1 = s; not allowed. Since there is no '? extends' to cause the generic   'is not applicable for the arguments' error when adding (which would pollute   s).
//  making it available for JSP EL. 
//  check new locale 
//  Let "our" handler know before sending the open frame to the remote handler 
//  Potentially overlapping with URLClassLoader.getURLs() result above! 
//  Unusual but legal return type   Properly test generic type handling of Flux values collected to a List 
//  Check all bean definitions. 
//  Prevent clearConnection() from trying to close 
//  Combining @Configuration classes with a Properties based loader doesn't really make   sense, but that's OK for unit testing purposes. 
//  Regular servlet container: behaves as expected in any case,   so the trailing slash is the result of a "/" url-pattern mapping.   Don't remove that slash. 
//  Parameterized for server-side use 
//  Demonstrates we can't inject that event because the generic type is lost 
//  DatabaseMetaData.procedureColumnReturn or possibly procedureColumnResult 
//  Annotation-based return value types 
//  Inner bean: generate identity hashcode suffix. 
// ---------------------------------------------------------------------   ResourceLoader / ResourcePatternResolver override if necessary  --------------------------------------------------------------------- 
// -------------------------------------------------------------------------   Methods dealing with prepared statements  ------------------------------------------------------------------------- 
//  When the condition is a double slot primitive 
//  ... and it can be done successfully 
//  Should never happen... 
//  By definition, a LOCAL_KIND type designates the concrete type of a local variable at   the beginning of the basic block corresponding to this frame (which is known when   this method is called, but was not when the abstract type was computed). 
//  indexed read method 
//  chain of statics ending with static field 
//  Can't assume ordering for others, so use a list 
//  should cast to the interface 
//  Check that references survived pooling 
//  Raise UnexpectedRollbackException if we had a global rollback-only marker 
//  gh-23508 
//  For subclasses: do nothing by default. 
//  September: 30 days 
//  A clone of the AutowireCandidateResolver since it is potentially BeanFactoryAware... 
//  Cache the EJB create() method that must be declared on the home interface. 
//  Specific to LinkedCaseInsensitiveMap 
//  parseCheck("new int[] {1,2,3}.count()");   }   
//  binding from returning clause 
//  an inner expression was found - this is a composite 
//  Attempted read as first activity on this field and property (no canRead before them) 
//  It's a cached MessageConsumer... 
//  If it is not already marked as belonging to a subroutine, mark it as belonging to 
//  Now try protected method, and singleton 
//  list should be unmodifiable 
//  Simple BeanShell script: Let's create a proxy for it, implementing the given interfaces. 
//  Registering callbacks statically (as opposed to thread-local)   is critical for usage in an OSGi environment (SPR-5932)... 
//  The TestBean is created separately for each bean 
//  SPR-772 
//  This one is only thrown by the JMX 1.2 RI, not by the JDK 1.5 JMX code. 
//  Equality amongst standard annotations 
//  SPR-13149 
//  correlation ID is queried when response is being created... 
//  Find all HandlerAdapters in the ApplicationContext, including ancestor contexts. 
/* 		The plan:		1 Start with whole second (rounding up if necessary)		2 If seconds match move on, otherwise find the next match:		2.1 If next match is in the next minute then roll forwards		3 If minute matches move on, otherwise find the next match		3.1 If next match is in the next hour then roll forwards		3.2 Reset the seconds and go to 2		4 If hour matches move on, otherwise find the next match		4.1 If next match is in the next day then roll forwards,		4.2 Reset the minutes and seconds and go to 2		 */
//  Still perform unwrap call on target EntityManager. 
//  test whether autowiring succeeded with auto proxy creation 
//  should not occur 
//  (so that the ATHROW could consume this Throwable if it were reachable). 
//  Explicit mark/reset access via Buffer base type for compatibility   with covariant return type on JDK 9's ByteBuffer... 
//  Header phase 
//  Did a concurrent read transition to NO_DEMAND just before us?
//  Maybe a malformed query string... try plain request URL 
//  SPR-8983 
//  no data for *   trailing slash, so is allowed 
//  the variable does not exist (but that is OK, we should be writable) 
//  Skip the bean if no wiring info given. 
//  Check for match in ancestors -> positive 
//  Let's try to find a language-only match as a fallback 
//  concreteOutputType might be an uninitialized type from the input locals or from the input   stack. However, if a constructor has been called for this class type in the basic block, 
//  Update existing Theme objects.   Usually there shouldn't be any at the time of this call. 
//  Interrupted right before and still failing... give up. 
//  Metadata, route 
//  java.net.HttpURLConnection returns a *; q=.2 Accept header 
//  index of char after the last character 
//  Change to a new dynamic target 
//  does not throw 
//  Non match: no change 
//  -----------------------------------------------------------------------------------------------   Utility methods: low level parsing   ----------------------------------------------------------------------------------------------- 
//  SPR-16516, SPR-16539 
//  AbstractContextLoader 
//  No, if HSQL is the platform, we really don't want to use locks... 
//  in case it comes from a pool. 
//  The following is unpleasant but a consequence of the generic collection converter above... 
//  Child bean definition: needs to be merged with parent. 
//  End the current basic block. 
//  Obtain a serializable type proxy for the given provider... 
//  NullLiteral 
//  No JTA TransactionManager available - log a warning. 
//  create the interceptor names list 
//  Fallback to bounds 
//  Whether or not we succeeded, publish an event. 
//  If the original locations or classes were not empty, there's no   need to bother with default detection checks; just let the   appropriate loader process the configuration. 
//  Servlet 3.0 Part.write is not guaranteed to support absolute file paths:   may translate the given path to a relative location within a temp dir   (e.g. on Jetty whereas Tomcat and Undertow detect absolute paths).   At least we offloaded the file from memory storage; it'll get deleted   from the temp dir eventually in any case. And for our user's purposes,   we can manually copy it to the requested location as a fallback. 
//  1) Get an annotation 
//  Set the custom handler method factory once resolved by the configurer 
//  array of simple form fields 
//  Happens after deserialization, during destruction... 
//  Current name is resource name -> preserve it in the extra field... 
// clear filter 
//  the null must not propagate 
//  An unresolvable type in a method signature, probably from a lazy bean - let's ignore it.
//  Verify the same result for compiled vs interpreted 
//  ctor varargs 2 
//  Assert no exception is thrown 
//  Release Connection early if the holder is not open anymore   (that is, not used by another resource like a Hibernate Session   that has its own cleanup via transaction synchronization),   to avoid issues with strict JTA implementations that expect   the close call before transaction completion. 
//  After the response is committed, propagate errors to the server... 
/*  all tests are in the parent class.  */
//  Use transaction timeout (if available). 
//  Cannot use #data in condition due to dynamic proxy. 
//  binding from pointcut match 
//  Read the 'exception_table_length' and 'exception_table' field to create a label for each 
//  Register component for the surrounding <jms:annotation-driven> element. 
//  Concrete subclasses 
//  Resolve the script source. 
//  Calling foo(List) with (ArrayList) is close match (no conversion required) 
//  AnnotationConfigContextLoader 
//  Check the cache - we may have a ResolvableType which has been resolved before... 
//  Shared default locale at the framework level 
//  Absolute path 
//  relative to the input stack size, which is not known yet). 
//  request the beans from non-privileged code 
//  Do not modify the EntityManager: just set the participate flag. 
//  Simulate @PostConstruct life-cycle event 
//  Should also remove Levels 2, 3-A, and 3-B, leaving nothing. 
//  e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE 
//  instance field 
//  This should *not* recognized as a bean since it does not reside inside an @Component 
//  collection conversion 
//  Possible values for the type operand of the NEWARRAY instruction.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-6.html#jvms-6.5.newarray. 
//  If we were given a ParameterMapper, we must let the mapper do its thing to create the Map. 
//  Fall back to default theme. 
//  SPR-9566 
/*  expected  */
//  Custom return value types 
//  Bind Spring AOP proxy to AspectJ "this" and Spring AOP target to AspectJ target,   consistent with return of MethodInvocationProceedingJoinPoint 
//  An arbitrary value: probably a String or a Resource array.   setAsText will be called for a String; a Resource array will be used as-is. 
//  SPR-13895 
//  Singleton: return shared object. 
//  Destroy already created singletons to avoid dangling resources. 
//  Remove the entity manager holder from the thread, if still there.   (Could have been removed by EntityManagerFactoryUtils in order   to replace it with an unsynchronized EntityManager). 
//  - The offset of the RuntimeInvisibleTypeAnnotations attribute, or 0. 
//  Source extraction 
//  separator ends in whitespace, so we might want to see if the script is trying   to end the same way 
//  Look for defined custom translations first. 
//  Collect puts from any @Cacheable miss, if no cached item is found 
//  Execute TestExecutionListener in parallel, thereby simulating parallel   test method execution. 
//  The stack size delta is 1 for NEW, and 0 for ANEWARRAY, CHECKCAST, or INSTANCEOF. 
//  If the object is something that looks indexable by an integer, 
//  See if the return type of the method is outside the class hierarchy of the target type.   If so we know it never needs to have return type massage and can use a dispatcher.   If the proxy is being exposed, then must use the interceptor the correct one is already   configured. If the target is not static, then we cannot use a dispatcher because the   target needs to be explicitly released after the invocation. 
//  only wrapping, no allocation 
//  Different parts of elvis expression are null 
//  Set reflectively 
//  Common return type found: all factory methods return same type. For a non-parameterized 
//  with a null AnnotationVisitor). 
// -------------------------------------------------------------------------   Management of a shared JMS Connection  ------------------------------------------------------------------------- 
//  If we get here, we need to process an existing result object immediately.   The decision is made within the result lock; just the handle call outside 
//  Custom arguments 
//  intentionally empty: we just need the class to be present to fail   the test 
//  Should have invoked target and changed name 
// ---------------------------------------------------------------------   Methods for MockRequestDispatcher  --------------------------------------------------------------------- 
//  The size in bytes of this CONSTANT_Utf8 structure provides a conservative estimate   of the length in characters of the corresponding string, and is much cheaper to   compute than this exact length. 
//  Inject a shared transactional EntityManager proxy. 
//  Convert Map elements. 
//  Not advised
//  In contrast to nested test classes running in JUnit 4, the foo   field in the outer instance should have been injected from the   test ApplicationContext for the outer instance. 
//  add cacheable first 
// startNode   : parenExpr | literal  	    | type  	    | methodOrProperty  	    | functionOrVar  	    | projection  	    | selection  	    | firstSelection  	    | lastSelection  	    | indexer 
/* 		 * We use the mixin to check and, if necessary, change,		 * modification status. We need the JoinPoint to get the		 * setter method. We use newValue for comparison.		 * We try to invoke the getter if possible.		  */
//  Take sendInProgress flag only if queue is not empty 
//  +1 because creating target for stats call counts 
//  1. Resolve, and cache .gz variant 
//  Locate specified JNDI object. 
//  SPR-13631 
//  Remain back-compatible by using the default constructor if there's more then one 
//  either there was no accessor or it no longer existed 
//  fallback to default conversion logic below 
//  first invocation -- should succeed 
//  Should never happen 
//  If the number of elements to be popped is greater than the number of elements in the output   stack, clear it, and pop the remaining elements from the input stack. 
//  Sanity test that we can reflectively read annotations,   including Class attributes; if not -> fall back to ASM 
//  Full config 
//  visibleTypeAnnotationOffsets array). 
//  Just set to MANUAL in case of a new Session for this transaction. 
// ---------------------------------------------------------------------   Flushing support  --------------------------------------------------------------------- 
//  Statement 4 addresses the error described in SPR-9982. 
//  Skip call to converters, as they may update the body. 
//  Start the connector server asynchronously (in a separate thread). 
//  <-- i.e. @Bean was registered   <-- i.e. @Bean *not* enhanced 
//  UriTemplateHandler 
//  parseCheck("{1,2,3,4,5,6,7,8,9,10}.^{#isEven(#this) == 'y'}",   "{1,2,3,4,5,6,7,8,9,10}.^{(#isEven(#this) == 'y')}");   } 
//  Read the Code attributes to create a label for each referenced instruction (the variables   are ordered as in Section 4.7 of the JVMS). Attribute offsets exclude the   attribute_name_index and attribute_length fields.   - The offset of the current 'stack_map_frame' in the StackMap[Table] attribute, or 0.   Initially, this is the offset of the first 'stack_map_frame' entry. Then this offset is 
//  no parent 
//  Add with JDBC 
//  The descriptors of the runtime operand values are used if the discovered declared   descriptors are not providing enough information (for example a generic type   whose accessors seem to only be returning 'Object' - the actual descriptors may   indicate 'int') 
//  Note: the following 'multi-line' layout is for enhanced code readability. 
//  simple form field 
//  The listener successfully published the event... 
//  Check that the characters used for captured variable names are like java identifiers 
//  The most recently constructed path element in the chain 
//  The context instance was injected without an explicit parent ->   determine parent for root web application context, if any. 
//  Full check for complex generic type match required?
//  utility methods 
//  Is the construct {*...} being used in a particular path element 
//  GET after POST 
//  Try to adapt to the runtime situation that we're encountering:   There are obviously too many different patterns coming in here...   So let's turn off the cache since the patterns are unlikely to be reoccurring.
//  no context path 
//  SPR-17137: should not break trying to proxy the final test class 
//  Special handling of default encoding 
//  if optional slash is on...   and there is at least one character to match the *...   and the next path element is the end of the candidate...   and the final element is a separator 
//  Else: different class with same name found 
//  SPR-16262 
// dottedNode   : ((methodOrProperty  	  | functionOrVar      | projection      | selection      | firstSelection      | lastSelection      )) 
//  TODO: change to ByteBufferFeeder when supported by Jackson   See https://github.com/FasterXML/jackson-core/issues/478
//  SPR-10704 
//  Publisher implementation... 
//  Make given ResourceLoader available for SchedulerFactory configuration. 
//  Class not regularly loadable - can't determine a match that way. 
//  If [handlerStart,handlerEnd[ is included in [rangeStart,rangeEnd[, remove firstHandler. 
// ---------------------------------------------------------------------   Implementation of PropertyResolver interface  --------------------------------------------------------------------- 
//  matches although it takes an arg 
//  Using the following method rather than direct reflection,   we get correct handling of InvocationTargetException 
//  We couldn't load the class file, which is not fatal as it   simply means this method of discovering parameter names won't work. 
//  Regex patterns that matches URIs. See RFC 3986, appendix B 
//  If no cache name given, use bean name as cache name. 
//  Detect Equinox OSGi (e.g. on WebSphere 6.1) 
/* 	 * Return if the given bean name matches the mapped name.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,	 * as well as direct equality. Can be overridden in subclasses.	 * @param beanName the bean name to check	 * @param mappedName the name in the configured list of names	 * @return if the names match	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
//  make sure the location actually exists 
//  Verify what the expression caused aa to be compared to 
//  Sanity check, this particular call has *not* called the service 
//  Addition 
//  Kotlin present?
//  stack: left(1or2)/right 
//  SPR-13502 
//  Default connection timeout merged 
//  NB: WebSphere passes className as "." without class while the transformer expects a VM "/" format 
//  vars associated with second variable 
//  Find appropriate constructor for the given exception class 
//  The listener attempted to publish the event... 
//  Test null 
//  Also register a custom endpoint 
//  Mapped to all MBeans registered by the MBeanExporter. 
//  Note: not actually invoked within a transaction since the method is   annotated with @MetaTxWithOverride(propagation = NOT_SUPPORTED) 
//  Actually scan for bean definitions and register them. 
//  Fires only on setters 
//  Must be initialized by @Test method... 
//  Transport methods 
//  Information about the current method, i.e. the one read in the current (or latest) call   to {@link ClassReader#readMethod()}. 
//  Is the path pattern using * characters in a particular path element 
//  SPR-15066 
//  expect a transaction 
//  SPR-17461 
//  Points to current directory - drop it. 
//  Perform a fresh lookup for JTA handles. 
//  consume (first time through) or comma (subsequent times) 
//  Now proceed with actual closing of the shared Connection... 
//  MBean might already have been unregistered by an external process 
//  Try efficient lock-free access for existing cache entry 
//  Check raw class match as well, making sure it's exposed on the proxy. 
//  SPR-12398 
//  type references 
//  Configure non-transactional connection settings for Quartz. 
//  - Whether the method has a Synthetic attribute. 
//  Can't rely on classpath detection 
//  If no attribute is returned, we know that it is not defined in the   management interface. 
//  SPR-13637 
//  the parent bean is autowiring 
//  nothing to do 
//  Stop the TimerManager itself. 
//  Visit the method declaration. 
//  supply the implicit lower bound if none are specified 
//  for normal advice   invoke target without considering advice, if optimized   no override for methods mapped to this
//  InfoReceiver methods 
//  Is it different AspectJ behaviour, at least for checked exceptions?
//  Save previous nestedPath value, build and expose current nestedPath value. 
//  Code attribute fields and sub attributes: 
//  There is only getDecoratedClass() declared -> dispatch to proxy config. 
//  First two bytes: byte order mark 
//  Managed (destroy disposes).. 
//  SPR-15900 
//  Extract anchor fragment, if any. 
//  SPR-17330 
//  SPR-12810 : inputstream body should be consumed 
//  left up to the caller to convert the value if necessary. 
//  Potentially inherited from outer <beans> sections, otherwise falling back to 'no'. 
//  POST -> bind error 
//  SPR-16132 
//  SPR-10701 
//  Do not check the expected position due a change in RegEx parsing in JDK 13.   See https://github.com/spring-projects/spring-framework/issues/23669 
//  Any concrete media type 
//  No underlying Connection -> lazy init via DriverManager. 
//  Setting the bean reference to the same value is alright - can simply be ignored... 
//  Return the start offset of the rest of the type_annotation structure. 
//  Store context in local instance variable, to guarantee that   it is available on ServletContext shutdown. 
//  Proceed to physical close from here... 
//  Replace ASM_GOTO_W with GOTO_W. 
//  manually building WebSocketDeploymentInfo in order to avoid class cast exceptions   with tomcat's implementation when using undertow 1.1.0+ 
//  Message<String> as Message<Integer> 
//  determine remote object 
//  required in OpenJPA case 
//  It's an output parameter: SqlReturnResultSet parameters already excluded.   It need not (but may be) supplied by the caller. 
//  MappingJackson2MessageConverter default constructors 
//  See SPR-11393 for related discussions. 
//  Add argument resolver before parent initializes argument resolution 
//  No generic type -> we know it's a Class type-match, so no need to check again. 
//  Verify if the input changes, the result changes 
//  Necessary for older Oracle drivers, in particular when running against an Oracle 10 database.   Should also work fine against other drivers/databases since it uses standard JDBC 4.0 API. 
//  User superclass behavior (rollback on unchecked) if no rule matches. 
//  Implementation note:   We need the level of indirection this interface provides as otherwise the   AspectJPrecedenceComparator must ask an Advisor for its Advice in all cases   in order to sort advisors. This causes problems with the   InstantiationModelAwarePointcutAdvisor which needs to delay creating   its advice for aspects with non-singleton instantiation models. 
//  should never happen 
//  SPR-17465 
//  Non-transactional DataSource is optional: fall back to default 
//  No exception raised as of 4.3, aligned with the behavior for @Async methods (SPR-14030) 
//  Compute the offset of each constant pool entry, as well as a conservative estimate of the   maximum length of the constant pool strings. The first constant pool entry is after the   magic, minor_version, major_version and constant_pool_count fields, which use 4, 2, 2 and 2 
//  SPR-9692 
//  ignore - this is expected on refresh() for failure case tests 
//  At this point we know it wasn't a user problem so worth a retry if a 
//  Then, mark the subroutines called by the main subroutine, then the subroutines called by 
//  UDP 
//  request.setRequestURI("https://example.org/foo/page.html"); 
//  if it was actually declared by the superclass. 
//  check that unused instances from autowiring got removed 
//  It's a cached MessageProducer... reset properties only. 
//  Name and parameter number match, check the arguments 
//  first set up the PageContext and the bean 
//  Neither transaction nor synchronization active. 
//  No URL (or no resolvable URL) -> try relative to resource base. 
//  visitLocalVariable will never be called for static no args methods   which doesn't use any local variables.   This means that hasLvtInfo could be false for that kind of methods   even if the class has local variable info. 
//  Unsynchronized - just scope it for the transaction, as demanded by the JPA 2.1 spec... 
//  IntLiteral 
//  no restriction of HTTP methods by default 
//  Check cron expression 
//  If we still lack default connection properties, check them now. 
//  Rethrow original Spring exception from first attempt. 
//  UriBuilderFactory 
//  simply concatenate the two patterns 
//  Check obvious equality matches with the candidate first, 
//  Could be part of normal workflow (e.g. browser tab closed) 
//  OpNE 
//  Unsupported Unmarshalling 
//  Try reentrant call--will go through this advice. 
//  Not streaming... 
//  Typically ClassNotFoundException or NoClassDefFoundError... 
//  "hiding" the target bean in an internal target definition. 
//  Simulate scenario where Filter would have already set CORS headers 
//  Server side only... 
//  Call from CGLIB proxy handle, potentially implementing a FactoryBean method?
//  Unbind at this point if it's a new Session... 
//  Check that the setter was invoked...   We should be able to combine Constructor and   Setter Injection 
//  StringLiteral 
//  Proper OPTIONS response coming from a handler - we're done. 
/* 	@Override	public javax.validation.ClockProvider getClockProvider() {		Assert.notNull(this.validatorFactory, "No target ValidatorFactory set");		return this.validatorFactory.getClockProvider();	}	 */
//  method not public 
//  OperatorBetween 
//  Handle JPA 2.1 unwrap method - could be a proxy match. 
//  Singleton listener instance (without backing bean definition) disappeared -   probably in the middle of the destruction phase 
// ---------------------------------------------------------------------   Instance implementation  --------------------------------------------------------------------- 
//  Joda-Time present?
//  Print debug message when warn logger is not enabled. 
//  /hotels + /booking => /hotels/booking   /hotels + booking => /hotels/booking 
//  Wait for all tasks to terminate - works for the common pool as well. 
//  contributed by ConfigForScanning 
//  Probably a pre-bound resource... 
//  Wildcards 
//  hash code 
//  Two calls to verify that caching doesn't break re-creation. 
//  Proceed with file system resolution 
//  No ThemeResolver and ThemeSource available -> try fallback. 
//  this fails while it inherits from the child bean 
//  Determine default HTML escape setting from the "defaultHtmlEscape" 
//  nothing 
//  Could read these from files 
// ---------------------------------------------------------------------   Implementation of ConfigurableListableBeanFactory interface  --------------------------------------------------------------------- 
//  And, not expressions 
//  inline list creation not supported at the moment   evaluate("{1,2,3,4,5,6,7,8,9,10}.!{#isEven(#this)}", "[n, y, n, y, n, y, n, y, n, y]", ArrayList.class); 
//  Will fail without the following, because we're not able to get a connection   from the DataSource here if we need to create an ExceptionTranslator 
//  SPR-16138 
//  Only pass in the NoLocal flag in case of a Topic:   Some JMS providers, such as WebSphere MQ 6.0, throw IllegalStateException   in case of the NoLocal flag being specified for a Queue. 
//  Register the final decorated instance. 
//  Local transaction joined - don't actually call close() before transaction completion 
//  equals 
//  ASM-based resolution - safe for non-resolvable classes as well 
//  Not using "valueOf' to avoid static init cost 
//  ---------------------------------------------------------------------   Lifecycle properties   --------------------------------------------------------------------- 
//  create a parent context that includes a mapping 
//  add bar property -> validation should pass, even with an empty string value 
//  Something on the stack when nothing is needed
/* 	 * See SPR-6021	  */
//  Only patterns not capturing variables cannot match against just / 
//  Don't override the class with CGLIB if no overrides. 
//  If srcType and dstType are reference types with the same array dimension,   merge(srcType, dstType) = dim(srcType) | common super class of srcType and dstType. 
//  Parse each @Configuration class 
//  inner bean with other scope - can't reliably process events 
//      duplicate!     duplicate!
//  Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars 
//  Assert that we're in the inner proxy 
//  path_length is stored in the first byte of a type_path. 
//  END OF PATCH 
//  Any of the typical annotations found?
// -------------------------------------------------------------------------   Implementation hooks and helper methods  ------------------------------------------------------------------------- 
//  parseCheck("new String[] {'abc','xyz'}", "new String[] {'abc','xyz'}");   } 
//                    
//  repro SPR-9123, ReflectivePropertyAccessor JavaBean property names compliance tests 
//  Disable well-known modules detection 
//  != t 
//  Requires binding 
//  Otherwise, use the full servlet path. 
//  If this property or field access would return a primitive - and yet   it is also marked null safe - then the exit type descriptor must be   promoted to the box type to allow a null value to be passed on 
//  gh-23622 
//  Cancel associated user-level Future handle as well 
//  here: RIGHT==null LEFT==null 
//  Check request for preparsed or preset theme. 
//  Can't do exact matching through isMatch 
//  Store pre-refresh ApplicationListeners... 
//  configure the pointcut expression accordingly. 
//  If we get here, we have an exception that resulted from user code,   rather than the persistence provider, so we return null to indicate 
//  Add listeners by bean name, potentially overlapping with programmatically 
//  Were the two compared descriptor both for numbers?
//  Clear context-level resource caches (such as ASM metadata from scanning). 
// ---------------------------------------------------------------------   Implementation of the TargetSourceCreator interface  --------------------------------------------------------------------- 
//  Since we're looking into the general ApplicationContext here,   let's accept this as a non-match and allow for chaining as well... 
//  consistent with WebMvcConfigurationSupport 
//  Shouldn't happen with connection reset beforehand 
//  ast 
//  Could be a collection type but we don't know about its element type,   so let's just assume there is an element type of type Object... 
//  A final desperate attempt on the proxy class itself... 
//  thrown inside the method. Otherwise the method could not be invoked. 
//  parseCheck("new String[] {'abc','def','xyz'}.count()");   } 
//  encoded dot 
//  Revert to old position. 
//  other parameters 
//  No singleton guarantees from the factory -> let's lock locally but   reuse the factory's singleton lock, just in case a lazy dependency   of our advice bean happens to trigger the singleton lock implicitly... 
//  default resourceRef=false should cause this to fail, as java:/comp/env will not   automatically be added 
//  We need to expose a separate Session. 
//  @Lookup method not substituted 
//  6 header bytes and 2 bytes for local_variable_table_length. 
/*  STOMP spec: receiver SHOULD take into account an error margin  */
//  Not overloaded: don't worry about arg type matching... 
//  SPR-16578 
//  for backwards compatibility.. 
//  Use mock ResourceResolver: i.e. we're only testing upfront validations... 
//  List of SqlParameter names for out parameters 
//  Stubbed null arguments just for reference purposes,   expecting them to be autowired for regular singleton references?   A safe assumption since @Bean singleton arguments cannot be optional...
//  Convert array elements, if necessary. 
//  primitive left operand - should get boxed, return true 
//  Must now report back as having been modified 
//  UTF-8 
//  was /*/menu/** 
//  Covers the case where a @Configuration is picked up via component scanning   and its bean definition only has a String bean class. In such cases   beanDefinition.hasBeanClass() returns false so we need to actually   call determineTargetType ourselves 
// -------------------------------------------------------------------------   Template methods to be implemented by subclasses  ------------------------------------------------------------------------- 
//  Check no encoding of expressions or constraints 
// operand.getValueInternal(state); 
//  If the transaction attribute is null, the method is non-transactional. 
//  Try to explicitly synchronize the EntityManager itself   with an ongoing JTA transaction, if any. 
//  Identifier 
//  - The value corresponding to the ConstantValue attribute, or null. 
//  not directly implemented 
//  No JSON view specified... 
//  SPR-13592 
//  static @Bean method 
//  Just rethrow exception if we can't get any match. 
//  Flux 
//  Use hashCode of service locator proxy. 
//  October: 31 days and a daylight saving boundary in CET 
//  context path only 
//  Visit the AnnotationDefault attribute. 
//  No-arg constructor for XML 
//  Probably Hibernate's WebSphereExtendedJTATransactionLookup pseudo JTA stuff... 
//  Remove a registered singleton of the given name, if any. 
//  Spring 2.0 style 
// String[] listenerNames = ((ListableBeanFactory) applicationContext).getBeanDefinitionNames(ApplicationListener.class);  assertTrue("listeners include beanThatListens", Arrays.asList(listenerNames).contains("beanThatListens")); 
//  was /**/*Other 
//  currently deliberate 
//  empty params 
//  graph, and add these blocks to the list of blocks to process, if not already done. 
//  Not a Class: We need to evaluate the script for every call. 
//  Dynamic SQL error   Cardinality violation   Syntax error direct SQL   Syntax error dynamic SQL   General SQL syntax error   Oracle: unknown identifier
//  Add these so that static methods are invocable on the type: e.g. Float.valueOf(..) 
//  7.5.9 
//  SPR-14792 
//  singleton property 
//  Existing reference will fail 
//  String not exhausted, but pattern is. Failure. 
//  This produces 2 (see comments in https://jira.spring.io/browse/SPR-14544 )   Comparator<String> patternComparator = new AntPathMatcher().getPatternComparator(""); 
//  Number of times to interpret an expression before compiling it 
//  Cleaned URL path cannot be converted to URL -> take original URL. 
//  A bean contained in a non-singleton bean cannot be a singleton itself.   Let's correct this on the fly here, since this might be the result of   parent-child merging for the outer bean, in which case the original inner bean 
//  Visit the stack map frame for this bytecode offset, if any. 
//  https://github.com/spring-projects/spring-framework/issues/22602 
//  The best we can do is to check whether we're logically connected. 
//  nice long wait... 
//  two errors
//  varargs but nothing to convert 
//  no resolver registered == exception 
//  7.5.8 
//  Assign a List<String> to the List<Integer> field - the component elements should be converted 
//  Passing (Super) on call to (Sub[]) is not a match 
//  Verify how all the nodes behave with assignment (++, --, =) 
//  setting values 
//  Delegation methods 
//  Finally, invoke all other BeanFactoryPostProcessors. 
//  This will call the getter 
//  primitive int 
//  Only use factory method metadata if the return type is actually expressive enough   for our dependency. Otherwise, the returned instance type may have matched instead   in case of a singleton instance having been registered with the container already. 
//  Instantiate the bean. 
//  OK, so no JTA TransactionManager is available... 
//  Keep reading up to 64 bits. 
//  Do not attempt to lookup tx manager if no tx attributes are set 
//  use cached QualifiedIdentifier: 
//  filling at least one 256 buffer 
//  Propagate refresh to lifecycle processor first. 
//  Proxy is not yet available, but that shouldn't matter.
//  Not touched 
//  Skip the first character, which is always a '('. 
//  Regular instantiation via default constructor... 
//  First call should not have been cached 
//  Check for uniqueness 
//  JSR-236 API not available...
//  ExtendedBeanInfo needs to behave exactly like BeanInfo... 
//  Compute and store the offset of each 'bootstrap_methods' array field entry. 
//  Add each bootstrap method in the symbol table entries. 
//  parseCheck("{1, 2, 3, 4, 5} instanceof List", "({1,2,3,4,5} instanceof List)");   }// true 
//  7.5.6 
//  or removing the attribute, respectively, if appropriate. 
//  SPR-16318 
//  In case of FactoryBean, match object created by FactoryBean. 
//  Here the target method takes Object... and we are passing a string 
//  Update of the cache will fail as well 
//  setup security 
//  Deprecated attributes always use 6 bytes. 
//  not found 
//  SPR-13464 
//  Read the access_flags, name_index and descriptor_index fields. 
//  Search for further keys to strip, with the first key not stripped. 
//  Check that this doesn't fail due to attempt to assign final 
//  Improve the message by showing the context. 
//  Same implicit default values as the @CrossOrigin annotation + allows simple methods 
//  SPR-16091 
//  Should rollback 
//  7.5.7 
//  Actually invoke the handler. 
//  Data flow algorithm: put the first basic block in a list of blocks to process (i.e. blocks   whose input stack size has changed) and, while there are blocks to process, remove one   from the list, update the input stack size of its successor blocks in the control flow 
//  assert that the property source was added last to the set of sources 
//  cannot happen 
//  No path info... (not mapped by prefix, nor by extension, nor "/*")   For the default servlet mapping (i.e. "/"), urlDecode=false can   cause issues since getServletPath() returns a decoded path.   If decoding pathWithinApp yields a match just use pathWithinApp. 
//  If the target is varargs and there is just one more argument 
//  Check it returns mutable contexts 
//  See org.springframework.core.env.EnvironmentSystemIntegrationTests 
//  In the first case we should not retry, in the second case we should see if there is a   better suited method. 
//  But do not simulate validation of the 'equal' bean. As a consequence, a method   override in 'equal' will be marked as overloaded, but the corresponding   override in 'master' will not. But... the bean definitions should still be   considered equal. 
//  ask for the result to be made into an Integer 
//  gh-22428 
//  Only really happens on JBoss 4.2 in case of an early timeout... 
//  Intentionally FINAL. 
//  ServerWebExchange delegation methods... 
//  NOTE: This class must not implement Serializable because it serves as base   class for AspectJ aspects (which are not allowed to implement Serializable)! 
//  Extract key from attribute or sub-element. 
//  2) Fall back to an implicit database name based on the ID 
//  Removes counting before advisor 
//  SPR-12569 
//  Try fallback to originally specified name... 
//  SPR-14796 
//  Create and visit the label for the first basic block. 
//  To be invoked through the proxy, even in case of an interface-based proxy. 
//  Inbound mapping 
//  test matching with ?'s 
//  @Order and @Priority should be ignored due to implementation of PriorityOrdered. 
//  Convert value to a transaction attribute. 
//  If you thought things were bad before, now we sink to new levels of horror... 
/* 	 * Add an attribute for a cacheable method.	 * <p>Method names can be exact matches, or of the pattern "xxx*",	 * "*xxx" or "*xxx*" for matching multiple methods.	 * @param methodName the name of the method	 * @param ops operation associated with the method	  */
//  Removes Nop1 
//  7.5.5 
//  Two reasons this can occur:   1. the method invoked actually threw a real exception   2. the method invoked was not passed the arguments it expected and      has become 'stale' 
//  Obtain a RequestDispatcher for the target resource (typically a JSP). 
//  deal with hexadecimal 
//  Actually create the inner bean instance now... 
//  not same due to fallback to raw FinalFactoryBean instance with repeated getObject() invocations 
//  frame (except for uninitialized types, which may have been initialized). 
//  Initialize with passed-in context. 
//  Type-based... 
//  remove first four irrelevant stack trace elements 
//  exchange 
//  Ignore: AsyncContext recycled and should not be used   e.g. TIMEOUT_LISTENER (above) may have completed the AsyncContext 
// consume INC/DEC 
//  Don't bother if WebSphere is configured to be fully Servlet compliant. 
//  method call with result from method call 
//  Synthesized annotation 
//  RequestPath methods.. 
//  No name specified - standard JTA is sufficient. 
//  Re-interrupt current thread, to allow other threads to react. 
//  SPR-12434 
//  Null new pattern: should ignore 
//  Find editor for superclass or interface. 
//  Count is now 2 
//  SPR-13468 
//  Keys in the Properties object are sorted. 
//  We should only attempt if the user explicitly set lazy-init to true   and we know the merged bean definition is for a factory bean. 
//  -----------------------------------------------------------------------------------------------   Parameters, annotations and non standard attributes   ----------------------------------------------------------------------------------------------- 
//  Set same instance 
//  Just to check that this doesn't cause problems with introduction processing 
//  Determine response-encoded HTML escape setting from the "responseEncodedHtmlEscape" 
//  Assume bundle not found   -> do NOT throw the exception to allow for checking parent message source. 
//  Is the existing bean definition one that was created from a configuration class?   -> allow the current bean method to override, since both are at second-pass level.   However, if the bean method is an overloaded case on the same configuration class,
//  Proactively notify all active WebSocket sessions 
//  Only use method proxy for public methods not derived from java.lang.Object 
//  Immediate, before commit, after commit 
//  Must allow for introductions; can't just set interfaces to the target's interfaces only. 
//  7.5.3 
//  SPR-17030 
//  Create a ByteVector to hold an 'annotation' JVMS structure.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16. 
// ---------------------------------------------------------------------   Copy methods for java.io.Reader / java.io.Writer  --------------------------------------------------------------------- 
//  general execution 
//  Use toString method for rendering value. 
//  SPR-11101 
//  "normal" case 
//  Inject the BeanFactory before AutowiredAnnotationBeanPostProcessor's   postProcessProperties method attempts to autowire other configuration beans. 
//  Minimal SLF4J API without location awareness support 
// ---------------------------------------------------------------------   Writing  --------------------------------------------------------------------- 
//  What's a reasonable expectation for _any_ server or developer machine load?   8 seconds?
//  -----------------------------------------------------------------------------------------------   Frame output methods, to generate StackMapFrame attributes   ----------------------------------------------------------------------------------------------- 
//  SPR-16098 
//  look at a LOT of items 
//  SPR-12432 
//  We don't actually want to write (just save the body Flux) 
//  gh-21972 
//  If one of them is empty the result is the other. If both empty the result is "" 
//  Check fixed delay 
//  Modify nested maps 
//  since those are only meant to apply to beans defined in the original factory. 
//  Interfaces/Abstract class are filtered out automatically. 
//  removed. 
//  definition will not have inherited the merged outer bean's singleton status. 
//  Bad SQL state 
//  Create and/or resize the initializations array if necessary. 
//  double slot left operand - should get boxed, return true 
//  element type correctly Integer 
// ---------------------------------------------------------------------   Implementation of ConfigurableBeanFactory interface  --------------------------------------------------------------------- 
//  SPR-15866 
//  Will be advised 
//  varargs byte 
//  Specific header accessors 
//  or if the event provides its precise type 
//  Eagerly fetch singleton target bean, and determine result type. 
//  reflective method accessor is the only one by default 
//  Days of month start with 1 (in Cron and Calendar) so add one 
//  Must use the ISO-8859-1 encoding because Properties.load(stream) expects it. 
//  Ignore: indicates a circular reference when autowiring constructors.   We want to find matches other than the currently created bean itself. 
//  Convenience factory methods 
//  /* + /hotel -> /hotel ; "/*.*" + "/*.html" -> /*.html   However /user + /user -> /usr/user ; /{foo} + /bar -> /{foo}/bar 
//  The actual expression from the bug report. It fails if the ENGLISH reference fails   to pop the type reference for Locale off the stack (if it isn't popped then   toLowerCase() will be called with a Locale parameter). In this situation the   code generation for ENGLISH should notice there is something on the stack that 
//  OK, so it's the other order... probably on Sun JDK 1.6 or IBM JDK 1.5 
//  Initialize event multicaster for this context. 
//  Re-broadcast 
//  If both getter and setter are null, then this does not need exposing. 
//  SPR-14669 
//  Indicate that a message has been received. 
//  and observe they now pass through unresolved 
//  having a value in value2 fields will enable compilation to succeed, then can switch it to null 
//  No "Accept" header 
//  SPR-10122, ReflectivePropertyAccessor JavaBean property names compliance tests - setters 
//  Nest the concrete post-processor bean in the surrounding component. 
//  using default port (which is 80), so do not need to append the port (-1 means ignore) 
//  Mapping name lookup 
//  PathExposingHandlerInterceptor at chain.getInterceptors()[1] 
//  Use Jackson factory in order to have JSR-310 and Joda-Time modules registered automatically 
//  Still bound to original thread, but at least completed. 
//  Should we override default for including synonyms for meta-data lookups 
//  Not initialized yet: assume no active threads. 
//  This is an around advice: Invoke the next interceptor in the chain.   This will normally result in a target object being invoked.   Need re-wrapping of ReactiveTransaction until we get hold of the exception   through usingWhen. 
//  no need to evaluate right operand 
//  should have been autowired 
//  Load reference definition file 
//  A pattern without a currency code... 
//  Use specific name if given, else fall back to bean name. 
//  SPR-14405 
//  Now we have the bean instance, which may be a normal bean or a FactoryBean.   If it's a FactoryBean, we use it to create a bean instance, unless the 
//  Get the interception chain for this method. 
//  It's a CallbackPreferringPlatformTransactionManager: pass a TransactionCallback in. 
//  Allow for defaults fallback or potentially overridden accessor... 
/* 	 * If the token starts meets Java identifier conventions, it's in.	  */
//  ensure send doesn't block 
//  OpGT   OpGE   false - null is not > or >= something 
//  Root entry path must end with slash to allow for proper matching.   The Sun JRE does not return a slash here, but BEA JRockit does. 
//  Register SimpleUrlHandlerMapping for view controllers 
//  varargs boolean 
//  SPR-15603 
//  moving it to the end of the processor chain (for picking up proxies etc). 
//  Now let the annotation config loader process the configuration. 
//  No superclass -> processing is complete 
//  Should usually be the case for traditional JAR files. 
//  Data flow algorithm: put this basic block in a list blocks to process (which are blocks   belonging to a subroutine starting with this label) and, while there are blocks to process,   remove one from the list, put it in a list of blocks that have been processed, add a return   edge to the successor of subroutineCaller if applicable, and add its successor basic blocks 
//  As of Spring 4.1.2, we're using a custom ConnectionHandle for lazy retrieval   of the underlying Connection (allowing for deferred internal transaction begin   within the EclipseLink EntityManager) 
//  We don't use an IntroductionAdvisor, we can just add an advice that implements IntroductionInfo 
//  Do not modify the Session: just set the participate flag. 
//  Process superclass, if any 
//  Not a String -> use PropertyEditor's setValue.   With standard PropertyEditors, this will return the very same object;   we just want to allow special PropertyEditors to override setValue   for type conversion from non-String values to the required type. 
//  Transacted session created by this template -> commit. 
//  rely on default setting of resourceRef=false, no auto addition of java:/comp/env prefix 
//  4 will make it throw a checked exception - this will be wrapped by spel on the 
//  Clear cache in externally provided MetadataReaderFactory; this is a no-op   for a shared cache since it'll be cleared by the ApplicationContext. 
//  supply the implicit upper bound if none are specified 
//  Use the SessionFactory's DataSource for exposing transactions to JDBC code. 
//  Copy the message 
//  Always accept such event when the type is unknown 
//  Ignore - simply no detailed message then. 
//  mixed operators 
//  Try quick bean name or alias match first... 
//  SPR-16804 
//  Use PropertyEditor's setAsText in case of a String value. 
//  should automatically receive applicationEventPublisher reference 
//  Nest the concrete beans in the surrounding component. 
//  Register bean as disposable. 
//  flush headers 
//  If the parent has the annotation and isn't abstract it's an error 
//  -----------------------------------------------------------------------------------------------   Utility methods: control flow analysis algorithm   ----------------------------------------------------------------------------------------------- 
//  Fall back to system properties. 
//  If there is more data, it must start with the separator 
//  Check whether aspect is enabled to cope with cases where the AJ is pulled in automatically 
//  We're allowed to change the transaction settings of the JDBC Connection. 
//  Server-side only... 
//  trailing slash is optional 
//  Already an RMI object bound for the specified service name... 
//  SPR-13018 
//  Add property values based on autowire by type if applicable. 
//  one string then varargs string 
//  Request configuration not set in the context 
//  Keep processing error dispatch with regular request handle below 
//  Check socket factories for registry. 
//  If all factory methods have the same return type, return that type. 
//  At this point, it's a top-level override (probably XML), just having been parsed 
//  Annotation-based... 
//  SPR-17168 
// 	assertEquals("No objects active", 0, conf.getActive()); 
//  Convert array elements to Collection elements. 
//  Apply HTTP status code for error views, if specified.   Only apply it if we're processing a top-level request. 
//  no-arg ctor 
//  need to bind arguments by name as returned from the pointcut match 
//  This is used for Groovy. It's a bean reference to a customizer bean. 
//  SPR-11360 
//  A value is set but is 'null' 
//  If it's a per target aspect, emit the dummy instantiating aspect. 
//  Cannot find common ancestor 
//  SimpUserRegistry methods 
//  Check for decorated DataSource a la Spring's DelegatingDataSource 
//  No stack size delta. 
//  Check socket factories for exported object. 
//  Could be a primitive - likely. 
// ---------------------------------------------------------------------   Dependency resolution functionality  --------------------------------------------------------------------- 
//  If srcType and dstType are array types of equal dimension but different element types,   merge(srcType, dstType) = dim(srcType) - 1 | java/lang/Object. 
//  check that not broken by circular reference resolution mechanism 
//  For very general mappings (e.g. "/") we need to check 404 first 
//  Process individual @Bean methods 
//  WebSocket session ready, SockJS Session not yet 
//  An array type: compare the component type. 
//  Elvis 
//  Visit the label and the line number(s) for this bytecode offset, if any. 
//  static method 
//  Not initialized yet: assume initial pool size. 
//  anonymous port 
//  StompEncoder isn't involved 
//  optional string foo = 1; 
//  On Java 9, the message used to contain the module name: "java.base/java.lang.String cannot be cast..." 
//  Only apply encoding if content type is specified but does not contain charset clause already. 
//  Create view controller bean definition 
//  Try and keep the original accessor type 
//  one more attempt with the write lock 
//  So we match in number... 
//  A Class: We need to create an instance for every call. 
//  Simple replace 
//  set JPA 2.0 validation mode 
/*  * Builds on the {@link AbstractMBeanInfoAssembler} superclass to * add a basic algorithm for building metadata based on the * reflective metadata of the MBean class. * * <p>The logic for creating MBean metadata from the reflective metadata * is contained in this class, but this class makes no decisions as to * which methods and properties are to be exposed. Instead it gives * subclasses a chance to 'vote' on each property or method through * the {@code includeXXX} methods. * * <p>Subclasses are also given the opportunity to populate attribute * and operation metadata with additional descriptors once the metadata * is assembled through the {@code populateXXXDescriptor} methods. * * @author Rob Harrop * @author Juergen Hoeller * @author David Boden * @since 1.2 * @see #includeOperation * @see #includeReadAttribute * @see #includeWriteAttribute * @see #populateAttributeDescriptor * @see #populateOperationDescriptor  */
//  Throwing an exception if a CacheManager of the same name exists already... 
//  Lifecycle related methods 
//  use in any post-processing or initialization that occurs below prior to #refresh 
//  Create the JMX service URL. 
//  spouse for autowiring by name... 
//  Empty context path (root context) should not match to a URL with a context path 
//  SPR-15382 
//  @RequestMapping intentionally omitted 
//  Eagerly load the NestedExceptionUtils class to avoid classloader deadlock   issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607. 
//  Always let TypeMismatchNamingException through -   we don't want to fall back to the defaultObject in this case. 
//  --- build 
//  SPR-6354 
//  Assumably failed to flush changes to database. 
//  for RequiredAnnotationBeanPostProcessor.SKIP_REQUIRED_CHECK_ATTRIBUTE 
//  This case should happen only once, for the visitLabel call in the constructor. Indeed, if   compute is equal to COMPUTE_INSERTED_FRAMES, currentBasicBlock stays unchanged. 
//  6:00 
//  Validate column count. 
//  and won't think it's equal to B's NopInterceptor 
// 		} 
/*  Cross-server session lookup (e.g. same user connected to multiple servers)  */
//  Change to a new static target 
//  in particular for Java 8 default methods... 
//  was /**/surprise 
//  It is {*....} 
//  6 header bytes and 2 bytes for local_variable_type_table_length. 
//  Reset static counters in case tests are run multiple times in a test suite --   for example, via JUnit's @Suite. 
//  same for BLOB 
//  SPR-15384 
//  will fail if not resolvable in the file system 
//  Initialize immutable resolver and transformer chains 
//  Look up single bean by type 
//  t3 and t4 are found here as of Spring 2.0, since they are pre-registered   singleton instances, while testFactory1 and testFactory are *not* found   because they are FactoryBean definitions that haven't been initialized yet. 
//  ConversionService's IntegerToEnumConverterFactory) for use as index 
//  Static builder methods 
//  Proceed in any case. 
/* 	 * Return the propagation behavior.	 * <p>Must return one of the {@code PROPAGATION_XXX} constants	 * defined on {@link TransactionDefinition this interface}.	 * <p>The default is {@link #PROPAGATION_REQUIRED}.	 * @return the propagation behavior	 * @see #PROPAGATION_REQUIRED	 * @see org.springframework.transaction.support.TransactionSynchronizationManager#isActualTransactionActive()	  */
//  Mirrors the score computation logic in PathPattern 
//  statements can add attribute names to the constant pool, thereby changing its size! 
//  Rethrow a provider configuration exception (possibly with a nested cause) directly 
//  The meta-annotation should have been loaded by the parent 
//  Triggers headers resolution 
//  Recursive invocation, parsing placeholders contained in the   previously resolved placeholder value. 
//  it's actually ConfigurationClassPostProcessor's Environment that gets the job done here. 
//  -9000 
//  shouldn't go through to remote service 
// 	assertTrue("Some free", conf.getFree() > 0); 
//  ask for the result to be made into an Integer knowing that it will not fit 
//  Initialize the Scheduler instance... 
//  Only "byType" and "byName" supported, but maybe other default inherited... 
//  Accept "*/*" 
// 		v = expression.getValue(ctx,holder);  	} 
//  OpPlus 
//  first rollback 
//  Same unwrapping exception handling as above in above catch block 
//  The context has not yet been refreshed -> provide services such as   setting the parent context, setting the application context id, etc 
//  1xx Informational 
//  Check all beans of type SQLErrorCodes. 
//  Find all ViewResolvers in the ApplicationContext, including ancestor contexts. 
//  Possibly an IE 10 style value: "Wed, 09 Apr 2014 09:57:42 GMT; length=13774" 
//  and annotation presence), use target class instead of interface-based proxy. 
//  trigger lazy resolution 
//  name attribute is not supported by <label/> 
//  Then, check annotation on factory method, if applicable 
//  length of W/ + " + 0 + 32bits md5 hash + " 
//  interfaces 
//  Purge empty entries on access since we don't have a clean-up thread or the like. 
//  not annotated 
//  method call 
//  Since the map is a LinkedMultiValueMap, we depend on the ordering of   elements in the map and reverse the order of the keys in order to traverse 
//  An EJB3 Session Bean... 
//  Opt in for ERROR dispatch 
//  implementing Expression 
//  assumes rpc.setPattern("java.lang.Object.hashCode"); 
//  accessible as property field   accessible as property through getter/setter   accessible as property through getter/setter 
//  should not match, because there's not .gif extension in there 
//  Create "empty" transaction: no actual transaction, but potentially synchronization. 
//  We're running with connection release mode "on_close": We're able to reset   the isolation level and/or read-only flag of the JDBC Connection here.   Else, we need to rely on the connection pool to perform proper cleanup. 
//  All values if none set 
//  and rename this class 
//  9.4.20.v20190813: ExtensionFactory (abstract class -> interface) 
//  T <= T 
//  children[0] is the type of the constructor, don't want to include that in argument processing 
//  non-inherited class-level annotation; note: @Order is not inherited 
//  Create the set of field types that may be annotated with @DateTimeFormat.   Note: the 3 ReadablePartial concrete types are registered explicitly since   addFormatterForFieldType rules exist for each of these types   (if we did not do this, the default byType rules for LocalDate, LocalTime,   and LocalDateTime would take precedence over the annotation rule, which   is not what we want) 
//  This will be set by DummyPersistenceProvider 
//  This will be cached anyway as the earlyPut has updated the cache before 
//  Use default valueOf methods for parsing text. 
//  Enforce namespace aware for XSD... 
//  container is stopped but should nevertheless invoke the runnable argument 
//  MESSAGE 
//  JiBX does not support SAX natively, so we write to a buffer first, and transform that to the handlers 
//  JSR-250 1.1 API (as included in Java EE 6) not available - simply skip. 
//  SPR-10515 
//  Verify the result 
//  Ordered, and the rest. 
//  getting request parameters will consume the request body 
//  Special case: there is one parameter left and it is an array and it matches the varargs   expected argument - that is a match, the caller has already built the array. Proceed with it. 
//  We need to create a method invocation... 
//  Bug in javac in JDK <9: annotation array excludes enclosing instance parameter   for inner classes, so access it with the actual parameter index lowered by 1 
//  Separate implicit return parameters from explicit parameters... 
//  Hits joinpoint 
//  log4j-to-slf4j bridge -> we'll rather go with the SLF4J SPI;   however, we still prefer Log4j over the plain SLF4J API since   the latter does not have location awareness support. 
//  2 invocations 
//  Ignore, no HandlerExceptionResolver is fine too. 
//  Result handler available -> let's clear the stored reference since 
//  SPR-15122 
//  --- SmartContextLoader - processContextConfiguration() ------------------ 
/* 	 * See SPR-6978	  */
//  10004: Reserved.   The specific meaning might be defined in the future. 
//  trailing slash 
//  DataSource if not explicitly specified. 
//  check PrintStackTrace 
//  Fall through if setAccessible fails with InaccessibleObjectException on JDK 9+   (on the module path and/or with a JVM bootstrapped with --illegal-access=deny) 
//  Hibernate 5.0/5.1 getFlushMode() with FlushMode return type 
//  SPR-16587 
//  both the upper and lower bounds of the right-hand side must be   completely enclosed in the upper and lower bounds of the left-   hand side. 
//  To handle the case of an inter-bean method reference, we must explicitly check the   container for already cached instances. 
//  Can't propagate error to client, so just log 
//  Cast is safe, as CallbackFilter filters are used selectively. 
//  Skip the 'fields' array field. 
//  methods are inherited 
//  Next, register the BeanPostProcessors that implement Ordered. 
//  Type-based argument resolution 
//  Trim the text value to avoid unwanted whitespace   caused by typical XML formatting. 
//  Encountered a new context hierarchy level?
//  Using distance will ensure a more accurate match is discovered,   more closely following the Java rules. 
// setValueExpectError("arrayContainer.longs[1]", new ArrayList<String>()); 
//  SPR-15123 
//  Probably a generic type mismatch between interface and impl as reported in SPR-12237 / HV-1011   Let's try to find the bridged method on the implementation class... 
//  Will be ExposeInvocationInterceptor, synthetic instantiation advisor, 2 method advisors 
//  SPR-7905 
//  Should trigger close method expected by EntityManagerFactory mock 
//  SPR-10785: set callbacks directly on the instance instead of in the   enhanced class (via the Enhancer) in order to avoid memory leaks. 
//  Eagerly load the ContextClosedEvent class to avoid weird classloader issues   on application shutdown in WebLogic 8.1. (Reported by Dustin Woods.) 
//  Here we do not extract the labels corresponding to the attribute content. This would   require a full parsing of the attribute, which would need to be repeated when parsing   the bytecode instructions (see below). Instead, the content of the attribute is read one   frame at a time (i.e. after a frame has been visited, the next frame is read), and the   labels it contains are also extracted one frame at a time. Thanks to the ordering of   frames, having only a "one frame lookahead" is not a problem, i.e. it is not possible to   see an offset smaller than the offset of the current instruction and for which no Label   exist. Except for UNINITIALIZED type offsets. We solve this by parsing the stack map   table without a full decoding (see below).
//  SPR-10779 
//  SPR-10513 
//  We have no fallback text to consider. 
//  SPR-16453 
//  It will complain if it can't get the proxy 
//  'the match' it starts with a separator 
//  Rethrow JMSException to indicate an infrastructure problem   that may have to trigger recovery... 
//  optional int32 blah = 1; 
//  Convert String array to a comma-separated String.   Only applies if no PropertyEditor converted the String array before.   The CSV String will be passed into a PropertyEditor's setAsText method, if any. 
//  10=November 
//  gh-22543 
//  boolean operators 
//  All tests are in superclass. 
//  stack height 
//  Detect package-protected NullBean instance through equals(null) check 
//  ignore RemoteAccessException as probably setup issue with JAX-WS provider vs JAXB 
//  Resolves to EntityManagerFactory or EntityManager. 
//  Allow for the collection of early ApplicationEvents, 
//  Suppression required due to bug in javac in Java 8: presence of default method in a Serializable interface 
//  Determine ResourceLoader to use. 
//  First, see if we have a cached value. 
//  Not serializable... Servlet containers usually automatically   unbind the attribute in this case. 
//  SPR-15125 
//  TODO same as old age to avoid ordering effect for now
//  requires type conversion of '1' to 1 
//  Then without 
//  Existing transaction that we participate in, controlled outside   of the scope of this Spring transaction manager -> try to register   an afterCompletion callback with the existing (JTA) transaction. 
//  Assert 
//  XhrTransport methods 
//  Ignored for the common pool. 
//  checkcast each argument against the target's argument types 
//  Invalid message format - probably not intended for formatting,   rather using a message structure with no arguments involved... 
//  A bridge method was passed in but we couldn't find the bridged method.   Let's proceed with the passed-in method and hope for the best... 
//  Handle JPA 2.1 isJoinedToTransaction method for the non-JTA case. 
//  array of lists 
//  Register component for the surrounding <context:annotation-config> element. 
//  DELETE 
//  Compute the number of locals, ignoring TOP types that are just after a LONG or a DOUBLE, and   all trailing TOP types. 
//  disable log file 
//  create the method factory bean 
//  Otherwise, just the given exception as-is 
//  Unsupported Map operations 
//  -- AND -- 
//  Parameter annotation 
//  Access short array 
//  Add the main interceptor (typically an Advisor). 
//  Determine if each loader can load a context from the mergedConfig. If it   can, let it; otherwise, keep iterating. 
//  If the transaction is still active... 
//  What's a reasonable expectation for _any_ server or developer machine load?   9 seconds?
//  with null conversion (null -> false) 
//  No HttpSession available -> no mutex necessary 
//  The output of the accessor will be a primitive but from the block above it might be null,   so to have a 'common stack' element at skipIfNull target we need to box the primitive 
//  Unknown Number subtypes -> best guess is double addition 
//  Lenient fallback: dummy factory in case of original factory not found... 
//  No custom editor -> check BeanWrapperImpl's default editors. 
//  6 
//  perform tests with classValuesAsString = false (the default) 
//  Use NumberFormat for rendering value. 
//  Consider a pre-bound connection as transaction. 
//  Next, invoke the BeanFactoryPostProcessors that implement Ordered. 
//  always passes 
//  Convert keys and values to respective target type, if determined. 
//  SPR-17525 
//  Start new transaction with default commit semantics 
//  The following inner classes need to remain since lambdas would not retain their   declared generic types (which need to be seen by the underlying WebSocket engine) 
//  Should we access call parameter meta-data info or not 
/* 	 * Helper method for printing the AST with indentation	  */
//            
//  Preserve rollback-on-close semantics. 
//  varargs with nothing needing conversion 
//  Reset static state 
//  stack: left/right/right   stack: left/right 
//  SPR-11970 
//  Standard headers (as defined in the spec) 
//  --- local tests ------- 
//  Also business exception!?
//  The target bean should be ignored in favor of the scoped proxy. 
//  Determine initial delay 
//  Custom... 
//  iterator() 
//  Regular case: straight bean instance, with BeanFactory available. 
//  Instance methods, relative to a base UriComponentsBuilder... 
//  Create a ByteVector to hold a 'type_annotation' JVMS structure.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.20. 
//  Treat it like a property...   The readerCache will only contain gettable properties (let's not worry about setters for now). 
//  nothing to assert 
//  Invoke the handler method with appropriate arguments. 
//  optional handling 
//  No synchronization necessary... 
//  Determine init method and destroy method. 
// ---------------------------------------------------------------------   Implementation of JavaMailSender  --------------------------------------------------------------------- 
//  2. external-general-entities and dtd support enabled 
//  assertions in init() should succeed 
//  Could not transmit the exception to the caller with default executor 
//  Create the embedded database first 
//  MySQL style escapes '\\' 
//  Remove the JDBC connection holder from the thread, if exposed. 
//  Interpret location as relative to the web application root directory. 
//  final class HttpServlet3RequestFactory implements HttpServletRequestFactory 
//  Process last-modified header, if supported by the handler. 
//  Lazily establish a shared Connection, if necessary. 
//  No corresponding class found at all 
//  JiBX compiler is currently not compatible with JDK 9 
//  SPR-10771 
//  multi arg ctor that includes primitives 
//  Disallowing access to the spring.profiles.active property means that   the BeanDefinitionReader won't be able to determine which profiles are   active. We should see an INFO-level message in the console about this   and as a result, any components marked with a non-default profile will 
//  Spring 
//  Use current user schema if no schema specified... 
//  Generic header accessors 
//  of the new sub-classes. 
//  Stop shared Connection early, if necessary. 
//  either targetObject or targetBeanName specified 
//  No result handler set yet -> let the setResultHandler implementation   pick up the result object and invoke the result handler for it. 
//  Fail if we are still missing properties. 
//  Filter will be called but not do anything, so first doit() will be invoked 
//  Skip over any block comments 
//  This is an around advice: Invoke the next interceptor in the chain.   This will normally result in a target object being invoked. 
//  Make sure the interface is loaded from the  parent class loader 
//  It doesn't have a pointcut so we assume it applies. 
//  Try to find cached factory for ResourceBundle list: 
//  requires type conversion of 37 to '37' 
//  Start the shared Connection, if any. 
/*  Locale -> BeanFactory  */
//  1 
//  Remove all remaining references to any removed contexts from the 
//  Check that we're not parsing our own bean definition,   to avoid failing on unresolvable placeholders in properties file locations. 
//  Retrieve canonical http schema mapping even for https declaration 
//  ignoreUnresolvableNestedPlaceholders 
//  Unsupported methods follow: no support for javax.naming.Name 
//  Fallback 
//  Method parameter predicates 
//  method takes a string and we are passing an Integer 
//  Build PDF document. 
//  Apply JmsListenerConfigurer beans from the BeanFactory, if any 
// checkInvariants(containerEmfb); 
//  Declare binding disabled (e.g. via @ModelAttribute method) 
//  If we haven't already registered it... 
//  Use new temporary FileUpload instance if the request specifies   its own encoding that does not match the default encoding. 
//  Regular "jar:file:...myjar.jar!/myentry.txt" 
//  ctor varargs 
//  May not be possible to decode... 
//  No equals 
//  --- Then --- 
//  create parser and set variable 'primes' as the array of integers 
//  Check for Tomcat's new copyWithoutTransformers on InstrumentableClassLoader first 
//  Adapt to TransactionAspectSupport's invokeWithinTransaction... 
//  nothing below trace 
//  Register template loaders that are supposed to kick in early. 
//  The provider of table meta-data 
//  Lazy cache initialization on access 
//  evaluates to "Idvor" 
//  index1 is 2 at the start - the 'intArray[#root.index1++]' should not be evaluated twice!   intArray[2] is 3 
//  Calling 'Fruit(int i, String... strings)' - returns int+length_of_strings 
//  Maybe it's okay there is no content type, if there is no content.. 
//  ASM specific access flags.   WARNING: the 16 least significant bits must NOT be used, to avoid conflicts with standard   access flags, and also to make sure that these flags are automatically filtered out when   written in class files (because access flags are stored using 16 bits only). 
//  This annotation type is not directly annotated with Indexed so we can use   the index to find candidates 
//  Cache to hold filename lists per Locale 
//  Same if no concrete media type 
//  Calling foo(String) with (String) is exact match 
//  varargs int 
//  Parse reference definition properties 
//  Alter array returned from synthesized annotation 
//  ? super T <= ? super S if S <: T 
//  Increment the sequence column... 
//  SPR-11225 
// ---------------------------------------------------------------------   Management of custom editors  --------------------------------------------------------------------- 
/* 	 * We've found the start of a binding pointcut at the given index into the	 * token array. Now we need to extract the pointcut body and return it.	  */
//  SPR9511 
//  SPR-14410 
//  Clean up the client if we created it in the constructor 
//  It is OK to use the cached accessor 
//  Maybe an inner class name using the dot name syntax? Need to use the dollar syntax here...   ClassUtils.forName has an equivalent check for resolution into Class references later on.
//  no destination 
//  Make given non-transactional DataSource available for SchedulerFactory configuration. 
//  Nothing to discard since we pass data buffers on immediately.. 
//  On WebSphere, in non-compliant mode, for a "/foo/" case that would be "/foo"   on all other servlet containers: removing trailing slash, proceeding with   that remaining slash as final lookup path... 
//  We don't want that GMT fallback... 
//  Subclasses for specific HTTP status codes 
//  SPR-9942 
//  SPR-11357 
//  Copy and reset the nextAttribute field so that it can also be used in MethodWriter. 
//  Clean up any resources used by a multipart request. 
//  if unable to set the value the operand is not writable (e.g. 1-- ) 
//  Register JobDetails. 
//  Expecting count=0 after test2IncrementCount1() since REQUIRED transactions   participate in the existing transaction (if present), which in this case is the   transaction managed by the TestContext framework which will be rolled back   after each test method. 
/* 	 * Return true if the parameter name binding for the given parameter	 * index has not yet been assigned.	  */
// ---------------------------------------------------------------------   ServletResponse interface  --------------------------------------------------------------------- 
//  Unsupported marshalling 
//  Ternary 
//  Autowiring by name or by type 
//  Explicit value provided as part of the bean definition. 
//  Reset previous status values. 
//  This is deprecated; to be removed along with PropertyPlaceholderConfigurer itself. 
//  Check raw type first... 
//  Scan twice in order to find errors in the bean definition compatibility check. 
//  instructions). 
//  worth a closer look 
//  wac.refresh();   note that the context is not set as the ROOT attribute in the ServletContext! 
//  Java 8 
//  --- 5xx Server Error --- 
//  Read the access_flags, this_class, super_class, interface_count and interfaces fields. 
//  concurrencyLevel of 3 ends up as 4 (nearest power of 2) 
// ---------------------------------------------------------------------   Adapt superclass registerBean calls to AnnotatedBeanDefinitionReader  --------------------------------------------------------------------- 
//  Do not log warning for serializer not found (note: different message wording on Jackson 2.9) 
//  Record the fact that 'label' designates a subroutine, if not already done. 
//  Use the specified ClassLoader to resolve local classes. 
//  4 
//  Let cached signals ("foo" and error) be published.. 
//  -----------------------------------------------------------------------------------------------   Implementation of the MethodVisitor abstract class   ----------------------------------------------------------------------------------------------- 
//  Perform explicit wiring based on the specified bean definition. 
//  Now let's cause the method to exit via exception and ensure it doesn't cause a retry. 
//  SPR-11488 
//  Service locator for a specific bean name 
//  Here i'm going to change which hasRole() executes and make it one of my own Java methods 
//  factory-method requires args 
//  this is not double wildcard, it's / then **acb (an odd, unnecessary use of double *) 
// ----------------------------------------------------------------------------   Implementation of org.apache.commons.pool2.PooledObjectFactory interface  ---------------------------------------------------------------------------- 
//  null value 
//  We don't trust the CCI driver: It might throw RuntimeException or Error. 
//  ControllerAdvice classes 
//  Adapt flush mode and store previous isolation level, if any. 
//  Validate those beans are indeed wrapped by a proxy 
//  already 2: getSpouse + getNestedIndexedBean calls above 
//  3 
//  Visit the fields and methods. 
//  SPR-12553 
//  /hotels/* + booking -> /hotels/booking 
// ---------------------------------------------------------------------   Implementation of ResourceLoader interface  --------------------------------------------------------------------- 
//  Some non-serializable entries -> serialize a temporary MessageHeaders copy 
//  We need to resolve the view name. 
//  Deal with wildcard bounds 
//    /foo/* mapping   
//  singleton, static 
//  By construction, the second outgoing edge of a basic block that ends with a jsr instruction   leads to the jsr target (see {@link #FLAG_SUBROUTINE_CALLER}). 
//  Number of times to try compiling an expression before giving up 
//  SPR-13554: convention mapping mixed with AlaisFor annotations   locations doesn't apply because it has no AlaisFor annotation 
//  no errors 
//  # can appear in filenames, java.net.URL should not treat it as a fragment 
//  Same comment as above for the RuntimeVisibleTypeAnnotations attribute. 
//  Service to be created through generated class. 
//  This is chopping off the 'L' to leave us with "java/lang/String" 
//  If dstTypes[dstIndex] has never been assigned, merge(srcType, dstType) = srcType. 
//  2 
//  Without custom multipart types supported 
//  equal 
// ---------------------------------------------------------------------   Static factory methods  --------------------------------------------------------------------- 
//  We're checking nested generic variables now... 
//  HttpWebHandlerAdapter handles unresolved errors 
// ---------------------------------------------------------------------   Implementation of FactoryBean interface  --------------------------------------------------------------------- 
//  This means the operand is not decrementable 
//  List and Array navigation 
//  widening of int 3 to double 3 is OK 
//  We need to create a proxy for this... 
//  add foo property -> validation should fail only on missing 'bar' property 
//  Assert that the handler method is not a suspending one. 
//  Fallback: expecting TomcatInstrumentableClassLoader's getThrowawayClassLoader 
//  Register bean definition under primary name. 
//  Visit the local variable type annotations of the RuntimeInvisibleTypeAnnotations attribute. 
//  The broker may not have removed the session yet 
/* 	 * https://opensource.atlassian.com/projects/spring/browse/SPR-2754	  */
//  Should not be used other than to delegate to   RequestDataValueDataProcessor 
//  synchronous 
//  Does not trigger advice or count 
//  filter proxy, we'll have to resort to lazy initialization. 
//  Extract value from attribute or sub-element. 
//  Set custom exception translator 
//  SPR-13218 
//  Is it a long ?
//  definition.getConstructorArgumentValues().addGenericArgumentValue("foo"); 
//  MergedAnnotation should follow the same class loader logic 
//  Invocation on ConnectionProxy interface coming in... 
//  Short "0" or "-1" like values are never valid HTTP date headers...   Let's only bother with SimpleDateFormat parsing for long enough values. 
//  Regular case: failed while active.   Invoke ErrorHandler if available. 
//  We need to care for the default handler directly, since we need to   expose the PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE for it as well. 
//  BigDecimal 
//  Special case when the key is an unquoted string literal that will be parsed as   a property/field reference 
//  Register annotation config processors, if necessary. 
//  Simulate @PreDestroy life-cycle event 
/*  Secondary lookup across all sessions by id  */
//  Passing (Super,String) on call to foo(Sub,String) is not a match 
//  Are we using generated key columns 
// assertEquals("Any other setter does not increment", 2, adrian1.getAge()); 
//  Check to see if there is a custom editor, 
//  Assumably PROPAGATION_SUPPORTS or PROPAGATION_REQUIRED. 
//  Test return value 
//  ServerHttpRequest delegation methods... 
//  ApplicationEventMulticaster not initialized yet - no need to remove a listener 
// ---------------------------------------------------------------------   Implementation of relevant AbstractBeanFactory template methods  --------------------------------------------------------------------- 
//  Ignore, UrlLinkParser will take care 
//  assert that enhancement is working 
//  Doesn't match a method from Throwable 
//  overridden attributes: 
//  If already included or response already committed, perform include, else forward. 
//  JNDI name lookup - may still go to a local BeanFactory. 
//  We need to override just this bean definition, as it may reference other beans   and we're happy to take the parent's definition for those.   Always use prototype scope if demanded. 
//  Plain log methods 
//  block size doubles each time 
//  We don't want to expose the control interface 
//  To determine which situation it is, the AccessException will contain a cause.   If the cause is an InvocationTargetException, a user exception was thrown inside the constructor.   Otherwise the constructor could not be invoked. 
//  GET 
//  override type info?
//  No special handling: simply use no-arg constructor. 
//  testing some ????? behavior
//  Use the type cast feature   Replace etc methods on advised should be same as on ProxyFactory 
//  Check inserts match 
//  Profiles {foo, bar} should not hash to the same as {bar,foo} 
//  Should have loaded without error 
//  [Implied] super / extends cannot be mixed 
//  Next is either:   '}' - end of list   ',' - more expressions in this list   ':' - this is a map!   list with one item in it 
//  For backwards compatibility, we ignore null names here...   And since ConcurrentHashMap cannot store null values, we simply take null   as a remove from the Map (with the same result from lookupVariable below). 
//  message will be: EL1063E:(pos 20): A problem occurred whilst attempting to set the property   'flibbles': 'Cannot set flibbles to an object of type 'class java.lang.String'' 
//  Check for listener beans and register them. 
//  string concatenation 
//  A match test returned maybe - if there are any subtype sensitive variables   involved in the test (this, target, at_this, at_target, at_annotation) then   we say this is not a match as in Spring there will never be a different 
//  BeanReference 
//  The callbacks to use. Note that these callbacks must be stateless. 
//  Install facade expecting a call 
//  No BindingResult available as request attribute:   Probably forwarded directly to a form view.   Let's do the best we can: extract a plain target if appropriate. 
//  Add the AopInfrastructureBean marker to indicate that the scoped proxy 
/* 	 * Find the argument index with the given type, and bind the given	 * {@code varName} in that position.	  */
//  Delegating Map implementation 
//  qualifiers 
//  These worked prior, but validating they continue to work 
//  Standard JPA transaction begin call for full JPA context setup... 
//  Perform was-null check if necessary (for results that the JDBC driver returns as primitives). 
//  env.setActiveProfiles(DEV_ACTIVE);  env.setDefaultProfiles("default"); 
//  Access through is method 
//  We're on an earlier version of Tomcat, probably with Spring's TomcatInstrumentableClassLoader 
//  else varNames.size must be 0 and we have nothing to bind. 
//  These fields are used when the indexer is being used as a property write accessor.   If the name and target type match these cached values then the cachedWriteAccessor   is used to write the property. If they do not match, the correct accessor is   discovered and then cached for later use. 
//  No aop.xml present on the classpath -> treat as 'disabled' 
//  trim out the nulls first 
//  Unlikely to ever get here, but it must be handled...
//  Treat it like a property 
//  Transport error => no more fallback 
//  do transaction checks 
//  If we enforced that adjacent captures weren't allowed,   this would do it (this would be an error: /foo/{bar}{boo}/) 
//  Verify the type of event that was published. 
//  provider 
//  PROPERTYORFIELDREFERENCE 
//  CONNECTED 
//  Also specifically test we get different instances 
//  implement an unrelated interface first (SPR-16288) 
//  Not sure we can get here because -1 is OpMinus 
//  Can cause infinite recursions in case of self-references 
//  got no BindingResult - can only do standard rejectValue call   with automatic extraction of the current field value 
//  Failed to introspect target method, probably because it has been loaded   in a special ClassLoader. Let's try the declaring ClassLoader instead... 
//  lower case encoding 
//  Eagerly check singleton cache for manually registered singletons. 
//  SPR-16590 
//  Avoid further encoding (in the case of strictEncoding=true) 
// ---------------------------------------------------------------------   Convenience methods for working with formatted Strings  --------------------------------------------------------------------- 
//  TypeReference 
//  CachedIntrospectionResults should delegate to ExtendedBeanInfo 
//  We've already implicitly added this interface.   This call should be ignored without error 
//  comes from "resource.xml" 
//  Passing (Integer,String) on call to (Integer,String[]) is exact match 
//  Internal methods for UserRegistryMessageHandler to manage broadcasts 
//  Start async before Read/WriteListener registration 
//    
//  Ensure comment prefix aliases are honored during the merge. 
//  Confirming AntPathMatcher behaviour: 
//  explicitly registered overriding bean   scanned same file twice   scanned equivalent class twice 
//  Check the class' major_version. This field is after the magic and minor_version fields, which 
//  super_class is after the access_flags and this_class fields (2 bytes each). 
//  SPR-12903 
//  Fully resolve parameter names and argument values. 
//  look up single bean by type, with support for 'primary' beans 
//  No way to access the request config of the HTTP client so no way to "merge" our customizations 
//  Are there array dimensions?
//  May need to add implicit join point arg name... 
//  Retain original ordering of entries 
//  managed by the factory or a temporary one for the given invocation. 
//  If not returned before: return original request. 
//  The other numeric operators 
//  Create script factory bean definition. 
//  null condition 
/* 	 * Register fields that should be allowed for binding. Default is all	 * fields. Restrict this for example to avoid unwanted modifications	 * by malicious users when binding HTTP request parameters.	 * <p>Supports "xxx*", "*xxx" and "*xxx*" patterns. More sophisticated matching	 * can be implemented by overriding the {@code isAllowed} method.	 * <p>Alternatively, specify a list of <i>disallowed</i> fields.	 * @param allowedFields array of field names	 * @see #setDisallowedFields	 * @see #isAllowed(String)	  */
// -------------------   SPR-3357 classes  ------------------- 
//  stack: <nothing> 
/* 	 * Set the service locator interface to use, which must have one or more methods with	 * the signatures {@code MyType xxx()} or {@code MyType xxx(MyIdType id)}	 * (typically, {@code MyService getService()} or {@code MyService getService(String id)}).	 * See the {@link ServiceLocatorFactoryBean class-level Javadoc} for	 * information on the semantics of such methods.	  */
//  Handle derived types 
//  Apply cache settings, if any 
//  Still matches subclass of MyTestBean 
//  Count minus duplicate 
//  If the target is a static one and the advice chain is frozen,   then we can make some optimizations by sending the AOP calls 
//  Fast-forward 31 minutes 
//                
//  type nor method are public 
//  Should not have invoked constructor for the proxy instance 
//  Null old pattern: should ignore 
//  Execute receive within transaction. 
//  /hotels/** + booking -> /hotels/**/booking 
//  Perform autowiring (also applying standard factory / post-processor callbacks). 
//  If no bean id is given auto generate one using the ReaderContext's BeanNameGenerator 
//  named constructor arguments 
//  Might be better with a as a variable although it would work as a property too...   Variable references using a '#' 
//  At this point we know it wasn't a user problem so worth a retry if a better candidate can be found 
//  but always false 
//  Should we access insert parameter meta-data info or not 
//  Prepend with slash if not already present. 
//  As late as possible (Reactor Netty commonly used for WebClient) 
//  Callback code threw application exception... 
//  OpDivide 
// ---------------------------------------------------------------------------------------   Convenience methods for browsing messages  --------------------------------------------------------------------------------------- 
//  SPR-15131 
//  Consider name and any aliases 
//  OpLE 
//  Generated by the protocol buffer compiler.  DO NOT EDIT!   source: sample.proto 
//  Prepare this context for refreshing. 
//  No need to lookup: the ModelAndView object contains the actual View object. 
//  HttpMessageEncoder... 
//  SPR-14066 
//  Lazily connect to MBeanServer if necessary. 
//  Basic chain: property access then method access 
//  A localvar_target has a variable size, which depends on the value of their table_length   field. It also references bytecode offsets, for which we need labels. 
//  Whether a F_INSERT stack map frame must be inserted before the current instruction. 
//  Check socket factories for RMI registry. 
//  If we have more than this number of args, we have constructor args 
//  Set read-only flag. 
//  for all of them 
//  No target Connection held -> fetch one. 
//  Headers will be flushed at the first write 
//  Ensure we have at least some HandlerAdapters, by registering 
//  no session yet 
//  property not set, only the object itself 
//  assertEquals(null, state.getRootContextObject().getValue()); 
//  all class path resources with the given name 
//  Check for SessionFactory's DataSource. 
//  RegexPathElement 
//  test default message without and with args 
//  It is critical that we override this method for performance 
//  Check cost of repeated construction of beans with method overrides 
//  SPR-12198: mySource should 'win' as it was registered manually 
//  Returns empty list 
//  If it starts with a reference prefix... 
//  const_value_index, CONSTANT_Integer 
//  Enforce comment prefix aliases within the local @SqlConfig. 
//  SPR-8255 
//  Route, metadata 
//  Needs to happen after listener registration but before setStatisticsEnabled 
//  mediaType1.getType().equals(mediaType2.getType())   audio/* < audio/basic 
//  Need to rebuild the path without the duplicate adjacent separators 
//  This had better NOT be 
// /CLOVER:OFF 
// 		===> Expression '3+4+5+6+7-2' - AST start  		OperatorMinus  value:(((((3 + 4) + 5) + 6) + 7) - 2)  #children:2  		  OperatorPlus  value:((((3 + 4) + 5) + 6) + 7)  #children:2  		    OperatorPlus  value:(((3 + 4) + 5) + 6)  #children:2  		      OperatorPlus  value:((3 + 4) + 5)  #children:2  		        OperatorPlus  value:(3 + 4)  #children:2  		          CompoundExpression  value:3  		            IntLiteral  value:3  		          CompoundExpression  value:4  		            IntLiteral  value:4  		        CompoundExpression  value:5  		          IntLiteral  value:5  		      CompoundExpression  value:6  		        IntLiteral  value:6  		    CompoundExpression  value:7  		      IntLiteral  value:7  		  CompoundExpression  value:2  		    IntLiteral  value:2  		===> Expression '3+4+5+6+7-2' - AST end 
//  Remove from old position, if any 
// -------------------------------------------------------------------------   Convenience finder methods for HQL strings  ------------------------------------------------------------------------- 
//  ignore if just being asked for ValidatorFactory 
//  those called by the main subroutine, etc. 
//  Reset internal context state. 
//  Verifying dependency injection: 
//  The exception position '0' isn't right but the overhead of creating   instances of this per node (where the node is solely for error reporting)   would be unfortunate. 
//  case 3 
//  A plain value: convert it to a Collection with a single element. 
//  Guarantee initialization of beans that the inner bean depends on. 
//  Expose previous nestedPath value. 
//  Transactional 
//  Evaluate the conditions *without* the result object because we don't have it yet... 
/* 	 * Register fields that should <i>not</i> be allowed for binding. Default is none.	 * Mark fields as disallowed for example to avoid unwanted modifications	 * by malicious users when binding HTTP request parameters.	 * <p>Supports "xxx*", "*xxx" and "*xxx*" patterns. More sophisticated matching	 * can be implemented by overriding the {@code isAllowed} method.	 * <p>Alternatively, specify a list of <i>allowed</i> fields.	 * @param disallowedFields array of field names	 * @see #setAllowedFields	 * @see #isAllowed(String)	  */
//  SPR-13705 
//  unchanged 
//  Visit the RuntimeInvisibleTypeAnnotations attribute. 
//  parseCheck("(#max = {|x,y| $x > $y ? $x : $y }; #max(5,25))", "(#max={|x,y| ($x > $y) ? $x : $y };#max(5,25))");   }   
//  The number of times compilation was attempted and failed - enables us to eventually 
//  Custom global default?
//  Can't be shared; there is no such thing as a read-only field 
//  There must be a separator ahead of this thing   currentPE SHOULD be a SeparatorPathElement 
//  Store the value, potentially overriding a value from an attribute   of the same name found higher in the annotation hierarchy. 
//  Update maxLocals and currentLocals. 
//  If this local has never been assigned in this basic block, it is still equal to its value   in the input frame. 
//  same as java.sql.Connection.TRANSACTION_REPEATABLE_READ; 
//  Use Msg.newBuilder() to construct. 
//  gh-22531 
// ---------------------------------------------------------------------   Template methods to be implemented by subclasses  --------------------------------------------------------------------- 
//  SPR-11830 
//  create an array of integers 
//  If this method_info must be copied from an existing one, copy it now and return early. 
//  Filter out BeanPostProcessors that are part of the AOP infrastructure, 
//  will only look for the exact port 
//  by an @Bean method, as of 4.2... 
//  same as java.sql.Connection.TRANSACTION_READ_UNCOMMITTED; 
//  SPRING PATCH END 
//  At least the JTA TransactionManager available - use that one. 
//  'after' callbacks are reversed, so 2 comes before 1. 
//  Have not gone down false branch 
//  A previously detected exception with proper bean creation context already,   or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry. 
//  getClassLoader() returning null indicates the bootstrap ClassLoader 
//  now see if we can match methods with arguments that have supertype arguments 
//  Extra cast necessary for compiling on JDK 9 plus running on JDK 8, since   otherwise the overridden ByteBuffer-returning rewind method would be chosen   which isn't available on JDK 8. 
//  Register the target bean as separate bean in the factory. 
//  Mock must never have been called 
//  non-singleton, static 
//  resulting in a property descriptor including the non-standard setFoo method 
//  Check qualifier first 
//  An instance of the scripted class: let's return it as-is. 
//  The child ClassLoader used to load the compiled expression classes 
//  Extract individual config locations. 
//  SPR-17535 
//  No user-specified interfaces: check whether target class is an interface. 
//  method name should not be registered 
//  Language Spec 4.5.1. Type Arguments and Wildcards 
// -------------------------------------------------------------------------   Core methods used by NamedParameterJdbcTemplate and SqlQuery/SqlUpdate  ------------------------------------------------------------------------- 
//  Stop using the temporary ClassLoader for type matching. 
//  been published. 
//  non-static method, no args, void return 
//  extract default param for the definition 
//  Parse and store the target_type structure. 
//  is not required and pop it off. 
//  This code block checks whether the left or right operand is null and handles 
// ---------------------------------------------------------------------   Implementation of JDBC 4.1's getParentLogger method  --------------------------------------------------------------------- 
//  first: rollback 
//  Should not match a separator 
//  this.beanOrName must be a String representing the bean name if   this.resolvedBean is null. 
//  a Throwable from a MessageListener MUST simply be swallowed... 
//  needs The Sundays compiler; must NOT throw any exception here... 
//  Strip prefix from path to analyze, to not treat it as part of the   first path element. This is necessary to correctly parse paths like   "file:core/../core/io/Resource.class", where the ".." should just 
//  subscribe 
//  SPR-16339 
//  Explicitly pass a String argument, avoiding Log4j's argument expansion   for message objects in case of "{}" sequences (SPR-16226) 
//  Apply SmartInstantiationAwareBeanPostProcessors to predict the   eventual type after a before-instantiation shortcut. 
//  ignore beans where the class is not resolvable 
//  Ensure that the type variable (e.g., T) is declared directly on the method   itself (e.g., via <T>), not on the enclosing class or interface. 
//  first commit 
//  equals 2 calls on shared nop, because it's first and sees calls 
//  If there are exception handler blocks, each instruction within a handler range is, in   theory, a basic block (since execution can jump from this instruction to the exception   handler). As a consequence, the local variable types at the beginning of the handler   block should be the merge of the local variable types at all the instructions within the   handler range. However, instead of creating a basic block for each instruction, we can   get the same result in a more efficient way. Namely, by starting a new basic block after   each xSTORE instruction, which is what we do here. 
//  Find unique EntityManagerFactory bean in the context, falling back to parent contexts. 
//  index1 is 3 intArray[3] is 4 
//  As of 5.1, we're also setting Hibernate's read-only entity mode by default. 
//  audio/basic == text/html 
//  Save original default locale. 
//    This list in the <i>reverse order</i> or their order in the ClassFile structure. 
/*  annotationVisitor =  */
//  method calls below), and to account for bootstrap method entries. 
//  Bean name pointing to a potentially lazy-init bean in the factory. 
//  Media type from request 
//  1856 
//  Mark this bean as currently in creation, even if just partially. 
//  We're shutting down completely. 
//  Register template loaders that are supposed to kick in late. 
//  Ignore - simply proceed with given Query object then 
//  Build & resolve shortcuts... 
//  The length of the input data 
// ---------------------------------------------------------------------   Template methods to be implemented/overridden by subclasses  --------------------------------------------------------------------- 
//  Process any collected put requests, either from @CachePut or a @Cacheable miss 
//  Fetch JTA TransactionManager from JNDI, if necessary. 
//  Will cause rollback only 
//  When we use other thread's copy in this thread 
// Get the key 
//  No explicit exception translator specified - perform autodetection. 
//  These methods are registered in the test context and therefore accessible through function calls   in test expressions 
//  Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early. 
//  Mimic standard JSF/JSP behavior when base is a Map by returning null. 
//  Convert stringified value to target Number class. 
//  We cannot use Profiles.of(...) since profile expressions are not supported   in XML config. See SPR-12458 for details. 
//  This first part of the if clause prevents a 'double dereference' of the property (SPR-5847) 
//  Not found -> check parent. 
//  SPR-15009 
//  Potentially try again with object equality checks in order to avoid race 
//  Ensure the final flush 
//  Explicitly extract typed value, as far as possible. 
//  TRUE 
//  perform tests with classValuesAsString = true 
//  The application context id is still set to its original default value   -> assign a more useful id based on available information 
//  Create and/or resize the output stack array if necessary. 
//  Use local attributes only?
//  Implemented as an anonymous inner class instead of a lambda expression due to a bug   in Eclipse IDE: "The blank final field testContext may not have been initialized" 
//  3xx Redirection 
//  testing some normal behavior 
//  end of JDBCException (subclass) handling 
//  Should we bind parameter by name 
//  initMethod 
//  gh-19890 
//  Information about the current stack map frame, i.e. the one read in the current (or latest)   call to {@link ClassReader#readFrame()}. 
//  When clearly asking for Groovy, that's what they'll get... 
//  Default bean name for bean definition to take property values from 
//  different subtypes 
//  SPR-17181 
//  sanity check: check that argument count matching works 
//  Check directly registered editor for type. 
//  Converting from an int to a string 
//  SPR-9841 
//  First pass: Look for named parameter match. 
//  Initial request thread 
//  In case of IOException, onError handling should call discardData(WebSocketMessage).. 
//  Check for JSR-250 support, and if present add the CommonAnnotationBeanPostProcessor. 
//  Register the advisor auto proxy creator with subclass 
//  Set request attribute and add cookie. 
//  The instruction after the GOTO_W becomes the target of the IFNOT instruction. 
//  hit sentinel at end of value   will take us to the end 
// ---------------------------------------------------------------------   Implementation of SmartLifecycle interface  --------------------------------------------------------------------- 
//  | GREATER_THAN_OR_EQUAL | INSTANCEOF | BETWEEN | MATCHES 
//  Register ApplicationContext in Scheduler context. 
//  Preferred option: JDK 9+ Lookup.defineClass API if ClassLoader matches 
//  Make invocation available if necessary. 
//  Fallback: Original JavaBeans introspection might not have found matching setter   method due to lack of bridge method resolution, in case of the getter using a   covariant return type whereas the setter is defined for the concrete property type. 
//  Check for special "forward:" prefix. 
//  verify the property values have been evaluated as expressions 
//  set persistence unit root URL 
//  test matching with ?'s and /'s 
//  Reacts to ServletException and RemoteException 
//  no AOP 
//  A regular request... 
//  false 
//  Some debug output might be useful... 
//  set transaction type 
//  be ignored. 
//  SPR-17050 
//  -----------------------------------------------------------------------------------------------   Utility methods: stack map frames   ----------------------------------------------------------------------------------------------- 
//  Inherit Environment if possible 
//  Read the name_index and access_flags fields and visit them. 
//  Couple of possible cases:    1. Mock server never consumed request body (e.g. error before read)    2. FluxExchangeResult: getResponseBodyContent called before getResponseBody  noinspection ConstantConditions 
//  It's an all in one... get the text between the first (and the last) 
//  Visible if same Class can be loaded from given ClassLoader 
//  Retrieve cookie value from request. 
//  SPR 16692 
//  Try even with null return value. ResponseBodyAdvice could get involved. 
//  first one is expected position of the error within the string 
//  Xalan-specific, but this is the most common XSLT engine in any case 
//  Resolve any bridge methods 
//  SPR-8779 
//  Visit the end of the module attributes. 
//  list = LCURLY (element (COMMA element)*) RCURLY 
//  Check for well-known PersistenceException subclasses. 
//  powerExpr  : unaryExpression (POWER^ unaryExpression)? (INC || DEC) ; 
//  result of the invocation 
//  SPR-15753 
//  Restore reflective handles (which are unfortunately not serializable) 
//  Non-strict casing can only be achieved through custom invocation handling.   Only partial MXBean support available!
//  Apply preferences and build metadata. 
//  we need to change it back 
//  If we are dealing with method with generic parameters, find the original method. 
//  Not initialized yet: assume core pool size.
//  Process any early evictions 
//  skip to flights   skip to flight 
//  no point doing other checks 
//  out of date. 
//  All other tests are in superclass. 
//  should throw CNFE when trying to load AnnotationTransactionAspect.   Do you actually have org.springframework.aspects on the classpath? 
//  To determine the situation, the AccessException will contain a cause.   If the cause is an InvocationTargetException, a user exception was 
//  Parse the target_type, target_info and target_path fields. 
//  SPR-12677 
//  Convert remaining arguments to the varargs element type 
//  Transacted session created by this container -> commit. 
//  no constraint 
//  Ideally we would expect String.class instead of Object.class, but   resolveReturnTypeForFactoryMethod() does not currently support this form of 
//  In order to retain back compatibility we only register Date/Calendar   types when a user defined formatter is specified (see SPR-10105) 
//  public 
//  SPR-9712 
//  SPR-13225 
//  variety chain 
//  SPR-15803: nested array, no top-level array 
//  Putting again should not increase the count 
//  This can happen on (very early) completion notification from container.. 
// ---------------------------------------------------------------------   Unsupported Servlet 3.0 registration methods  --------------------------------------------------------------------- 
//  Config loaded from BasicGroovyWacTestsContext.groovy 
//  Ensure that these don't cause problems 
//  JDK default HTTP client blacklist headers like Origin 
//  SPR-17051 
//  right is a short 
//  Must not be able to set exception message with return value placeholder 
/* 	 * Return if the given field is allowed for binding.	 * Invoked for each passed-in property value.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,	 * as well as direct equality, in the specified lists of allowed fields and	 * disallowed fields. A field matching a disallowed pattern will not be accepted	 * even if it also happens to match a pattern in the allowed list.	 * <p>Can be overridden in subclasses.	 * @param field the field to check	 * @return if the field is allowed	 * @see #setAllowedFields	 * @see #setDisallowedFields	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
//  see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getProperty(java.lang.String) 
//  Shortcut when re-creating the same bean... 
// ---------------------------------------------------------------------   Notification and listener management  --------------------------------------------------------------------- 
//  Rely on Double>String conversion for calling startsWith() 
//  Actually register all listeners 
//  Will check inherited fields are copied 
//  Implementation of the GroovyObject interface 
//  Complete the control flow graph with exception handler blocks. 
//  Switch to active. 
//  Use Log4j 2.x directly, including location awareness support 
//  Register a custom MethodResolver... 
//  SPR-12542 
//  JPA 2.1 StoredProcedureQuery 
//  SPR-13554: convention mapping mixed with AlaisFor annotations   xmlConfigFiles can be used because it has an AlaisFor annotation 
//  We know it can only be invoked if there's a single parameter of type string 
//  '?'   '? extends number' 
//  Case of an element_value with an array_value field. 
//  put supertype matches at the end of the   specificAccessor list 
//  clear thread callbacks to allow them to be gc'd 
//  SPR-17054 
//  If it's a FactoryBean, we want to look at what it creates, not the factory class. 
//  that translation should not occur. 
//  next instruction. Since it is a jump target, we need to insert a frame here. 
//  The user has injected a context at construction time -> use it... 
//  repro SPR-10994 
//  not writable because (1) name is private (2) there is no setter, only a getter 
//  now start the connector 
//  should throw, bad (non-Exception-type) serviceLocatorException class supplied 
//  No existing transaction found -> check propagation behavior to find out how to proceed. 
//  Only call close() on WebApplicationContext if locally managed... 
//  Try to parse the location as a URL... 
//  SPR-14559 
//  Constants for CGLIB callback array indices 
//  ensure the same works for AbstractRefreshableApplicationContext impls too 
//  No BeanWrapper default editor -> check standard JavaBean editor. 
//  number of evaluations that are timed in one run 
//  Write API methods to be implemented or template methods to override... 
/* 			 * Do a final check to see if any this(TYPE) kind of residue match. For			 * this purpose, we use the original method's (proxy method's) shadow to			 * ensure that 'this' is correctly checked against. Without this check,			 * we get incorrect match on this(TYPE) where TYPE matches the target			 * type but not 'this' (as would be the case of JDK dynamic proxies).			 * <p>See SPR-2979 for the original bug.			  */
//  in the case of a non-string *key*, however, we can do better.  Alert   the user that under these very special conditions (non-object key +   SecurityManager that disallows access to system properties), they
//  should never occur 
//  SPR-15758 
//  Ignore, we'll add a default ViewResolver later. 
//  factoryBean 
//  SPR-2544 
// parenExpr : LPAREN! expression RPAREN!; 
//  We should have loaded the source and initial annotation from child 
//  We're ahead of String + "*/*"   Let's see if we can aggregate the output (lest we time out)... 
//  SPR-16956 
// 		beanFactory.getBean("simple1", DummyBean.class); 
//  We are allowed to try, it will return null if data is not available 
//  delegate to subclass for interceptor definition 
//  the client-side doesn't need message framing (letter "a") 
//  Only perform destroy method inference or Closeable detection   in case of the bean not explicitly implementing DisposableBean 
/*  no beans required for this test  */
//  Use stack to restore old transaction TransactionInfo.   Will be null if none was set. 
//  Second pass: Look for parameter index match. 
//  No corresponding field on the target class... 
//  may be null 
//  [handlerStart,handlerEnd[ - [rangeStart,rangeEnd[ = [rangeEnd,handlerEnd[ 
//  @Order is not @Inherited 
/*  owner =  */
/* 	 * These tests are attempting to call constructors where we need to widen or convert	 * the argument in order to satisfy a suitable constructor.	  */
//  allow everything else 
/*  L1  */
//  Only the longest name is used for enumerating 
//  <-- i.e. @Bean was registered   <-- i.e. @Bean *was* enhanced 
//  multiple 
//  Cache keeps being alive due to the explicit cache setting 
//  Remove the "already filtered" request attribute for this request. 
//  result1 == "1" 
//  Call afterCompletion with the appropriate status indication. 
//  map! 
//  -----------------------------------------------------------------------------------------------   Generic symbol table entries management.   ----------------------------------------------------------------------------------------------- 
//  e.printStackTrace(); 
//  Compute where 'byteLength' must be stored in 'data', and store it at this location. 
//  Intentionally missing:   @AliasFor("location") 
//  Multiple options for supporting this expression: "p.name == principal.name"   (1) If the right person is the root context object then "name==principal.name" is good enough 
//  no more events with what currently has been fed to the reader 
//  Immediate expiration check outside of the result lock 
//  Assuming an unrelated class cast failure... 
//  lets now release an object and try to acquire a new one 
//  specific to unspecific 
//  We need an IntroductionAdvisor for this kind of introduction. 
//  These fields are used when the indexer is being used as a property read accessor.   If the name and target type match these cached values then the cachedReadAccessor   is used to read the property. If they do not match, the correct accessor is   discovered and then cached for later use. 
//  Must not be able to set exit message with exception placeholder 
//  Possible values for the reference_kind field of CONSTANT_MethodHandle_info structures.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.4.8. 
//  Swallow and proceed. 
//  set unit name 
//  Special case: URI is different from servlet path. 
//  @Order and @Priority should be ignored due to implementation of Ordered. 
//  ensure environment is registered as a bean 
//  ---------------------------------------------------------------------   HttpServletRequest interface   --------------------------------------------------------------------- 
//  We don't roll back on this exception.   Will still roll back if TransactionStatus.isRollbackOnly() is true. 
//  Remove Level 2 
//  Get value of bean property. 
//  No serializable type wrapping necessary (e.g. for java.lang.Class) 
//  @Configuration 
//  As above, but in this case we are given the join point. 
//  Create the plain text part of the message. 
//  In order to retain backwards compatibility we only register Date/Calendar   types when a user defined formatter is specified (see SPR-10105) 
//  primaryExpression : startNode (node)? -> ^(EXPRESSION startNode (node)?); 
//  uninitialized to let the bean factory post-processors apply to them! 
//  Most class names will be quite long, considering that they   SHOULD sit in a package, so a length check is worthwhile. 
//  assert that servletconfig params resolve with higher precedence than sysprops 
//  No resource type specified... check field/method. 
//  SPR-10272 
//  indicates a part of the string that was not parsed 
//  Process any @ComponentScan annotations 
//  Remove Level 1 
//  Decorate event as an ApplicationEvent if necessary 
//  Force initialization of the user attributes Map,   for having a shared Map reference in the clone. 
//  for AspectJ aspects (which are not allowed to implement Serializable)! 
//  Consolidate static and dynamic model attributes. 
//  Just check that it works--we can't make assumptions 
//  wrap the output so it is valid XML 
//  Find the containing EditorAwareTag (e.g. BindTag), if applicable. 
//  Switch to inactive. 
//  Either the context is not a ConfigurableApplicationContext with refresh   support or the context injected at construction time had already been   refreshed -> trigger initial onRefresh manually here. 
//  list cannot be properly parameterized as it breaks other tests 
//  Invoke three non-advised methods 
//  7 am is the trigger time 
//  Register given Hibernate mapping definitions, contained in resource files. 
//  path parameters 
//  RxJava 1 Single 
//  Load properties from file upfront, to let local properties override. 
//  Hamcrest... 
//  to determine the decorated bean's type than the proxy's type. 
//  pointcutExpression will be initialized lazily by checkReadyToMatch() 
//  Override JDK primitive number editors with our own CustomNumberEditor. 
//  Remove a basic block from the list of blocks to process. 
//  The @Scheduled method should have been called at least once but   not more times than the delay allows. 
//  Consume first part of number 
//  ExtendedEntityManagerSynchronization active after joinTransaction() call:   flush synchronization already registered. 
//  Assume it's a connection timeout that would otherwise get lost: e.g. from JDBC 4.0 
//  Required everywhere we use AspectJ proxies 
//  Ensure that we are testing against a timezone other than the default. 
//  note that we do not test for null, true, or false, which are also valid top-level values,   but are unsupported by JSONassert 
//  Got hit by call to advised1.getSpouse().getAge() 
//  Check whether the method is a valid service locator. 
//  TODO revisit performance if doing a lot of case insensitive matching
//  WebSocketHandler implementation 
//  The first time searching, we don't care about for this test   Try with Locale.US 
//  If already included, include again, else forward. 
//  SPR-13975 
//  Declared on a composed annotation (i.e., as a meta-annotation)? 
//  Implementation support for subclasses 
//  Commit necessary - but avoid commit call within a JTA transaction. 
//  Proceed with standard resource location parsing. 
//  It looks like a constructor reference but is NEW being used as a map key? 
//  Unicode for LS (line terminator in ECMA-262) 
//  We can skip creating a MethodInvocation: just invoke the target directly   Note that the final invoker must be an InvokerInterceptor so we know it does   nothing but a reflective operation on the target, and no hot swapping or fancy proxying. 
//  Due to the lifecycle options, and because the bean has the "prototype" scope, we should not return the same instance 
//  the info field. This trick allows duplicate detection in O(1) time. 
//  Trigger initialization of all non-lazy singleton beans... 
//  information is not available at run-time due to type erasure. 
//  Update the (absolute) maximum stack size. 
//  "always cache" 
//  4) Verify that the original and synthesized annotations are equivalent 
//  Handling of invalid origins as described in SPR-13478 
//  Visit the RuntimeVisibleTypeAnnotations attribute. 
//  SPR-15140 
//  non-static method, one parameter of primitive type 
//  Any other createEntityManager variant - expecting non-synchronized semantics 
//  CGLIB proxy 
//  make sure the thread will overlap 
//  Finished partial creation of this bean. 
/*  Quartz 2.2 initialize method  */
//  'system' now has precedence 
//  finally, issue additional assertions to cover all combinations of calling these   methods, however unlikely. 
// pc.setIgnoreUnresolvablePlaceholders(false); // the default 
//  Delegate bean definition registration to scanner class. 
//  Only allow events to be published for test methods named "publish*". 
//  Manual flush is required to avoid false positive in test 
//  Invocation on Query interface coming in... 
//  longer is better 
//  Indexing into a Map 
//  reflective constructor accessor is the only one by default 
//  nothing we can do here in terms of warning the user that there was   actually a (non-string) value available. By this point, we only   have access to calling System.getProperty(), which itself returns null   if the value is non-string.  So we're stuck with returning a potentially 
//  assert the method name is used 
//  varargs with conversion required 
//  Months start with 1 in Cron and 0 in Calendar, so push the values first into a longer bit set 
//  Tag values for the type table entries (ASM specific tags). 
//  Not advised, not under One 
//  Declared on interface?
//  Validate that all properties marked as required are resolvable: 
//  the EM w/o properties will be created 
//  see createTextMessage 
//  Don't wait for beans that aren't running... 
//  Find the current raw value, by invoking the corresponding setter 
//  2. At length 
//  attribute, or null. 
//  lots of underscores 
//  varargs long 
//  audio/basic == audio/wave 
//  Within full synchronization in order to guarantee a disconnected Set 
//  Deal with the arguments up to 'expected number' - 1 (that is everything but the varargs argument) 
//  Do not apply context path to relative URLs. 
//  Proceed with superclass initialization. 
//  Inherit all type-specific PropertyEditors. 
//  Put specified objects into Scheduler context. 
//  Fully synchronized resolution now... 
//  STRING_LITERAL: '\''! (APOS|~'\'')* '\''!; 
//  Use hashCode of PersistenceManager proxy. 
//  Value will either be canonical value indicating there is no transaction attribute,   or an actual transaction attribute. 
/*  no-op  */
//  -----------------------------------------------------------------------------------------------   Utility methods: constant pool management for Attribute sub classes   ----------------------------------------------------------------------------------------------- 
//  should lead to rollback 
//  Second step: find the successors in the control flow graph of each subroutine basic block   'r' ending with a RET instruction. These successors are the virtual successors of the basic 
//  URL 
//  Try a URL connection last-modified header 
//  Actual argument found - otherwise left as null 
//  Merged annotation 
//  In case the user forgot to call visitEnd(). 
//  sanity check: singleton, non-static should work 
//  Parse an expression 
//  Check whether we should support the request method. 
//  SPR-13847 
//  2, 2, 4 and 2 bytes respectively for max_stack, max_locals, code_length and   attributes_count, plus the bytecode and the exception table. 
//  protected methods used by the support sub-package 
//  Skip bridge methods - we're only interested in original   annotation-defining user methods. On JDK 8, we'd otherwise run into   double detection of the same annotated method... 
//  TODO could cache if a singleton for minor performance optimization
//  Compute and put the attributes_count field. 
//  A forward jump with an offset > 32767. In this case we automatically replace ASM_GOTO   with GOTO_W, ASM_JSR with JSR_W and ASM_IFxxx <l> with IFNOTxxx <L> GOTO_W <l> L:...,   where IFNOTxxx is the "opposite" opcode of ASMS_IFxxx (e.g. IFNE for ASM_IFEQ) and   where <L> designates the instruction just after the GOTO_W.   First, change the ASM specific opcodes ASM_IFEQ ... ASM_JSR, ASM_IFNULL and   ASM_IFNONNULL to IFEQ ... JSR, IFNULL and IFNONNULL. 
//  Writing MIME header. 
//  = 5 invocations, as reentrant call to spouse is advised also 
//  Fill in location information if possible. 
//  The stack size delta is 1 for BIPUSH or SIPUSH, and 0 for NEWARRAY. 
//  SPR-16210 
//  as a by-product. 
//  of course it could be a different copy in a real object. 
//  ------------------------------------------------------------------------ 
//  #this should be the element from list1 
//  does not support File-based reading; delegates to InputStream-style reading...  resource.getFile(); 
// 		@Async public int getInt() {  			return 0;  		} 
//  no match on message type 
//  make the scope create a new object .. again 
//  gh-23125 
//  Set of in parameter names to exclude use for any not listed 
//  gh-23258 
//  by default Ast nodes are not writable 
//  General exception counter which is a total for all exceptions thrown 
//  header present 
//  Actually this is still a "maybe" - treat the pointcut as dynamic if we don't know enough yet 
//  Parse the element_value_pairs array. 
//  Rely on default serialization, although this class itself doesn't carry state anyway... 
//  Possibly AspectJ 1.8.10 encountering an invalid signature 
//  If type to match is FactoryBean, return FactoryBean itself.   Else, return bean instance. 
//  See @CachePut 
//  Store the attributes in the <i>reverse</i> order of their visit by this method. 
//  POST 
//  SPR-17410 
//  Otherwise, no local settings to be applied via StdSchedulerFactory.initialize(Properties) 
//  Now let's cause the method to exit via exception and ensure it doesn't cause   a retry. 
//  Permit proxy and invocation checkers to get context from AopContext 
//  array has primitive component type 
//  Do not modify the EntityManager: just mark the request accordingly. 
//  Use empty MessageSource to be able to accept getMessage calls. 
//  INDEXER 
//  We only need this to wrap ByteBufs 
//  We looked and failed... 
//  SPR-13717 
//  Execute handleRequestInternal in synchronized block if required. 
//  bind em to the thread now since it's created 
//  Check to see if we have fixed interceptor to serve this method. 
//  Queue gets created in order to create MessageConsumer for that Destination... 
//  No closing ] 
//  - The non standard attributes (linked with their {@link Attribute#nextAttribute} field). 
//  Send status code 302 by default. 
//  Append anchor fragment, if any, to end of URL. 
//  unresolvable w/ default   unresolvable placeholder 
/* 	 * Return if the given method name matches the mapped name.	 * <p>The default implementation checks for "xxx*", "*xxx" and "*xxx*"	 * matches, as well as direct equality.	 * @param methodName the method name of the class	 * @param mappedName the name in the descriptor	 * @return if the names match	 * @see org.springframework.util.PatternMatchUtils#simpleMatch(String, String)	  */
//  Check getting again doesn't cause a problem 
//  previous step. So the stats should remain the same. 
//  How many variable captures are occurring in a particular path element 
//  SPR-15015 
//  treat the nested ${..} as a part of the expression 
//  Set rollback-only in case of Vavr failure matching our rollback rules... 
//  Use the @ControllerAdvice annotation found by findAnnotationOnBean()   in order to avoid a subsequent lookup of the same annotation. 
//  ----------------------------------------------------------------------------------------------   Methods to parse attributes   ---------------------------------------------------------------------------------------------- 
//  Found it! 
//  Just optional - for getting a specifically configured TypeConverter if needed.   We'll simply fall back to a SimpleTypeConverter if no specific one available. 
//  Not matched method on {@link LoggingAspect}. 
//  as of Hibernate 5.2 
//  Got the lock in the meantime: double-check expiration status 
//  SPR-14916 
//  source: sample.proto 
//  Not is a unary operator so does not extend BinaryOperator 
//  Delegate handling of "java.class" format to standard Control 
//  BooleanLiteral 
//  intentionally omitted: attribute = "locations" 
//  SPR-13719 
//  can't rely on classpath for server detection 
//  If counter is 4 then the method got called twice! 
//  - make sure the two instances share the same Frame instance (the implementation of   {@link Label#getCanonicalInstance} relies on this property; here label.frame should be 
//  SPR-14690 
//  Cannot be evaluated, so can't be writable. 
//  We don't care about the params. 
//  -----------------------------------------------------------------------------------------------   Overridden Object methods   ----------------------------------------------------------------------------------------------- 
//  Cause lazy loading 
//  execute the bind tag using the date property 
//  Give up 
//  final Template expectedTemplate = new Template(); 
//  ISO-8859-1 
//  No generic information 
// ---------------------------------------------------------------------   Convenient methods for loading XML bean definition files  --------------------------------------------------------------------- 
//  Also check utils version 
//  Expose cause as provided argument as well 
//  The input data for parsing 
//  A dynamically resolved expression, supported as of 4.2... 
//  assert that servletcontext init params resolve with higher precedence than sysprops 
//  Ignore - no Hibernate Validator 5.2+ or similar provider 
//  Used for types that are user-named like: STRUCT, DISTINCT, JAVA_OBJECT, named array types 
//  DQ_STRING_LITERAL: '"'! (~'"')* '"'!; 
//  Make it dynamic: must mutate from pre-instantiation to post-instantiation state.   If it's not a dynamic pointcut, it may be optimized out 
//  relational operators 
//  /*.html + /hotel => /hotel.html   /*.html + /hotel.* => /hotel.html 
//  ServerHttpResponse delegation methods... 
//  No doOnDiscard (no caching after DataBufferUtils#read) 
//  Should not happen 
//  SPR-8280 
//  This shouldn't happen:     1. dataReceived can only be called from REQUESTED state     2. currentData is cleared before requesting 
//  again as above, standard Inspector picks up non-void return types on indexed write methods by default 
//  Reply-To is queried when response is being created... 
//  second argument not used, see config 
//  Equality between standard and synthesized annotations 
//  Check below is always true against Hibernate >= 5.2 but not against 5.0/5.1 at runtime 
//  Netty Cookie doesn't support sameSite. When this is resolved, we can adapt to it again:   https://github.com/netty/netty/issues/8161 
//  This can match only on declared pointcut. 
// containerEmfb.destroy();  emfMc.verify(); 
//  Find introduction fields. 
//  Register given cacheable Hibernate mapping definitions, read from the file system. 
//  use own privileged to change accessibility (when security is on) 
//  A bean definition resulting from a component scan can be silently overridden 
//  no exceptions 
//  bogus static method 
//  Passing (String,Sub) on call to foo(String,Super) is close match 
//  Set sessionTransacted=true in case of a non-JTA transaction manager. 
//  Information about the current type annotation target, i.e. the one read in the current   (or latest) call to {@link ClassReader#readAnnotationTarget()}. 
//  Explicitly specified bean name for bean definition to take property values from 
//  stack as opposed to prior to the recursive call). 
//  ActivationSpecImpl class in "inbound" subpackage (WebSphere MQ 6.0.2.1) 
//  but we should still find it on classes. 
//  No property-specific editor -> check type-specific editor. 
//  Resolve 'attr3' by type 
//  Create savepoint within existing Spring-managed transaction,   through the SavepointManager API implemented by TransactionStatus.   Usually uses JDBC 3.0 savepoints. Never activates Spring synchronization. 
//  No BindingResult parameter -> fail with BindException 
//  1. Below length 
//  expect no calls 
//  No required type specified -> perform default extraction. 
//  Original method invocation should be unaffected by changes to argument list of clone 
//  Check for document without localization. 
//  Only setter fired 
//  Not a valid comparison...
//  The offset of the other entries depend on the total size of all the previous entries. 
//  Handle getTargetConnection method: return underlying Connection. 
//  Allow for caching all bean definition metadata, not expecting further changes. 
//  Guarantee initialization of beans that the current bean depends on. 
//  this is Ok 
//  To be compatible with the AntPathMatcher comparator,   '.*' is not considered a wildcard usage 
//  Do-nothing concrete subclass 
//  in to out 
//  gh-22656 
//  We're using setHeader here to remain compatible with JavaMail 1.2,   rather than JavaMail 1.3's setContentID. 
//  Sunday can be represented as 0 or 7 
//  Quick check for existing cache... 
//  Factory methods based on an HttpServletRequest 
//  Cache turned off because it went beyond the threshold 
//  Shared default time zone at the framework level 
//  SPR-14694 
//  Search for TaskExecutor bean... not plain Executor since that would   match with ScheduledExecutorService as well, which is unusable for   our purposes here. TaskExecutor is more clearly designed for it. 
//  -----------------------------------------------------------------------------------------------   Implementation of the FieldVisitor abstract class   ----------------------------------------------------------------------------------------------- 
//  startKey is the level at which to begin clearing the cache, 
//  Should typically be set for any kind of factory method, since the BeanFactory   pre-resolves them before reaching out to the AutowireCandidateResolver... 
//  If return value is a Query or Criteria, apply transaction timeout.   Applies to createQuery, getNamedQuery, createCriteria. 
//  Jackson2CodecSupport ... 
//  Existing transaction found -> check propagation behavior to find out how to behave. 
//  SPR-13496 
//  Please DO NOT simplify the following with AssertJ's fluent API.     We explicitly invoke methods directly on HttpHeaders#keySet()   here to check the behavior of the entire contract. 
//  Candidate constructors for autowiring?
//  ---------------------------------------------------------------------   ServletRequest interface   --------------------------------------------------------------------- 
//  No direct hits, go through all mappings 
//  skip over that too, and continue 
//  gh-22655 
//  analogous to the JAXBContext.newInstance(String) implementation 
//  dotted qualified id 
//  For transaction suspension, the JTA TransactionManager is necessary too. 
//  Determine default auto-commit and transaction isolation   via a Connection from the target DataSource, if possible. 
//  Access char array 
//  nested arrays 
//  Do not accept the String.valueOf(Object) method 
//  audio/basic;level=1 < audio/basic 
//  Probably from a TreeSet - ignore. 
//  overriding the default properties 
//  Total includes detected mappings + explicit registrations via registerMapping 
//  Static factory method 
//  now test with explicit id 
//  subroutine. 
//  Remembers count, but we need to get a new reference to nop... 
//  SPR-17191 
//  /hotels/* + booking => /hotels/booking 
//  Passing a subtype 
//  gh-22654 
//  This means the operand is not incrementable 
//  long 
//  How many ? characters in a particular path element 
//  End the current basic block (with one new successor). 
//  there outofpattern*yeah in the pattern, so this should fail 
//  check the advice details 
//  should handle Customer (exact match) 
//  Position in the pattern where this path element starts 
//  Look up single bean by type, with support for 'primary' beans 
//  Rely on singleton semantics provided by the factory -> no local lock. 
//  TargetSource.getTarget() failed 
//  If the method descriptor has changed, with more locals than the max_locals field of the   original Code attribute, if any, then the original method attributes can't be copied. A   conservative check on the descriptor changes alone ensures this (being more precise is not   worth the additional complexity, because these cases should be rare -- if a transform changes   a method descriptor, most of the time it needs to change the method's code too). 
//  The context has not yet been refreshed -> do so before returning it... 
//  expected, because stack was reset by setNestedPath 
// ---------------------------------------------------------------------   Implementation of JDBC 4.0's Wrapper interface  --------------------------------------------------------------------- 
//  na1 was filtered 
//  RECEIPT 
//  expect the exception we threw in the custom metaclass to show it got invoked 
//  Fall back to the parser's default behavior. 
//  ignore, see SPR-13620 
//  here: RIGHT!=null LEFT==null 
//  Should never be used 
//  Visit the ModuleMainClass attribute. 
//  Second request: invalidates session 
//  non-inherited class-level annotation; note: @Order is not inherited, 
//  NON-VOID-RETURNING, NON-INDEXED write method 
//  Standard stack map frame element types, used in {@link ClassVisitor#visitFrame}. 
//  A non-array type: compare the type itself. 
//  -- NOT -- 
//  Now intersection with MyTestBeanSubclass getters should eliminate MyTestBean target 
//  Based purely on 'wildness' 
//  No queue-capacity provided, so unbounded 
//  We ran out of messages.. 
//  Check manually registered singletons too. 
//  Outbound mapping 
//  Name of catalog for this context 
//  Accept "application/json" 
//  Scoped proxy factory beans are a special case and should not be further proxied 
//  Ensure internal list is mutable. 
//  OpModulus 
//  used by MethodInterceptorGenerated generated code 
//  If we registered a JVM shutdown hook, we don't need it anymore now:   We've already explicitly closed the context. 
//  string literal, evaluates to "bc" 
//  A location pattern: resolve it into a Resource array.   Might point to a single resource or to multiple resources. 
//  SPR-9964 
//  Don't do anything, leave it expired... 
//  SQL type constant from {@code java.sql.Types} 
// -------------------------------------------------------------------------   Convenience methods operating on a plain SQL String  ------------------------------------------------------------------------- 
//  Check that 'ref' and 'method' are specified 
//  HibernateTransactionManager 
//  Classes designed for test introspection 
// -------------------------------------------------------------------------   Template methods for listener execution  ------------------------------------------------------------------------- 
//  only second code valid 
//  If no infrastructure bean name prefix has been set, override it. 
//  Do nothing on flush 
//  TODO support multidimensional arrays   TODO support correct syntax for multidimensional [][][] and not [,,,]
//  Hamcrest matchers... 
//  FALSE 
//  Compute fields for fast comparison 
//  OK up to here, so the evaluation should be fine... 
//  XMLEventReader is Iterator<Object> on JDK 9 
/*  numStack =  */
//  SPR-12665 
//  Check the JCache cache again (in case the cache was added at runtime) 
//  Visit the max stack and max locals values. 
//  Register early post-processor for detecting inner beans as ApplicationListeners. 
//  Config loaded from DefaultScriptDetectionGroovySpringContextTestsContext.groovy 
//  Method predicates 
//  Determine locale for request and apply it to the response. 
//  Should custom translate this 
//  SPR-14435 
//  Default instances of collection editors. 
//  If a nested property cannot be read, simply return null   (similar to JSTL EL). If the property doesn't exist in the   first place, let the exception through. 
//  Direct URL lookup 
//  any client frame except CONNECT 
//  verify it is going to work with Spring Security's AntPathRequestMatcher 
//  Check SQLErrorCodes with corresponding error code, if available. 
//  SiMP header names 
//  PRE-FLIGHT 
// ---------------------------------------------------------------------   Implementation methods  --------------------------------------------------------------------- 
//  Find the root WebApplicationContext 
//  If this local has never been assigned in this basic block, so it is still equal to its   value in the input frame. 
//  Special case: If no required type specified, which usually only happens for   Collection elements, or required type is not assignable to registered type,   which usually only happens for generic properties of type Object -   then return PropertyEditor if not registered for Collection or array type.   (If not registered for Collection or array, it is assumed to be intended   for elements.) 
//  annotation_value 
//  SPR-9832 
//  Note: the MRU entry is moved to the tail when accessed. 
//  Not using the Quartz startDelayed method since we explicitly want a daemon   thread here, not keeping the JVM alive in case of all other threads ending. 
//  Create class outline 'spel/ExNNN extends org.springframework.expression.spel.CompiledExpression' 
//  Well known variables:   currently active context object 
//  no code valid, no default 
//  preserve the existing bean definition. 
//  ... 
//  Check terminal signal before processing element.. 
//  found in upper scope 
//  We must avoid fetching a target Connection for "equals".   Only consider equal when proxies are identical. 
//  intercept responding 
//  Log level checks 
//  Resolve BeanDefinitionHolder: contains BeanDefinition with name and aliases. 
//  SPR-8637 
//  Set a relative File reference and hope for the best. 
//  Codes should be empty 
//  AbstractGenericContextLoader 
//  Send registration event. 
//  Let subclasses do whatever initialization they like. 
//  direct access to annotation attributes: 
//  2=February 
//  @@protoc_insertion_point(class_scope:SecondMsg) 
//  SPR-10398 
//  shouldn't matter 
//  -----------------------------------------------------------------------------------------------   Methods related to the input frame   ----------------------------------------------------------------------------------------------- 
//  way out 
//  JDK default HTTP client blacklists headers like Origin 
//  TODO: test with expression for ServerWebExchange 
//  recurse 
//  Rely on AOP infrastructure to tell us what interfaces to proxy. 
//  Skip the methods_count and 'methods' fields, using the same method as above. 
//  Compute the "opposite" of opcode. This can be done by flipping the least   significant bit for IFNULL and IFNONNULL, and similarly for IFEQ ... IF_ACMPEQ 
//  given a class with a non-void returning setter method 
//  Proceed with unprocessed value. 
//  In case of IOException, onError handling should call discardData(DataBuffer).. 
//  jump to the end of the literal 
//  Use response wrapper in order to always add PATCH to the allowed methods 
//  Common cases 
//  Shouldn't happen - probably a result of circular reference resolution... 
//  Register transactional ConnectionProvider for Quartz. 
//  Search the full type hierarchy 
//  SPR-12660 
//  Supported marshalling 
//  A default method or other concrete method on a Java 8+ interface... 
// ---------------------------------------------------------------------   Convenience methods for content-based equality/hash-code handling  --------------------------------------------------------------------- 0
//  gh-22042 
//  TODO must be immutable list
//  jackson-datatype-jdk8 not available 
//  gh-23241 
//  Possibly "c:" drive prefix on Windows, to be upper-cased for proper duplicate detection 
//  Effectively analogous to JDK 8's BigInteger.longValueExact() 
//  SPR-12792 
//  JiBX does not support DOM natively, so we write to a buffer first, and transform that to the Node 
//  non-inherited class-level annotation; note: @Order is not inherited,   but findAnnotationDeclaringClassForTypes() should still find it on 
//  Note that the 'map' key must be of type String, but the keys in the map   returned by createMap() are of type Color. Thus "foo" cannot be cast to a   Color. 
//  SPR-15505 
//  Next day is a week day so add one 
//  Hibernate 5.2+ getHibernateFlushMode() 
//  Get reflectively 
//  Then, do this for the stack operands that have pushed in the basic block (this code is the 
//  TextMessage contents must be unwrapped... 
//  Return bean instance from factory. 
//  Consider factory methods 
//  Use the JDK's own MBeanServerInvocationHandler, in particular for native MXBean support. 
//  then convert it here 
//  The following (AnnotationAttributes) cast is required on JDK 9+. 
//  Rely on default serialization; just initialize state after deserialization. 
//  Access int array 
//  Won't throw an exception 
//  spliterator() via stream() 
//  Check whether we have any advice. If we don't, we can fallback on direct 
//  Check ConditionalConverters for a dynamic match 
//  SUBSCRIBE, UNSUBSCRIBE 
//  Start of the most recent path element in a particular path element 
//  allow configuration after set a MessageCodesResolver 
//  By definition, a STACK_KIND type designates the concrete type of a local variable at   the beginning of the basic block corresponding to this frame (which is known when   this method is called, but was not when the abstract type was computed). 
//  required but empty 
//  URI var with regex for path variable, and (empty) URI var for matrix params.. 
//  Standard collection interfaces 
//  Quick check on the concurrent map first, with minimal locking. 
//  register the final advisor 
//  Don't set business interface 
//  Write the bootstrap method in the BootstrapMethods table. This is necessary to be able to   compare it with existing ones, and will be reverted below if there is already a similar 
//  If the next instruction starts a new basic block, call visitLabel to add the label of this 
//  Read the exports_index, exports_flags, exports_to_count and exports_to_index fields   and visit them. 
//  JiBX does not support reading XML fragments, hence the override here 
//  Continue with the possible next task element 
//  when certain limit reached 
//  Invoke the method if we don't have a cache hit 
//  only one call made  - the first EM definition wins (in this case the one w/o the properties) 
//  Single string methods 
// see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getenv() 
//  Check we can manipulate state of p2 
//  Visit the end of the field. 
//  referenced as #a in the expression   so non-qualified references 'hasRole()' 'hasIpAddress()' are invoked against it 
// public abstract Point getPoint(); 
// return pjp.proceed(); 
//  conditions while invoking java.lang.reflect.Executable.getParameters(). 
//  This is a better match... 
//  even if Locale was different, same bundles might have been found. 
//  If return value is a JDBC Statement, apply statement settings   (fetch size, max rows, transaction timeout). 
//  Subclass used for matching 
//  SPR-10619 
//  Initialize the context fields related to stack map frames, and generate the first 
//  Else fall back to superclass implementation: calling loadView. 
//  Last in chain, so if we're called and we fail, that's bad... 
//  see ConfigurablePropertyResolver#setRequiredProperties 
//  default HandlerExceptionResolvers if no other resolvers are found. 
//  we need the real target too, not just the proxy... 
//  -> "unhandled exception", to be logged at error level by Quartz 
//  expected, because stack was empty 
//  Implementation of java.util.Map 
//  Regular delegation to the target SessionFactory, 
//  WildcardTheRestPathElement 
//  An interceptor array specified through the constructor 
//  Session should not be present 
//  Temporarily return non-post-processed object, not storing it yet.. 
//  Bean name not matching qualifier 
//  Else, nothing to customize 
//  parseCheck("{1}.#isEven(#this) == 'y'?'it is even':'it is odd'",   "({1}.#isEven(#this) == 'y') ? 'it is even' : 'it is odd'");   } 
//  Now turn off growing and reference off the end 
/* 	 * Test method for	 * 'org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessException(PersistenceException)'	  */
//  Check nested list in list 
//  Expose indexed variables as well as parameter names (if discoverable) 
//  Remove the set of children for the current context from the hierarchy map. 
//  Should throw a BadSqlGrammarException after test01, assuming 'drop-schema.sql' was executed 
//  If this check is changed, the generateCode method will need changing too 
//  Constants to manipulate the DIM field of an abstract type. 
//  Should have left this one alone 
//  if close is called entire test will fail 
//  No JMS Session available 
//  Compiler chooses getX(Number i) when passing Integer 
//  make the scope create a new object 
//  TODO one invocation from setup
// ---------------------------------------------------------------------   Implementation of TransactionFactory interface  --------------------------------------------------------------------- 
//  public for Kotlin 
//  dump(expressionToCompile.toStringAST(), clazzName, data); 
//  Finally, let's look for @Bean methods... 
//  ctx.register(ConfigWithPlaceholderConfigurer.class); 
//  qualifier added, and value matches the default 
//  Sort by Ordered/@Order if we loaded default listeners. 
//  a single resource with the given name 
//  Replace system properties with a mock property source for convenience 
//  TcpConnectionHandler 
//  gh-23240 
//  Fully synchronized building and caching of a ListenerRetriever 
//  Get the ObjectName from the map key. 
// -------------------------------------------------------------------------   Implementation of the Spring SchedulingTaskExecutor interface  ------------------------------------------------------------------------- 
//  No logging: HTTP transports too verbose and we don't know enough to log anything of value 
//  The context instance was injected without an explicit parent -> set   the root application context (if any; may be null) as the parent 
//  HttpSession has a getId() method. 
//  Name of procedure to call 
//  HTTP responses returned by async HTTP client are not bound to an   active connection and do not have to deallocate any resources... 
//  collection processors 
//  Register an alias for the plain bean class name, if still possible,   if the generator returned the class name plus a suffix.   This is expected for Spring 1.2/2.0 backwards compatibility. 
//  overloaded 
//  Order doesn't matter: <bean> always wins over @Bean. 
//  a?b:c 
//  annotation.synthesize(); 
//  October 
//  Hessian 1.0 call 
//  Check for file with language, country and variant localization. 
//  all need converting to strings   needs string conversion   first and last need conversion 
//  Check it still works: proxy factory state shouldn't have been corrupted 
//  We always bind the TransactionInfo to the thread, even if we didn't create   a new transaction here. This guarantees that the TransactionInfo stack 
//  on JDK 9 
//  Now there may or may not be an exponent 
//  Create default constructor 
//  This will work as the local resolver is set 
//  Use AUTODETECT_ALL as default in no beans specified explicitly. 
//  Note format... 
//  Opening tag still needs to be closed... 
//  Need to recreate all Cache instances with the new store-by-value configuration... 
//  env.setActiveProfiles(DEV_ACTIVE); 
//  1. At limit.. 
//  SPR-16483 
//  Indicates whether this procedure's return value should be included 
//  SPR-16350 
//  Load default strategy implementations from properties file.   This is currently strictly internal and not meant to be customized   by application developers. 
//  Ignore - we're reconnecting anyway 
//  Build a proxy that also exposes the JAX-WS BindingProvider interface. 
//  not currently testable in a reliable fashion  assertDoesNotMatchStringClass(classFilter); 
//  Custom request method 
//  Request 2 retrieves session 
//  This isn't a real property, but a reference to another prototype 
//  Choose an "aop" interceptor (used for AOP calls). 
//  Return immediately if no @Configuration classes were found 
//  Mapping from name to target object. 
//  Use retain() for Reactor Netty 
//  assignment 
/*  L3B  */
//  SPR-16486 
//  Check declared factory method return type on factory class. 
//  Create a parser 
//  The user has explicitly specified a value for system-properties-mode: revert to   PropertyPlaceholderConfigurer to ensure backward compatibility with 3.0 and earlier. 
//  SPR-17550 
//  nothing to merge 
//  Async I/O notification methods... 
//  empty path 
//  No result yet: store handler for processing once it comes in 
//  instance check on purpose 
//  Parse the argument types and compute their size, one at a each loop iteration. 
//  RxJava 2 Single 
//  AMC start 
// ---------------------------------------------------------------------   Enable functionality through underlying transaction object  --------------------------------------------------------------------- 
//  Generics potentially only match on the target class, not on the proxy... 
//  Configure transactional connection settings for Quartz. 
//  none of these sets are possible due to (expected) conversion problems 
//  if only one operand, then this is unary minus 
//  assumes Calendar->ReadableInstant converter is registered 
//  YAML can have numbers as keys 
//  class, field, method   class, field, method   class, field, method   field, method   class, field, method, parameter   class   method   module   module requires   field   method   module requires   method   field   method   class   class, method   method   class, field, method, parameter, module *   class   class(?) field inner   parameter, module, module *   class 
//  TestExecutionListener not applicable due to a missing dependency 
//  - The offset of each 'type_annotation' entry in the RuntimeInvisibleTypeAnnotations 
//  Other functionality 
//  Detect default configuration classes: 
//  audio/*;q=0.7 < audio/*;q=0.3 
//  variable access returning primitive 
// 		assertEquals(1,parse("/**").getScore()); 
//  Next, try the custom SQLException translator, if available. 
//  -> best-effort match against the target class if applicable. 
//  Shortcut for 1 dimensional 
//  SPR-13727 
//  check we can find the ctor ok 
//  See SPR-7000 
//  Private methods for use from State's... 
//  configure the page context 
//  Release Connection on suspend if the application doesn't keep   a handle to it anymore. We will fetch a fresh Connection if the   application accesses the ConnectionHolder again after resume,   assuming that it will participate in the same transaction. 
//  reset the flag back 
//  Fetch physical Connection from DataSource. 
//  no inline list building at the moment   evaluate("1 between {1, 5}", "true", Boolean.class); 
//  Not already registered for JMX exposure. 
//  we don't really care... 
//  Implicitly started session.. 
//  If this subroutine has not been marked yet, find its basic blocks. 
//  should skip connection to the server 
// -------------------------------------------------------------------------   Management of transaction-associated resource handles  ------------------------------------------------------------------------- 
//  Cache in mock cache 
//  https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1 
// e.g. WebSphere 
//  No '\v' in Java, use octal value for VT ascii char 
//  This is OK - it may have gone stale due to a class change,   let's try to get a new one and call it before giving up... 
//  generate name and register the interceptor 
//  Do not modify the Session: just clear the marker. 
//  same as java.sql.Connection.TRANSACTION_READ_COMMITTED; 
//  No context instance is defined for this servlet -> create a local one 
//  Incorrectly returns true since it doesn't detect that this is an interface
//  static method, one parameter of primitive type 
//  specified, and find the discovered argument types. 
//  allow @Scheduled method to be called several times 
//  Bitmasks to get each field of an abstract type. 
//  Let concrete implementations initialize themselves. 
//  Avoid lock contention for known Methods through concurrent access... 
//  Get as late as possible to minimize the time we "own" the target, in case it comes from a pool... 
//  All the methods in this class use the advised() template method   to obtain a transaction object, configured with the when PlatformTransactionManager   and transaction attribute source 
//  The default context is used if no override is supplied by the user 
//  Case of an array type, we need to build its descriptor first.   SPRING PATCH: larger initial size 
//  already processed 
//  It looks like a type reference but is T being used as a map key?
//  Async request timeout 
//  Failed to read metadata -> ignore. 
//  Read the 'uses_count' and 'uses' fields. 
//  Change age, so this will be returned by invocation 
//  Ignore: just for testing against duplicate. 
//  Our own broadcast 
//  So, it's a call parameter - part of the call string.   Get the value - it may still be null. 
//  Create proxy if we have advice. 
//  after construction and first resolution 
//  Initialize the bean instance. 
//  OpEq 
//  SPR-14265 
//  Could neither introspect the target class nor the proxy class ->   let's try the original method's declaring class before we give up... 
//  path element 
//  The TestBean reference is resolved to a prototype in the factory 
//  Clean up specially exposed Session, if any. 
//  SPR-15464 
//  Section 7.5 
//  Create close-suppressing Connection proxy, also preparing returned Statements. 
//  SPR-15331 
//  When container type is omitted and therefore inferred from @Repeatable 
//  assumably failed to flush changes to database 
//  Either a previously bound unsynchronized EntityManager, or the application   has requested a synchronized EntityManager before and therefore upgraded   this transaction's EntityManager to synchronized before. 
//  Shortcut: directly present on the element, with no merging needed?
// ---------------------------------------------------------------------   Delegating implementations of JspWriter's abstract methods  --------------------------------------------------------------------- 
//  Update the input stack size of the successor blocks of basicBlock in the control flow 
//  Compute the (absolute) input stack size and maximum stack size of this block. 
//  Not a valid URI (let's try as Spring resource location),   or a URI scheme not registered for NIO (let's try URL   protocol handlers via Spring's resource mechanism). 
//  ServerEndpointConfig implementation 
//  override 
//  gh-22771 
//  These had better be a Bad SQL Grammar code 
//  Any sort of path separator found... 
//  For testing 
//  Assumably a Spring-generated proxy from SharedEntityManagerCreator:   since we're passing it back to the native EntityManagerFactory,   let's unwrap it to the original Query object from the provider. 
//  Initialize conversion service for this context. 
//  nonDottedNode: indexer; 
//  Handle close method: don't pass the call on. 
//  PropertyEditor cannot convert non-Strings 
//  parseCheck("1 between {1, 5}", "(1 between {1,5})");   } 
//  Check that we can get the template, even if we might subsequently get it again. 
//  MethodReference 
//  Instance state 
//  ------------------------------------------------------------------------- 
//  nothing to assert: we just want to make sure that the context loads without   errors. 
//  Lazily initialize cache resolver via default cache manager... 
//  Adding a new property accessor just for a particular type 
//  Ignore -> fall back to ASM next, except for core java types. 
//  Global methods first 
//  Go through the accessors that may be able to resolve it. If they are a cacheable accessor then   get the accessor and use it. If they are not cacheable but report they can read the property 
//  SPR-15201 
//  the field we will retrieve 
/* 	* SPR_2165 - ClassEditor is inconsistent with multidimensional arrays	 */
//  Write type_index and reserve space for num_element_value_pairs. 
//  Map implementation 
//  there should be only one 
//  Section 7.4.1 
//  First step: find the subroutines. This step determines, for each basic block, to which 
//  This call requires the cache manager to be set 
//  so that this method can be called again with a different subroutine or subroutine caller. 
//  always a start node 
//  Register transaction timeout. 
//  SPR-11897 
//  Flush any messages cached in the mean time 
//  -----------------------------------------------------------------------------------------------   Constructor   ----------------------------------------------------------------------------------------------- 
//  non-standard indexed write method 
//  Actual execution of the query: close the EntityManager right   afterwards, since that was the only reason we kept it open. 
//  Visit the ModulePackages attribute. 
//  Now obtain the value for the fully resolved key... 
//  Check we can add a new advisor to the target 
//  Trigger destruction of contained beans... 
//  ServletContext needs to be specified to be able to fall back to the root context! 
//  SPR-16668 
//  SPR-14005 
//  First non compiled: 
//  Cache forever: prefer locale cache over repeated getBundle calls. 
//  SPR-16402 
//  SPR-11763 
//  makeEncSJP, although meant for computing the enclosing join point,   it serves our purpose here 
//  Return unmodifiable snapshot, to avoid ConcurrentModificationExceptions   while iterating and invoking synchronization callbacks that in turn   might register further synchronizations. 
//  Method m2 = getNameMethod;   No attributes for m2 
//  Use a try-catch block to ensure that the exception is thrown as a result of the   next line and not as a result of the previous line. 
//  Check the EhCache cache again (in case the cache was added at runtime) 
//  If the advisor passed validation, we can make the change. 
//  both separators are 2 chars 
//  reflective invocation of the target, and avoid creating a MethodInvocation. 
//  for postProcessPropertyValues 
//  @since 4.2 
//  Now check non-effect of removing interceptor that isn't there 
//  try second time 
//  Not enough data to match this path element 
//  Skip trailing separators that would be in the result 
//  Read the num_annotations field and create an array to store the type_annotation offsets. 
//  Modulus 
//  static field 
//  Interpret argument array as individual method arguments. 
//  Add remote registry 
// sumExpression: productExpression ( (PLUS^ | MINUS^) productExpression)*; 
//  Create the constant pool arrays. The constant_pool_count field is after the magic, 
//  SPR-12960 
//  parseCheck("new int[] {1,2,3}.max()");   }   
//  Register HttpRequestHandlerAdapter 
//  that they still refer to the canonical instance for this bytecode offset. 
//  Data flow algorithm: put this basic block in a list of blocks to process (which are blocks   belonging to subroutine subroutineId) and, while there are blocks to process, remove one from   the list, mark it as belonging to the subroutine, and add its successor basic blocks in the   control flow graph to the list of blocks to process (if not already done). 
//  If the app container sanitized the servletPath, check against the sanitized version 
//  assertEquals(Connection.class, con.getClass());   assertEquals(Types.ARRAY, type);   assertEquals("NUMBER", typeName); 
//  Notify all post-processors that the specified bean definition has been reset. 
//  Request 2 saves session after invalidated 
//  SPR-15205 
//  Don't be clever for arrays or a null target... 
//  Pre-bound Session found -> simply proceed. 
//  replyTO set on the request 
//  Determine current EntityManager: either the transactional one 
//  type is a primitive or array type. 
//  Attempt to get the actual ResolvableType for the bean. 
//  Empty holder representing "not found". 
//  Check that a repeated execution in the same thread works and performs cleanup. 
//  instance @Bean method 
//  This class just checks proxy is bound before getTarget() call 
// ---------------------------------------------------------------------   Implementation of BindingResult interface  --------------------------------------------------------------------- 
//  Methods to discover parameter names for 
//  Parse the array_value array. 
//  Have to exclude Clover-generated class files here,   as we might be running as part of a Clover test run. 
//  the number is something like '3.'. It is really an int but may be 
//  First force the full class loading of the weaver by invoking transformation on a dummy class 
//  When compatible, what is the descriptor of the common type 
//  JORAM 
//  No need to update maxRelativeStackSize (the stack size delta is always negative). 
//  Pass full property name and old value in here, since we want full 
//  Find the labels for UNINITIALIZED frame types. Instead of decoding each element of the   stack map table, we look for 3 consecutive bytes that "look like" an UNINITIALIZED type   (tag ITEM_Uninitialized, offset within bytecode bounds, NEW instruction at this offset).   We may find false positives (i.e. not real UNINITIALIZED types), but this should be rare,   and the only consequence will be the creation of an unneeded label. This is better than   creating a label for each NEW instruction, and faster than fully decoding the whole stack 
//  ... but this fails 
//  JpaTransactionManager 
//  Definitely doesn't match: throw IllegalArgumentException/IllegalStateException 
//  Decorate based on custom nested elements. 
//  true 
//  Next, look for grouped error codes. 
//  convention for failing is to return null, allowing participation in a chain of responsibility 
//  a '.' indicates this number is a real 
//  only ServletHandlerAdapter with bean name "handlerAdapter" detected 
//  By definition, basicBlock is reachable. 
//  There is an initializer but this is a multi-dimensional array (e.g. new int[][]{{1,2},{3,4}}) - this   is not currently supported 
//  Method with string return 
//  Note that the following invocation of getApplicationContext() forces eager   loading of the test's ApplicationContext which consequently results in the   publication of all test execution events. Otherwise, TestContext#publishEvent   would never fire any events for ExampleTestCase. 
//  fall back to full creation of the FactoryBean instance. 
//  The output of the accessor is a primitive but from the block above it might be null,   so to have a common stack element type at skipIfNull target it is necessary   to box the primitive 
//  Resources served via <mvc:resources/> 
//  OperatorMatches 
//  Check name with dots and hyphens replaced 
//  Only validate min count since max count is checked on every request... 
//  Fallback: target bean at least found by bean name - probably a manually registered singleton. 
//  Force this, since we'll never actually connect 
//  SPR-14882 
//  If we encountered individual exceptions, throw the composite exception. 
//  Collect any explicit @CachePuts 
//  Equality amongst synthesized annotations 
//  Try this first for backwards compatibility 
/*  The following should work according to the spec, but doesn't on the JAXB2 implementation including in JDK 1.6.0_17	public JAXBElement<Source> standardClassSource() {		StringReader reader = new StringReader("<foo/>");		return new JAXBElement<Source>(NAME, Source.class, new StreamSource(reader));	}	 */
//  Fast-forward a few seconds 
//  No thread context class loader -> use class loader of this class. 
//  Note that the 'map' key must be of type String, but the keys in the map   returned by createApproximateMap() are of type Color. Thus "foo" cannot be   cast to a Color. 
//  Build the array and populate it 
//  params with spaces 
//  do something nice for arrays 
//  Else leave default value. 
//  SPR-8536 
//  Track registration and notify listeners. 
//  Using attributes source. 
//  SPR-9603 
//  -2 
//  Encoding 
//  May reach here without it computed if all elements are literals 
//  consume 'AND' 
//  Tag values for the BootstrapMethods attribute entries (ASM specific tag). 
//  All literals so we can do this straight away 
//  In case of an optional Collection/Map, silently ignore a non-unique case:   possibly it was meant to be an empty collection of multiple regular beans   (before 4.3 in particular when we didn't even look for collection beans). 
//  not invoked again 
//  Can only load single resources by absolute URL. 
//  see: TestBean 
//  Underlying ScheduledFutureTask to user-level ListenableFuture handle, if any 
//  PropertyOrFieldReference 
//  JDK classes don't have debug information (usually) 
//  Extractors for specific content .. 
//  try with non-transaction 
//  No physical target Connection kept yet ->   resolve transaction demarcation methods without fetching   a physical JDBC Connection until absolutely necessary. 
//  primitive left operand - should get boxed, return false 
//  Parse the method descriptor, one argument type descriptor at each iteration. Start by   skipping the first method descriptor character, which is always '('. 
//  SPR-16407 
//  -----------------------------------------------------------------------------------------------   Fields used to compute the maximum stack size and number of locals, and the stack map frames   ----------------------------------------------------------------------------------------------- 
//  In case of FactoryBean, try to match FactoryBean itself next. 
//  Not found - now check again with full lock... 
//  The maximum stack size is now at least one, because of the Throwable declared above. 
//  relationalOperator   : EQUAL | NOT_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL | GREATER_THAN 
//  Copyright (c) 2000-2011 INRIA, France Telecom   All rights reserved.     Redistribution and use in source and binary forms, with or without   modification, are permitted provided that the following conditions   are met:   1. Redistributions of source code must retain the above copyright      notice, this list of conditions and the following disclaimer.   2. Redistributions in binary form must reproduce the above copyright      notice, this list of conditions and the following disclaimer in the      documentation and/or other materials provided with the distribution.   3. Neither the name of the copyright holders nor the names of its      contributors may be used to endorse or promote products derived from      this software without specific prior written permission.     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF   THE POSSIBILITY OF SUCH DAMAGE. 
//  Should not happen (no Model argument resolution) ... 
//  The buffers used to store the content bytes 
//  No synchronization on session demanded at all... 
//  +1 again 
// (nextPos > candidateIndex) && 
//  - The string corresponding to the NestHost attribute, or null. 
//  -----------------------------------------------------------------------------------------------   Constant pool entries management.   ----------------------------------------------------------------------------------------------- 
//  may not be the end if the char after is also a " 
// assertTrue(em.getTransaction().isActive()); 
//  Merge local properties if specified. 
//  Supported operand types for equals (at the moment) 
// testAspectsAndAdvisorAreApplied(childAc, (ITestBean) ac.getBean("adrian")); 
//  sessionId -> SessionSubscriptionInfo 
//  After commit not invoked 
//  no args 
//  Default is no multipart resolver. 
//  see SWS-392 
//  SPR-13555 
//  Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars... 
//  cannot convert String to boolean 
//  Expose ModelAndView for chosen error view. 
//  This will get a connection. 
//  Captures the most recently used method for the function invocation *if* the method   can safely be used for compilation (i.e. no argument conversion is going on) 
//  Apply indexes and map keys: fetch value for all keys but the last one. 
//  Keep the FULL_FRAME type. 
//  [handlerStart,handlerEnd[ - [rangeStart,rangeEnd[ =       [handlerStart,rangeStart[ + [rangeEnd,handerEnd[ 
//  Always use full path within current servlet context?
//  test fields and helpers 
//  We need to discover them, or if that fails, guess,   and if we can't guess with 100% accuracy, fail. 
//  Delegate to application-provided document code. 
//  Try reading the class file via ASM for deterministic declaration order...   Unfortunately, the JVM's standard reflection returns methods in arbitrary   order, even between different runs of the same application on the same JVM. 
//  Unknown Number subtype -> best guess is double decrement 
//  Only literal (encode full source).. 
//  ConversionService implementation 
//  SPR-13423 
//  Try various advice types 
//  ListenableFutureCallback implementation: handshake outcome 
/*  Whether the client is willfully closing the connection  */
//  Use the easiest to compute common super type 
//  Stack is empty, should use context object 
//  Look up by type and explicit name 
//  Autodetect UserTransaction object that implements TransactionManager,   and check fallback JNDI locations otherwise. 
//  ensure that override order is correct 
//  We at least need the JTA UserTransaction. 
//  If needed, update the maximum stack size and number of locals, and stack map frames. 
//  SPR-10914 
//  Unicode for PS (line terminator in ECMA-262) 
//  AJ weaving is disabled -> do nothing 
//  Now the expression has cached that throwException(int) is the right thing to   call. Let's change 'bar' to be a PlaceOfBirth which indicates the cached 
//  No media type preferences 
//  Only one method got invoked 
//  Call from interface-based proxy handle, allowing for an efficient check? 
//  (since MySQL doesn't throw the JDBC 4 SQLTimeoutException) 
//  This should theoretically never happen... 
//  Global exception handlers... 
//  assumes Date->Long converter is registered 
//  OpGE 
//  may not be the end if the char after is also a ' 
//  evaluates to "Nikola Tesla" 
//  gh-23230 
// ---------------------------------------------------------------------   Convenience methods for working with String arrays  --------------------------------------------------------------------- 
//      
//  SPR-16051 
//  Not a default ReflectiveMethodResolver - don't know whether caching is valid 
//  list of arrays 
//  SPR-14888 
// 	; 
//  This will trigger compilation (second usage) 
//  Re-retrieve the array from the synthesized annotation 
//  Unsupported 
// -------------------------------------------------------------------------   Methods dealing with callable statements  ------------------------------------------------------------------------- 
//  form to be passed to the method 
/*  * Utility methods for simple pattern matching, in particular for * Spring's typical "xxx*", "*xxx" and "*xxx*" pattern styles. * * @author Juergen Hoeller * @since 2.0  */
//  The Classfile's access_flags field is just after the last constant pool entry. 
//  Compute the concrete types of the local variables at the end of the basic block corresponding   to this frame, by resolving its abstract output types, and merge these concrete types with 
//  Must not be able to set enter message with invocation time placeholder 
//  The following tests fail with a MalformedURLException on Windows   testResolvePathWithTraversal(location, "/" + secretPath);   testResolvePathWithTraversal(location, "/  " + secretPath); 
//  Put it in the cache. 
//  custom scope annotation makes the bean prototype scoped. subsequent calls   to getBean should return distinct instances. 
//  Reset PropertyEditor: It already did a proper conversion.   Don't use it again for a setAsText call. 
//  Fall back to searching the system environment. 
//  resource loading environment. 
//  Mark override as not overloaded, to avoid the overhead of arg type checking. 
//  SPR-16187 
//  We have to parse "advice" and all the advice kinds in one loop, to get the   ordering semantics right. 
//  Set default singleton scope, if not configured before. 
//  Reset the interrupted flag as it was before. 
//  Additional check for defining the package, if not defined yet. 
//  Return original String if not modified. 
//  different types 
//  Check old BindException prefix for backwards compatibility. 
//  In case of FactoryBean, return singleton status of created object if not a dereference. 
//  aop.xml is present on the classpath -> enable 
//  Server-side only: single Resource or sub-regions... 
//  Check name with just hyphens replaced 
//  Proceed without invoking this filter... 
//  Should now match absquatulate() as well 
//  does not throw after the changes introduced in SPR-8806 
//  clear first, session may be unresponsive 
//  SPR-12475 
//  If there are no put requests, just use the cache hit 
//  SPR-8661 
//  URI var with regex for path variable, and URI var for matrix params.. 
//  -----------------------------------------------------------------------------------------------   Implementation of the AnnotationVisitor abstract class   ----------------------------------------------------------------------------------------------- 
//  Full check for complex generic type match... 
//  Find attributOffset of the 'bootstrap_methods' array. 
// create new inventor instance within add method of List 
//  -----------------------------------------------------------------------------------------------   Other public methods   ----------------------------------------------------------------------------------------------- 
//  It's because Integers aren't canonical 
//  Handle close method: suppress, not valid. 
//  Will allow CaptureTheRest to bind the variable to empty 
//  Making a class abstract doesn't _really_ prevent instantiation :-) 
//  Not the usual case - simply forget about the type check... 
//  Map key: Country   Map value: Locale 
//  Write tag and type_index, and reserve 2 bytes for num_element_value_pairs. 
//  If we have a bean type use it so that generics are considered 
//  Find a param-aware ancestor 
//  Cache handling 
//  Note: fields are ordered as in the field_info structure, and those related to attributes are   ordered as in Section 4.7 of the JVMS. 
//  No longer counting 
// -------------------------------------------------------------------------   Management of transaction synchronizations  ------------------------------------------------------------------------- 
//  Proxy classes never have annotations on their redeclared methods. 
//  SPR-17593: explicit HEAD should not clash with implicit mapping via GET 
//  Avoid initialization of shared DefaultConversionService if   no standard type conversion is needed in the first place... 
//  Process any late evictions 
//  Explicitly close all MessageProducers and MessageConsumers that   this Session happens to cache... 
//  Fall back to stream existence: can we open the stream? 
//  Unless it was invalidated 
//  Prepare taskExecutor and maxMessagesPerTask. 
//  left scans right, and right scans left 
//  Since there is already a stack map frame for this bytecode offset, there is no need to   insert a new one. 
//  No transaction or new transaction for the current scope ->   invoke the afterCompletion callbacks immediately 
//  classes. 
//  Cache the result for further calls to getType() 
//  Note: the ordering of the config classes is intentionally: global, two, one. 
//  Handle JPA 2.0 unwrap method - could be a proxy match. 
//  -----------------------------------------------------------------------------------------------   Exceptions table entries, debug information, max stack and max locals   ----------------------------------------------------------------------------------------------- 
//  Now test the Prototype TargetSource 
// ---------------------------------------------------------------------   Implementation of remaining BeanFactory methods  --------------------------------------------------------------------- 
//  java.util.Properties does not allow null values (because Hashtable does not) 
//  The bootstrap method arguments can be Constant_Dynamic values, which reference other   bootstrap methods. We must therefore add the bootstrap method arguments to the constant pool   and BootstrapMethods attribute first, so that the BootstrapMethods attribute is not modified 
//  cool; now let's change the script and check the refresh behaviour... 
//  set up test data 
//  Look for Query arguments, primarily JPA 2.1's addNamedQuery(String, Query) 
//  If dstFrame is an exception handler block, it can be reached from any instruction of the   basic block corresponding to this frame, in particular from the first one. Therefore, the   input locals of dstFrame should be compatible (i.e. merged) with the input locals of this   frame (and the input stack of dstFrame should be compatible, i.e. merged, with a one
//  JSON must be preferred for Flux<String> -> List<String> or else we stream 
// -------------------------------------------------------------------------   Inner classes used as internal adapters  ------------------------------------------------------------------------- 
//  parseCheck("(#fact = {|n| $n <= 1 ? 1 : $n * #fact($n-1) }; #fact(5))",   "(#fact={|n| ($n <= 1) ? 1 : ($n * #fact(($n - 1))) };#fact(5))");   } // 120 
//  SPR-17256 
//  Test with default class loader first... 
//  session exists 
//  Fetch Spring root application context and initialize the delegate early,   if possible. If the root application context will be started after this 
//  context-param in web.xml, if any. 
//  7.5.12 
/* 			weblogic.transaction.TransactionManager wtm =					(weblogic.transaction.TransactionManager) getTransactionManager();			wtm.forceResume(suspendedTransaction);			 */
//  Detect transformation-aware ClassLoader by traversing the hierarchy   (as in GlassFish, Spring can be loaded by the WebappClassLoader). 
//  Need to recreate all Cache instances with the new null-value configuration... 
//  regular DateFormat-based Date, Calendar, Long converters 
//  here: RIGHT!=null LEFT==unknown 
//  The access_flags, name_index, descriptor_index and attributes_count fields use 8 bytes. 
//  should do client-side lookup 
//  Either targetClass or targetObject specified. 
//  Publish early application events now that we finally have a multicaster... 
//  method and class level -> method value overrides 
//  SPR-11140 
//  Visit the RuntimeVisibleParameterAnnotations attribute. 
//  SPR-8798 
//  create a new bean 
//  ---------------------------------------------------------------------   Constructors   --------------------------------------------------------------------- 
//  Hamcrest..   Hamcrest.. 
/* 					weblogic.transaction.Transaction wtx = (weblogic.transaction.Transaction) tx;					wtx.setProperty(ISOLATION_LEVEL_KEY, isolationLevel);					 */
//  We must copy until this is resolved:   https://github.com/eclipse/jetty.project/issues/2429 
//  invisibleTypeAnnotationOffsets array). 
//  Change IFNULL and IFNONNULL to ASM_IFNULL and ASM_IFNONNULL. 
//  Sort non-void returning write methods to guard against the ill effects of   non-deterministic sorting of methods returned from Class#getDeclaredMethods   under JDK 7. See https://bugs.java.com/view_bug.do?bug_id=7023180 
//  7.5.11 
//  parseCheck("'efg' between {'abc', 'xyz'}", "('efg' between {'abc','xyz'})");   }// true 
//  Plain response found. 
//  Let the bean definition get re-merged now that we're actually creating   the bean... just in case some of its metadata changed in the meantime. 
//  should only happen in test environments 
//  trigger immediate startup 
//  a=b 
//  directly implemented 
//  Not running in an ApplicationContext -> register tasks early... 
//  Check that the bean can invoke the overridden method on itself   This differs from Spring's AOP support, which has a distinct notion   of a "target" object, meaning that the target needs explicit knowledge   of AOP proxying to invoke an advised method on itself. 
//  Check subclass fields were copied 
//  helper class 
/*  data =  */
//  Override default "txMgr" from @TxComposedWithOverride with "localTxMgr" 
//  CaptureTheRestPathElement 
//  Defensively fall back to URL connection check instead 
//  nothing to really test; it is enough if we don't get error while creating app context
//  Assignment 
//  :{x} style parameter 
//  should have failed with bogus propagation code 
//  7.5.10 
/*  All tests are in the parent class...  */
//  nothing passed to varargs parameter 
//  Send message via current transport... 
//  This forces the method to be executed again 
//  Advice instance identity is unimportant to the proxy class:   All that matters is type and ordering. 
//  Read the fields_count field. 
//  Modify nested map 
//  SPR-6268 
//  Entry for fallback locale that isn't already in filenames list. 
//  SPR-16059 
//  Create a deep copy, resolving any references for values. 
//  ClientHttpRequest delegation methods... 
//  @@protoc_insertion_point(builder_scope:SecondMsg) 
//  Note: Unlike return type, no such generic information is needed for the throwing type,   since Java doesn't allow exception types to be parameterized. 
//  Full match: language + country, possibly narrowed from earlier language-only match 
//  SPR-9378 
//  Compute the offset and the length of the BootstrapMethods 'bootstrap_methods' array. 
//  method level 
//  Leaf count 
//  Shortcut if no args need to be loaded 
//  Else, use path within current servlet mapping if applicable 
//  If the meta-distance is positive, that means the annotation is   meta-present and should therefore have lower priority than directly   present annotations (i.e., it should be prepended to the list instead   of appended). This follows the rule of last-one-wins for overriding   properties. 
//  obtain a FactoryBean's object type... 
//  WebSocketContainer 
//  Clear already activated context builder. 
//  succeeds 
//  Configure the bean definition reader with this context's 
//  Static references 
//  Flip the default implementation from SyncHandlerMethodArgumentResolver:   instead of delegating to (sync) resolveArgumentValue,   call (async) super.resolveArgument shared with non-blocking resolvers;   actual resolution below still sync... 
//  test resolve with no args 
//  Required so that all BeanPostProcessors, Scopes, etc become available. 
//  Visit the NestedMembers attribute. 
//  Use copy instead of buffer wrapping because Callback#succeeded() is   used not only to release the buffer but also to request more data   which is a problem for codecs that buffer data. 
//  subroutine(s) it belongs. Start with the main "subroutine": 
//  A custom namespace, not to be handled by Spring - maybe "xml:...". 
//  The token stream constructed from that expression string 
//  We keep HandlerExceptionResolvers in sorted order. 
//  Actual implementations of Context methods follow 
//  True because it maybeMatches with potential argument subtypes 
//  'value' in @SpringAppConfig should not override 'value' in @ContextConfig 
//  ---------------------------------------------------------------------   Pseudo-implementation of ConfigurableWebApplicationContext   --------------------------------------------------------------------- 
//  --- When --- 
/*  Primary lookup that holds all users and their sessions  */
// constructor 
//  If we cannot resolve types, we are not assignable 
//  Don't allow no-public methods as required. 
//  real numbers must have leading digits 
//  Create a ResourceBundleMessageSource for the specified resource bundle   basename in the JSTL context-param in web.xml, wiring it with the given   Spring-defined MessageSource as parent. 
//  second call: cache hit 
//  no characters for var1   no characters for var1 
//  Visit the field declaration. 
//  Same contract as for overrides.xml 
//  Parse depends-on list of bean names. 
//  Shouldn't custom translate this - invalid class 
//  Check bean class whether we're dealing with a FactoryBean. 
//  Here we do not extract the labels corresponding to the attribute content. This would   require a full parsing of the attribute, which would need to be repeated when parsing   the bytecode instructions (see below). Instead, the content of the attribute is read one   type annotation at a time (i.e. after a type annotation has been visited, the next type   annotation is read), and the labels it contains are also extracted one annotation at a   time. This assumes that type annotations are ordered by increasing bytecode offset.
//  Optimized resolution: no arguments to apply,   therefore no MessageFormat needs to be involved.   Note that the default implementation still uses MessageFormat;   this can be overridden in specific subclasses. 
/*  no beans  */
//  Serialize as regular MessageHeaders (without MessageHeaderAccessor reference) 
//  It's a normal bean property. 
//  Then skip the num_element_value_pairs and element_value_pairs fields (by reading them 
//  bean does not exist 
// ---------------------------------------------------------------------   Exporter implementation  --------------------------------------------------------------------- 
//  gh-23101 
//  Add the bootstrap method to the symbol table or revert the above changes. 
//  SPR-14141 
//  -----------------------------------------------------------------------------------------------   Main method, to simulate the execution of each instruction on the output frame   ----------------------------------------------------------------------------------------------- 
//  We must check each value to see whether it requires a runtime reference   to another bean to be resolved. 
//  roll over if needed 
//  Recursively check each generic 
//  final int contentLength = ITERATIONS * BUF_SIZE;   request.getHeaders().setContentLength(contentLength); 
//  Direct match for exposed instance?
//  Pass through IllegalStateException when coming from FileItem directly,   or propagate an exception from I/O operations within FileItem.write 
//  Test OK 
//  Parse the type_annotation's target_type and the target_info fields. The size of the 
//  2. Set properties again 
//  Should result in something similar to the following:     java.lang.IllegalStateException: Failed to parse 'testGroups' system property:   Unable to find test group 'bogus' when parsing testGroups value: 'all-bogus'.   Available groups include: [LONG_RUNNING,PERFORMANCE,CI] 
//  Read the frame_type field. 
//  Begin an early transaction to force EclipseLink to get a JDBC Connection   so that Spring can manage transactions with JDBC as well as EclipseLink. 
//  Add to front of interceptor chain 
//  Turn off writing so next item will be cached 
//  Read the module_name_index, module_flags and module_version_index fields and visit them. 
//  Check for our bizarre customized rollback rules 
//  Wildcard with suffix? e.g. application/*+xml 
//  Now to configure the advice... 
// no inspection unchecked 
//  Implemented interfaces probably expose conflicting method signatures...   Proceed with original target method. 
//  needs to be first for additional headers 
//  Possibly a static Java method registered as a function 
//  NOTE: the two DataSource instances ARE the same! 
//  Make given TaskExecutor available for SchedulerFactory configuration. 
//  Skip the index field (2 bytes). 
//  Skip property population phase for null instance. 
//  First, do this for the stack operands that have not been popped in the basic block   corresponding to this frame, and which are therefore equal to their value in the input 
//  Determine scheduler name across local settings and Quartz properties... 
//  test is a valid value 
//  Else throw as-is in order to comply with the contract of TestExecutionExceptionHandler. 
//  Actual name to use for the return value in the output map 
//  /hotels/** + /booking -> /hotels/**/booking 
//  We failed more than once in a row or on startup -   wait before first recovery attempt. 
//  HTTP 1.0 header 
//  This comes from the test bean 
//  Will throw exception if it fails 
//  eat the body 
//  Only register config value editors if explicitly requested. 
//  Hit all 3 joinpoints 
/* 		 * The nth entry contains the slot index of the LVT table entry holding the		 * argument name for the nth parameter.		  */
//  SPR-13079 
//  As of Spring 3.1, the default value of system-properties-mode has changed from   'FALLBACK' to 'ENVIRONMENT'. This latter value indicates that resolution of   placeholders against system properties is a function of the Environment and 
//  OpGT 
//  Start a new current basic block, and reset the current and maximum relative stack sizes. 
//  Counter suffix for generated classes within this SpelCompiler instance 
//  A single data class constructor -> resolve constructor arguments from request parameters. 
//  SPR-14144 
//  SPR-16674 
//  Prepare method overrides. 
//  traditional RMI stub 
//  audio/* > */* 
//  Retrieve and parse cookie value. 
//  SPR-11623 
//  Nested transaction through nested begin and commit/rollback calls. 
//  cool, no errors, so the rubbish class name in the bean def was not resolved   let's resolve the bean definition; must blow up 
//  Also check if empty string, as per the code in the interpreted version 
//  no cache hit at all, caching disabled 
//  VariableReference 
//  Use AdaptableJobFactory as default for a local Scheduler, unless when   explicitly given a null value through the "jobFactory" bean property. 
//  tokenize output and ignore whitespace 
//  Parse the target_path structure and create a corresponding TypePath. 
//  Obtain WebLogic ClientTransactionManager interface. 
//  toString 
//  Check that it is the Hibernate FlushMode type, not JPA's... 
//  Age property is inherited from bean in parent factory 
//  Be careful not to get the Advice without a guard, as this might eagerly   instantiate a non-singleton AspectJ aspect... 
//  testing on Windows 
//  Header field 0 is the status line for most HttpURLConnections, but not on GAE 
//  Create disconnected SingletonTargetSource/EmptyTargetSource. 
//  SPR-11755 
//  Unknown Number subtypes -> best guess is double subtraction 
//  Efficient ISO_LOCAL_* variants for printing since they are twice as fast... 
//  Now safe to check "beforeSubscribed" flags, they won't change once in NO_DEMAND 
//  override of scanned class 
//  Increase counter until the id is unique. 
//  Since we're not traversing interface hierarchies the following,   though perhaps 
//  SPR-12820 
//  SPR-14147 
//  Create template for client-side JNDI lookup. 
//  Remember the charset to encode URI variables later.. 
//  OK 
//  No doOnDiscard as operators used do not cache (and drop) buffers 
//  Calling 'public int aVarargsMethod(String... strings)'  evaluate("aVarargsMethod('a','b','c')", 3, Integer.class); 
//  Transactional code threw unexpected exception -> rollback 
//  If we have a closure body, that will be the last argument. 
//  SPR-15478 
//  Convert original Number to target Number class. 
//  loader. 
//  No ListenerRetriever caching -> no synchronization necessary 
//  If exposing the proxy, then AOP_PROXY must be used. 
//  Add all the labels as successors of the current basic block. 
//  We keep HandlerAdapters in sorted order. 
//  test is not a valid integer 
//  Passing (String) on call to (String[]) is exact match 
//  SPR-16545 
//  max reached 
//  wrap it in a BeanDefinitionHolder with bean name 
// ---------------------------------------------------------------------   Implementations of AbstractApplicationContext's template methods  --------------------------------------------------------------------- 
//  When building ClientResponse manually, the ClientRequest.logPrefix() has to be passed,   e.g. via ClientResponse.Builder, but this (builder) is not used currently. 
//  Are there any file prefix/suffix things to consider?
//  SPR-10554 
//  here. 
//  We must be careful not to instantiate beans eagerly as in this case they   would be cached by the Spring container but would not have been weaved. 
//  Errors and warnings 
//  US ASCII 
//  store the url as a variable 
//  Members List 
//  check position for first 'true' 
//  CachePut forced a method call 
//  HTML and/or JavaScript escape, if demanded 
//  fails to wire when LowLevelConfig is processed with ASM because nested @Filter   annotation is not parsed 
//  no @Cacheable operation at all 
//  attempt to retrieve a bean that does not exist 
//  target_info field depends on the value of target_type. 
// -------------------   SPR-2603 classes  ------------------- 
//  references 
//  Parse the 'annotations' array field. 
//  Allow directly-present annotation to override annotations that are meta-present. 
//  If srcType is any other reference or array type,   merge(srcType, dstType) = min(srcDdim, dstDim) | java/lang/Object   where srcDim is the array dimension of srcType, minus 1 if srcType is an array type   with a non reference element type (and similarly for dstDim). 
//  The simple case... nothing to bind. 
//  Indicate that no message has been received. 
//  Check if bean definition exists in this factory. 
//  looks like 'NEW]' (so NEW used as map key) 
//  report all connect failures to the handler   post-connect issues 
// SPR-12403 
//  Top-level bean: use plain class name with unique suffix if necessary. 
//  no @Lookup annotation 
//  /hotels/* + /booking => /hotels/booking 
//  delegation 
//  SPR-16414 
//  Maybe an indexed/mapped property... 
//  only first match actually counts 
//  gh-23219 
//  SPR-9374 
//  Check fallback JNDI locations. 
//  Use bean name as default transaction name. 
//  Not an introduction field 
//  Check registered HandlerExceptionResolvers... 
//  Now with trailing matching turned OFF 
// -------------------------------------------------------------------------   Convenience finder methods for named queries  ------------------------------------------------------------------------- 
//  skip to root 
//  Read the default label and the number of switch cases. 
//  Next trigger is 3 months latter 
//  Attach any refresh metadata. 
//  factory method syntax 
//  This will be remove anyway as the earlyRemove has removed the cache before 
//  If one is null, check if the other is 
//  Ignore: no target connection yet. 
//  Quick check without a lock... 
//  underlying File is asked for so that the last modified time can be checked... 
//  varargs short 
//  Find all HandlerMappings in the ApplicationContext, including ancestor contexts. 
//  must not add if collection is empty... 
//  A RuntimeException: will lead to a rollback. 
//  @ArgNames({"age"})	// AMC needs more work here? ignoring pjp arg... ok??   argNames should be supported in Around as it is in Pointcut 
//  Java 9+ Flow.Publisher 
//  position in the old string 
// assertEquals(INITIAL_COUNT + 1, apartment.getCount()); 
//  ID: ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9'|DOT_ESCAPED)*; 
//  Like Spring Security does in HttpServlet3RequestFactory.. 
//  Is bean a FactoryBean?
//  MBean has a bad ObjectName, so if said MBean is autodetected, an exception will be thrown... 
//  SPR-13693 
//  Check for JPA support, and if present add the PersistenceAnnotationBeanPostProcessor. 
//  Discover whether the location is an absolute or relative URI 
//  SPR-10550 
//  e.g. AccessControlException on Google App Engine 
//  Recurse through lower levels 
//  /foo/bar should be overridden in concrete subclass 
//  Do not try to strip off a path... 
//  Not fully initialized yet -> return null to indicate "not known yet". 
//  we have a non-empty properties string 
//  if determineRemaining is true, this is set to the position in   the candidate where the pattern finished matching - i.e. it   points to the remaining path that wasn't consumed 
//  No early bean instantiation possible: determine FactoryBean's type from   static factory method signature or from class inheritance hierarchy... 
//  IE workaround: write into byte array first. 
//  SPR-16494   https://github.com/reactor/reactor-netty/issues/283 
//  Grab the locale-specific version of the template. 
//  Proper TRACE response coming from a handler - we're done. 
//  -----------------------------------------------------------------------------------------------   Constructors and factories   ----------------------------------------------------------------------------------------------- 
//  SPR-12287 (16/Oct/14 comments) 
//  non existent indexer (index via a string) 
//  Fallback: plain getBundle lookup without Control handle 
//  attempt to retrieve the instance by its generated bean name 
//  Fetch JTA TransactionSynchronizationRegistry from JNDI, if necessary. 
//  exception occurred, eviction skipped, data should still be in the cache 
//  Retrieve the new max of the sequence column... 
//  SPR-6877 
//  SPR-14761 
//  Validates the custom synchronization is invoked 
//  Default handling of number values 
//  Calling 'public int aVarargsMethod2(int i, String... strings)' - returns int+length_of_strings 
//  Need to copy into separate Collection here, to avoid side effects 
//  Note: the XML bean definition for "enigma" always wins since   ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition()   lets XML bean definitions override those "discovered" later via an   @Bean method. 
//  same as java.sql.Connection.TRANSACTION_SERIALIZABLE; 
//  now verify failure on bad id 
//  (implicit) stack map frame, if needed. 
//  qualifier added, but includes no value 
//  StepVerifier will block 
//  Make sure body is consumed to avoid leak reports 
//  else... 
//  non-static method, primitive type return 
//  - The strings corresponding to the Exceptions attribute, or null. 
//  If codebaseUrl is set, try to load the class with the RMIClassLoader.   Else, propagate the ClassNotFoundException. 
//  Resolve regularly, caching the result in the BeanDefinition... 
//  now test with non-string 
//  Invalid 
//  Don't let calling code try to dereference the factory if the bean isn't a factory. 
//  getter 
//  copy in the sub-array 
//  HTTP 1.1 Cache-Control header: "no-cache" is the standard value,   "no-store" is necessary to prevent caching on Firefox. 
//  SmartContextLoader 
//  SPR-16060 
//  InlineList 
//  Initializer should have doubled value 
//  Get the start offset of the cp_info structure (plus one), and read the CONSTANT_Utf8 entry   designated by the first two bytes of this cp_info. 
//  Reset the {@link #nextListElement} of all the basic blocks that have been processed to null, 
//  Add the instruction to the bytecode of the method. 
//  Cache to hold already loaded properties per filename 
/*  L2  */
//  Consider self references as a final pass...   but in the case of a dependency collection, not the very same bean itself. 
//  If the list is purely literals, it is a constant value and can be computed and cached 
//  use normal response 
//  Avoid Validator invocation on FactoryBean.getObjectType/isSingleton 
//  Reset all bean definitions that have the given bean as parent (recursively). 
//  Put attribute_name_index and attribute_length. 
//  for each property value in the new set 
//  JSR-330 API not available - simply skip. 
//  Regular case: find a handler method reflectively. 
//  SPR-6741 
//  Transport error => fallback 
//  If no other property specified, consider bean name as static field expression. 
//  If we got a TransactionAwareDataSourceProxy, we need to perform transactions   for its underlying target DataSource, else data access code won't see   properly exposed transactions (i.e. transactions for the target DataSource). 
// ---------------------------------------------------------------------   Implementation of ConfigurableEnvironment interface  --------------------------------------------------------------------- 
//  Expose request to the current thread (for SpEL expressions) 
//  The generated code should include boxing of the int to a Number 
//  All remaining parameters must be of this type or convertible to this type 
//  SPR-16067, SPR-16695 
//  Check whether token contains illegal whitespace within text. 
//  If no attributes, the qualifier must be present 
//  AbstractGenericWebContextLoader 
//  JPA 2.0: return EntityManagerFactory without creating an EntityManager. 
//  no java:comp/env prefix 
//  UTF-8 by default 
//  Similar declaration exists in AbstractSockJsSession.. 
//  with a ret, in {@link Label#addSubroutineRetSuccessors}. 
//  will be using the cached accessor this time 
//  Delegating implementation of SmartLifecycle 
//  See TestCacheInterceptor 
//  skip to child 
//  DontCheck(InterfaceIsType): can't be fixed (for backward binary compatibility). 
//  SPR-17619 
//  ref to method 
//  Standard Java types do not have non-standard annotations on them ->   skip any load attempt, in particular for Java language interfaces. 
//  FreeMarker will only accept known keys in its setSettings and 
//  Track whether it is instantiation/destruction aware 
//  determine name of the object and property 
//  Pattern match?
//  Includes fallback search for single EntityManagerFactory bean by type. 
//  
//  Keep a snapshot of the request attributes in case of an include,   to be able to restore the original attributes after the include. 
//  Determine locale to use for this RequestContext. 
//  First, the getSQLState check... 
//  SPR-13435 
//  Save flash attributes 
//  enable repeated reads of response body 
//  SPR-15831 
//  Special handling of boolean property. 
//  Absolutely needs thread-bound DataSource to initialize. 
//  ServletResponse required for all further argument types 
//  SPR-14899 
//  ignore the output 
//  Read the bytecode 'code' array to create a label for each referenced instruction. 
//  Now cause it to throw an exception: 
//  If sourceClass is Number and targetClass is Integer, the following message should expand to: 
//  Visit the runtime visible instruction annotations, if any. 
//  Static expansion helpers 
//  Should only have one child element: ref, value, list, etc. 
//  /{*foobar} is at the start 
//  consume STAR/DIV/MOD 
//  These are only checked for current Ctx (not parent ctx) 
//  From non-transactional code running in active transaction synchronization   -> can be safely removed, will be closed on transaction completion. 
//  Use JVM temp dir as ServletContext temp dir. 
//  Should have thrown BeanCreationNotAllowedException 
//  the check method is also cached 
//  gh-23484 
//  Register a custom MethodFilter... 
//  non static field 
//  due to a warning in Quartz 2.2's JobStoreCMT 
//  and 08xxx will be data resource failure (non-transient) picked up by the fallback SQLState translator 
//  TODO Enable TestNG test with timeout once we have a solution.
//  We need a transaction for this method...
//  wait for the entry to expire 
//  Subscription should have happened by now due to ChannelSendOperator 
//  Now test the ThreadLocal one 
//  Relative path 
//  Mark as infrastructure bean and attach source location. 
//  Resolve arguments eagerly, for the case where the message   is defined in a parent MessageSource but resolvable arguments   are defined in the child MessageSource. 
//  its current set of PropertySources. 
//  SPR-12597 
//  Recursive invocation, parsing placeholders contained in the placeholder key. 
/*  named =  */
//  "Hello world! (Japanese) 
//  true during the previous iteration. The actual frame content is computed in MethodWriter. 
//  Exception handling 
//  placeholders nested within the value of "p4" are unresolvable and cause an 
//  Plain bean instance -> register it directly. 
//  parseCheck("new int[] {1, 2, 3, 4, 5}", "new int[] {1,2,3,4,5}");   }   
//  Explicitly check for identity too: for Connection handles that do not implement   "equals" properly, such as the ones Commons DBCP exposes). 
//  Call any method: should cause automatic tx invocation 
//  -- AND and NOT -- 
//  Passing (Integer, String[]) on call to (String, String[]) is exact match 
//  Need to provide an independent DefaultConversionService, not the   shared DefaultConversionService used by PropertySourcesPropertyResolver. 
//  type-safe access to servlet-specific methods 
// ---------------------------------------------------------------------   Implementation of BeanDefinitionRegistry interface  --------------------------------------------------------------------- 
//  get the root bean name - will be the name of the generated proxy factory bean 
//  just ignore since we are already in the block 
//  ANSI C's asctime() format 
//  Visit the bytecode instructions. First, introduce state variables for the incremental parsing   of the type annotations. 
//  Support classes 
//  test the root mapping for /foo/* w/o a trailing slash - <host>/<context>/foo 
//  Rollback (automatically) 
//  The bytecode offset of the next runtime visible type annotation to read, or -1. 
//  Reset connection. 
//  This may fail if one of the annotations is not available.
//  Construct using org.springframework.protobuf.Msg.newBuilder() 
//  Make sure bean class is actually resolved at this point, and   clone the bean definition in case of a dynamically resolved Class   which cannot be stored in the shared merged bean definition. 
//  -> allow the current bean method to override it, since it is application-level 
//  Converting from an int to a Number 
//  Hibernate 5.2's createQuery method declares a new subtype as return type,   so we need to use reflection for binary compatibility with 5.0/5.1 here. 
//  If agentId was specified, we were only supposed to locate that   specific MBeanServer; so let's bail if we can't find it. 
//  We must always calculate hashCode based on the proxy. 
//  We arrived at the original timestamp - round up to the next whole second and try again... 
//  SPR-15835 
//  Should now match all getter methods 
//  Passing (String, Integer, String[]) on call to (String, String, String[]) is exact match 
//  --- setContextPath 
//  Should not throw NPE 
//  Check can cast to GroovyObject 
//  The writer will call MultipartHttpOutputMessage#write which doesn't actually write   but only stores the body Flux and returns Mono.empty(). 
//  Let the XML loader process the configuration. 
//  By hypothesis, num_element_value_pairs is stored in the last unsigned short of 'annotation'. 
//  package private 
//  This would be legal, at least if not actually _starting_ a tx 
//  Must generate CGLIB subclass... 
//  Any call will do 
//  No need to revisit the target annotation type: 
//  Check decorated bean definition, if any: We assume it'll be easier 
//  FORWARD/ERROR/ASYNC: minimal message (there should be enough context already) 
//  A Groovy script, probably creating an instance: let's execute it. 
//  Supplier-based log methods 
//  strip the first "core" directory while keeping the "file:" prefix. 
//  SPR-11130 
//  Null model arguments added without a name being explicitly supplied are not allowed 
//  note: "Id" is not a valid JavaBean name, nevertheless it is treated as "id" 
//  when 
//  Save 
//  Take getInterceptors() List as-is when passed in here 
//  Raise a proper exception in case of a null target 
//  Shortcut: AnnotatedElementUtils would have to expect AnnotatedElement.getAnnotations()   to return a copy of the array, whereas we can do it more efficiently here. 
//  Check for illegal characters.. 
//  bogus method 
// :	('new' qualifiedId LPAREN) => 'new' qualifiedId ctorArgs -> ^(CONSTRUCTOR qualifiedId ctorArgs) 
//  Remove a basic block from the list of blocks to process. Note that we don't reset   basicBlock.nextListElement to null on purpose, to make sure we don't reprocess already 
//  just in case 
//  We handle OPTIONS transparently, so don't match if no explicit declarations 
//  Shortcut for avoiding synchronization... 
//  repeated evaluation to drive use of cached executor 
//  SPR-14506 
// 		checkError("/{foo}{bar}/",6,PatternMessage.CANNOT_HAVE_ADJACENT_CAPTURES); 
//  EntityManagerFactoryInfo.getEntityManagerInterface returns null 
//  set JPA 2.0 shared cache mode 
//  SPR-13309 
//  SPR-12592 
//  NEEDS TO OVERRIDE THE REFLECTION ONE - SHOW REORDERING MECHANISM 
//  Keep a default MessageCodesResolver 
// ---------------------------------------------------------------------   Implementation of JSR-303 Validator interface  --------------------------------------------------------------------- 
//  SPR-9983 
//  Scan the factory bean methods 
//  Work out whether to apply setter autowiring or constructor autowiring.   If it has a no-arg constructor it's deemed to be setter autowiring,   otherwise we'll try constructor autowiring. 
/* 		 * Using a volatile invariant allows us to initialize the FastClass and		 * method index pairs atomically.		 *		 * Double-checked locking is safe with volatile in Java 5.  Before 1.5 this		 * code could allow fastClassInfo to be instantiated more than once, which		 * appears to be benign.		  */
//  relax the treatment of unresolvable nested placeholders 
//  Caches object obtained from FactoryBean if it is a singleton. 
//  Invert the boolean 
//  fall back to getRelative 
//  -----------------------------------------------------------------------------------------------   Accessors   ----------------------------------------------------------------------------------------------- 
//  Explicit reference equality is added here just in case Arrays.equals does not have one 
//  Implicit toggling of ascending?
//  ----------------------------------------------------------------------------------------------   Methods to parse a Code attribute   ---------------------------------------------------------------------------------------------- 
//  try with non-existing value 
//  Active profiles must be unique 
//  gh-23358 
//  Default to "text/plain" 
//  What's a reasonable expectation for _any_ server or developer machine load?   3 seconds?
//  IllegalStateException from sharing the underlying JDBC Connection   which typically gets committed first, e.g. with Oracle AQ --> ignore 
//  Create a proxy with JndiObjectFactoryBean's proxy interface and the JndiObjectTargetSource. 
//  SPR-13083 
//  SPR-14372 (case insensitive) 
//  parseCheck("{'a','b','a','d','e'}.distinct()");   } 
//  SPR-15839 
//  Add any property definitions that need adding. 
//  expected 
//  Finally register the scheduled tasks 
//  Use current user schema if no schema specified 
// projection: PROJECT^ expression RCURLY!; 
//  Static method references 
//  Get the MBean server connection. 
//  Add the Hibernate transaction to the session holder. 
//  SPR-10062 
//  Can't compile this as we aren't going down the getfalse() branch in our evaluation 
//  index 0 is the super class 
//  currently does not know about java.util by default  		assertEquals(java.util.List.class,locator.findType("List")); 
//  on Hibernate 5.0.x or lower - no need to change the default there 
//  Use hashCode of reference proxy. 
//  Shouldn't succeed in inserting into table which doesn't exist 
// ---------------------------------------------------------------------   Implementation of ResourcePatternResolver interface  --------------------------------------------------------------------- 
// ---------------------------------------------------------------------   Abstract methods that must be implemented by subclasses  --------------------------------------------------------------------- 
//  Set content type before writing 
//  no more path left to match this element 
//  Gather all methods with matching name and parameter size. 
//  Throw UnexpectedRollbackException if we have a global rollback-only   marker but still didn't get a corresponding exception from commit. 
//  Verifying that after a number of compilations, the classloaders   used to load the compiled expressions are discarded/replaced.   See SpelCompiler.loadClass() 
//  Source and subclasses should be supported according to the JAXB2 spec, but aren't in the RI   Source.class.isAssignableFrom(clazz) || 
//  Nothing to do. 
//  Assumes no overloading 
//  Check whether a session is required. 
//  SPR-11391 
// -----------------------------   SPR-2454 Test Classes  ----------------------------- 
//  Just to test ASM5's bytecode parsing of INVOKESPECIAL/STATIC on interfaces 
//  SPR-12816 
//  RFC 850 
//  Multiplication 
//  ---------------------------------------------------------------------   Public constants   --------------------------------------------------------------------- 
//  Passing (Integer, String[]) on call to (Integer, String[]) is exact match 
//  Avoid using java.util.stream.Stream in hot paths 
//  Unexpected rollback only matters here if we're asked to fail early 
//  WebSocketHandlerDecorator could close the session 
//  If the map is purely literals, it is a constant value and can be computed and cached 
//  No such factory bean 
//  No suitable ModelAndViewResolver... 
//  Single-value (with or without reactive type wrapper) 
//  Ensure headers are flushed even if no body was written. 
//  Call internal method to avoid getting the default code back   in case of "useCodeAsDefaultMessage" being activated. 
/* 	 * SPR_2165 - ClassEditor is inconsistent with multidimensional arrays	  */
//  as FactoryBean would ultimately return. 
//  The BootstrapMethods attribute is read in the constructor. 
//  Is this a covariant return type situation?
//  Create a new EntityManager for use within the current transaction. 
//  Force Mockito to invoke the interface default method 
//  First, just reset the milliseconds and try to calculate from there... 
//  should not happen 
//  Multicast right now if possible - or lazily once the multicaster is initialized 
//  Check that returning and throwing were in the argument names list if 
//  or using assignment within the expression 
//  neither foo nor bar properties are present -> validating should throw 
// 	// time it compiled  	stime = System.currentTimeMillis(); 
//  A singleton aspect. 
//  SPR-3625 
// -------------------   SPR-3304 classes  ------------------- 
//  Insert a stack map frame for this bytecode offset, if requested by setting insertFrame to 
//  "spouse", "touchy", "age" should not be copied 
//  Fallback to Spring's own SQL state translation... 
//  For parameter source lookups we need to provide case-insensitive lookup support since the   database meta-data is not necessarily providing case-sensitive column names 
//  Check specifically registered converters 
//  If the PropertyEditor returned null, there is no appropriate   text representation for this value: only use it if non-null. 
//  conversion ability for map values. 
//  We need to work it out. 
/*  Using short class names as default bean names by default.  */
//  For any other Throwable, e.g. OutOfMemoryError: let it get propagated as-is. 
//  Set the session attribute 
//  Try to locate existing MBeanServer, if desired. 
//  Must now continue to report back as not having been modified 'cos the Resource does not support access as a File (and so the lastModified date cannot be determined). 
//  Class not found - can't resolve class reference in annotation attribute. 
//  Abstract types popped from the stack or read from local variables. 
//  faking no message received 
//  SPR-12813 
//  testing simple /**/behavior 
//  ---- reproduce ---- 
//  RIGHT==null LEFT!=null 
//  - The offset of the MethodParameters attribute, or 0. 
//  Shouldn't really happen, as a rollback doesn't cause a flush. 
//  the DAY_OF_WEEK values in java.util.Calendar start with 1 (Sunday),   but in the cron pattern, they start with 0, so we subtract 1 here 
//  unwrap infrastructure proxy 
//  filter is enabled by default 
//  here: RIGHT==null LEFT==unknown 
//  SPR-12945 
//  maybe 
//  use 4 and 2 bytes respectively. 
//  Stop all Lifecycle beans, to avoid delays during individual destruction. 
//  Cache debug flag to avoid repeated checks. 
//  The expression being parsed 
//  Unknown Number subtypes -> best guess is double comparison 
//  to support styles of field injection. 
//  If srcType is any other type, merge(srcType, dstType) = TOP. 
//  take bean from context 
//  will have parent 
//  ordered by priority - operands first 
//  Corresponding attribute method not found: cannot expose empty array. 
//  The reflection one will be used for other properties... 
//  Create the connector server now. 
//  Only actually register it if there are destinations specified;   otherwise @SubscribeMapping is just being used as a (meta-annotation) marker. 
//  then ask them to read it 
//  calling a factory method that accepts arguments without any arguments emits an exception unlike cases   where a no-arg factory method is called with arguments. Adding this test just to document the difference 
//  SPR-16683 
//  General execution 
//  Visit the end of the class. 
//  SPR-12811 
//  We must avoid fetching a target Connection for "hashCode",   and we must return the same hash code even when the target   Connection has been fetched: use hashCode of Connection proxy. 
//  Server and session id's must not contain "." 
//  Cover all PathElement kinds 
//  Demonstrates it works if we actually use the subtype 
//  Find the start and end bytecode offsets of this unreachable block. 
//  Ok 
//  Assume annotations source. 
//  At this point we know we're streaming.. 
//  an int and leave the dot as a separate token. 
//  In case of FactoryBean, try to match FactoryBean instance itself next. 
//  This may not be all the URI variables, supply what we have so far.. 
//  Query should not succeed since parameter declaration did not specify parameter name 
//  custom optional attributes 
//  overridable hooks 
//  Passing (Sub, String[]) on call to (Super, String[]) is exact match 
//  Save the first exception but invoke all interceptors 
//  Replace its instructions with NOP ... NOP ATHROW. 
//  simply proceed 
//  SPR-12810 
//  Determine default EntityResolver to use. 
//  Workaround for WebLogic 10.3 
// -------------------------------------------------------------------------   Convenience methods for loading individual objects  ------------------------------------------------------------------------- 
//  Probably in a Jigsaw environment on JDK 9+ 
//  Running in SpelCompilerMode.immediate mode - propagate exception to caller 
//  Fetch JTA UserTransaction from JNDI, if necessary. 
//  Inventions Array 
//  Invoke method on target Session. 
//  wrapping, not allocating 
//  Remove LeakAwareDataBuffer wrapper so delegate can find native buffers 
//  Visit the EnclosingMethod attribute. 
//  -----------------------------------------------------------------------------------------------   Methods related to the output frame   ----------------------------------------------------------------------------------------------- 
//  Act 
//  SPR-10414 
//  Actually invoke the message listener... 
//  minor_version and major_version fields, which use 4, 2 and 2 bytes respectively. 
//  varargs double 
//  null instance registered 
//  Take default from containing bean in case of an inner bean definition. 
//  meta annotation with qualifier 
//  No pre-built EntityManager found -> build one based on factory.   Obtain EntityManagerFactory from JNDI? 
//  Try to obtain the FactoryBean's object type from its factory method   declaration without instantiating the containing bean at all. 
//  The previous path element in the chain 
//  const_value_index, CONSTANT_Double   const_value_index, CONSTANT_Float   const_value_index, CONSTANT_Integer   const_value_index, CONSTANT_Long 
//  Non-empty payload 
//  Expose remaining arguments as vararg array for last parameter 
//  Note that, by construction in this method, a block which calls a subroutine has at   least two successors in the control flow graph: the first one (added below) leads to   the instruction after the JSR, while the second one (added here) leads to the JSR   target. Note that the first successor is virtual (it does not correspond to a possible   execution path): it is only used to compute the successors of the basic blocks ending 
//  something transactional 
// ---------------------------------------------------------------------   Implementation of ConfigurableApplicationContext interface  --------------------------------------------------------------------- 
//  It is a primitive type 
//  leading control character 0x7F (DEL) 
//  https://example.com/resource? 
//  intentionally omitted: attribute = "value" 
//  Ask the expression AST to generate the body of the method 
//  Shortcut if possible... 
//  not a useful expression but tests nested expression syntax that clashes with template prefix/suffix 
//  Key is of form: prefix<name>.property 
//  Set our (possibly massaged) deep copy. 
//  Check for special "redirect:" prefix. 
//  Matched method on {@link LoggingAspect} 
//  Returns the type_argument_index of the path element of the given index. 
//  defensive check: singleton, non-static should work with null array 
//  gh-23205 
//  Set statement separator to double newline so that ";" is not   considered a statement separator within the source code of the   aliased function 'REVERSE'. 
//  SPR-9142 
//  Check given bean name whether it is unique. If not already unique,   add counter - increasing the counter until the name is unique. 
//  Test whitespace String 
//  Add 'label' as a successor of the current basic block. 
//  varargs float 
//  Invariant: currentOffset is the offset of a field_info structure.   Skip the access_flags, name_index and descriptor_index fields (2 bytes each), and read the   attributes_count field. 
//  Path is exhausted, only match if rest of pattern is * or **'s 
//  Trigger destruction of dependent beans first... 
//  on Servlet 4.0 
//  Registering top path found. 
//  System.err.println(configAttributes);   } 
//  Skip the bootstrap_method_ref and num_bootstrap_arguments fields (2 bytes each),   as well as the bootstrap_arguments array field (of size num_bootstrap_arguments * 2). 
//  Load default SQL error codes. 
//  Static, factory methods 
//  Copy the BootstrapMethods, if any. 
//  TilesConfigurer: resources under "/WEB-INF/**/tiles.xml" 
//  Try with Locale.US - Use a different test msg that requires no args 
//  Now populate the database 
//  Request 3 retrieves and invalidates 
//  SPR-10140, SPR-16867 
//  Try file existence: can we find the file in the file system?
//  Not started, already stopped, or previous stop attempt in progress   -> return immediately, no stop process to control anymore. 
//  Checks that the custom keyGenerator was used 
//  As of JDK 8, invoking getAnnotation() on a bridge method actually   finds an   annotation on its 'bridged' method [1]; however, the Eclipse compiler   will not   support this until Eclipse 4.9 [2]. Thus, we effectively ignore the   following   assertion if the test is currently executing within the Eclipse IDE.   [1] https://bugs.openjdk.java.net/browse/JDK-6695379   [2] https://bugs.eclipse.org/bugs/show_bug.cgi?id=495396 
//  Chew on the expression text - relying on the rules:   brackets must be in pairs: () [] {}   string literals are "..." or '...' and these may contain unmatched brackets 
//  First request: no session yet, new session created 
//  OpMultiply 
//  Standard transaction demarcation with getTransaction and commit/rollback calls. 
//  With a /** on the end have to check if there is any more data post 
/* 	 * Set the default parent for views defined in the {@code ResourceBundle}.	 * <p>This avoids repeated "yyy1.(parent)=xxx", "yyy2.(parent)=xxx" definitions	 * in the bundle, especially if all defined views share the same parent.	 * <p>The parent will typically define the view class and common attributes.	 * Concrete views might simply consist of a URL definition then:	 * a la "yyy1.url=/my.jsp", "yyy2.url=/your.jsp".	 * <p>View definitions that define their own parent or carry their own	 * class can still override this. Strictly speaking, the rule that a	 * default parent setting does not apply to a bean definition that	 * carries a class is there for backwards compatibility reasons.	 * It still matches the typical use case.	  */
//  SPR-11872 
//  Decorate based on custom attributes first. 
//  Don't try to determine contentLength on InputStreamResource - cannot be read afterwards...   Note: custom InputStreamResource subclasses could provide a pre-calculated content length! 
//  Use a factory bean for the resources so they can be given an order if a pattern is used 
//  SPR-3173 
// ---------------------------------------------------------------------   Implementation of SavepointManager  --------------------------------------------------------------------- 
//  If we have nested annotations, we need them as nested maps 
// consume PLUS or MINUS or INC 
//  Do not apply formatting on binding failures like type mismatches. 
// ---------------------------------------------------------------------   Reading  --------------------------------------------------------------------- 
//  Transactional code threw application exception -> rollback 
//  Usual case: A BindingResult is available as request attribute.   Can determine error codes and messages for the given expression.   Can use a custom PropertyEditor, as registered by a form controller. 
//  Call close() at this point if it's a new Session... 
//  Register a default embedded value resolver if no bean post-processor   (such as a PropertyPlaceholderConfigurer bean) registered any before: 
//  the maybe case 
//  Remove destroyed bean from other beans' dependencies. 
//  We start with an index of -1 and increment early. 
//  ServletRequest / HttpServletRequest / MultipartRequest / MultipartHttpServletRequest 
//  Shouldn't succeed in creating stored procedure with unnamed parameter 
//  cached accessor used 
//  Use same Connection for further JDBC actions within the transaction.   Thread-bound object will get removed by synchronization at transaction completion. 
//  */* includes anything 
//  Other numbers are not yet supported (isCompilable will not have returned true) 
//  Match found for this bean: do not match FactoryBean itself anymore. 
//  evaluate("aVarargsMethod2(8,new String[]{'a','b','c'})", 11, Integer.class); 
//  Generally only look for a pattern after a prefix here,   and on Tomcat only after the "*/" separator for its "war:" protocol. 
//  We would typically expect an IllegalStateException, but Hibernate throws a   PersistenceException. So we assert the contents of the exception message instead. 
//  RxJava 1 
//  at this point, primarily for resolution in annotation attribute values. 
//  It's a full or lite configuration candidate... Let's determine the order value, if any. 
//  method return type matches the predicted type then we can use that. 
//  then this type is no longer uninitialized at the end of basic block. 
//  We can't read multipart, so skip this supported media type. 
//  Always return a non-transactional Connection. 
//  Null object is not equal 
//  Should work identically on subclass definition, in which lookup 
//  IMPORTANT: this must be the last part of the ClassFile size computation, because the previous 
//  toArray() 
//  Set parent so that references (up container hierarchies) are correctly resolved. 
//  useful for profiling to take snapshots   System.in.read(); 
//  A Class: We'll cache the Class here and create an instance   outside of the synchronized block. 
//  NOTE: if we omit the @WebAppConfiguration declaration, the ApplicationContext will fail   to load since @EnableWebMvc requires that the context be a WebApplicationContext. 
//  RxJava 2 
//  No cache resolved for the operation 
//  Consider as not determinable. 
//  No need to iterate the methods if we're matching any method anyway... 
//  Open a plain Hibernate transaction without specified timeout. 
//  Declared type variables to inspect?
//  Remain open in the session list. 
//  conventional RMI service 
//  Set up the escalation list... 
//  Try to find cached factory for Locale: 
//  Simply proceed, no equivalent superclass constructor found... 
//  If we don't have a bean type, fallback to the predicted type 
//  Use copy of given root bean definition. 
//  To start with, we populate the result with a copy of all attribute values   from the target annotation. A copy is necessary so that we do not 
//  Will invoke inner.getName, which is non-transactional 
//  avoid nested generic 
//  Fallback: target bean at least found by bean name. 
//  should require one handler method at least 
//  this is a proxy so it should be reset to default 
//  better candidate can be found. 
//  non existent indexer (wibble made up) 
//  Use SecondMsg.newBuilder() to construct. 
//  DontCheck(AbbreviationAsWordInName): can't be renamed (for backward binary compatibility). 
//  Dispose of temporary files in case of streaming variant... 
//  No need to consider this if back-off is set 
//  Keep CGLIB happy 
//  JMS 
//  Work it out and cache it. 
//  Check manually registered singletons. 
// SPR-16754 
//  No way to verify queue capacity 
//  SPR-9445   without null conversion 
// 			org.springframework.expression.spel.SpelEvaluationException: EL1008E:(pos 15): Property or field 'wibble' cannot be found on object of type 'org.springframework.expression.spel.testresources.ArrayContainer' - maybe not public?  					at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225) 
//  Invoke method on current EntityManager. 
//  Legacy ContextLoaders don't know how to process classes 
//  First, build the clients 
// -------------------------------------------------------------------------   Exposure of transaction characteristics  ------------------------------------------------------------------------- 
//  Remove the connection holder from the thread. 
//  For instance supplied beans try the target type and bean class 
// ---------------------------------------------------------------------   HttpServletResponse interface  --------------------------------------------------------------------- 
//  RMI invoker 
//  SPR-13443 
//  This test helper has a bound on the type variable 
//  Ignore 
//  second rollback attempt 
//  Mono 
//  Internal exception - has been handled before. 
//  SPR-7970 
//  Else, just do a toString. 
//  Must not be able to set empty exit message 
// ---------------------------------------------------------------------   ServletResponse properties  --------------------------------------------------------------------- 
//  Let's check for lookup methods here... 
//  Ignore, we'll add a default HandlerAdapter later. 
//  right is a double 
//  SPR-13311 
//  Expect a transaction 
//  Invoke factory processors registered with the context instance. 
//  Use path info if available. Indicates index page within a servlet mapping?   e.g. with index page: URI="/", servletPath="/index.html"
//  We need a proxy and a JndiObjectTargetSource. 
/*  * Auto proxy creator that identifies beans to proxy via a list of names. * Checks for direct, "xxx*", and "*xxx" matches. * * <p>For configuration details, see the javadoc of the parent class * AbstractAutoProxyCreator. Typically, you will specify a list of * interceptor names to apply to all identified beans, via the * "interceptorNames" property. * * @author Juergen Hoeller * @since 10.10.2003 * @see #setBeanNames * @see #isMatch * @see #setInterceptorNames * @see AbstractAutoProxyCreator  */
//  Use same EntityManager for further JPA operations within the transaction.   Thread-bound object will get removed by synchronization at transaction completion. 
//  Force static initializers to run. 
//  Convert Collection elements to array elements. 
//  InheritedAnnotationClass is NOT annotated or meta-annotated with @Component,   @Service, or @Order, but it is annotated with @Transactional. 
// assertEquals(1, conf.getInvocations()); 
//  SPR-15975 
//  Set dynamically chosen port 
//  deprecated on Protobuf 3.9 
//  Then try again with a different class loader on the target... 
//  Visit the RuntimeVisibleAnnotations attribute. 
//  ... and remove it from the front 
//  Neither child element nor "ref" or "value" attribute found. 
//  Check to see if an MBeanServer is registered. 
//  SPR-17306 (nested close) 
//  URI var parsed into path variable + matrix params.. 
//  test matching with **'s 
//  Invoke BeanDefinitionRegistryPostProcessors first, if any. 
//  Coroutines 
//  Emit a frame for this unreachable block, with no local and a Throwable on the stack 
//  array construction 
//  Check commit - avoid commit call within a JTA transaction. 
//  SingleCharWildcardPathElement 
//  Not initialized yet: return our setting for the time being. 
//  <-- not a valid value (the key)...
//  MySQL style escapes 
//  should be dynamic proxy 
//  A url() function without unquoted 
//  no-op 
//  test is an invalid value 
//  If not present, do nothing for the time being...   We can fall back on "reactive-streams-flow-bridge" (once released) 
//  No such bean defined 
//  Similar test with compiled expression 
//  Remove Level 3-A 
//  Resolve the forward references to this label, if any. 
//  These properties are meaningless for JNDI, but we don't worry about that:   the underlying JNDI implementation will throw exceptions when the user tries   to look anything up 
//  singleton bean (top-level or inner): register on the fly 
//  The following if-condition (which basically mimics   AbstractEnvironment#validateProfile(String)) is necessary in order   to ensure that the Profiles implementation returned by Profiles.of()   never passes an invalid (parsed) profile name to the active profiles   predicate supplied to Profiles#matches(Predicate<String>). 
//  Won't be advised 
//  @Bean 
/*  visible =  */
//  Do not create the node if it does not exist... 
//  Other header names 
//  Sort methods into a sensible order 
//  should be at maximum now 
//  SPR-17140 
//  only one call made  - the first EM definition wins (in this case the one w/ the properties) 
//  - The offset of the NestMembers attribute, or 0. 
//  Check for match in children -> negative 
//  manually trigger an Exception with the above bad MessageListener... 
//  varargs string 
//  If unable to set the value the operand is not writable (e.g. 1++ ) 
//  Bug in javac: type array excludes enclosing instance parameter   for inner classes with at least one generic constructor parameter,   so access it with the actual parameter index lowered by 1
//  invoke a transactional method, causing the PlatformTransactionManager bean to be resolved. 
//  It's an input parameter; must be supplied by the caller. 
//  wrap errors in a Model 
//  tm has no synch enabled (used at outer level), tm2 has synch enabled (inner level) 
//  parameterize 
//  a parameterized type is always assignable to its raw class type 
//  SPR-8683 
//  Collect the parameters from all the remaining segments 
//  within PriorityOrdered 
//  Security settings are disallowing reflective access; fall back to 'method' below. 
/* 	 * See comments in spec on EntityManager.joinTransaction().	 * We take the view that this is a valid no op.	  */
//  Apply kept transaction settings, if any. 
//  Invocation on Connection interface coming in... 
//  Enforce ASM via class name resolution 
//  jdbcProperties 
//  skip a 
//  methods_count and attributes_count) use 2 bytes each, and each interface uses 2 bytes too. 
//  Simply return the configured ScriptEngine... 
//  evaluates to true 
//  We don't want to visit the other target_type annotations, so we just skip them (which   requires some parsing because the element_value_pairs array has a variable size). First, 
//  Specific exception match found. 
//  CTL = <US-ASCII control chars (octets 0 - 31) and DEL (127)> 
//  the first constant pool entry, which itself starts at cpInfoOffsets[1] - 1 (by definition). 
//  re-activating and re-closing the context (SPR-13425) 
//  SPR-13317 
//  Determine if the final passed argument is already suitably packaged in array 
//  10 seconds is Tomcat's default 
//  default web binding initializer behavior test 
// 		Map<String, String> namespace = Collections.singletonMap("ns", ""); 
//  Servlet 3.0 getParameterMap() not guaranteed to include multipart form items   (e.g. on WebLogic 12) -> need to merge them here to be on the safe side 
//  If it's a URL or a path pointing to an existing resource, use it as-is. 
//  Static field access on a T() referenced type 
//  2. Resolve with Accept-Encoding 
//  Extend to get new interface 
//  Expand the reference. 
//  No more pattern, is there more data?   If pattern is capturing variables there must be some actual data to bind to them
//  For ease of reference, we use here the same attribute order as in Section 4.7 of the JVMS. 
//  Remove the merged bean definition for the given bean, if already created. 
//  The activate() call will cause an assignment to the activated variable. 
//  Can reuse the pre-parsed metadata from the given BeanDefinition... 
//  SPR-13318 
//  unary plus 
//  gh-22010 
//  Returned type may be null if the factory is unable to determine the type. 
//  This check is different to the one in the other numeric operators (OpLt/etc)   because we allow simple object comparison 
//  Explicitly remove target for a proxy, if registered already,   in order to avoid double invocations of the same listener. 
//  void return value 
//  Attempt to load the PlatformMBeanServer. 
// 			actualNames[i] = resources[i].getFilename();  		}  		List sortedActualNames = new LinkedList(Arrays.asList(actualNames));  		List expectedNames = new LinkedList(Arrays.asList(fileNames));  		Collections.sort(sortedActualNames);  		Collections.sort(expectedNames);   
//  Assert that the supplied mapping is unique. 
//  name is ok but foobar does not exist: 
//  AST: 
//  Short "0" or "-1" like values are never valid HTTP date headers...   Let's only bother with DateTimeFormatter parsing for long enough values. 
//  SPR-13319 
//  Just use default parent if we're not dealing with the parent itself,   and if there's no class name specified. The latter has to happen for 
//  replace the request context with one containing the errors 
//  SPR-9571 and SPR-14363 
//  SPR-17144 
//  see if Commons FileUpload can read what we wrote 
//  These tests below verify that the chain of static accesses (either method/property or field)   leave the right thing on top of the stack for processing by any outer consuming code.   Here the consuming code is the String.valueOf() function.  If the wrong thing were on   the stack (for example if the compiled code for static methods wasn't popping the   previous thing off the stack) the valueOf() would operate on the wrong value.
//  of it, avoiding any deadlock potential with Servlet container locks. 
//  The head of the path element chain currently being built 
//  Remove entire ThreadLocal if empty... 
//  Internal helpers 
//  Use a locale that doesn't result in the generation of HTML entities 
//  processed basic blocks. 
//  Add the constant pool items in the symbol table entries. Reserve enough space in 'entries' to   avoid too many hash set collisions (entries is not dynamically resized by the addConstant* 
//  SPR-8687 
//  pattern uses extension mapping but starts with / (treated as exact match) 
//  Full method signature 
//  One char's not allowed 
//  T <= ? super T 
//  a class path resource (multiple resources for same name possible) 
//  Try to get the exact method first. 
//  It's an interceptor, so we just invoke it: The pointcut will have   been evaluated statically before this object was constructed. 
//  RSocketStrategies and RSocketFactory configurers should have been called 
//  graph, and add these blocks to the list of blocks to process (if not already done). 
//  We're assumably within the original request thread... 
//  Correctly returns true for a class 
//  ---------------------------------------------------------------------   HttpServletRequest properties   --------------------------------------------------------------------- 
//  <-- not a valid value...
//  should still be the first bean with name Rob Harrop 
//  attempt to treat the index value as a number 
//  SPR-17146 
//  includes 2 TestBeans from FactoryBeans (DummyFactory definitions) 
//  Load the raw bytes. 
//  - The offset of the LocalVariableTypeTable attribute, or 0. 
//  even when triggered by lifecycle interfaces like BeanFactoryAware. 
//  A plain name 
//  Shouldn't matter for processing but must be unique 
//  Test validly set property matches 
//  If we got a TransactionAwareConnectionFactoryProxy, we need to perform transactions   for its underlying target ConnectionFactory, else JMS access code won't see   properly exposed transactions (i.e. transactions for the target ConnectionFactory). 
//  the EM w/ properties will be created 
//  Look for most specific name match. 
/* 		 * The most common ISO DateTime Format {@code yyyy-MM-dd'T'HH:mm:ss.SSSXXX},		 * e.g. "2000-10-31T01:30:00.000-05:00".		 * <p>This is the default if no annotation value is specified.		  */
//  Default handling of date-time values 
//  attempt to retrieve the instance by its specified name 
//  test serializability 
//  TypedStringValue used to be equivalent to an XML-defined argument String 
//  index of first character 
//  6 header bytes and 2 bytes for line_number_table_length. 
//  Now msg better be as expected 
/*  useNamedValues =  */
//  Try and treat the index value as a property of the context object 
//  let's see if the remote invocation object works 
//  Check if the bean definition itself has defined the type with an attribute 
//  Build default TypeConverter, registering custom editors. 
//  However, FactoryBean may still produce a prototype object... 
//  Technically, cancellation from the result subscriber should be propagated   to the upstream subscription. In practice, HttpHandler server adapters   don't have a reason to cancel the result subscription. 
//  second invocation for bf1 -- should throw   first invocation for bf2 -- should succeed 
//  missing right operand 
//  ClientHttpResponse delegation methods... 
//  @@protoc_insertion_point(class_scope:Msg) 
//  stack: <nothing>   load 0 or 1 depending on comparison instruction 
//  One of these is set so we should not inherit anything 
//  no expectations -> a class file transformer should NOT be added   because no META-INF/aop.xml is present on the classpath 
//  SPR-13096 
//  We only apply special treatment to ScriptFactory implementations here. 
//  1. Subscribe to user destination 
//  Resolve the unescaped message. 
//  SPR-15719 
//  Determine handler adapter for the current request. 
// ---------------------------------------------------------------------   Convenient methods for registering individual beans  --------------------------------------------------------------------- 
//  SPR-10180 
//  requires a body 
//  inline map creation 
//  Variant of above more like what was in the bug report: 
//  Preserve explicitly specified message id... 
//  HTML escaping in tags is performed by the ValueFormatter class. 
//  Exhaustive retrieval of merged annotations... 
//  No NavigationHandler specified through constructor argument:   Call original handler, marking the end of this chain. 
//  Instead of testing for equality to 1, we just assert that the value   was incremented at least once, since this test class may serve as a   parent class to other tests in a suite, etc. 
//  First step: compute the size in bytes of the ClassFile structure.   The magic field uses 4 bytes, 10 mandatory fields (minor_version, major_version,   constant_pool_count, access_flags, this_class, super_class, interfaces_count, fields_count, 
//  Tell the subclass to refresh the internal bean factory. 
//  Constants used in the StackMapTable attribute.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.4. 
//  SPR-356: lookup methods & method replacers are not serializable. 
//  Can use advised and ProxyFactory interchangeably 
//  Check whether we only have one InvokerInterceptor: that is, 
//  assertTrue(multiPackageBeanCount > singlePackageBeanCount); 
//  Fall back to generic setObject call without SQL type specified. 
//  TODO: SPR-15871, SPR-15542
//  ServerContainer 
//  cookie 
//       | (ELVIS^ expression))?; 
//  should handle Salesman (only interface) 
//  Any other than the original exception (or its cause) is unintended here,   probably an accident (e.g. failed assertion or the like). 
//  Get the listener from the map value. 
//  unspecific to specific 
//  overridden attribute: 
//  --- buildRequest 
//  Start the connector server in the same thread. 
//  the other way to start an identifier 
//  First, try with selector header 
//  invoke destroy before tasks have even been scheduled... 
//  Invariant: currentOffset is the offset of an attribute_info structure.   Read the attribute_length field (2 bytes after the start of the attribute_info) and skip   this many bytes, plus 6 for the attribute_name_index and attribute_length fields   (yielding the total size of the attribute_info structure). 
//  leading control and '/' characters 
//  shuffle & sort 10 times 
//  set new theme name 
//  make sure the name has been updated 
//  but does not merge the parent values 
//  Not seen yet 
//  Root context removes it 
//  Hamcrest..   Hamcrest..   Hamcrest.. 
//  - The string corresponding to the Signature attribute, or null. 
//  Extract property name: property is of form dog(ref) 
//  Read the num_bootstrap_methods field and create an array of this size. 
//  It was declared by CGLIB, but we might still want to autowire it 
//  data(Object) 
//  Case of a jump with an offset >= -32768, or of a jump with an unknown offset. In these   cases we store the offset in 2 bytes (which will be increased via a ClassReader ->   ClassWriter round trip if it turns out that 2 bytes are not sufficient). 
//  This will be propagated to views, so we need it. 
//        
//  Arrange 
//  SPR-13800 
//  test message args 
//  Empty 
//  "java.lang.String[]" style arrays 
//  this order confirmed by running the same aspects (minus the Spring AOP advisors)   through AspectJ...   1   2   3,  before proceed   4,  before proceed   5   6   7   8   9,  before proceed   10, before proceed   11, after proceed   12, after proceed   13   14   15, after proceed   16, after proceed   17   18 
//  This is complicated due to the support for dollars in identifiers.   Dollars are normally separate tokens but there we want to combine 
//  Alternative methods relying on RequestContextHolder to find the request 
//  Try PE-based comparison (PE should *not* be allowed to escape creating thread) 
//  but findAnnotationDeclaringClass() should still find it on classes. 
//  SPR-14718, SPR-7598 
//  Wrap the response to ignore further header changes 
//  SPR-10539 
//  root path 
// ---------------------------------------------------------------------   Copy methods for java.io.File  --------------------------------------------------------------------- 
//  Next, invoke the BeanDefinitionRegistryPostProcessors that implement Ordered. 
//  Ignore: no statements created yet. 
//  handle "escaped"/"_" arguments 
//  Give any InstantiationAwareBeanPostProcessors the opportunity to modify the   state of the bean before properties are set. This can be used, for example, 
//  SPR-11868 
//  factoryMethod 
//  Use reflection to invoke the method. 
//  Statically vetoed 
//  SPR-13801 
//  Didn't get removed 
//  MessageSource registered (and found for autowiring) as a bean. 
//  Ignore: no warnings to expose yet. 
//  Using nested <form:option/> tags, so just expose the value in the PageContext... 
//  end of URI variable 
//  Possible flags for the FLAGS field of an abstract type. 
//  INTERNAL HANDLING OF GROOVY CLOSURES AND PROPERTIES 
//  Return default error view else, if defined.
//  setup some values 
//  Find first path element that is not a separator or a literal (i.e. the first pattern based element) 
//  Will pick up misuse of CGLIB 
//  We don't need to test all combination of pointcuts due to BeanNamePointcutMatchingTests 
//  handles Joda-specific types as well as Date, Calendar, Long 
//  Determine RMI registry to use. 
/* 					weblogic.transaction.UserTransaction wut = (weblogic.transaction.UserTransaction) ut;					wut.begin(definition.getName(), timeout);					 */
//  Find all HandlerExceptionResolvers in the ApplicationContext, including ancestor contexts. 
//  mathematical operators 
//  Publish shutdown event. 
//  Check to see if the user has explicitly set a custom bean name... 
//  yes 
//  Cannot set it to a string value 
//  SPR-17630 
//  Simply create a map and call overloaded method. 
//  Propagate exception to caller. 
//  Redirect 
//  Fires context checks 
//  External dtd/xsd lookup via https even for canonical http declaration 
//  Register name and attribute. 
//  SPR-12931 
//  Within a path (e.g. /aa/*/bb) there must be at least one character to match the wildcard 
//  Create a new MBeanServer and register it, if desired. 
//  mixing operators 
//  SPR-14169 
//  Based purely on number of captures 
//  Don't do toString on target, it may be proxied. 
//  September 
//  This won't work as no resolver is known for the payload
//  SPR-15367 
//  Engine attribute only supported for <lang:std> 
//  SPR-10648 (example is from INT-3063) 
//  Will match MyTestBeanSubclass 
//  Determine whether this bean is a scoped-proxy 
//  Can now try multiple tests 
//  ttl = 10s 
//  Consider fallback matches if the first pass failed to find anything... 
//  Needs to be at least one character #SPR15264 
//  Connection exception   PostgreSQL: insufficient resources (e.g. disk full)   PostgreSQL: program limit exceeded (e.g. statement too complex)   DB2: out-of-memory exception / database not started   DB2: unexpected system error 
//  We will perform this validation... 
//  create instance factory definition 
// -------------------------------------------------------------------------   Convenience methods for building XML content  ------------------------------------------------------------------------- 
//  Check with full lock now in order to enforce the same merged instance. 
//  By construction, the first outgoing edge of a basic block that ends with a jsr   instruction leads to the jsr continuation block, i.e. where execution continues   when ret is called (see {@link #FLAG_SUBROUTINE_CALLER}). 
//  3) the input argument was the wrong type and got converted and put into an array 
//  Will be advised but doesn't match 
//  Shouldn't happen with the kind of resources we're using 
//  Note: in the view case, calling withType instead of forType for compatibility with Jackson <2.5 
//  gh-21670 
//  Tyrus 1.11+ 
//  SPR-16434 
//  Do not throw exception, else the main loop of the scheduler might stop! 
//  visitInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitIntInsn   -   visitLdcInsn   visitVarInsn   -   -   -   -   visitInsn   -   -   -   -   -   -   -   visitVarInsn   -   -   -   -   visitInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitIincInsn   visitInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitJumpInsn   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   visitVarInsn   visiTableSwitchInsn   visitLookupSwitch   visitInsn   -   -   -   -   -   visitFieldInsn   -   -   -   visitMethodInsn   -   -   -   visitInvokeDynamicInsn   visitTypeInsn   visitIntInsn   visitTypeInsn   visitInsn   -   visitTypeInsn   -   visitInsn   -   visitMultiANewArrayInsn   visitJumpInsn   - 
//  Passing (String[]) on call to (String[]) is exact match 
//  Need to read interface to determine a match... 
//  Install facade 
//  skip to flight 
//  Expose as variable, if demanded, else write to the page. 
//  Configure the bean factory with context callbacks. 
//  TaskScheduler implementation 
//  Register aliases even when overridden 
//  nothing to do when not creating temporary LOBs 
//  no transactional support for evictIfPresent 
//  Only when the right hand operand is a direct type reference 
//  SmartApplicationListener methods 
//  Delegate to the View object for rendering. 
/*  * Property editor that converts a String into a {@link TransactionAttributeSource}. * The transaction attribute string must be parseable by the * {@link TransactionAttributeEditor} in this package. * * <p>Strings are in property syntax, with the form:<br> * {@code FQCN.methodName=&lt;transaction attribute string&gt;} * * <p>For example:<br> * {@code com.mycompany.mycode.MyClass.myMethod=PROPAGATION_MANDATORY,ISOLATION_DEFAULT} * * <p><b>NOTE:</b> The specified class must be the one where the methods are * defined; in case of implementing an interface, the interface class name. * * <p>Note: Will register all overloaded methods for a given name. * Does not support explicit registration of certain overloaded methods. * Supports "xxx*" mappings, e.g. "notify*" for "notify" and "notifyAll". * * @author Rod Johnson * @author Juergen Hoeller * @since 26.04.2003 * @see TransactionAttributeEditor  */
//  Get the raw content without consuming the response body flux.. 
//  binding from thrown exception 
//  no active profiles are set 
//  This won't block since resolveName below doesn't 
// Null model arguments added without a name being explicitly supplied are not allowed 
//  Create getValue() method 
//  Defensively use lazy-initializing adapter class here as well since the   java.logging module is not present by default on JDK 9. We are requiring   its presence if neither Log4j nor SLF4J is available; however, in the   case of Log4j or SLF4J, we are trying to prevent early initialization   of the JavaUtilLog adapter - e.g. by a JVM in debug mode - when eagerly   trying to parse the bytecode for all the cases of this switch clause.
//  should go through 
//  - The offset of each 'type_annotation' entry in the RuntimeVisibleTypeAnnotations 
//  check original theme 
//  Before commit not invoked 
//  After rollback not invoked 
//  Need lifecycle methods 
//  3) Verify that the AnnotationAttributes and synthesized annotation are equivalent 
//  parseCheck("{1,2,3,4,5,6,7,8,9,10}.?{#isEven(#this) == 'y'}",   "{1,2,3,4,5,6,7,8,9,10}.?{(#isEven(#this) == 'y')}");   } 
//  isOpen() check used below to find out about it. 
//  static method BFPP does not interfere with lifecycle -> autowiring succeeds 
//  Merging path element with element corresponding to top path. 
//  close and stop the listeners 
//  Prepend container prefix if not already specified and no other scheme given. 
//  gh-22740 
//  Based purely on length 
/* 			 * this.mbeanServer = AdminServiceFactory.getMBeanFactory().getMBeanServer();			  */
//  Write out the 'field was present' marker. 
//  explicit no-op 
//  The name potentially contains locale information 
/*  ignore  */
//  our position in the old string 
//  Parsing logic invoked by the constructor 
//  throw new PatternParseException(pos, pathPatternData,   PatternMessage.CANNOT_HAVE_ADJACENT_CAPTURES); 
//  bootstrap method. 
//  Skip the argument descriptor content. 
//  If the declared descriptors aren't providing the information, try the actual descriptors 
//  Note: the following would fail since TestExecutionListeners in   the Spring TestContext Framework are not applied to the enclosing   instance of an inner test class.     assertEquals("foo", foo); 
//  Switch to manual commit if necessary. This is very expensive in some JDBC drivers,   so we don't want to do it unnecessarily (for example if we've explicitly   configured the connection pool to set it already).
//  non static getter 
//  Change back, relying on casting to Advised 
//  SPR-13582 
//  If explicitly false, do not proceed with any other checks... 
//  As of 5.1, we explicitly optimize for a transaction-local EntityManager,   aligned with native HibernateTransactionManager behavior. 
//  Register given Hibernate mapping definitions, contained in jar files. 
//  Read the field attributes (the variables are ordered as in Section 4.7 of the JVMS).   Attribute offsets exclude the attribute_name_index and attribute_length fields. 
//  Not a CGLIB method so it's OK. 
//  (with a pre and post offset by 1). 
//  Visit the local variable type annotations of the RuntimeVisibleTypeAnnotations attribute. 
//  If Derby isn't cleaned up properly this will fail...
//  Bound to two threads 
/* 	 * Add an attribute for a transactional method.	 * <p>Method names can be exact matches, or of the pattern "xxx*",	 * "*xxx" or "*xxx*" for matching multiple methods.	 * @param methodName the name of the method	 * @param attr attribute associated with the method	  */
//  SPR-16304 
//  on the Enumeration when removing attributes. 
//  could also get column names 
// ---------------------------------------------------------------------   Lifecycle in bean factory: automatically register/unregister beans  --------------------------------------------------------------------- 
//  Return merged result 
//  Matches subclass of MyTestBean 
//  multiple candidate vars, but only one slot 
//  double slot left operand - should get boxed, return false 
//  ------------------------------------------------------------------- 
//  Given default message does not contain any argument placeholders   (and isn't escaped for alwaysUseMessageFormat either) -> return as-is. 
//  Factory may be null, we defer the resolution right before actually creating the container 
//  Jenny is a singleton 
//  Try default variable resolution 
//  SPR-8678 
//  fail on improper argument types at afterPropertiesSet 
//  should match because there testlast* in there 
//  OK, let's obtain the editor... 
//  What we just unboxed might be a double slot item (long/double)   so can't just use SWAP 
//  But the flattened map retains the order from the input. 
/* 	 * Test method for	 * 'org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetEntityManager(EntityManagerFactory)'	  */
//  missing one argument 
//  Different class is not equal 
//  empty environment 
//  Convenience methods to delegate to 
//  If we couldn't use the target type, try regular prediction. 
//  Section 4.7.6 of the JVMS states "Every CONSTANT_Class_info entry in the constant_pool table   which represents a class or interface C that is not a package member must have exactly one   corresponding entry in the classes array". To avoid duplicates we keep track in the info   field of the Symbol of each CONSTANT_Class_info entry C whether an inner class entry has   already been added for C. If so, we store the index of this inner class entry (plus one) in 
//  It's an empty enum identifier: reset the enum value to null. 
//  Retrieve the defaults for bean definitions within this parser context 
//  Register default environment beans. 
//  If neither of the candidates supports the mergedConfig based on resources but   ACIs or customizers were declared, then delegate to the annotation config 
//  Common concrete collection classes 
//  SPR-14651 
//  the element is a <description> -> ignore it 
//  Selection 
//  Only actually register it if there are destinations specified;   otherwise @MessageMapping is just being used as a (meta-annotation) marker. 
// (AdviceUsingThisJoinPoint) Aspects.aspectOf(AdviceUsingThisJoinPoint.class);  assertEquals("method-execution(int TestBean.getAge())",aspectInstance.getLastMethodEntered()); 
//  For rules that build nodes, they are stacked here for return 
//  chain of statics ending with static property access 
//  We saved most evaluations 
//  SPR-13453 
//  Data truncation   No data found   Value out of range   Integrity constraint violation   Triggered data change violation   With check violation 
//  Give BeanPostProcessors a chance to return a proxy instead of the target bean instance. 
//  SPR-12448 
//  Traverse the TestExecutionListeners in reverse order to ensure proper   "wrapper"-style execution of listeners. 
//  Need re-wrapping until we get hold of the exception through usingWhen. 
//  this_class is just after the access_flags field (using 2 bytes). 
//  Second request: session id changes 
//  Only override default charset if the converter operates with a charset to begin with... 
//  Code gen is different for -1 .. 6 because there are bytecode instructions specifically for those values 
//  scan *this* package 
//  we don't need it anymore. 
//  2500 is between DependencyInjectionTestExecutionListener (2000) and   DirtiesContextTestExecutionListener (3000) 
//  Allow for custom post-processing before we actually build the ValidatorFactory. 
//  SPR-17506 
// assertEquals("Wrong value for @Cacheable key", anotherValue, cache.get(key).get()); 
//  Use the URL constructor for applying the relative path as a URL spec 
//  Consider scoping 
//  Double-check within full dataSourceCache lock 
//  No matching persistence unit found - simply take the EntityManagerFactory 
/* 	 * See SPR-6640	  */
//  expected: should get resolved as class path resource,   and there is no such resource in the class path... 
//  Load config file if specified. 
//  Old-school EhCache singleton sharing...   No way to find out whether we actually created a new CacheManager   or just received an existing singleton reference.
//  SPR-14520 
//  fixedInterceptorMap only populated at this point, after getCallbacks call above 
//  ConverterRegistry implementation 
//  Register Triggers. 
//  HEAD 
//  Explicit qualifier metadata on bean definition? (typically in XML definition) 
//  set up a writer for the tag content to be written to 
//  Check that an object name has been specified. 
//  Find a param aware ancestor 
//  SPR-13455 
//  Invoke factory processors registered as beans in the context. 
//  JPA 2.1 API available but method not actually implemented in persistence provider:   falling back to regular createEntityManager method.
//  Either create a new table or reuse the existing one 
//  it's a match 
//  Reset original thread context ClassLoader. 
//  [handlerStart,handlerEnd[ - [rangeStart,rangeEnd[ = [handlerStart,rangeStart[ 
//  test matching with *'s 
//  Subscription id's may also be populated via getSubscriptions() 
//  Static methods 
//  Any nested <beans> elements will cause recursion in this method. In   order to propagate and preserve <beans> default-* attributes correctly,   keep track of the current (parent) delegate, which may be null. Create   the new (child) delegate with a reference to the parent for fallback purposes,   then ultimately reset this.delegate back to its original (parent) reference.   this behavior emulates a stack of delegates without actually necessitating one.
//  Ignore, as does PropertyDescriptor#getPropertyType 
//  The config class is annotated with @ComponentScan -> perform the scan immediately 
//  Has the parser entered a {...} variable capture block in a particular 
//  contains() 
//  data(Publisher<T>, Class<T>) 
//  only prepend if not already an absolute path 
//  configure the advisor 
//  Explicitly configured warn logger in logException method. 
/*  Bridges signals to and from the completionSubscriber  */
//  Convert to HttpHeaders to avoid "\n" 
//  Also tests empty value 
//  SPR-9390 
//  Based on number of captures 
//  Should not throw 
//  JDK <1.8 doesn't support getOutputStream with HTTP DELETE 
//  pre and post offset by 1). The jump offset is 8 bytes (3 for IFNOTxxx, 5 for GOTO_W). 
//  Map to array 
//  Simple 
//  Use the default ClassLoader... 
//  test string-arg getter with null id 
//  Create a child factory with a bean that should be woven 
//  failed prior to fix for SPR-9453 
//  the updated script surrounds the message in quotes before returning... 
//  never happen 
//  SPR-12444 
//  size now 3 
//  JPA 2.1's createEntityManager(SynchronizationType, Map)   Redirect to plain createEntityManager and add synchronization semantics through Spring proxy 
//  Add all the Spring advisors found according to superclass rules. 
//  Three outcomes of that previous line:   1) the input argument was already compatible (ie. array of valid type) and nothing was done   2) the input argument was correct type but not in an array so it was made into an array 
//  a series of identifiers and dollars into a single identifier. 
//  exclude this class from scanning since it's in the scanned package 
//  Shortcut: use the pre-converted values as-is. 
//  We need to use the default. 
//  right/left 
//  String is exhausted 
//  simply must not bail...
//  Using nullSafeHashCode for proper array hashCode handling 
//  Visit the Module, ModulePackages and ModuleMainClass attributes. 
//  Use simpler method if there are no nested annotations 
//  consume relational operator token 
//  Should call the non varargs version of concat 
//  merges all values 
//  Now test distinct bean with swapped value in factory, to ensure the two are independent 
//  ensure setAsText can consume the return value of getAsText 
//  Check that it is supported. 
//  Ignore when no TransformerFactory implementation is available...
//  only increment when creating the actual target - not the proxy 
//  this will ensure that the reference is resolved at runtime. 
//  "java.class.path" manifest evaluation... 
//  /hotels/* + /booking -> /hotels/booking 
//  Separate between BeanFactoryPostProcessors that implement PriorityOrdered, 
//  Servlet 3.0 getParameterNames() not guaranteed to include multipart form items   (e.g. on WebLogic 12) -> need to merge them here to be on the safe side
//  Read the instruction. 
//  Ignore reinitialization if same context passed in. 
//  Only in 2.0 XSD: moved to context namespace as of 2.1 
//  @CacheKey 
//  Bean name or resolved handler?
/* 		 Try with Locale.US		 Since the msg has a time value in it, we will use String.indexOf(...)		 to just look for a substring without the time.  This is because it is		 possible that by the time we store a time variable in this method		 and the time the ResourceBundleMessageSource resolves the msg the		 minutes of the time might not be the same.		  */
//  Parse listener specific settings 
// see https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#getenv(java.lang.String) 
//  Intentionally NOT annotated with @Configuration 
//  not needed for the tests but here for completeness 
//  Just subscribe without requesting 
//  leading whitespace control characters (00-1F) 
//  Can't use a more specific hashCode since we can't rely on   this.destination.hashCode() actually being the same value   for equivalent destinations... Thanks a lot, WebSphere MQ! 
//  SPR-13328 
/*  (non-Javadoc)	 * @see org.springframework.aop.MethodBeforeAdvice#before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object)	  */
//  Session invalidated - shouldn't usually happen. 
//  Make sure bean class is actually resolved at this point. 
//  update the attributes 
//  non-singleton, non-static 
//  First, invoke the BeanDefinitionRegistryPostProcessors that implement PriorityOrdered. 
//  CodeFlow.toPrimitiveTargetDesc(leftDesc); 
//  Choose a "direct to target" dispatcher (used for 
//  exception handler ranges. 
// -------------------------------------------------------------------------   Delegate methods for resolving injection points  ------------------------------------------------------------------------- 
//  which might give an indication on the desired target type. 
//  "never cache" 
//  Mark handlerBlock as an exception handler. 
//  nested placeholders   deeply nested placeholders   unresolvable placeholder   unresolvable w/ default   cyclic reference left   cyclic reference right 
//  Set up infrastructure. 
//  varargs char 
//  lots of whitespace 
//  Kotlin module 
//  Should only have one value child element: ref, value, list, etc.   Optionally, there might be a key child element. 
//  variant with non-standard write method 
//  /{foo} + /bar => /{foo}/bar 
//  Probably from a TreeMap - ignore. 
//  conflicting priority 
//  OpInc 
//  Skip leading separators that would be in the result 
//  - The offset of the InnerClasses attribute, or 0. 
//  Oracle uses catalog name for package name or an empty string if no package 
//  Do NOT delete "DefaultContextCache.this."; otherwise, we accidentally   invoke java.util.Map.remove(Object, Object). 
//  Note that it's important to ensure that we have this as   a FQN: otherwise it will match everything! 
//  Has the singleton object implicitly appeared in the meantime ->   if yes, proceed with it since the exception indicates that state. 
//  conversion int>string 
//  Reset read-only flag. 
//  parseCheck("new int[] {1,2,3}.average()");   }   
//  SPR-7476 
//  evaluates to "Wireless communication" 
//  test matching with ?'s and .'s 
// -------------------------------------------------------------------------   Convenience methods for accessing XML content  ------------------------------------------------------------------------- 
//  Probably a class path resource: cache it forever. 
// ---------------------------------------------------------------------   Implementation of InitializingBean interface  --------------------------------------------------------------------- 
//  Because a dynamic intersection may be composed of a static and dynamic part,   we must avoid calling the 3-arg matches method on a dynamic matcher, as   it will probably be an unsupported operation. 
//  but should still find it on classes. 
//  1) Find and merge AnnotationAttributes from the annotation hierarchy 
//  Shouldn't have changed first instance 
// ---------------------------------------------------------------------   Abstract methods to be implemented by subclasses  --------------------------------------------------------------------- 
//  Constructor invocation 
//  parseCheck("3 in {1,2,3,4,5}", "(3 in {1,2,3,4,5})");   }   
//  We wrote all, so can still write more.. 
//  Write target_type, target_info, and target_path. 
//  Just wanting to use the prefix or suffix within the template: 
//  Don't use ResolvedType.isAssignableFrom() as it won't be aware of (Spring) mixins 
//  A document can be a text literal 
//  If there's no EOL, we must be at the end of the script, so stop here. 
//  A generic reference to any name of any bean. 
//  SPR-15727 
//  Register BeanPostProcessorChecker that logs an info message when   a bean is created during BeanPostProcessor instantiation, i.e. when 
//  Build list of ResourceBundle references for Locale. 
//  Silently proceed with raw message if format not enforced... 
//  affects choice of ClassLoader 
//  Switch to FlushMode.AUTO, as we have to assume a thread-bound Session   with FlushMode.MANUAL, which needs to allow flushing within the transaction. 
//  PATCH 
//  Close the HTTP connection (if applicable). 
//  First try to get it as a normal name=value parameter 
//  not used in the response 
//  Ensure we have at least one ViewResolver, by registering 
//  notice - different map   true because linkedlist allows duplicates 
//  Register all Hibernate mapping definitions in the given directories. 
//  Method 
//  Must not be private. 
//  2. Above limit.. 
//  Physically close durable subscribers at time of Session close call. 
//  A bean with a custom scope... 
//  SPR-8410 
//  If the supplied content type is null, fall back to multipart/form-data.   Otherwise rely on the fact that isMultipart() already verified the   supplied content type is multipart. 
//  If we aren't dealing with a raw type, check if generic parameters are assignable. 
//  Should have failed to load without error 
//  e.g. ActiveMQ 
//  backwards compatibility 
//  generic object conversion 
//  set ThreadLocal Map if none found 
//  Rare case: listener thread failed after container shutdown.   Log at debug level, to avoid spamming the shutdown log. 
//  Here we could put a GOTO_W in theory, but if ASM specific instructions are used in this   method or another one, and if the class has frames, we will need to insert a frame after   this GOTO_W during the additional ClassReader -> ClassWriter round trip to remove the ASM   specific instructions. To not miss this additional frame, we need to use an ASM_GOTO_W   here, which has the unfortunate effect of forcing this additional round trip (which in 
//  add new 
//  ReadOnlySystemAttributesMap will come into play. 
//  Determine handler for the current request. 
//  this method is used by the test above 
//  a bean is not eligible for getting processed by all BeanPostProcessors. 
//  but this is handled gracefully   and beans from both packages are available
//  check path 
//  Standard JCA 1.5 "subscriptionDurability" apparently not supported... 
//  SPR-10170 
//  Setting the Set-Cookie header a 2nd time should overwrite the previous value 
//  1 invocation 
//  reached java.lang.Object 
//  Proceed with actual listener initialization. 
//  The PropertyEditor might not support this value... pass through. 
//  trickier: 
/* 	 * Testing the coercion of both the keys and the values to the correct type	  */
//  Async dispatch after concurrent handling produces result ... 
//  Custom resolvers 
//  Search for further keys to strip, with the first key stripped. 
//  Custom argument resolvers and return value handlers 
//  If running in mixed mode, revert to interpreted 
//  productExpression: powerExpr ((STAR^ | DIV^| MOD^) powerExpr)* ; 
//  Hibernate 5.1/5.2: manually enforce connection release mode ON_CLOSE (the former default) 
//  Expect no methods 
//  handle -ref arguments 
//  SPR-17027 
//  spaces 
//  Remove underlying context path first (e.g. Servlet container) 
//  Will call pool.close() 
//  Serialize and continue... 
//  Special case: it returned "this" and the return type of the method   is type-compatible. Note that we can't help if the target sets   a reference to itself in another returned object. 
//  No doOnDiscard as operators used do not cache 
//  Override default "dev" profile from   @ConfigClassesAndProfilesWithCustomDefaultsMetaConfig: 
//  Create the CacheInterceptor definition. 
//  SPR-14040 
//  Add two days because we start on Saturday 
//  notice whitespace 
//  In the form <? extends Number> is assignable to X... 
//  Not a Class: OK, we'll simply create BeanShell objects   through evaluating the script for every call later on.   For this first-time check, let's simply return the   already evaluated object.
//  If type is not F_NEW then it is F_INSERT by hypothesis, and currentBlock.frame contains   the stack map frame at the current instruction, computed from the last F_NEW frame and   the bytecode instructions in between (via calls to CurrentFrame#execute). 
//  No WebLogic UserTransaction available or no transaction name specified   -> standard JTA begin call. 
//  SPR-15372 
// 	literal    : INTEGER_LITERAL  	| boolLiteral  	| STRING_LITERAL    | HEXADECIMAL_INTEGER_LITERAL    | REAL_LITERAL  	| DQ_STRING_LITERAL 
//  trim the leading '[', may leave other '['   build array big enough to hold remaining arguments 
//  Third request: expired session, new session created 
//  We're only trying to find candidates, can easily ignore extra ones here... 
//  An existing alias - no need to re-register 
//  Add the instruction to the bytecode of the method.   Compute the 'base' opcode, i.e. GOTO or JSR if opcode is GOTO_W or JSR_W, otherwise opcode. 
//  https://github.com/reactor/reactor-netty/issues/503   FluxReceive rejects multiple subscribers, but not after a cancel().   Subsequent subscribers after cancel() will not be rejected, but will hang instead.   So we need to intercept and reject them in that case. 
//  Initialize and cache exported object. 
//  Second step: create a Type instance for each argument type. 
//  Flush to HTTP response. 
//  InheritedAnnotationClass is NOT annotated or meta-annotated with @Component 
//  Appeasing the compiler: the following line will never be executed. 
//  Potential test timezone, both have daylight savings on October 21st 
//  gh-22265 
//  should trigger actual close 
//  Set bean properties from init parameters. 
//  Ignore, we'll add a default HandlerMapping later. 
//  Let the delegate perform the actual doFilter operation. 
//  Map of lists 
//  bean name will cause AccessException 
//  Store the original resource name if necessary... 
//  start the MBeanExporter 
//  Try to find SQLException with actual error code, looping through the causes.   E.g. applicable to java.sql.DataTruncation as of JDK 1.6. 
//  Reset local application listeners to pre-refresh state. 
//  This call is slow so we do it once. 
//  should pass 
//  Cannot be evaluated, so can't be readable.
//  should be a class-based proxy 
//  was **/myHandle 
//  not a user destination 
//  right is an int 
//  allows render values to handle some strange browser compat issues. 
//  We weren't ignoring anything anyway... 
//  The next instruction starts a new basic block (except for GOTO: by default the code   following a goto is unreachable - unless there is an explicit label for it - and we   should not compute stack frame types for its instructions). 
//  header 
//  gh-23463 
//  Child element is what we're looking for. 
//  Store single elements 
/*  * Represents a WebSocket close status code and reason. Status codes in the 1xxx range are * pre-defined by the protocol. Optionally, a status code may be sent with a reason. * * <p>See <a href="https://tools.ietf.org/html/rfc6455#section-7.4.1">RFC 6455, Section 7.4.1 * "Defined Status Codes"</a>. * * @author Rossen Stoyanchev * @since 4.0  */
//  Logger available to subclasses 
//  methods 
//  Try Hibernate Validator 5.2's externalClassLoader(ClassLoader) method 
//  Special handling of synchronized invocation 
//  We're either instantiated and matching on declared pointcut,   or uninstantiated matching on either pointcut... 
//  constraint is expressed in non encoded form 
//  Giving up -> either using local default executor or none at all... 
//  SPR-14177 
//  Constructor handling 
//  SPR-14044 
//  caller actually wants a reference to the factory. 
//  compilerMode = SpelCompilerMode.MIXED 
//  SPR-11856 
//  no properties have been marked as required -> validation should pass 
//  Use default ThemeSource to be able to accept getTheme calls, either   delegating to parent context's default or to local ResourceBundleThemeSource. 
//  start of URI variable 
//  Assert no HttpMessageNotReadableException is thrown 
//  If there is a stack map frame for this offset, make methodVisitor visit it, and read the   next stack map frame if there is one. 
//  Return the scoped proxy definition as primary bean definition 
//  ContextLoader 
//  As of JDK 8, invoking getAnnotation() on a bridge method actually finds an   annotation on its 'bridged' method [1]; however, the Eclipse compiler will not   support this until Eclipse 4.9 [2]. Thus, we effectively ignore the following   assertion if the test is currently executing within the Eclipse IDE.     [1] https://bugs.openjdk.java.net/browse/JDK-6695379   [2] https://bugs.eclipse.org/bugs/show_bug.cgi?id=495396   
//  Local exception handler methods on the controller class itself. 
//  Look for arg variable and bind it if we find exactly one... 
//  Giving up -> falling back to default scheduler within the registrar... 
//  By default, the bean name is the name of the @Bean-annotated method 
//  We can't create fancy target sources for directly registered singletons. 
//  Let's skip any wrapping attempts if types are generally not serializable in   the current runtime environment (even java.lang.Class itself, e.g. on Graal) 
//  When the condition is a primitive 
//  class_info 
//  SPR-14045 
//  Guaranteed to be on the classpath, but most certainly NOT XML 
//  Fallback exception match found. 
//  If the returned MethodVisitor is in fact a MethodWriter, it means there is no method   adapter between the reader and the writer. In this case, it might be possible to copy   the method attributes directly into the writer. If so, return early without visiting 
//  Write method's property type potentially more specific 
//  look-up. 
//  then 
//  In the static case, target will simply be {@code null}. 
//  never null 
//  let others try 
//  asserts that the set contract is not violated during a merge() operation... 
//  Reset HTTP 1.0 Expires header if present 
//  Second step: allocate a ByteVector of the correct size (in order to avoid any array copy in 
//  RealLiteral 
//  Create service locator proxy. 
//  SPRING PATCH: leniently handle offset mismatch 
//  SPR-11855 
//  First arg is the map containing factoryBean : factoryMethod 
//  as well as an empty marker interface 
//  Ignore -> can only happen in case of a JTA transaction. 
//  Common cache initialization delegates for subclasses 
//  Should Pass. 
//  append any characters to the right of a match 
//  InvalidRepeatable[] value(); 
//  all types are assignable to themselves and to class Object 
//  quoted if dotted 
//  HttpServletResponse exposes some headers as properties: we should include those if not already present 
//  Use modifiable ArrayList here, to allow for further adding of   JobDetail objects during autodetection of JobDetail-aware Triggers. 
//  Determine list of advisor bean names, if not cached already. 
//  Convert everything up to the varargs position 
//  Variables captures in this path pattern 
//  (e.g., not German, where \u00e4 becomes &auml;) 
//  Return false since we invoke a custom eviction algorithm. 
//  Differing types of number, not yet supported
//  Try relative to resource base if currently in system root. 
//  Load XML resource with context-aware entity resolver. 
//  Read the num_element_value_pairs field (or num_values field for an array_value). 
//  No client side HttpCookie support yet 
//  First, try custom translation from overridden method. 
//  Projection 
// ---------------------------------------------------------------------   Implementation of MBeanExportOperations interface  --------------------------------------------------------------------- 
//  comparator = new PatternComparatorConsideringPath("/hotels/new.html");   paths.add(pp.parse("/hotels/new.*"));   paths.add(pp.parse("/hotels/{hotel}"));   Collections.shuffle(paths);   Collections.sort(paths, comparator); 
//  value is array containing [true,false] 
//  First core decoder (e.g. String) 
//  Report first connect to the ListenableFuture 
//  Skip the 'attributes' array field. 
//  Explicitly remove instance from singleton cache: It might have been put there   eagerly by the creation process, to allow for circular reference resolution.   Also remove any beans that received a temporary reference to the bean. 
//  Specify isolation level, if any, through corresponding WebLogic transaction property. 
//  application/*+xml includes application/soap+xml 
//  SPR-13286 
//  First, check to see if the requested bean is a FactoryBean. If so, create a subclass   proxy that intercepts calls to getObject() and returns any cached bean instance.   This ensures that the semantics of calling a FactoryBean from within @Bean methods 
//  class level 
//  Add our local Advisor to the existing proxy's Advisor chain... 
//  -- tests relating to customizing reserved default profiles ---------------------- 
//  Nullsafe guard on expression element evaluating to primitive/null 
//  Perform autodetection, if desired. 
//  2. Send message to user via inboundChannel 
//  Assert that target matches BEFORE invocation returns 
//  test global property (should be null) 
//  Possibly compiled by another thread before this thread got into the sync block 
//  resolve with two args 
//  Passing (int,Sub,boolean) on call to foo(Integer,Super,Boolean) requires boxing conversion of arguments zero and two   TODO checkMatch(new Class<?>[] {Integer.TYPE, Sub.class, Boolean.TYPE}, new Class<?>[] {Integer.class, Super.class, Boolean.class}, tc, ArgsMatchKind.REQUIRES_CONVERSION); 
//  Make it the new current basic block. 
//  try with transactional 
//  SPR-12747 
//  SPR-13154 
//  Check for document with language localization. 
//  The type of the previous local variable is not known yet, but if it later appears   to be LONG or DOUBLE, we should then use TOP instead.
//  Assume no registry found -> create new one. 
//  RowSet methods for extracting data values 
//  Write method not matched against read method: potentially ambiguous through   several overloaded variants, in which case an arbitrary winner has been chosen   by the JDK's JavaBeans Introspector...
//  try URL 
//  Force all the text lower case to make matching faster 
//  Check whether the delegate is a MessageListener impl itself.   In that case, the adapter will simply act as a pass-through. 
//  failed to populate, so leave it as not initialized 
//  Potentially inherited from outer <beans> sections, otherwise falling back to false. 
//  -----------------------------------------------------------------------------------------------   Implementation of the ClassVisitor abstract class   ----------------------------------------------------------------------------------------------- 
//  in conjunction with "" username, this means no password to use 
//  if no-arg, don't insist on args at all 
//  Keep the task in paused mode... 
//  This check is different to the one in the other numeric operators (OpLt/etc)   because it allows for simple object comparison 
//  Defensively back out when called from within the transform delegate below:   in particular, for the over-eager transformer implementation in Hibernate 5. 
//  Using a TreeMap for alphabetical ordering of attribute names 
//  Wrap executor with an unconfigurable decorator. 
//  wait until stop is called 
//  Note: Can't use JoinPointMatch.getClass().getName() as the key, since   Spring AOP does all the matching at a join point, and then all the invocations   under this scenario, if we just use JoinPointMatch as the key, then   'last man wins' which is not what we want at all.   Using the expression is guaranteed to be safe, since 2 identical expressions   are guaranteed to bind in exactly the same way. 
//  Do not initialize FactoryBeans here: We need to leave all regular beans   uninitialized to let the auto-proxy creator apply to them! 
//  no MessageSelector... 
//  simple ctor 
//  Fallback matches allow unresolvable generics, e.g. plain HashMap to Map<String,String>;   and pragmatically also java.util.Properties to any Map (since despite formally being a   Map<Object,Object>, java.util.Properties is usually perceived as a Map<String,String>). 
//  Cross-server session lookup (e.g. user connected to multiple servers) 
//  assert that 6:00 is next execution time 
//  nested primitive array 
//  Process any @Import annotations 
//  SPR-16884 
//  SPR-13252, SPR-14053 
//  "fast enough" is of course relative, but we're using 6 seconds with the hope   that these tests typically pass on the CI server. 
//  Should Fail due to duplicate configuration.
//  Register Flux and Mono before Publisher... 
//  Configuration class (full or lite) or a configuration-derived @Bean method   -> resolve bean class at this point... 
//  The scale to apply in case of a NUMERIC or DECIMAL type, if any 
//  Create bean instance. 
//  Build SessionFactory instance. 
//  evals to "Hello World" 
//  Last fallback is the class of the original method. 
//  Consider the concurrent flag to choose between stateful and stateless job. 
//  pre-condition is that hasAspectName returned true 
//  Current supplied argument being processed 
//  check position for second 'true' 
//  Check already loaded Class if present...   since we possibly can't even load the class file for this Class. 
//  Iterate over the attributes to check, restoring the original value 
//  ASM specific stack map frame types, used in {@link ClassVisitor#visitFrame}. 
//  We can always call flush, just ensure writes are on.. 
//  -21 
//  We must always proxy equals, to direct calls to this. 
//  Let's skip it if it's not resolvable - we're just looking for candidates
//  not supplied due to COMPUTE_MAXS
//  Using strict parsing to align with Joda-Time and standard DateFormat behavior:   otherwise, an overflow like e.g. Feb 29 for a non-leap-year wouldn't get rejected.   However, with strict parsing, a year digit needs to be specified as 'u'... 
//  indexed write method 
//  Case of an element_value with an enum_const_value field.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1. 
//  Cache for the latest to-method resolved on a given Class 
//  static method, reference type return 
//  Set a temporary ClassLoader for type matching. 
//  Visit the NestHost attribute. 
//  OpMinus 
//  Effectively, all remaining messages failed... 
//  SPR-14224 
//  NOTE: we would like to be able to override the 'value' attribute; however,   Spring currently does not allow overrides for the 'value' attribute.
//  not writable 
//  Should never happen.. 
//  Never reached 
//  Catch-all 
//  The AJTypeSystem goes to great lengths to provide a uniform appearance between code-style and   annotation-style aspects. Therefore there is no 'clean' way to tell them apart. Here we rely on   an implementation detail of the AspectJ compiler. 
//  @ContextConfig --> Intentionally NOT meta-present 
//  Treat empty String as null value. 
//  Create a new delegate now (but don't store it in the map).   We do this for two reasons:   1) to fail early if there is a problem instantiating delegates   2) to populate the interface map once and once only 
//  SPR-12742 
//  SPR-16752 
//  HTTP 1.0 Expires header 
// ---------------------------------------------------------------------   Implementation of DisposableBean interface  --------------------------------------------------------------------- 
//  a custom phase value 
//  That confirms the logic to mark the cached reference stale and retry is working 
//  logicalAndExpression : relationalExpression (AND^ relationalExpression)*; 
//  Parameters used for optimization choices... 
//  Making sure replyChannel is not mixed with replyTo 
//  Handle radix specifier, if present. 
//  In case the BytesMessage is going to be received as a user argument:   reset it, otherwise it would appear empty to such processing code... 
//  Remove property from property values to bind: 
//  Same comment as above. 
//  To keep the algorithm simple we don't support subtypes 
//  Attributes need to have their methods exposed as   operations to the JMX server as well. 
//  No current transaction timeout -> apply specified value. 
//  For now, everything becomes a double... 
//  DontCheck(MemberName): can't be renamed (for backward binary compatibility). 
//  all prime numbers > 10 from the list (using selection ?{...}) 
//  TaskExecutor indicated a preference for short-lived tasks. According to   setMaxMessagesPerTask javadoc, we'll use 10 message per task in this case   unless the user specified a custom value. 
//  Case of a backward jump with an offset < -32768. In this case we automatically replace GOTO   with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <L> GOTO_W <l> L:..., where   IFNOTxxx is the "opposite" opcode of IFxxx (e.g. IFNE for IFEQ) and where <L> designates   the instruction just after the GOTO_W. 
//  Helpers 
//  Try to apply some standard type conversion rules if appropriate. 
//  Start new transaction with default rollback semantics 
//  Instance fields. 
//  if a new object is requested or none exists under the current 
//  Single size primitive (boolean) 
//  Probably simply a method that wasn't meant to follow the JavaBeans pattern... 
//  multi-item list 
//  WebSocketHandler adapter delegate methods 
//  Now add attribute and try again 
//  idempotent 
//  if there wasn't an old one, add it 
//  Inject a container-managed extended EntityManager. 
//  Mixed literal parts and URI variables, maybe (encode literal parts only).. 
//  will access the field 'wibble' and not use a getter 
//  gh-21799 
//  abstract beans should not match 
//  "DIV","EQ","GE","GT","LE","LT","MOD","NE","NOT" 
//  On exception it won't be invoked 
//  gh-22731 
//  child value for 'one' must override parent value... 
//  The below does not work since ConnectionPoolProvider simply checks if pool is empty.   assertFalse(connectionProvider.isDisposed());
//  What about a map key that is an expression - ensure the getKey() is evaluated in the right scope 
//  Per contract body shouldn't be null, but check anyway..
//  Only needed when compiling against Jackson 2.7; gone in 2.8 
//  Now actually close the Session. 
//  Annotation-based argument resolution 
//  Normal case: URI contains servlet path. 
//  Too long: truncation 
//  Avoid parsing the port, may have URI variable.. 
//  If srcType has the same array dimension and the same kind as dstType. 
//  just comparing two classes 
//  1500 is greater than SpelCompiler.CLASSES_DEFINED_LIMIT 
//  1 primitive arg, and one candidate... 
//  6 header bytes and 1 byte for parameters_count. 
//  Check for specific exception mappings. 
//  Determine type of the target bean. 
//  These fail prior to fixing SPR-10546 
//  SPR-16759 
//  Before Java 1.5, synthetic fields are represented with a Synthetic attribute. 
//  @CustomStereotype-annotated   @CustomComponent-annotated 
//  The number of bytes in previous buffers. 
//  Cannot access thread context ClassLoader - falling back... 
//  Ensure that we do not include the EventPublishingTestExecutionListener   since it will access the ApplicationContext for each method in the   TestExecutionListener API, thus distorting our cache hit/miss results. 
//  We should be at least 4 time faster 
//  No match when the literal path element is a longer form of the segment in the pattern 
//  must be write only 
//  stack: left/right 
//  Allow for multiple close calls... 
//  Try to determine URL for resource. 
//  no transactional support for putIfAbsent 
//  non-static method, one parameter of reference type 
//  Spring bean names are less restrictive compared to AspectJ names (methods, types etc.)   MVC Controller-kind 
//  Second candidate we've found - ambiguous binding 
//  Invoke without a request parameter (String return value) 
//  SPR-10341 
//  The following is unpleasant but a consequence of the raw collection converter above... 
//  for windows 
//  number types are not the same 
//  Put an object with null property at the end of the sort result. 
//  name is ok but madeup() does not exist 
//  SEND 
// -------------------------------------------------------------------------   Methods handling execution  ------------------------------------------------------------------------- 
//  Optimistically, any MultiValueMap with or without generics 
//  from primitive array to reference type array 
//  SPR-9160 
//  SPR-9293 
//  Builder 
// assertTrue("5 beans in reftypes, not " + this.beanFactory.getBeanDefinitionCount(), this.beanFactory.getBeanDefinitionCount() == 5); 
//  PathContainer methods.. 
//  Excludes methods implemented. 
//  Need to remove it in this case, since Quartz shares the Scheduler instance by default!
//  Read the class attributes (the variables are ordered as in Section 4.7 of the JVMS).   Attribute offsets exclude the attribute_name_index and attribute_length fields. 
//  Subclasses for specific, server-side, HTTP status codes 
//  double 
//  and the path data has run out too 
//  for Environment.acceptsProfiles(String...) 
//              
//  If we get an archive, simply return the jar URL (section 6.2 from the JPA spec) 
//  "advice" methods 
//  Execute invokeHandlerMethod in synchronized block if required. 
//  We need a transactional target now. 
//  Register specified ScheduledExecutorTasks, if necessary. 
//  Any change to this method should be also applied to spring-jms and spring-messaging 
//  Call each validator with the same binding result 
//  array initializer 
//  Might be one of the textual forms of the operators (e.g. NE for != ) -   in which case we can treat it as an identifier. The list is represented here:   Tokenizer.alternativeOperatorNames and those ones are in order in the TokenKind enum. 
//  Calling foo(String,int) with (String,Integer) requires boxing conversion of argument one 
//  Restore old proxy. 
//  no expected exception!
//  static method, primitive type return 
//  Send as Mono if possible as an optimization hint to Reactor Netty 
//  Should not happen since placeholders are checked earlier. 
//  Release default logger if it is not being used. 
//  Verifying 
//  The size and offset in bits of each field of an abstract type. 
//  update the attribute 
//  assuming RFC-1123 value a la "Tue, 3 Jun 2008 11:05:30 GMT" 
//  Not very useful until createHeaders does more with metadata 
//  Extracted value does not match already: try to convert it. 
//  Corresponding SQL types for JSR-310 / Joda-Time types, left up 
//  not a proxy so this should not have changed 
//  Happening on the production version of Google App Engine, coming out of the   restricted "sun.reflect.ReflectionFactory" class... 
//  if not empty, drop through to elseTarget 
//  This can happen if someone is sloppy with Throwable causes...
//  Fallback is to look at the original method. 
//  parseCheck("new int[] {1,2,3}.min()");   }   
//  widening of int 3 to long 3 is OK 
//  method.) 
// ---------------------------------------------------------------------   Implementation of ConfigurablePropertyResolver interface  --------------------------------------------------------------------- 
//  Multi-dimensional - hold onto your hat! 
//  Append the new basic block at the end of the basic block list. 
//  force a header write 
//  Without a fix compilation was inserting a checkcast to a private type 
//  stack: right 
//  this.factory.preInstantiateSingletons(); 
//  Ensure headers are flushed, no body should be written. 
//  spouse for autowiring by type... 
//  Expect one invocation by the filter being tested 
//  full resource path 
//  No handler found... 
//  re-refresh (after construction refresh) 
//  Two reasons this can occur:   1. the method invoked actually threw a real exception   2. the method invoked was not passed the arguments it expected and has become 'stale' 
//  Simple editors, without parameterization capabilities. 
//  Some X-Forwarded-* tests in addition to the ones in UriComponentsBuilderTests 
//  Initialize before first call to getLogPrefix() 
//  SPR-4612 
//  When just doing type checks (i.e. not creating an actual instance yet),   use the specified temporary class loader (e.g. in a weaving scenario). 
// 		StaticApplicationContext ctx = new StaticApplicationContext();  		ctx.registerPrototype("testService", TestService.class, new MutablePropertyValues());  		ctx.registerAlias("testService", "1");  		MutablePropertyValues mpv = new MutablePropertyValues();  		mpv.addPropertyValue("serviceLocatorInterface", TestServiceLocator3.class);  		ctx.registerSingleton("factory", ServiceLocatorFactoryBean.class, mpv);  		ctx.refresh(); 
//  cache name = id 
//  let raw JMS invocation throw an exception if Destination (i.e. args[0]) is null 
//  SPR-15074 
//  Configure CGLIB Enhancer... 
//  Subscription methods (we're the Subscription to the writeSubscriber).. 
//  Possibly store converted value in merged bean definition,   in order to avoid re-conversion for every created bean instance. 
//  Can be overridden by registering custom instances of those as custom editors. 
//  We're looking to find a match or return null.. 
//  client 
// ---------------------------------------------------------------------   Implementation of BeanFactory interface  --------------------------------------------------------------------- 
//  Use defaults if no transaction definition given. 
//  InitializingBean 
//  See testValidator() 
//  session 
//  counter intuitive, must be false: 
//  ? extends T <= ? extends S if T <: S 
//  OpLE   OpGE   true - null is <= or >= null 
//  Read the 'exports_count' and 'exports' fields. 
//  top-level empty variable scope 
//  Current location in the token stream when processing tokens 
//  Ignore, as does IndexedPropertyDescriptor#getIndexedPropertyType 
// ---------------------------------------------------------------------   Other  --------------------------------------------------------------------- 
//  tokenize it with "," 
//  Retrieve corresponding bean definition. 
//  Note: We can't use JoinPointMatch.getClass().getName() as the key, since   Spring AOP does all the matching at a join point, and then all the invocations.   Under this scenario, if we just use JoinPointMatch as the key, then   'last man wins' which is not what we want at all.   Using the expression is guaranteed to be safe, since 2 identical expressions 
//  those cases before letting the original code (that only handled actual numbers) run 
//  SPR-12123 
//  SPR-10825 
//  Let's try whether we're in a JTA transaction. 
//  We got the result, must also wait for the dispatch 
//  This stream doesn't have any data in it... 
//  SimpleControllerHandlerAdapter not detected 
//  Invoke a non-advised method 
//  Handle nested properties recursively. 
//  give other interceptors a chance to handle the error 
//  Handler method lookup 
//  Put the access_flags, name_index and descriptor_index fields. 
//  Don't use the supplied testClass; instead ensure that we are   building the MCC for the actual test class that declared the   configuration for the current level in the context hierarchy. 
//  Should still be the case with custom multipart types supported 
//  Unwrap proxies for speed 
//  Cancel associated user-level ListenableFuture handle as well 
//  store the byte 
//  Unchanged 
//  Replace the original bean definition with the target one, if necessary 
/* 	 * Match a String against the given pattern, supporting the following simple	 * pattern styles: "xxx*", "*xxx", "*xxx*" and "xxx*yyy" matches (with an	 * arbitrary number of pattern parts), as well as direct equality.	 * @param pattern the pattern to match against	 * @param str the String to match	 * @return whether the String matches the given pattern	  */
//  value is list containing [true,false] 
//  If no name specified, apply method identification as transaction name. 
//  The size, in bytes, to use when allocating the first byte[] 
//  Fire aspect 
//  on Windows 
//  Servlet 4.0 PushBuilder not found - not supported for injection 
//  Skip bridge methods - we're only interested in original annotation-defining user methods.   On JDK 8, we'd otherwise run into double detection of the same annotated method... 
//  Only String-based MultiValueMap 
//  should not be called, since we override canRead/Write 
//  message 
//  Unlock 
//  Officer's Dictionary 
//  Deal with array by delegating to the component type 
//  = 1 invocation   = 2 invocations 
//  2xx Success 
//  SPR-15910 
//  SPR-17473 
//  null map value case 
//  Should not have been autowired 
//  (see BigDecimal javadoc for details) 
//  Ignored 
//  We've already added a version, we need to extend it 
//  SPR-16275 
/* 	 * Return {@code true} if the given argument type is a subclass	 * of the given supertype.	  */
//  Ideally create enhanced FactoryBean proxy without constructor side effects,   analogous to AOP proxy creation in ObjenesisCglibAopProxy... 
//  contextPath in underlying request 
// 		beanFactory.getBean("name-value1", TestBean.class); 
// -----------------------------------------------------------------------------------   Hook for exception translation (used by JpaTransactionManager)  ----------------------------------------------------------------------------------- 
//  Strip off any leading '_' and whitespace, what's left is the variant. 
//  The provider of call meta-data 
//  SPR-13516 
//  See SPR-13486 
//  Handle isOpen method: always return true. 
//  Reschedule paused tasks, if any. 
//  Lazily determine theme to use for this RequestContext. 
//  No write method found for non-void returning 'setFoo' method. 
//  Massage return value if possible: if the delegate returned itself, 
//  Use holder's reference count to track synchronizedWithTransaction access. 
//  AnnotatedElementUtils finds first 
//  Re-register post-processor for detecting inner beans as ApplicationListeners, 
//  Continue with null type descriptor 
//  no need to invoke the actual test method 
//  For num_annotations. 
//  how deep in nested {...} pairs 
//  Ensure that we exclude 
//  SPR-17475 
//  Clear all pending inserts/updates/deletes in the Session.   Necessary for pre-bound Sessions, to avoid inconsistent state. 
//  should be ignored 
//  otherwise value has to be Serializable 
//  before configuration class processing kicks in... 
//  ternary operator 
//  in the control flow graph to the list of blocks to process (if not already done). 
//  This is what you had to do before the changes in order for it to compile: 
//  should never happen.. 
//  transform stuff 
// depthPlusOne(exitTypeDescriptor)+"Ljava/lang/Object;"); 
//  SPR-11052 
//  Overridable template methods for cache initialization 
//  ignore - probably running on JDK without the JAX-WS impl present 
//  put null in as a value... 
//  If the string name is changing the accessor is clearly going to change (so no compilation possible) 
//  Effectively checking object equality as well as toString equality.   On WebSphere MQ, Destination objects do not implement equals... 
//  TODO AopUtils.invokeJoinpointUsingReflection 
//  SPR-9159 
//  null): 
//  gh-22386 
//  this bean does not have any ignored methods on it, so must obviously not be ignored... 
//  Do we need to mark the bean as skipped by its condition?
//  Unwrap to the native Validator with forExecutables support 
//  Restore the original attribute snapshot, in case of an include. 
//  ----------------------------------------------------------------------------------------------   Methods to parse stack map frames   ---------------------------------------------------------------------------------------------- 
//  NOTE: while you might expect the main key to have been updated, it hasn't. @Cacheable operations   are only processed in case of a cache miss. This is why combining @Cacheable with @CachePut   is a very bad idea. We could refine the condition now that we can figure out if we are going   to invoke the method anyway but that brings a whole new set of potential regressions.
//  SPR-13292 
//  fallback 
//  Test fallback. We assume that no database will ever return this error code, 
//  https://github.com/spring-projects/spring-framework/issues/23633 
//  Get global attributes, if any. 
//  The bytecode offset of the next runtime invisible type annotation to read, or -1. 
//  no conflicts found trying to register SimpleComponent   succeeds -> there is only one bean of type SimpleComponent 
//  index1 is 4, intArray[3] is 3 
//  The subsequent dance is performed just once for each class,   so it does not matter much how fast it goes 
//  Only proceed with retrieved object if still present (the expected case).   If it disappeared concurrently, we return our locally created instance. 
// no-op 
//  Create the CacheOperationSource definition. 
//  ServletResponse, HttpServletResponse 
//  Catch-all... 
//  Must have come from TargetSource. 
//  24.0 
// assertTrue(Arrays.binarySearch(pf.getProxiedInterfaces(), TimeStamped.class) != -1); 
//  Check that AnnotationUtils works with concrete proxied script classes 
//  varargs conversion but no varargs 
//  Else, just print it out. 
//  This next call was failing because the isCompilable check in Indexer   did not check on the key being compilable (and also generateCode in the   Indexer was missing the optimization that it didn't need necessarily   need to call generateCode for that accessor) 
//  getDeclaredClasses() failed because of non-resolvable dependencies   -> fall back to ASM below 
//  Let abstract subclasses check their configuration. 
//  Original stack must not contain any reference to methodInCallStack 
//  Read the method attributes (the variables are ordered as in Section 4.7 of the JVMS).   Attribute offsets exclude the attribute_name_index and attribute_length fields. 
//  Could not find the database among the defined ones. 
//  No JarURLConnection -> need to resort to URL file parsing.   We'll assume URLs of the format "jar:path!/entry", with the protocol   being arbitrary as long as following the entry format.   We'll also handle paths with and without leading "file:" prefix. 
//  no-op; the @ComponentScan-annotated MyConfig class below simply exercises   available attributes of the annotation. 
//  If counter is 5 then the method got called twice! 
//  Package-private: used in ResponseCookie 
//  Record the fact that 'label' is the target of a jump instruction. 
//  SPR-8571 
//  Equality checks were handled by the proxy 
//  Special case: A SmartInstantiationAwareBeanPostProcessor returned a non-FactoryBean   type but we nevertheless are being asked to dereference a FactoryBean...   Let's check the original bean class and proceed with it if it is a FactoryBean. 
//  Complete the control flow graph with the successor blocks of subroutines, if needed. 
//  create proxy factory bean definition 
//  array of arrays 
//  parseCheck("new String[3]");   } 
//  The next path element in the chain 
//  A static field/method call will not consume what is on the stack,   it needs to be popped off. 
//  It is a full capture of this element (possibly with constraint), for example: /foo/{abc}/ 
//  Remove already filtered 
//  Shouldn't have changed value in joinpoint 
//  SPR-12605 
//  float is not a wide type 
//  Wait for AsyncMessageListenerInvokers to deactivate themselves... 
//  Register the bean definitions before invoking preInstantiateSingletons()   to simulate realistic usage of an ApplicationContext; otherwise, the bean   factory thinks it's an "empty" factory which causes this test to fail in   an unrealistic manner. 
//  gh-23321 
//  By construction, jsr targets are stored in the second outgoing edge of basic blocks   that ends with a jsr instruction (see {@link #FLAG_SUBROUTINE_CALLER}). 
//  Remove non-matching listeners that originally came from   ApplicationListenerDetector, possibly ruled out by additional   BeanDefinition metadata (e.g. factory method generics) above. 
//  If the username is empty, we'll simply let the target DataSource   use its default credentials. 
//  Ensure BeanNameUrlHandlerMapping (SPR-8289) and default HandlerAdapters are not "turned off" 
//  Add this successor to the list of blocks to process, if it does not already belong to a   list of labels. 
//  SPR-15560 
//  A populated but stale holder -> could keep using it. 
//  Hamcrest.. 
//  then proceed with actually loading the bean definitions. 
//  exclude synthetic + bridged && static class initialization 
//  Getting refreshed by another thread already ->   let's return the existing properties for the time being. 
//  A custom TypeConverter which does not support TypeDescriptor resolution... 
//  wrapping only, no allocation 
//  clear() 
//  gh-22107 
//  For Oracle where catalogs are not supported we need to reverse the schema name   and the catalog name since the catalog is used for the package name 
//  Proceed with read method's property type 
//  Similar to above for the capture-the-rest variant 
//  destination -> subscriptions 
//  Use a single shared instance for common combinations 
//  First getBean call triggers actual creation of the singleton bean 
//  Register aliases for bean name, if any. 
//  both with the rendered value and with the original value. 
//  Assign a generated name?
//  carry on consuming digits 
/*  List of ResourceBundle -> BeanFactory  */
//  no candidate destroy method found 
// 	// time it interpreted  	long stime = System.currentTimeMillis(); 
//  This is to deal with the case where the property setter is the last   statement in a closure (hence the return value) 
//  SPR-14363 
//  Avoid recreation of the script bean definition in case of a prototype. 
//  (potentially an inner bean). 
// ---------------------------------------------------------------------   Implementation of Spring Validator interface  --------------------------------------------------------------------- 
//  Confirm all dimensions were specified (for example [3][][5] is missing the 2nd dimension) 
//  Attempt to keep connection alive by consuming its remaining content 
//  ignore 
//  Expect no methods on home 
//  Simulate AbstractBeanDefinition.validate() which delegates to 
//  Use non-singleton bean definition, to avoid registering bean as dependent bean. 
//  Parse the attribute to find the corresponding (debug only) labels. 
//  ---------------------------------------------------------------------   ServletRequest properties   --------------------------------------------------------------------- 
//  Extends above class just to add repository annotation 
//  2) Synthesize the AnnotationAttributes back into the target annotation 
//  path intentionally omitted 
//  Ignore: we don't produce data 
//  @formatter:off 
//  Reset common introspection caches in Spring's core, since we   might not ever need metadata for singleton beans anymore... 
//  - The string corresponding to the SourceFile attribute, or null. 
//  SPR-12735 
//  We couldn't identify it more precisely. 
//  SPR-14498 
// ---------------------------------------------------------------------   Autodetection process  --------------------------------------------------------------------- 
//  no tx active 
//  go before RequestMappingHandlerMapping 
//  Must be a list to support ordering   Our bean doesn't modify the collection: 
//  Modify header if necessary 
//  SPR-9284 
//  Eagerly disconnect the Session here, to make release mode "on_close" work nicely. 
//  Actually set 'corePoolSize' to the upper bound of the range   but allow core threads to timeout... 
//  No type found for shortcut FactoryBean instance: 
//  1) Check for an explicit database name 
//  Only one MBean 
//  Cast is necessary for compilation in Eclipse 4.4.1. 
//  SPR-9021 
//  Try even with null body. ResponseBodyAdvice could get involved. 
//  Eagerly cache singletons to be able to resolve circular references 
//  First, switch back to throwException(int) 
//  Export RMI object. 
//  Default-lazy-init applies to custom bean definitions as well. 
//  element stack containing the caught exception type). 
//  Extract multipart files and multipart parameters. 
//  vararg methods go last 
//  SPR-12999 
//  SPR-16630 
//  If return value is a Statement, apply transaction timeout.   Applies to createStatement, prepareStatement, prepareCall. 
//  p2 should 'win' as it was registered last 
//  InternalResourceViewResolver 
//  Check if required type matches the type of the actual bean instance. 
//  retrying in case of concurrent reads on the same key 
//  SPR-11401 
//  A simple bean... Let's create a lazy-init ModelMBean proxy with notification support. 
//  @formatter:on 
//  preserve the pre-bound RequestAttributes instance 
//  The separator used in this path pattern 
//  Complete configuring the PrototypeTargetSource. 
//  while adding the given bootstrap method to it, in the rest of this method. 
//  Running in an ApplicationContext -> register tasks this late...   giving other ContextRefreshedEvent listeners a chance to perform   their work at the same time (e.g. Spring Batch's job registration). 
//  Name of schema for call 
//  add application context to url 
//  comes from "resourceImport.xml" 
//  elements and will be stored in what is in fact num_values. 
//  Interpret argument array as single method argument of array type. 
//  singleton, non-static 
//  Access flags values, defined in   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.1-200-E.1   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.5-200-A.1   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.6-200-A.1   - https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.25 
//  SPR-14368 
//  Make given DataSource available for SchedulerFactory configuration. 
//  Try to get the connector bean. 
//  Create the HTML text part of the message. 
//  make sure the write index is correctly set 
//  TODO allow for key being PropertyOrFieldReference like Indexer on maps
//  doesn't make much sense in the context of a list... 
//  We've reached the end of the current statement 
//  Check actual existence of temporary file. 
//  alternatively 
//  We can stringify any primitive value... 
//  Fully synchronize now for missing cache registration 
//  Obtain EntityManager reference from JNDI?
//  Do not require @Transactional test methods to be public. 
//  Cache RMI stub on initialization?
//  Clear out the transformers (copied as well) 
//  gh-23305 
//  Should be ordered 
//  If the target class is null, the method will be unchanged. 
//  evaluates to "Induction motor" 
//  Instantiate the specified BeanDefinitionReader 
//  Table has been dropped 
//  get hidden bean 
//  the factory is a prototype - ask for multiple instances 
//  In the form X is assignable to <? extends Number> 
//  ok, is this change reflected in the reference that the collaborator has?
//  - Whether the stack map frames are compressed (i.e. in a StackMapTable) or not. 
//  Calling 'Fruit(String... strings)' 
//  If the local variable has never been assigned in this basic block, it is equal to its   value at the beginning of the block. 
//  Remaining top paths need to be retained. 
//  read it, set it, read it again 
//  The delta to subtract from a goto_w or jsr_w opcode to get the corresponding goto or jsr   opcode, or 0 if goto_w and jsr_w must be left unchanged (i.e. when expanding ASM specific 
//  Session is rolled back 'cos it is transacted... 
//  SPR-15803: nested array 
//  If handlerRangeBlock is a JSR block, add handlerBlock after the first two outgoing   edges to preserve the hypothesis about JSR block successors order (see   {@link #visitJumpInsn}). 
//  parameterized types are only assignable to other parameterized types and class types 
//  Obtain bean definitions for all relevant BeanPostProcessors. 
//  IntelliJ IDEA 11 won't accept int assignment here 
//  backwards compatibility reasons. 
//  SPR-14238 
//  Prepare the bean factory for use in this context. 
//  In any case, we can still verify the type of event that would have 
//  At this point, we need a TypeDescriptor for a non-null target object 
//  construct an errors instance of the tag 
//  -----------------------------------------------------------------------------------------------   Instance fields   ----------------------------------------------------------------------------------------------- 
//  We should set a specific isolation level but are not allowed to... 
//  Basic number comparisons 
//  in case of plain LinkageError (class already defined)   or IllegalArgumentException (class in different package):   fall through to traditional ClassLoader.defineClass below 
/* 	 * Below are tests from Table 12-1 of the Servlet Specification	  */
//  gh-22853 
//  gh-22720 
//  Close and stop the listeners 
/* 	 * Removes all headers provided via array of 'headerPatterns'.	 * <p>As the name suggests, array may contain simple matching patterns for header	 * names. Supported pattern styles are: "xxx*", "*xxx", "*xxx*" and "xxx*yyy".	  */
//  Helper methods 
//  Override a DECIMAL data type for no-decimal numerics   (this is for better Oracle support where there have been issues   using DECIMAL for certain inserts (see SPR-6912)) 
//  SPR-12861 
//  Demonstrates we cant inject that event because the listener has a raw type 
// ---------------------------------------------------------------------   Implementation of ApplicationContext interface  --------------------------------------------------------------------- 
//  Reset session if invalidated. 
//  Try to build the most specific interface possible for inherited methods to be   considered for sub-interface matches as well, in particular for proxy classes.   Note: AspectJ is only going to take Method.getDeclaringClass() into account. 
//  Retain the following warning suppression for deprecation (even if Eclipse   states it is unnecessary) since withPotentialTimeout(FrameworkMethod,Object,Statement)   in BlockJUnit4ClassRunner has been deprecated. 
//  Build methods 
//  If we've gone as far as we can go and haven't found it... 
//  3. Resolve with Accept-Encoding but no matching codings 
//  Add final key and value to the Map. 
//  getThrowawayClassLoader method is optional 
//  Manually acknowledge message, if any. 
//  First, check annotation on qualified element, if any 
//  See SPR-13973 
//  variable names refer to RFC 2616, section 2.2 
//  Invoke method on actual Query object. 
//  SPR-10330 
//  SPR-12860 
//  first and last need conversion 
//  Note: the following 'multi-line' layout is for enhanced code readability.                                                                                               
//  Send error while item cached 
//  Run the actual test several times in order to increase the chance of threads   stepping on each others' toes by overwriting the same mutable state in the   TestContext. 
//  Invalid Accept-Language header: treat as empty for matching purposes 
//  test resolvable with default message, without and with args 
//  with the persistence unit name as bean name (by convention). 
//  Be sure to increment depth to avoid infinite recursion 
//  Register non-transactional ConnectionProvider for Quartz. 
//  This is declared private to avoid "public field" pollution 
//  SPR-3671 
//  Enforce presence of a session first to allow listeners to create the mutex attribute 
//  Current parsing position 
//  must override existing entry 
//  One final test check coercion on the key for a map lookup 
//  Check whether we had any attribute set 
//  Do this first, it may add ResponseBody advice beans 
//  SPR-16505 
//  Eagerly initialize the default HttpInvokerRequestExecutor, if needed. 
//  Initial cache attempt 
//  exit type descriptor can be null if both components are literal expressions 
//  Make sure to preserve first matching column for any given name,   as defined in ResultSet's type-level javadoc (lines 81 to 83). 
//  Use hashCode of proxy. 
//  - The offset of the RuntimeVisibleAnnotations attribute, or 0. 
//  This is a Saturday 
//  Path start definitely matches due to "**" part in pattern. 
//  Need to recreate all Cache instances with new ClassLoader in store-by-value mode... 
//  Initialize transient fields. 
//  Request handling error (e.g. remote call), if we manage to set the status.. 
//  Accessors for use in subclasses... 
//  unsynchronized EntityManager demanded 
//  Reflective lookup to find SessionImpl's connection() method on Hibernate 4.x/5.x 
//  This also suppresses the 'id' attribute (which is okay for a <label/>) 
//  abstract bean definition 
//  3) Synthesize the AnnotationAttributes back into an annotation 
//  Create a scoped proxy definition for the original bean name, 
//  There is no pattern piece 
//  Manually check that there is a warning from the 'declare warning' statement in   AnnotationAsyncExecutionAspect 
//  6 bytes for name, flags and version, and 5 * 2 bytes for counts. 
//  was **/*handle.vm 
//  does not handle Z, B, C, S
//  Comparison by date uses HttpHeaders to format the date in the error message. 
//  Associate target with ThreadLocal. 
//  Consider adding logic to determine the class of the typeArg, if possible.   For now, just fall back... 
/*  numLocal =  */
//  Always load via SpringTemplateLoader (without hot detection of template changes). 
//  should match because exact pattern is there 
//  MapAccessor required for this to work 
//  Visit LocalVariableTable and LocalVariableTypeTable attributes. 
//  to 0 because there is no 'this' in a clinit 
//  array_value 
//  - The offset of the RuntimeInvisibleParameterAnnotations attribute, or 0. 
//  SPR-16506 
//  Connection proxy closed, without ever having fetched a   physical JDBC Connection: throw corresponding SQLException. 
//  One integration test to verify triggering of Forwarded header support.   More fine-grained tests in ForwardedHeaderTransformerTests. 
//  assume a type 
//  Find the pattern between padIdxStart & padIdxTmp in str between 
//  No URL -> considering resource location as relative to the current file. 
//  there is a current invocation 
//  Test same words 
//  ByteArrayOutputStream does not throw   any IOException 
//  Look for direct name match. 
//  Exclude pointcuts 
//  ignore WebServiceException as probably setup issue with JAX-WS provider vs JAXB 
//  set expected next trigger time 
//  Look up single TransactionManagementConfigurer 
//  Delegation to parent with explicit args. 
//  No proxy here because the pointcut only applies to the concrete class, not the interface 
//  Resource local transaction, need to acquire the EntityTransaction,   start a transaction now and enlist a synchronization for commit or rollback later. 
// -------------------------------------------------------------------------   Typical methods for creating and populating external bean instances  ------------------------------------------------------------------------- 
//  Kotlin API not available - no Kotlin support 
//  Get Scheduler instance from SchedulerFactory. 
//  Intentionally private 
//  lbf.getBean("b"); 
//  - The end offset of the StackMap[Table] attribute, or 0. 
//  SPR-8561 
//  Prefer regular method over bridge... 
//  Expanding 
/* 	 * SPR-2185 - Null model assertion causes backwards compatibility issue	  */
//  and the connection is start()ed after the listener is registered... 
//  Synthetic attributes always use 6 bytes. 
//  Only URI variable (nothing to encode).. 
//  Destroy all cached singletons in the context's BeanFactory. 
//  Find dot before property name, ignoring dots in property keys. 
//  Force disconnect (so we won't try to send close frame) 
//  referenced as #a in the expression 
//  about the count 
//  Account for named parameters being used multiple times 
//  Extract the source of the current task 
//  Artemis-style broker convention for STOMP destinations 
//  DatabaseMetaData.procedureColumnIn or possibly procedureColumnUnknown 
//  Make framework objects available to handlers and view objects. 
//  Check if all puts have been excluded by condition 
//  The instruction after the JSR starts a new basic block. 
//  Look for explicit serviceId-to-beanName mappings. 
// consume POWER 
//  Bind the connection holder to the thread. 
//  From introduction interceptor, not target 
//  SPR-17482 
//  SPRING PATCH: prefer thread context ClassLoader for application classes 
//  Just making sure somebody doesn't try to make SocketUtils abstract,   since that would be a breaking change due to the intentional public   constructor. 
//  Not feasible to count bytes on potentially streaming response.   RFC 7302 allows HEAD without content-length. 
//  calling stop() before the delay to preserve   invocation order in the 'stoppedBeans' list 
//  target is a Payload2 instance 
//  Remaining methods 
// 		teslaContext.setRootObject(tesla); 
//  Not advised; under One but not a setter 
//  It has to be a map key in this case 
//  Second try is the transaction attribute on the target class. 
//  If the output frame stack is empty, pop from the input stack. 
//  runtime subtype. 
//  Only consider equal when proxies are identical. 
//  Apply index to Iterator in case of a Set. 
//  A compiler is created for each classloader, it manages a child class loader of that   classloader and the child is used to load the compiled expressions. 
//  But can't mod first 
//  Nothing of consequence, already forced disconnect 
//  Attempted write as first activity on this field and property to drive testing 
//  Try custom converter... 
//  No-op 
//  Expose alias for 4.1 compatibility 
//  stack: right/left   neither were null so unbox and proceed with numeric comparison 
//  subscribe + not a user destination 
//  should not happen, since we check in canRead(Type) 
//  print the url to the writer 
//  Register the listener and fire event 
//  Visit the MethodParameters attribute. 
//  MethodInvoker chooses getX(int i) when passing Integer 
//  reply (no listener for 4L) 
//  Detect any custom bean name generation strategy supplied through the enclosing application context 
//  Couldn't resolve anything proper - resort to UncategorizedSQLException. 
//  Matches ValueConstants.DEFAULT_NONE (spring-web and spring-messaging) 
//  TCP 
//  So... we make a compromise: 
//  Remove Level 2   Should not actually do anything since the cache was cleared in the 
//  SPR-14988 
//  Force a new clock (31 min later), don't use setter which would clean expired sessions 
//  Add an introduction that implements only the methods on ScopedObject. 
//  Tomcat's "war:file:...mywar.war*/WEB-INF/lib/myjar.jar!/myentry.txt" 
//  Serialize all relevant superclass fields.   Superclass can't implement Serializable because it also serves as base class 
// ---------------------------------------------------------------------------------------   JmsOperations execute methods  --------------------------------------------------------------------------------------- 
//  Add resolved attribute and BindingResult at the end of the model 
//  - The offset of the RuntimeVisibleTypeAnnotations attribute, or 0. 
//  jackson-datatype-jsr310 not available 
//  SPR-13658 
//  because of the custom editor getValue() should return a String 
//                  
//  Additional, ASM specific constants used in abstract types below. 
//  Can't compile this as we aren't going down the gettrue() branch in our evaluation 
//  4xx 
//  Proxy mode should create new scoped object on each method call 
//  Here the declaring class is not public 
//  Accessors for the resulting MessageHeaders 
//  Since ControllerAdviceBean currently treats PriorityOrdered the same as Ordered,   OrderedControllerAdvice is sorted before PriorityOrderedControllerAdvice. 
//  if the list is full of literals then it will be of the type unmodifiableClass   rather than HashMap (or similar) 
//  Will do JNDI lookup to get home but won't call create 
// ---------------------------------------------------------------------   Implementation of AnnotationConfigRegistry  --------------------------------------------------------------------- 
//  Append 'label' at the end of the basic block list. 
//  Handle prototypes correctly... 
/*  * Factory that creates a JSR-310 {@link java.time.format.DateTimeFormatter}. * * <p>Formatters will be created using the defined {@link #setPattern pattern}, * {@link #setIso ISO}, and <code>xxxStyle</code> methods (considered in that order). * * @author Juergen Hoeller * @author Phillip Webb * @since 4.0 * @see #createDateTimeFormatter() * @see #createDateTimeFormatter(DateTimeFormatter) * @see #setPattern * @see #setIso * @see #setDateStyle * @see #setTimeStyle * @see #setDateTimeStyle * @see DateTimeFormatterFactoryBean  */
/* 	 * Expect instantiation through a non-default constructor, just to be sure that Spring will fail if it tries to instantiate it,	 * and will subsequently delegate to the fallback bean instance producer. 	  */
//  Classic option: protected ClassLoader.defineClass method 
//  Note: exception param below isn't used 
//  Process any @PropertySource annotations 
//  java.corba module not available on JDK 9+ 
//  Add user to local registry 
/*  L3A  */
//  SPR-17220 
//  Note that we don't need to include isInterface in the hash computation, because it is   redundant with owner (we can't have the same owner with different isInterface values). 
//  SPR-11044 
//  if t.data were null, we'd know it wasn't the textual form, it was the symbol form 
//  Servlet methods... 
//  Use request scope to expose nestedPath to included pages too. 
//  chain of statics ending with static method 
//  No custom LoadTimeWeaver provided -> fall back to the default 
//  updated after each stack_map_frame is read. 
//  Nothing to do here. 
//  More extensive "empty body" tests in RequestBody- and HttpEntityArgumentResolverTests 
//  setMillis is deprecated in JDK 9 
//  Static fields set by inner class DummyPersistenceProvider 
//  The type conversion is possible 
//  Please DO NOT simplify the following with AssertJ's fluent API.     We explicitly invoke methods directly on HttpHeaders here to check   the behavior of the entire contract. 
//  Note: @Order is not inherited. 
//  Create proxy here if we have a custom TargetSource.   Suppresses unnecessary default instantiation of the target bean:   The TargetSource will handle target instances in a custom fashion. 
//  POST -> success 
//  SPR-11043 
//  will not fit into an int, needs L suffix 
//  -----------------------------------------------------------------------------------------------   Normal instructions   ----------------------------------------------------------------------------------------------- 
//  This test is considered successful if the following does not result in an exception. 
//  If no server was provided then try to find one. This is useful in an environment   where there is already an MBeanServer loaded. 
//  root context object 
/* 	 * Sort the given source according to the given sort definition.	 * <p>Note: Contained objects have to provide the given property	 * in the form of a bean property, i.e. a getXXX method.	 * @param source input source	 * @param sortDefinition the parameters to sort by	 * @throws java.lang.IllegalArgumentException in case of a missing propertyName	  */
//  to be ignored 
//  All values should be booleans 
//  Test when target implements the interface: should get interceptor by preference. 
//  Request might have been reset (e.g. polling sessions do after writing) 
//  = 1 invocation 
//  1 call by default 
//  resolve[Nested]Placeholders methods behave as usual regardless the value of 
//  Clone the invocation to proceed three times   "The Moor's Last Sigh": this technology can cause premature aging 
//  should still be the new bean with name Sally Greenwood 
//  Ensure that the list is modifiable 
//  Same lenient fallback checking as in Property... 
//  Tell the internal bean factory to use the context's class loader etc. 
//  gh-23576 
//  missing method 
//  Externally configured prefix via PathConfigurer.. 
//  gh-23310 
//  - The constant pool index contained in the Signature attribute, or 0. 
//  the expressionString ran out before the suffix could entirely be found 
//  if the list is full of literals then it will be of the type unmodifiableClass   rather than ArrayList 
//  Static part of the pointcut is a lazy type. 
//  Fetch UOWManager handle from JNDI, if necessary. 
//  sourceLength excludes the first 6 bytes for access_flags, name_index and descriptor_index. 
//  The index in the byte[] found at buffers.getLast() to be written next 
//  Register bean processors that intercept bean creation. 
//  A single default constructor -> clearly a standard JavaBeans arrangement. 
//  Ensure bd is non-null due to potential concurrent modification   of the beanDefinitionMap. 
//  Need a compound key 
//  The instruction just after is a jump target (because ASM_GOTO_W is used in patterns   IFNOTxxx <L> ASM_GOTO_W <l> L:..., see MethodWriter), so we need to insert a frame 
//  DecoratingNavigationHandler specified through constructor argument:   Call it with original NavigationHandler passed in. 
//  Restore original default locale. 
//  marshall into the existent document 
//  Check for XML files and redirect them to the "standard" XmlBeanDefinitionReader 
//  Read the requires_index, requires_flags and requires_version fields and visit them. 
//  Absolute or relative?
//  No URL -> resolve as resource path. 
//  Uncomment the following if you encounter problems with matching against the file system   It shows file locations.  		String[] actualNames = new String[resources.length]; 
//  cannot convert to an URI, considering the location relative   unless it is the well-known Spring prefix "classpath*:" 
//  Probably a placeholder: let's ignore it for type matching purposes. 
/* 	 * A new scope is entered when a function is invoked.	  */
//  No working getDataSource method - cannot perform DataSource transaction check
//  Retrieve object again, registering it for implicit session attribute updates.   As a bonus, we also allow for potential decoration at the getAttribute level. 
//  Cancel all registered timers. 
//  just leave this field and continue 
//  was **/*.cache.html 
//  The attribute_name_index, attribute_length and num_annotations fields use 8 bytes. 
//  SPR-8917 
//  Need to read super class to determine a match... 
//  Basics 
//  Async dispatch thread 
//  This trigger has to be somewhere in between 2am and 3am 
//  -----------------------------------------------------------------------------------------------   Methods to compute offsets and to manage forward references   ----------------------------------------------------------------------------------------------- 
//  Write as Mono if possible as an optimization hint to Reactor Netty   ChannelSendOperator not necessary for Mono 
//  Validate nested type structure 
//  check that further invocations simply participate 
//  Overridden methods 
//  needs string conversion 
//  Compute arguments to the function 
//  -----------------------------------------------------------------------------------------------   Other miscellaneous status fields   ----------------------------------------------------------------------------------------------- 
//  false means prefix 
//  Do not initialize FactoryBeans here: We need to leave all regular beans 
//  15-04-2013 4:00 GMT+10 
//  check message source availability 
//  Ignore it: It wasn't a valid bean name and property,   although it did start with the required prefix. 
//  Set computed HTTP 1.1 Cache-Control header 
//  Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime   (e.g. through an @Bean method registered by ConfigurationClassPostProcessor) 
//  Have empty string treated as null for elvis 
//  -----------------------------------------------------------------------------------------------   Methods to get the sort, dimension, size, and opcodes corresponding to a Type or descriptor.   ----------------------------------------------------------------------------------------------- 
//  If there aren't already some parameters, we need a "?". 
//  right is a byte 
//  beforeCompletion not called before (probably because of JTA rollback).   Perform the cleanup here. 
//  Generate default id... 
//  ignore - VM is already shutting down 
//  Proceed with database-specific checks 
//  Calling foo(String,Integer) with (String,Integer) is exact match 
//  SPR-9016 
//  just handling JSR-310 specific date and time types 
//  Build an independent copy of the arguments array. 
//  Automatic vs explicit HTTP HEAD mapping 
//  No response 
//  now try to execute the tag outside a bindtag, but inside a messageTag 
//  Printing content 
//  Service invocations on ProxyConfig with the proxy config... 
//  Update all affected session attributes. 
// -------------------------------------------------------------------------   Specialized methods for fine-grained control over the bean lifecycle  ------------------------------------------------------------------------- 
//  Verify contracts between utility methods: 
//  the advice declared first has higher precedence 
//  Abstract template methods 
//  name could be a variable or a type... 
//  SPR-16151: Smile data format uses null to separate documents 
//  might be a different prefix 
//  Remove resolved singleton classes from cache 
//  Convert Collection elements. 
//  TRADITIONAL BEAN DEFINITION READER METHODS 
//  Build more efficiently if we can: we only need scheme, host, port for origin comparison 
//  Hierarchy traversal... 
//  Check cached editor for type, registered for superclass or interface. 
//  Single-purpose return value types 
//  SPR-12727 
//  The thread-bound resource holder might not be available anymore,   since afterCompletion might get called from a different thread. 
//  "read-only not supported" -> ignore, it's just a hint anyway 
//  At this point, we need to refresh... 
//  CaptureVariablePathElement 
//  non-string keys and values work fine... until the security manager is introduced below 
//  Else, either competing onDataAvailable (request vs container), or concurrent completion 
//  var : POUND id=ID -> ^(VARIABLEREF[$id]); 
//  BIPUSH or NEWARRAY 
//  Cannot resolve relative persistence.xml file - let's assume it's not there. 
//  getting the expression type to be what we want - either:   calling byteValue() on Integer.class   relying on registered type converters 
//  Register the original bean definition as it will be referenced by the scoped proxy   and is relevant for tooling (validation, navigation). 
//  SPR-11528 
//  potentially not detected as a listener by getBeanNamesForType retrieval 
//  Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those 
//  SPR-10659: ensure header name is in the message   Unfortunately, we can't control formatting from JUnit or Hamcrest. 
//  Currently HttpURLConnection does not support HTTP PATCH 
//  Allow the assembler a chance to vote for bean inclusion. 
/* 	 * Match a String against the given patterns, supporting the following simple	 * pattern styles: "xxx*", "*xxx", "*xxx*" and "xxx*yyy" matches (with an	 * arbitrary number of pattern parts), as well as direct equality.	 * @param patterns the patterns to match against	 * @param str the String to match	 * @return whether the String matches any of the given patterns	  */
/* 	java.net.URI	javax.xml.datatype.XMLGregorianCalendarxs:anySimpleType	javax.xml.datatype.Duration	java.lang.Object	java.awt.Image	javax.activation.DataHandler	javax.xml.transform.Source	java.util.UUID		  */
//  - The offset of the RuntimeInvisibleAnnotations attribute, or 0. 
//  SPR-14240 
//  Work out the target class: may be {@code null}.   The TransactionAttributeSource should be passed the target class   as well as the method, which may be from an interface. 
//  Set necessary default properties here, as Quartz will not apply   its default configuration when explicitly given properties. 
//  Explicit bean definition found, probably replacing an import.   Let's remove the old one and go with the new one. 
//  Use public schema if no schema specified 
//  Special handling of array property. 
//  works fine 
//  Following the JPA specification, a persistence provider can also 
//  Is the constructor annotated with @Autowired?
//  No @Autowired - implicit wiring 
//  (it might still get re-merged later on in order to pick up metadata changes) 
//  Should have only one more lookup 
/*  checkClassVersion =  */
//  (The number of bytes in the current buffer is in 'index'.) 
//  - The offset of the Exceptions attribute, or 0. 
//  After partContentReady, we can access the part content from MultipartHttpOutputMessage   and use it for writing to the actual request body 
//  Java ClassFile versions (the minor version is stored in the 16 most significant bits, and the   major version in the 16 least significant bits). 
//  character sequence ending comment or quote not found 
//  Request 1 creates session 
//  Previous task apparently executed too early...   Let's simply use the last calculated execution time then,   in order to prevent accidental re-fires in the same second. 
// milliseconds 
//  We got this far, exception was processed.. 
//  Don't ignore: should fail 
//  Enums can either be represented through a String or an enum index value:   leave enum type conversion up to the caller (e.g. a ConversionService)   but make sure that we return nothing other than a String or an Integer. 
//  Ensure STOMP endpoints are registered 
//  Create a pointcut for the anonymous pc and register it. 
//  check position for OperatorOr 
//  ... and then rotate it to the front of the months 
//  we're relying on doOnDiscard in base class 
//  In the first case we should not retry, in the second case we should see   if there is a better suited method. 
//  Handle EntityManagerProxy interface. 
// 		StaticApplicationContext ctx = new StaticApplicationContext();  		ctx.registerPrototype("testService1", TestService.class, new MutablePropertyValues());  		ctx.registerPrototype("testService2", ExtendedTestService.class, new MutablePropertyValues());  		MutablePropertyValues mpv = new MutablePropertyValues();  		mpv.addPropertyValue("serviceLocatorInterface", TestServiceLocator3.class);  		mpv.addPropertyValue("serviceMappings", "=testService1\n1=testService1\n2=testService2");  		ctx.registerSingleton("factory", ServiceLocatorFactoryBean.class, mpv);  		ctx.refresh(); 
//  Should ignore our own broadcast to brokerChannel 
//  (e.g. the default StaticMessageSource in a StaticApplicationContext). 
//  Test method on inventor: throwException()   On 1 it will throw an IllegalArgumentException   On 2 it will throw a RuntimeException   On 3 it will exit normally   In each case it increments the Inventor field 'counter' when invoked 
//  Similar to when writing regular Java code, it only knows about java.lang by default 
//  Sort by previously determined @Order value, if applicable 
//  New in Spring 2.5: resolve placeholders in alias target names and aliases as well. 
//  SPR-12724 
// ---------------------------------------------------------------------   Implementation of ListableBeanFactory interface  --------------------------------------------------------------------- 
//  Read the BootstrapMethods attribute, if any (only get the offset of each method). 
//  Case of a GOTO_W or JSR_W specified by the user (normally ClassReader when used to remove   ASM specific instructions). In this case we keep the original instruction. 
//  Now been down both 
//  Throw underlying exception 
//  Passing (String) on call to (Integer[]) is conversion match (String to Integer) 
//  We can skip creating a MethodInvocation: just invoke the target directly.   Note that the final invoker must be an InvokerInterceptor, so we know   it does nothing but a reflective operation on the target, and no hot   swapping or fancy proxying. 
//  This would be unnecessary in the case of subtyping (e.g. method takes Number but Integer passed in)
//  This is a CGLIB proxy, so we can proxy it to the target class 
//  SPR-2728 
//  Attribute value intentionally matches attribute name: 
//  Load properties from file afterwards, to let those properties override. 
//  Else we either got no holder or an empty thread-bound holder here. 
//  Loop over all the basic blocks and visit the stack map frames that must be stored in the   StackMapTable attribute. Also replace unreachable code with NOP* ATHROW, and remove it from 
//  No match. Don't create a custom target source. 
// ---------------------------------------------------------------------   Implementation of TransactionExecution  --------------------------------------------------------------------- 
//  Non-empty set of methods 
//  To be on the safe side: explicitly delete the parts,   but only actual file parts (for Resin compatibility) 
//  -----------------------------------------------------------------------------------------------   Bootstrap method entries management.   ----------------------------------------------------------------------------------------------- 
//  SPR-16773 
//  Subclasses for specific, client-side, HTTP status codes 
//  Fall back to generic setObject call with SQL type specified. 
//  Optimization: build up a map of Class -> bridge methods in class   so that we can look up all the bridge methods in one pass for a class. 
//  Ensure the body is drained, even if the StatusHandler didn't consume it,   but ignore exception, in case the handler did consume. 
//  Check unadvised behaviour 
//  All the methods in this class use the advised() template method   to obtain a transaction object, configured with the given PlatformTransactionManager   and transaction attribute source 
//  Register Sessions and MessageConsumers. 
//  Create empty list for easier checks when registering triggers. 
//  see if Synchronoss NIO Multipart can read what we wrote 
//  Read the  'provides_count' and 'provides' fields. 
//  SPR-11657 
//  For advice applicability check below (involving base packages, assignable types 
//  Normal exit 
//  Here we do not extract the labels corresponding to the attribute content. We assume they   are the same or a subset of those of the LocalVariableTable attribute. 
//  projections and selections 
//  Fall back to class name as cache key, for backwards compatibility with custom callers. 
//  Read API methods to be implemented or template methods to override... 
//  Only set parent context as parent ThemeSource if no parent ThemeSource   registered already. 
//  Don't sweat on exceptions; assume value was modified 
//  the suffix is missing 
//  Will be set by advice during a method call 
//  Try file system channel 
//  We should suppress flushing for a read-only transaction. 
//  A specific theme indicated, or do we need to fallback to the default?
//  Original exception from former ConversionService call above... 
//  (whose size depends on its path_length field). 
//  Publish the context as a servlet context attribute. 
//  SPR-12854 
//  collaborator interface that makes it easy to test this aspect is   working as expected through mocking. 
//  Search subdirectories recursively: ServletContext.getResourcePaths   only returns entries for one directory level. 
//  Visit the frame and its content. 
//  Spring MVC Test 
//  Empty payload 
//  Clearly a Topic: let's set the "pubSubDomain" flag accordingly. 
//  Should Fail due to timeout. 
//  If a dimension was specified, check it matches the initializer length 
//  inadvertently mutate the state of the metadata passed to this method. 
//  Move a basic block from the list of blocks to process to the list of processed blocks. 
//  set the name value 
//  Singleton or scoped - not a prototype. 
//  Visit the non standard attributes. 
//  no-op if already set 
//  Methods designed for test introspection 
/*  Do not delete! This subclassing is intentional.  */
//  inherited class-level annotation; note: @Transactional is inherited 
//  For opNe_SPR14863 
//  SPR-14247 
//  *sigh* complicated 
//  ConversionService not tried before, probably custom editor found   but editor couldn't produce the required type... 
//  Never format a code-as-default-message, even with alwaysUseMessageFormat=true 
//  Values containing key/value delimiters (":", "=", " ") 
//  Try with Locale.US 
//  SPR-11521 
//  no slots so presume those candidate vars were actually type names 
//  Initialize lifecycle processor for this context. 
//  ActiveMQ 
//  Annotation-based resolvers 
//  Manually validate cookie values since maxAge changes... 
//  Choose a "straight to target" interceptor. (used for calls that are 
//  If srcType is the NULL type, merge(srcType, dstType) = dstType, so there is no change. 
//  Note that we need to construct a new proxy factory, 
//  parse: @beanname @'bean.name' 
//  probably from a placeholder 
//  Redefined with public visibility. 
//  Access double array 
//  We're at the top of the nested object hierarchy,   so the present level is not a field but rather the top object.   The best we can do is register a global error here... 
//  ArrayList containing List<Integer> to List<String> 
//  Create and activate new context builder. 
//  Clear remaining scheduled invokers, possibly left over as paused tasks 
//  Check list 
//  parameter 
//  Reset the ConnectionHolder: It might remain bound to the thread. 
//  trailing semicolon 
//  Full check within synchronization, entering the BeanFactory interaction algorithm only once... 
//  SPR-12984 
//  "down" the annotation hierarchy. 
//  Remove header if available 
//  Clean up the EventLoopGroup if we created it in the constructor 
//  7.5.4.1 
//  Default case... 
//  first child 
//  Traverse the class hierarchy... 
//  but this not, because it's testlast and not testla 
//  If we get here, we need to create a MethodInvocation. 
//  Already changed, don't need to change again 
//  To be safe, check within full lock now... 
//  Now test the pooled one 
//  Expose the model object as request attributes. 
//  Else fetch actual Connection and check there,   because we didn't have a default specified. 
//  body is drained in other cases 
//  Indicates whether this is a procedure or a function 
//  Going to perform a refresh check - update the timestamp. 
//  Some parsers raise a parse exception 
//  type not public but method is 
//  Check for Unix-style path 
//  SPR-9406 
//  Return a transactional Connection, if any. 
// ---------------------------------------------------------------------   Convenience methods for toString output  --------------------------------------------------------------------- 
//  pass primitive to reference type ctor 
//  Works with a type pattern 
//  exclude unlisted classes 
//  Last-modified timestamp of file will just be read if caching with timeout. 
//  Per target or per this. 
//  Late enough for a re-cache attempt 
//  Participate in LiveBeansView MBean, if active. 
//  fall through 
//  As per SockJS protocol content-type can be ignored (it's always json) 
//  Selection isn't compilable. 
//  With developer builds we get: <MyBean><string>foo</string></MyBean>   But on CI server we get: <MyBean xmlns=""><string>foo</string></MyBean> 
//  root or empty path 
//  TODO correct end position?
// ---------------------------------------------------------------------------------------   Convenience methods for sending messages to and receiving the reply from a destination  --------------------------------------------------------------------------------------- 
//  OPTIONS 
//  We want to see everything, and allow configuration of log levels dynamically. 
//  We need a transactional target now, according to the JPA spec.   Otherwise, the operation would get accepted but remain unflushed... 
//  Possibly a lambda-defined listener which we could not resolve the generic event type for   -> let's suppress the exception and just log a debug message. 
//  Set the content type. 
//  Try with Locale.UK 
//  Clean duplicate slashes or pathWithinPattern won't match lookupPath 
//  test that ApplicationContextInitializers can access ServletContext properties   via the environment (SPR-8991) 
//  The exception will be ignored by the class loader, anyway... 
//  An exception handler to register... 
//  TcpConnection implementation 
//  uninitialized to let post-processors apply to them! 
//  call to getClassFilter forces resolution... 
//  Check whether message contains outer bean name. 
//  Default handling of monetary values 
//  Invocation on Session interface coming in... 
//  so non-qualified references 'hasRole()' 'hasIpAddress()' are invoked against it); 
//  Ideally we would expect Boolean.class instead of Object.class, but this 
//  nothing to enhance -> return immediately 
//  a null value will mean either the value was null or the variable was not found 
//  advice1 was declared before advice2   so advice1 has higher precedence 
//  If a @Configuration class gets proxied, always proxy the target class 
//  Empty file or directory -> not considered readable... 
//  gh-23077 
//  Fields must be non-null to start with 
//  The user may supply null - and that will be ok unless a primitive is expected 
//  Check correct Session passed into SessionAwareMessageListener. 
//  Fallback: generate a unique default bean name. 
//  SPR-14991 
//  Test all basic section types 
//  Modifiable attributes 
//  Reactor requires at least 50 to flush, Tomcat/Undertow 8, Jetty 1 
//  make sure the marshalling does not result in errors 
//  expression = (SpelExpression) parser.parseExpression("foo['NEW']");   o = expression.getValue(new MapHolder());   assertEquals("VALUE",o); 
//  exponent digits 
//  the chance of having the same reference (hashCode) twice is negligible. 
//  We are only validating the request. The response is mocked out.   person.getName().equals("Ludwig van Beethoven") 
//  If the type is not public then when generateCode produces a checkcast to it   then an IllegalAccessError will occur.   If resorting to Object isn't sufficient, the hierarchy could be traversed for   the first public type. 
//  Allows post-processing of the bean factory in context subclasses. 
//  -----------------------------------------------------------------------------------------------   Special instructions   ----------------------------------------------------------------------------------------------- 
//  SPR-12108 
//  a bit BS, but we need to test them, as long as they don't throw exceptions 
//  Assume key not found for some other reason   -> do NOT throw the exception to allow for checking parent message source. 
//  Check whether the target bean is defined as prototype. 
//  a file pattern 
//  SPR-14992 
//  drift over white space 
//  Visit the instruction at this bytecode offset. 
// ---------------------------------------------------------------------   Implementation of the Errors interface  --------------------------------------------------------------------- 
//  Use bind error processor to create FieldErrors. 
//  first set up the pagecontext and the bean 
//  Try first with identity checks for greater performance. 
//  Need to search for EntityManagerFactory beans. 
//  For simple Class references, build the wrapper right away -   no expensive resolution necessary, so not worth caching... 
/* 			* Need to use straight JDBC code because we need to make sure that the insert and select			* are performed on the same connection (otherwise we can't be sure that @@identity			* returns the correct value)			 */
//  Save previous status values, for re-exposure at the end of this tag. 
//  Handle getTargetSession method: return underlying Session. 
//  We don't care about the object 
/* 				 * We only expect to ever be asked to instantiate this class, so we just cut corners here.				 * A real-world implementation would obviously be different.				  */
//  We couldn't identify it more precisely - let's hand it over to the SQLState fallback translator. 
//  We know commentPrefixes is an empty array, so make sure commentPrefix   is set to that as well in order to honor the alias contract. 
//  - The offset of the EnclosingMethod attribute, or 0. 
//  Hit the method in the per clause to instantiate the aspect 
//  In between are the constructor args 
//  age == 2 
//  SPR-16516 
//  Validate the class, writing log messages as necessary. 
//  Create 1 more which forces a time-based check (clock moved forward) 
//  unaryExpression: (PLUS^ | MINUS^ | BANG^ | INC^ | DEC^) unaryExpression | primaryExpression ; 
//  paths.clear(); 
//  Must fail as annotation on interfaces should not be considered a match 
//  Put the field_info attributes. 
//  Be defensive: Some servlet containers provide us with invalid classes,   no matter what @HandlesTypes says... 
//  test exact matching 
//  are guaranteed to bind in exactly the same way. 
//  Map array 
//  Do nothing - a Spring-managed DataSource has its own lifecycle. 
// ---------------------------------------------------------------------   Implementation of MessageSource interface  --------------------------------------------------------------------- 
//  Add parameters to output content type 
//  Package up the remaining arguments into the array 
//  Transparently suppress a ResourceHolder that was marked as void... 
//  Invoke create() method on EJB home object. 
//  Skip the access_flags, this_class, super_class, and interfaces_count fields (using 2 bytes   each), as well as the interfaces array field (2 bytes per interface). 
//  Check if need to box it for the method reference?
//  Did the handler return a view to render?
//  If we're allowed, we can create the factory bean and call getObjectType() early 
//  TransactionalClass is NOT annotated or meta-annotated with @Component 
//  is the same as that of referring to a FactoryBean within XML. See SPR-6602. 
//  Matches the getAge() method in any class 
//  Construct using org.springframework.protobuf.SecondMsg.newBuilder() 
//  Create the request after changing the default locale. 
//  T <= ? extends T 
//  Replace volatile members 
//  If only JTA TransactionManager specified, create UserTransaction handle for it. 
//  Passing (Integer, Sub, String[]) on call to (String, Super, String[]) is exact match 
//  Add it conditionally. 
//  Cannot modify startup-time collection elements anymore (for stable iteration) 
//  Can proceed with standard RMI lookup API... 
// -------------------------------------------------------------------------   Methods handling compilation issues  ------------------------------------------------------------------------- 
//  '**/**' situation, so skip one 
//  > 4 sec wait in total 
//  If it's a FactoryBean, we want to look at what it creates, not at the factory class. 
//  instruction as a successor of the current block, and to start a new basic block. 
//  Exception (if any) is already handled.. 
//  Use the specified ClassLoader to resolve local proxy classes. 
//  Other method_info attributes: 
//  check not called for other types 
//  evaluate("aVarargsMethod(new String[]{'a','b','c'})", 3, Integer.class); 
//  but all params are available 
//  Check superclass handles duplicate init 
//  Now, register all regular BeanPostProcessors. 
//  Check raw bean class, e.g. in case of a proxy. 
//  The name of the parameter, if any 
//  skip to flights 
//  hierarchy map. 
//  Check declared factory method return type on bean class. 
//  relationalExpression : sumExpression (relationalOperator^ sumExpression)?; 
//  instance @Bean methods within @Configuration classes must be overridable to accommodate CGLIB 
//  should now be able to access data via the lazy proxy 
//  Remove empty entries from the hierarchy map. 
//  Do not close channel from here, rather wait for the current read callback   and then complete after releasing the DataBuffer. 
//  SPR-2108 
//  We'll search superclasses and implemented interfaces explicitly,   although it shouldn't be necessary - however, see SPR-10125. 
//  We need AUTO or COMMIT for a non-read-only transaction. 
//  Prepare broadcast message from remote server 
//  6 attribute header bytes, and 2 bytes for main_class_index. 
//  Standard NavigationHandler specified through constructor argument:   Call it through standard API, without original NavigationHandler passed in.   The called handler will not be able to redirect to the original handler. 
//  SPRING PATCH BEGIN 
// -------------------------------------------------------------------------   Convenience query methods for iteration and bulk updates/deletes  ------------------------------------------------------------------------- 
//  This next code is only generated because of the registered editor, using the   registered type of the editor as guess for the content type of the collection. 
//  Simple filter 
//  @CacheValue 
//  Let JPA perform its standard PersistenceProvider autodetection. 
//  SPR-16160 
//  Extends RemoteException 
//  OpLT   OpLE   false - something is not < or <= null 
//  SPR-10806 
//  if we are this far this shouldn't happen, but...
//  float 
//  stackless exception 
//  Safari needs at least 1024 bytes to parse the website.   https://code.google.com/p/browsersec/wiki/Part2#Survey_of_content_sniffing_behaviors 
//  Must fail as annotation isn't inherited 
//  cannot do what they're attempting. 
//  this is a bit BS, but we need to test it 
//  Use hashCode of Session proxy. 
/* 	 * Sort the given List according to the given sort definition.	 * <p>Note: Contained objects have to provide the given property	 * in the form of a bean property, i.e. a getXXX method.	 * @param source the input List	 * @param sortDefinition the parameters to sort by	 * @throws java.lang.IllegalArgumentException in case of a missing propertyName	  */
//  A context instance was injected at construction time -> use it 
/*  Using fully qualified class names as default bean names by default.  */
//  Invalid Accept-Language format -> just store plain header 
//  Copy and reset the nextAttribute field so that it can also be used in ClassWriter. 
//  Declared locally?
//  It's a distinguished null value. Let's wrap it in a TypedStringValue   object in order to preserve the source location. 
//  looks like 'T]' (T is map key) 
//  baseline with standard write method 
//  SPR-16296 
//  SPR-9531 
//  SchedulingTaskExecutor implementation 
//  Use the CCI execute method with output record as parameter. 
//  map  = LCURLY (key ':' value (COMMA key ':' value)*) RCURLY 
//  no box needed 
//  OK, so we need an EntityManagerFactory... 
//  Reactor 
//  AnnotationTypeMappings does not implement Iterable so we don't create   too many garbage Iterators
//  Bind request parameters onto target object. 
//  Execute receive outside of transaction. 
//  Unregister the connector server if startup failed. 
//  Make resolvable dependencies (e.g. ResourceLoader) available here as well... 
//  Handler method detection 
/*  all tests are in superclass  */
//  Write tag, and reserve 2 bytes for num_values. Here we take advantage of the fact that the   end of an element_value of array type is similar to the end of an 'annotation' structure: an   unsigned short num_values followed by num_values element_value, versus an unsigned short   num_element_value_pairs, followed by num_element_value_pairs { element_name_index,   element_value } tuples. This allows us to use an AnnotationWriter with unnamed values to   visit the array elements. Its num_element_value_pairs will correspond to the number of array 
//  Updates the maximum size reached by the output stack, if needed (note that this size is 
//  end of JDBCException subclass handling 
//  It shouldn't be corrupted, it should still work 
//  The JDK does not contain a default editor for any of these target types. 
//  SPR-14372: make it case-sensitive 
//  No PropertyDescriptor found 
//  SPR-17363 
//  SPR-3302 
//  Commit 
//  -----------------------------------------------------------------------------------------------   Static methods to get abstract types from other type formats   ----------------------------------------------------------------------------------------------- 
//  So well-known it doesn't even need an adapter. 
//  initialCapacity is 5/4 (rounded up, to nearest power of 2) 
//  request.setRequestURI("http://localhost:7070/example/adminhandle.vm"); 
//  Expose interface methods (not proxy-declared overrides) for proper vararg introspection 
//  STOMP header names 
//  Regular EntityManager operations. 
//  No context is the same providing an empty context path 
//  Use the source value as-is, as it matches the target type. 
//  Update the frame owner so that a correct frame offset is computed in Frame.accept(). 
//  Reads the 'opens_count' and 'opens' fields. 
//  Destination argument being null is ok for a producer 
/*  all tests are in the superclass  */
//  Only post-process and store if not put there already during getObject() call above   (e.g. because of circular reference processing triggered by custom getBean calls) 
//  List of columns objects to be used in this context 
//  Will fail, after invoking Nop1 
//  Clear ThreadLocal, just in case. 
//  mediaType2.getSubtype().equals(mediaType2.getSubtype()) 
//  Try Hibernate 5.1 
//  changing target 
//  Declared on a superclass?
//  AbstractDataBufferAllocatingTests.leakDetector will verify the buffer's release 
//  The beans property may be null, for example if we are relying solely on autodetection. 
//  Case of an element_value with a const_value_index, class_info_index or array_index field.   See https://docs.oracle.com/javase/specs/jvms/se9/html/jvms-4.html#jvms-4.7.16.1. 
// ---------------------------------------------------------------------   Implementation of HierarchicalBeanFactory interface  --------------------------------------------------------------------- 
//  Second one is bogus 
//  p1 should 'win' as it was registered last 
//  now try to execute the tag outside a bindtag 
//  Remove this unreachable basic block from the exception handler ranges. 
//  We need an exact type match for generics 
//  See https://github.com/oracle/graal/blob/master/sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/ImageInfo.java 
//  Try Hibernate 5.2 
//  If no value yet, try to get it as a name_value=xyz parameter 
//  Use rejected value in case of error, current field value otherwise. 
//  Subscriber methods (we're the subscriber to the write function).. 
//  Clear all pending inserts/updates/deletes in the EntityManager.   Necessary for pre-bound EntityManagers, to avoid inconsistent state. 
// 	| NULL_LITERAL 
//  SPR-2368 
//  Note that we need an ApplicationContext, not just a BeanFactory,   for post-processing and hence auto-proxying to work. 
//  The TransactionInfo.hasTransaction() method will return false. We created it only   to preserve the integrity of the ThreadLocal stack maintained in this class. 
//  Use properties editor to tokenize the hold string. 
//  SPR-13406 
//  More than one value found... no clear single value. 
//  second: commit attempt 
// -------------------------------------------------------------------------   Methods dealing with a plain java.sql.Connection  ------------------------------------------------------------------------- 
//  Exceed send time.. 
//  No need to executor.waitForCompletion() as future.get() will have the same effect 
//  regular constructor invocation 
//  Call again, should be cached 
//  direct access to annotation value: 
//  If we get here, just pass the invocation on. 
//  Obtain EntityManagerFactory from JNDI?
//  Still doesn't match superclass setter 
/*  Upstream write source subscription  */
// ---------------------------------------------------------------------------------------   Convenience methods for receiving messages  --------------------------------------------------------------------------------------- 
//  Search for ScheduledExecutorService bean next... 
//  Container annotation present?
//  Detect default XML configuration files: 
//  singleton bean, so name should be modified even after lookup 
//  deprecated fields 
//  Parse the type_index field. 
//  SPR-11030 
//  SPR-10930 
//  But it doesn't match everything 
//      Ensure that this in-memory database is only used by this class:   
//  Only consider argument type if it is a simple value... 
//  METHODS FOR CONSUMPTION IN A GROOVY CLOSURE 
//  Now the type reference isn't on the stack, and needs loading 
//  Not supported 
//  SPR-16169 
//  should not throw NSBDE 
//  check ServletContext 
//  Resource does not exist. 
// 	expression      : logicalOrExpression        ( (ASSIGN^ logicalOrExpression)  	    | (DEFAULT^ logicalOrExpression)  	    | (QMARK^ expression COLON! expression) 
//  warmup 
//  Load custom SQL error codes, overriding defaults. 
//  to be published once the multicaster is available... 
//  "[Ljava.lang.String;" style arrays 
//  exception by default 
//  TypeReference type which can't be used in Code attribute, or which is unknown. 
// ---------------------------------------------------------------------   Inner classes for internal use  --------------------------------------------------------------------- 
//  Disallowing access to System#getenv means that our   ReadOnlySystemAttributesMap will come into play. 
//  Concurrent handling started during a forward 
//  Shouldn't fail; 
//  (2) Or register an accessor that can understand 'p' and return the right person 
//  Looking for a fallback... 
//  or simply...   context.setMethodResolvers(new ArrayList<MethodResolver>()); 
//  'local' was added first so has precedence 
//  Return the final age produced by 3 birthdays 
//  Copy autowire settings from original bean definition. 
//  any 'default' ones 
//  Else attempt to detect defaults... 
//  Check if array already built for final argument 
//  @Disabled("ControllerClassNameHandlerMapping") 
//  important to make sure we don't reprocess an already processed block. 
//  should have been set explicitly 
//  Continue with default processing of the original exception... 
//  Count of many times as the expression been interpreted - can trigger compilation 
//  SELECTION 
//  Just log it, to keep a transaction-related exception. 
//  Explicit parse events 
//  Now let's try it with the special target 
//  -----------------------------------------------------------------------------------------------   Methods to get class names, internal names or descriptors.   ----------------------------------------------------------------------------------------------- 
//  Remove the connection holder from the thread, if exposed. 
// ---------------------------------------------------------------------   Template methods to be implemented in subclasses  --------------------------------------------------------------------- 
//  If this is a bridge and we know the target was called from invokespecial,   then we need to invoke_virtual w/ the bridge target instead of doing   a super, because super may itself be using super, which would bypass   any proxies on the target. 
//  Get directly 
//  SEND, MESSAGE, ERROR 
//  If nothing else left, at least explicitly point to current path. 
//  invoke method on target connection. 
//  Generate a StackMap attribute entry, which are always uncompressed. 
// ---------------------------------------------------------------------   Implementation of PropertyEditorRegistry/TypeConverter interface  --------------------------------------------------------------------- 
//  Test ctor on inventor:   On 1 it will throw an IllegalArgumentException   On 2 it will throw a RuntimeException   On 3 it will exit normally   In each case it increments the Tester field 'counter' when invoked 
//  ensure a default servlet environment exists 
//  Bind RMI object to registry. 
//  Use the standard evaluation context 
//  ---------------------------------------------------------------------   Implementation of AsyncListener methods   --------------------------------------------------------------------- 
//  Register statically specified listeners first. 
//  Demand may have arrived since readAndPublish returned 
//  We have a fallback text to consider. 
//  Nothing to do: XHR transports check if session is disconnected. 
//  Change IFEQ ... JSR to ASM_IFEQ ... ASM_JSR. 
//  Field handling 
//  Do not accept a null value for a FactoryBean that's not fully   initialized yet: Many FactoryBeans just return null then. 
//  JDK dynamic proxy 
//  Not found -> check parent, if any. 
//  But it works if we specify the type properly 
// strange looking interfaces are just to set up certain test conditions... 
//  Check token type. 
//  qualifier added, and non-default value specified 
//  Not found in parent either. 
//  Create a factory for independent aspect instances. 
//  SPR-13185 
//  isCancelled may still return false, if mono completed before the cancel 
//  Hmm, we didn't get a clear indication... Let's assume XSD,   since apparently no DTD declaration has been found up until   detection stopped (before finding the document's root tag). 
//  It's the transactional Connection: Don't close it. 
//  Ignore: simply not exposing an invalid content type in HttpHeaders... 
//  root is a map instance 
//  "Microsoft SQL Server JDBC Driver 3.0" versus "Microsoft JDBC Driver 4.0 for SQL Server" 
//  SPR-14383 
//  Charset (SPR-8676) 
//  No getObject() method -> shouldn't happen, but as long as nobody is trying to call it...
//  This is proxied 
//  Register the Hibernate Session's JDBC Connection for the DataSource, if set. 
//  We're in resource-ref (prefixing with "java:comp/env") mode. Let's not bother   with property names with a colon it since they're probably just containing a   default value clause, very unlikely to match including the colon part even in   a textual property source, and effectively never meant to match that way in   JNDI where a colon indicates a separator between JNDI scheme and actual name. 
//  No context instance was injected at construction time -> see if one   has been registered in the servlet context. If one exists, it is assumed   that the parent context (if any) has already been set and that the   user has performed any initialization such as setting the context id 
//  CompoundExpression 
//  New script content: Let's check whether it evaluates to a Class. 
//  no MessageSelector...   an exception is thrown, so the rollback logic is being applied here... 
//  Items specified, but might still be empty...
//  Ignore - can't compare qualifiers for a manually registered singleton object 
//  Must not be able to set empty enter message 
//  SPR-8462 
//  node : ((DOT dottedNode) | (SAFE_NAVI dottedNode) | nonDottedNode)+; 
//  LongLiteral 
//  unique candidate, cache the full type declaration context of the target factory method. 
//  Has nested transaction 
//  Class or MetadataReader 
//  can only be caused by doCommit 
//  Store the abstract type. 
//  Attempt to predict the bean type 
//  SPR-11649 
//  We're looking for a regular reference but we're a factory bean that has   a decorated bean definition. The target bean should be the same type 
//  If in memory, it's available. 
//  no code valid, but default given 
//  Create a fresh workbook instance for this render step. 
//  As we're on the same connection, the 2nd request proves server response handling   did complete after the 1st request.. 
//  those of the stack operands in the input frame of dstFrame. 
//  compound expression 
//  SPR-11648 
//          
//  We may get here (as with Hibernate). Either behaviour is valid:   throw exception on first access or on getReference itself. 
//  evaluate data sources 
/* 	 * Removes all headers provided via array of 'headerPatterns'. As the name suggests	 * the array may contain simple matching patterns for header names. Supported pattern	 * styles are: "xxx*", "*xxx", "*xxx*" and "xxx*yyy".	  */
//  Bean Validation 1.1 releaseInstance method 
//  Inequality amongst standard annotations 
//  Add an edge from this block to the successor of the caller basic block, if this block is   the end of a subroutine and if this block and subroutineCaller do not belong to the same 
//  -----------------------------------------------------------------------------------------------   Fields   ----------------------------------------------------------------------------------------------- 
//  SPR-16650 
//  Assert if it exists it is a segment 
//  An annotation not present on the classpath is being ignored   by the JVM's class loading -> ignore here as well. 
/*  intentionally no beans defined  */
//  @since 4.1.2 
//  BytesMessage contents must be unwrapped... 
//  Leniently accept older cookies separated by a space... 
//  apply indexes and map keys 
//  Expose model to JSP tags (as request attributes). 
//  3 attempts max 
//  Subpackages are matched by ** 
// -------------------------------------------------------------------------   Methods dealing with static SQL (java.sql.Statement)  ------------------------------------------------------------------------- 
//  right is a long 
//  simple implementation only support max value 
//  the return value is the new value, not the original value 
//  --- constructor 
//  wibble2 should be null (cannot be initialized dynamically), there is no setter 
//  Ignore AOP infrastructure such as scoped proxies. 
//  All entries are serializable -> serialize the regular MessageHeaders instance 
//  a default ViewResolver if no other resolvers are found. 
//  No compatible reader but body may be empty.. 
/* 		 * The most common ISO Time Format {@code HH:mm:ss.SSSXXX},		 * e.g. "01:30:00.000-05:00".		  */
//  Read the default label and the number of table entries. 
//  Try to parse static field into class and field. 
//  assert that all levels have been detected 
//  SPR-12977 
//  SPR-16652 
//  Access byte array 
//  No custom editor but custom ConversionService specified? 
//  Initialize any placeholder property sources in the context environment. 
//  https://github.com/sockjs/sockjs-client/issues/130   sockJsSession.setAcceptedProtocol(protocol); 
//  strIdxStart & strIdxEnd 
//  call to getClassFilter forces resolution 
//  Check that references survived prototype creation 
//  last comment not closed properly 
// ---------------------------------------------------------------------   HttpServletResponse properties  --------------------------------------------------------------------- 
//  SPR-16651 
//  Add attributes that may have been removed 
//  oh well, at least we tried... 
//  Note: when a new entry is added it is considered the MRU entry and inserted at the tail. 
//  If the exception is handled, return a cache miss 
//  request.setRequestURI("https://example.org/page.cache.html"); 
//  should not be a proxy
//  ----------------------------------------------------------------------------------------------- 
//  CGLIB subclass methods hide generic parameters; look at the original user class. 
//  map table. 
//  Fallback for URLs that are not valid URIs (should hardly ever happen). 
//  Local match found for explicitly specified local bean name. 
//  use as a unary operator 
//  SPR-12975 
//  Verify that the supplied argument is assignable to the method parameter. 
//  SPR-16521 
//  EhCache 2.5+: Reusing an existing CacheManager of the same name.   Basically the same code as in CacheManager.getInstance(String),   just storing whether we're dealing with an existing instance. 
//  this is fun... 
//  Copy the constant pool binary content. 
//  Unrelated, not to be considered as a factory method 
//  If we get here, we need to insist on precise argument matching... 
//  Check for existing error attribute first 
//  Read the table labels. 
//  Use Jackson builder in order to have JSR-310 and Joda-Time modules registered automatically 
//  If no target bean name specified, use filter name. 
//  Convert arguments if necessary and remap them for varargs if required 
//  Ignore LOOKUP_PATH attribute, use our own "fixed" UrlPathHelper with decoding off 
//  At this point, we need a collection copy in any case, even if just for finding out about element copies... 
//  do not lose precision - use BigDecimal's own conversion 
//  unary minus 
//  Non-zero lower bound implies a core-max size range... 
//  failed prior to fix for SPR-9414 
//  If dstType is a reference type of any array dimension. 
//  List<CharSequence> is not assignable from List<String> 
//  This method optimizes avoiding unnecessary creation of ClassReaders   as well as visiting over those readers. 
//  These test classes simulate a pattern of public/private classes seen in Spring Security 
//  So there is binding work to do...
//  Put the "opposite" opcode of baseOpcode. This can be done by flipping the least   significant bit for IFNULL and IFNONNULL, and similarly for IFEQ ... IF_ACMPEQ (with a 
//  Special case: getEngineByName returned null but engine is present...   Let's assume it failed to initialize (which ScriptEngineManager silently swallows).   If it happens to initialize fine now, alright, but we really expect an exception. 
//  -----------------------------------------------------------------------------------------------   Utility methods   ----------------------------------------------------------------------------------------------- 
//  No need to handle 'match start' checking as this captures everything   anyway and cannot be followed by anything else   assert next == null 
//  verify that we can call a method with args that are subtypes of the   target method arg types 
//  number of times to repeat 'count' evaluations (for averaging) 
//  Now try to recover the shared Connection and all consumers... 
//  create mocks 
//  Not set 
//  Publisher 
//  Fall back on bean name (or alias) match 
//  Evaluate conditions in order of precedence.   See https://tools.ietf.org/html/rfc7232#section-6 
//  SPR-9325, SPR-13860 
//  Register the ImportRegistry as a bean in order to support ImportAware @Configuration classes 
//  We have a given MessageSourceResolvable. 
//  OpLT   OpLE   true - null is < or <= something 
//  FormInserter is parameterized to ClientHttpRequest (for client-side use only) 
//  Let server pick its own random, available port. 
//  unadvised but can return this). May be required to expose the proxy. 
//  Try to obtain the FactoryBean's object type from this early stage of the instance. 
//  Dynamic matching failed.   Skip this interceptor and invoke the next in the chain. 
//  gh-23196 
//  Register a DisposableBean implementation that performs all destruction   work for the given bean: DestructionAwareBeanPostProcessors,   DisposableBean interface, custom destroy method. 
//  not completely accurate but good guess 
//  Set to null 
//  Should fail to get proxy as exposeProxy wasn't set to true 
//  TypedValue root = ctx.getRootObject();   supplied should override root on context 
//  Frame writing 
//  shouldn't happen - if it does, proceed with requestUri as-is 
//  Create JDBCConnectionSpec using current isolation level value and read-only flag. 
//  regular close call 
//  Shut down the invokers. 
//  no 
//  Private support methods 
//  sanity check 
//  empty 
//  Lifecycle implementation 
//  Expose helpers as request attributes, if any. 
//  JPA 2.1 method 
//  Can still mod second object 
//  EntityManagerHolder with an active transaction coming from JpaTransactionManager,   with no synchronized EntityManager having been requested by application code before.   Unbind in order to register a new unsynchronized EntityManager instead. 
//  of populating type descriptor cache 
//  static method, no args, void return 
//  unexpectedly ran out of data 
//  Try again in case of caching 
//  Second call should have been cached 
//  Check the same call will work again, but the context is empty 
//  -- tests relating to customizing property sources ------------------------------- 
//  Can't be shared: no type mismatch with a field 
//  Create child ApplicationContext for views. 
//  Trigger the NPE as originally reported in the bug 
//  T() can only take an identifier (possibly qualified), not a literal   message ought to say identifier rather than ID 
//  Compare weak/strong ETags as per https://tools.ietf.org/html/rfc7232#section-2.3 
//  SPR-16526 
//  As of 4.3, we're processing Errors thrown from handler methods as well,   making them available for @ExceptionHandler methods and other scenarios. 
// evaluates to false 
//  --- dotted property names 
//  Read the opens_index, opens_flags, opens_to_count and opens_to_index fields and visit them. 
//  referenced instruction, and to make methodVisitor visit the corresponding try catch blocks. 
//  No HTTP OK status, and no content-length header: give up 
//  Content phase 
//  At this point we don't need to differentiate between initial delay set or not anymore 
//  Allow for differentiating between the proxy and the raw Connection. 
//  Now union with all TestBean methods 
//  Should be automatically added as a listener
//  It is a candidate FactoryBean - go ahead with enhancement 
//  Let's try NIO file system providers via Paths.get(URI) 
//  Has this effectively been overridden before (e.g. via XML)?
//  Eagerly disconnect the Session here, to make release mode "on_close" work on JBoss. 
//  Implicit (no method) vs explicit HTTP method mappings 
//  Use hashCode of EntityManager proxy. 
//  Access through stored session reference, if any... 
//  Ensure it was an AssertionError that failed the test and not   something else like an error in the @Configuration class, etc. 
//  list of lists of reference types 
//  Repeated initialization with no user-customized MetadataSources -> clear it. 
//  Previously we setProxyTargetClass(true) in the constructor, but that has too   broad an impact. Instead we now override isInfrastructureClass to avoid proxying   aspects. I'm not entirely happy with that as there is no good reason not   to advise aspects, except that it causes advice invocation to go through a   proxy, and if the aspect implements e.g the Ordered interface it will be   proxied by that interface and fail at runtime as the advice method is not   defined on the interface. We could potentially relax the restriction about   not advising aspects in the future. 
//  we return null rather than throw an exception so that we behave well   in a chain-of-responsibility. 
//  See whether we can find an EntityManagerFactory with matching persistence unit name. 
//  handleNoMatch would have been invoked already 
//  No worries, let's continue with the reflection metadata we started with... 
//  -----------------------------------------------------------------------------------------------   Static helper methods to compute hash codes.   ----------------------------------------------------------------------------------------------- 
//  Test for MBean server equality. 
//  A straight MBean... Let's create a simple lazy-init CGLIB proxy for it. 
//  Change the opcode of the jump instruction, in order to be able to find it later in   ClassReader. These ASM specific opcodes are similar to jump instruction opcodes, except   that the 2 bytes offset is unsigned (and can therefore represent values from 0 to   65535, which is sufficient since the size of a method is limited to 65535 bytes). 
//  Transform if necessary and use the potentially transformed bytes. 
//  Force removal since setHeader checks for equality 
// 	@Disabled("useDefaultSuffixPattern property not supported") 
//  LiteralPathElement 
//  initialized when/if requested 
//  Add programmatically registered listeners, including ones coming 
//  Process Spring's beforeCompletion early, in order to avoid issues   with strict JTA implementations that issue warnings when doing JDBC   operations after transaction completion (e.g. Connection.getWarnings). 
//  no "(" and nothing following 
//  Completable 
//  Empty holder representing "not valid". 
//  interfaces_count is after the access_flags, this_class and super_class fields (2 bytes each). 
//  Just in case some code happens to call uncommon Commons Logging methods... 
//  Initialize message source for this context. 
/* 		 * See java.beans.IndexedPropertyDescriptor#equals(java.lang.Object)		  */
//  Implements character - int (ie. b - 1 = a) 
//  nested properties 
//  Confirms visibility of what is being called. 
//  a class path resource pattern 
//  Optimistic algorithm: instead of computing the byte length and then serializing the string   (which requires two loops), we assume the byte length is equal to char length (which is the   most frequent case), and we start serializing the string right away. During the   serialization, if we find that this assumption is wrong, we continue with the general method. 
//  attrFoo should be overridden in concrete subclass 
//  Message sending 
//  Ambiguous return types found: return null to indicate "not determinable".
//  Ask the subclass to create the View object. 
//  Ensure @ResponseBody-style handling for values collected from a reactive type   even if actual return type is ResponseEntity<Flux<T>> 
//  ignore, see SPR-12999 
//  intentionally omitted: attribute = "locations" (SPR-14069) 
//  SPR-12226 
//  Expose this tag's status object as PageContext attribute, 
//  Means extra call on advised 2 
//  OperatorPower 
//  verify the property keys have been evaluated as expressions 
//  same as the one above for local variables). 
//  On Java 8, the message starts with the class name: "java.lang.String cannot be cast..." 
//  3. Send message via broker channel 
//  Check if the Trigger is aware of an associated JobDetail. 
//  Visit the end of the method. 
//  No such bean 
//  Ignore: already handled in writeFrame... 
//  Simulate autowiring a configuration method 
//  enum_const_value 
//  Create a JndiObjectTargetSource that mirrors the JndiObjectFactoryBean's configuration. 
//  Check if the inspected method has the correct number of parameters. 
//  Make the root object the active context again for evaluating the parameter expressions 
//  Do automatic joining if required. Excludes toString, equals, hashCode calls. 
//  property access 
//  Cache the merged bean definition for the time being 
//  ConversionService 
//  Body not empty, back to 415.. 
//  Invalid case, but happens for includes on Jetty: silently adapt it. 
//  subroutineId and add its successors to the list of blocks to process (unless already done). 
//  rogue 'G' on the end 
//  no proxy creation in progress   abstain; can't return YES, since that will make pointcut with negation fail 
//  from ExtendedDefaultPropertiesFileDetectionTestPropertySourceTests.properties 
//  Flush byte array to servlet output stream. 
//  Error code that indicates successful shutdown 
//  Skip the name_index, descriptor_index and index fields (2 bytes each). 
//  Note: fields are ordered as in the method_info structure, and those related to attributes are   ordered as in Section 4.7 of the JVMS. 
//  gh-22705 
//  map2 should be null, there is no setter 
//  Now, verify what each client has.. 
//  SPR-10820: p2 should 'win' as it was registered last 
//  IMPORTANT: Do not pass full property name in here - property editors 
//  Handle getTargetConnection method: return underlying connection. 
//  Test removal 
//  Retrieval of bean names 
//  SPR-11025 
//  SPR-13545 
//  Use a local copy to protect against other threads writing 
//  SPR-16172 
//  Trigger afterCommit callbacks, with an exception thrown there 
//  Create the CacheAdvisor definition. 
//  Level 3-A 
//  Common media types are cached at the level of MimeTypeUtils 
//  WildcardPathElement 
//  property 
//  Only one thread so only one object can have been bound 
//  SPR-9653 
//  itself is not subject to auto-proxying! Only its target bean is. 
//  Exception -> Runtime -> NestedRuntime -> MyRuntimeException 
//  Do nothing 
//  SPR-13546 
//  no transactional support for invalidate 
//  class hierarchy mixed with @Transactional and @Order declarations 
//  Static factory methods and accessors 
//  Don't copy the attributes yet, instead store their location in the source class reader so   they can be copied later, in {@link #putMethodInfo}. Note that we skip the 6 header bytes   of the method_info JVMS structure. 
//  Name of schema for this context 
// ---------------------------------------------------------------------   Serialization support  --------------------------------------------------------------------- 
//  Only considered as equal when proxies are identical. 
//  gh-22703 
//  Extension receivers of extension methods must be included as they appear as normal method parameters in Java 
//  Send more data illegally 
//  Optimization: use charAt and regionMatches instead of endsWith and startsWith (SPR-11304) 
//  SPR-14877 
//  Read the model and create bean definitions based on its content 
// -------------------------------------------------------------------------   Convenience methods for storing individual objects  ------------------------------------------------------------------------- 
//  Filter will now remove non @Anno annotated methods 
//  A reference to the id of another bean in a parent context. 
//  should include the profile-annotated bean with active profiles set 
//  Check that toString doesn't cause a problem 
//  A plain value: convert it to an array with a single component. 
//  Check name with just dots replaced 
//  TODO Fails related to conversion service converting a String[] to satisfy Object...  		expression = parser.parseExpression("sixteen(stringArray)");  		assertCantCompile(expression);  		expression.getValue(tc);  		assertEquals("aaabbbccc", tc.s);  		assertCanCompile(expression);  		tc.reset();  		expression.getValue(tc);  		assertEquals("aaabbbccc", tc.s);  		tc.reset();
/* 	 * Return the isolation level.	 * <p>Must return one of the {@code ISOLATION_XXX} constants defined on	 * {@link TransactionDefinition this interface}. Those constants are designed	 * to match the values of the same constants on {@link java.sql.Connection}.	 * <p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or	 * {@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started	 * transactions. Consider switching the "validateExistingTransactions" flag to	 * "true" on your transaction manager if you'd like isolation level declarations	 * to get rejected when participating in an existing transaction with a different	 * isolation level.	 * <p>The default is {@link #ISOLATION_DEFAULT}. Note that a transaction manager	 * that does not support custom isolation levels will throw an exception when	 * given any other level than {@link #ISOLATION_DEFAULT}.	 * @return the isolation level	 * @see #ISOLATION_DEFAULT	 * @see org.springframework.transaction.support.AbstractPlatformTransactionManager#setValidateExistingTransaction	  */
//  Prepare target URL. 
//  In case user the forgot to call visitEnd(). 
//  Add rest of String, but not in case of empty input. 
//  Fallback option: JDK 9+ Lookup.defineClass API even if ClassLoader does not match 
//  gh-22702 
//  The following needs to use a lambda expression instead of a method reference   for compatibility with Hibernate ORM <5.2 where connection() is defined on   SessionImplementor itself instead of on SharedSessionContractImplementor...
//  Fallback: no BeanFactory set, or no type resolvable through it 
//  generic resolver that says it can be used for any type 
//  If we have relevant Constructor instance at hand, just call it   This skips "get constructors" machinery 
//  SPR-8455 
//  do nothing - already at the targetCapacity 
//  Try to load via the file system, fall back to SpringTemplateLoader   (for hot detection of template changes, if possible). 
//  Remove possible duplicates if we loaded default listeners. 
//  SPR-9655 
//  HttpMessageDecoder... 
//  Double slot primitives 
//  Note: 'map' values must be of type Integer, but the values in the map   returned by createMap() are of type java.util.List. Thus 1 cannot be   cast to a List. 
//  Configure the mocked BeanFactory to return the DependencyDescriptor for convenience and   to avoid using an ArgumentCaptor. 
// mock.setThrowable(new FileNotFoundException()); 
//  OpGT   OpGE   true - something is > or >= null 
//  Rely on default serialization, just initialize state after deserialization. 
//  Already removed: must have been a dependent bean from another phase 
//  Now build a new MultipartBodyBuilder, as BodyInserters.fromMultipartData would do... 
//  The num_parameters field uses 1 byte, and each element of the parameter_annotations array   uses 2 bytes for its num_annotations field. 
//  SPR-16177 
//  Fancy variant with dependency registration 
//  SPR-13416 
//  Avoid .then() which causes data buffers to be released 
//  Initialize other special beans in specific context subclasses. 
//  The tests are sorted in decreasing frequency order (based on frequencies observed on 
// ---------------------------------------------------------------------------------------   Convenience methods for receiving auto-converted messages  --------------------------------------------------------------------------------------- 
//  This is a methodreference invocation, to compare with functionreference 
//  ALSO CHECK CHAIN of SQLExceptions!?   also allow chain of translators? default if can't do specific?
//  /* + /hotel => /hotel   /*.* + /*.html => /*.html   However:   /usr + /user => /usr/user 
//  -----------------------------------------------------------------------------------------------   Methods related to subroutines   ----------------------------------------------------------------------------------------------- 
// ---------------------------------------------------------------------   Management of default editors  --------------------------------------------------------------------- 
//  OpLT   OpGT   false - null is not < or > null 
//  Standard delegation to the native factory, just post-processing EntityManager return values 
//  SPR-12198: p4 should 'win' as it was registered last 
//  HTML and/or JavaScript escape, if demanded. 
//  Now the expression has cached that throwException(int) is the right thing to call   Let's change 'bar' to be a PlaceOfBirth which indicates the cached reference is 
//  Don't let calling code try to dereference the   bean factory if the bean isn't a factory 
//  resolve with single arg 
//  a shared scoped proxy 
// -------------------------------------------------------------------------   Convenience finder methods for detached criteria  ------------------------------------------------------------------------- 
//  Execute requestDestroyed callback in different thread. 
//  SPR-13417 
//  This is identical to the requiredSingleResult implementation but differs in the   semantics of the incoming Collection (which we currently can't formally express) 
/*  name =  */
//  The Code attribute has 6 header bytes, plus 2, 2, 4 and 2 bytes respectively for max_stack,   max_locals, code_length and attributes_count, plus the bytecode and the exception table. 
//  We can not use the superclass method since it uses conversion to a File and   only a Path on the default file system can be converted to a File... 
//  = 3 invocations 
//  Trim leading and trailing whitespace. 
/*  (non-Javadoc)	 * @see org.springframework.beans.factory.BeanNameAware#setBeanName(java.lang.String)	  */
//  Level 3-B 
//  session gets created in order to register MessageListener... 
//  Check the media type for the resource 
//  WebSocket and sub-protocol handling 
//  2) Convert the annotation into AnnotationAttributes 
//  Equal values are equal 
//  The bytecode offset of the first explicit frame is not offset_delta + 1 but only   offset_delta. Setting the implicit frame offset to -1 allows us to use of the 
//  server 
//  we are using a nested path (see extendPageContext(..)), so... 
//  SPR-15946 
//  Special case: it returned "this". Note that we can't help   if the target sets a reference to itself in another returned object. 
//  Don't swallow, probably misconfiguration... 
//  ignore (see class-level doc) 
//  Create a shared aspect instance. 
//  Delay send since server processes concurrently   Ideally order should be preserved or receipts supported (simple broker) 
//  Visit the RuntimeInvisibleAnnotations attribute. 
//  Check it's a singleton 
//  ServletConfig gets precedence 
//  SPR-16178 
/*  Downstream write completion subscriber  */
//  mode="aspectj" 
//  Preferred constructors for default construction? 
//  Sanity check, this particular call has called the service 
//  Get the unmerged list of attributes for the target annotation. 
//  Host explicitly specified: only lookup possible. 
//  madeup does not exist as a property 
//  OperatorInstanceOf 
//  When entering a new scope there is a new base object which should be used   for '#this' references (or to act as a target for unqualified references).   This ArrayDeque captures those objects at each nested scope level.   For example:   #list1.?[#list2.contains(#this)]   On entering the selection we enter a new scope, and #this is now the   element from list1 
//  First try is the method in the target class. 
//  Thrown from the FactoryBean's getObjectType implementation. 
//  Pushes the abstract type on the output stack. 
// generated numbers: 
//  Subscriber<T> methods (we're the subscriber to the write source).. 
//  'simple' object 
//  should never happen... 
//  It's a literal value. 
/*  no user beans required for these tests  */
//  The JDK does not contain a default editor for char! 
//  although the root object is being set on the evaluation context, the value in the 'state' remains what it was when constructed 
//  if only one operand, then this is unary plus 
//  Component getters 
//  obsolete RFC 850 format 
//  this should match because of *.jsp 
//  should throw, bad (invalid-Exception-type) serviceLocatorException class supplied 
//  November 
//  Commit session or acknowledge message. 
//  Trigger post-initialization callback for all applicable beans... 
//  Destroy the corresponding DisposableBean instance. 
//  Shouldn't accept null target 
//  Now test replace 
//  NOPMD(UnusedFormalParameter) used for backward compatibility. 
//  Sybase: internal I/O error   Sybase: unexpected I/O error   DB2: communication failure 
//  Publisher implementation for result notifications... 
//  Array-based vars rely on the below order.. 
//  test## is required for @TestMethodOrder. 
//  Process re-execution outside of the synchronized block. 
//  Trigger commit here to let exceptions propagate to the caller. 
//  TypeDescriptor operandTypeDescriptor = op.getTypeDescriptor(); 
//  Do we want to register the connector with the MBean server?
//  inline map creation not supported at the moment   evaluate("#{'a':'y','b':'n','c':'y'}.![value=='y'?key:null].nonnull().sort()", "[a, c]", ArrayList.class); 
//  The thread-bound ConnectionHolder might not be available anymore,   since afterCompletion might get called from a different thread. 
//  then it could be a reference pointcut 
//  = 4 invocations on 1 and another one on 2 
//  CONNECT 
//  the MBean with the supplied object name does not exist... 
//  Even though this property accessor is added after the reflection one, it specifically   names the String class as the type it is interested in so is chosen in preference to 
// -------------------   SPR-3485 classes  ------------------- 
//  No FlushMode change needed... 
//  Visit the Code attribute. 
//  Postgres-style "??", "?|", "?&" operator should be skipped 
//  Handle aliasing... 
//  "touchy" should not be copied: it's not defined in ITestBean 
//  Shortcut: no searchable annotations to be found on plain Java classes and core Spring types... 
//  Choked on some character encoding...   Leave the decision up to the caller. 
/*  Extensions associated with the built-in message converters  */
//  Useful predefined abstract types (all the possible CONSTANT_KIND types). 
//  Only check if it gets past first hurdle. 
//  misleading null. 
//  check LocaleContext 
//  4:30 
//  Null replacement magic should work 
//  6 attribute header bytes, and 2 bytes for package_count. 
//  method reference 
//  SPR-8809 
//  Factory methods 
//  Cache the concatenation of child identifiers 
//  Nop2 didn't get invoked when the exception was thrown 
//  remove() 
//  Count all advice, including explicit registrations.. 
//  Stop the entire TimerManager, if necessary. 
// -------------------------------------------------------------------------   Lifecycle methods for starting and stopping the container  ------------------------------------------------------------------------- 
//  RabbitMQ-style broker convention for STOMP destinations 
//  SPR-15819 
//  should exclude the profile-annotated bean if active profiles remains unset 
//  BeanDefinitionRegistryPostProcessor hook apparently not supported...   Simply call processConfigurationClasses lazily at this point then. 
//  Ignore Kotlin metadata annotations since they contain   illegal HTML characters and fail the report generation 
//  Fall back to the plain original method in case of no resolvable match or a   negative match on a proxy class (which doesn't carry any annotations on its   redeclared methods). 
//  Assign 
/*  The counter property is purposefully not used in the aspect to avoid distraction	 * from the main bug -- merely needing a dependency on an advised bean	 * is sufficient to reproduce the bug.	  */
//  Autodetect in JNDI if applicable, and check UserTransaction/TransactionManager   object that implements TransactionSynchronizationRegistry otherwise. 
//  All cool 
//  Copy all attributes (emulating behavior of private FeatureDescriptor#addTable) 
//  assuming UTC instant a la "2007-12-03T10:15:30.00Z" 
//  Now clean up the database 
//  Ignore -> simply doesn't match. 
//  found in nested scope 
//  Use hashCode of Connection proxy. 
//  Shouldn't succeed in adding unnamed parameter 
//  Fetch cache region: If none with the given name exists, create one on the fly. 
//  The property name contains opening prefix(es)... 
//  advice1 was declared before advice2   so advice1 has lower precedence 
//  Use hashCode of EntityManagerFactory proxy. 
//  Now get attribute 
//  the cache uses a nested index (value is a map) to keep the top level cache relatively small in size 
//  No already registered method name, or more specific   method name specification now -> (re-)register method. 
//  Check annotations declared on factory method, if any. 
//  -----------------------------------------------------------------------------------------------   Constructors   ----------------------------------------------------------------------------------------------- 
//  This listener is mapped to a specific ObjectName. 
//  We need to remove introduction interfaces. 
//  reflective property accessor is the only one by default 
//  If this method_info must be copied from an existing one, the size computation is trivial. 
//  no escaping -> ctr name 
//  Restructure 
//  Read the 'requires_count' and 'requires' fields. 
//  We keep HandlerMappings in sorted order. 
//  Dynamically create the objects if the user has requested that optional behavior 
//  IMPORTANT: Do not pass full property name in here - property editors   must not kick in for map keys but rather only for map values. 
//  Check result state: It might indicate a Throwable to rethrow. 
//  internal helpers 
//  Handling the nested array case here.   If vararg is [[I then we want [I and not [I; 
//  mode="proxy" 
//  ContentNegotiatingResolver in the registry: elevate its precedence! 
//  Use Hibernate's own transaction timeout mechanism on Hibernate 3.1+   Applies to all statements, also to inserts, updates and deletes! 
//  Override thread context ClassLoader to work around naive Quartz ClassLoadHelper loading. 
//  The following declaration simply verifies that @Autowired on the constructor takes   precedence. 
//  Some parsers raise an exception 
//  default: same as non-Ordered 
//  Resource pattern matching available. 
//  We need to wrap the MetadataAwareAspectInstanceFactory with a decorator   so that it will only instantiate once. 
//  should not be called, since we override canRead()/canWrite() 
// TODO support multiple levels of includes 
//  When all nimbodes go down and one or few of them come up   Unfortunately there might not be an exact way to know which one contains the most updated blob, 
//  TODO: this assumes key is only from the one field   if not we need to have order of fields in PK 
//  the following code is duplicated in the constructor of MqttPublisher   we reproduce it here so we fail on the client side if SSL is misconfigured, rather than when the topology   is deployed to the cluster 
//  should remove the third blob, because the first has the reset timestamp 
//  Get rid of multiple '/' in url
//  Todo: Track file offsets instead of line number 
//  TODO support more configuration options, for now we're defaulting to the hbase-*.xml files found on the classpath 
// This is a bit ugly, but it works.  In order to maintain the same directory structure that existed before   we need to have storm conf, storm jar, and storm code in a shared directory, and we need to set the   permissions for that entire directory, but the tracking is on a per item basis, so we are going to end   up running the permission modification code once for each blob that is downloaded (3 times in this case).   Because the permission modification code runs in a separate process we are doing a global lock to avoid   any races between multiple versions running at the same time.  Ideally this would be on a per topology   basis, but that is a lot harder and the changes run fairly quickly so it should not be a big deal. 
// Could not find a "fully" compatible version.  Look to see if there is a possibly compatible version right below it 
// ResourceUtils.java is not a available on the classpath to let us parse out the resources we want. 
//  Files/move with non-empty directory doesn't work well on Windows   This is not atomic but it does work 
/*  Not thread safe. Have one instance per producer thread or synchronize externally  */
//  TODO substitution implementation is not exactly efficient or kind to memory... 
// TODO need a better way to do this 
//  TODO: Need to be able to set the tick tuple time to the message timeout, ideally without parameterization 
/*              * Connection is unavailable. We will drop pending messages and let at-least-once message replay kick in.             *             * Another option would be to buffer the messages in memory.  But this option has the risk of causing OOM errors,             * especially for topologies that disable message acking because we don't know whether the connection recovery will             * succeed  or not, and how long the recovery will take.              */
//  TODO: consider adding a shuffle grouping after the spout to avoid so much routing of the args/return-info all over the place   (at least until its possible to just pack bolt logic into the spout itself) 
//  This is a hack for non-ras scheduler topology and worker resources 
// TODO move this logic to the model class 
// For some reason on the new code if ackers is null we get 0??? 
// This is a bit of a hack.  If it is a list, then it is [component, stream]  we want to format this as component:stream 
// TODO: DRY this code up with what's in ChainedAggregatorImpl 
//  should we fail the tuple or kill the worker? 
// TODO streams should be uniquely identifiable 
// TODO I would love to standardize this... 
//  FIXME: This class can be moved to webapp once UI porting is done. 
//  This isn't strictly necessary, but it doesn't hurt and ensures that the machine stays up   to date even if callbacks don't all work exactly right 
//  To work around it we should get it an alternative (working) way. 
//  Is the topology ZooKeeper authentication configuration unset? 
//  read s1 last....  This should cause s2 to be evicted on next put 
//  TODO more collection content type checking 
//  FIXME: We're using default config since it cannot be serialized   We still needs to provide some options externally 
// TODO this can only ever be null if someone is doing something odd with mocking   We should really fix the mocking and remove this 
// TODO put in some better exception mapping...  TODO move populateContext to a filter... 
//  should we fail the batch or kill the worker? 
// Getting the exact response code is a bit more complex.  TODO should use a better client 
/*      * TODO: should worker even take the topologyId as input? this should be deducible from cluster state (by searching through assignments)     * what about if there's inconsistency in assignments? -> but nimbus should guarantee this consistency.     *     * @param conf           - Storm configuration     * @param context        -     * @param topologyId     - topology id     * @param assignmentId   - assignment id     * @param supervisorPort - parent supervisor thrift server port     * @param port           - port on which the worker runs     * @param workerId       - worker id      */
// This is a bit ugly, but it shows how this would happen in a worker so we will use the same APIs 
//  FIXME: stores map (topoConf), topologyContext and expose these to derived classes 
// Original implementation doesn't actually check if delete succeeded or not. 
//  it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor. 
// This is a bit ugly The JSON we are expecting should be in the form   {"component": {"resource": value, ...}, ...}   But because value is coming from JSON it is going to be a Number, and we want it to be a Double.   So the goal is to go through each entry and update it accordingly 
// We may (though unlikely) lose metering here if state transition is too frequent (less than a millisecond) 
//  do we want to throw an exception if path doesn't exist?? 
// TODO a better way to do this would be great. 
// TODO in the future this might be better in a common webapp location 
//  FIXME: it should be moved to storm-client when serialization-test.clj can be removed 
// TODO figure out how we want to deal with overrides. Users may want to add streams even when overriding other   properties. For now we just add them blindly which could lead to a potentially invalid topology. 
// More accurate that thread.sleep, but still not great 
//  todo, ignore the master batch coordinator ? 
// This test is rather ugly, but it is the only way to see if the error messages are working correctly. 
//  TODO: need to be able to replace existing fields with the function fields (like Cascading Fields.REPLACE) 
// TODO: wrap this to set the stream name 
// TODO: this isn't right... it's not in the map anymore 
// TODO: add a method for drpc stream, needs to know how to automatically do return results, etc   is it too expensive to do a batch per drpc request? 
// TODO: do the inner join incrementally, emitting the cross join with this tuple, against all other sides  TODO: only do cross join if at least one tuple in each side 
// TODO once everything is in java this should not be possible any more 
// heck for backward compatibility, we need to pass TOPOLOGY_AUTO_CREDENTIALS to hbase conf  the conf instance is instance of persistentMap so making a copy. 
// This is a hack to allow ZooKeeperMain to be called by this command. 
// Perhaps there is a better way to do this??? 
//  TODO: can optimize further by only querying backing map for keys not in the cache 
// TODO this is causing issues... 
/*  TODO: need to invoke a hook provided by the topology, giving it a chance to create user resources.         * this would be part of the initialization hook         * need to separate workertopologycontext into WorkerContext and WorkerUserContext.         * actually just do it via interfaces. just need to make sure to hide setResource from tasks          */
/*  Not implemented  */
//  TODO: What would be a good test to ensure that RankableObjectWithFields is at least somewhat defensively copied? 
//  TODO: in the future, want a way to include this logic in the spout itself,   or make it unnecessary by having storm include metadata about which grouping a tuple   came from 
//  TODO: does this work well on windows? 
//  FileContext supports atomic rename, whereas FileSystem doesn't 
// Not enough guaranteed use the age of the topology instead.  TODO need a good way to only do this once... 
//  Use parseWithException instead of parse so we can capture deserialization errors in the log.   They are likely to be bugs in the spout code. 
//  TODO: take away knowledge of storm's internals here 
// TODO we should handle '\n'. ref DelimitedRecordFormat 
/*  TODO: make sure test these two functions in manual tests  */
// TODO get this from type instead of hardcoding to Nimbus.  establish client-server transport via plugin 
// There is a bug in some versions that returns 0 for the uptime. 
//  need to set active false before calling onKill() - current implementation does not return. 
// this is kind of unnecessary for clojure 
//  TODO this class is reserved for supporting messages with different schemas.   current only one schema in the cache 
//  -- bad files dir config 
//  FIXME: we can filter by listKeys() with local blobstore when STORM-1986 is going to be resolved   as a workaround, we call getBlobMeta() for all keys 
// 1 min.  This really means something is wrong.  Even on a very slow node 
// TODO check for null grouping args 
// TODO perhaps we can adjust the frequency later... 
// re-establish connection to eventhub servers using the right offset  TBD: might be optimized with cache. 
// TODO Handle the case where there may be no schema 
// It seems safer not to follow symlinks, since we don't expect them here 
//  this is because json doesn't allow numbers as keys...   TODO: replace json with a better form of encoding 
//  Todo: optimize this computation... perhaps inner loop can be outside to avoid rescanning tuples 
// Likely it is because of a bug, so try to get it another way 
//  while disabling we retain the sampling pct. 
//  hearbeat upon it 
//  REQUESTED_MEMONHEAP 
//  test environment variable substitution 
//  ASSIGNMENTS 
// Verify that all messages are emitted, ack all the messages 
//  EXECUTION_COMMAND 
//  boolean to track deactivated state 
/*              * track punctuation in non-batch mode so that the             * punctuation is acked after all the processors have emitted the punctuation downstream.              */
//  local executors and localTaskIds running in this worker 
//  only emit if we have declared fields. 
//  all types of files included 
// We want to capture the full time range, so the target size is as   if we had one bucket less, then we do 
// use batch size that matches the default credit size 
//  use the local setting for the login config rather than the topology's 
//  Get the nimbodes with the latest version 
//  destination taskId 
//  component 
// Fail the last emitted tuple and verify that the spout won't retry it because it's above the emit limit. 
//  If we generate a null response, then authentication has completed   (if not, warn), and return without sending a response back to the   server. 
// supervisor assignment id/supervisor id 
//  the WindowManager scan loop early. 
//  failed to send the JMS message, fail the tuple fast
// Set the first assignment 
// com.mysql.jdbc.jdbc2.optional.MysqlDataSource  jdbc:mysql://localhost/test  root 
/*                                                *  Update the count in the state. Here the first argument 0L is the initial value for the                                               *  count and                                               *  the second argument is a function that increments the count for each value received.                                                */
//  test write 
//  KEY 
//  TOPOLOGY_ID 
// Start emitting right now 
// format of date in worker logs 
/*  Map  */
//  use different blobstore dir so it doesn't conflict with other test 
//  timestamp either in milliseconds or seconds at which this metric is occurred. 
//  NO-OP 
// Update the current count for this object 
//  Ranked fourth since rack-3 has alot of memory but not cpu 
/*      * Each ControlMessage is encoded as:     *  code (<0) ... short(2)     * Each TaskMessage is encoded as:     *  task (>=0) ... short(2)     *  len ... int(4)     *  payload ... byte[]     *      */
//  This call returns immediately 
//  For testing 
//  Test2: test when no more workers are available due to topology worker max heap size limit but there is memory is still available   wordSpout2 is going to contain 5 executors that needs scheduling. Each of those executors has a memory requirement of 128.0 MB   The cluster contains 4 free WorkerSlots. For this topolology each worker is limited to a max heap size of 128.0   Thus, one executor not going to be able to get scheduled thus failing the scheduling of this topology and no executors of this 
//  set clean time really high so doesn't kick in 
// Set it for nimbus only 
//  1s   no lag 
//  creates array[largestId+1] filled with nulls 
//         builder.setStateSpout("stateSpout", mock(IRichStateSpout.class), 0);      } 
//  close the input stream 
//  Dependency uploading only makes sense for distributed mode 
//  read 2nd line and ACK 
//  USED_CPU 
//  2) If no failed tuples to be retried, then send tuples from hdfs 
//  it happens when part is just '*' rather than denoting some directory 
// Next verify that the blob store is correct before we start it up. 
//  The connection is ready once the channel is active.   See:   - http://netty.io/wiki/new-and-noteworthy-in-4.0.html#wiki-h4-19 
//  test for keylist to download 
//  tuples should be available in store before they are added to window manager 
//  memory required by topo-t0   memory required by topo-t1 
//  This is a DSL (YAML, etc.) topology... 
//  check for required fields   check for sub-struct validity 
//  periodically calls refreshLoad in 1 sec to simulate worker load update timer 
//  [remoteTaskId] -> JCQueue. Some entries maybe null (if no emits to those tasksIds from this worker)
//  Encoders 
//  -- commit frequency - count 
// check if iterable 
//  set acl to below so that it can be shared by other users as well, but allows only read 
// Emit any remaining messages 
// If AutoHDFS is specified, do not attempt to login using keytabs, only kept for backward compatibility. 
//  ======== Ack ======= 
//  task ids should be pulled first 
//  referenced from a metric. 
//  PULSE 
//  add reference to one and then remove reference again so it has newer timestamp 
//  writes multiple metric values into the database as a batch operation.  The tree map keeps the keys sorted 
//  Get first and last block times for multiple runs and strategies 
// The worker is up and running check for profiling requests 
//  if the other config does not have it set. 
//  MEM_OFF_HEAP 
//  CAPACITY 
//  new line is at beginning of each line (instead of end) for better recovery from 
//  Exceptions are captured and thrown at the end of the batch by the executor 
//  This thread will send out messages destined for remote tasks (on other workers) 
// do another conversion (lets just make this all common) 
//  Store the time at which the query started executing. The SQL   standard says that functions such as CURRENT_TIMESTAMP return the   same value throughout the query. 
//  Maintain backward compatibility for 0.10 
//  checkpoint the state every 5 seconds 
// We cannot launch the container yet the resources may still be updating 
// Use a bootstrap tuple to wait for topology to be running 
//  AZE 
// Spout - 500 MB, 50% CPU, 0 GPU  bolt-1 - 500 MB, 50% CPU, 0 GPU  bolt-3 500 MB, 50% cpu, 2 GPU  Total 1500 MB, 150% CPU, 2 GPU -> this node has 0 MB, 0% CPU, 0 GPU left 
/*                         This case will arise in case of non-sequential offset being processed.                        So, if the topic doesn't contain offset = nextCommitOffset (possible                        if the topic is compacted or deleted), the consumer should jump to                        the next logical point in the topic. Next logical offset should be the                        first element after nextCommitOffset in the ascending ordered emitted set.                      */
// A topology can set resources in terms of CPU and Memory for each component 
//  add with past ts 
//  When moving to pacemaker workerbeats can be leaked too... 
//  5 seconds 
//  race condition with another thread, and we lost. try again 
// The producers are shut down first, so keep going until the queue is empty. 
//  we don't allow any cluster wide configuration 
//  evicted metadata needs to be stored immediately.  Metadata lookups count on it being in the cache 
//  will have the correct settings that cannot be overriden by the submitter. 
//  A map describing which topologies are using which slots on this node.  The format of the map is the following: 
//  track how many times each supervisor slot has been listed as bad 
//  when they are successfully processed. 
// all sent events are stored in pending 
//  topo2 has 4 large tasks 
// Ignore any exceptions we might be doing a test for authentication 
// First failure is the initial delay, so not interesting 
/*      * Bolt-specific configuration for windowed bolts to specify the window length in time duration.      */
//  RESOURCES_MAP 
//  contains one Tuple per Stream being joined   refs to fields that will be part of output fields 
// remote subject 
/*          *  By default parser uses [ ] for quoting identifiers. Switching to DQID (double quoted identifiers)         *  is needed for array and map access (m['x'] = 1 or arr[2] = 10 etc) to work.          */
// The second tuple should NOT be ack'd because the batch should be cleared and this will be
// We need to adjust the throughput accordingly (so that it stays the same in aggregate) 
/*      * test scheduling does not cause negative resources      */
//  Return now *WITHOUT* sending upstream here, since client   not authorized. 
//  reader 
//  Ranked first since rack-0 has the most balanced set of resources 
//  Configs 
// Waiting to be returned 
//  validate path defined 
//  Blostore launch command with topology blobstore map   Here we are giving it a local name so that we can read from the file   bin/storm jar examples/storm-starter/storm-starter-topologies-0.11.0-SNAPSHOT.jar   org.apache.storm.starter.BlobStoreAPIWordCountTopology bl -c 
//  for some odd reason they are leaked.
// get topology constraints 
// Ensure the second file has a later modified timestamp, as the spout should pick the first file first. 
//  launch heartbeat threads immediately so that slow-loading tasks don't cause the worker to timeout 
//  Tuple contains String Object in JSON format 
/*      * returns list of Tuple3 (key, val from table, val from row)      */
// bolt-3 - 500 MB, 50% CPU, 2 GPU  Total 500 MB, 50% CPU, 2 - GPU -> this node has 1000 MB, 100% cpu, 0 GPU left 
// The priority of a topology describes the importance of the topology in decreasing importance   starting from 0 (i.e. 0 is the highest priority and the priority importance decreases as the priority number increases).  Recommended range of 0-29 but no hard limit set.   If there are not enough resources in a cluster the priority in combination with how far over a guarantees 
// The second tuple is used to wait for the spout to rotate its pending map 
//  StatefulBoltExecutor does the actual ack when the state is saved. 
//  unknown version should be treated as "current version", which supports RPC heartbeat 
// There are a few possible files that we would want to clean up  baseDir + "/" + "_tmp_" + baseName  baseDir + "/" + "_tmp_" + baseName + ".current"  baseDir + "/" + baseName.<VERSION>  baseDir + "/" + baseName.current  baseDir + "/" + baseName.version  In general we always want to delete the _tmp_ files if they are there. 
// Check for : in case someone called their user "User Name"  This line contains the user name for the pid we're looking up  Example line: "User Name:    exampleDomain\exampleUser" 
//  need to reverse the order of elements in PQ to delete files from oldest to newest
// Ignored the file did not match
// cleanup internal assignments 
//  JMS options 
//  has been acked 
// check if exec satisfy spread 
// if no event sent, no checkpoint shall be created 
//  dynamic fields 
//  wait for more ACKs before proceeding 
// get query filter 
//  allocate another array to be switched 
// JUMP 
// verify that Offset 10 was last committed offset, since this is the offset the spout should resume at 
//   "modprinc -maxlife 3mins <principal>" in kadmin. 
//  acquire lock on file1 
//  now, selecting from the full set should cause the fourth task to be chosen. 
//  NODE 
//  PREV_STATUS 
//  configs 
// The new partition should be discovered and the message should be emitted
// error message returned is something went wrong
//  The failed executions should not cause rotations and any new files 
//  Producers 
//  only log/set when there's been a change to the assignment 
//  SingleRel 
//  only if some data has arrived on each input stream 
//  if an ack is for a message that failed once at least and was re-emitted then the record itself will be in   failedAndFetchedRecords. We use that to   determine if the FailedMessageRetryHandler needs to be told about it and then remove the record itself to 
//  metric name 
// bolt-1 - 500 MB, 50% CPU, 0 GPU  bolt-2 - 500 MB, 50% CPU, 1 GPU  bolt-2 - 500 MB, 50% CPU, 1 GPU  Total 1500 MB, 150% CPU, 2 GPU -> this node has 0 MB, 0% CPU, 0 GPU left 
//  COMPONENT_EXECUTORS 
//  The manually set STORM_WORKER_CGROUP_CPU_LIMIT config on supervisor will overwrite resources assigned by 
//  When this master is not leader and get heartbeats report from supervisor/node, just ignore it. 
//  try locking another file2 at the same time 
// Each time we try to schedule a new component simulate taking 1 second longer 
// Now we need to build the array 
// File 1 should be moved to archive
// 1) create a couple files to consume 
//  REQUESTED_REGULAR_OFF_HEAP_MEMORY 
//  Current state 
//  if # of workers requested is less than we took   then we know some workers we track died, since we have more workers than we are supposed to have 
// returns void if the event should continue, false if the event should not be done 
// user jerry submits another topology into a full cluster 
//  Doing nothing (probably due to an oom issue) and hoping Utils.handleUncaughtException will handle it 
//  should remain unchanged @ 2 
// Just to be sure 
//  LAUNCH_TIME_SECS 
//  there won't be a BatchInfo for the success stream 
//  Strategy to determine the fetch offset of the first realized by the spout upon activation 
// start accepting requests 
//  This could fail if a blob gets deleted by mistake.  Don't crash nimbus.
//  STATUS 
//  Create a default pipeline implementation. 
//  public Object execute(Context) 
// Scheduling changed after we killed all of the processes 
//  this finds all active topologies blob keys from all local topology blob keys 
// Sasl transport 
// For cgroups no limit is max long. 
// Not available 
//  scheduled 
//  config main.methods
// if any error/exception thrown, fetch it from zookeeper 
//  initial state 
//  error/exception thrown, just skip 
//  METRIC_NAME 
// Verify the signature... 
// Empty 
//  set really small so will do cleanup 
//  Look for deleted log timeouts 
//  [ authz, authn, password ] 
//  ASSIGNED_REGULAR_ON_HEAP_MEMORY 
//  But that is only if there is a bug in one of the password providers.
//  NUM_USED_WORKERS 
//  bolt3 should also receive from checkpoint streams of bolt1, bolt2 
// It already points where we want it to 
//  to really make this work well. 
// Mapping of key->upstreamBolt->count 
//  Equivalent create command on command line 
// topoConf.put(Config.TOPOLOGY_STATE_PROVIDER_CONFIG, "{\"keyClass\":\"String\"}"); 
//  1) If there are any abandoned files, pick oldest one 
// assigning internally 
// topology priority 
//  TOTAL_SHARED_OFF_HEAP 
//  retry till at least 1 element is drained 
//  schedule mid block (10% - 90%) 
//  key fields 
// NO OP 
// request from authorized hosts and group should be allowed. 
// Now we need to free up some resources... 
//  All internal state except for the current buckets are 
// update the isLeader field for each nimbus summary 
// has the streamid/outputFields of the node it's doing the partitioning on 
//  https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.5 
//  let's checkpoint so that we can get the last checkpoint when restarting. 
// allow requesting slots number bigger than available slots 
//  activation expired list should contain even the ones expired due to EXPIRE_EVENTS_THRESHOLD 
//  Not sure what could cause this.
//  SPECIFIC 
//  flag indicating HiveWriter was closed 
//  a stream of (number, cube) pairs 
//  default 128 K 
//  run default scheduler on non-isolated topologies 
//  baseDir/supervisor/usercache/user1 
//  list all daemon logs 
//  we already checked this 
//  add any autocredential expiry metrics from the worker 
//  this ensures that list of values is always written the same way, regardless   of whether it's a java collection or one of clojure's persistent collections    (which have different serializers)   Doing this lets us deserialize as ArrayList and avoid writing the class here 
//  1) create couple of input files to read 
// We follow the model of service loaders (Even though it is not a service). 
//  should be at 6   double ack on same msg   should still be at 6 
//  do not process events beyond current ts 
// generate some supervisors that are depleted of one resource 
//  2) run spout 
//  Await all results 
//  worker slot which was never back to normal in tolerance period will be removed from cache 
//  ATTENTION: whb can be null
// Waiting for this also ensures that the first tuple gets failed if reset-timeout doesn't work 
//  propagate interrupt 
//  save the metadata for all types of strings it matches 
// populate node to component Assignments 
//  for serialization 
//  no wildcard, directory 
/*      * Just output the word value with a count of 1.      */
//  send a watermark event, which should trigger three windows. 
//  Tests for case when subject == null (security turned off) and 
//  Both things are not expected and should not happen.
// thenReturn always returns the same object, which is already consumed by the time User3 tries to getBlob! 
//  process all metadata 
//  Update the key.current symlink. First create tmp symlink and do 
// arbitrary message to be returned when scheduling is done 
//  If resource is also present in resources map will overwrite the above 
// heartbeats "stats" 
//  can be 'local' or 'shuffle' 
// request to impersonate users from unauthroized groups should be rejected.
// Lets reread the children in STORMS as the source of truth and see if a new one was created in the background 
/*  Naive implementation, but it might be good enough  */
// This is a special case where the jar was not uploaded so we will not download it (it is already on the classpath) 
//  DEPENDENCY_ARTIFACTS 
/*                 * update the word counts in the state.                * Here the first argument 0L is the initial value for the state                * and the second argument is a function that adds the count to the current value in the state.                 */
// Parallelism is same 
// No need to search more it is not going to help.
//  Would only happen at 2 PB so we are OK for now 
//  Test for replication. 
//  DIRECT 
//  -- lock dir config 
// Once every UPDATE_RATE_PERIOD_NS 
// Kill the container and restart it 
// avoid system dependent things 
// For this part of the test we interleve the differnt rotation types. 
//  guarantees a list of unused string Ids exists.  Once the list is empty, creates a new list 
//  reached EOF, didnt read anything 
//  Set the shard iterator for last fetched sequence number to start from correct position in shard 
/*          * Don't wait for Timetrigger to fire since this could lead to timing issues in unit tests.         * Set it to a large value and trigger manually.          */
//  bolt that subscribes to the intermediate bolt, and publishes to a JMS Topic 
// Just go on and try to delte the others 
/*  tuple payload serializer is specified via configuration  */
//  also called from processLogConfigChange 
//  load the first part of entries 
//  If future got interrupted exception, we want to interrupt parent thread itself. 
// Ignore changes to scheduling while downloading the topology blobs   We don't support canceling the download through the future yet,   because pending blobs may be shared by multiple workers and cancel it   may lead to race condition   To keep everything in sync, just wait for all workers 
//  DOUBLE_ARG 
// Node ID and supervisor ID are the same. 
//  3) read 6th line and see if another log entry was made 
//  5) read initial lines in file, then check if lock exists 
// Now lets get the creds for the topos so we can verify those as well. 
//  used to recognize the pattern of active log files, we may remove the "current" from this list 
//  baseDir/supervisor/usercache/user1/filecache/archives 
/*  * This class consists exclusively of static factory main.methods that create instances that are essential to work with the *  Jpmml library.  */
//  11 seconds passed by, not timing out 
//  end executor summary 
//  Test whether the integer is a power of 2. 
// Release things that don't need to wait for us to finish downloading. 
//  RocksDB should insert in sorted key order 
//  Updating file few times every 5 seconds 
// Dropping the parallelism of the bolts to 3 instead of 11 so we can find a solution in a reasonable amount of work when backtracking. 
// Emit and ack the rest 
//  Configs for memory enforcement done by the supervisor (not cgroups directly) 
//  ICredentialsRenewer 
//  Only need to keep track of failed tuples if commits to Kafka are controlled by   tuple acks, which happens only for at-least-once processing semantics 
// TODO: file rotation 
// Copy it in case we want to modify it 
//  this is to read default value for other configurations 
//  This should trigger the scan to find   the next aligned window end ts, but not produce any activations 
//  ARGS_LIST 
//  consume both files 
//  JMS Topic spout 
// set up nimbus-info to zk 
// What we want... 
//  Gets Nimbus Subject with NimbusPrincipal set on it 
//  include partition id in the file name so that index for different partitions are independent. 
//  go with known best input 
// Too fast not reported 
//  if a record is returned put the sequence number in the emittedPerShard to tie back with ack or fail 
//  1 for point1, 4 for point2 
//  Null: log any unhandled errors to stderr. 
//  TARGET_LOG_LEVEL 
// Creates a MongoClient described by a URI. 
// Empty (Still 500) 
// 1) Retire writers 
//  IPrincipalToLocal  
//  SentenceSpout --> MyBolt 
//  if the Resource Aware Scheduler is used, 
//  since user derek has exceeded his resource guarantee while user jerry has not topo-5 or topo-4 could be evicted because they have the same priority 
// class Offset 
// The connection is not sent unless a response is requested 
//  Now that the root is fine we can start to look at the other paths under it. 
//  Convenience data structure to speedup lookups 
//  Returns the recorded throughput since the last call to getCurrentThroughput()       or since this meter was instantiated if being called for fisrt time. 
// NOOP  We could add in configs through the web.xml if we wanted something stand alone here... 
//  Storm 
//  offset where processing will resume upon spout restart 
//  File offset and byte offset should always be zero when searching multiple workers (multiple ports). 
//  1 grab lock 
// Gets a collection. 
// Blobs are not supported in local mode.  Return nothing 
// Filtered negative value 
// NOOP, we don't actually want to change log levels for tests 
//  transfer encoding should be set as jersey sets it on by default. 
//  REQUESTED_SHARED_ON_HEAP_MEMORY 
//  agg spout stats 
//  Keep this constructor for backward compatibility 
// NOOP on purpose 
//  3) deleting closed file  - should return true 
//  stream name is specified 
//  validate 4 metrics (aggregations) found for m4 for all agglevels when searching by port 
// assume it is a topology id 
//  With no principals in the subject ACL should always be set to WORLD_EVERYTHING 
//  ERROR_TIME_SECS 
//  it shouldn't be happen
//  TOPO_IDS 
// Generously adapted from:  https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization   /AvroSerializer.scala  Which has as an ASL2.0 license 
//  just ignore the exception 
//  Receives msgs from remote workers and feeds them to local executors. If any receiving local executor is under Back Pressure, 
//  to avoid reordering of emits, stop at first failure 
//  If we didn't take GPUs into account everything would fit under a single slot   But because there is only 1 GPU per node, and each of the 2 spouts needs a GPU   It has to be scheduled on at least 2 nodes, and hence 2 slots.   Because of this all of the bolts will be scheduled on a single slot with one of   the spouts and the other spout is on its own slot.  So everything that can be shared is   shared. 
//         producerFwdConsumer();      // -- measurement 5 
//  we try uploading second one and it should be failed throwing RuntimeException 
// start the thread pool 
// The spout must be able to reemit all retriable tuples, even if the maxPollRecords is set to a low value compared to maxUncommittedOffsets. 
//  {stream id -> metric -> value}, note that sid->out-stats may contain both long and double values 
// All the events should be expired when the next watermark is received 
//  Test for subject with no principals and acls set to DEFAULT 
//  Copy the 2nd half of the buffer to the first half. 
// Remove something randomly... 
// We found the topology, lets get the conf 
//  since we made sys components visible, the component map has all system components 
// noop 
/*      * Computes tumbling window average      */
//  check lock file contents 
//  QueryPlanner on Streams mode configures the topology with compiled classes,   so we need to add new classes into topology jar   Topology will be serialized and sent to Nimbus, and deserialized and executed in workers. 
// All done we can launch the worker now 
// login and also update the subject field of this instance to 
//  map from stream name to batch id 
//  Create symbolic link relative to tar parent dir 
// Set the metrics sample rate to 1 to force update the executor stats every time something happens  This is necessary because getAllTimeEmittedCount relies on the executor emit stats to be accurate 
// check if node is alive 
// Even if the topology is not valid we still need to remap it all 
//  ASSIGNED_ON_HEAP_MEMORY 
// Translating the name (this call) happens in a different callback from validating   the user name and password. This has to be stateless though, so we cannot save   the password provider away to be sure we got the same one that validated the password.   If the password providers are written correctly this should never happen,   because if they cannot read the name they would return a null.   But on the off chance that something goes wrong with the translation because of a mismatch   we try to skip the bad one. 
// Now rebalance and add a new partition 
// shutdown server process since we could not handle Thrift requests any more 
//  when worker bootup, worker will start to setup initial connections to   other workers. When all connection is ready, we will count down this latch   and spout and bolt will be activated, assuming the topology is not deactivated. 
//  json parsing fail -> error received
//  MEMORY_USAGE 
//  object handling interaction with kinesis 
//  spout stats 
//  Spout implementation 
//  ======== emit  ========= 
//  BOLT_OBJECT 
//  Use custom class loader set in testing environment 
//  topo1 has one single huge task that can not be handled by the small-super
// user derek submits another topology into a full cluster  topo6 should not be able to scheduled initially, but since topo6 has higher priority than topo5  topo5 will be evicted so that topo6 can be scheduled 
//  Throws IOExceptions for 3rd & 4th call to next(), succeeds on 5th, thereafter
//  remove reverse lookup from map 
// Now rebalance 
//  scans the database to look for a metadata string and returns the metadata info 
//  NUM_TASKS 
// deprecated in favor of non-threaded RotatingMap 
//  we trust that the file exists 
// this test works because mocking a spout splits up the tuples evenly among the tasks 
//  Mapping: from storm tuple -> rocketmq Message 
//  USED_MEM 
//  =====================================================================================   key transformers   ===================================================================================== 
//   If any events are scheduled, sleep until   event generation. If any recurring events   are scheduled then we will always go   through this branch, sleeping only the   exact necessary amount of time. We give   an upper bound, e.g. 1000 millis, to the   sleeping time, to limit the response time   for detecting any new event within 1 secs. 
// We don't want to override the client if there is a thrift server up and running, or we would not test any   Of the actual thrift code 
//  each drpc request is always a single attempt 
//  add to the callers cache.  We can't add it to the stringMetadataCache, since that could cause an eviction   database write, which we want to only occur from the inserting DB thread.
// This partition is new, and should start at the committed offset 
//  assuming sideFields are preserving its order 
// Blocking call 
//  above gives an extra empty string at the end. below   removes that
// remote address 
//  So far it matches.  Keep going... 
// So if we fail we are forced to try again 
//  attempt to find the string in the database 
//  Setup a test message 
// Prior to the org.apache change 
//  delete one worker of r000s000 (failed) from topo1 assignment to enable actual schedule for testing 
//  actual ret is Map<String, Map<String, Long/Double>> 
//  time to sleep between retries in milliseconds 
// Ranked fifth since rack-2 has not cpu resources 
//  time of last flush on this writer 
// This is an attempt to give all of the streams an equal opportunity to emit something. 
//  this is the end key for whole scan 
//  Transfers messages destined to other workers 
//  Make sure that we have received at least an integer (length) 
//  NAME 
//  test write again 
// Will be closed automatically when shutting down the DFS cluster 
//  should remove key1 
//  if Batch spout then id contains txId 
//  Called with a bad port (not in the config) No searching should be done. 
//  for partitionpersist 
// The dir is empty, so try to delete it, may fail, but that is OK
//  Empty class 
//  seems this can fail by returning false or throwing exception   convert false ret value to exception 
//  found the next offset to commit 
// This is only used for logging/metrics. Don't crash the process over it.
//  counter for spout wait strategy   counter for back pressure wait strategy 
// Now lets create a token and verify that we can connect... 
//  TODO log 
// this validates the structure of the topology 
//  note that port1Dir is active worker containing active logs 
//  we may output many tuples for a given input tuple 
//  Now do multiple 
/*                      * If the user wants to explicitly set an auto offset reset policy, we should respect it, but when the spout is                     * configured for at-least-once processing we should default to seeking to the earliest offset in case there's an offset                     * out of range error, rather than seeking to the latest (Kafka's default). This type of error will typically happen                     * when the consumer requests an offset that was deleted.                      */
//  hash 
//  Bookkeeping 
//  Instances of this type are sent from NettyWorker to upstream WorkerTransfer to indicate BackPressure situation 
//  assumption: there're no put and delete for same target in parameter list 
// by default no need to do this as a different user 
//  set the default heap memory size for supervisor-test 
//  COMMON 
// This is the first time so initialize the resources. 
// We need to do enforcement on a topology level, not a single worker level...   Because in for cgroups each page in shared memory goes to the worker that touched it   first. We may need to make this more plugable in the future and let the resource   isolation manager tell us what to do 
/*  headers  */
// Update to set the second assignment 
//  create reader and do some checks 
//  PRINCIPAL 
//  Non-static impl main.methods exist for mocking purposes.
// topo-2 evicted since user bobby don't have any resource guarantees and topo-2 is the next lowest priority for user bobby 
//  ==================   Evaluator   ================== 
//  REPLICATION_COUNT 
// 3 delete file and retry creation 
//  given/when 
//  If the latch is not started yet, start it 
//  Offsets emitted are 0,1,2,3,4,<void>,8,9 
//  but topo-4 was submitted earlier thus we choose that one to evict (somewhat arbitrary) 
/* DON'T include sys */
//  storm topology name 
//  defaults to INFO level when the logger isn't found previously 
//  no specific reason to mock... this is one of easiest ways to make dummy instance 
//  [[remoteTaskId] -> true/false : indicates if remote task is under BP. 
// use the default server port. 
// play and ack 1 tuple 
//  emit the averages downstream 
// for reporting errors
//  common aggregate 
//  Bind and start to accept incoming connections. 
//  package access for unit test 
//  This is a test where we are configured to point right at a single artifact 
//  required   required   required   required   required   required   required   required   required 
//  assume filter choices have been made and since no selection was made, all levels are valid 
// open Sasl transport with the login credential 
//  3 let go first lock 
// 10 min values 
//  validate search by port 
// merge with existing assignments 
//  initialize state for batch 
// Offset 0 to maxUncommittedOffsets - 2 are pending, maxUncommittedOffsets - 1 is failed but not retriable 
// null isTimedOut means worker never reported any heartbeat 
//  rw-r--r-- 
// One time scheduling. 
//  Regardless of TICKET_RENEW_WINDOW setting above and the ticket expiry time,   thread will not sleep between refresh attempts any less than 1 minute (60*1000 milliseconds = 1 minute). 
// and to wait for the message to get through to the spout (acks use the same path as timeout resets) 
//  TODO add metrics
// subprocesses must send their pid first thing 
//  null for __system bolt 
//  assume that Get doesn't have any families defined. this is for not digging deeply...
// The best way to force backtracking is to change the heuristic so the components are reversed, so it is hard   to find an answer. 
// in local mode there is no jar 
//  Extract spout resource info 
//  Class path entries that are neither directories nor archives (.zip or JAR files)   nor the asterisk (*) wildcard character are ignored.
//  TOPOLOGY_VERSION 
//  Convert sources to a JSON serializable format 
//  CPU_GUARANTEE 
//  Toplogy:  WorGenSpout -> FieldsGrouping -> CountBolt 
//  Be careful about adding additional tests as the dfscluster will be shared 
//  1) Start metastore 
// get transaction id  if it already exists and attempt id is greater than the attempt there 
//  TYPE 
// Set up committed so it looks like some messages have been committed on each partition 
//  should not be returned since this executor is not part of the topology's assignment
//  required   required   required   required   required   required   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional 
// JPROFILE START 
// 1) Find retirement candidates 
//  Committed offset, i.e. the offset where processing will resume upon spout restart. Initially it is set to fetchOffset. 
//  allow freq_sec to expire 
//  schedule topo2 
//  If FlatMapFunction is aware of prepare, let it handle preparation 
//  Advance time and then trigger call to kafka consumer commit 
// Verify that the tuple is not emitted again 
//  use this instead of storm's built in one so that we can specify a singleemitbatchtopartition   without knowledge of storm's internals 
//  2 -  Setup HFS Bolt   -------- 
//  we wait for 3 seconds 
//  put global stream id for spouts 
//  by using a monotonically increasing attempt id, downstream tasks   can be memory efficient by clearing out state for old attempts   as soon as they see a higher attempt id for a transaction 
//  how to partition for second stage of aggregation 
//  required   optional   optional   optional   optional 
//  Try the loader plugin, if configured 
//  bail out 
// The user is not set so lets see what the request context is. 
//  i being the position in the fields of this seq, the remainder of the seq is the size 
// not_jump (closed in strict mode) 
/*      * Asserts that commitSync has been called once,     * that there are only commits on one topic,     * and that the committed offset covers messageCount messages      */
// Allow poll if the partition is not at the maxUncommittedOffsets limit 
// When is this ever null?
//  read error and input streams as this would free up the buffers 
// Test for replication with NIMBUS as user 
// 3 
/*      The below field declarations are also used in common.clj to define the event logger output fields       */
//  RESULT 
//  IAutoCredentials 
//  topology.getbolt (AKA sys tasks most specifically __acker tasks) 
//  WINDOW_TO_TRANSFERRED 
// There is at most one schedule per message id 
// Make sure that even though nextTuple() doesn't receive valid data,  the offset will be checkpointed after checkpointInterval seconds. 
//  retrieve any existing aggregation matching this one and update the values 
// private constructor 
//  taskIds first 
//  keeps track of in flight tuples) 
// logger.info("emit for partition " + partition.getId() + ", offset=" + offset); 
// 4 
// This is because the tests are checking that a hard cap of maxUncommittedOffsets + maxPollRecords - 1 uncommitted offsets exists 
// Good so far, check if we are in a CGroup 
//  supervisor which was never back to normal in tolerance period will be removed from cache 
//  maybe it needs a start phase (where it can do a retrieval, an update phase, and then a finish phase...?   shouldn't really be a one-at-a-time interface, since we have all the tuples already?   TOOD: used for the new values stream   the list is needed to be able to get reduceragg and combineragg persistentaggregate   for grouped streams working efficiently
//  in java classpath, '*' is expanded to all jar/JAR files in the directory 
// verify that offset 4 was committed for the given TopicPartition, since processing should resume at 4. 
//  could not lock, so try another file. 
//  use the hash index for prefix searches 
// 3, 4 compacted away 
// DONE 
// check if Map 
// Tuples may be acked/failed after the spout deactivates, so we have to be able to handle this too
//  zkHostString for Solr gettingstarted example 
/*  Not a Blocking call. If cannot emit, will add 'tuple' to 'pendingEmits' and return 'false'. 'pendingEmits' can be null  */
// Waiting to be fetched 
//  a stream of (number, square) pairs 
//  OUTPUT_FIELDS 
//  Timers 
// 5 
//  Do not use canonical file name here as we are using   symbolic links to read file data and performing atomic move   while updating files
//  Initiate connection to remote destination 
//  Assume that there could be a worker already on the node that is under the minWorkerCpu budget.   It's possible we could combine with it.  Let's disregard minWorkerCpu from the request   and validate that CPU as a rough fit. 
//  by generating a list of random numbers and removing the ones that already are in use. 
//  Client API to invoke blob store API functionality 
/*  DELETE EVERYTHING IN HDFS  */
//  do not send upstream to other handlers: no further action needs 
//  Test class to override the write directory 
// Retry once after a minute 
//  update this only after writing to hdfs 
//  Ranked second since rack-1 has a balanced set of resources but less than rack-0 
// 6 
//  comma separated list of topics   consumer group id for which the offset needs to be calculated   bootstrap brokers   security protocol to connect to kafka   properties file containing additional kafka consumer configs
//  configs - hdfs bolt 
//  aggregating metric did not exist, don't look for further ones with smaller timestamps 
//  rotate files when they reach 5MB 
// create an authentication callback handler 
//  port test-shuffle-load-even 
//  given 
//  consume file 1 
// (Requested + Assigned - Guaranteed)/Available 
// JPROFILE DUMP 
// 7 
// We are launching it now... 
// Tests that isScheduled, isReady and earliestRetriableOffsets are mutually consistent when there are multiple messages scheduled on a partition 
//  can be UpdateStateByKey or StateQuery processors 
//  These are mandatory parameters 
/*              * scan the entire window to handle out of order events in             * the case of time based windows.              */
//  Reader type config 
//  WINDOW_TO_STATS 
// find number of constraints per component  Key->Comp Value-># of constraints 
//  Set up the in-memory filesystem. 
// whether find all documents according to the query filter  updateBolt.withMany(true); 
//  Metrics are off, verify null 
// Check that if one message fails repeatedly, the retry cap limits how many times the message can be reemitted 
// mock state store and receiver 
//  test commit second creates properly 
//  out of order events should be processed upto the lag 
// Process has not terminated.  So check if it has completed  if not just destroy it. 
//  don't update unless there are tuples   this helps out with things like global partition persist, where multiple tasks may still   exist for this processor. Only want the global one to do anything 
// Compute the stats for the different input streams 
// Because the simple topology was scheduled first we want to be sure that it didn't put anything on   the GPU nodes. 
//  wait for available queue 
//  USER_NAME 
// Make sure we can store the worker tokens even if no creds are provided. 
//  this bolt does not emit anything 
// Should only happen on a badly configured system 
//  ignores invalid user/topo/key 
// are cleared 
//  return false to stop scan 
//   Submit topology to storm cluster 
// Prevent daemon log reads from pathing into worker logs 
//  TOTAL_NODE_SHARED 
// @{link org.apache.storm.trident.planner.Node} and several other trident classes inherit from DefaultResourceDeclarer   These classes are serialized out as part of the bolts and spouts of a topology, often for each bolt/spout in the topology.   The following are marked as transient because they are never used after the topology is created so keeping them around just wastes   space in the serialized topology
//  Read once. Since the first file is empty, the spout should continue with file 2 
// fail supervisor 
//  update blob interface 
//  default is aways "distributed" but here local cluster is being used. 
// This is cheating a bit since maxPollRecords would normally spread this across multiple polls 
//  Spy object that tries to mock the real object store 
// Should not show files outside log root. 
//  WORKER_HEARTBEATS 
//  Zero-out the 2nd half to prevent accidental matches. 
// Sleep a bit between emits to ensure that we don't reach the cap too quickly, since this spout is used to test time based windows 
//  transferred totals 
//  consume file 2 
//  test listkeys 
//  REQUESTED_TOTAL_MEMORY 
// Congested we contract much more quickly 
//  setup Broker 
//  bolt aggregate 
//  memory requirement is large enough so that two executors can not be fully assigned to one node 
//  
//  Now let's load w/o setting up gets and we should still get valid map back 
// DISABLE_LOGIN_CACHE indicates whether or not to use the LoginCache.  So we exclude it from the keyString 
//  if commands contains one or more null value, spout is compiled with lower version of storm-kafka-client 
//  NAMED_LOGGER_LEVEL 
//  NOTE: the queue has to be thread safe.
// Access foo to make it most recently used 
//  Other scenario it covers is when max-seq-number and nimbus seq number are equal. 
/*                 * compute the word counts in the last two second window                 */
//  Dispatches to the right join method (inner/left/right/outer) based on the joinInfo.joinType 
// partition info does not change in EventHub 
//  TIMESTAMP 
//  3 seconds 
//  add all fetched records to the set of failed records if they are present in failed set 
//  used by Stream#persistentAggregate 
//  Create multiple copies of a test topology 
// Now we need to map them all back again 
//  Now compile! 
//  EVENTLOG_PORT 
// sync zk assignments/id-info to local 
//  ensure 5 fields per tuple and no null fields 
// Offset 0 is committed, 1 to maxUncommittedOffsets-1 are failed, maxUncommittedOffsets to maxUncommittedOffsets + maxPollRecords-1 are emitted  Fail the last tuples so only offset 0 is not failed.  Advance time so the failed tuples become ready for retry, and check that the spout will emit retriable tuples  for all the failed tuples that are within maxUncommittedOffsets tuples of the committed offset 
//  assume key is the first field 
//  use redis for state persistence 
// Found an existing token and it is not going to expire any time soon, so don't bother adding in a new   token. 
//  spout notified that message returned by us for retrying was actually emitted. hence remove it from set and   wait for its ack or fail   but still keep it in counts map to retry again on failure or remove on ack 
//  current version supports RPC heartbeat 
//  certain states might only accept one-tuple keys - those should just throw an error  
// Set the size in case we are recovering an already downloaded object 
//  find primary key from constructor 
// sort executors based on component constraints 
//  should be at 5 
//  Config settings 
//  Test1: Launch topo 1-3 together, it should be able to use up either mem or cpu resource due to exact division 
//  File offset should be zero, since search-archived is false. 
//  ACCESS 
// The spout should now commit all the offsets, since all offsets are either acked or were missing when retrying 
//  Servers should be rotated **BEFORE** the old client is removed from clientForServer   or a race with getWriteClient() could cause it to be put back in the map. 
//  now test regular updateBlob 
//  (Re-)Cancel if current thread also interrupted 
// Also fail the last tuple from partition two. Since the failed tuple is beyond the maxUncommittedOffsets limit, it should not be retried until earlier messages are acked. 
// Test3: "Launch topo5 only, both mem and cpu should be exactly used up" 
//  => field name does not match static field, test if it matches dynamic field 
// sleep to prevent race conditions 
//  weak supervisor node 
// default is ordered. 
//  ensure the loggers are configured in the worker.xml before   trying to use them here 
//  release lock on file1 and check 
// Also put a generic resource with 0 value in the resources list, to verify that it doesn't affect the sorting 
//  OFF_HEAP_NODE 
//  It's OK if new-byte-offset is negative.   This is normal if we are out of bytes to read from a small file. 
//  don't bother blocking on a full queue, just drop metrics in case we can't keep up 
//  Update scenario 2 and 3 explain the code logic written here   especially when nimbus crashes and comes up after and before update 
//  0 means DEFAULT_EVENT_LOOP_THREADS   https://github.com/netty/netty/blob/netty-4.1.24.Final/transport/src/main/java/io/netty/channel/MultithreadEventLoopGroup.java#L40 
//  save the evicted key/value to the database immediately 
//  it should be org.apache.storm:flux-core:jar:1.0.0 and commons-cli:commons-cli:jar:1.2 
//  LOCAL_OR_SHUFFLE 
// The sym link we are pointing to 
// If CPU or memory is not set the values stored in topology.component.resources.onheap.memory.mb,   topology.component.resources.offheap.memory.mb and topology.component.cpu.pcore.percent 
//  initialize server-side SASL functionality, if we haven't yet   (in which case we are looking at the first SASL message from the   client). 
//  resend BP status, in case prev notification was missed or reordered 
//  slots will be null while supervisor has been removed from cached supervisors 
// we just return the first metric we meet 
//  boolean cache for local mode decision 
// When authNid and authZid are not equal , authNId is attempting to impersonate authZid, We 
//  Kinesis Spout KinesisConfig object 
//  SPOUTS 
//  add new ports to cached supervisor.  We need a modifiable set to allow removing ports later. 
//  BINARY_ARG 
//  JMS Producer 
//  for a failed message add it to failed set if it will be retried, otherwise ack it; remove from emitted either way 
//  if there are no trigger values in earlier attempts or this is a new batch, emit pending triggers. 
//  when 
//  This code logic covers the update scenarios in 2 when the nimbus-1 goes down   before syncing the blob to nimbus-2 and an update happens.   If seq-num for nimbus-2 is 2 and max-seq-number is 3 then next sequence number is 4   (max-seq-number + 1). 
//  We should be done now... 
//  getters 
//  trigger the window 
//  offset 2   offset 6   offset 14   offset 18   offset 22   offset 26   offset 30   offset 34 
//  Non Blocking call. If cannot emit to destination immediately, such tuples will be added to `pendingEmits` argument 
//  renewal thread's main loop. if it exits from here, thread will exit. 
//  validate 
//  Shutdownable main.methods
// new supervisor to cache 
//  need to get ACL from meta 
//  Test4: Scheduling a new topology does not disturb other assignments unnecessarily 
//  WINDOW_TO_EMITTED 
//  The encryption key must be hexadecimal. 
// Execute and process latency... 
// There should now be maxUncommittedOffsets + maxPollRecords emitted in all. 
//  first just set the keys to null, then flag to remove them at beginning of next commit when we know the current and last value   are both null 
/*         Without fragmentation, the cluster would be able to schedule both topologies on each node. Let's call each node        with both topologies scheduled as 100% scheduled.        We schedule the cluster in 3 blocks of topologies, measuring the time to schedule the blocks. The first, middle        and last blocks attempt to schedule the following 0-10%, 10%-90%, 90%-100%. The last block has a number of        scheduling failures due to cluster fragmentation and its time is dominated by attempting to evict topologies.        Timing results for scheduling are noisy. As a result, we do multiple runs and use median values for FirstBlock        and LastBlock times. (somewhere a statistician is crying). The ratio of LastBlock / FirstBlock remains fairly constant.        TestLargeFragmentedClusterScheduling took 91118 ms        DefaultResourceAwareStrategy, FirstBlock 249.0, LastBlock 1734.0 ratio 6.963855421686747        GenericResourceAwareStrategy, FirstBlock 215.0, LastBlock 1673.0 ratio 7.78139534883721        ConstraintSolverStrategy, FirstBlock 279.0, LastBlock 2200.0 ratio 7.885304659498208        TestLargeFragmentedClusterScheduling took 98455 ms        DefaultResourceAwareStrategy, FirstBlock 266.0, LastBlock 1812.0 ratio 6.81203007518797        GenericResourceAwareStrategy, FirstBlock 235.0, LastBlock 1802.0 ratio 7.6680851063829785        ConstraintSolverStrategy, FirstBlock 304.0, LastBlock 2320.0 ratio 7.631578947368421        TestLargeFragmentedClusterScheduling took 97268 ms        DefaultResourceAwareStrategy, FirstBlock 251.0, LastBlock 1826.0 ratio 7.274900398406374        GenericResourceAwareStrategy, FirstBlock 220.0, LastBlock 1719.0 ratio 7.8136363636363635        ConstraintSolverStrategy, FirstBlock 296.0, LastBlock 2469.0 ratio 8.341216216216216        TestLargeFragmentedClusterScheduling took 97963 ms        DefaultResourceAwareStrategy, FirstBlock 249.0, LastBlock 1788.0 ratio 7.180722891566265        GenericResourceAwareStrategy, FirstBlock 240.0, LastBlock 1796.0 ratio 7.483333333333333        ConstraintSolverStrategy, FirstBlock 328.0, LastBlock 2544.0 ratio 7.7560975609756095        TestLargeFragmentedClusterScheduling took 93106 ms        DefaultResourceAwareStrategy, FirstBlock 258.0, LastBlock 1714.0 ratio 6.6434108527131785        GenericResourceAwareStrategy, FirstBlock 215.0, LastBlock 1692.0 ratio 7.869767441860465        ConstraintSolverStrategy, FirstBlock 309.0, LastBlock 2342.0 ratio 7.5792880258899675        Choose the median value of the values above        DefaultResourceAwareStrategy    6.96        GenericResourceAwareStrategy    7.78        ConstraintSolverStrategy        7.75         */
//  find the number of bytes with non-leading zeros 
//  check avoids multiple log msgs when in a idle loop 
//  schedule left over system tasks 
//  this doesn't follow symlinks, which is what we want 
//  Build put query 
//  window partitions 
//  3) Take ownership of stale lock 
//  We are capturing exceptions thrown in Blitzer's child threads into this data structure so that we can properly   pass/fail this test.  The reason is that Blitzer doesn't report exceptions, which is a known bug in Blitzer 
//  set size to cleanup another one 
// Should not seek on the paused partition 
// Verify digest is rejected... 
// System bolt is not a part of backpressure. 
//  check just the one port 
//  add with current ts 
//  Required 
//  value of the metric 
//  overflowQ size at the time the last BPStatus was sent 
//  tests download of topology blobs in local mode on a topology without resources folder 
//  Retry locking and verify 
//  default 
//  contents of the key starts with nimbus host port information 
//  context is not used by the default implementation, but is included   in the interface in case it is useful to subclasses 
//  if we get more than one stateful operation, we need to process the   current group so that we have one stateful operation per stateful bolt 
//  do nothing for conf now 
//  Add our messages and verify no metrics are recorded   
// Looks like usage might not be supported 
// Ensure Nimbus assigns topologies as quickly as possible 
//  Put in legacy values 
// Try to get the topology conf from nimbus, so we can reuse it. 
//  FUNC_ARGS 
//  use "|" instead of "," for field delimiter 
//  complexity is that of a linear scan on a TreeMap 
// nextOffset is the last offset from last batch + 1 
//  spout aggregate 
// use storm's zookeeper servers if not specified. 
//  clean up memory 
//  If configs are present in Generic map and legacy - the legacy values will be overwritten 
//  for each isolated topology:     compute even distribution of executors -> workers on the number of workers specified for the topology     compute distribution of workers to machines   determine host -> list of [slot, topology id, executors]   iterate through hosts and: a machine is good if:     1. only running workers from one isolated topology     2. all workers running on it match one of the distributions of executors for that topology     3. matches one of the # of workers   blacklist the good hosts and remove those workers from the list of need to be assigned workers   otherwise unassign all other workers for isolated topologies if assigned 
// Now check that the spout will not emit anything else since nothing has been committed 
// == 4 
//  NONE 
//  the metrics store is not critical to the operation of the cluster, allow Nimbus to come up 
// check the credential of our principal 
//  System bolt doesn't call reportError() 
//  join against diff stream compared to testThreeStreamLeftJoin_1 
//  parsed Topology definition 
//  compile parameters 
//  check for all ports 
// streaId indicates where tuple came from 
// For the node we don't know if we have another one unless we look at the contents 
//  WORKER_HOOKS 
//  validate search by stream id 
//  DEBUG_OPTIONS 
//  Storm support to launch workers of older version.   If the config of TOPOLOGY_SCHEDULER_STRATEGY comes from the older version, replace the package name. 
// Update the watermark to this timestamp 
//  create spouts 
//  need to wait until sasl channel is also ready 
//  perf critical path. would be nice to avoid iterator allocation here and below 
//  all column families 
// generate some that has alot of memory but little of cpu 
//  baseDir/supervisor/usercache/user1/ 
//  userSpout ==> jdbcBolt 
//  all things are from dependencies 
// do nothing 
//  test exist with non-existent key 
//  Testing whether acls are set to WORLD_EVERYTHING 
//  iterate through all executor heartbeats 
// There are free slots that we can take advantage of now. 
// need more data 
//  PORT 
// register call back for blob-store 
//  TASK_START 
//  Tests for case when subject != null (security turned on) and   acls for the blob are set to WORLD_EVERYTHING 
// RESTART 
//  Performs projection on the tuples based on 'projectionFields' 
// We are running so we should recover the blobs. 
// Something happened and we couldn't find the file, so ignore it for now. 
//  1 -  Setup Spout   -------- 
//  callback to caller 
//  Testing whether acls are set to WORLD_EVERYTHING. Here the acl should not contain WORLD_EVERYTHING because   the subject is neither null nor empty. The ACL should however contain USER_EVERYTHING as user needs to have 
//  INPUTS 
//  3) make sure 6 lines (3 from each file) were read in all 
//  1st topology 
//  look for a public instance variable 
//  need one large set of all and then clean via LRU 
//  In all other cases check for the latest update sequence of the blob on the nimbus   and assign the appropriate number. Check if all are have same sequence number, 
//  local worker heartbeat can be null cause some error/exception 
//  because in local mode, its not a separate   process. supervisor will register it in this case   if ConfigUtils.isLocalMode(conf) returns false then it is in distributed mode. 
//  compare contents of files 
//  True if this OffsetManager has made at least one commit to Kafka 
//  minimum 0.x version of supporting STORM-2448 would be 0.10.3 
//  ASSIGNED_CPU 
//  Sleep before cleaning up files 
//  ==== 
//  state query is added to the existing stateful bolt 
//  attempts to lookup the unique Id for a string that may not exist yet.  Returns INVALID_METADATA_STRING_ID 
//  only used for TimedRotationPolicy 
//  BOLT 
// Error occurs, but assignment has not changed 
// We ensure there is only the default stream when configuring the spout, so it should be safe to ignore the parameter here. 
//  batch 1 is played with 25 tuples initially. 
// Save it to try again later... 
// This was 0 byte in test 
//  pendingPrepare has no entries 
//  Static State 
//  We got at least one GET_PULSE_RESPONSE message. 
//  if overrides are disabled, we won't replace anything that already exists 
// Fall through on purpose 
//  mock the supervisor r000s000 as a failed supervisor 
//  Restart topology with a different topology id 
//  set null and get the old value 
//  Test with integer value 
// Schedule nimbus code sync thread to sync code from other nimbuses. 
// Assignment has changed 
//  Pretend to be storm. 
//  required   required   required 
// Now verify that when it is switched we can recover 
//  doesn't manipulate tuples (lists of stuff) so that things like aggregating into   cassandra is cleaner (don't need lists everywhere, just store the single value there) 
//  wrapper to hold global and window averages 
//  Start at the part of the log file we are interested in. 
//  Windows should set this to false cause symlink in compressed file doesn't work properly. 
//  Set closing to true to prevent any further reconnection attempts. 
// There are some different levels of accuracy here, and we want to deal with all of them 
// The spout should have emitted the tuple, and must have committed it before emit 
// populate with existing assignments 
//  ignore ... if t is not a TupleImpl type .. faster than checking and then casting 
//  store can be null during testing when mocking utils. 
// Output the sum of all the known counts so for this key 
//  read the short field 
//  filesystem path to the resource 
//  TOPO_HISTORY 
//  should rewrite this to do a file move
//  tests by subclassing. 
//  Send response to client. 
//  get trigger values only if they have more than zero 
// All messages except the first acked message should have been emitted 
//  There's enough bytes in the buffer. Read it.   
//  get host -> all assignable worker slots for non-blacklisted machines (assigned or not assigned)   will then have a list of machines that need to be assigned (machine -> [topology, list of list of executors])   match each spec to a machine (who has the right number of workers), free everything else on that machine and assign those slots   (do one topology at a time)   blacklist all machines who had production slots defined   log isolated topologies who weren't able to get enough slots / machines   run default scheduler on isolated topologies that didn't have enough slots + non-isolated topologies on remaining machines   set blacklist to what it was initially 
// NOOP prepare should have already been called 
// Demonstrate that the spout doesn't ack pending tuples when skipping compacted tuples. The pending tuples should be allowed to finish normally. 
//  If we failed to get anything from Artifactory try to get it from our local cache 
//  Test1: When a worker fails, RAS does not alter existing assignments on healthy workers 
//  Keep track of how many times we see each taskId 
//  Make sure that we have received at least a short  
//  previous code used this method to generate the string, ensure the two match 
//  should be ack-ed once 
//  window length 
//  need to add an empty string else it is nto added as query param. 
// STORM-3141 regression test  Verify that remote worker can handle many tasks in one executor 
//  Attempt to schedule multiple copies of 2 different topologies (topo-t0 and topo-t1) in 3 blocks.   Without fragmentation it is possible to schedule all topologies, but fragmentation causes topologies to not   schedule for the last block. 
/*                 * a two seconds tumbling window                 */
// This verifies that partitions can't prevent each other from retrying tuples due to the maxUncommittedOffsets limit. 
//  another thread could be writing out the metadata cache to the database. 
// duplicate case 
//  Needed to keep SimpleFileObject constructor happy. 
// constraints and spreads 
//  remove executor details assigned to the failed worker 
//  COMPONENT_TO_SHARED_MEMORY 
//  EXECUTOR_INFO 
// Otherwise don't bother them 
//  Aggregate matching metrics over bucket timeframes.   We'll process starting with the longest bucket.  If the metric for this does not exist, we don't have to 
// this is the topology page, so we know the user is authorized 
//  verifyZeroInteractions(collector); 
//  the offset of the last available message + 1. 
//  We call fireMessageRead since the client is allowed to   perform this request. The client's request will now proceed   to the next pipeline component namely StormClientHandler. 
/* with exhibitor */
//  Creating nimbus hosts containing latest version of blob 
//  JSON_CONF 
//  check lock file presence 
//  interval at which to commit offsets to zk in milliseconds 
//  remove the slot from the existing assignments 
//  spout with 5 parallel instances 
// Just ignore these for now.  We are going to throw it away anyways 
//  holds remaining streams 
//  Class that has the logic to handle tuple failure.
//  Sets {@link SolrFieldsMapper} to use the default Solr collection if there is one defined 
//  Adds the serialized and base64 file to the credentials map as a string with the filename as   the key. 
//  works by emitting null to the collector. since the planner knows this is an ADD node with   no new output fields, it just passes the tuple forward 
//  get existing tuples and pending/unsuccessful triggers for this operator-component/task and add them to WindowManager 
//  =========== Consumer Rebalance Listener - On the same thread as the caller =========== 
//  if no truststore file, assume the truststore is the keystore. 
//  if we needed we could make config for update thread pool size 
//  Updating a blacklist file periodically with random words 
// all failed events are put in toResend, which is sorted by event's offset 
// anonymous user 
// error
//  PlannerImpl.transform() optimizes RelNode with ruleset 
// kill or newly submit 
// No task is under backpressure initially 
// Enable metrics 
//  5 partitions evicted to window state 
// for each owner, get resources, configs, and aggregate 
//  ISOLATED_NODE_GUARANTEE 
// get mapping of components to executors 
//  indexed by id 
//  configs - topo parallelism 
//  next scheduled refresh is sooner than (now + MIN_TIME_BEFORE_LOGIN). 
// fileOffset = one past last scanned file 
// This partition was previously assigned, so the consumer position shouldn't change 
//  catch any runtime exceptions caused by eviction 
//  this is ignored by javac currently but useJavaUtilZip should be 
//  required   required   required   optional   optional   optional   optional   optional   optional   optional 
//  make sure the property was actually set 
/*      * Bolt-specific configuration for windowed bolts to specify the sliding interval in time duration.      */
//  sanity check of the provided test data 
/*                 * split the sentences to words                 */
//  Otherwise poll to see if any new event   was scheduled. This is, in essence, the   response time for detecting any new event   schedulings when there are no scheduled   events. 
//  if lock file has been updated since last time, then leave this lock file alone 
//  Records that have been polled and are queued to be emitted in the nextTuple() call. One record is emitted per nextTuple() 
//  META 
//  Sends the same tuple (list of scored/predicted values) to all the declared streams 
//  always check recQ if ACKing enabled 
//  package access for unit tests 
//         JCQueue spoutQ = new JCQueue("spoutQ", 1024, 100, 0);          JCQueue ackQ = new JCQueue("ackQ", 1024, 100, 0);            final AckingProducer ackingProducer = new AckingProducer(spoutQ, ackQ);          final Acker acker = new Acker(ackQ, spoutQ);            runAllThds(ackingProducer, acker); 
//  task Ids experiencing BP. can be null   task Ids no longer experiencing BP. can be null 
//  Instantiate the HdfsBolt 
//  this method should return sequential numbers starting at 0 
//  STATE_SPOUTS 
//  So we have copied and pasted some of the needed main.methods here. (with a few changes to logging)
//  GSID_TO_INPUT_STATS 
// Only place we fall though to do the loop over again... 
// Thread died before we could get the info, skip 
// Should not have flushed to file system yet 
// Make sure the worker is down before we try to shoot any child processes 
//  if not assign the highest sequence number. 
// slotsUsed < origRequest 
// Max heap size for a worker used by topology 
// tmpDir will be handled separately 
//  that store is passed to WindowStateUpdater to remove them after committing the batch. 
/*              * This is an arbitrary choice to make the result consistent with calculateMin. Any value would be valid here, becase there are             * no (non-zero) resources in the total set of resources, so we're trying to average 0 values.              */
//  if the component is a system (__*) component and we are hiding   them in UI, keep going 
//  ERRORS 
// metaStoreURI = "jdbc:derby:;databaseName="+System.getProperty("java.io.tmpdir") +"metastore_db;create=true"; 
/*  Ack the tuple, and commit.         * Since the tuple is more than max poll records behind the most recent emitted tuple, the consumer won't catch up in this poll.          */
/*          * Load DriverManager first to avoid any race condition between         * DriverManager static initialization block and specific driver class's         * static initialization block. e.g. PhoenixDriver         *         * We should take this workaround since prepare() method is synchronized         * but an worker can initialize multiple AbstractJdbcBolt instances and         * they would make race condition.         *         * We just need to ensure that DriverManager class is always initialized         * earlier than provider so below line should be called first         * than initializing provider.          */
//  class DirectInserter 
//  Keys sorted in descending order 
//  un-pin the last partition 
// Now check for autoCreds that are missing from the command line, but only if the   command line is used. 
//  store inprocess triggers of a batch in store for batch retries for any failures 
// Deleting this early does not hurt anything 
// request from hosts that are not authorized should be rejected 
// Ignored/expected... 
// The user from the token is bob, so verify that the name was set correctly... 
//  package level for unit tests 
// case 2: SaslTokenMessageRequest 
//  2nd topology 
// Gets a Database. 
// server 
//  hive principal storm-hive@WITZEN.COM   storm hive keytab /etc/security/keytabs/storm-hive.keytab   hive.metastore.uris : "thrift://pm-eng1-cluster1.field.hortonworks.com:9083" 
//  SHARED_MEM_ON_HEAP 
//  -- ignore file names config 
//  Normal create update sync scenario returns the greatest sequence number in the set 
//  for jackson 
//  heartbeat, ensure its no longer stale and read back the heartbeat data 
// This cannot happen since we're using a standard charset 
/*      * How often to poll Exhibitor cluster in millis.      */
//  intended behavior 
// expected 
// index == null if it is memory or CPU 
//  should the topology be active or inactive 
// get mapping of execs to components 
// play 1st tuple 
// We expect the bolt to log exactly one decorated line per emit 
// This must be defensively copied, because a bolt probably has only one rotation policy object 
//  test that the set-logger-level function was not called 
//  required   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional 
//  printTimeCostArray(totalPointsArray); 
// cluster forgets about its previous status, so if it is scheduled just leave it. 
// Try again, or go to empty if assignment has been nulled 
//  Lastly, the default servlet for root content (always needed, to satisfy servlet spec) 
//  baseDir/supervisor/usercache/user1/filecache/files 
//  1) read 5 lines in file, 
//  Object associated with JSON field is already JSON 
//  required   required   required   required   required 
// check component is declared for spreading 
// First we need some configs 
//  trigger occurred, create an aggregation and keep them in store 
// Check if we can run a topology with that version of storm. 
//  if re-partitioning is involved, does a per-partition aggregate by key before emitting the results downstream 
//  deletes metadata strings before the provided timestamp 
// We assume that within 5% of the minimum congestion is still fine.  Not congested we grow (but slowly) 
//  the worker to orphan   the worker that fails   the healthy worker 
/*      * Same txid can be prepared again, but the next txid cannot be prepared     * when previous one is not committed yet.      */
// Topology Id -> executor ids -> component -> stats(...) 
//  merge contents of `config` into topology config 
/*      * Convenience method for registering CombinedMetric.      */
//  map from topology id -> set of sets of executors 
//  Make a key list to download 
//  TOTAL_WORKERS 
//  all tuples acked 
// Update the size of the objects 
//  should be at 7 
//  COMPLETE_LATENCY_MS 
// Copy the data 
// get metric by name 
//  If there are no remote outbound tasks, don't start the thread. 
//  Download missing blobs from potential nimbodes 
// just ignore any error/exception. 
//  avoid allocating SpoutAckInfo obj if not necessary 
// NOT going to timeout for a while 
// Try to emit all messages. Ensure only maxUncommittedOffsets are emitted 
//  Only try reading once. 
//  Jpmml evaluator 
/*         For each partition the spout is allowed to retry all tuples between the committed offset, and maxUncommittedOffsets ahead.        It is not allowed to retry tuples past that limit.        This makes the actual limit per partition maxUncommittedOffsets + maxPollRecords - 1,        reached if the tuple at the maxUncommittedOffsets limit is the earliest retriable tuple,        or if the spout is 1 tuple below the limit, and receives a full maxPollRecords tuples in the poll.          */
//  submit topology 
//  poll metrics every minute, then kill topology after specified duration 
//  validate at least two agg level none metrics exist 
// Allow the failed record to retry 
/*  * Listens for all metrics, dumps them as text to a configured host:port * * To use, add this to your topology's configuration: * * ```java *   conf.registerMetricsConsumer(org.apache.storm.testing.ForwardingMetricsConsumer.class, "<HOST>:<PORT>", 1); * ``` * * Or edit the storm.yaml config file: * * ```yaml *   topology.metrics.consumer.register: *     - class: "org.apache.storm.testing.ForwardingMetricsConsumer" *     - argument: "example.com:9999" *       parallelism.hint: 1 * ``` *  */
//  For now we do not make a transaction when removing a topology assignment from local, an overdue   assignment may be left on local disk.   So we should check if the local disk assignment is valid when initializing:   if topology files does not exist, the worker[possibly alive] will be reassigned if it is timed-out;   if topology files exist but the topology id is invalid, just let Supervisor make a sync;   if topology files exist and topology files is valid, recover the container. 
//  zk node under which to commit the sequence number of messages. e.g. /committed_sequence_numbers 
// Just do a few polls to check that nothing more is emitted 
// topo-3 should be evicted since its been up the longest 
//  ack few 
//  https://github.com/netty/netty/blob/netty-4.1.24.Final/transport/src/main/java/io/netty/channel/MultithreadEventLoopGroup.java#L40 
//  clean up the profiler actions that are not being processed 
//  Cassandra doesn't actually shut down until jvm shutdown so need to wait for that first. 
//  Authenticate: Removed after authentication completes 
// get a sorted list of unassigned executors based on number of constraints 
// Now schedule GPU but with the simple topology in place. 
//  I don't have anything 
//  targetSize in Bytes 
// Spout Settings 
//  defaults 
//  used for reporting used ports when heartbeating 
// any change to this code must be serializable compatible or there will be problems
/*                 * aggregate the count                 */
//  no-op 
//  make sure the timestamp on the metadata has the latest time 
//  Some components might have different resource configs. 
//  iterate again 
// Just quit 
// additional safety check to make sure that topologySubmitter is going to be a valid value 
// com.mysql.jdbc.jdbc2.optional.MysqlDataSource  jdbc:mysql://localhost/test  root  password 
// don't exit if not running, unless it is an Error 
// Unknown should only happen during compilation or some unit tests. 
//  Convert targets to a JSON serializable format 
//  a stream of words 
//  insert child in-between parent and its current child nodes 
//  SHUFFLE 
// Check that only the tuple on the currently assigned partition is retried 
//  optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional 
// just ignore the exception. 
// From LocalizerTest 
//  EXEC_STATS 
//  first 50 should have expired due to expire events threshold 
//  33 seconds passed by, timed out 
/*  If topic compaction is enabled in Kafka, we sometimes need to commit past a gap of deleted offsets         * Since the Kafka consumer should return offsets in order, we can assume that if a message is acked         * then any prior message will have been emitted at least once.         * If we see an acked message and some of the offsets preceding it were not emitted, they must have been compacted away and should be skipped.          */
//  since we made sys components hidden, the component map is empty for this worker 
//  NODE_HOST 
/*      * Methods for validating confs      */
// Also add in support for worker tokens 
//  1) Build phase - Segregate tuples in the Window into streams.      First stream's tuples go into probe, rest into HashMaps in hashedInputs 
// Now check for overlap on the node 
//  the window partition that holds the events 
//  number of retry attempts for zk 
/*      * Same txid can be committed again but the     * txid to be committed must be the last prepared one.      */
//  Make every attempt to sync the data we have.  If it can't be done then kill the bolt with   a runtime exception.  The filesystem is presumably in a very bad state. 
// Fall through if not supported 
// When tuple tracking is enabled, the spout must not commit acked tuples in at-most-once mode because they were committed before being emitted 
// To avoid locking we will go through the map twice.  It should be small so it is probably not a big deal 
/*                 * emit the count for the words that occurred                * at-least five times in the last two seconds                 */
// For backwards compatability 
//  nothing expires until threshold is hit 
//  default 30 seconds. (we cache the size so it is cheap to do) 
// Ack all emitted messages and commit them 
// Normally this is a NOOP 
//  perf critical path. don't use iterators. 
//  do nothing 
// Read the partitions, transaction ids and offsets from the old storm-kafka /user path 
//  max number of events to be cached in memory 
// get document 
//  required   required   optional   optional 
// read from state store, if not found, use startingOffset 
//  0 - validate args 
//  The match at this candidate offset failed, so start over with the   next candidate byte from the buffer. 
// ensure always same order for registrations with TreeMap 
//  Initialize spout using the same populated data (i.e same kafkaUnitRule) 
//  Refresh the Ticket Granting Ticket (TGT) periodically. How often to refresh is determined by the   TGT's existing expiry date and the configured MIN_TIME_BEFORE_RELOGIN. For testing and development,   you can decrease the interval of expiration of tickets (for example, to 3 minutes) by running : 
// populate worker to comp assignments 
/*  In non error scenarios, for the Azure Data Lake Store File System (adl://),                               the output stream must be closed before the file associated with it is deleted.                               For ADLFS deleting the file also removes any handles to the file, hence out.close() will fail.  */
//  no wildcard, file 
// 'groups username' command return is non-consistent across different unixes 
// Cached topology -> executor ids, used for deciding timeout workers of heartbeatsCache. 
//  create a windowed stream of five seconds duration 
// Spout should ack failed messages after they hit the retry limit 
//  take one's complement' 
//  environment variable substitution 
// Don't modify the original 
//  Do nothing. 
// The frequency of reporting 
//  sleep for 10 seconds 
// early detection/early fail 
//  ensures... overflowCount <= overflowLimit. if set to 0, disables overflow limiting. 
//  initialize the hashedInputs data structure 
// The current lat and count buckets are protected by a different lock   from the other buckets.  This is to reduce the lock contention   When doing complex calculations.  Never grab the instance object lock 
//  ====== 
//  found 
// Emit and fail the same tuple until we've reached retry limit 
// Don't pro-rate anything, it is all approximate so an extra bucket is not that bad. 
// parts[1] is empty for CGroups V2 else what is mapped that we are looking for 
// Wrapping it makes it mutable 
//  test deep equal 
// Save the current user to help with recovery 
//  [taskId]-> JCQueue :  initialized after local executors are initialized 
//  if shard iterator not present for this message, get it 
//  this triggers java.lang.RuntimeException: Cannot convert null to int
// This also tracks how many times worker transitioning out of a state 
//  storm blobstore update --file blacklist.txt key 
//  note that we delete the return value 
//  WAIT_SECS 
//  Get the list of keys from blobstore 
//  the following are required if we're defining a core storm topology DAG in YAML, etc. 
//  we use this "weird" wrapper pattern temporarily for mocking in clojure test 
//  -- archive dir config 
//  remove 
//  track resources - user to resourceSet  ConcurrentHashMap is explicitly used everywhere in this class because it uses locks to guarantee atomicity for compute and   computeIfAbsent where as ConcurrentMap allows for a retry of the function passed in, and would require the function to have   no side effects. 
// Write the mocking backwards so the actual method is not called on the spy object 
//  a user is will decide which topologies are run and which ones are not. 
// topo-3 evicted (lowest priority) 
//  if the retry service returns a message that is not in failed set then ignore it. should never happen 
// The key of the map is the worker id and the value is the corresponding workerslot object 
//  specified via bolt.select() ... used in declaring Output fields      protected String[] dotSeparatedOutputFieldNames; // fieldNames in x.y.z format w/o stream name, used for naming output fields 
//  check lock file is gone 
//  map from batchgroupid to coordspec 
//  test another topology getting blob with updated version - it should update version now 
// make sure all workers on scheduled in rack-1   The favored nodes would have put it on a different rack, but because that rack does not have free space to run the   topology it falls back to this rack 
//  Base for exponential function in seconds for retrying for second, third and so on failures 
//  {TopologyId -> {WorkerId -> {Executors}}} 
//  timestamp to decide when to commit to zk again 
//  HA Nimbus on being newly elected as leader. Change to a recurring pattern addresses these problems. 
//  Authorize 
//  wait for locks to expire 
//  should have created blobDir 
// free slot 
//  Test2: Launch topo 1, 2 and 4, they together request a little more mem than available, so one of the 3 topos will not be 
//  EXECUTE_MS_AVG 
//  CUSTOM_SERIALIZED 
//  class Pair 
//  try to modify the list, which should fail 
// default batch size 15000 
//  add default user ACL when only empty user ACL is not present 
// totalSpoutLag = totalLatestTimeOffset-totalLatestCompletedOffset 
// Stats... 
// Make the consumer return a single message for each partition 
//  Adding metadata to avoid null pointer exception 
// add a END_OF_BATCH indicator 
//  works out 
//  rebalance 
//  wait and check for expiry again 
/*      * The maximum number of states that will be searched looking for a solution in the constraint solver strategy      */
//  length of parts should be greater than 0 
//  Call prepare with our available taskIds 
//  We consume the iterator by traversing and thus "emptying" it. 
//  'stream' cannot be null, 
// taken care in finally block 
//  3 - submit topology, wait for a few min and terminate it 
// since user jerry has enough resource guarantee 
//  abandon file 
//  this filter makes sure to receive only Key or row but not values associated with those rows. 
/* without exhibitor */
// for backward compatibility. 
//  calc cid+sid->input_stats 
// Emit a message on each partition and revoke the first partition 
//  acls are not set for the blob (DEFAULT) 
// Metrics related 
//  required   required   required   optional   optional   optional   optional   optional   optional   optional   optional 
/*  IMeta  */
// Routine level 
// This should not happen because we checked for PUBLIC in isFieldAllowed 
//  bolts 
/*  Container of a collection of tuples  */
// The maxUncommittedOffsets limit should not be enforced, since it is only meaningful in at-least-once mode 
// Need  more data 
//  while 
//  spouts that use them.  Or if only one uses it they can be created inline with the add 
//  haven't found string, keep searching 
//  prevent issue when the implementation of fieldNames is not serializable   getRowType().getFieldNames() returns Calcite Pair$ which is NOT serializable 
// the json_conf is populated by TopologyBuilder (e.g. boltDeclarer.setMemoryLoad) 
//  group by node 
//  ACL 
//  Heartbeat here so that worker process dies if this fails   it's important that worker heartbeat to supervisor ASAP so that supervisor knows 
//  UPTIME_SECS 
//  if a HDFS keytab/principal have been supplied login, otherwise assume they are   logged in already or running insecure HDFS. 
//  Is this a directory or is it a file?
//  producer 
//  we might need to set the number of acker executors and eventlogger executors to be the estimated number of workers. 
//  HBase has some entries 
// We will adjust weights based off of the minimum load 
// Tried all of the slots and none of them worked. 
// No need to block, the task run by the executor is safe to run even after metrics are closed 
//  COMPONENT_DEBUG 
//  should be throw
// Nimbus Admin 
// component overrides 
//  Let us add the kerbClientPrinc and kerbTicket   We need to clone the ticket because java.security.auth.kerberos assumes TGT is unique for each subject   So, sharing TGT with multiple subjects can cause expired TGT to never refresh. 
// Stop emitting at a certain point, because log rolling breaks the tests. 
//  shard iterator corresponding to position in shard for new messages 
//  level 3 - longer idling with Thread.sleep() 
//  This does not have to be atomic, worst case we update when one is not needed 
//  if the windows should be persisted in state 
//  TODO: de-duplicate this logic with the code in nimbus 
//  Define our taskIds and loads 
// Test for Supervisor Admin 
//  3) read another line and see if another log entry was made 
//  No control of cpu usage 
//  Emitted Offsets List 
// If there is an acked tupled after a compaction gap, the spout should commit it immediately 
//  main 
//  To Commit to Solr and Ack according to the commit strategy 
// Spouts 
/*      * Even though normally bolts do not need to care about thread safety, this particular bolt is different.     * It maintains a static field that is prepopulated before the topology starts, is written into by the topology,     * and is then read from after the topology is completed - all of this by potentially different threads.      */
//  ======== Activate / Deactivate / Close / Declare Outputs ======= 
// This will only ever grow, so no need to worry about falling off the end 
//  CPU_GUARANTEE_REMAINING 
//  update streamState based on stateUpdates 
//  Equivalent update command on command line 
// The partition revocation hook must be called before the new partitions are assigned to the consumer, 
// new topology needs to be scheduled 
//  A small control algorithm to adjust the amount of time that we sleep to make it more accurate 
// Cached GlobalStreamId 
// Special cases for storm... 
//  E 
//  Partition state path =   "/{prefix}/{topologyName}/{namespace}/{entityPath}/partitions/{partitionId}/state"; 
//  Everything should fit in a single slot 
//  last fetched sequence number corresponding to position in shard 
//  sorted acked sequence numbers - needed to figure out what sequence number can be committed 
// Check that null meta makes the spout seek to LATEST, and that the returned meta is correct 
//  tuple ts 
//  TODO: jsonify StormTopology   at the minimum should send source info 
// Timer 
//  Don't allow topoConf to override various cluster-specific properties.   Specifically adding the cluster settings to the topoConf here will make sure these settings   also override the subsequently generated conf picked up locally on the classpath.     We will be dealing with 3 confs:   1) the submitted topoConf created here   2) the combined classpath conf with the topoConf added on top   3) the nimbus conf with conf 2 above added on top.     By first forcing the topology conf to contain the nimbus settings, we guarantee all three confs 
//  Switch to the new assignment even if localization hasn't completed, or go to empty state 
//  Calcite ensures that the value is structurized to the table definition   hence we can use PK index directly   To elaborate, if table BAR is defined as ID INTEGER PK, NAME VARCHAR, DEPTID INTEGER   and query like INSERT INTO BAR SELECT NAME, ID FROM FOO is executed,   Calcite makes the projection ($1 <- ID, $0 <- NAME, null) to the value before INSERT. 
// clearing assignments 
// With earliest, the spout should also resume where it left off, rather than restart at the earliest offset. 
// 0 no load to 1 fully loaded  0 no load to 1 fully loaded 
//  2) Emit results 
//  setup timer for commit elapse time tracking 
// This additional check and download is for nimbus high availability in case you have more than one nimbus 
//  write the tuple 
//  Get the most recent artifact as a String, and then parse the yaml 
//  proposedRefresh is too far in the future: it's after ticket expires: simply return now. 
// Cached CuratorFramework, mainly used for BlobStore. 
//  Construct a message containing the SASL response and send it to the server. 
// Now check that the spout will emit another maxUncommittedOffsets messages 
//  PROCESS_LATENCY_MS 
//  thread safety: assumes Collector.emit*() calls are externally synchronized (if needed). 
// Test for a user having WRITE or ADMIN privileges to change replication of a blob 
//  message was acked after being retried. so clear the state for that message 
//  reset commit timer such that commit happens on next call to nextTuple() 
// The retry schedules for two messages should be unrelated 
/*      * Bolt-specific configuration for windowed bolts to specify the time interval for generating     * watermark events. Watermark event tracks the progress of time when tuple timestamp is used.     * This config is effective only if {@link org.apache.storm.windowing.TimestampExtractor} is specified.      */
//  group field 
/*          * A stream of words emitted by the QuerySpout is used as         * the keys to query the state.          */
// Add in supervisors that might have crashed but workers are still alive 
// put [owner-> StormBase-list] mapping to ownerToBasesMap  if this owner (the input parameter) is null, add all the owners with stormbase and guarantees  else, add only this owner (the input paramter) to the map 
// If the system is low on memory we cannot be kind and need to shoot something 
// The child processes typically exit in < 1 sec.  If 2 mins later they are still around something is wrong 
// Only log if the leader has changed.  It is not interesting otherwise. 
// A race happened and it is probably not running
//  required   required   optional 
//  Authorize: client is allowed to doRequest() if and only if the client 
//  This spout is added to test purpose, so just failing fast doesn't hurt much 
//  minimum 1.x version of supporting STORM-2448 would be 1.0.4 
// Advance the time and replay the failed tuple.  
/*      * Bolt-specific configuration for windowed bolts to specify the sliding interval as a count of number of tuples.      */
//  Only need to keep track of acked tuples if commits to Kafka are controlled by   tuple acks, which happens only for at-least-once processing semantics 
//  do not close this InputStream in method: it will be used from jetty server 
//  partition ids 0 .. 19 
// if the current assignment is already running, new assignment will never be promoted to currAssignment,   because Timer is not being compared in #equals or #equivalent, meaning newAssignment always equals to currAssignment. 
// This happens if the min id is too small 
//  config 
// Should not show files outside worker log root.
//  valid to delete before what's been committed since    those batches will never be accessed again 
//  Client should not be sending other-than-SASL messages before   SaslServerHandler has removed itself from the pipeline. Such   non-SASL requests will be denied by the Authorize channel handler   (the next handler upstream in the server pipeline) if SASL   authentication has not completed. 
//  window system state 
//  used internally to merge values in groupByKeyAndWindow 
// http://supervisor2:8000/download/DemoTest-26-1462229009%2F6703%2Fworker.log  http://supervisor2:8000/log?file=SlidingWindowCountTest-9-1462388349%2F6703%2Fworker.log 
//  register the newly established channel 
//  when storeTuplesInStore is false then the given windowStoreFactory is only used to store triggers and 
// obtain a serializer object 
// Verify correct unwrapping of partitions and delegation of assignment 
// Meter declared here can be registered by any daemon, and is currently used by Supervisor 
//  send flush tuple to all local executors 
/*          * Include the topology name & worker port in the file name so that         * multiple event loggers can log independently.          */
//  Another KafkaSpout instance (of this topology) already committed, therefore FirstPollOffsetStrategy does not apply. 
// Adjust the divisor for the average to account for any skipped resources (those where the total was 0) 
// bolt overrides 
//  RATE 
//  1) schedule the heartbeat on one thread in pool 
// Ensure the commit timer has expired 
//  if we didn't get the group - just return empty list; 
// parts[0] == 0 for CGroup V2, else maps to hierarchy in /proc/cgroups 
// Yes we are putting in a config that is not the same type we pulled out. 
//  REPLICATION_FACTOR 
//  cleanup 
//  max number of window events in memory 
//  Non Blocking. returns count of how many inserts succeeded 
//  1 concurrent deletion - only one thread should succeed 
//  Now let's update it, but not advance time.  Should get old map again. 
// Remove the unneeded entries from the graph  We want to keep all of our nodes, and the nodes that they are connected directly to (parents and children). 
//  we have enough resources now... 
//  Don't emit anything .. allow configured spout wait strategy to kick in 
//  Was scheduled for retry and re-emitted, so remove from schedule. 
//  ON_HEAP 
//  no filter configured, allow anyone 
// Setup spout with mock consumer so we can get at the rebalance listener    
//  NOTE: Variable used in lambda expression should be final or effectively final   (or it will cause compilation error),   and variable type should implement the Serializable interface if it isn't primitive type   (or it will cause not serializable exception). 
// Hosts this user is authorized to impersonate from. 
/*                  * If a worker crashes, the states of all workers are rolled back and an initState message is sent across                 * the topology so that crashed workers can initialize their state.                 * The bolts that have their state already initialized need not be re-initialized.                  */
//  ENABLE 
//  note that sometimes the tuples active may be less than max_spout_pending, e.g.   max_spout_pending = 3   tx 1, 2, 3 active, tx 2 is acked. there won't be a commit for tx 2 (because tx 1 isn't committed yet),   and there won't be a batch for tx 4 because there's max_spout_pending tx active 
//  Multivalue field split by non default token %   to match dynamic fields of the form "*_txt"   this field won't be indexed by solr 
// A map consisting of all workers on the node. 
//  if we had a timeout, but the timeout is no longer active 
//  sample fieldDescriptor = "stream1:x.y.z" 
// This is an odd case for a rolling upgrade where the user on the old assignment may be null,   but not on the new one.  Although in all other ways they are the same.   If this happens we want to use the assignment with the owner. 
// Don't override the host name, or everything looks like it is on nimbus 
//  REQUESTED_REGULAR_ON_HEAP_MEMORY 
//  this is also a helpful optimization that state implementations don't need to manually do 
// sigar uses JNI and does not work in local mode 
//  for mesos, this is {hostname}-{topologyid} 
// WritableByteChannel is a Channel which implements Closeable.   Hence although declared AutoCloseable super#close here should only throws IOException  We rethrow to conform the signature 
// 2) Retire them 
// create a factory class 
//  ASSIGNMENT_ID 
//  ASSIGNED_MEMOFFHEAP 
//  a topology with multiple spouts 
//  populate metric values using the provided key 
//  Or done separately like with setting the 
//  since 2 is the largest un-pinned entry before 3 is loaded 
// Commits offsets during deactivation 
//  no reason to try to execute a previous attempt than we've already seen 
//  pipeline component. 
//  Should have been re-emitted 
//  MEMORY_GUARANTEE_REMAINING 
//  Add the event logger details. 
// To support topologies of older version to run, we might have to loose the constraints so that  the configs of older version can pass the validation. 
// There is a race on backpressure too... 
//  free the error stream buffer 
// no name 
//  in partitioned example, in case an emitter task receives a later transaction than it's emitted so far,   when it sees the earlier txid it should know to emit nothing 
//  Some times a Bolt or Spout will have some memory that is shared between the instances   These are typically caches, but could be anything like a static database that is memory   mapped into the processes. These can be declared separately and added to the bolts and 
// Creates a MongoURI from the given string. 
// Verify that it only committed the message on the assigned partition 
// hierarchy-ID:controller-list:cgroup-path 
//  ID 
// This can happen when a topology is first coming up   It's thrown by the blobstore code 
// fall back to string, which is already set 
// There can be more then one line if cgroups are mounted in more then one place, but we assume the first is good enough 
// The resource that is not used should count as if it is being used 0% 
//  could block 
//  One tuple and one rotation should yield one file with data 
//  if null, acks every tuple 
//  explicit delete for ephemeral node to ensure this session creates the entry. 
// The spout must respect maxUncommittedOffsets even if some tuples have been acked but not committed 
//  projection 
//  search all metadata strings 
// This should never happen because only the primary nimbus is active, but just in case   declare the race safe, even if we lose it. 
//  should remove the blob since cache size set really small 
//  if newReader is true and tuple is null then it is an empty reader 
//  Populate user -> password map with JAAS configuration entries from the "Server" section.   Usernames are distinguished from other options by prefixing the username with a "user_" prefix. 
//  3) read remaining lines in file, then ensure lock is gone 
//  We haven't received the entire object yet, return and wait for more bytes. 
//  EXECUTOR_START_TIME_SECS 
// Schedule the simple topology first 
//  first offset of this batch 
//  this tuple should be removed from emitted only inside the ack() method. This is to ensure   that the OffsetManager for that TopicPartition is updated and allows commit progression 
// Add an element and bar should drop out 
//  below calls shouldn't propagate any exceptions 
//     private String timestampField; 
//  we need to be able to lookup bolts by id, then switch based 
//  parse the output   clear the input stream buffer 
// Treat it like a jar 
// This is very private and does not need to be exposed 
//  fetch records from kinesis starting at sequence number for message passed as argument. Any other messages fetched   and are in the failed queue will also 
//  It's possible for target to have multiple tasks if it reads multiple sources 
//  Tests for case when subject != null (security turned on) and 
//  make sure samplingPct is within bounds. 
// will fail since org.apache.storm.nimbus.NimbusInfo doesn't implement or extend org.apache.storm.networktopography   .DNSToSwitchMapping 
// port range 
//  2 try to grab another lock while dir is locked 
// schedule tasks that are not part of components returned from topology.get_spout or 
//  function to call when timer is killed 
//  1 -  Setup Const Spout   -------- 
// Now schedule all of the topologies that need to be scheduled 
//  in critical path. don't use iterators. 
// good 
// this default ensures things expire at most 50% past the expiration time 
// This should be the load metrics.   There will usually only be one message, but if there are multiple we only process the latest one. 
//  should remove the second blob first 
//  get close enough 
// comma separated offsets 
// 2 close file and retry creation 
//  Track serialized size of messages. 
// Map the value 
//  string does not exist 
//  sync the filesystem after every 1k tuples 
//  for kryo compatibility 
//  Log median ratios for different strategies 
// grouping assignment by node to see the nodes diff, then notify nodes/supervisors to synchronize its owned assignment  because the number of existing assignments is small for every scheduling round, 
//  {metric -> value} 
// is removed since that is what is going to trigger the retry for cleanup 
//  level 1 - no waiting 
//  topology.blobstore.map='{"key":{"localname":"blacklist.txt", "uncompress":"false"}}' 
//  If this partition was previously assigned to this spout, 
// Add new records to Kafka, and check that the next batch contains these records 
// Scheduler histogram 
// PRECONDITION: The new and current assignments must be equivalent 
//  Submit to Storm cluster 
// For example, we have a three nodes(supervisor1, supervisor2, supervisor3) cluster:  slots before sort:  supervisor1:6700, supervisor1:6701,  supervisor2:6700, supervisor2:6701, supervisor2:6702,  supervisor3:6700, supervisor3:6703, supervisor3:6702, supervisor3:6701  slots after sort:  supervisor3:6700, supervisor2:6700, supervisor1:6700,  supervisor3:6701, supervisor2:6701, supervisor1:6701,  supervisor3:6702, supervisor2:6702,  supervisor3:6703 
// .. ignore 
// This shouldn't throw on a Check, because nothing is configured yet 
//  drain 1 element and ensure BP is relieved (i.e tryPublish() succeeds) 
// Save the private worker key away so we can test it too. 
//  we found a spout   spout 
//  [taskId-indexingBase] => queue : List of all recvQs local to this worker 
//  SPOUT_OBJECT 
//  In the short term the goal is to not shoot anyone unless we really need to.   The on heap should limit the memory usage in most cases to a reasonable amount   If someone is using way more than they requested this is a bug and we should   not allow it 
//  For native protocol V3 or below, all variables must be bound.   With native protocol V4 or above, variables can be left unset,   in which case they will be ignored server side (no tombstones will be generated). 
//  Location of the file in the artifactory archive.  Also used to name file in cache. 
// INT + SHORT 
// Migrate the /coordinator currtx, currattempts and meta directories.  The new spout expects the list of topic partitions as coordinator meta. 
/* ========== Implementations ========== */
// Emit maxUncommittedOffsets messages, and fail all of them. Then ensure that the spout will retry them when the retry backoff has passed 
//  Generate SASL response (but we only actually send the response if 
//  Overloading the readInt method accomodate Subject in order to check for authorization (security turned on) 
// Get and set the start time before getting current time in order to avoid potential race with the longest-scheduling-time-ms gauge 
//  Make sure we don't process too frequently. 
//  FIELDS 
//  c.f. HADOOP-6559 
//  boltMsgQueue should have at least one entry at the moment 
//  intermediate bolt, subscribes to jms spout, anchors on tuples, and auto-acks 
//  map to track number of failures for each kinesis message that failed 
/*                                                * Transform the stream of words to a stream of (word, 1) pairs                                                */
// Yes this should be a topo name, but it makes this simpler... 
// create a transport factory that will invoke our auth callback for digest 
//  for the given processor node, if we received punctuation from all tasks of its parent windowed streams 
// Test for Nimbus Admin 
//  max lag 
//  bolt stats 
//  STATE_SPOUT_OBJECT 
//  or database. 
// emit second batch 
//  when there is no input field then the whole tuple is considered for comparison. 
//  for each executor -> node+port pair 
//  publish a retained message to the broker 
//  this is to distinguish from TransactionAttempt 
// Just go on and try to delete the others 
// We created it so lets chmod it properly 
// Stop searching if the message is known to be ready for retry 
// Daemon common main.methods
// bobby has no guarantee so topo-2 and topo-3 evicted 
//  validate search by topology id and executor id 
// hard coded max number of states to search 
// Consumer. Sets up a topology that reads the given Kafka spouts and logs the received messages 
//  this is to support things like persisting off of drpc stream, which is inherently unreliable   and won't have a tx attempt 
// convert NodePort to NodeInfo (again!!!). 
//  effectively disable commits based on time 
// If .current and .version do not match, we roll back the .version file to match   what .current is pointing to. 
// Any other failure result  The assumption is that the strategy set the status... 
//  Shutdownable via INimbusCredentailPlugin 
//  we do this since to concat a null String will actually concat a "null", which is not the expected: "" 
//  Storm config 
// Test for replication using SUPERVISOR access 
//  its possible a string is used by multiple types of metadata strings 
//  This avoids a race condition with cancel-timer. 
// Resources missing from used are using none of that resource 
//  idx - index of the type of this field in the FieldType list 
//  Build get query 
//  delete db and all tables in it 
//  acls for the blob are set to DEFAULT (Empty ACL List) only for LocalFsBlobstore 
//  ===== 
/*  The output field of the spout ("lambda") is provided as the boltMessageField          so that this gets written out as the message in the kafka topic.          The tuples have no key field, so the messages are written to Kafka without a key. */
// MemFree:        14367072 kB  Buffers:          536512 kB  Cached:          1192096 kB   MemFree + Buffers + Cached 
// Nothing 
//  client). 
// Right now this is only used for sending metrics to nimbus,   but we may want to combine it with the heartbeatTimer at some point 
//  default cache size 10GB, converted to Bytes 
//  it should never happened since we apply UUID 
//  checkpoint spout should 've been added 
//  locate expired lock files (if any). Try to take ownership (oldest lock first) 
// This may or may not be reported depending on when process exits 
//  sort by available slots size: from large to small 
// case 1: plugin is a IContext class 
//  able to delete the blob without checking meta's ACL   skip checking everything and continue deleting local files 
// Ignored if cgroups is not setup don't do anything with it 
// The spout must reemit failed messages waiting for retry even if it is not allowed to poll for new messages due to maxUncommittedOffsets being exceeded 
// Check to see if we have enough slots before trying to get them 
//  to the supervisor 
//  go off to blobstore and get it   assume dir passed in exists and has correct permission 
//  Share some common metadata strings to validate they do not get deleted 
// simulate worker loss 
//  a topology with two unconnected partitions 
//  inputFields can be equal to outFields, but multiple aggregators cannot have intersection outFields 
//  Run only once. 
//  Acknowledge all changing blobs as futures 
// The resources are already normalized 
//  used to recognize the pattern of some meta files in a worker log directory 
//  name 
/*      * Just output the word value with a count of 1.     * The HBaseBolt will handle incrementing the counter.      */
// Have not moved to a java worker yet 
//  update to the latest timestamp and add to the string cache 
//  schedule first block (0% - 10%) 
//  close the state to force flush 
/*          * When partitions are reassigned, the spout should seek with the first poll offset strategy for new partitions.         * Previously assigned partitions should be left alone, since the spout keeps the emitted and acked state for those.          */
//  OFF_HEAP_WORKER 
//  JMS Topic provider 
//  class DirLockingThread 
// still need to return the first of pending list 
//  timestamp to be used for shardIteratorType AT_TIMESTAMP - can be null 
// get factory class name 
//  blocking call that can be interrupted using Thread.interrupt() 
//  Download updated blobs from potential nimbodes 
//  consumer 
//  Tell cassandra where the configuration files are. Use the test configuration file. 
//  if maximum uncommitted records count has reached, so dont emit any new records and return 
//  5 min 
//  check lock creation/deletion and contents 
// Always have a space in between 
//  window-state table should already be created with cf:tuples column 
//  archive passed in must contain symlink named tmptestsymlink if not a zip file 
// bolt 
//  TOPOLOGIES 
/*                 * Join the squares and the cubes stream within the window.                * The values in the squares stream having the same key as that                * of the cubes stream within the window will be joined together.                 */
//  acquire lock on file1 and verify if worked 
// Scheduling changed 
//  please pick small artifact which has small transitive dependency   and let's mark as Ignore if we want to run test even without internet or maven central is often not stable 
//  last evaluated and last expired message ids per task stream (source taskid + stream-id) 
// For some reasons, we can not get supervisor port info, eg: supervisor shutdown,  Just skip for this scheduling round. 
//  need to set memory.memsw.limit_in_bytes after setting memory.limit_in_bytes or error   might occur 
//  CPU 
//  required   required   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional 
//  save a little typing 
// no op. 
//  The events should be put in a window when the first watermark is received 
/*  * To change this template, choose Tools | Templates * and open the template in the editor.  */
//  only one of the multireducers will receive the tuples 
//  merge stdout and stderr 
//  no capacity for spout 
// This spout owns 2 partitions: 6 and 14 
//  CPU_USAGE 
//  wait for the process to finish and check the exit code 
//  the "old" trident kafka spout always returns true, like this 
//  utility main.methods
//  late tuple stream 
// When tuple tracking is enabled, the spout must not replay tuples in no guarantee mode 
//  Memory is the constraining resource. 
//  tuple values are mapped with   metric, timestamp, value, Map of tagK/tagV respectively. 
//  adds addressedTuple to destination Q if it is not full. else adds to pendingEmits (if its not null) 
//  then facing backpressure 
//  hidden sys component 
// Sleep a bit to avoid hogging the CPU. 
/*                      * The position is behind the committed offset. This can happen in some cases, e.g. if a message failed, lots of (more                     * than max.poll.records) later messages were acked, and the failed message then gets acked. The consumer may only be                     * part way through "catching up" to where it was when it went back to retry the failed tuple. Skip the consumer forward                     * to the committed offset.                      */
//  for 
//  INFO 
// J_PROFILE_START is not used.  When you see a J_PROFILE_STOP   start profiling and save it away to stop when timeout happens 
// register metrics 
//  SERVER_PORT 
// Try to maintain rolling upgrade compatible with 0.10 releases 
//  Extract the field from tuple. Field may be nested field (x.y.z) 
// 1 try to append to an open file 
// until Ctrl-C 
// for the topology which wants rebalance (specified by the scratchTopoId)   we exclude its assignment, meaning that all the slots occupied by its assignment   will be treated as free slot in the scheduler code. 
//  if not in blacklist then add it and set the resume time according to config 
//  first topology should get evicted for higher priority (lower value) second topology to successfully schedule 
//  strong supervisor node 
//  TOPOLOGY STATE TRANSITIONS 
//  all events since last clear 
//  KEYS 
//  Deny unsupported operations. 
//  flush db to disk 
/*                  * No events were found in the previous window interval.                 * Scan through the events in the queue to find the next                 * window intervals based on event ts.                  */
//  if null then use zookeeper used   by Storm 
// The other tuples are used to reset the first tuple's timeout, 
//  Builds a JSON list 
//  this store is used only for storing triggered aggregated results but not tuples as storeTuplesInStore is set   as false int he below call. 
//  graph with 3 kinds of nodes:   operation, partition, or spout   all operations have finishBatch and can optionally be committers 
// Emit all remaining messages. Failed tuples retry immediately with current configuration, so no need to wait. 
// We are in the same process we cannot recover anything 
//  sorted failed sequence numbers - needed to figure out what sequence number can be committed 
// Skip special case if `storm kill_workers` is already invoked 
//  WINDOW_TO_ACKED 
// There is a race on logconfig where they can be leaked in some versions of storm. 
// Expected... 
//  common stats 
//  Allow searching when start-byte-offset == file-len so it doesn't blow up on 0-length files 
// NOOP no need to create links in local mode 
//  We don't need to take care of sync, cause we're always updating heartbeat 
//  Producers. This is just to get some data in Kafka, normally you would be getting this data from elsewhere 
//  Get start/end indices for blocks 
// There is no security so we are done. 
// Log file permissions 
// Security off  is admin  is in allowed group  is an allowed user 
//  optional   optional   optional   optional   optional   optional   optional 
// Prevent fileName from pathing into worker logs, or outside daemon log root  
/*  weight: 100-1000  */
//  test commit creates properly 
// Ignored... 
// Get the nodes 
// Some tests rely on reading the worker log. If there are too many emits and too much is logged, the log might roll, breaking the test.  Ensure the time based windowing tests can emit for 5 minutes 
//  TOTAL_RESOURCES 
//  [taskId-indexingBase] => queue, some entries can be null. : outbound Qs for this executor instance 
//  TOPOLOGY_STATS 
//  batch 1 is replayed with 50 tuples. 
// We want to update longest scheduling time in real time in case scheduler get stuck   Get current time before startTime to avoid potential race with scheduler's Timer 
/*          * atomically decrement the count if its greater than threshold and         * return if the event should be evicted          */
//  We ran out of buffer for the search. 
//  returns true if there was a change in the BP situation 
// proxy timeout 
// set topology name so that sample Trident topology can use it as stream name. 
// look for available port 
//  stores.length+1 as 2 users in Bengaluru 
//  Add messages 
// Always make sure to clean up everything else before worker directory 
// Races are okay this is just to avoid extra work for each page load. 
//  10th partition should not have been evicted 
//  Note, we could add support for setting the replication factor 
//  delete anything older than an hour 
// We only have a set amount of time we can wait for before looping around again 
/*  LOOK AT LOCAL BLOBSTORE  */
//  100 events with past ts should expire 
/*  IFn  */
//  The list of all executors (preferably sorted to make assignments simpler). 
//  this is for backwards compatibility 
//  see if lockTimeoutSec time has elapsed since we last selected the lock file 
// The supervisor on the node down so add an orphaned slot to hold the unsupervised worker 
// Not set if RECOVER_PARTIAL  Not set if RECOVER_PARTIAL 
//  We can use the task index (starting from 0) as the partition ID 
//  Read the length field. 
// if authorizationId is not set, set it to authenticationId. 
// the first transaction in the new batch 
//  end include processing 
//  Reusing TupleInfo object as we directly call executor.ackSpoutMsg() & are not sending msgs. perf critical 
//  ack 1 tuple 
// Verify that the commit logic can handle offset voids due to log compaction 
// The maximum number of state to search before stopping. 
// so Kafka must be able to return more messages than that in order for the tests to be meaningful 
// Log the user in and get the TGT 
//  LONG_ARG 
//  Make sure if there's enough bytes in the buffer. 
//  Check to see if there are any existing files already localized. 
//  generate a random storm id 
//  A null value or a String value is acceptable 
//  since this processor type is a committer, this occurs in the commit phase 
// Ignore the future 
//  get the worker count back s.t. we can assert in each test function 
//  MetricsCollectorConfig 
//  22 seconds passed by, still not timing out 
// We are going to skip over CPU and Memory, because they are captured elsewhere 
//  TOPOLOGY_ACTION_OPTIONS 
//  this code here ensures that only one attempt is ever tracked for a batch, so when 
// Discard the pending records that are already committed 
// We will not follow sym links 
//  To Commit to Solr and Ack every tuple 
// local node 
//  calls this before actually killing the worker locally...   sends a "task finished" update 
//  to keep track of free slots 
//  should pass 
//  optional   optional   optional   optional   optional 
//  if there are no more pending consumed messages   and storm delivered ack for all 
//  timer == null only if the processing guarantee is at-most-once 
//  Give a hook chance to alter the clock. 
// populating request context 
// Allow poll if there are retriable tuples within the maxUncommittedOffsets limit 
//  Build cluster and connect 
//  2) check log file contents 
//  create thread to process insertion of all metrics 
//  2) deleting open file - should return true 
//  Most of clojure tests currently try to access the blobs using getBlob. Since, updateKeyForBlobStore   checks for updating the correct version of the blob as a part of nimbus ha before performing any   operation on it, there is a necessity to stub several test cases to ignore this method. It is a valid   trade off to return if nimbusDetails which include the details of the current nimbus host port data are   not initialized as a part of the test. Moreover, this applies to only local blobstore when used along with   nimbus ha. 
// get spread components 
//  shared off heap node memory 
// re-emit second batch 
/*  Thread safe. Same instance can be used across multiple threads  */
//  a "topology source" is a class that can produce a `StormTopology` thrift object. 
//  For the case that ack_fail message arrives before ack_init 
//  properties file substitution 
//  number of spout executors 
//  JDK 7 tries to automatically drain the input streams for us   when the process exits, but since close is not synchronized,   it creates a race if we close the stream first and the same   fd is recycled.  the stream draining thread will attempt to   drain that fd!!  it may block, OOM, or cause bizarre behavior   see: https://bugs.openjdk.java.net/browse/JDK-8024521        issue is fixed in build 7u60 
//  INITIAL_STATUS 
/* solo */
//  this is a sink and no result to emit. 
//  yes it's just a test purpose 
//  retrieving is encapsulated in Retrieval interface 
//  MEMORY_GUARANTEE 
// We don't really care too much about the scheduling of topology-gpu-0, because it was scheduled. 
// Ignored, will go with default timeout 
// where state is stored in zookeeper (only for batch spout types) 
// The blobstore is good, now lets get the list of all topo Ids 
//  Method which initializes nimbus admin 
//  case 1: Control message 
//  then (exception) 
//  NUM_ERR_CHOICE 
//  kinesis stream name to read from 
// The spout must respect maxUncommittedOffsets after committing a set of records 
//  other builder functions not exposed:    * createsObjectNamesWith(ObjectNameFactory onFactory)    * registerWith (MBeanServer)    * specificDurationUnits (Map<String,TimeUnit> specificDurationUnits)    * specificRateUnits(Map<String,TimeUnit> specificRateUnits) 
//  Restart topology with the same topology id, which mimics the behavior of partition reassignment 
// Everything is scheduled correctly, so no need to search any more. 
/*              * Nodes in the descending order of priority.             * ProcessorNode has higher priority than partition and window nodes             * so that the topological order iterator will group as many processor nodes together as possible.             * UpdateStateByKeyProcessor has a higher priority than StateQueryProcessor so that StateQueryProcessor             * can be mapped to the same StatefulBolt that UpdateStateByKeyProcessor is part of.              */
//  2) If no abandoned files, then pick oldest file in sourceDirPath, lock it and rename it 
//  ack to not process the record again on restart and move on to next message 
//  then 
/*  validate cpu settings  */
//  release both locks 
// children is only ever null if topologyBasicBlobsRootDir does not exist.  This happens during unit tests   And because a non-existant directory is by definition clean we are ignoring it. 
//  last partition is not evicted 
//  ASSIGNED_SHARED_ON_HEAP_MEMORY 
// We have something to schedule... 
// Support for worker tokens Similar to an IAutoCredentials implementation 
//  unexpected error
//  NUM_EXECUTORS 
//  A blank result communicates that there are no more blobs. 
//  Files/move with non-empty directory doesn't work well on Windows   FileUtils.moveDirectory is not atomic 
// play 2nd tuple 
// each thread will have its own request context 
/*          * if the current processor preserves the key and is         * already partitioned on key, skip the re-partition.          */
// Test for Nimbus itself as a user 
//  register most recent relogin attempt 
//  Decoder 
// This is allowed because the committed message brings the numUncommittedOffsets below the cap 
//         ret.numSupervisors = clusterSummary.get_supervisors_size(); 
//  only enable cleanup of blobstore on nimbus 
//  disregard first line because it has header, already read 
// Sleep for 5 mins 
//  It is imperative to not run the function   inside the timer lock. Otherwise, it is   possible to deadlock if the fn deals with   other locks, like the submit lock. 
//  ID_TO_BOLT_AGG_STATS 
// Lets use the number of actually scheduled workers as a way to bridge RAS and non-RAS 
//  AcceptedBlockTimeRatios obtained by empirical testing (see comment block above) 
// Verify if WorkerTokenManager recognizes the expired WorkerToken. 
//  good to go, increment # of tasks this component is being executed on 
// order executors to be scheduled 
//  if it does not exist. 
//  Metadata information to commit to Kafka. It is unique per spout instance. 
//  Number of times we had to backtrack. 
/*                  * if a null tuple is not configured to be emitted, it should be marked as emitted and acked immediately to allow its offset                 * to be commited to Kafka                  */
// non impersonating request, should be permitted. 
// set the number of workers to be the same as partition number.  the idea is to have a spout and a partial count bolt co-exist in one  worker to avoid shuffling messages across workers in storm cluster. 
// topology being null is used for tests  We probably should fix that at some point,   but it is not trivial to do... 
/* ==================================================     * Helper Classes     *================================================== */
//  Stop searching as soon as passed current time 
/*      * Register a IMetric instance.     *     * Storm will then call `getValueAndReset()` on the metric every `timeBucketSizeInSecs`     * and the returned value is sent to all metrics consumers.     *     * You must call this during `IBolt.prepare()` or `ISpout.open()`.     * @return The IMetric argument unchanged.      */
//  1 expired 
// Commit polled records immediately to ensure delivery is at-most-once. 
// nimbus:num-blacklisted-supervisor + non-blacklisted supervisor = nimbus:num-supervisors 
// In distributed mode, send heartbeat directly to master if local supervisor goes down. 
//  class BatchInserter 
//  pause other topic-partitions to only poll from current topic-partition 
// A map of assignments organized by node with the following format: 
//  Earliest start 
//  can be regular nodes (static state) or processor nodes 
// rotateOutputFile(writer) has closed the writer. It's safe to remove the writer from the map here. 
//  ensure that the first three tasks have been selected before 
//  swapping two arrays 
//  if the streamId is defined, use it for the grouping, otherwise assume storm's default stream 
//  GROUPS 
/*                 * print the results to stdout                 */
// Verify that bob's token has expired 
//  just make a note of the oldest expired lock now and check if its still unmodified after lockTimeoutSec 
//  take the batched metric data and write to the database 
//  assume message is immediately ACKed in non-ack mode 
//  EXECUTORS 
/*  debug only! Once we have confidence, can lose this.  */
//  enable ACKing 
//  required   required   required   required 
//  Identify the join field for the stream, and look it up in 'tuple'. field can be nested field:  outerKey.innerKey 
// just skip when any error happens wait for next round assignments reassign 
//  REQUESTED_CPU 
//  There's enough bytes in the buffer. Read it. 
//  if cb returns false, we are done with this section of rows 
// For others using too much it is really a question of how much memory is free in the system 
//  partition ids 
// Topology may be deployed in deactivated mode, wait for activation 
// random number generator 
//  JUnit ensures that the temporary folder is removed after   the test finishes 
//  Instead of iterating again, it would be possible to commit and update the state for each TopicPartition   in the prior loop, but the multiple network calls should be more expensive than iterating twice over a small loop 
//  -- source dir config 
//  1) read initial lines in file, then check if lock exists 
//  consider all events for the initial window 
// initialize assignment map 
//  save metric key/value to be batched 
//  SIGNATURE 
//  allow blacklist scheduler to cache the supervisor 
//  invoke setter 
//  to be done for SASL_TOKEN_MESSAGE_REQUEST requests. 
// This class assumes that there is at most one retry schedule per message id in this set at a time. 
//  remove the executors cache to let it recompute. 
//  numFails = 1, 2, 3, ... 
// check if annotation is one of our 
// return false if can't increment anymore 
//  Thread Polling every 5 seconds to update the wordSet seconds which is   used in FilterWords bolt to filter the words 
//  RECORDS 
//  for tests, reader will not be null 
//  FULL_CLASS_NAME 
//  Acked messages sorted by ascending order of offset 
//  Advance time and then trigger first call to kafka consumer commit; the commit must progress to offset 9 
//  get topology info 
//  To make logic simple, it assumes that all the tables have one PK (which it should be extended to support composed key), 
// We are not really running anything so make this   simple to check for 
//  select tasks once more than the number of tasks available 
//  IAutoCredentials   ICredentialsRenewer   INimbusCredentialPlugin    IPrincipalToLocal    IGroupMappingServiceProvider  
// Remove any configs that are specific to a host that might mess with the running topology. 
//  ################# Subscribe Callback Implementation ###################### 
//  Removing self so as not to create a deadlock where a nimbus is trying to download a missing blob   from itself 
//  the states to be recovered 
// topo-3 evicted since user bobby don't have any resource guarantees and topo-3 is the lowest priority for user bobby 
//  always provide mocked HiveWriter 
//  to be use. If we cannot calculate it assume that it is bad 
//  Report messageSizes metric, if enabled (non-null). 
//  NODES 
//  perf critical check to avoid unnecessary allocation 
// Not symmetric difference. Performing A.entrySet() - B.entrySet() 
//  and provides PairStream(KeyedStream) to consumer bolt. 
/*                 * The elements having the same key within the window will be grouped                * together and the corresponding values will be merged.                *                * The result is a PairStream<String, Iterable<Double>> with                * 'stock symbol' as the key and 'stock prices' for that symbol within the window as the value.                 */
//  returns nil if doesn't exist 
//  these triggers will be retried as part of batch retries 
// Emit and ack some tuples, ensure that some polled tuples remain cached in the spout by emitting less than maxPollRecords 
//  nature of join   field for the current stream   field for the other (2nd) stream 
// if a new document should be inserted if there are no matches to the query filter  updateBolt.withUpsert(true); 
//  Schedule Nimbus inbox cleaner 
//  2 - Setup Topology  -------- 
//  Key has not been created yet and it is the first time it is being created 
//  cleanup thread killing topology in b/w assignment and starting the topology 
//  no offset commits have ever been done for this consumer group and topic-partition,   so start at the beginning or end depending on FirstPollOffsetStrategy 
//  The current executor we are trying to schedule 
//  TOTAL_TASKS 
//  METRIC_VALUE 
// find the smallest offset in toResend list 
//  if reached so far, add it to the set of messages waiting to be retried with next retry time based on how many times it failed 
// end of Test2 
//  onheap and offheap memory requirement 
// Emit the messages 
//  Wrapper class handy for the client code to use the JSON parser to build to use with JSON parser 
// <ExecutorDetails - Task, Map<String - Type of resource, Map<String - type of that resource, Double - amount>>> 
//  Remove it from failedPerShard anyway 
//  SERIALIZED_PARTS 
//  remove contiguous elements from the head of the heap 
//  merge and push unions rules 
//  test read 
// find the smallest offset in pending list 
//  create root directory if not exist 
//  shard iterator type based on kinesis api - beginning of time, latest, at timestamp are only supported 
// Log Writer Command... 
//  COMPONENT_TO_NUM_TASKS 
//  JSONAware not working for nested element on Map so write JSON format from here 
//  2) Join the streams in order of streamJoinOrder 
//  explicitly anchor emits to corresponding input tuples only, as default window anchoring will anchor them to all tuples   in window 
//  The following tests are run for both hdfs and local store to test the 
//  It covers scenarios expalined in scenario 3 when nimbus-1 holding the latest   update goes down before it is downloaded by nimbus-2. Nimbus-2 gets elected as a leader 
// end of Test3 
//  can be null for things like partitionPersist occuring off a DRPC stream 
//  key1 shouldn't be in iterator since it's marked as deleted 
// defaults to seconds 
//  the combination of the lock and the finished flag ensure that   an id is never timed out if it has been finished 
// NOTE: @IsImplementationOfClass(implementsClass = IStrategy.class) is enforced in DaemonConf, so   an error will be thrown by nimbus on topology submission and not by the client prior to submitting   the topology. 
/*                 * convert the state back to a stream and print the results                 */
//  make sure we've handled all supervisors on the host before we break 
//  EXEC_SUMMARY 
//  will be used instead 
//  WORKERS 
//  other members 
// Worker Command... 
// reset all the weights 
// When nid and zid are not equal, nid is attempting to impersonate zid, We 
//  offset was previously committed for this consumer group and topic-partition, either by this or another topology. 
// The user here from the jaas conf is bob.  No impersonation is done, so verify that 
//  Tar is not native to Windows. Use simple Java based implementation for   tests and simple tar archives 
//  This means we are pointing at a file. 
//  user configurable 
//  wildcard is given in file 
//  DETAILS 
//  check adding reference to local resource with topology of same name 
//  supervisor health check 
//  TOPOLOGY_RESOURCES_OVERRIDES 
// check if exec can be on worker based on user defined component exclusions 
// First verify that if something has a high load it's distribution will drop over time 
//  daemons can only be 'nimbus', 'supervisor', or 'worker' 
//  Ignore NoNodeExists exceptions because when sync() it may populate curr with stale data since   zookeeper reads are eventually consistent. 
//  Spout internals 
//  get tasks if the user is authorized for this topology 
//  check for sub-struct validity 
// this takes care of setting up coord streams for spouts and bolts 
//  Note: We don't return from this method on ParseException to avoid triggering the   spout wait strategy (due to no emits). Instead we go back into the loop and   generate a tuple from next file 
// This happens when the key is not found, the cache loader returns a null and this exception is thrown.   because the cache cannot store a null. 
//  Rack id to list of host names in that rack 
//  1) First re-emit any previously failed tuples (from retryList) 
// NImbus metrics distribution 
//  authz = authn 
// Check if the user is allowed to read this 
//  Now parse it and return the map. 
//  After this, resources should contain all the kinds of resources   we can count for the group. If we see a kind of resource in another   node not in resources.keySet(), we'll throw. 
// When using the no guarantee mode, the spout must commit tuples periodically, regardless of whether they've been acked 
// we expect to notify supervisors at almost the same time 
//  MASTER_CODE_DIR 
//  increment the fail count as we started with 0 
// When reading the conf in nimbus we want to fall back to our own settings 
// May be null if worker tokens are not supported by the thrift transport. 
//  Read 1 line 
// Expected 
// TODO 
// construct the final Assignments by adding start-times etc into it 
//  SHARED_MEMORY 
//  this is just in case supervisor is down so that disk doesn't fill up.   it shouldn't take supervisor 120 seconds between listing dir and reading it 
//  components 
//  For testing, be careful as it doesn't clone 
// If the write failed, try to sync anything already written 
// Schema change should have forced a rotation 
//  These can be chained (like with setting the CPU requirement) 
//  =============================================================================   ============================ getter main.methods =================================   =============================================================================
// add the nid as the real user in reqContext's subject which will be used during authorization. 
//  Always empty if processing guarantee is none or at-most-once 
//  set to keep 2 blobs (each of size 34) 
//  seek next offset after last offset from previous batch 
// This is not atomic (so if something bad happens in the middle we need to be able to recover 
// The unique topology id for the topology that created this metadata 
//  locate oldest expired lock file (if any) and take ownership 
// populating request context  
//  Check last block scheduling time does not get significantly slower 
//  null if it wasn't sampled 
//  expecting AlreadyBeingCreatedException inside RemoteException 
// now pending: [3], toResend: [1,2] 
//  can't leave choices to be empty, so initiate it similar as ShuffleGrouping 
//  min-heap 
//  Retries management 
//  close all the created hTable instances 
// The service must be able to remove retry schedules for unnecessary partitions 
// the default is false.  the default is false. 
//  use redis based state store for persistence 
//  EXPIRATION_TIME_MILLIS 
//  ackers==null when ackerCount not explicitly set on the topology 
//  on whether they are IBasicBolt or IRichBolt instances 
// This really should be impossible, because we go off of the min load, and inc anything within 5% of it.   But just to be sure it is never an issue, especially with float rounding etc. 
//  Therefore the timer in newAssignment won't be invoked 
/*      * performs a hash-join by constructing a hash map of the smaller set, iterating over the     * larger set and finding matching rows in the hash map.      */
//  if all go down which is unlikely. Hence there might be a need to update the blob if all go down. 
//  watermark interval 
//  We can't move this to outside without breaking backward compatibility. 
//  Tuples that were successfully acked/emitted. These tuples will be committed periodically when the commit timer expires, 
//  inner join - core implementation 
//  This should throw AuthorizationException because auth failed 
/*  IPersistentMap  */
// race condition with delete 
// The tick should cause tuple1 to be ack'd 
// The consumer should not be seeking to retry the failed tuple, it should just be continuing from the current position 
// Interrupted is thrown when we are shutting down.   So just ignore it for now... 
// Worker launched through external commands, hence we count their exceptions toward shell exceptions 
// JSTACK DUMP 
/*                 * The result of aggregation is forwarded to                * the RedisStoreBolt. The forwarded tuple is a                * key-value pair of (word, count) with ("key", "value")                * being the field names.                 */
// Waiting for spout tuples isn't strictly necessary since we also wait for bolt emits, but do it anyway  Allow two minutes for topology startup, then wait for at most the time it should take to produce 10 windows 
/*                  * NO-OP: the events are ack-ed in execute                  */
//  list files 
// worker.childopts validates 
//  We ignore workers that are still bound to a slot, which is monitored by a supervisor 
// all events are sent successfully, return last sent offset 
//  metric, timestamp, value, Map of tagK/tagV respectively. 
// host-topoId-port-fileName 
//  the first field is the batch id 
//  STATS 
// The writer must be closed before removed from the map.  If it failed, we might lose some data. 
//  realm is ignored 
//  -- clocks in sync 
// In some cases the new LocalAssignment may be equivalent to the old, but   It is not equal.  In those cases we want to update the current assignment to   be the same as the new assignment 
//  Validate a single task id return 
// Now also check that no more tuples are polled for, since both partitions are at their limits 
//  Force a send error 
//  Overloading the assertStoreHasExactly method accomodate Subject in order to check for authorization 
// null worker id means generate one... 
// There is a race on credentials where they can be leaked in some versions of storm. 
// play all tuples 
// this will fail the test since user derek does not have an entry for memory 
//  5   0   0   4   1 
//  MESSAGE_ID 
//  REBALANCE_OPTIONS 
//  512: for most scenes to avoid inner array resizing 
//  early return as no shard is assigned - probably because number of executors > number of shards 
//  acquire another lock on file1 and verify it failed 
// Commit offsets 
//  Catching and logging KeyNotFoundException because, if   there is a subsequent update and delete, the non-leader   nimbodes might throw an exception. 
// Nimbus Compatibility 
//  Returns either the source component name or the stream name for the tuple 
// We want to be able to select the measurement interval   reporting window (We don't need 3 different reports)   We want to be able to specify format (and configs specific to the format)   With perhaps defaults overall 
// Modifies justAssignedKeys 
// This is called async so lets assume that it is something we care about 
//  remove uploaded jars blobs, not artifacts since they're shared across the cluster   Note that we don't handle TException to delete jars blobs   because it's safer to leave some blobs instead of topology not running 
// get storm values and emit 
//  Complete the send 
// Initial delay for the commit and assignment refresh timers 
//  TODO enable if setStateSpout gets implemented      @Test(expected = IllegalArgumentException.class) 
/*                  * Here we don't set the tuples in windowedOutputCollector's context and emit un-anchored.                 * The checkpoint tuple will trigger a checkpoint in the receiver with the emitted tuples.                  */
//  storm configuration 
//  Looks for files in the directory with .current suffix 
/*                  * This test sends a broadcast to all connected clients from the server, so we need to wait until the server has registered                 * the client as connected before sending load metrics.                 *                 * It's not enough to wait until the client reports that the channel is open, because the server event loop may not have                 * finished running channelActive for the new channel. If we send metrics too early, the server will broadcast to no one.                 *                 * By waiting for the response here, we ensure that the client will be registered at the server before we send load metrics.                  */
//  Checks for assertion when we turn on security 
//  ################# Listener Implementation ###################### 
//  not required   not required 
// This will only get updated once 
//  determine how long to sleep from looking at ticket's expiry.   We should not allow the ticket to expire, but we should take into consideration   MIN_TIME_BEFORE_RELOGIN. Will not sleep less than MIN_TIME_BEFORE_RELOGIN, unless doing so   would cause ticket expiration. 
// 2 try to append to a closed file 
//  =====================================================================================   convert thrift stats to java maps   ===================================================================================== 
//  SHARED_RESOURCES 
// Make the spout commit any acked tuples 
//  USERS 
//  no heartbeat for this one, should be 0 
// clear up the kerberos state. But the tokens are not cleared! As per  the Java kerberos login module code, only the kerberos credentials 
//  copy constructor 
// Writes the offsets in the new format to the /user partitions paths 
// specify a configuration object to be used 
// The spout should emit at most one message per call to nextTuple  This is necessary for Storm to be able to throttle the spout according to maxSpoutPending 
// reserved for future 
//  same set of events part of three windows 
//         bd.shuffleGrouping(SPOUT_ID); 
//  a stream of stock quotes 
//  If MapFunction is aware of cleanup, let it handle cleaning up 
//  stream name unspecified 
//  topo3 has 4 large tasks 
//  SUCCESS 
//  set watermark interval to a high value and trigger manually to fix timing issues 
// fail 1st tuple 
//  Tuples that have been emitted but that are "on the wire", i.e. pending being acked or failed. 
// Ensure Nimbus has leadership, otherwise topology submission will fail. 
//  ignore... 
//  if this latch is closed, we need to create new instance. 
//  actually Map<String, Map<String, Map<String, Long/Double>>> 
//  Objects are absent if they were zero both this iteration   and the last -- if only this one, we need to report zero. 
// with realm e.g. hdfs@WITZEND.COM   /etc/security/keytabs/storm.keytab 
// We get a new random number and seed it to make sure that runs are consistent where possible. 
//  if tuple arrives from a spout, it can be passed as is   otherwise the value is in the first field of the tuple 
//  TOTAL_TOPOLOGIES 
//  simulate the time trigger by setting the reference time and invoking onTrigger() manually 
//  returns paused topic-partitions. 
//  The free pool never has anything running 
// The time is now twice the message timeout, the second tuple should expire since it was not acked 
//  Define our taskIds 
//  wrap KeyNotFoundException in an InvalidTopologyException 
//  user class supplied...   this also provides a bridge to Trident... 
// Trigger manually to avoid timing issues 
//  EXECUTOR_ID 
// Create links to artifacts dir 
//  other classes from config 
//  0 means delegate batch size = trident batch size. 
// Initial delay for the assignment refresh timer 
//  names 
//  wait for lock to expire 
//  If that fails, use config 
// Verify simple is rejected... 
//  filter ExecutorSummary's with empty stats 
//  backward compatibility 
//  Verify recorded messages size metrics  
// 2 on first partition, 0-2 on second partition 
//  Ranked third since rack-4 has a lot of cpu but not a lot of memory 
//  FRAGMENTED_CPU 
/*              * Last batch meta is null, but this is not the first batch emitted for this partition by this emitter instance. This is             * a replay of the first batch for this partition. Use the offset the consumer started at.              */
//  Don't start new requests if there is an exception 
// We require there to be both a topology and a component in this case, so parse it out as such. 
//  There is one task inside one executor for each worker of the topology.   TaskID is always -1, therefore you can only send-unanchored tuples to co-located SystemBolt.   This bolt was conceived to export worker stats via metrics api. 
//  now scan all metadata and remove any matching string Ids from this list 
//  Ignored 
// Save the memory limit so we can enforce it less strictly 
//  executor resources 
// We could not recover container will be null. 
// returns null if it's not a drpc group 
//  pump more msgs than Q size & verify msg count is as expexted 
//  check negative resource count 
// ack 2nd tuple 
//  Log any info sent on the error stream 
//  Fill the 2nd half with new bytes from the stream. 
// A DRPC token only works for the invocations transport, not for the basic thrift transport. 
//  (merge-with merge-agg-comp-stats-topo-page-bolt/spout (acc-stats comp-key) cid->statk->num) 
// Map the key if needed 
//  2 -  Setup DevNull Bolt   -------- 
//  failed_with_exit_code is OK. We're mimicing Hadoop's health checks.   We treat non-zero exit codes as indicators that the scripts failed   to execute properly, not that the system is unhealthy, in which case   we don't want to start killing things. 
// Fail both emitted tuples 
//  there's not enough bytes in the buffer. 
//         oneProducer1Consumer();          twoProducer1Consumer();          threeProducer1Consumer();          oneProducer2Consumers();          producerFwdConsumer(); 
// Should be allowed to retry 3 times, in addition to original try 
//  TODO: handle regular rich spout without batches (need lots of updates to support this throughout) 
//  check allowedWorkers only if the scheduler is not the Resource Aware Scheduler 
//  check that tryPublish() & tryOverflowPublish() work as expected 
// Put in a tuple to cause the first tuple to be acked 
//  failures happen you don't get an explosion in memory usage in the tasks 
//     httpServer.destroy();  } 
// Seek directly to the earliest retriable message for each retriable topic partition 
//  Hide the dead-ports from the all-ports   these dead-ports can be reused in next round of assignments 
// Resets the last access time for key1 
//  ACTION 
//  A singleton instance allows us to mock delegated static main.methods in our
/*          * When we click a link to the logviewer, we expect the match line to be somewhere near the middle of the page. So we subtract half         * of the default page length from the offset at which we found the match.          */
// generate topologies 
// Allowing keytab based login for backward compatibility. 
//  OWNER 
//  map of tag value pairs 
/*  * Just for testing purpose. After the migration of testing.clj. This class could be removed.  */
// Only 1 rack is in use  r001 is the second rack with GPUs  r000 is the first rack with no GPUs 
//  used in worker only, keep it as a latch 
//  throws ParseException. Effectively produces 3 lines (1,2 & 3) from each file read 
//  RAS (Resource Aware Scheduler) 
//  Starting empty 
// no ack, so return the first of pending list 
// storm configuration 
//  REQUESTED_SHARED_OFF_HEAP_MEMORY 
//  highest sequence number that can be committed for this shard 
// The batch size can be no larger than half the full recvQueue size, to avoid contention issues. 
// exact variable time, that is added to the current bucket 
//  COMPLETE_MS_AVG 
//  events 8, 9, 10 should not be scanned at all since TimeEvictionPolicy lag 5s should break 
// get it from cluster state/zookeeper every time to collect the UI stats, may replace it with other StateStore later 
//  Note that allSlotsAvailableForScheduling   only uses the supervisor-details. The rest of the arguments   are there to satisfy the INimbus interface. 
//  the key and value of txIds are guaranteed to be converted to UTF-8 encoded String 
//  clear workers off all hosts that are not blacklisted 
//  Creating blob again before launching topology 
//  ASSIGNED_MEMONHEAP 
// Commit 
// user jerry submits topo2 
//  optional   optional   optional   optional   optional   optional 
//  10,000,000 records => 80MBs of memory footprint in the worst case 
//  This is updated by the Worker and the topology has shared access to it 
// we need to release resources associated with the worker event loop group 
//  assertion 
// no-op 
//  protected using the Object Lock 
//  distribution should be even for all nodes when loads are even 
//  implementation for converting a Kinesis record to a storm tuple 
//  A callback that does nothing. 
// In case deactivate was called before 
//  close the socket, which releases connection if it has created any. 
//  remove any entries in the cache 
//  (acc-stats comp-key) ==> bolt2stats/spout2stats 
//  Update current key list inside the blobstore if the version changes 
//  lock protects against multiple topologies being submitted at once and 
//  WINDOW_TO_FAILED 
//  one or more column families 
//  SUPERVISOR_ID 
//  2) wait for all 3 locks to expire then heart beat on 2 locks 
//  create sequence format instance. 
//  blob key not specified, use file 
//  1 lock log entry every 2 tuples   Effectively disable commits based on time 
//  TODO: finish 
// this is to prevent the potential bug that  if the Login Cache is (1) enabled, and then (2) disabled and then (3) enabled again,  and if the LoginCacheKey remains unchanged, (3) will use the Login cache from (1), which could be wrong,  because the TGT cache (as well as the principle) could have been changed during (2) 
//  Some other form of Unix 
// element sojourn time in milliseconds 
//  Suppressing exceptions as we don't care for errors on abort 
// need to get the next node iterator 
//  Creating a blacklist file to read from the disk 
// TreeSet uses compareTo instead of equals() for the Set contract  Ensure that we can save two retry schedules with the same timestamp 
//  thread object 'thread' will be null if a refresh thread is not needed. 
//  Encoder 
//  Don't ack tick tuples 
// Don't let the user set who we launch as 
//  acls for the blob are set to WORLD_EVERYTHING 
//  4)  --- Create another input file and reverify same behavior --- 
//  setup default Producer 
//  pregenerate commonly used keys for scans 
//  if SASL authentication is disabled, saslChannelReady is initialized as true; otherwise false 
//  number of values must be odd to compute median as below 
// NOOP, if windows gets support for run as user we will need to find a way to support this 
//  wordSpout ==> countBolt ==> RedisBolt 
//  RESET_LOG_LEVEL_TIMEOUT_EPOCH 
//  storm blobstore create --file blacklist.txt --acl o::rwa key 
//  3 - Setup Topology  -------- 
//  EMITTED 
// the body of the message is "message" + currentOffset, e.g. "message123" 
//  object capturing all zk related information for storing committed sequence numbers 
//  there's a race condition with a delete: either blobstore or blobstoremaxsequence   this should be thrown to the caller to indicate that the key is invalid now 
//  HOSTNAME 
//  Stop services without killing the process instead. 
//  $PATH should be defined on most systems 
//  setup ZK 
// No backoff for test retry service, just check that messages will retry immediately 
// just need an id 
//  Javac option: remove these when the javac zip impl is fixed   (http://b/issue?id=1822932) 
// Both assignments are null, just wait 
/*         For each partition the spout is allowed to retry all tuples between the committed offset, and maxUncommittedOffsets ahead.        It must retry tuples within that limit, even if more tuples were emitted.          */
//  for local cluster 
// Check that null meta makes the spout seek to EARLIEST, and that the returned meta is correct 
//  messages[next] == null can happen if we lost the connection and subsequently reconnected or timed out. 
//  emits sliding window and global averages 
// Topologies that were deemed to be invalid 
// in addition, add all the owners with guarantees 
//  or after a consumer rebalance, or during close/deactivate. Always empty if processing guarantee is none or at-most-once. 
// for local test 
//  window should be compacted and events should be expired. 
//  add more events with current ts 
//  The manually set STORM_WORKER_CGROUP_MEMORY_MB_LIMIT config on supervisor will overwrite 
//  left join - core implementation 
//  returns true if pendingEmits is empty 
//  now ack msg 5 and check 
// Race with delete  If it is not here the replication is 0  
//  ignore 
// This needs to be thread safe 
//  In the worst case we will return a serialized name after a password provider said that the password   was okay.  In that case the ACLs are likely to prevent the request from going through anyways. 
//  enable blobstore acl validation 
//  NODE_INFO 
//     Metrics 
// Tests that isScheduled, isReady and earliestRetriableOffsets are mutually consistent when there are messages from multiple partitions scheduled 
// This might be a partial key grouping.. 
//  make sure resources dir is created. 
//  make sure we support different user reading same blob 
//  validate search by metric id 
// A map of node ids to node objects 
//  pass cases 
// construct a transport plugin 
//  no reference to key1 
//  initialize slots for this node 
//  Quoting Javadoc in File.listFiles(FilenameFilter filter):   Returns {@code null} if this abstract pathname does not denote a directory, or if an I/O error occurs. 
//  we're making mock, ignoring... 
// Expire the token 
// Create links to blobs 
//  Maps transaction Ids to JMS message ids. 
//  Testing whether acls are set to WORLD_EVERYTHING, Here we are testing only for LocalFsBlobstore   as the HdfsBlobstore gets the subject information of the local system user and behaves as it is   always authenticated. 
//  Define our taskIds - the test expects these to be incrementing by one up from zero 
//  for kryo 
// static to ensure eventhough the class is created using reflection we can still get  the topology to actions 
/*      * Convenience method for registering ReducedMetric.      */
//  one instance per executor avoids false sharing of CPU cache 
//  FUNCTION_NAME 
//  there's a race condition with a delete: blobstore   this should be thrown to the caller to indicate that the key is invalid now 
//  deletes metrics matching the filter options 
// must specify column schema when providing custom query. 
//  case 4: task Message 
//  populate a metric 
//  The false parameter ensures overwriting the version file, not appending 
// Since the last tuple on the partition is more than maxPollRecords ahead of the failed tuple, it shouldn't be emitted here 
//  if ACLs have two user ACLs for empty user and principal, discard empty user ACL 
//  perform a scan given filter options, and return results in either Metric or raw data. 
//  function called on timer to reset log levels last set to DEBUG 
//         oneProducer1Consumer(1000);  // -- measurement 1          twoProducer1Consumer(1000);    // -- measurement 2          threeProducer1Consumer(1);   // -- measurement 3 
// $set operator: Sets the value of a field in a document. 
//  schedule last block (90% to 100%) 
//   Submit to Storm cluster 
//  batch 3 replayed with 40 tuples 
// add the authNid as the real user in reqContext's subject which will be used during authorization. 
//  return null if it's not single emit 
//  (merge-with (partial merge-with sum-or-0) acc-out spout-out) 
//  0) config spout to log progress in lock file for each tuple 
// defaults to 10 
/*      * the value of m is as follows:     * <pre>     * #org.apache.storm.stats.CommonStats {     *  :executed {     *      ":all-time" {["split" "default"] 18727460},     *      "600" {["split" "default"] 11554},     *      "10800" {["split" "default"] 207269},     *      "86400" {["split" "default"] 1659614}},     *  :execute-latencies {     *      ":all-time" {["split" "default"] 0.5874528633354443},     *      "600" {["split" "default"] 0.6140350877192983},     *      "10800" {["split" "default"] 0.5864434687156971},     *      "86400" {["split" "default"] 0.5815376460556336}}     * }     * </pre>      */
// These should match FixedAvroSerializer.config in the test resources 
/*      * Write a String array as a Nework Int N, followed by Int N Byte Array of     * compressed Strings. Handles also null arrays and null values.     * Could be generalised using introspection.     *      */
//  NUM_WORKERS 
//  Wait for 'ready' (channel connected and maybe authentication) 
//  required for instantiation via reflection. must call prepare() thereafter 
// this will do best effort flushing since the linger period   was set on creation 
//  second predicate for or condition uses the fact that long addition over the limit circles back 
// Yes eat the exception 
// This technically does not conform with rfc1964, but should work so   long as you don't have any really odd names in your KDC. 
//  invalidate the iterator 
// only put this owner to the map 
//  example. spout1: generate random strings   bolt1: get the first part of a string   bolt2: output the tuple 
//  and try to renew the ticket. 
//  Re-load from cached' file. 
//  30 seconds 
// Just throw it away in local mode 
//  fail cases 
// First off we want to verify that ROOT is good 
//  -- max outstanding tuples 
// Nimbus groups admin 
// In almost all cases these should be the same, but warn the user just in case something goes wrong... 
// Fail all emitted messages except the last one. Try to commit. 
//     public SimpleTridentHBaseMapper withTimestampField(String timestampField){          this.timestampField = timestampField;          return this;      } 
// In some cases users will want to drop retrying old batches, e.g. if the topology should start over from scratch.  If the FirstPollOffsetStrategy ignores committed offsets, we should not retry batches for old topologies  The batch retry should be skipped entirely 
// Run until Ctrl-C 
//  automatically turn it into a batch spout, should take parameters as to how much to batch      public Stream newStream(IRichSpout spout) {          Node n = new SpoutNode(getUniqueStreamId(), TridentUtils.getSingleOutputStreamFields(spout), null, spout, SpoutNode   .SpoutType.BATCH);          return addNode(n);      } 
// now login 
/* Will only serialize AMQPValue type */
//  It is necessary that this produce a deterministic assignment based on the key, so seed the Random from the key 
//  given (for this iteration) 
//  check for required fields 
// Global Grouping is fields with an empty list 
//  -- spout id 
//  offset and messageId are used interchangeably 
//  O(Log N) 
//  msec 
//  4 - Print metrics every 30 sec, kill topology after 20 min 
// This histogram reflects the data distribution across only one ClusterSummary, i.e.,   data distribution across all entities of a type (e.g., data from all nimbus/topologies) at one moment.   Hence we use half of the CACHING_WINDOW time to ensure it retains only data from the most recent update 
//  blocking call under the hood, must invoke after launch cause some services must be initialized 
// start the threads 
/*          * The inputWindow gives a view of         * (a) all the events in the window         * (b) events that expired since last activation of the window         * (c) events that newly arrived since last activation of the window          */
//  MEM_ON_HEAP 
// The old token could not be deserialized.  This is bad, but we are going to replace it anyways so just keep going. 
//  then (for this iteration) 
// in case we didn't fill in enough 
// Cycle spout activation 
//  Check for latest sequence number of a key inside zookeeper and return nimbodes containing the latest sequence number 
//  we need to download to temp file and then unpack into the one requested 
//  add identity partitions between groups 
// Acking tuples for partitions that are no longer assigned is useless since the spout will not be allowed to commit them 
//  read few lines from file1 dont ack 
//  Check for Blobstore with authentication 
/*      * key1 -> (val1, val2 ..)     * key2 -> (val3, val4 ..)      */
//  1 -  Setup Hdfs Spout   -------- 
//  read lines 3..7, don't ACK .. commit pos should remain same 
// if playing from the repl and defining functions, file won't exist 
// Under RAS the number of workers is determined by the scheduler and the settings in the conf are ignored  conf.setNumWorkers(3); 
// conf.put(Config.TOPOLOGY_STATE_PROVIDER, "org.apache.storm.redis.state.RedisKeyValueStateProvider"); 
//  check for null which can exist because of a race condition in which nimbus nodes in zk may have been   removed when connections are reconnected after getting children in the above line 
//  SPECIFIC_STATS 
//  Register file cleanup after jvm shutdown 
//  TODO conditionally load properties from a file our resource 
//  We don't need to sleep here because the IPartitionManager.receive() is   a blocked call so it's fine to call this function in a tight loop. 
//  Triggers when an assignment should be refreshed 
//  2 - if clocks are in sync then simply take ownership of the oldest expired lock 
//  first sync assignments to local, then sync processes. 
//  SAMPLINGPCT 
//  Check for new file every so often 
// We waited for 1 second loop around and try again.... 
//  topo3 should not be able to scheduled 
//  create a new config. Make it additive (true) s.t. inherit parents appenders 
// prints the total with low probability. 
// if this task containing worker will be killed by a assignments sync,  taskToNodePort will be an empty map which is refreshed by WorkerState 
//  ALL 
//  class JoinInfo 
// Supervisor metrics distribution 
//  inner join of 'age' and 'gender' records on 'id' field 
// With uncommitted earliest the spout should pick up where it left off when reactivating. 
//  Test1: If RAS spreads executors across multiple workers based on the set limit for a worker used by the topology 
/* filter supervisor */
//  DO NOT include the success stream as part of the batch. it should not trigger coordination tuples,   and is just a metadata tuple to assist in cleanup, should not trigger batch tracking 
//  Load PMML Model from File 
//  this code here handles a case where a previous commit failed, and the partitions   changed since the last commit. This clears out any state for the removed partitions   for this txid.   we make sure only a single task ever does this. we're also guaranteed that   it's impossible for there to be another writer to the directory for that partition   because only a single commit can be happening at once. this is because in order for   another attempt of the batch to commit, the batch phase must have succeeded in between.   hence, all tasks for the prior commit must have finished committing (whether successfully or not) 
//  SHELL 
// Clean up some things the user should not set.  (Not a security issue, just might confuse the topology) 
//  prevent timer to check heartbeat based on last thing before activate 
//  DATA 
//  only holds msgs from other workers (via WorkerTransfer), when recvQueue is full 
// HEAP DUMP 
//  Wait for all tasks to complete 
// ack rest 
// Check that only two message ids were generated 
//  Login will sleep until 80% of time from last refresh to   ticket's expiry has been reached, at which time it will wake 
// above for-loop has closed all the writers. It's safe to clear the map here. 
//  get executor heartbeat 
// name list is empty, return an empty map 
/* include sys (should not matter) */
//  2- BP detected (i.e MainQ is full). So try adding to overflow 
//  Finds the metadata string that matches the string Id and type provided.  The string should exist, as it is 
//  validate search by time 
//  checks if the tasks which had back pressure are now free again. if so, sends an update to other workers 
//   Submit topology to Storm cluster 
//  FRAGMENTED_MEM 
//  Distributed mode 
// We need to read a new one 
//  SID_TO_OUTPUT_STATS 
// return the smaller of pending and toResend 
//  ASSIGNED_REGULAR_OFF_HEAP_MEMORY 
// The spout must respect maxUncommittedOffsets when requesting/emitting tuples 
// 1 day values 
//  TOPOLOGY_CONF_OVERRIDES 
//  get num_executors 
// By default this is a NOOP 
//  Normalize state 
//  JAVA_OBJECT 
//  for an acked message add it to acked set and remove it from emitted and failed 
//  so we can track when it was last used for later deletion on database cleanup. 
//  avoid buffering 
//  the new-timeouts map now contains logger => timeout 
//  4 try locking again 
// construct THsHaServer 
//  VERSION 
//  if the acked message was in emittedPerShard that means we need to remove it from the emittedPerShard (which 
//  Serializes a Java object to JSON 
//  Resume polling at the last committed offset, i.e. the first offset that is not marked as processed. 
//  invalid key, remove it from blobstore 
//  =====================================================================================   thriftify stats main.methods   =====================================================================================
//  wordSpout ==> countBolt ==> MongoUpdateBolt 
//  size if IDENTIFIER 
//  calc sid->output-stats 
// NOOP 
// Ranked last since rack-5 has neither CPU nor memory available 
//  If FlatMapFunction is aware of cleanup, let it handle cleaning up 
//  Construct a message containing the SASL response and send it to the 
//  this bolt does not emit tuples 
// Don't try to move the JAR file in local mode, it does not exist because it was not uploaded 
// Nothing is scheduled here so throw away all of the profileActions 
// logger.info("emitted new batches: " + listEvents.size()); 
//  not used, placeholder for GUI, etc. 
// Extend the config with defaults and the command line 
//  setting value to any non-null string 
// any stop profile actions that hadn't timed out yet, we should restart after the worker is running again. 
// Remove existing schedule for the message id 
//  totals 
/*      * Asserts that commitSync has been called once,      * that there are only commits on one topic,     * and that the committed offset covers messageCount messages      */
//  STORM_ASSIGNMENT 
//  find homedir 
/*              * Delete the current index file and rename the tmp file to atomically             * replace the index file. Orphan .tmp files are handled in getTxnRecord.              */
//  validate search by host id 
// Avoid case of different blob version   when blob is not downloaded (first time download) 
//  iterate the tuples 
//  create thread to delete old metrics and metadata 
//  we want to register a topo directory getChildren callback for all workers of this dir 
//  e.g.:  1,2,3,4,10,11,12,15  =>  4,10,11,12,15 
//  expecting this exception 
//  case 3: BackPressureStatus 
//  METRIC_LIST 
// topology.worker.childopts validates 
// Give the topology time to come up without using it to wait for the spouts to complete 
/* include sys */
// Sometimes external things used with testing don't shut down all the way 
// key is supervisor key ,value is supervisor ports 
//  run aggregator to compute the result 
// This is a NOOP 
//  if re-partitioning is involved, does a per-partition reduce by key before emitting the results downstream 
//  if no configs from user-resource-pools.yaml, get configs from conf 
// password 
//  set acl so user doesn't have read access 
//  scans from key start to the key before end, calling back until callback indicates not to process further 
//  If unsuccesful fail the pending tuples 
// This test is in two phases.  The first phase fills up the 10 buckets with 10 tuples each 
//  reset property 
//  version 
//  PULSE_IDS 
// This method enables the metrics to be accessed from outside of the JCQueue class 
//  verify lock file location   verify lock filename 
//  pass in componentToSortedTasks for the case of running tons of tasks in single executor 
//  an acked message should not be in failed since if it fails and gets re-emitted it moves to emittedPerShard   from failedPerShard. Defensive coding. 
// All null tuples should be commited, meaning they were considered by to be emitted and acked 
//  The start index is positioned to find any possible   occurrence search string that did not quite fit in the   buffer on the previous read. 
// generate another rack of supervisors with less resources 
// Scheduling changed while running... 
//  load from state 
//  boolean to indicate whether timer is active 
//  a valid javac XD option, which is another bug 
//  A map of the worker to the components in the worker to be able to enforce constraints. 
// any receive call after exceeding max pending messages results in null 
// invoke service handler 
//  Finally delete any baseName.<VERSION> files that are not pointed to by the current version 
//  Choosing atmost 5 words to update the blacklist file for filtering 
//  Assume the recvQueue is stable, in which the arrival rate is equal to the consumption rate.   If this assumption does not hold, the calculation of sojourn time should also consider   departure rate according to Queuing Theory. 
//  SERIALIZED_JAVA 
//  Generate SASL response to server using Channel-local SASL client. 
// Gets Nimbus Subject with NimbusPrincipal set on it 
//  TOPOLOGY_STATUS 
/*  We take the max of the default and whatever the user put in here.           Each node's resources can be the sum of several operations, so the simplest           thing to do is get the max.           The situation we want to avoid is that the user sets low resources on one           node, and when that node is combined with a bunch of others, the sum is still           that low resource count. If any component isn't set, we want to use the default.           Right now, this code does not check that. It just takes the max of the summed           up resource counts for simplicity's sake. We could perform some more complicated           logic to be more accurate, but the benefits are very small, and only apply to some           very odd corner cases.  */
/*  Indexed  */
// Unblock downloading by accepting the futures. 
//  this finds all dependency blob keys from active topologies from all local blob keys 
//  NIMBUSES 
// Emit all messages and check that they are emitted. Ack the messages too 
// rest of jerry's running topologies 
// Since we asked for tuples starting at seekOffset, some retriable records must have been compacted away.  Ack up to the first offset received if the record is not already acked or currently in the topology 
//  always retain resources in use 
// Update worker tokens if needed 
//  Consumer 
/*  Not a Blocking call. If cannot emit, will add 'tuple' to pendingEmits and return 'false'. 'pendingEmits' can be null  */
// cannot be (cpuResourcePoolUtilization + memoryResourcePoolUtilization)/2  since memoryResourcePoolUtilization or cpuResourcePoolUtilization can be Double.MAX_VALUE  Should not return infinity in that case 
// The failed tuples are ready for retry. Make it appear like 0 and 1 were compacted away. 
//  helpful for debugging tests 
//  WORKER_RESOURCES 
//  else use the exponential backoff logic and handle long overflow 
//  complete access to the blob 
//  STREAMS 
//  Reasonable size for a simple .class. 
// In order to avoid going over _maxNodes I may need to steal from   myself even though other pools have free nodes. so figure out how   much each group should provide 
//  =================  Factory Methods Declaring ModelOutputs to Default Stream  ================== 
//  persist the window in state 
//  Hdfs related settings 
// race condition with a delete 
//  TIME_SECS 
// 3 hour values 
//  No-op 
//  gets min/max task pairs (executors): [1 1] [2 3] ... 
// Tick should have flushed it 
//  Test for subject with no principals and acls set to WORLD_EVERYTHING 
//  create empty files in filesDir 
// Initialize a worker slot for every port even if there is no assignment to it 
//  explicit delete for ephmeral node to ensure this session creates the entry. 
//  for global cleanup   for an active worker's dir, make sure for the last "/" 
//  repartition so that state query fields grouping works correctly. this can be optimized further 
// The LogWriter in turn launches the actual worker. 
//  If the config consists of a single key 'config', its values are used   instead. This means that the same config files can be used with Flux   and the ConfigurableTopology. 
//  offset was not committed by this topology, therefore FirstPollOffsetStrategy applies   (only when the topology is first deployed). 
//  This is likely to happen when we try to commit something that   was cleaned up.  This is expected and acceptable. 
// cred-update-lock is not needed here because creds are being added for the first time. 
//  required   required   optional   optional   optional   optional   optional   optional   optional   optional 
//  ==================   Get PMML Model from Blobstore ================== 
/*      * Bolt-specific configuration for windowed bolts to specify the name of the field in the tuple that holds     * the message id. This is used to track the windowing boundaries and avoid re-evaluating the windows     * during recovery of IStatefulWindowedBolt      */
//  create metric for memory 
//  Kafka 
//  delete and recreate lock file   returns false if somebody else already deleted it (to take ownership) 
//  Maps a storm tuple to redis key and value 
// this will fail since jerry doesn't have either cpu or memory entries 
// Remove/Clean up changed requests that are not for us 
//  bolt that subscribes to the intermediate bolt, and auto-acks 
//  1) Delete absent file - should return false 
//  TRANSFERRED 
//  Test with a dummy test_subject for cases where subject !=null (security turned on) 
//  should synchronize supervisor so it doesn't launch anything after being down (optimization) 
//  default parallelism to 1 so if it's omitted, the topology will still function. 
//  pendingCommit has no entries 
//  query the streamState for each input task stream and compute recoveryStates 
//  required   optional   required 
//  reset for next run 
//  If that fails, fall back on the multitenant-scheduler.yaml file 
//  Back off 
//  SETTABLE 
//  if first retry then retry time  = current time  + initial delay 
// on windows, the host process still holds lock on the logfile 
//  each evicted partition has MAX_EVENTS_PER_PARTITION 
// The response should be empty, since you should not be able to list files outside the worker log root. 
//  TOTAL_EXECUTORS 
// Try to create the parent directory, may not work 
// Simulate time starts out at 0, so we are going to just leave it here. 
//  optional   optional 
//  required   optional   optional   optional 
//  disable it   log every 2 sec 
//  Handles tuple events (emit, ack etc.) 
//  BOOLVAL 
// Only log accesses that fetched something 
//  make sure that the error thread exits 
/*  LOOK AT HDFS BLOBSTORE AGAIN  */
//  check avoids multiple log msgs when spinning in a idle loop 
//  add 10 events 
// create test DNSToSwitchMapping plugin 
//  for the currently tested assignment a Map of the node to the components on it to be able to enforce constraints 
//  otherwise, tuples were emitted directly 
//  expiry is before next scheduled refresh). 
// If the system still has some free memory give them a grace period to 
//  Tuple contains String Object in JSON format   Tuple contains Java object that must be serialized to JSON by SolrJsonMapper 
//  topo4 has 12 small tasks, whose mem usage does not exactly divide a node's mem capacity 
//  bolt1, bolt2 should also receive from checkpoint spout 
//  Cache the msgs grouped by destination node 
//  Add unique identifier to each tuple, which is helpful for debugging 
//  The redis bolt (sink) 
/*                  * Since this is a tumbling window calculation,                 * we use all the tuples in the window to compute the avg.                  */
//  respectively. 
//  sleep for 10 seconds. 
//  create an array of the right type 
// Storm will try to get metrics from the spout even while deactivated, the spout must be able to handle this 
//  Initialization is only complete after the first call to  KafkaSpoutConsumerRebalanceListener.onPartitionsAssigned() 
//  Mock failure 
// update nextOffset; 
//  Based on how Java handles the classpath   https://docs.oracle.com/javase/8/docs/technotes/tools/unix/classpath.html 
//  ordered partition keys 
//  This should mean that we were pointed at a directory. 
//  renames files and returns the new file path 
//  leave the acked offsets and consumer position as they were to resume where it left off 
// Test for a user having read or write or admin access to read replication for a blob 
// Instead the scheduler lets you set the maximum heap size for any worker. 
/*      * Test time to schedule large cluster scheduling with fragmentation      */
//  when (for this iteration) 
//  can happen during shutdown of drpc while topology is still up 
//  Map[StreamName -> JoinInfo] 
//  size of the resource 
//  Leadership coordination may be incomplete when launchServer is called. Previous behavior did a one time check   which could cause Nimbus to not process TopologyActions.GAIN_LEADERSHIP transitions. Similar problem exists for 
//  should promote: only fetch storm bases of topologies that need scheduling. 
//  for faster insertion to RocksDB. 
//  Map[StreamName -> Map[Key -> List<Tuple>]  ] 
//  move of tmp to current so that the operation is atomic. 
//  SUPERVISOR_SUMMARIES 
// This needs to be appropriately large to drown out any time advances performed during topology boot 
//  not scheduled <=> never failed (i.e. never emitted), or scheduled and ready to be retried 
// If the node does not exist, then the version must be 0 
//  Wait interfal for retrying after first failure 
// Only add topologies that are not sharing nodes with other topologies 
//  read and ack remaining lines 
/*  CREATE THE BLOBSTORES  */
/*  Seqable  */
// new topology needs to be scheduled.  topo-4 should be evicted. Even though topo-1 from user jerry is older, topo-1 will not be evicted 
/* with auth */
//  warm up 60 seconds 
//  number of evicted events 
//  add in spouts as groups so we can get parallelisms 
//  1 -  Setup Kafka Spout   -------- 
//  Offset management 
// have the new credentials (pass it to the LoginContext constructor) 
// Check to see if the CGroup is mounted at all 
// emit cross-join of all emitted tuples 
/*  COPY EVERYTHING FROM LOCAL BLOBSTORE TO HDFS  */
// Check that the spout will reemit all 3 failed tuples and no other tuples 
//  Every executor has an instance of this class 
//  CUSTOM_OBJECT 
// Test substitution where the target type is List 
//  implementation for handling the failed messages retry logic 
/*          * The KafkaConsumer commitSync API docs: "The committed offset should be the next message your application will consume, i.e.         * lastProcessedMessageOffset + 1. "          */
//  should not throw 
//  Log the connection error only once 
//  try to get BlobMeta   This will check if the key exists and if the subject has authorization 
// TODO batch updating 
//  Configured for achieving max throughput in single worker mode (empirically found).    For reference : numbers taken on MacBook Pro mid 2015      -- ACKer=0:  ~8 mill/sec (batchSz=2k & recvQsize=50k).  6.7 mill/sec (batchSz=1 & recvQsize=1k)      -- ACKer=1:  ~1 mill/sec,   lat= ~1 microsec  (batchSz=1 & bolt.wait.strategy=Park bolt.wait.park.micros=0)      -- ACKer=1:  ~1.3 mill/sec, lat= ~11 micros   (batchSz=1 & receive.buffer.size=1k, bolt.wait & bp.wait =   Progressive[defaults])      -- ACKer=1:  ~1.6 mill/sec, lat= ~300 micros  (batchSz=500 & bolt.wait.strategy=Park bolt.wait.park.micros=0) 
// insure that if keytab is used only one login per process executed 
//  0 means DEFAULT_EVENT_LOOP_THREADS 
// test the happy path, emit batches in sequence 
//  print the values to stdout 
//  wait strategy when the netty channel is not writable 
// The following come from the JVm Specification table 4.4 
//  Called by flush-tuple-timer thread 
//  if an ack is received for a message then add it to the ackedPerShard TreeSet. TreeSet because while   committing we need to figure out what is the 
//  get trigger count value from store 
// Passed to workers in local clusters, exposed by thrift server in distributed mode 
//  Topology will not be able to be successfully scheduled: Config TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB=128.0 < 129.0,   Largest memory requirement of a component in the topology). 
//  IGroupMappingServiceProvider  
//  netty TimerTask is already defined and hence a fully   qualified name 
//  executor id is in form [start_task_id end_task_id] 
//  get per task components 
//  BOLTS 
/*                  * Verify that some ticks are received. The interval between ticks is validated by the bolt.                 * Too few and the checks will time out. Too many and the bolt may crash (not reliably, but the test should become flaky).                  */
//         oneProducer2Consumers();     // -- measurement 4 
//  add more events with a gap in ts 
// Error should not be leaked according to the code, but they are not important enough to fail the build if 
//  SUPERVISORS 
//  end of Test1 
// A copy of cluster that we can modify, but does not get committed back to cluster unless scheduling succeeds 
//  The jitter allows the clients to get the data at different times, and avoids thundering herd 
// Ranked last since rack-2 has not cpu resources 
//  read 1st line and ack 
// 3 seconds in milliseconds 
//  Use default, Storm-generated file names 
//  nothing expired yet 
//  should pass now 
//  filtered out 
//  sometimes Leader election indicates the current nimbus is leader, but the host was recently restarted,   and is currently not a leader. 
//  show a progress bar so we know we're not stuck (especially on slow connections) 
//  end of Test2 
//  TODO timestamps 
// ignore 
// the timeout thread handling 
// No slots to schedule for some reason, so skip it. 
//  end of Test3 
//  PARALLELISM_HINT 
//  Commit offsets that are ready to be committed for every topic partition 
//  It's likely that Bolt is shutting down so no need to throw RuntimeException   just ignore 
//  create empty file 
//  Testing whether acls are set to WORLD_EVERYTHING. Here the acl should not contain WORLD_EVERYTHING because   the subject is neither null nor empty. The ACL should however contain USER_EVERYTHING as user needs to have   complete access to the blob 
//  this assumes that inFields and outFields are the same for combineragg   assumption also made above 
//  converts a metadata string into a unique integer.  Updates the timestamp of the string 
//  if there will be legacy values they will be in the outer conf 
// wait until all workers, supervisors, and nimbus is waiting 
//  Construct a groups mapping for the FixedGroupsMapping class 
//  This is a test where we are configured to point right at an artifact dir 
//  2nd cond prevents staying stuck with consuming overflow 
/*                 * The elements having the same key within the window will be grouped                * together and their values will be reduced using the given reduce function.                *                * Here the result is a PairStream<String, Double> with                * 'stock symbol' as the key and the maximum price for that symbol within the window as the value.                 */
//  SECRET_VERSION 
//  get the directory to put uncompressed archives in 
// Expecting 4*2^(failCount-1) 
// Now we know for sure that this is a bad id 
//  Redis has a chunk but no more 
//  File order of MD5 calculation is significant. Sorting is done on   unix-format names, case-folded, in order to get a platform-independent   sort and calculate the same MD5 on all platforms. 
//  Result.create() states that "You must ensure that the keyvalues are already sorted." 
//  if one group subscribes to the same stream with same partitioning multiple times,   merge those together (otherwise can end up with many output streams created for that partitioning   if need to split into multiple output streams because of same input having different   partitioning to the group) 
//  global variables only used internally in class 
//  shard iterator corresponding to position in shard for failed messages 
//  1 - acquire lock on dir 
//  Find the most recent child and load that. 
// At-most-once mode must commit tuples before they are emitted to the topology to ensure that a spout crash won't cause replays. 
// cached supervisor doesn't show up 
// else leader (NOOP) 
//  val xor value 
//  2) check log file content line count == tuples emitted + 1 
//  return the first message to be retried from the set. It will return the message with the earliest retry time <= current time 
//  amount of data written and rotation policies 
// This is possibly lossy in the case where a value is deleted   because it has received no messages over the metrics collection   period and new messages are starting to come in.  This is   because I don't want the overhead of a synchronize just to have   the metric be absolutely perfect. 
// locate login configuration  
// The key was removed so we should delete it too. 
//  namely the two eds on the orphaned worker and the healthy worker 
//  No instantiation 
// Compute the stats for these and save them 
// Not for this topology so skip it 
// Generate some that have neither resource, to verify that the strategy will prioritize this last 
// not_jump (open in not strict mode) 
//  REQUESTED_ON_HEAP_MEMORY 
//  Split up GZIP_MAGIC into readable bytes 
//  6) check log file content line count == tuples emitted + 1 
//  after which nimbus-1 comes back up and a read or update is performed. 
//  get existing assignment (just the topologyToExecutorToNodePort map) -> default to {}   filter out ones which have a executor timeout   figure out available slots on cluster. add to that the used valid slots to get total slots. figure out how many executors   should be in each slot (e.g., 4, 4, 4, 5)   only keep existing slots that satisfy one of those slots. for rest, reassign them across remaining slots   edge case for slots with no executor timeout but with supervisor timeout... just treat these as valid slots that can be   reassigned to. worst comes to worse the executor will timeout and won't assign here next time around 
//  REQUESTED_OFF_HEAP_MEMORY 
//  first block (0% - 10%) 
//  END Metrics 
// if any error/exception thrown, just ignore. 
//  start threads after metadata cache created 
// No node for basePath is OK, nothing to remove 
//  Test with long value 
/*                 * create a stream of (word, 1) pairs                 */
// HBASE tokens are not renewable so we always have to get new ones. 
// task to run 
//  class 
// initialize with storm configuration 
// Kafka throws their own type of exception when interrupted.  Throw a new Java InterruptedException to ensure Storm can recognize the exception as a reaction to an interrupt. 
//  {metric -> win -> value} ==> {win -> metric -> value} 
// else local (NOOP) 
// return null to mount options in string that is not part of cgroups 
//  past limit, quit 
//  The whole bytes were not received yet - return null. 
//  Executor summaries 
// metrics rpc  
//  net_cls,ns is not supported in ubuntu 
/*      * Returns map from task -> componentId      */
//  very stream name matches, it stream name was specified 
//  build new metadata based on emitted records 
// Drop the change notifications we are not running anything right now 
// Lets build a topology. 
//  iterate over tuples in the current window 
// ignored 
// Supervisor admin 
//  while holding currentLock to avoid deadlocks 
// obtain a context object 
//  protected using a lock on this counter 
// Again we don't want to exit because of logging issues. 
//  validate search by topology id 
//  canonically the metrics data exported is time bucketed when doing counts.   convert the absolute values here into time buckets. 
//  1) Simulate lock file lease expiring and getting closed by HDFS 
//  tuple values are mapped with 
//  refresh interval in msec   last time the command was performed   env for the command execution 
//  max rounds of scanning the dirs 
//  if no configs from loader, try to read from user-resource-pools.yaml 
//  REQUEST_ID 
//  service is off now just interrupt it. 
// Fail tuple 5 and 3, call nextTuple, then fail tuple 2 
//  this bolt dosen't emit to downstream bolts 
// Check that a reemit emits exactly the same tuples as the last batch, even if Kafka returns more messages 
// TODO: add logging that not all tuples were received 
//  EXECUTE_LATENCY_MS 
// each context will have a single client channel worker event loop group 
//  try to find a way to merge this code with what's already done in TridentBoltExecutor 
//  {component id -> metric -> value}, note that input may contain both long and double values 
//  common fields 
// 0-4 compacted away 
//  A stream of words 
//  this is fine b/c we still have a watch from the successful exists call 
//  Now, let's advance time. 
//  IOException from reading the version files to be ignored 
//  does not block 
// Check that non-null meta makes the spout seek according to the provided metadata, and that the returned meta is correct 
//  class MockCollector 
// The global stream id is this + the from component it must be a part of. 
// Invalidate the cache as something on the node changed 
//  Suppressing exceptions as we don't care for errors on connection close 
// Ignored 
//  STORM_ID 
//  List to array conversion 
// locate our thrift transport plugin 
// Switch to CachedGauge if this starts to hurt performance 
/*                  * Declare a separate 'punctuation' stream per output stream so that the receiving bolt                 * can subscribe to this stream with 'ALL' grouping and process the punctuation once it                 * receives from all upstream tasks.                  */
//  sync sending, will return a SendResult 
//  ACKED 
// DO NOT CHANGE UNLESS WE ADD IN STATE NOT STORED IN THE PARENT CLASS 
// STORM-3372: Rotation policy other than TimedRotationPolicy causes NPE on cleanup 
// user with no impersonation acl should be reject 
//  this method expected to be thread safe 
// We are done, nothing that short is going to work here 
// if it is is 0 or less it really is 1 per 10 seconds. 
//  preCommit can be invoked during recovery before the state is initialized 
// If it is not set a lot of things are not really going to work all that well 
//  distributed mode 
//  add special pathspec of static content mapped to the homePath 
//  INimbusCredentialPlugin 
// Ack both emitted tuples 
//  RESET_LOG_LEVEL 
// use JsonSerializer as the default serializer 
//  We call fireChannelRead since the client is allowed to   perform this request. The client's request will now proceed   to the next pipeline component namely StormClientHandler. 
//  sliding interval 
// if DRPC spout then id contains function 
//  partial writes of prior lines 
//  Deletes the state inside the zookeeper for a key, for which the 
/*  ILookup  */
//  Disconnects don't fail. 
// Nimbus itself 
//  make the new assignments for topologies 
//  late tuple emitted 
// Was a try-cause but I looked at the code around this and key not found is not wrapped in runtime,   so it is not needed 
// user jerry submits another topology 
//  key1 shouldn't in iterator 
//  blobstore directory is private! 
//  the merged configs are only for the reset logic 
// Now see if we can create a new token for bob and try again. 
// create a socket with server 
//  remove offsetManagers for all partitions that are no longer assigned to this spout 
// We need to have 3 slots on 3 separate hosts. The topology needs 6 GPUs 3500 MB memory and 350% CPU   The bolt-3 instances must be on separate nodes because they each need 2 GPUs.   The bolt-2 instances must be on the same node as they each need 1 GPU   (this assumes that we are packing the components to avoid fragmentation).   The bolt-1 and spout instances fill in the rest. 
//  when (empty) 
// Remove any expired keys after possibly inserting new ones. 
// We're either going to empty, or starting fresh blob download. Either way, the changing blob notifications are outdated. 
/*  Verify that the following acked (now committed) tuples are not emitted again         * Since the consumer position was somewhere in the middle of the acked tuples when the commit happened,         * this verifies that the spout keeps the consumer position ahead of the committed offset when committing          */
// flushed the buffers completely 
//  go to next file 
//  subscribe to parent's punctuation stream 
/*                      * set the current timestamp as the reference time for the eviction policy                     * to evict the events                      */
//  RESOURCES 
// We cannot connect if there is no client section in the jaas conf... 
//  Metrics 
// Skip any resources where the total is 0, the percent used for this resource isn't meaningful.  We fall back to prioritizing by cpu, memory and any other resources by ignoring this value 
// initialCapacity set to 11 since its the default inital capacity of PriorityBlockingQueue 
//  Raw input data to be scored (predicted)   PMML Model read from file - null if using Blobstore   PMML Model downloaded from Blobstore - null if using File 
//  ======== poll ========= 
//         ackingProducerSimulation(); // -- measurement 6 
//  if we can't find the resources directory in a resources jar or in the classpath just create an empty   resources directory. This way we can check later that the topology jar was fully downloaded. 
//  1) acquire locks on file1,file2,file3 
//  Successfully decoded a frame. 
//  we'll assume the metadata was recently used if still in the cache. 
//  number of events per window-partition 
//  baseDir/supervisor/usercache/user1/filecache 
//  reuse the retrieved iterator 
//  Add cassandra cluster contact points 
// Fail all emitted messages except the first. Commit the first. 
//  string does not exist, create using an unique string id and add to cache 
//  this class should be combined with RegisteredGlobalState 
/* Keeping it for backward compatibility */
//  required   required   optional   optional   optional 
//  use zk servers as backup if they exist 
// It's more likely to be a file read exception here, so we don't differentiate 
//  3) Select a new file if one is not open already 
// In some cases we might be limiting memory in the supervisor and not in the cgroups 
// It is possible that this component is already scheduled on this node or worker.  If so when we backtrack we cannot remove it 
// test we can re-emit the second batch 
//  outputsFields can be empty if this bolt acts like a sink in topology. 
//  iterating multiple times should produce same events 
//  executor0 resides one one worker (on one), executor1 and executor2 on another worker (on the other node) 
//  RESET_LOG_LEVEL_TIMEOUT_SECS 
//  optional 
//  We are pretending to be nimbus here. 
// Wait for a leader to be elected (or topology submission can be rejected) 
//  a stateful processor immediately follows a window specification 
/* user NOT authorized */
//  STORM_VERSION 
/*      * Validator definitions      */
//  should fail 
//  batch sync sending 
//  don't emit anything .. allow configured spout wait strategy to kick in 
// Downloading of all blobs finished. This is the precondition for all codes below. 
// Initial timeout 1 second.  Workers commit suicide after this 
//  since s2 read last, it should be evicted, s1 and s3 should exist 
//  run() 
//  numMatchesSought, numMatchesFound, expectedNextByteOffset 
/*  validate memory settings  */
//  Set principal in RebalanceOptions to nil because users are not suppose to set this 
//  add tick tuple each second to force acknowledgement of pending tuples. 
//  has successfully authenticated with this server. 
//  if state found for this shard in zk, then set the sequence number in fetchedSequenceNumber 
// Failing tuples for partitions that are no longer assigned is useless since the spout will not be allowed to commit them if they later pass 
//  required   required   required   required   required   optional   optional   optional   optional   optional   optional 
// errors is a bit special because in older versions of storm the worker created the parent directories lazily   because of this it means we need to auto create at least the topo-id directory for all running topos. 
//  look  Impt: HDFS timestamp may not reflect recent appends, so we double check the   timestamp in last line of file to see when the last update was made 
// 2) Clear cache 
//  throwing an exception 
//  set upper limit to how much cpu can be used by all workers running on supervisor node.   This is done so that some cpu cycles will remain free to run the daemons and other miscellaneous OS   operations. 
//  this gets called repeatedly for no apparent reason, don't do anything 
//  join users and stores on city name 
//  For testing only.. invoked via reflection 
//  first stream's data goes into the probe 
//  fail fast 
//  host,port => WorkerSummary 
//  files are world-wide readable and owner writable 
//  Storm tuple to redis key-value mapper 
//  add configs from resources like hdfs-site.xml 
// / oldComponentDebug.keySet()/ newComponentDebug.keySet() maybe be APersistentSet, which don't support addAll 
//  since we made user not authorized, component map is empty 
//  create StateUpdater with the given windowStoreFactory to remove triggered aggregation results form store 
//  get all metadata from the cache to put into the database   use a new map to prevent threading issues with writer thread 
//  Avro strings are stored using a special Avro Utf8 type instead of using Java primitives 
// Don't error if timer is shut down, happens when the elector is closed. 
//  with 20 tuples per second.  
//  comma separated list of zk connect strings to connect to zookeeper e.g. localhost:2181 
//  we lose the race, but it doesn't matter 
// fall throw on purpose 
// Yes we can delete something that is not 0 because of races, but that is OK for metrics 
//  Remove old connections atomically 
//  enum conversion 
//  NOOP 
// Don't permit path traversal for calls intended to read from the daemon logs 
//  put bolt message first, then put task ids 
// Make sure the parent directory is there and ready to go 
// Nothing is assigned yet, should emit nothing 
//  filter sys streams if necessary 
//  calling chooseTasks should be finished before refreshing ring   adjusting groupingExecutionsPerThread might be needed with really slow machine   we allow race condition between refreshing ring and choosing tasks   so it will not make exact even distribution, though diff is expected to be small   given that all threadTasks are finished before refreshing ring, 
// There could be collisions if keyToString returns only part of a result. 
//  object handling zk interaction 
//  search for the remaining bucket metrics. 
// GAIN_LEADERSHIP is a system event so don't log an issue 
// Only keep important conf keys 
//  javax.jms objects 
//  get the last successfully committed state from state store 
// Since we only give up leadership if we're waiting for blobs to sync,  it makes sense to wait a full sync cycle before trying for leadership again. 
//  keys shouldn't appear twice 
//  filter 
// If any error/exception thrown, report directly to nimbus. 
// all time 
//  This should not happen (localhost), but if it does we are still OK 
/*                  * May be the task restarted in the middle and the state needs be initialized.                 * Fail fast and trigger recovery.                  */
//  async sending 
//  'generateOutputFields' enables us to avoid projection unless it is the final stream being joined 
// when topology was launched 
//  -- lock timeout 
//  =====================================================================================   helper main.methods   =====================================================================================
// Something odd happened try again later 
// Groups this user is authorized to impersonate. 
//  zk session timeout in milliseconds 
// stream overrides 
// We evicted enough topologies to have a hope of scheduling, so try it now, and don't evict more   than is needed 
//  ERROR 
//  attempt to find it in the string cache 
//  validate search by executor id 
//  DATA_SIZE 
//  intended to not guarding with try-with-resource since otherwise test will fail 
// since using StringWriter, we do not need to close it. 
// Waiting for spout tuples isn't strictly necessary since we also wait for bolt emits, but do it anyway 
// storm-core is needed here for backwards compatibility. 
//  EVENTLOG_HOST 
/*              Below regex uses negative lookahead to not split in the middle of json objects '{}'             or json arrays '[]'. This is needed to parse valid json object/arrays passed as options             via 'storm.cmd' in windows. This is not an issue while using 'storm.py' since it url-encodes             the options and the below regex just does a split on the commas that separates each option.             Note:- This regex handles only valid json strings and could produce invalid results             if the options contain un-encoded invalid json or strings with unmatched '[, ], { or }'. We can             replace below code with split(",") once 'storm.cmd' is fixed to send url-encoded options.               */
//  node -> topologyId -> double 
//  Return a SaslTokenMessageRequest object 
// The OutputStream is done 
//  ASSIGNED_OFF_HEAP_MEMORY 
//  level 2 - parkNanos(1L) 
// create a framed transport 
//  Wait until time out 
// clean up for resource isolation if enabled 
//  2 -   DevNull Bolt   -------- 
//  release the reference on all blobs associated with this topology. 
//  LAST_ERROR 
// Check that a blob can be deleted when a temporary file exists in the blob directory 
//  Fields with embedded commas or double-quote characters 
// This means 1 to maxUncommitteddOffsets, but not maxUncommittedOffsets+1...maxUncommittedOffsets+maxPollRecords-1 
//  MESSAGE_BLOB 
//  no-op for zookeeper implementation 
//  max number of files to delete for every round 
//  print lookup result with low probability 
// Only go off of the topology id for now. 
//  never rollback 
//  create another spout to take over processing and read a few lines 
//  if delay or delay + current time are bigger than long max value 
// In this case we are ignoring the coord stuff, and only looking at 
//  Maximum number of retries 
//  2 -  Setup IdBolt & DevNullBolt   -------- 
// {nodeId -> {topologyId -> {workerId -> {execs}}}} 
//  all the JMS un-acked messages are going to be re-delivered   so clear the pendingAcks 
//  add all the owners to the map 
//  Prefer local tasks as target tasks if possible 
// latest offset 
//  if first failure add it to the count map 
//  handle no input 
/* user authorized */
//  drop back down. 
//  imperative that don't emit any tuples from here, since output factory cannot be gotten until   preparation is done, therefore, receivers won't be ready to receive tuples yet   can't emit tuples from here anyway, since it's not within a batch context (which is only   startBatch, execute, and finishBatch 
//  topology to tracking of topology dir and resources 
//  we skip uploading first one since we don't test upload for now 
// This can happen if the supervisor crashed after launching a   worker that never came up. 
// generate some that has alot of cpu but little of memory 
//  loop through the arguments, if we hit a list that has to be convered to an array,   perform the conversion 
// In the second part of the test the rate doubles to 20 per second but the rate tracker   increases its result slowly as we push the 10 tuples per second buckets out and relpace them 
//  process stream definitions 
//  FAILED 
//  validate port 
//  not configurable to prevent change between topology restarts 
// No topologies running so NOOP 
//  for windowed bolt, windowed output collector will do the anchoring/acking 
//  inject output bolt 
//  Non Blocking. returns true/false indicating success/failure. Fails if full. 
// scan.setCaching(1000); 
// Fail only the last tuple 
//  required   required   required   required   required   required   required   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional 
//  consume file 1 partially 
//  Generate SASL response (but we only actually send the response if   it's non-null. 
//  generate random numbers 
//  do nothing except validate heartbeat for now. 
// retrieve authentication configuration  
//  send expire command for hash only once   it expires key itself entirely, so use it with caution 
//  Retry forever 
//  check is a minor optimization 
//  All writes/syncs will fail so this should cause a RuntimeException 
//  Now create a params map to put it in to our conf 
// By convention each share corresponds to 1% of a CPU core   or 100 = 1 core full time. So the guaranteed number of ms   (approximately) should be ... 
//  optional   optional   optional   optional 
// Returns messageIds in order of emission 
//  required   required   required   required   required   optional 
//  if fail count is greater than maxRetries, discard or ack. for e.g. for maxRetries 3, 4 failures are allowed at maximum 
/*  * EventHubs bolt configurations * * Partition mode: * With partitionMode=true you need to create the same number of tasks as the number of * EventHubs partitions, and each bolt task will only send data to one partition. * The partition ID is the task ID of the bolt. * * Event format: * The formatter to convert tuple to bytes for EventHubs. * if null, the default format is common delimited tuple fields.  */
//  guard NPE 
//  replaces normal aggregation here with a global grouping because it needs to be consistent across batches  
//  Add to our collection. 
// login our principal 
// find document from mongodb 
//  MSG 
// NO-OP 
// login our user 
// First check that maxUncommittedOffsets is respected when emitting from scratch 
//  1) Perform Join 
//  only host3 should be returned given filter 
// Verify correct wrapping/unwrapping of partition and delegation of partition assignment 
// for ChainedAggregator 
// Have a crummy cache to show off shared memory accounting 
//  if key already exists while creating the blob else update it 
// ensure that serializations are same for all tasks no matter what's on 
//  zk connection timeout in milliseconds 
// The following are required for backwards compatibility with clojure code 
//  spawn tar utility to untar archive for full fledged unix behavior such   as resolving symlinks in tar archives 
//        The contract of Rankable#copy() returns a Rankable value, not a RankableObjectWithFields. 
//  unauthorized 
// 1 create an already existing open file w/o override flag 
//  we could also make this static, but not to do it due to mock 
//  blobstore state 
//  key dir needs to be number 0 to number of buckets, choose one so we know where to look 
//  compute window length adjustment (delta) to account for time drift 
//  PROCESS_MS_AVG 
//  Backtracking algorithm does not take into account the ordering of executors in worker to reduce traversal space 
//  Ignore. 
//  Spout/Bolt object 
//  "************ Sampling Metrics ***************** 
// InputStream is done 
//  check if processor has specific priority first 
//  we skip uploading first one since we want to test rollback, not upload 
//  BITS 
//  Bolt implementation 
// read all the topologies 
//  required   optional   optional   optional   optional   optional   optional 
/*                  * Split the stream of numbers into streams of                 * even and odd numbers. The first stream contains even                 * and the second contains odd numbers.                  */
//  has been emitted and it is pending ack or fail 
//  if value is greater than Long.MAX_VALUE it truncates to Long.MAX_VALUE 
// use JsonScheme as the default scheme 
//  build components that may be referenced by spouts, bolts, etc.   the map will be a String --> Object where the object is a fully   constructed class instance 
//  If MapFunction is aware of prepare, let it handle preparation 
// two constructor signatures used to initialize validators.  One constructor takes input a Map of arguments, the other doesn't take any arguments (default constructor)  If validator has a constructor that takes a Map as an argument call that constructor 
// connect 
//  Configure for achieving max throughput in single worker mode (empirically found).       -- Expect ~5.3 mill/sec (3.2 mill/sec with batchSz=1)       -- ~1 mill/sec, lat= ~20 microsec  with acker=1 & batchSz=1 
//  Return a TaskMessage object 
//  static fields 
//  METRICS 
//  if maxRetries is 0, dont retry and return false as per interface contract 
//  find the number of data bytes + length byte 
//  SHARED_MEM_OFF_HEAP 
//  Add new connections atomically 
//  1 -  Setup StringGen Spout   -------- 
//  get num_tasks 
//  watermark events are not added to the queue. 
// Some mount options (i.e. rw and relatime) in type are not cgroups related 
// Bolts 
/*                          * Update histograms based on the new summary. Most common implementation of Reporter reports Gauges before                         * Histograms. Because DerivativeGauge will trigger cache refresh upon reporter's query, histogram will also be                         * updated before query                          */
//  employed when no incoming data   employed when outbound path is congested 
// Update the OffsetManager for each committed partition, and update numUncommittedOffsets 
//  Create keyspace not supported in the current datastax driver 
//  Suppressing exceptions as we don't care for errors on heartbeats 
// Schema changes should have forced file rotations 
//  Test3: When a supervisor and a worker on it fails, RAS does not alter existing assignments 
//  finish up reading the file 
//  baseDir/supervisor/usercache/ 
/*      * Passing a factory rather than the actual object to avoid enforcing the strong     * requirement of having to have ModelRunner to be Serializable      */
//  SCRIPT 
// Initial Setup 
//  string does not exist in database 
//  We don't use the classpath part of this, so just an empty list 
// Treat reassign as remove and add 
//  Get latest sequence number of the blob present in the zookeeper --> possible to refactor this piece of code 
// Throttle this spout a bit to avoid maxing out CPU 
//  whatever remains in the tab are non matching left rows. 
//  explicit anchoring emits to corresponding input tuples only, as default window anchoring will anchor them to all   tuples in window 
// Scheduling Status set to FAIL_OTHER so no eviction policy will be attempted to make space for this topology 
//  banner 
// We didn't find it, but there are races, so we want to check again after a sync 
//  empty if no factoryArgs 
//  Make the assignment null to let slot clean up the disk assignment. 
//  If authentication of client is complete, we will also send a   SASL-Complete message to the client. 
// race condition with another thread, and we lost   try again 
//  Convenience alternative to prepare() for use in Tests 
//  Use while loop, try to decode as more messages as possible in single call 
/*          * Windows should be aligned to the slide size, starting at firstWindowEndTime - windowSec.         * Because all windows are aligned to the slide size, we can partition the spout emitted timestamps by which window they should fall in.         * This checks that the partitioned spout emits fall in the expected windows, based on the logs from the spout and bolt.          */
//  it shouldn't propagate any exceptions 
/* Get one message at a time for backward compatibility behaviour */
// 3 seconds from now 
// Spout 
//  update the shard iterator to next one in case this fetch does not give the message. 
//  if it is local mode, just get the local nimbus instance and set the heartbeats 
//  ensure that choice1 and choice2 are not the same task 
// No need to extract it, it is not what we are looking for. 
/*                 * Queries the state and emits the                * matching (key, value) as results. The stream state returned                * by the updateStateByKey is passed as the argument to stateQuery.                 */
//  keep committing when topology is deactivated since ack and fail keep getting called on deactivated topology 
//  =====================================================================================   heartbeats related   ===================================================================================== 
//  Join helper to concat fields to the record 
//  convert all strings to numeric Ids for the metric key and add to the metadata cache 
// Once Storm is baselined to Java 11, we can use URLDecoder.decode(String, Charset) instead, which obsoletes this method. 
// make sure that defined key is string in case wrong stuff got put into Config.java 
//  Writing random words to be blacklisted 
//  more ACLs can be added here 
//  2) wait for all 3 locks to expire then heart beat on 2 locks and verify stale lock 
//  ID_TO_SPOUT_AGG_STATS 
// Emit all messages and fail the first one while acking the rest 
//  =====================================================================================   aggregation stats main.methods   =====================================================================================
//  1 - parse cmd line args 
//  schedule 1st topology 
//  A singleton instance allows us to mock delegated static main.methods in our   tests by subclassing.
//  We purposely simulate a 1 second bucket size so the rate will always be 10 per second. 
// wordspout -> lookupbolt 
//  STRING_ARG 
//  you cant define a topologySource and a DSL topology at the same time... 
//  can be null;   nested field "x.y.z"  becomes => String["x","y","z"]   either "stream1:x.y.z" or "x.y.z" depending on whether stream name is present. 
//  Task Id not used, so just pick a static value 
// make sure all workers on scheduled in rack-0 
//  REQUESTED_MEMOFFHEAP 
// For testing... 
// Parallelism is double 
// Two distinct schema should result in only two files 
//  initialize server-side SASL functionality, if we haven't yet   (in which case we are looking at the first SASL message from the 
// This spout owns 1 partitions: 6 
//  Then get it and return the file as string. 
// Sliding windows should produce one window every slideSize tuples  Wait for the spout to emit at least enough tuples to get minBoltEmit windows and at least one full window 
// Add in all of the components 
// Monitor for assignment changes as often as possible, so e.g. shutdown happens as fast as possible. 
//  User defined Callback 
// Let worker tokens work on insecure ZK... 
// We were rescheduled while waiting for the resources to be updated,   but the container is already not running. 
// nodeHost is not null here, as newConnections is only non-empty if assignment was not null above.   Host   Port 
//  supervisor port should be only presented to worker which supports RPC heartbeat 
//  update the value in state 
//  The first seek offset for each topic partition, i.e. the offset this spout instance started processing at. 
//  Cassandra daemon calls System.exit() on windows, which kills the test. 
// Rotate once per timeout period that has passed since last time this was called.  This is necessary since this method may be called at arbitrary intervals. 
// Timer is discarded after the initial launch of an assignment 
// check resources 
//  later on, this will be joined back with return-info and all the results 
//  based on transactional topologies 
// Thread.sleep(120); 
//  JMS Queue Provider 
// remove resources 
// This is to verify that a low maxPollRecords does not interfere with reemitting failed tuples 
// If the node does not exist it is fine/expected... 
//  default is a sliding window of count 1 
/*           Verify that failed offsets will only retry if the corresponding message exists.           When log compaction is enabled in Kafka it is possible that a tuple can fail,           and then be impossible to retry because the message in Kafka has been deleted.          The spout needs to quietly ack such tuples to allow commits to progress past the deleted offset.          */
//  BOOL_ARG 
//  distribution should be exactly even 
//  attempt to find it in callers cache 
//  benchmark label 
//  messages. 
// Merge the old credentials so creds nimbus created are not lost.   And in case the user forgot to upload something important this time. 
//  generated code will be not compilable since return type of MYPLUS and type of 'x' are different 
//  examine the response message from server 
//  force triggers building ring 
//  Nothing here, could not get message id 
//  required 
//  try to use zookeeper secret 
/*      * Check for uncaught exceptions during the execution     * of the trigger and fail fast.     * The uncaught exceptions will be wrapped in     * ExecutionException and thrown when future.get() is invoked.      */
// We need to re-login some other thread might have logged into hadoop using   their credentials (e.g. AutoHBase might be also part of nimbu auto creds) 
//  When this master is not leader and get a sync request from node,   just return nil which will cause client/node to get an unknown error,   the node/supervisor will sync it as a timer task. 
//  size matches, check if the streams are expected 
//  emulate the call of withLateTupleStream method 
// We set the stddev of the skewed keys to be 1/5 of the length, but then we use the absolute value   of that so everything is skewed towards 0 
//  storm hbase keytab /etc/security/keytabs/storm-hbase.keytab 
//  if there are no windowed/batched processors, we would ack immediately 
// The spout should not emit any more tuples. 
//  Helper static vars for each platform 
//  TASK_END 
//  DO NOT CHANGE THIS TO SYSOUT 
//  1- try adding to main queue if its overflow is not empty 
// bolt-1  bolt-2  bolt-3 
//  if no new assignment. 
//  Generally used to compare how files were actually written and compare to expectations based on total 
// do retries if the connect fails 
//  then stop running it 
//  COMMON_STATS 
//  Find the task the events from this component route to. 
//  handle Ctrl-C 
//  if the empty partition was not invalidated by flush, but evicted from cache 
//  componentExecutors maybe be APersistentMap, which don't support "put" 
// It is possible to get asked about eviction before we have a context, due to WindowManager.compactWindow.  In this case we should hold on to all the events. When the first watermark is received, the context will be set,  and the events will be reevaluated for eviction 
//  add tuple to the batch state 
//  Redis config parameters for the RedisStoreBolt 
//  this is fine because the only time this is shared is when it's a local context, 
//  USED_PORTS 
//  SCHEDULER_META 
//  the oldest pq_size files in this directory will be placed in PQ, with the newest at the root 
//  required   optional 
// make sure all workers on scheduled in rack-1 
//  7) read remaining lines in file, then ensure lock is gone 
//  get a currently unused unique string id 
//  Use streamId, source component name OR field in tuple to distinguish incoming tuple streams 
// The spout must reemit retriable tuples, even if they fail out of order.  The spout should be able to skip tuples it has already emitted when retrying messages, even if those tuples are also retries. 
//  business logic. 
// user jerry submits another topology but this one should be scheduled since it has higher priority than than the 
// The last slot fill it up 
// Operation level IO Exceptions 
//  Extract bolt resource info 
//  EXECUTED 
//  sort by port: from small to large 
// Sort comps by number of constraints 
// Build new metadata based on the consumer position.  We want the next emit to start at the current consumer position,  so make a meta that indicates that position - 1 is the last emitted offset  This helps us avoid cases like STORM-3279, and simplifies the seek logic. 
// Emit 10 empty batches, simulating no new records being present in Kafka 
//  In at-most-once mode the offsets are committed after every poll, and not periodically as controlled by the timer 
// Test if topology is already partially scheduled on one rack 
//  ASSIGNED_SHARED_OFF_HEAP_MEMORY 
/*          * total tuples should be         * recovered (batch-1 + batch-2) + replayed (batch-3)          */
//  It's possible that permissions were not set properly on the directory, and   the user who is *supposed* to own the dir does not. In this case, try the   delete as the supervisor user. 
// Create the directory no matter what. This is so we can check if it was downloaded in the future. 
// Busy wait... 
// short 
// Check that the emitter can handle emitting empty batches on a new partition.  If the spout is configured to seek to LATEST, or the partition is empty, the initial batches may be empty 
//  String metastoreDBLocation = "jdbc:derby:databaseName=/tmp/metastore_db;create=true";   conf.set("javax.jdo.option.ConnectionDriverName","org.apache.derby.jdbc.EmbeddedDriver");   conf.set("javax.jdo.option.ConnectionURL",metastoreDBLocation); 
// This is here to avoid an overridable call in the constructor 
// pending is empty, return the smallest in toResend 
//  attempt scheduling both topologies.   this triggered negative resource event as the second topology incorrectly scheduled with the first in place 
// Ignored the file system we are on does not support this, so don't do it. 
//  kill process when timeout 
// find login file configuration from Storm configuration 
//  compareAndSet added because of https://issues.apache.org/jira/browse/STORM-1535 
// Test for subject with no principals 
//  ################# Connect Callback Implementation ###################### 
//  in other case, just set this to 0 to trigger re-sync later 
//  force process to be terminated 
//  Acquire a slot 
//  returns list of list of slots, reverse sorted by number of slots 
// play and fail 1 tuple 
//  delete 
//  doing below because its affecting storm metrics most likely   had to make tick tuple a mandatory argument since its positional 
// Thread safety is mostly around acl.  If acl needs to be updated it is changed atomically  More then one thread may be trying to update it at a time, but that is OK, because the  change is atomic 
// Could be replaced when metrics support remove all functions   https://github.com/dropwizard/metrics/pull/1280 
//  required   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional   optional 
// else we assume it is the same as teh SUPER_ACL which is covered by CREATOR_ALL 
//  topo5 has 40 small tasks, it should be able to exactly use up both the cpu and mem in the cluster 
//  Ensure that the original batch1 is discarded and new one is persisted. 
// It was not there before so we need to run it. 
//  A stream of random sentences 
//  no reference to archive1 
// By default all of the values are 0 
//  object representing information on paramaters to use while connecting to kinesis using kinesis client 
//  1) read 5 lines in file 
//  A no-op grouper 
// Release things that don't need to wait for us 
//  trigger manually to avoid timing issues 
//  actual value of m is: Map<String, Map<String/GlobalStreamId, Long/Double>> ({win -> stream -> value}) 
// File 2 should be read 
//  check to see if any shard has already fetched records waiting to be emitted, in which case dont fetch more 
//  for testing 
// In local mode the main process should never exit on it's own 
// First delete everything that no longer exists... 
//  KILL_OPTIONS 
//  additional tests that go beyond what this test is primarily about 
// Old Buckets and their length are only touched when rotating or gathering the metrics, which should not be that frequent   As such all access to them should be protected by synchronizing with the RateTracker instance 
// a null tuple should be added to the ack list since by definition is a direct ack 
// Don't know a better way to validate that it failed. 
// The tick should NOT cause any acks since the batch was empty except for acking itself 
//  We have three mutually disjoint treesets per shard at any given time to keep track of what sequence number   can be committed to zookeeper.   emittedPerShard, ackedPerShard and failedPerShard. Any record starts by entering emittedPerShard. On ack   it moves from emittedPerShard to   ackedPerShard and on fail if retry service tells us to retry then it moves from emittedPerShard to   failedPerShard. The failed records will move from   failedPerShard to emittedPerShard when the failed record is emitted again as a retry.   Logic for deciding what sequence number to commit is find the highest sequence number from ackedPerShard   called X such that there is no sequence   number Y in emittedPerShard or failedPerShard that satisfies X > Y. For e.g. if ackedPerShard is 1,4,5,   emittedPerShard is 2,6 and   failedPerShard is 3,7 then we can only commit 1 and not 4 because 2 is still pending and 3 has failed 
//  use exhibitor servers 
//  reserved for saving topology data 
//  Map of records  that were fetched from kinesis as a result of failure and are waiting to be emitted 
//  this is so we can do things like have simple DRPC that doesn't need to use batch processing 
//  Stop iterating in the middle of the 10th partition 
//  COMPONENT_TYPE 
//  Configure the server. 
// Assign partitions to the spout 
//  ok if its return null 
// Should assert file size 
//  APPROVED_WORKERS 
//  JMS Queue Spout 
//  First make the cache dir 
// Emit some more messages 
// Just in case we get something we are confused about   we can continue processing the rest of the tasks 
//  We need to add the new futures to the existing ones 
//  Logging an exception while client is connecting 
// The scheduler generally will try to pack executors into workers until the max heap size is met, but   this can vary depending on the specific scheduling strategy selected.   The reason for this is to try and balance the maximum pause time GC might take (which is larger for larger heaps)   against better performance because of not needing to serialize/deserialize tuples. 
//  wordSpout ==> countBolt ==> MongoInsertBolt 
//  IS_LEADER 
// unknown error, just skip 
//  =================  Factory Methods Declaring ModelOutputs to Multiple Streams  ================== 
//  SESSION 
//  EXECUTOR_NODE_PORT 
//  index and fieldIndex are precomputed, delegates built up over many operations using persistent data structures 
//  VALIDATION ONLY CONFIGS   Some configs inside Config.java may reference classes we don't want to expose in storm-client, but we still want to validate   That they reference a valid class.  To allow this to happen we do part of the validation on the client side with annotations on   static final members of the Config class, and other validations here.  We avoid naming them the same thing because clojure code   walks these two classes and creates clojure constants for these values. 
//  PULSES 
//  common 
//  required for jackson serialization 
//  timestamp in millisecond, 0 means   disabling filter 
// TODO batch finding 
//  perf critical loop. dont use iterators 
//  COMPONENT_ID 
//  -- commit frequency - seconds 
// There is a race here that we can still lose 
// JPROFILE STOP 
// class 
/*      * aggWorkerStats tests      */
// Break the code if out of sync to thrift protocol 
//  server. 
// status of scheduling the topology e.g. success or fail? 
// with realm e.g. storm@WITZEND.COM 
//  calc sid->output_stats 
//  MS 
//  The removed writer should have been closed 
//  (JMOCK-263).  See https://github.com/jmock-developers/jmock-library/issues/22 for more information. 
//  convert each record into a HashMap using fieldNames as keys 
// used for local cluster heartbeating 
//  SERVICE_TYPE 
//  apply new log settings we just received 
//  g1 being null means the source is a spout node 
/*  LOOK AT HDFS BLOBSTORE  */
// The first tuple should be acked, and should not have failed 
// This section simply put the formatted log filename and corresponding port in the matching. 
//  TOPO_OWNER 
//  filter configured, should fail all users 
//  Validating class implementation could fail on non-Nimbus Daemons.  Nimbus will catch the class not found on startup   and log an error message, so just validating this as a String for now. 
//  3 - if clocks are not in sync .. 
//  JDK_VERSION 
//  4) Read record from file, emit to collector and record progress 
//  This should always be set to digest. 
// We were rescheduled while waiting for the worker to come up 
//  get from DB and add to lookup cache 
//  list all files for this topology 
// examine the response message from server 
// Alice has no digest jaas section at all... 
//  test basic substitution 
//  monotonically increasing id for correlating sent/recvd msgs. ok if restarts from 0 on crash. 
//  for unit tests 
//  just mkdir STORM_ZOOKEEPER_ROOT dir 
// Nothing else should be emitted, all tuples are acked except for the final tuple, which is pending. 
//  TOPOLOGY_NAME 
//  ensure checkpoint interval is not less than a sane low value. 
//  END TOPOLOGY STATE TRANSITIONS 
// get metric name 
//  matches and matchCount is not changed 
// But throughput is the same 
/* without Auth */
//  CREDS 
//  tracks order in which msg came in 
// The first tuple wil be used to check timeout reset 
//  hbase principal storm-hbase@WITZEN.COM 
//  write the tuple to a JMS destination... 
// call updateMetricFromRPC with params 
// This is here only for testing. 
//  Do nothing 
//  Preserve interrupt status 
//  How many states searched so far. 
//  NOOP no need to create links in local mode 
//  Usage: Let it and then explicitly terminate.   Metrics will be printed when application is terminated. 
/*                      * propagate it so that task gets canceled and the exception                     * can be retrieved from executorFuture.get()                      */
//  allow blacklist scheduler to cache the supervisor with an added port 
//  flushes local and remote messages 
// to allow the revocation hook to commit offsets for the revoked partitions. 
//  roll to next 
//  topology will be scheduled 
// Ensure filename doesn't contain ../ parts  
//  re-init cache and partitions 
//  Boilerplate overrides to cast result from base type to JoinBolt, so user doesn't have to   down cast when invoking these main.methods
// case 2: Non-IContext plugin must have a makeContext(topoConf) method that returns IContext object 
// metrics has just been collected, let's also log it 
//  Not exposed:   * withClock(Clock) 
//  validate search by component id 
//  remove any previously created cache instance 
// release earliest blacklist - but release all supervisors on a given blacklisted host. 
// Stop counting when past current time 
//  this can happen when multiple clients doing mkdir at same time 
//  remove uploaded jars blobs, not artifacts since they're shared across the cluster 
// creates brand new tuples with brand new fields 
// Topology metrics distribution 
//  it's a method with zero args 
// If not call default constructor 
//  it's non-null. 
// STORM-3087. 
// Done capturing topology information... 
//  ======== Next Tuple ======= 
//  the metrics processor is not critical to the operation of the cluster, allow Supervisor to come up 
//  add more events with past ts 
/*      * force create a windowed bolt with identity nodes so that we don't     * have a stateful processor inside a windowed bolt.      */
//  INT_ARG 
//  configs - kafka spout 
//  It's likely that Bolt is shutting down so no need to die.   just ignore and loop will be terminated eventually 
//  get all the tuples in a batch and add it to trident-window-manager 
//  do not process current timestamp since tuples might arrive while the trigger is executing 
// When tuple tracking is enabled, the spout must not replay tuples in at-most-once mode 
//  if there are no records do not call flush 
//  add a null for missing fields (usually in case of outer joins) 
// We don't want to run the test is CGroups are not setup 
// Initialize the network topography 
//  read remaining lines 
//  resolve references 
//  for completeness 
// The topology we are scheduling 
//  should still fail 
//  ============  Factories  ============ 
//  Test2: When a supervisor fails, RAS does not alter existing assignments 
//  start trigger once the initialization is done. 
//  reference to key2 
// backtracking (If we ever get here there really isn't a lot of hope that we will find a scheduling) 
//  Kafka consumer configuration 
//  ensure 1 instance per producer thd. 
//  WINDOW_TO_COMPLETE_LATENCIES_MS 
// Ignored it is not set 
// Now fail a tuple on partition one and verify that it is allowed to retry, because the failed tuple is below the maxUncommittedOffsets limit 
/*  Ack the tuple, and commit.         *          * The waiting to emit list should now be cleared, and the next emitted tuple should be the last tuple on the partition,         * which hasn't been emitted yet          */
//  be kept in memory to avoid going to kinesis again for retry 
/*  Counted  */
//  isset id assignments 
//  the supervisors. this also allows you to declare the serializations as a sequence 
// Should not show files outside daemon log root. 
//  class FileLockingThread 
//  Closing the channel and reconnecting should be done before handling the messages. 
//  All internal state except for the count of the current bucket are 
//  if # of workers requested is more than we currently have 
//  STREAM_ID 
//  PATH 
// Now add some more events and a new watermark, and check that the previous events are expired 
// tasks figure out what tasks to talk to by looking at topology at runtime 
/*          * Instead of iterating over all the tuples in the window to compute         * the sum, the values for the new events are added and old events are         * subtracted. Similar optimizations might be possible in other         * windowing computations.          */
// Answer when we ask for a private key... 
//  ======== Fail ======= 
//  SCHED_STATUS 
//  pick a worker to mock as failed 
//  batch 1 
//  no data 
// Offset 0 is committed, 1 to maxUncommittedOffsets - 1 are failed but not retriable  The spout should now emit another maxPollRecords messages 
//  only start those requested 
// set to use the default resource aware strategy when using the MultitenantResourceAwareBridgeScheduler 
/*      * Bolt-specific configuration for windowed bolts to specify the window length as a count of number of tuples     * in the window.      */
//  TOPOLOGY_CONF 
// check format 
//  remove the port from the supervisor and make sure the blacklist scheduler can remove the port without 
// create a wrap transport factory so that we could apply user credential during connections 
//  component id -> stats 
//  invalidate after releasing the lock   if the parition is pinned before we could invalidate,   it will get invalidated in the next flush or when the entry gets evicted from the cache. 
// Link the components together 
//  Mark the current buffer position before reading task/len field   because the whole frame might not be in the buffer yet.   We will reset the buffer position to the marked position if 
//  attempt to find it in the string cache, this will update the LRU 
//  Kafka spout configuration 
//  json record doesn't need columns to be in the same order   as table in hive. 
/*      * The interval between retries of an Exhibitor operation.      */
//  value fields 
// Running in daemon mode, we would pass Error to calling thread. 
//  batch 2 
//  resources assigned by RAS (Resource Aware Scheduler) 
//  c.f. org.apache.hadoop.security.UserGroupInformation. 
// We found a good result we are done. 
// pending is still empty 
//  informs other workers about back pressure situation. Runs in the NettyWorker thread. 
// Sleep for 50 mins 
//  Legacy resource parsing 
//  required   required 
//  last offset of this batch 
// given processornodes and static state nodes 
/*  CREATE THE BLOBSTORE  */
// The window boundaries are )windowStart, windowEnd) 
//  batch 3 
//  e.g. [\"a\", \"b\", \"a\"]) => [\"a\", \"b\", \"a#2\"]" 
// STORM-3059 
// We could make this configurable in the future... 
//  sub process used to execute the command 
//  that worker is running and moves on 
//  map to track next retry time for each kinesis message that failed 
//  EXECUTOR_STATS 
//  rwx-------- 
//     long crc32(Tuple tuple); 
//  SPOUT 
//  need more data 
//  wait so all events expire 
// Create a new session id if the user gave an empty session string.   This is the use case when the user wishes to list blobs   starting from the beginning. 
//  HOST 
//  to be called after all Executor objects in the worker are created and before this object is used 
//  Redis has three chunks which last chunk only has entries 
//  Read property file for extra consumer properties 
// If debug logging is turned on we should just log the leader all the time.... 
//  If lock file has expired, then own it 
// iterate of WorkerSummary and find the one with the port 
// Now we can calculate a percentage 
//  Queue of records per shard fetched from kinesis and are waiting to be emitted 
//  Change the '1' to e.g. 5, to change this to 5 minutes. 
//  TIME_STAMP 
// spout overrides 
// merge with existing statuses 
//  at least 4K 
//  sorted set of records to be retrued based on retry time. earliest retryTime record comes first 
// check that only subscribed to one component/stream for statespout  setsubscribedstate appropriately 
//  Factory main.methods
//  Get sequence number details from latest sequence number of the blob 
/*                  * Create a stream of random numbers from a spout that                 * emits random integers by extracting the tuple value at index 0.                  */
//  Schedule topology history cleaner 
//  will commit progress into lock file if commit threshold is reached 
//  2 - Create and configure topology 
// map to hold partition level and topic level metrics 
//  setup some files/dirs to emulate supervisor restart 
// The versions are different so roll back to whatever current is 
// only for test 
// supervisor contains bad slots 
//  could/should use readFully(buffer,0,length)?
// Save the current state for recovery 
//  sub directories to store either files or uncompressed archives respectively 
//  DEPENDENCY_JARS 
//  K/sec 
// The subset of earliest retriable offsets that are on pollable partitions 
// Convert to millis 
//  WORKER_SUMMARIES 
//  class Configs 
//  We call fireChannelRead since the client is allowed to perform   this request. The client's request will now proceed to the next 
//  -- enable/disable ACKing 
//  if no TGT, do not bother with ticket management. 
// fileOffset = the index of last scanned file 
// The failed tuples are ready for retry. Make it appear like 0 and 1 on the first partition were compacted away.  In this case the second partition acts as control to verify that we only skip past offsets that are no longer present. 
// Worker dirs 
// At this point there is nothing to do.  In all likelihood any filesystem operations will fail.  The next tuple will almost certainly fail to write and/or sync, which force a rotation.  That  will give rotateAndReset() a chance to work which includes creating a fresh file handle. 
//  required   required   required   required   required   required 
//     final StormTopology topology; 
// logLevel 
//  in which case it's a noop 
// Verify that the poll started at the earliest retriable tuple offset 
//  now check memory only 
//  continue without idling 
//  init the writer once the cache is setup 
//  this is because can't currently merge splitting logic into a spout   not the most kosher algorithm here, since the grouper indexes are being trounced via the adding of nodes to random groups, but it 
//  Load PMML Model from Blob store 
// add to nimbuses 
// On heap memory is used to help calculate the heap of the java process for the worker   off heap memory is for things like JNI memory allocated off heap, or when using the   ShellBolt or ShellSpout.  In this case the 16 MB of off heap is just as an example   as we are not using it. 
//  expectedOwner being null means that security is disabled (which why are we uploading credentials with security disabled??? 
// AllowedId is null in the constructor, so it can assign what it needs/etc. 
// Verify that no more tuples are emitted and all tuples are committed 
/*                  * Emitted messages for partitions that are no longer assigned to this spout can't be acked and should not be retried, hence                 * remove them from emitted collection.                  */
//  treat supervisor as bad only if all of its slots matched the cached supervisor   track how many times a cached supervisor has been marked bad 
//  spouts 
//  ack-ed once 
//  Get or load from the cache optionally pinning the entry   so that it wont get evicted from the cache 
//  key for hdfs Kerberos configs 
//  BUG: Grizzly needs a doc root if you are going to register multiple adapters 
//  we don't need to retry this operation in the case of failure   as ZK will remove ephemeral files and we don't wanna hang   this process when closing if we cannot reconnect to ZK 
//  This is likely a problem, it means that file reloading is broken, probably because the   directory we are watching was deleted or otherwise became inaccessible (unmounted, permissions   changed, ???).   For now, we log an error and exit the watcher thread. 
//  FIXME this was originally 5 seconds, but realistically, on random/slow/virt hosts, there is no way to guarantee this 
//  This is a bit weird but we need to return the address and the number of   bytes (to distinguish between IPv4 and IPv6 
//  a bit of a hack, but delete(/) will never succeed and ensures   that the same semantics are maintained 
//  Everything is a go, simply start counting the ticks   WARNING: I couldn't find any wait statement on a synchronized   block that would be notified by this notifyAll() call, so   I commented it out  synchronized (this) {      notifyAll();  }   We ping twice a tick, so we only update the tick every other 
//  TODO(ivmaykov): Not sure if cnxn can be null here. It becomes null if channelInactive()   or exceptionCaught() trigger, but it's unclear to me if userEventTriggered() can run   after either of those. Check for null just to be safe ... 
//  could not create tmp directory to hold JAAS conf file : test will   fail now. 
//  FIXME this test is Assert.failing due to client close race condition fixing in separate patch for ZOOKEEPER-63      /**       * this test checks to see if the sessionid that was created for the       * first zookeeper client can be reused for the second one immidiately       * after the first client closes and the new client resues them.       * @throws IOException       * @throws InterruptedException       * @throws KeeperException       */ 
//  TODO: need to tune the default value of thread size 
//  TODO refactor QuorumBase to be special case of this 
//  This might not be 100% right, but it's only used for printing   connection info in the netty implementation so it's probably ok. 
//  Problem 2: Before fix, after session close the ephemeral node   was not getting deleted. But now after the fix after session close 
/*          * Observer should write to disk, so that the it won't request         * too old txn from the leader which may lead to getting an entire         * snapshot.         *         * However, this may degrade performance as it has to write to disk         * and do periodic snapshot which may double the memory requirements          */
/*          * Occasionally seen false negatives with a 5s timeout.          */
//  TODO - investigate why reconfig makes qps null. 
//  TODO: if zks.processPacket() is changed to take a ByteBuffer[],   we could implement zero-copy queueing. 
//  Note that this performance assumption might not hold true for architectures other than x86_64. 
//  Note: the new buffer size is a hint and socket implementation   is free to ignore it, so we don't verify that we get back the   same value. 
// TODO should this be synchronized? 
// TODO: use a factory rather than a switch 
//  XXX No need to do anything 
//  Session has not been re-validated ! 
//  It is sad that isro and srvr are used by ZooKeeper itself. Need fix this   before deprecating 4lw. 
//  TODO we need to figure out the security requirement for this! 
//  Problem 1: Follower had one extra ephemeral node /e1 
//  TODO: in the future, serverId should be validated for all cases, not just the extendedEphemeralTypesEnabled case   TODO: however, for now, it would be too disruptive 
/*              * Since requests are processed in order, we better get a response             * to the first request!              */
//  this is ugly, you have a better way speak up 
//  An authentication error occurred during authentication with the Zookeeper Server. 
/*  TODO: (br33d) we should either put a ConcurrentHashMap on restore()             *       or use Map on save()  */
//  TODO: this doesn't use a quorum verifier 
/*  a mocked ZK class that doesn't do client-side verification     * before/after calling removeWatches  */
//  this shouldn't be necessary (wrapping data with string)   but without it there are problems on the server - ie it   hangs for 30 seconds and doesn't get the data.   TODO investigate 
//  Try to provide hints to use about what went wrong so they can fix their configuration.   TODO: introspect about e: look for GSS information. 
// FIXME: I don't want to have to serialize it here and then         immediately deserialize in next processor. But I'm         not sure how else to get the txn stored into our list. 
// ////////////////   these internal classes are public, but should not generally be referenced. 
//  FIXME: IPv6 is not supported. Using something like Guava's HostAndPort          parser would be good. 
//  this is really a programmatic error and not something that can   happen at runtime 
//  We add backwards since we are pushing into the front   Only send if there's a pending watch   TODO: here we have the only remaining use of zooKeeper in   this class. It's to be eliminated! 
//  TODO: Rather than checking a disjunction here, should be a single member   variable or method in this class to determine whether the client is   configured to use SASL. (see also ZOOKEEPER-1455). 
//  TODO: maybe we should flush in the loop above every N packets/bytes?   But, how do we determine the right value for N ... 
//  Uh oh.  We need to upgrade before we can proceed. 
//  TODO: exit server at this point(?) 
//  only make a copy if this thread isn't already holding a lock 
//  Multiple bad arguments 
//  XXX this doesn't need to be volatile! (Should probably be final) 
//  test will still fail even though we just log/ignore 
//  FIXME ignore for now 
//  XXX We really should NOT need this!!!! 
//  XXX hack 
//  not sure about 3rd arg..what is it? 
// FIXME: need way to more cleanly serialize/deserialize exceptions 
//  small chance that an unexpected message was delivered    after this check, but we would catch that next time 
//  Warning: this will reset the x509Util 
//  a little hacky way to detect key type, but it works 
/*              * The following sequence of code is stupid! You would think that             * only sock.close() is needed, but alas, it doesn't work that way.             * If you just do sock.close() there are cases where the socket             * doesn't actually close...              */
//  todo not every tmp directory needs this file 
//  XXX This shouldn't be needed, but just in case 
/*  * A bunch of constants. * TODO: will get rid of it eventually.  */
//  TODO: can not name this method getState since Thread.getState()   already exists   It would be cleaner to make class SendThread an implementation of   Runnable 
//  handle below: might be harmless if the user doesn't intend to use JAAS authentication. 
//  Should never call this: SASL authentication is negotiated at session initiation.   TODO: consider substituting current implementation of direct ClientCnxn manipulation with   a call to this method (SASLAuthenticationProvider:handleAuthentication()) at session initiation. 
//  Note, we may exceed our max length by a bit when we add the last   watch in the batch. This isn't ideal, but it makes the code simpler. 
//  Make the snapshot directory read only 
//  Ensure that we can convert all valid integers to EventTypes 
/*  notify the client the session is closing and close/cleanup socket  */
//  shutdown previous zookeeper 
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#children()          */
/*      * Converting an observer into a participant may sometimes fail with a     * NewConfigNoQuorum exception. This test-case demonstrates the scenario.     * Current configuration is (A, B, C, D), where A, B and C are participant     * and D is an observer. Suppose that B has crashed (or never booted). If a     * reconfiguration is submitted where D is said to become a participant, it     * will fail with NewConfigNoQuorum since in this configuration, a majority     * of voters in the new configuration (any 3 voters), must be connected and     * up-to-date with the leader. An observer cannot acknowledge the history     * prefix sent during reconfiguration, and therefore it does not count towards     * these 3 required servers and the reconfiguration will be aborted. In case     * this happens, a client can achieve the same task by two reconfig commands:     * first invoke a reconfig to remove D from the configuration and then invoke a     * second command to add it back as a participant (follower). During the     * intermediate state D is a non-voting follower and can ACK the state     * transfer performed during the second reconfig command.      */
//  register most recent relogin attempt 
//  Check if client's current server is in the new list of servers 
//  read txnlog but this should be sufficient 
/*                  * Avoids running finish() twice.                  */
//  truncate the log 
/*          * Address of sender          */
//  We need to log the stuff that came in between the snapshot and the uptodate 
//  property is set to an valid int, we should get the set value 
//  If notification > current, replace and send messages out 
//  check for differences 
//  the clients may or may not have already reconnected   to the recovered cluster, force a check, but ignore 
//  zks cannot be null otherwise we would not have gotten here! 
//  check leader running status 
//  reconnect with the same session id 
//  delete the node in the trie.   we need to update the trie as well 
//  or diff 
//  10.10.10.4:1238, 10.10.10.3:1237, 10.10.10.2:1236 
//  lets assert that the first election is the leader 
//  for a dead peer                  
//  If a null Stat object is passed the create should still   succeed, but no Stat info will be returned. 
//  ignore connection loss 
//  Filter out the extra ENTRY_CREATE events that are   sometimes seen at the start. Even though we create the watcher   after the file exists, sometimes we still get a create event. 
//  connect to one of them 
//  Otherwise start worker threads to receive data. 
//  sets quorum sasl authentication configurations 
//  request.hdr is set for write requests, which are the only ones 
//  ensure thread is started once and only once 
//  Write the truststore 
//  This configuration section 'MyZookeeperClient', is missing from the JAAS configuration.   As a result, SASL authentication should fail, which is tested by this test (testAuth()).
//  find the last snapshot 
//  We didn't find \n, read the whole buffer into string buffer 
//  LocalPeerBean 
/*      * Listener thread      */
//  /e is unset, its acl should remain the same. 
//  good, expected that 
/*  The current vote for the leader. Initially me!  */
//  Oh well, never mind 
//  Width of the toster 
//  Verify lastProcessedZxid is set correctly 
//  By default, disable starting a JettyAdminServer in tests to avoid   accidentally attempting to start multiple admin servers on the 
/*                      * If the peer has done enough rounds, then consider joining. The thread                     * will only join if it is part of a quorum supporting the current                      * leader. Otherwise it will try again.                      */
/*  password is test  */
//  add watcher for each node and add node to collection of   watched nodes 
//  generate new config string 
//  do nothing special - stay with the current server 
//  Session has been re-validated 
//  exactly as it is now, except for role change 
//  make sure the watch is removed when the connection closed 
//  1. start up server and wait for leader election to finish 
//  Since SASL authentication has completed (if client is configured to do so),   outgoing packets waiting in the outgoingQueue can now be sent. 
//  objects holding a reference to this object. 
//  Handle situation of clientSection's being null: it might simply because the client does not intend to    use SASL, so not necessarily an error. 
//  Make sure the settings applied above before the socket was potentially upgraded to   TLS still apply. 
//  after restart 
//  Set the factor to high value so that this test case always   resync using txnlog 
//  Trying to load a PEM file with JKS loader should fail 
//  ok 
//  close the input stream 
//  lets wait for any previous leaders to die and one of our new   nodes to become the new leader 
//  do nothing. 
//  add the last logfile that is less than the zxid 
/*  If we've already failed one of the ops, don't bother                     * trying the rest as we know it's going to fail and it                     * would be confusing in the logfiles.                      */
//  waiting for child watchers to be notified 
//  ensure server started, give enough time, so that new leader election 
/*          * Proposed leader          */
//  snapshot files in snap dir 
//  If session has not been validated, there must be NO watches 
//  NO-OP. Adding a packet will already wake up a netty connection   so we don't need to add a dummy packet to the queue to trigger   a wake-up. 
//  expected behavior 
//  this addr won't even be used since we fake the Socket.connect 
//  protocolVersion 
//  Second address doesn't work, so we don't call onConnected() this time   StaticHostProvider should try to re-resolve the address in this case
/*              * Loop in which we exchange notifications until we find a leader              */
//  skip superhammer and clientcleanup as they are too expensive for quorum 
// avoid using literal IP address when security check fails 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.gui.nodeviewer.ZooInspectorNodeViewer#     * nodeSelectionChanged(java.util.Set)      */
/*      * Pending sync requests      */
//  separate patch. 
// Updating version solves conflict -- order matters 
//  Creates principals in the KDC and adds them to a keytab file. 
//  If the client is asking to close the session then   mark as closing 
//  verify ClientCnxnSocketNetty creation 
//  After leader election, lastProcessedZxid will point to new epoch 
//  prepare for next test 
//  small chance that an unexpected message was delivered    after this check, but we would catch that next time    we check events 
//  Make delete fo fail, then verify cversion.   this doesn't happen anymore, we only set the cversion on create   LOG.info("Attempting to delete " + "/test/" + (count + 1));   doOp(logFile, OpCode.delete, "/test/" + (count + 1), dt, zk); 
//  Get default cipher suites from JDK 
//  not necessary to repeat this, expensive and not chroot related
//  inject problem in leader 
//  During startup of thread, thread name will be overridden to 
/*      * Make sure to pass an explicit Watcher because we could be sharing this     * zooKeeper instance with someone else.      */
//  make sure tostring works in both cases 
//  Deleting child using chRoot client. 
/*      * Tests that a conditional reconfig fails if the specified version doesn't correspond     * to the version of the current config.      */
/*          * ZOOKEEPER-1324. the leader sends the new config it must complete         *  to others inside a NEWLEADER message (see LearnerHandler where         *  the NEWLEADER message is constructed), and once it has enough         *  acks we must execute the following code so that it applies the         *  config to itself.          */
//  close connection 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.NodeListener#processEvent(java     * .lang.String, java.lang.String, java.util.Map)      */
/*                  * Processing committedRequests: check and see if the commit                 * came in for the pending request. We can only commit a                 * request when there is no other request being processed.                  */
//  accounted for 
//  ignore this one 
//  Zookeeper client: get username and password from JAAS conf (only used if using DIGEST-MD5). 
//  Packet of death! 
//  these tests are serial, we can speed up InterruptedException 
//  Add multiple child watches 
//  ..but still in progress, because there is a final SASL   message from server which must be received. 
//  watch for everyone to die 
// close the socket to make sure the  other side can see it being close 
//  Test that when we ask for recent snaps we get the number we asked for and 
//  from local session 
//  Unique identifier for each znode that we create. 
//  Follower is within commitLog range 
//  Strip off the surrounding quotes 
//  Global sessions handled on the leader; this call is a no-op if   not tracked as a local session so safe to call in both cases. 
//  were able to talk to the ensemble 
//  now lets kill the leader 
//  ignore duplicate create 
//  Since for each snapshot we have a log file with same zxid, expect same # logs as snaps to be kept 
//  should never be null but just to make   findbugs happy 
/*                      * When we call put later, if the directBuffer is to                     * small to hold everything, nothing will be copied,                     * so we've got to slice the buffer if it's too big.                      */
//  Stop selecting this key while processing on its   connection 
//  and restart leader election if config changed. 
//  send out the kill signal 
//  Propose /foo1 update 
//  min is higher   max is lower 
//  3. SendThread has not created the authenticating object yet, 
//  than 3. 
//  Command line args non-null.  Run what was passed. 
//  First, filter out votes from unheard-from machines. Then   make the views consistent. Sometimes peers will have 
//  Make sure the vote is reset to -1 after shutdown. 
//  we run through 100 snapshots (not all of them)   if we cannot get it running within 100 snapshots   we should  give up 
//  Verify the data in the first transaction 
//  In the DIFF case we don't need to do a snapshot because the transactions will sync on top of any existing snapshot   For SNAP and TRUNC the snapshot is needed to save that history 
//  this will cause everything to shutdown on   this learner handler and will help notify   the learner/observer instantaneously
//  there is only server in the quorum -- run as standalone 
//  Don't log an error for shutdown.
//  assuming that a version uniquely identifies a configuration, so if   version is the same, nothing to do here. 
//  third party customized getAppConfigurationEntry could throw IllegalArgumentException when JAAS   configuration isn't set. We can reevaluate whether to catch RuntimeException instead when more    different types of RuntimeException found 
//  Number of machines stayed the same, my server is not in the new 
//  skip the proposals the peer already has 
//  for Learner): 
//  Wait for request completion infinitely 
//  Id 
//  see ZOOKEEPER-3320 for more details 
// no candidate acked p, return the best candidate found so far 
//  "Connection reset by peer" 
//  convert from a server path to a client path 
//  The first time we are configured, it is just to tell   us which machine we are 
//  parts[i] == "host:leaderPort:leaderElectionPort;clientPort" 
//  does not send anything back when it is done. 
//  Convert windows path to UNIX to avoid problems with "\" 
//  reconfigMode = false (next shouldn't return null). 
//  closing so this is expected 
//  Watch status of ZooKeeper server. It will do a graceful shutdown 
//  lets start servers 2, 3, 4 with the new config 
//  remove hosts number 6 and 7 (the currently last two in the list) 
/*      * This is a simple test - try to connect two clients to a server     * accepting a maximum of one connection from each address. Check that     * only one is accepted. Close that connection, and check that the other     * eventually connects.     *     * There is a possibility of a false positive here, as when zk2 is tested     * for having connected it might not have been given enough time, and finish     * connecting after the test is done. Since the     * server doesn't tell the client why it hasn't connected, there's no     * obvious way to detect the difference.      */
/*      * (non-Javadoc)     *     * @see org.apache.zookeeper.server.ServerCnxnIface#getSessionTimeout()      */
//  Only the root path can end in a /, so strip it off every other prefix 
//  this server wasn't around during the configuration change   we should check that it is able to connect, finds out   about the change and becomes an observer. 
//  At this point, there might still be new packets appended to outgoingQueue. 
/*              * We no longer process NEWLEADER ack with this method. However,             * the learner sends an ack back to the leader after it gets             * UPTODATE, so we just ignore the message.              */
/*         * I'm done so joining.         */
//  Disable receiving data for all open connections ... 
//  important for x-DC scenarios. 
//  now make environment for client hang 
//  servers from the old list that appear in the new list 
//  simulate log file 
//  Zxids should always be in order for write requests 
//  indicates that a reconfig just committed 
//  Start up a new instance 
//  Check that all clients connect properly 
//  If preAllocSize is positive and we are within 4KB of the known end of the file calculate a new file size 
//  determine client principal from subject. 
//  superuser: use Java system property for password, if available. 
//  'B' 
//  consider as error
// good, wanted to see that, let's make sure we ran out of time 
//  create transactions to create the snapshot with create/delete pattern 
//  Construct a ConcurrentHashSet using a ConcurrentHashMap 
// 	    t3.start(); 
//  Should not happen, because we check for IPv6 address above 
// Let's make sure that we hit the code that ran the real assertion above 
//  together like in testNextGoesRound() 
//  The synchronized block here is for two purpose:   1. synchronize with the final cleanup() in SendThread.run() to avoid race   2. synchronized against each packet. So if a closeSession packet is added, 
//   "modprinc -maxlife 3mins <principal>" in kadmin. 
//  got results 
//  verify super with correct pass success 
//  cool this is what we want 
//  continuation 
//  Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3 
//  Initialize with null vote 
//  Send back the ping with our session data 
//  We send DIFF to (6,0) and forward any packet starting at (4,1) 
/*      * ZOOKEEPER-2201 - OutputArchive.writeRecord can block for long periods of     * time, we must call it outside of the node lock.     * We call tree.serialize, which calls our modified writeRecord method that     * blocks until it can verify that a separate thread can lock the DataNode     * currently being written, i.e. that DataTree.serializeNode does not hold     * the DataNode lock while calling OutputArchive.writeRecord.      */
//  check to see if this user is in the user password database. 
//  during the tests we run with 100K prealloc in the logs.   on windows systems prealloc of 64M was seen to take ~15seconds   resulting in test Assert.failure (client timeout on first session).   set env and directly in order to handle static init/gc issues 
//  start two servers to form a quorum; client should detect this and 
//  we don't have an option specified.   just delete whole quota node 
/*          * We return true if one of the following three cases hold:         * 1- New epoch is higher         * 2- New epoch is the same as current epoch, but new zxid is higher         * 3- New epoch is the same as current epoch, new zxid is the same         *  as current zxid, but server id is higher.          */
// need to get the PID number of the process first 
//  Propose an update 
// Delete the leaves first and eventually get rid of the root  Delete all versions of the node with -1. 
//  child channels options 
//  ok lets find the leader and kill everything else, we have a few 
//  Prior to ZOOKEEPER-2249, attempting to pad in association with the second transaction will corrupt the first 
//  ensure no late arrivals 
//  count down to avoid infinite blocking call due to this latch, if   any. 
//  ignoring the interrupt 
// 3. Upgrade peer0,1,2 with quorum.auth.enableSasl=true and 
//  be propagated to the other servers in the ensemble. 
//  property is set but with white spaces 
//  generate old config string 
//  Authentication exchange has completed 
// server.# 
//  Create read-only server but don't start it immediately 
// Each op in a multi-op must have the same zxid! 
/*          * Write id (3.4.6 protocol). This previously caused a NPE in         * QuorumCnxManager.          */
/*         * Lists what threads haven't joined. A thread doesn't join if        * it hasn't decided upon a leader yet. It can happen that a        * peer is slow or disconnected, and it can take longer to        * nominate and connect to the current leader.         */
/*      * For ZOOKEEPER-1732 verify that it is possible to join an ensemble with     * inconsistent election round information.      */
/*          * if local session is not enabled or it used to be our local session         * throw sessions expires          */
//  things needed for waitForEpochAck to run (usually in leader.lead(), but we're not running leader here) 
//  same configs, and they should be equal to the config we get from QuorumPeer. 
//  Start sending packets 
//  before create otw race 
//  determined by whether we are currently throttled or not 
/*  Does it start with an IPv6 literal?  */
//  of expiring the session. 
//  don't call setup - we don't want to reassign ports/dirs, etc... 
//  If the thread is in the the grace period, interrupt   to come out of waiting. 
//  ... and close connection 
//  verify no auth 
// Expected 
//  shut the leader down 
// in milliseconds, socket should connect/read within this period otherwise SocketTimeoutException 
//  LOG.warn("Proposed leader: " +   proposedLeader); 
//  When it comes to this point, it guarantees that later queued   packet to outgoingQueue will be notified of death. 
//  get leader 
//  Verify that we have at least NUM_MESSAGES / SNAPCOUNT txnlog 
//  standalone starts with 0 epoch while quorum starts with 1 
/*                              * Try to obtain a challenge only if does not have                             * one yet                              */
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#getParent()          */
//  Now we're adding it back as a participant and everything should work. 
//  Handle race condition where a node is listed   but gets deleted before it can be queried   ignore 
//  load the epochs 
//  resolve() call keeps the size of provider 
/*      * returns the string that maps to this stat tracking.      */
//  In the tests below, a "Strict" server means a UnifiedServerSocket that   does not allow plaintext connections (in other words, it's SSL-only).   A "Non Strict" server means a UnifiedServerSocket that allows both   plaintext and SSL incoming connections. 
//  If we get notified about possibly missed events, reload the key store / trust store just to be sure. 
//  NOP 
//  modify server's client port 
//  Receive challenge and store somewhere else 
//  Test that the path string is validated 
//  Set the margin 
//  2: inject network problem in one of the follower 
//  This is the "auth" id, so we have to expand it to the   authenticated ids of the requestor 
//  processResult() is used by ClientCnxn's sendThread to respond to   data[] contains the Zookeeper Server's SASL token.   ctx is the ZooKeeperSaslClient object. We use this object's respondToServer() method   to reply to the Zookeeper Server's SASL token 
//  Now we just start watching the assignments directory 
//  try to delete it now as we have done with the created file, why to   wait for deleteOnExit() deletion 
//  Leader.NEWLEADER 
//  8. check the node exist in previous leader but not others 
//  start with the initLimit, once the ack is processed   in LearnerHandler switch to the syncLimit 
//  Watcher function doesn't exists for the specified params 
//  See ZOOKEEPER-1161 for more details 
//  Divide the new servers into oldServers that were in the previous list 
/*              * Higher id              */
//  EventWatch is a simple, immutable type, so all we need to do   is make sure we can create all possible combinations of values. 
//  kill anything that was removed for the children 
//  Let the notifications timeout 
//  success 
//  test that all servers have: 
//  Force leader to use snapshot to sync with follower 
// No quorum in new config (1/2) 
//  If p is a reconfiguration, multiple other operations may be ready to be committed,   since operations wait for different sets of acks.   Currently we only permit one outstanding reconfiguration at a time   such that the reconfiguration and subsequent outstanding ops proposed while the reconfig is   pending all wait for a quorum of old and new config, so its not possible to get enough acks   for an operation without getting enough acks for preceding ops. But in the future if multiple   concurrent reconfigs are allowed, this can happen and then we need to check whether some pending   ops may already have enough acks and can be committed, which is what this code does. 
// LOG.info("Defaulting to majority quorums"); 
//  When increment ... 
//  Check if we shutdown or doIO() closed this connection 
// Verify tree deleted 
//  used by ClientCnxn to know whether to emit a SASL-related event: either AuthFailed or SaslAuthenticated, 
//  We send SNAP 
//  If there isn't any version associated with the filename,   the default version is 0. 
//  and the stat and quota nodes 
/*  followers in its view                                     */
//  verify that joiner has up-to-date config, including all four servers. 
// //  // If you update the configuration parameters be sure  // to update the "conf" 4letter word  // 
//  ignore - can't find the path, will output "n/a" instead 
//  Assert that commands are getting forwarded correctly 
//  is disabled 
//  only previously existing records need to be rolled back. 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.gui.nodeviewer.ZooInspectorNodeViewer#     * getTitle()      */
//  Number of machines becomes smaller, my server is in the new cluster 
//  Just put the description in 
//  cleanup <path vs watchlist> 
//  Test that when asking for more snaps than we created, we still only get snaps 
//  Only include votes from machines that we heard from 
//  Integer representation of value 
//  1 day 
//  make sure a different leader was elected 
//  Populate DIGEST-MD5 user -> password map with JAAS configuration entries from the "QuorumServer" section.   Usernames are distinguished from other options by prefixing the username with a "user_" prefix. 
//  r[0] == "host:clientPort"   r[1] == "host:leaderPort:leaderElectionPort"   Appending ";clientPort" 
//  we do this in an attempt to ensure that not all of the servers   in the ensemble take a snapshot at the same time 
//  Since this is already a committed proposal, we need to follow 
//  required for compilation from C++ 
/*      * Mapping from Peer to Thread number      */
//  eof reached 
//  not a directory 
//  Don't expect to get the same stats for different creates. 
//  When reset ... 
//  Client-initiated renegotiation in TLS is unsafe and   allows MITM attacks, so we should disable it unless   it was explicitly enabled by the user.   A brief summary of the issue can be found at   https://www.ietf.org/proceedings/76/slides/tls-7.pdf 
//  Make space for length 
//  Peer has zxid in txnlog range 
//  check watches 
//  element could be removed by poll() 
//  that is rather innocuous. 
//  Log warning message if txn comes out-of-order 
//  reset acl (back to open) and verify accessible again 
/*                      * The leader executes the following block, which essentially shuts down                     * the peer if it is not the last round.                       */
//  Expiry time is (now/cnxnTimeout + 1)*cnxnTimeout   Range is (now + cnxnTimeout) to (now + 2*cnxnTimeout)   Add 1s buffer to be safe. 
//  currently shouldn't happen since there are only 2 learner types 
//  setup redirect out/err streams to get System.in/err, use this judiciously!   get current err 
//  Only participant need to get outstanding proposals 
// corrupting the data 
//  254 
//  Give things time to report; 
//  if we have a loopback and it has an address use it 
/*                                  * If this server is not looking, but the one that sent the ack                                 * is looking, then send back what it believes to be the leader.                                  */
// find out who is the leader and kill it 
//  port in static config file. 
//  Sketchy: We assume there will be a leader (probably us) in 3 seconds. 
//  Leader asks for epoch (mocking Leader.lead behavior)   First add to connectingFollowers 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorNodeManager#setData     * (java.lang.String, java.lang.String)      */
//  It's all over 
//  Test stat and watch of non existent node 
//  No need to synchronize since cnxns is backed by a ConcurrentHashMap 
//  quorum members 
//  The change should not have happened yet, since we haven't committed 
//  since they can't complete the reconfig 
//  Revocation checking is only supported with the PKIX algorithm 
/*      * This test wouldn't create any dynamic config.     * However, it adds a "clientPort=XXX" in static config file.     * It checks the standard way of standalone mode.      */
//  The stat parameter should be optional. 
/*  Create  */
//  if the weights are not above zero, things will get messed up 
//  Try to load a non-protected private key while providing a password 
/*          * Since Configuration initializes the key store and trust store related         * configuration from system property. Reading property from         * configuration will be same reading from system property          */
//  not able to truncate the log 
//  No more packets to send: turn off write interest flag.   Will be turned on later by a later call to enableWrite(),   from within ZooKeeperSaslClient (if client is configured   to attempt SASL authentication), or in either doIO() or   in doTransport() if not. 
//  If we're testing a follower, also check the session id on the 
//  I'm not in the view 
//  perhaps this is a V0 Create 
//  Since this is a rough sanity check, add some padding to maxBuffer to   make up for extra fields, etc. (otherwise e.g. clients may be able to   write buffers larger than we can read from disk!) 
//  Submit request directly to leader 
//  add the n recent snap files for assertion 
//  Update lastCommitted and Db's zxid to a value representing the new epoch 
//  this is an unlikely edge case, but check it just in case 
//  verify ClientCnxnSocketNIO creation 
//  since we have already acked an epoch equal to the leaders, we cannot ack   again, but we still need to send our lastZxid to the leader so that we can   sync with it if it does assume leadership of the epoch.   the -1 indicates that this reply should not count as an ack for the new epoch 
//  Here we create 3000 znodes 
//  Start the servers with a static config file, without a dynamic config file. 
//  This tests the case where ZK ensemble does not have the super user's password configured.   Reconfig should fail as the super user has to be explicitly configured via   zookeeper.DigestAuthenticationProvider.superDigest. 
//  Cut the connection, so the server will create closeSession as part 
//  Send diff when we see the follower's zxid in our history 
//  Peer has zxid (3, 1) 
//  Now check that other commands don't blow everything up 
//  RFC 2818, 3.1. Server Identity   "...Names may contain the wildcard   character * which is considered to match any single domain name   component or component fragment..."   Based on this statement presuming only singular wildcard is legal 
//  found path watcher 
//  we'll catch this later if it does happen after timeout, so   why waste the time on poll
//  override the defaults 
//  before expiration). 
//  determine how long to sleep from looking at ticket's expiry.   We should not allow the ticket to expire, but we should take into consideration   MIN_TIME_BEFORE_RELOGIN. Will not sleep less than MIN_TIME_BEFORE_RELOGIN, unless doing so   would cause ticket expiration. 
//  This is a relatively common exception that we can't avoid 
//  null StoreFileType means 'autodetect from file extension' 
//  When local flag is true, remove watchers for the given path   irrespective of rc. Otherwise shouldn't remove watchers locally   when sees failure from server. 
//  Queue up any outstanding requests enabling the receipt of   new requests 
//  (this is twice the timeout used in Leader#getEpochToPropose) 
//  Make create to fail, then verify cversion. 
//  n recent snap shots 
/*  Sequence numbers for messages  */
//  is also auth enabled while enabling quorum server require sasl. 
// clear up the kerberos state. But the tokens are not cleared! As per  the Java kerberos login module code, only the kerberos credentials 
//  if this is not in cnxns then it's already closed 
//  if \n is first char in buffer, leave the string buffer empty 
//  wait for new servers to be up running 
//  check and make sure the change is persisted 
//  verify super can do anything and ignores ACLs 
/*                              * Do nothing, just try again                              */
//  Round-robin assign this connection to a selector thread 
//  Warn about inconsistent peer type 
//  Text area for the message 
/*          * Start mock server 2          */
/*                                  * Global variable keeping track of                                  * how many peers have successfully                                  * joined.                                  */
/*  set socket linger to false, so that socket close does not block  */
//  clear the buf so we don't get something we read before we sought   number of entries skipped to get to the end of the iterator, less the number skipped to get to the start 
/*  Test that the majority quorum verifier only counts votes from  */
//  Use BufferedOutputStream to reduce the number of IP packets. This is 
//  the new server's config is going to include itself and the current leader 
//  verify that the truncation and subsequent append were processed 
//  client login 
//  We take advantage of the limited size of the length to look   for cmds. They are all 4-bytes which fits inside of an int 
//  add previously existing records back. 
//  now that the ack has been processed expect the syncLimit 
/*      * Determine how much time a process has to wait once it believes that it     * has reached the end of leader election.      */
//  if this Assert.fails it means we are not cleaning up after the closed   sessions. 
//  We might consider changing the processor behaviour of    Observers to, for example, remove the disk sync requirements.   Currently, they behave almost exactly the same as followers. 
//  The available port range that we use stays away from the ephemeral port   range, which the OS will assign to client socket connections.  We can't   coordinate with the OS on the assignment of those ports, so it's best to   stay out of that range to avoid conflicts.  Typical ranges for ephemeral   ports are:   - IANA suggests 49152 - 65535   - Linux typically uses 32768 - 61000   - FreeBSD modern versions typically use the IANA suggested range   - Windows modern versions typically use the IANA suggested range 
//  check for more than 2 children --   if zookeeper_stats and zookeeper_qutoas   are not the children then this path   is an ancestor of some path that 
/*      * (non-Javadoc)     *      * @see     * javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event     * .ListSelectionEvent)      */
//  Generate transaction so we will have some txnlog 
//  Each session should see its cxids in order 
//  let qpconfig parse the file and then pull the stuff we are   interested in 
//  Look through the logs for output that indicates the falseLeader is LEADING, then LOOKING, then FOLLOWING 
//  in general we will see 1 connection from each   host, setting the initial cap to 2 allows us   to minimize mem usage in the common case   of 1 entry --  we need to set the initial cap   to 2 to avoid rehash when the first entry is added 
//  We use the order array to preserve the order of the commands   for help. The hashmap will not preserver order. (It may be overkill.) 
//  DIFF only 
/*  String subreport = reads + " "                                + (((double) rlatency) / reads) + " " + writes                                + " " + (((double) wlatency / writes));  */
//  Try creating some data. 
/*  * <p> * Abstraction that interprets the <code>ephemeralOwner</code> field of a ZNode. Originally, * the ephemeralOwner noted that a ZNode is ephemeral and which session created the node. * Through an optional system property (<code>zookeeper.extendedTypesEnabled</code>) "extended" * features such as TTL Nodes can be enabled. Special bits of the ephemeralOwner are used to * denote which feature is enabled and the remaining bits of the ephemeralOwner are feature * specific. * </p> * <p> * <p> * When the system property <code>zookeeper.extendedTypesEnabled</code> is true, extended types * are enabled. An extended ephemeralOwner is defined as an ephemeralOwner whose high 8 bits are * set (<code>0xff00000000000000L</code>). The two bytes that follow the high 8 bits are * used to denote which extended feature the ephemeralOwner represents. The remaining 5 bytes are * used by the feature for whatever purpose is needed * </p> * <p> * <p> * Currently, the only extended feature is TTL Nodes. It is denoted by the extended feature value of 0. * i.e. for TTL Nodes, the ephemeralOwner has the high byte set to 0xff and the next 2 bytes are 0 followed * by 5 bytes that represent the TTL value in milliseconds. So, an ephemeralOwner with a TTL value of 1 * millisecond is: <code>0xff00000000000001</code>. * </p> * <p> * <p> * To add new extended features: a) Add a new name to the enum, b) define a constant EXTENDED_BIT_XXXX that's next * in line (after TTLs, that would be <code>0x0001</code>), c) add a mapping to the extendedFeatureMap via the static * initializer * </p> * <p> * <p> * NOTE: "Container" nodes technically are extended types but as it was implemented before this feature they are * denoted specially. An ephemeral owner with only the high bit set (<code>0x8000000000000000L</code>) is by definition * a container node (irrespective of whether or not extended types are enabled). * </p>  */
/*  null StoreFileType means 'autodetect from file extension'  */
//  Recovery mode 
//  For backward compatibility test, some tests create dynamic configuration   without setting client port. 
//  ZOOKEEPER-2693 disables all 4lw by default. 
// reconfigure out leader and follower 1. Remaining follower 
//  and newServers that were not in the previous list 
//  zkServer has been started. So we don't need to start it again in secureCnxnFactory. 
//  Keep track of the latest zxid which already queued 
//  clear data structures used for auth 
//  Client is configured to use a valid login Configuration, so   authentication is either in progress, successful, or failed. 
//  check 
// The old port should be clear at this stage 
//  enable it if disabled 
//  Unlike with Krb5LoginModule, we don't do any actual login or credential passing here: authentication to Zookeeper   is done later, through the SASLClient object. 
//  The synchronized is to prevent the race on shared variable "sslEngine".   Basically we only need to create it once. 
//  Bring it back 
//  Do trigger an event to make sure that we do not get 
//  create session with min value 
//  Peer has newer zxid 
//  Height of the toster 
/*  we are going to say we last acked epoch 20  */
//  setup channel, variables, connection, etc. 
//  ZOOKEEPER-569:   If no votes are received for live peers, reset to voting    for ourselves as otherwise we may hang on to a vote  
//  this lock guarantees that channel won't be assigned after cleanup(). 
//  interval. 
//  maintain semantics even in chroot case   specifically - root cannot be deleted   I think this makes sense even in chroot case. 
//  pzxid updated with deleteNode on higher zxid 
//  make sure the leader has the subsequent changes that were made while it was offline 
//  Validate that we don't see any txn from the first session 
//  If not null then shutdown this leader 
// leader election time, unless the designated leader fails                              
//  CommmitedLog is empty, we will use txnlog up to lastProcessZxid 
//  Kill server 1 to avoid it interferences with FLE of the quorum {2, 3, 4}. 
//  let's be conservative on the typical number of children 
//  We take advantage of the limited size of the length to look 
//  The create will trigger the get children and the exist   watches 
//  There should be 2000 create requests 
//  only take in the first 3 servers as old quorum config. 
/*  Delete of a node folowed by an update of the (now) deleted node  */
//  Convert WatchedEvent to a type that can be sent over the wire 
//  throws a LoginException: see startConnect() below. 
//  send 0 if session is no 
//  This method gets the version from the end of dynamic file name.   For example, "zoo.cfg.dynamic.0" returns initial version "0".   "zoo.cfg.dynamic.1001" returns version of hex number "0x1001".   If a dynamic file name doesn't have any version at the end of file, 
//  Verify each quorum peer has expected config in its config zNode. 
//  returns all configuration servers -- participants and observers 
//  first convert participant to observer, then observer to participant, 
//  convince falseLeader that it is the leader 
/*  version - version of config from which we want to reconfigure - if current config is different     * reconfiguration will fail. Should be committed from the CLI to disable this option.      */
//  Update the node on the leader 
// check for the code path that throws at server 
//  Number of machines increases, my server is not in the new cluster   load on old servers must be decreased, so must connect to one of the   new servers   i.e., pNew = 1. 
//  set watches on child 
//  take a snapshot 
//  65537 
//  We have the request, now process and setup for next 
//  512k 
//  check that static config file doesn't include membership info   and has a pointer to the dynamic configuration file 
//  Fallthrough and log errors outside the synchronized block 
//  we are going to have to extrapolate the epoch information 
//  best effort to print the path assoc with this request 
//  and close the connection to the leader 
// if neither option -n or -b is specified, we delete   the quota node for thsi node. 
//  shutdown() has to be explicitly called for every thread to   make sure that resources are freed properly and all fixed network ports   are available for other test cases 
//  we are now going to start getting transactions to apply followed by an UPTODATE 
/*      * (non-Javadoc)     *      * @see     * javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event     * .TreeSelectionEvent)      */
//  hdm.addLoggerMBean(logger.getName()); 
//  2 followers out of 3 are a majority of the voting view 
//  its supposed to be the first server on serverList.   we'll set it later, see below (*) 
//  config file. 
//  don't overwrite with "special" xids - we're interested   in the clients last real operation 
/* election port */
/*                 cversion > 0: keep newly created containers from being deleted                before any children have been added. If you were to create the                container just before a container cleaning period the container                would be immediately be deleted.              */
//  interesting to see what's there... 
//  During session upgrade 
//  Construct a connection request 
//  create a /test znode and check that read/write works before 
//  Next the old servers 
//  during second iteration leavingIndex will be the index of the leader 
/*  password is 'test' */
//  org.apache.log4j.LogManager.getLoggerRepository(); 
//  Make sure nothing is straggling! 
/* quorum port */
//  Attempting to load with the wrong key password should fail 
//  there can be extra sessionClose proposals 
//  create 5 servers 
//  Trigger the watches and ensure they properly propagate to the client 
/*  4 MB  */
//  Get the string that is being dropped. 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * getNodeChild(java.lang.String, int)      */
//  Get memory information. 
//  Make all zxids for a given vote id equal to the largest zxid seen for 
//  use async, otherwise it will block the logLock in   ZKDatabase and the setData request will timeout 
//  10.10.10.2:1236, 10.10.10.1:1235 
//  create ephemeral node 
/*              * We match with nextPending so that we can move to the             * next request when it is committed. We also want to             * use nextPending because it has the cnxn member set             * properly.              */
// set that we have been interrupted. 
/*          * First make the views consistent. Sometimes peers will have different         * zxids for a server depending on timing.          */
//  Verify that FinalRequestProcessor hasn't changed the original ACL objects 
//  first address worked 
//  cause disconnection - this will cause next to be called   which will in turn call nextReconfigMode
//  Try to reduce memory consumption by freeing up buffer space   which is no longer needed. 
//  wait until followers time out in getEpochToPropose - they shouldn't return   normally because the leader didn't execute getEpochToPropose and so its epoch was not 
//  seconds, so it should be plenty of time 
//  add all to commandMap 
//  Assume this is an existing cluster. 
//   we check events 
//  If there is only one createSession request in between, zxid diff   will be exactly 2. The alternative way of checking is to actually 
//  verify all the servers reporting same number of nodes 
//  increase the tick time to delay the leader going to looking 
//  server ids are 1, 2 and 3 
//  However, we should be able to disconnect and reconnect to the same   server with the same session id (as long as we do it quickly 
//  waiting time for expected condition 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#getACLs     * (java.lang.String)      */
/*              * Wait until leader starts up              */
//  6. exit follower A after taking snapshot 
//  the dynamic file pointer. 
//  Append and commit 2 transactions to the log 
/*      * (non-Javadoc)     *      * @see java.lang.Object#hashCode()      */
/*          * (non-Javadoc)         *         * @see org.apache.zookeeper.server.RequestProcessor#processRequest(org.apache.zookeeper.server.Request)          */
//  try sync zk exists  
//  Attempt to renegotiate after establishing the connection 
//  Verify AlwaysOnTop Flag... 
//  Leader and learner will control the zookeeper server and pass it into QuorumPeer. 
//  /foo 
//  We don't want to do this check since the session expiration thread   queues up this operation without being the session owner.   this request is the last of the session so it should be ok  zks.sessionTracker.checkSession(request.sessionId, request.getOwner()); 
//  ok we have some match and need to update 
//  object created but start() not called yet   start() called but background thread has not entered main loop   background thread is running   stop() called but background thread has not exited main loop   stop() called and background thread has exited, or background thread crashed 
//  if it is already simple, just return it 
//  waiting for re-election. 
//  ************** target file does not exist 
//  note that clientToken might be empty (clientToken.length == 0):   if using the DIGEST-MD5 mechanism, clientToken will be empty at the beginning of the   SASL negotiation process. 
// check that membership makes sense; leader will make these checks again  don't check for leader election ports since   client doesn't know what leader election alg is used 
//  we've already validated, therefore if the path is of length 1 it's the root 
// PASS 
//  this replicates NC - close the output stream before reading 
//  No command specified, print links to all commands instead 
//  a session should automatically expire after an amount of time 
//  with 0-padding in the filename 
//  we are the final link in the chain 
//  done checking - it's the root 
//  Set default font... 
/*  leaving - comma separated list of server IDs to be removed from the ensemble. Only used for     * incremental reconfigurations.      */
//  try node creation for around 15 second, 
//  If the user explicitly overrides the default Login Context, they probably expected SASL to   succeed. But if we got here, SASL failed. 
//  Servers have been set up. Now go test if secure connection is successful. 
//  assert remotePeerBean.1 of ReplicatedServer_2 
//  The leader is going to dump the database 
//  for a dead peer 
//  VisibleForTesting 
// login and also update the subject field of this instance to 
/*      * Process a sync request      */
//  However a failure is still expected as user is not authenticated, so ACL check will fail. 
//  Thread.sleep(100);   } 
//  Note that this thread isn't going to be doing anything else,   so rather than spawning another thread, we will just call   run() in this thread. 
// dumpConnections connection is implemented only in NIOServerCnxnFactory 
//  make sure that they timed out and didn't return normally   
//  we don't need to roll back any records because there is nothing left. 
//  & 0xFFFFFFFFL;   >> 32; 
// incremental change - must be a majority quorum system    
//  assert remotePeerBean.1 of ReplicatedServer_3 
//  Exception is set when local session failed to upgrade   so we just need to report the error 
//  Have to check !closingChannel, because an error in   receiveMessage() could have led to close() being called. 
//  -2 is the xid for pings 
//  concurrent reconfigs are allowed, this can happen. 
//  Oldest log is already remove, so this should point to the start of 
//  reconstructing transaction with the chroot prefix 
//  Verify the data in the second transaction 
//  now check if the bytes match the quota 
//  Step for the toaster 
/*              * Higher zxid              */
//  the list is already removed from the ephemerals   so we do not have to worry about synchronizing on   the list. This is only called from FinalRequestProcessor   so there is no need for synchronization. The list is not   changed here. Only create and delete change the list which   are again called from FinalRequestProcessor in sequence. 
/*      * (non-Javadoc)     *      * @see     * javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent     * )      */
//  authentication packet. 
//  This should never happen! 
//  But still, what's valid in white list will get through. 
//  we need to make sure that we don't take the snapshot twice. 
//  if so, I'll remain the leader     
//  or fails. 
//  DIFF + 4 proposals + 4 commit 
//  If the connect attempt was cancelled but succeeded   anyway, make sure to close the channel, otherwise   we may leak a file descriptor. 
//  Reset to MIN_SNAP_RETAIN_COUNT if invalid (less than 3)   PurgeTxnLog.purge(File, File, int) will not allow to purge less 
//  2) verify that empty child name success if sequential  
//  We send TRUNC to 3 and forward any packet starting 5 
//  if node is created successfully then it means that ZooKeeper service 
//  @VisibleForTesting 
//  Throttle acceptance of new requests. If this entailed a state change, 
/*              * Main loop              */
//  This should never happen, but we should fall back to sending   snapshot just in case. 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * getSessionMeta()      */
//  Add all the removed watch events to the event queue, so that the   clients will be notified with 'Data/Child WatchRemoved' event type. 
//  The pattern is holding so far.  Let's run the counter a bit   to be sure it continues to spit out the correct answer 
/*          * Creates list of peers.          */
//  Use a single listener instance to reduce GC   Note: this listener is only added when LOG.isTraceEnabled() is true, 
//  last op committed was a leader change - from now on    the new leader should commit         
//  New Watcher which will be used for removal 
//  3: close the session so that ephemeral node is deleted 
//  CN matching has been deprecated by rfc2818 and can be used   as fallback only when no subjectAlts are available 
//  content changed 
//  write extra configurations 
//  During connection expiry the server will close the connection.   After the socket is closed, when the client tries to read a   line of text it will throw java.net.SocketException.   @see jira issue ZOOKEEPER-1862 
//  if session creation Assert.fails dump the thread stack   and try the next server 
//  extract server id x from first part of joiner: server.x 
//  learner with ipaddress in principal 
//  This is expected case since server 0 is down and 3 can't vote   (observer in current role) and we need 3 votes from 0, 1, 2, 3, 
//  remove watcher for each node and remove node from   collection of watched nodes 
//  Create the NIOServerCnxn that will handle the client requests 
//  ok this is the limit node   get the real node and update   the count and the bytes 
// wait for servers to be up 
//  try it again 
//  Set to true when connected to a quorum server. 
//  worst case here the tmp file/resources(fd) are not cleaned up   and the caller will be notified (IOException) 
//  Test child watch and create with sequence 
/*  return a zxid of zero, since we the database is empty  */
//  Start 3rd peer and check if it joins the quorum 
//  Authenticate client certificate 
//  Use setData instead of sync API to force a view update.   Check ZOOKEEPER-2137 for details. 
//  Color for toaster 
//  now check if the counts match the quota 
//  Here we enable the 4lw which ZooKeeper tests depends. 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * setLastConnectionProps(java.util.Properties)      */
//  this is the only child node. 
//  make sure it has a chance to write it to disk 
//  Start and schedule the the purge task 
//  Peer is within committedLog range 
// empty logs 
//  Close the client without changing the node 
//  We don't need to worry about removing empty sets,   they'll eventually be removed when they expire. 
//  shouldn't happen without filter 
//  -1 means notification 
//  Kill half the servers, make a change, restart the dead 
/*                  * Sends more notifications if haven't received enough.                 * Otherwise processes new notification.                  */
/*      * Shutdown flag      */
//  Assert 
/*      * getZNodeList and getZNodeListJSON are bogus - but necessary.     * Unfortunately Jersey 1.0.3 is unable to render both xml and json properly     * in the case where a object contains a list/array. It's impossible to get     * it to render properly for both. As a result we need to split into two     * jaxb classes.      */
//  TODO test octet fully 
//  This can happen in state transitions,   just ignore the request 
//  http://docs.oracle.com/javase/6/docs/technotes/guides/security/jgss/jgss-features.html   """   In addition, when performing operations as a particular   Subject, e.g. Subject.doAs(...) or   Subject.doAsPrivileged(...),   the to-be-used GSSCredential should be added to Subject's   private credential set. Otherwise, the GSS operations will   fail since no credential is found.   """ 
//  Local session 
/*                      * Building notification packet to send                      */
//  2 followers out of 5 is not a majority 
//  ignore 
//  do authenticating learner 
//  SASL authentication is completed, successfully or not:   enable the socket's writable flag so that any packets waiting for authentication to complete in 
//  Assert   Resolver called 10 times, because we shouldn't cache the resolved addresses 
//  stat, ruok and isro are white listed. 
//  the response 
//  getting a quorum from all necessary configurations. 
//  ignore for purposes of this test 
//  1. Matches authenticationID and authorizationID 
/*  In the following IF-THEN-ELSE block, we process syncs on the leader.         * If the sync is coming from a follower, then the follower         * handler adds it to syncHandler. Otherwise, if it is a client of         * the leader that issued the sync command, then syncHandler won't         * contain the handler. In this case, we add it to syncHandler, and         * call processRequest on the next processor.          */
//  check for well formed ACLs   This resolves https://issues.apache.org/jira/browse/ZOOKEEPER-1877 
//  make sure everything is consistent 
//  2. kill all followers 
/*      * Class to verify of the thread has become a follower      */
//  Exists only to defeat instantiation. 
//  we should see that now all servers have the same config of 5 servers 
//  possible 
//  Test synchronous API 
//  2nd read is after the renegotiation attempt and will fail 
//  TODO Write the v6addr2Bytes 
//  wait up to 30 seconds for the disco to be delivered 
/*                      * Return message to queue for another attempt later if                     * epoch hasn't changed.                      */
//  if not RSA, assume EC 
/*  This file copied from Hadoop's security branch,  * with the following changes:  * 1. package changed from org.apache.hadoop.security to  *    org.apache.zookeeper.server.auth.  * 2. Usage of Hadoop's Configuration class removed since  *    it is not available in Zookeeper: instead, system property  *    "zookeeper.security.auth_to_local" is used.   */
//  note that we should run the server, shut it down and only then   simulate a reconfig in progress by writing the temp file, but here no   other server is competing with them in FLE, so we can skip this step 
/*      * We populate the necessary data structures in the CommitProcessor     * instance and run processCommitted      */
//  create persistent sequential node 
//  pick a reasonable epoch number   this should only happen once when moving to a   new code version 
//  Set the joining/leaving/members values based on the mode we're in 
/*                  * Processing queuedRequests: Process the next requests until we                 * find one for which we need to wait for a commit. We cannot                 * process a read request while we are processing write request.                  */
/*  * This code is originally from HDFS, see the similarly named file there * in case of bug fixing, history, etc. * * Branch : trunk * Github Revision: 1d1ab587e4e92ce3aea4cb144811f69145cb3b33  */
//  Try to remove follower2, which is the only remaining server. This should fail. 
//  Write to txnlog and take periodic snapshot 
//  This test simulate the use case of change of membership through rolling   restart. For a 3 node ensemble we expand it to a 5 node ensemble, verify   during the process each node has the expected configuration setting pushed   via updating local zoo.cfg file. 
//  validate upper limit 
//  Wait for the listener to terminate. 
//  8. now we have invalid data on disk, let's load it and verify 
//  don't do anything 
//  simply return don't require auth 
//  set saslLoginFailed to true to simulate the LoginException 
//  aborting multi shouldn't leave any record. 
//  The only requests that should be on toBeApplied are write   requests, for which we will have a hdr. We can't simply use   request.zxid here because that is set on read requests to equal   the zxid of the last write op. 
/*                              * If don't have challenge yet, skip sending                             * notification                              */
//  things needed for waitForNewLeaderAck to run (usually in leader.lead(), but we're not running leader here) 
//  also clears the wantClientAuth flag according to docs 
//  ..but consume (with a log message) all other types of exceptions. 
//  Member variables for mocking ZkDatabase 
//  else there is no need to clear the database    * When a new quorum is established we can still apply the diff      on top of the same zkDb data    * If we fetch a new snapshot from leader, the zkDb will be      cleared anyway before loading the snapshot 
// One time scheduling. 
//  Regardless of TICKET_RENEW_WINDOW setting above and the ticket expiry time,   thread will not sleep between refresh attempts any less than 1 minute (60*1000 milliseconds = 1 minute). 
//  by whether we have any pending buffers on the output queue or not 
//  we are throttled, so we need to queue 
//  remember these servers so we can add them back later 
/*  DNS resolution tests  */
//  Try to load a password-protected private key with the wrong password 
//  force a buffer fill on next read 
//  Test view contains other servers 
//  Make sure the first handshake completed and only the second   one failed. 
//  The value of callCount can exceed 1 only if the callback thread 
// we will get a checksum failure 
//  Read the log back from disk, this will throw a java.io.IOException: CRC check failed prior to ZOOKEEPER-2249 
//  Account for running within IKVM and create a new MBeanServer   if the PlatformMBeanServer does not exist. 
//  Registers shutdown handler which will be used to know the 
//  session moved is a connection level error, we need to tear   down the connection otw ZOOKEEPER-710 might happen   ie client on slow follower starts to renew session, fails   before this completes, then tries the fast follower (leader)   and is successful, however the initial renew is then   successfully fwd/processed by the leader and as a result   the client and leader disagree on where the client is most   recently attached (and therefore invalid SESSION MOVED generated) 
//  If have received from all nodes, then terminate 
//  we're done; don't expect to send another BIND 
/*      * (non-Javadoc)     *     * @see org.apache.zookeeper.Watcher#process(org.apache.zookeeper.WatcherEvent)      */
//  write length of message 
/*  Reconfig tests with IP addresses  */
/*      * Flag to determine whether to authenticate or not      */
//  Since the proposal has been committed we need to send the   commit message also 
//  now corrupt the snapshot 
//  reset cnxn factory 
/*      * To enable observers to have no identifier, we need a generic identifier     * at least for QuorumCnxManager. We use the following constant to as the     * value of such a generic identifier.      */
//  Try connecting with the same session id on a different 
//  A session can both be a local and global session during   upgrade 
//  directories 
//  Ignoring exception. If there is an interrupted exception   then one of the following assertion will fail 
//  and try to renew the ticket. 
//  finally, we should also check that the lag-off server has updated 
//  create 3 servers 
// CheckedOutputStream cout = new CheckedOutputStream() 
//  @see jira issue ZOOKEEPER-961 
//  We start at 1 because / will create an empty part first 
// If wins the challenge, then close the new connection. 
//  Thrown if the caller does not have permission to retrieve the Configuration.   In this case, simply returning false is correct. 
//  this is ok, it just means that the session revalidation failed. 
//  this is fine 
//  verify that now ZooKeeper service is up and running 
//  it should exist 
//  change everyone's leader election port 
//  the files we expected 
//  verify access using original auth 
//  specific election address 
//  node doesn't exists 
//  truncate it 
//  Snapshot containing 5000-byte znode and logfile containing create txn 
//  leader goes in looking state 
/*                      * This sleep time represents the time a follower                     * would take to declare the leader dead and start                     * a new leader election.                      */
//  Number of machines increased, my server is not in the new cluster 
/*          * peer1 and peer2 are A and B in the above example.          */
//  init connection executors 
/*      * Verify that all of the servers see the same number of nodes     * at the root      */
//  property is not set we should get the default value 
/*                      * Building challenge packet to send                      */
// tried all servers and couldn't connect 
//  This is the only place that can throw IO exception 
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#getAllowsChildren()          */
/*      * Generates 3 ports per server      */
//  is a CA 
//  Now do the tally 
/*  Pretend that any watcher exists  */
//  10.10.10.4:1238, 10.10.10.3:1237, 10.10.10.2:1236, 10.10.10.1:1235   10.10.10.3:1237, 10.10.10.2:1236, 10.10.10.1:1235 
//  This server should fail to join the quorum as it is not using TLSv1.2 
//  This method is to maintain compatiblity of startup(zks) and enable sharing of zks 
//  Assuming the packet will be sent out successfully. Because if it fails,   the channel will close and clean up queues. 
//  See ZooKeeper.java for an explanation of why we need @SuppressWarnings("try") 
//  create with CreateMode 
//     which means it acked from itself 
/*              * There are two things going on in the logic below:             *              * 1. skip comparing the zxid and electionEpoch for votes for servers              *    out of election.              *                 *    Need to skip those because they can be inconsistent due to               *    scenarios described in QuorumPeer.updateElectionVote.              *             *    And given that only one ensemble can be running at a single point              *    in time and that each epoch is used only once, using only id and              *    epoch to compare the votes is sufficient.             *             *    {@see https://issues.apache.org/jira/browse/ZOOKEEPER-1805}             *             * 2. skip comparing peerEpoch if if we're running with mixed ensemble              *    with (version > 0x0) and without the change (version = 0x0)              *    introduced in ZOOKEEPER-1732.             *             *    {@see https://issues.apache.org/jira/browse/ZOOKEEPER-1732}             *             *    The server running with and without ZOOKEEPER-1732 will return              *    different peerEpoch. During rolling upgrades, it's possible             *    that 2/5 servers are returning epoch 1, while the other 2/5             *    are returning epoch 2, the other server need to ignore the              *    peerEpoch to be able to join it.              */
//  we are done with deserializing the   the datatree   update the quotas - create path trie   and also update the stat nodes 
//  Restore the System property if it was set previously 
//  Do a simple operation to make sure the connection is fine. 
//  Current number of toaster... 
//  Check that the servers are up, have the right config and can process operations. 
//  need to cancel this selection key from the selector 
//  Data should get updated 
//  We throw LoginExceptions... 
//  materialize the watchers based on the event 
//  9. start follower A, after it's in broadcast state, make sure 
//  quorum as this needs auth. 
//  validate that the old value is there and not the new one 
//  read error and input streams as this would free up the buffers 
//  new RuntimeException("Calling shutdown").printStackTrace(); 
/*  Useful for testing watch handling behavior  */
//  SASL authentication completes. 
/*                      * We only partially sent this buffer, so we update                     * the position and exit the loop.                      */
//  Add multiple data watches 
//  create ephemeral znode 
//  This is a severe error that we cannot recover from,   so we need to exit 
//  but written out to the transaction log 
//  Rest of commands fail. 
//  no principals: must not be GSSAPI: use DIGEST-MD5 mechanism   instead. 
//  This is the same object as this.zk, but we cache the downcast op 
//  the version appended to filename should be the same as   the one of quorum verifier. 
//  Override setting in ZKTestCase 
// should not be able to remove follower 2 
//  1246, 1245, 1244, 1243, 1242, 1241,   1240, 1239, 1238, 1237 
//  lets either become the leader or watch the new/updated node 
//  servers list, but there's no "peerType=observer" token in config 
//  to be started (which should take one tickTime (2 seconds)) 
//  4. on the customized leader catch the startForwarding call      (without synchronized), set the node to value v1, then      call the super.startForwarding to generate the ongoing 
//  Let's just make sure it can still move 
//  ok, exception as expected. 
//  use out-of-band method to verify 
//  We track totals by seconds 
//  check that the dynamic configuration file contains the membership info 
//  get the args 
//  is available 
//  e.g. serviceHostnameAndKerbDomain := 
//  start taking old servers 
/*          * When leader election is completed, the leader will set its         * lastProcessedZxid to be (epoch < 32). There will be no txn associated         * with this zxid.         *         * The learner will set its lastProcessedZxid to the same value if         * it get DIFF or SNAP from the leader. If the same learner come         * back to sync with leader using this zxid, we will never find this         * zxid in our history. In this case, we will ignore TRUNC logic and         * always send DIFF if we have old enough history          */
//  Remove all the watchers for the given path 
//  we don't backup static config for standalone mode.   we also don't backup if reconfig feature is disabled. 
//  wait for the the request processor to do his job 
//  We should be able to reconnect with the same session id on a 
//  just make sure that we actually did get it in process at the 
/*          * Send follower info, including last zxid and sid          */
//  On Java 9 and later, prefer GCM ciphers due to improved AES-NI support. 
//  simulate the upgrading scenario, where the reconfig znode 
//  Another client deleted the node first. 
//  Clean up the dead machines 
//  Since we preallocate, we define EOF to be an 
//  This test takes too long tos run! 
//  changing a server's role / port is done by "adding" it with the same 
//  We send TRUNC to 3 and forward any packet starting at 
//  need to wake on connect success or failure to avoid   timing out ClientCnxn.SendThread which may be   blocked waiting for first connect in doTransport(). 
//  file should not exist 
//  start old cluster 
//  Since client's authentication with server is in progress,   send only the null-header packet queued by primeConnection().   This packet must be sent so that the SASL authentication process   can proceed, but all other packets should wait until 
//  We send TRUNC to 3 and forward any packet starting at maxCommittedLog 
//  set shutdown flag 
//  everything went ok 
//  first line should be version info 
//  Push an update request on the queue to resume selecting   on the current set of interest ops, which may have changed 
//  Inform /foo2 update 
/*      * Negative counter for observer server ids.      */
//  to keep the quorum peer running and force it to go into the looking state, we kill leader election 
//  1. set up an ensemble with 3 servers 
// Anything after this needs to go to the transaction log, not applied directly in memory 
//  servers 0 and 1 should connect to all servers, including the one in 
//  make sure we have all servers listed 
/*          * Current state;          */
//  Property value takes precedence if provided 
/*      * Counter to count connection processing threads.      */
//  Delaying the zk server startup so that   ZooKeeperServer#sessionTracker reference won't be   initialized. In the defect scenario, while processing the   connection request zkServer needs sessionTracker reference,   but this is not yet initialized and the server is still in   the startup phase, resulting in NPE. 
/*      * Default value of peer is participant      */
//  Now, try an ephemeral node. This will trigger session upgrade   so there will be createSession request inject into the pipeline 
//  2. SASL authentication has succeeded or failed.. 
//  is older than on-disk txnlog 
//  Header   Base64 text   Footer 
//  just move it to the new list 
/*  members - comma separated list of new membership information (e.g., contents of a membership     * configuration file) - for use only with a non-incremental reconfiguration. This may be specified     * manually via the -members flag or it will automatically be filled in by reading the contents     * of an actual configuration file using the -file flag.      */
//  if the server is not running or hits an internal error. 
/*      * Reception queue      */
//  Simple error checking for conflicting modes 
//  Prime the server that is going to come in late with 50 txns 
//  Validate that we don't see any txn from the second session 
//  could not create tmp directory to hold JAAS conf file : test will fail now. 
//  If running outside the context of Ant or Ant is using a single   test process, then use all valid ports. 
//  this is the backwardCompatibility mode in place before ZK-107   It is for a version of the protocol in which we didn't send peer epoch 
//  Data watcher 
//  1 follower out of 3 is not a majority 
//  Check that the first operation is successful in all request 
//  check throttling 
//  start servers 
/*          * Epoch          */
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * getChildren(java.lang.String)      */
//  current leader candidate 
//  disconnect the client by killing the socket, not sending the   session disconnect to the server as usual. This allows the test   to verify disconnect handling 
//  Delete the first log file, so we will fail to read it back from disk 
//  since user has provided sessionId 
//  the outgoing queue will be sent to the Zookeeper server. 
//  Nothing needed 
//  Peer miss the committedLog and txnlog is disabled 
//  Didn't read anything within the timeout, fallthrough and assume the connection is plaintext. 
//  to the start of the txn 
//  Number of znodes this test creates in each snapshot. 
/*          * Message tag          */
//  add itself 
//  this node does not have a child   is the leaf node   check if its the leaf node 
//  This will wake up the accept thread and the other selector   threads, and tell the worker thread pool to begin shutdown. 
//  fle = fast leader election 
//  add a new node, should trigger a watch 
//  scenario where only three parameter are passed 
//  servers without any authentication configured 
//  Verify no zoo.cfg.dynamic and zoo.cfg.bak files existing locally   when reconfig feature flag is off by default. 
//  visible for testing 
//  we are setting the num quota 
//  this should flush the config to servers 2, 3, 4 and 5 
// Create a DataTree with quota nodes so PathTrie get updated 
//  handshake. 
//  2 servers in current config, 3 in next config 
//  have we read length bytes?
//  this is normal. For example - server found out about new config through FastLeaderElection gossiping   and then got the same config in UPTODATE message so its already known 
//  Simulating FinalRequestProcessor logic: create session request has   delayed and now reaches FinalRequestProcessor. Here the leader zk 
//  Note: SimpleChannelInboundHandler releases the ByteBuf for us   so we don't need to do it. 
//  scenario where four parameter are passed 
// 4. Restart peer2 with quorum.auth.learnerEnableSasl=false and   quorum.auth.serverRequireSasl=false. It should fail to join the 
//  new members are initialized with current config + the new server 
//  Port changes after bind() if the original port was 0, update   localAddress to get the real port. 
//  Member variables for mocking Leader 
//  case-1) 'quorum.auth.enableSasl' is off. Tries to enable server sasl. 
//  second add to electingFollowers, verifier.containsQuorum=true, waitForEpochAck returns without exceptions 
//  should cause "/foo/bar" and "/foo" to get deleted when checkContainers() is called 
//  Remove "server.x=" prefix which quorum peer does not include. 
//  Extract keyword arguments to command from request parameters 
/*      * (non-Javadoc)     *     * @see org.apache.zookeeper.server.ServerCnxnIface#sendResponse(org.apache.zookeeper.proto.ReplyHeader,     *      org.apache.jute.Record, java.lang.String)      */
//  we don't have a designated leader - need to go into leader   election 
//  localPeerBean.1 of ReplicatedServer_1 
//  cannot create ephemeral nodes on a local session. 
//  Got expected exception 
//  for i < (numClients/2) this tests the case currentHost == null &&   reconfigMode = true   for i >= (numClients/2) this tests the case currentHost!=null &&   reconfigMode = true 
//  Test that sequential filenames are being created correctly, 
//  Don't schedule the purge task with zero or negative purge interval. 
//  We may get the correct exception but the txn may go through 
//  We send DIFF to (6,0) and forward any packet starting at (5,0) 
//  ensemble and will reject it. 
//  ValidateProcessor is set up in a similar fashion to ToBeApplied   processor, so it can do pre/post validating of requests 
//  Returned empty set must not be modifiable 
//  not writing them back to static file 
//  shut servers 0..2 down 
//  notifies watcher removal 
//  We'll fill this in later 
//  Exists watcher 
//  shutdown the previous zk 
//  Mark this connection as once again ready for selection 
//  the following statement will throw. 
/*      * Test that a reconfiguration fails if the proposed change would leave the     * cluster with less than 2 participants (StandaloneEnabled = true).     * StandaloneDisabledTest.java (startSingleServerTest) checks that if     * StandaloneEnabled = false its legal to remove all but one remaining     * server.      */
// Process has not terminated.  So check if it has completed   if not just destroy it. 
//  "myhost.foo.com@FOO.COM" 
//  On entry to this method, qcm must be non-null and the locks on both qcm and QV_LOCK   must be held.  We don't want quorumVerifier/lastSeenQuorumVerifier to change out from   under us, so we have to hold QV_LOCK; and since the call to qcm.connectOne() will take   the lock on qcm (and take QV_LOCK again inside that), the caller needs to have taken 
//  If we already started writing p, p.bb will already exist 
//  by default create this directory, but otherwise complain instead   See ZOOKEEPER-1161 for more details 
//  2 is down. 
//  Must be Java 1.8 or earlier 
//  Client only has 1 outgoing socket, so the event loop group only needs   a single thread. 
//  this is valid node for quota 
// 10 seconds 
/*      * Tests that an incremental reconfig fails if the current config is hiearchical.      */
// are cleared 
//  zxid should be non-null too 
//  shut them down and then simulate a reboot with a reconfig in progress 
//  new followers. 
/*      * Socket options for TCP keepalive      */
//  Possible since it's just deserialized from a packet on the wire. 
//  all clients should be connected 
//  When Leader.shutdown() calls ss.close(),   the call to accept throws an exception.   We catch and set stop to true. 
//  Visible for testing 
/*          * Reset incomingBuffer          */
//  tests the case currentHost == null && lastIndex == -1   calls next for clients with index < numClients/2 
//  make sure we have these 5 servers listed 
//  accepted epoch = 5 it should now have 6 
//  Trying to load a PEM file with PKCS12 loader should fail 
//  Sun doesn't include the address that causes this   exception to be thrown, also UAE cannot be wrapped cleanly   so we log the exception in order to capture this critical   detail. 
//  maximum retry count while trying to bind to election port 
//  Font used to display message 
//  server login 
//  Both servers 0 and 1 will have the .next config file, which means 
//  if the close operation (rename) fails we'll get notified.   worst case the tmp file may still exist 
//  the scenario that inspired this unit test 
//  Test that with no snaps, findNRecentSnapshots returns empty list 
// check if I'm in the new configuration with the same quorum address -  
// using linux bash commands to retrieve info 
//  Map the elem to the new expiry time. If a different previous 
//  We don't validate right away, will do another session create first 
//  lower-bound grace period to 2 secs 
/*              * The default QuorumVerifier is QuorumMaj              */
//  Java 8 default should have the CBC suites first 
//  find some server that's staying 
//  
//  number of servers stayed the same or decreased 
//  closing the resources 
// LOG.info("Closed client: " + zk.describeCNXN()); 
//  this is ok -- just a packet from an old server which   doesn't contain readOnly field 
//  Arrange & Act 
//  110 character base path 
//  Do 25% write / 75% read request mix 
//  to send the watches 
//  before restart 
//  delete any already existing .next file 
//  setData using chRoot client. 
//  Default white list for 3.5.x is empty, so all command should fail. 
//  This will add to local session tracker if it is enabled 
//  wait some time to let this get written to disk 
//  The leader should time out and remaining servers should go into   LOOKING state. A new leader won't be established since that   would require completing the reconfig, which is not possible while 
/*  Rollback change records from failed multi-op  */
//  Returns the serverId from the sessionId (the high order byte) 
//  SessionExpiredException as the previous local session was not persisted). 
//  2 servers in current config, 5 in next config 
//  We need to set isLocalSession to tree for these type of request   so that the request processor can process them correctly. 
//  Arrange   [testhost-3.testdomain.com:1237, testhost-2.testdomain.com:1236, testhost-1.testdomain.com:1235] 
//  Read the uptodate ack 
//  observer calls waitForNewLeaderAck, should fail verifier.containsQuorum 
//  ensure all servers started 
//  stop() called shortly after start(), before   this thread started running. 
//  Strip leading "/" 
//  machine is under load 
//  wait for the falseLeader to disconnect 
//  2. Verify whether the connecting host is present in authorized hosts.   If not exists, then connecting peer is not authorized to join the 
//  newly elected zookeeper quorum. 
//  compatibility. 
//  rethrow exception 
//  cool now make it V1. a -1 parentCVersion will   trigger fixup processing in processTxn 
//  Disable sending DIFF using txnlog, so that this test still   testing the ZOOKEEPER-962 bug 
//  4. authenticating object exists, so ask it for its progress. 
//  Use txnlog and committedLog to sync 
//  execute writer operation and flush 
//  EOF or corrupted record 
//  set peer's server to null 
//  Check that the second operation failed after the first request 
//  restore socket timeout to the old value 
//  ensure at least the two clients we created are accounted for 
//  don't delete tmpFile - this ensures we don't attempt to create   a tmpDir with a duplicate name 
//  disable it if enabled 
//  close the session and newly created ephemeral node should be deleted 
//  only 1 commit, otherwise it will be flaky   Then ... verify serverStats is updated to the number of commits (as threshold is set to 0) 
//  Clean up dead sessions 
/*      * Max buffer size to be read from the network.      */
//  Send a diff 
//  This server should fail to join the quorum as it is not using one of the supported suites from the other 
//  before connecting to quorum, servers should have set up dynamic file   version and pointer. And the lag-off server is using the older   version dynamic file. 
//  This should never happen when executing reconfig command line,   because it is guaranteed that we have a ZooKeeperAdmin instance ready   to use in CliCommand stack.   The only exception would be in test code where clients can directly set   ZooKeeper object to ZooKeeperMain. 
//  Using the old PlainSocketImpl (prior to JDK 13) we expect to get Socket Exception 
//  when a reconfig occurs where the leader is removed or becomes an observer,  
//         ZooKeeper zk = createClient();            long sessionId = zk.getSessionId();          byte[] passwd = zk.getSessionPasswd();          zk.close();            zk.close();            LOG.info("Closed first session");            startSignal = new CountDownLatch(1);          zk = new ZooKeeper(HOSTPORT, CONNECTION_TIMEOUT, this,                  sessionId, passwd);          startSignal.await();            LOG.info("Opened reuse");            Assert.assertEquals(sessionId, zk.getSessionId());            zk.close();      } 
//  we're good 
//  we do not want to wait for a session close. send it as soon as we   detect it! 
//  we can just ignore because the child watcher takes care of this 
/*          * current state of sender          */
//  get path [watch] 
//  SSL prohibits unilateral half-close 
//  try to access it with different user (myuser) 
//  test failed somehow. 
//  guarded by sync 
//  Close the session. 
//  for self-signed certs, issuer == subject 
//  connect to it 
//  of updates; see the implementation comment at setLastSeenQuorumVerifier(). 
//  close the bad client socket immediately 
/*      * Test if a receiveConnection is able to timeout on socket errors      */
//  Verify that server is following and has the same epoch as the leader 
//  For tests and NettyServerCnxnFactory only, thus package-private. 
/*                              * We want to make sure we implement the state machine                             * correctly. If we are a PARTICIPANT, once a leader                             * is elected we can move either to LEADING or                              * FOLLOWING. However if we are an OBSERVER, it is an                             * error to be elected as a Leader.                              */
//  Change the election round for one of the members of the ensemble 
//  log warning message if there is no matching commit   old leader send outstanding proposal to observer 
//  Validate data on both follower and leader 
//  start all the servers 
//  [testhost-3.testdomain.com:1237, testhost-2.testdomain.com:1236, testhost-1.testdomain.com:1235] 
//  If we explicitly close the session, then the session id should no 
/*                                  * Send a notification back if the peer that sent this                                 * message is also looking and its logical clock is                                 * lagging behind.                                  */
//  e.g. servicePrincipalName := "zookeeper" 
//  validate typical case - requested == negotiated 
//  server and the local session was not persisted). 
//  the connecting peer (id = 2) is a 3.4.6 observer 
//  GSSAPI: server sends a final packet after authentication succeeds 
//  Peer has zxid of epoch 3 
//  Force snapshot and restore 
//  Do Nothing 
//  hdm.addLoggerMBean(rootLogger.getName()); 
//  If version can't be parsed, use the more conservative Java 8 default 
//  ZOOKEEPER-2467 : Testing negative number for redo command 
//  @see jira issue ZOOKEEPER-706. Test auto reset of a large number of 
//  If we are in read-only mode, seek for read/write server 
//  Lost quorum of last committed and/or last proposed   config, set shutdown flag 
/*              * Have to wait for the first ACK, wait until             * the leader is ready, and only then we can             * start processing messages.              */
//  Shutdown Zookeeper. 
//  second chance...   in some cases, leader change in particular, the timing is   very tricky to get right in order to assure that the client has   disconnected and reconnected. In some cases the client will   disconnect, then attempt to reconnect before the server is   back, in which case we'll see another connloss on the operation   in the try, this catches that case and waits for the server   to come back 
//  force the zxid to be behind the content 
//  different zxids for a server depending on timing. 
//  Sends connection request asynchronously if the quorum   sasl authentication is enabled. This is required because   sasl server authentication process may take few seconds to   finish, this may delay next peer connection requests. 
//  suppose that this new server never heard about the reconfig proposal 
/*      * Test if Worker threads are getting killed after connection loss      */
//  With the defect, leader hangs here also, but with fix   it does not 
//  Capture the command name from the URL 
//  clear pending revalidations 
//  expected, sort of 
/*              * Later epoch              */
//  Start with 9 servers and 10000 clients 
//  Initialize 'lastLogin' to do a login at first time 
//  accept, maxClientCnxns, configureBlocking 
//  start server again with corrupted database 
//  Don't leak sockets on errors 
//  determine whether we need to send an AuthFailed event. 
//  disable Client Sasl 
//  create transaction and snapshot files in data directory 
//  the first poll is just a session delivery 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * saveDefaultConnectionFile(java.util.Properties)      */
//  different server, since it has been propagated. 
//  correct 
//  Connection set is relied on heavily by four letter commands 
//  compare http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html 
//  ... then disable throttling after 2 seconds. 
//  Using the NioSocketImpl after JDK 13, the expected behaviour on the client side   is to reach the end of the stream (bytesRead == -1), without a socket exception. 
//  Utility method that recreates a new ZooKeeperAdmin handle, and wait for the handle to connect to 
//  number of servers increased 
//  ensure it closes - in particular wait for thread to exit 
//  reset for next run 
//  Populate DIGEST-MD5 user -> password map with JAAS configuration entries from the "Server" section.   Usernames are distinguished from other options by prefixing the username with a "user_" prefix. 
//  First test to see if the watch survives across reconnects 
//  getters 
//  Imp: Safer side catching all type of exceptions and remove 'sid'   from inprogress connections. This is to avoid blocking further   connection requests from this 'sid' in case of errors. 
//  lets change leader to observer 
//  ensure server started 
//  Peer has zxid of epoch 1 
//  prevent untyped construction 
//  renewal thread's main loop. if it exits from here, thread will exit. 
//  the start of second log, since the first one is removed 
//  nextProcessor returns. 
/*      * See <a href="{@docRoot}/../../../docs/zookeeperAdmin.html#sc_zkCommands">     * Zk Admin</a>. this link is for all the commands.      */
//  Getting NEWLEADER here instead of in discovery    means this is Zab 1.0 
//  Guarantee that the final token is the one we're expanding 
//  already has quota 
//  Verify ACLs in the response 
//  ZooKeeper server supports two kinds of connection: unencrypted and encrypted. 
//  make sure that the error thread exits 
//  Unknown session 
//  quorum servers. 
//  Peer has zxid of epoch 0 
//  test old cluster 
/*      * Thread to run an instance of leader election for      * a given quorum peer.      */
// the directory containing the 
// Spy on ZK so we can check if a snapshot happened or not. 
//  verify no access 
//  This should fail since the buffer size > the data size due to extra fields 
//  if we can get here, it is a valid global session 
//  session is setup 
//  Set currentlyCommitting so we will block until this   completes. Cleared by CommitWorkRequest after 
//  expiry is before next scheduled refresh). 
//  New server type need to handle in-flight packets 
//  This will remove the cnxn from cnxns 
//  open a connection 
//  Use them all except one to build the ensemble 
//  modify follower's client port 
//  read "is read-only" flag 
//  Send closeSession request. 
//  the server should respond within 10s 
//  element, take, and remove follow the same pattern.   We want to return the child node with the smallest sequence number.   Since other clients are remove()ing and take()ing nodes concurrently,    the child with the smallest sequence number in orderedChildren might be gone by the time we check.   We don't call getChildren again until we have tried the rest of the nodes in sequence order. 
//  Make a clean snapshot 
//  clear out the ref to ensure no reuse 
//  servers 1 and 2 should be able to work independently 
//  setup session tracker 
//  This has to be set to null when the same instance of this class is reused between test cases 
//  "zookeeper/myhost.foo.com@FOO.COM" 
//  Do nothing, Observers keep themselves to   themselves. 
//  when local=true, here if connection not available, simply removes 
//  backward compatibility - dynamic configuration in the same file as 
//  access only inside synchronized(handshakeCompletedLock) { ... } blocks 
//  trigger the watches 
//  sleep for 10 seconds. 
//  including the lag-off server. 
//  Code unfortunately must be duplicated below since we can't assign   anything   before calling super 
//  Setup a database with two znodes 
//  Find the log file that starts before or at the same time as the   zxid of the snapshot 
//  mutators 
//  Handshake will take place, and then X509AuthenticationProvider should reject the untrusted cert 
//  Make the transaction log directory read only 
//  expecting close to log session closure 
//  1: create ephemeral node 
//  The QuorumCnxManager is held through an AtomicReference to ensure cross-thread visibility 
//  For Invalid dataversion number should not throw exception 
//  expected 
//  if idx is the the leader then everyone will get disconnected,   otherwise if idx is a follower then just that client will get 
//  This will wake up the selector threads, and tell the   worker thread pool to begin shutdown. 
//  again after leader election 
//  Trigger a GC. This will hopefully (but not necessarily) print   details about detected leaks to standard error before the error   is thrown. 
//  Need check if the record is a DataNode instance because of changes in ZOOKEEPER-2014   which adds default ACL to config node. 
//  Peer has zxid that we have never seen 
/*      * Start up the ZooKeeper server.     *     * @param args the configfile or the port datadir [ticktime]      */
//  Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state 
//  unregister from JMX 
//  Change the quorum system from majority to hierarchical. 
//  check session close request 
//  returns whether we are interested in writing, which is determined 
//  Expect this to fail, the trust store does not contain a private key 
//  Use the odd one out for the client 
//  verify node delete watcher 
//  this case is not tested so throw the expected exception 
//  and so on 
//  not logs or anything else (per ZOOKEEPER-2420) 
//  0xff = Extended feature is ON   0x0000 = Extended type id TTL (0) 
//  longer be valid. 
//  And now it goes back to normal next() so it should be everything 
//  Mutation packets will be queued during the serialize,   so we need to mark when the peer can actually start   using the data 
//  Shutdown for the last time. 
//  queue 
// update the current candidate, and if it is the only one remaining, return it 
//  should never ever happen 
//  check get 
/*         * If we have a majority, then we are good to go.         */
//  Label to store Icon 
//  waiting for the session expiry 
//       throw new RuntimeException("My id " + myid + " not in the peer list");  } 
//  Additional sanity checks on content selected by wildcard can be done here 
/*  nada  */
// have the new credentials (pass it to the LoginContext constructor) 
//  protected by synchronized(this) 
//  4. wait one of the follower to be the new leader 
//  Exception is expected 
//  Just create some node so that we know the current zxid 
//  wait for the setData txn being populated 
//  wrap SASL response token to client inside a Response object. 
//  ensure no beans are leftover 
//  Reconfig node is access controlled by default (ZOOKEEPER-2014). 
//  initializing it for new connection 
// 2 should elect itself as leader and run by itself 
//  next) 
//  give dataTree a chance to sync its lastProcessedZxid 
//  The child might already be deleted during taking fuzzy snapshot,   but we still need to update the pzxid here before throw exception 
//  lets kill the leader and see if a new one is elected 
// When we lock markerNode, allow writeRecord to continue 
//  Below commands all need a live connection 
//  org.apache.log4j.Logger.getRootLogger(); 
// do nothing 
//  should not happen 
//  Check for a valid snapshot 
//  close() could have been called if receiveMessage() failed 
//  Move back to the old port 
//  Register a watch on the node 
//  do not add non quorum packets to the queue. 
//  false means that the session has expired 
//  check if all the followers are alive 
//  Adding pre-created watcher 
//  Since sessionTracker and syncThreads poll we just have to   set running to false and they will detect it during the poll 
// this.numRequestsProcessing.incrementAndGet(); 
// we do not need to make a copy of node.data because the contents  are never changed 
//  Set to true when connected to a read-only server, or a read-write (quorum) server. 
//  parse out chroot, if any 
//  Prepare a thread that will create znodes. 
//  thread object 't' will be null if a refresh thread is not needed. 
//  Just in case 
//  GSSAPI. 
//  The bug will manifest itself here because zkIdle will expire 
//  1. Authentication hasn't finished yet: we must wait for it to do so. 
//  Re-connect the client (in case we were connected to the shut down 
//  ignore connectionloss when removing from local   session 
//  assuming the first packet is the priming packet. 
//  since this is single buffer being resused   we need   to truncate the previous bytes of string. 
/*      * Does create/delete depending on the type and verifies     * if cversion before the operation is 1 less than cversion afer.      */
//  Just make sure we are good when admin made some mistakes in config file. 
//  file when they boot 
/*  Delete  */
//  Receive challenge request 
//  Ensure that we can convert all valid integers to KeeperStates 
//  shutdown the server 
// if this server is voter in new config with the same quorum address,   then it will remain the leader  otherwise an up-to-date follower will be designated as leader. This saves 
//  cluster 
//  if the client is not currently connected to any server 
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#getChildCount()          */
//  TODO partitioning of peers and clients 
//  Run servers 0..2 for a while 
//  HBase currently adds a single server line to the config, for   b/w compatibility reasons we need to keep this here. If standaloneEnabled   is true, the QuorumPeerMain script will create a standalone server instead   of a quorum configuration 
//  now check if its one of the zookeeper node child 
//  even though followers timed out, their ids are in connectingFollowers, and their   epoch were accounted for, so the leader should not block and since it started with  
//  channel disconnection happened 
/*  This file copied from Hadoop's security branch,  * with the following changes:  * 1. package changed from org.apache.hadoop.util to  *    org.apache.zookeeper.  * 2. Usage of Hadoop's Configuration class removed since  *    it is not available in Zookeeper: instead, system properties  *    are used.  * 3. The deprecated getUlimitMemoryCommand() method removed since  *    it is not needed.   */
//  multi record:     set "/foo" => succeed, leave a outstanding change     delete "/foo" => fail, roll back change 
//  independently of the client socket implementation details, we always make sure the   server didn't receive any data during the test 
//  single address not extracted 
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#getIndex(javax.swing.tree.TreeNode)          */
/*      * Counter to count worker threads      */
//  serialize the data with one znode with acl 
// addr should never be null, but just to make sure 
//  1. SASL client is disabled. 
//  cut the tree till their is more than one child 
//  Start Admin server 
/*                  * Decrement outstanding request count. The processor may be                 * blocked at the moment because it is waiting for the pipeline                 * to drain. In that case, wake it up if there are pending                 * requests.                  */
//  config + itself 
// the timeout thread handling 
//  zxid should still be previous result because record's not changed. 
//  6 is not in the view - its vote shouldn't count 
/*      * The control sequence sent by the telnet program when it closes a     * connection. Include simply to keep the logs cleaner (the server would     * close the connection anyway because it would parse this as a negative     * length).      */
//  DIFF + 1 proposals + 1 commit 
//  org.apache.log4j.jmx.HierarchyDynamicMBean hdm = new org.apache.log4j.jmx.HierarchyDynamicMBean(); 
/*  to be safe we just create a new         * datatree.          */
// add partcipants  change to observers 
// LOG.trace(e); 
//  This test simulate the usual rolling restart with no membership change:   1. A node is shutdown first (e.g. to upgrade software, or hardware, or cleanup local data.).   2. After upgrade, start the node.   3. Do this for every node, one at a time. 
//  any reconfig is invoked 
// Thread.sleep(60000);  assertTrue(message, fdCount <= initialFdCount); 
//  limited number of retries. 
//  Else what we are expecting since there are no outstanding watches 
//  Note: we don't care about delete events 
//  set auth using digest 
//  lets force the recreation of the id 
//  find most idle node 
//  four letter words take care   need not do anything else 
//  prior to this request 
//  watches set below exceeds 1MB. 
//    test get/exists with single set of watchers     get all, then exists all 
//  After leaving listener thread, the host cannot join the   quorum anymore, this is a severe error that we cannot   recover from, so we need to exit 
//  Both servers 0 and 1 will have the .next config file, which means   for them that a reconfiguration was in progress when they failed 
//  send error message to the learner 
//  Tells whether SSL is enabled on this ServerCnxnFactory 
//  iteration 
//  Peer has 0 zxid (new machine turn up), txnlog 
//  Make sure we can't convert from an invalid wrapper 
//  static configuration params see writeDynamicConfig() 
/*      * Object to synchronize access to recvQueue      */
//  list of followers that are ready to follow (i.e synced with the leader) 
//  and the leader will complete it. 
//  Set a small preAllocSize (.5 MB) 
//  Since JettyAdminServer reads a system property to determine its port,   make sure it initializes itself before setting the system property   again with the second port number 
//  the leader 
//  Verify correctness of data and whether sequential znode creation 
//  Node 1 is started without the leader (3) in its config view 
// noinspection PointlessBitwiseExpression   TTL_RESERVED_BIT is actually zero - but it serves to document that the proper extended bit needs to be set 
/*      * A peer can either be participating, which implies that it is willing to     * both vote in instances of consensus and to elect or become a Leader, or     * it may be observing in which case it isn't.     *     * We need this distinction to decide which ServerState to move to when     * conditions change (e.g. which state to become after LOOKING).      */
//  better: actions/help-about, but not in tango 
//  The password here is 'test'. 
//  Always treat packet from the client as a possible   local request. 
//  And the ephemeral nodes will be gone since the session died. 
//  commit (writes the new config to ZK tree (/zookeeper/config)                      
//  Form a quorum without ssl 
//  if there are multiple hostports, just take the first one 
//  Close connections still pending on the selector. Any others   with in-flight work, let drain out of the work queue. 
//  Again failure is expected because no ACL is associated with this user. 
/*  * This code is originally from HDFS, see the similarly named files there * in case of bug fixing, history, etc...  */
// set the session owner   as the follower that   owns the session 
//  simply return as there is a connection request to   server 'sid' already in progress. 
//  start server again 
//  Leave the bad client socket idle 
//  Add as global before removing as local 
//  respective reconnection interval 
//  append "am-I-allowed-to-be-readonly" flag 
//  read operation during r/o mode 
//  add it to pendingSyncs. 
//  Peer has zxid of epoch 2, so it is already sync 
//  add transaction log files to the snap version dir 
/*      * Creates a configuration string for servers 0..numServers-1 Ids in     * observerIds correspond to observers, other ids are for participants.      */
//  Find leader id. 
//  We now ship the request to the leader. As with all   other quorum operations, sync also follows this code   path, but different from others, we need to keep track   of the sync operations this Observer has pending, so we 
//  Act 
//  Empty snapshot and logfile containing a 5000-byte create 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorManager#removeWatchers     * (java.util.Collection)      */
//  5. send a create request to old leader and make sure it's synced to disk, 
//  quorum.auth.learnerRequireSasl=true, quorum.auth.serverRequireSasl=false 
//  make sure this is always synchronized with Zoodefs!! 
//  we know this from the data files   this node is the last node in the snapshot 
//  ZOOKEEPER-569:   If no votes are received for live peers, reset to voting   for ourselves as otherwise we may hang on to a vote 
//  close listen socket and signal selector threads to stop 
//  checking the child version using chRoot client. 
//  Setting this to "true" will enable encrypted client-server communication. 
//  Local session from other server 
//  assertFalse(log.hasWarned); 
/*          * Start server 0          */
//  Ignoring exception. If there is an ioexception   then one of the following assertion will fail 
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#getChildAt(int)          */
/*      * (non-Javadoc)     *     * @see org.apache.zookeeper.server.ServerCnxnIface#getSessionId()      */
/*      * (non-Javadoc)     *     * @see org.apache.zookeeper.Watcher#process(org.apache.zookeeper.proto.WatcherEvent)      */
//  create DataNode and call getChildren 
// that we can reconfigure down to one participant with observers. 
// make that testData exists otherwise it fails on windows 
//  Receive new message 
// 1000(1 second) is to prevent race condition missing to send the second ping  also make sure not to send too many pings when readTimeout is small  
//  normally because the leader didn't execute waitForEpochAck 
/*              * A snapshot might be in progress while we are modifying the data             * tree. If we set lastProcessedZxid prior to making corresponding             * change to the tree, then the zxid associated with the snapshot             * file will be ahead of its contents. Thus, while restoring from             * the snapshot, the restore method will not apply the transaction             * for zxid associated with the snapshot file, since the restore             * method assumes that transaction to be present in the snapshot.             *             * To avoid this, we first apply the transaction and then modify             * lastProcessedZxid.  During restore, we correctly handle the             * case where the snapshot contains data ahead of the zxid associated             * with the file.              */
//  succeed. We explicitly disable it at the top of X509Util.java. 
//  make sure the updates indeed committed. If it is not 
//  Simulating close session request: removeSession() will be executed 
//  note that the login object is static: it's shared amongst all zookeeper-related connections.   in order to ensure the login is initialized only once, it must be synchronized the code snippet. 
//  Some tests may not have a static config file. 
//    test get/exists with single set of watchers    get/exists together 
/*      * Local IP address      */
//  Stops automatic reads of incoming data on this channel. We don't   expect any more traffic from the client when processing a 4LW 
//  If previous state was not NEW, start() has already been called. 
// $NON-NLS-1$ 
//  Start up two of the quorum and add 10 txns 
//  Do some other update, so we bump the maxCommttedZxid 
//  remove hosts 7 and 8 (the last two in a list of 9 hosts) 
//  for sending over wire 
/*                      * Done with the election round, so now we set the vote in                     * the peer. A real zookeeper would take care of setting the                     * current vote. Here we do it manually.                      */
// commit and send some info 
//  close all open connections 
//  Follower is already sync with us, send empty diff 
//  roll the log 
//  this is negative, so that if a learner that does auth, connects to a   server, it'll think the received packet is an authentication packet 
//  The last valid ASCII character 
//  srvr is enabled by default due to the sad fact zkServer.sh uses it. 
/*      * Maximum capacity of thread queues      */
//  Creating chRoot client. 
//  Make sure we can instantiate a key manager from the PKCS12 file on disk 
//  This could happen both in static file or dynamic file. 
//  standalone server doesn't need myid file. 
//                 LOG.info("Testing " + i + " connections");              }              // We want to make sure socket descriptors are going away              zk = new ZooKeeper(hostPort, 30000, this);              zk.getData("/", false, new Stat());              zk.close();          }      } 
//  doesn't exist and the acl cache is empty 
/*                      * Get the current value of the logical clock for this peer                     * so that we know in which round this peer has executed.                      */
//  4 and 5 are observers, their vote shouldn't count 
//  refresh interval in msec   last time the command was performed   env for the command execution 
//  Add some timing margin for the quorum to elect a leader   (without this margin, timeouts have been observed in parallel test runs) 
//  authorized host lists 
//  Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up 
/*                  * Remove next notification from queue, times out after 2 times                 * the termination time                  */
//  children have changed, so read in the new list 
//  should be numClients/10 in expectation, we test that its numClients/10 +- slackPercent
//  Arrange   [testhost-4.testdomain.com:1238, testhost-3.testdomain.com:1237, testhost-2.testdomain.com:1236, testhost-1.testdomain.com:1235] 
//  The current protocol and two previous generations all send at least 28 bytes 
//  great this is what we want! 
/*              * The commit workers will have to execute this line before they             * wake up the commit processor. So this value is up-to-date when             * variant check is performed              */
//  send 0 if session is no   longer valid 
//  Restart ZK and observe a failure 
//  RemotePeerBean 
//  we are connected to a 1.0 server so accept the new epoch and read the next packet 
//  3 servers still up so this should work 
/*              * ZOOKEEPER-1863: continue only if there is no new request             * waiting in queuedRequests or it is waiting for a             * commit.               */
//  if we don't suspend a peer it will rejoin a quorum 
//  now lets stop the server 
//  zkServer.sh depends on "srvr". 
/*              * If using FLE, then every server requires a separate election             * port.              */
//  Since we don't check on the futures created by write calls to the channel complete we need to make sure   that all writes have been completed before closing the channel or we risk data loss   See: http://lists.jboss.org/pipermail/netty-users/2009-August/001122.html 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.encryption.DataEncryptionManager#decryptData     * (byte[])      */
//  We don't want to sleep on the first ever connect attempt. 
//  3 followers out of 5 are a majority of the voting view 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * getNodeIndex(java.lang.String)      */
/*          * Things we can only update after the whole txn is applied to data         * tree.         *         * If we update the lastProcessedZxid with the first sub txn in multi         * and there is a snapshot in progress, it's possible that the zxid         * associated with the snapshot only include partial of the multi op.         *         * When loading snapshot, it will only load the txns after the zxid         * associated with snapshot file, which could cause data inconsistency         * due to missing sub txns.         *         * To avoid this, we only update the lastProcessedZxid when the whole         * multi-op txn is applied to DataTree.          */
//  Directories are not used but we need it to avoid NPE 
//  queue the pair (watch set & event) for later processing 
/*      * getXid() is called externally by ClientCnxnNIO::doIO() when packets are sent from the outgoingQueue to     * the server. Thus, getXid() must be public.      */
//  Dump data to peer 
/*  Send a connect request. Any socket that has been closed (or at least                 * not added to the cnxn list on the server) will not have any bytes to                 * read and get an eof.                 *                 *  The trick here was finding a call that caused the server to put                 *  bytes in the input stream without closing the cnxn. None of                 *  the four letter commands do that, so we actually try to create                 *  a session which should send us something back, while maintaining                 *  the connection.                  */
//  run through till the counts no longer change on each server   max 15 tries, with 2 second sleeps, so approx 30 seconds 
//  also check to update the quotas for this node 
//  Test a hostname that resolves to a single address 
//  assertTrue(log.hasWarned); 
//  next scheduled refresh is sooner than (now + MIN_TIME_BEFORE_LOGIN). 
//  We send TRUNC and forward any packet starting lastProcessedZxid 
//  db is clear as part of deserializeSnapshot() 
/*              * Write a number of times until it             * detects that the socket is broken.              */
/*      * This class parses the initial identification sent out by peers with their     * sid & hostname.      */
//  Trying to get a first txn on the third give us the 
//  will do sessionTracker.addSession(id, timeout) 
/*  this means that we couldn't find any snapshot, so we need to             * initialize an empty database (reported in ZOOKEEPER-2325)  */
// check to see if zkDb is not null 
//  Upon reception of an ack message, remove it from the 
//  When ... 
//  when we add secureCnxnFactory. 
//  ... then force a throttled read after 1 second (this puts the read into queuedBuffer) ... 
/*              * Otherwise send to the corresponding thread to send.              */
//  Stop queuing connection attempts 
//  if we went to the next log file, we should call next() again 
//  The user did not override the default context. It might be that they just don't intend to use SASL,   so log at INFO, not WARN, since they don't expect any SASL-related information. 
//  this should only be for the beginning of the path   i.e. "/..." - split(path)[0] is empty string before first '/' 
//  so it should not do any work other than trace logging. 
//  Since pNew = 1 we should first try the new servers 
//  ZOOKEEPER-558:   In some cases the server does not close the connection (e.g., closeconn buffer   was not being queued — ZOOKEEPER-558) properly. This happens, for example,   when the client closes the connection. The server should still close the session, though. 
//  ignore exception 
//  TODO: introspect about runtime environment (such as jaas.conf) 
//  Resolve hostname for the remote server before attempting to   connect in case the underlying ip address has changed. 
// Another client removed the node first, try next 
//  Enumeration enumer = r.getCurrentLoggers(); 
//  Note: need to create a new ClientX509Util each time to pick up modified property value 
//  should cause "/foo" to get deleted when checkContainers() is called 
//  let it through, we don't require auth 
//  note that we should run the server, shut it down and only then   simulate a reconfig in progress by writing the temp file, but here no   other server is competing with them in FLE, so we can skip this step   (server 2 is booted after FLE ends) 
//  Last opened toaster 
//  take the first server on the list 
//  start server 2 with old config, where it is an observer 
//  Wait for the old leader to start completely 
//  lost the race, another thread already set the value 
//  DIFF + 3 proposals + 3 commit 
//  Initialized to 1 to prevent sending   stale notifications to peers 
// Add two participants and change them to observers to check 
//  this request came from someone else so just   send the commit packet 
//  track the number of records written to the log 
//  int percent = Integer.parseInt(timePercentCount[1]); 
//  OK to wait until socket disconnects while reading. 
//  Start thread that blast packets in the queue to learner 
//  '/multi' should have been deleted 
//  Assert   no exception thrown 
/* 	  Count number of log entries. Any line starting with a timestamp counts as an entry	 */
//  remotePeerBean.1 shouldn't exists in ReplicatedServer_3 
// votes[i] = v; 
//  revert back the error 
//  generate some transactions that will get logged 
//  and ensure trueLeader is still the leader 
//  sockKey may be concurrently accessed by multiple   threads. We use tmp here to avoid a race condition 
//  JAAS non-GSSAPI authentication: assuming and supporting only   DIGEST-MD5 mechanism for now.   TODO: use 'authMech=' value in zoo.cfg.
/*  *  Used to perform an atomic write into a file. *  If there is a failure in the middle of the writing operation,  *  the original file (if it exists) is left intact. *  Based on the org.apache.zookeeper.server.quorum.QuorumPeer.writeLongToFile(...) idiom *  using the HDFS AtomicFileOutputStream class.  */
/*          * If everyone else thinks I'm the leader, I must be the leader.         * The other two checks are just for the case in which I'm not the         * leader. If I'm not the leader and I haven't received a message         * from leader stating that it is leading, then predicate is false.          */
//  Create a new follower 
//  setup the messages to be streamed to follower 
//  Then ... 
//  nothing to prepend 
//  Verify serverStats is 0 before any commit 
//  If we cannot guarantee that this is strictly the starting txn   after a given zxid, we should fail. 
//  their are more child nodes   so just reset property. 
//  filter read requests 
//  we need to shutdown and start back up to make sure that the create session isn't the first transaction since 
//  find a follower 
//  XXX: Is lastProcessedZxid really the best thing to use? 
//  revert redirect of out/err streams - important step! 
//  transport 
//  old list (just the ports): 1238, 1237, 1236, 1235 
//  Remove all outstanding changes for paths of this multi.   Previous records will be added back later. 
//  When we explicitly close the session, we should not be able to 
//  Commit proposal may lag behind data tree, but it shouldn't affect   us in any case 
//  Check for race condition with session upgrading 
//  remotePeerBean.1 shouldn't exists in ReplicatedServer_2 
//  Peer has zxid of epoch 5 
//  [testhost-2.testdomain.com:1236, testhost-1.testdomain.com:1235] 
//  ignore timeout 
//  that add to outstandingChanges. 
//  clear all the connections on which we are selecting 
//  into looking state or following/leading state. 
//  Set to true if and only if constructor of ZooKeeperSaslClient 
//  This means reconfigMode = true, and nextHostInReconfigMode will be   called from next 
//  'rmr' is deprecated, so the test here is just for backwards 
//  setdata 
//  standalone mode - reconfiguration currently not supported 
//  in Zab V1.0 (ZK 3.4+) we might take a snapshot when we get the NEWLEADER message, but in pre V1.0   we take the snapshot on the UPDATE message, since Zab V1.0 also gets the UPDATE (after the NEWLEADER) 
//  Set the logical clock to 1 on fle instance of server 3. 
//  e.g. "zoo.cfg.dynamic", it returns null. 
//  check that the change has propagated to everyone 
//  Initialize Zookeeper again from the same dataDir. 
//  Peer has zxid of epoch 6 
//  Ensure we get the same value back after round trip conversion 
/*                              * Received ack successfully, so return                              */
//  Peer has zxid of epoch 4 
//  this is what we want 
/*          * Snapshots are taken lazily. It can happen that the child         * znodes of a parent are created after the parent         * is serialized. Therefore, while replaying logs during restore, a         * create might fail because the node was already         * created.         *         * After seeing this failure, we should increment         * the cversion of the parent znode since the parent was serialized         * before its children.         *         * Note, such failures on DT should be seen only during         * restore.          */
//  message with bad protocol version 
// setup servers 1-3 to be followers and 4 and 5 to be observers 
//  Border color 
/*  * This code is originally from HDFS, see the file name TestMiniKdc there * in case of bug fixing, history, etc. * * Branch : trunk * Github Revision: 916140604ffef59466ba30832478311d3e6249bd  */
//  We know the total JUnit process count and this test process's ID.   Use these values to calculate the valid range for port assignments   within this test process.  We lose a few possible ports to the   remainder, but that's acceptable. 
//  correctly 
//  Since all requests are passed to the request   processor it should wait for setting up the request   processor chain. The state will be updated to RUNNING   after the setup. 
//  some unexpected error, warn about it 
//  We expect two notifications before we want to continue         
//  create 7 servers 
// go over outstanding ops in order, and try to find a candidate that acked the most ops.  this way it will be the most up-to-date and we'll minimize the number of ops that get dropped 
// 2. Upgrade peer0,1,2 with quorum.auth.enableSasl=true and 
//  An authentication error occurred when the SASL client tried to initialize:   for Kerberos this means that the client failed to authenticate with the KDC.   This is different from an authentication error that occurs during communication   with the Zookeeper server, which is handled below. 
//  unnecessary code coupling. 
//  There are legal states in some use cases for null KeyManager or TrustManager.   But if a user wanna specify one, location is required. Password defaults to empty string if it is not   specified by the user. 
//  Change the snapcount to happen more often 
// invalid acl's 
//  this code requires a key in PKCS8 format which is not the default openssl format   to convert to the PKCS8 format you use : openssl pkcs8 -topk8 ... 
//  ignore as this is expected 
//  encoding 
//  There is no log record for the initial config, thus after syncing   with leader   /zookeeper/config is empty! it is also possible that last committed   config is propagated during leader election   without the propagation the corresponding log records.   so we should explicitly do this (this is not necessary when we're   already a Follower/Observer, only 
//  Local session from the leader 
//  Note that we make no effort here to remove empty mappings   from ipMap. 
//  recalculate the init limit time because retries sleep for 1000 milliseconds 
//  Start everyone but the leader 
//  Use DigestAuthenticationProvider.base64Encode or   run ZooKeeper jar with org.apache.zookeeper.server.auth.DigestAuthenticationProvider to generate password.   An example:   java -cp zookeeper-3.6.0-SNAPSHOT.jar:lib/log4j-1.2.17.jar:lib/slf4j-log4j12-1.7.5.jar:   lib/slf4j-api-1.7.5.jar org.apache.zookeeper.server.auth.DigestAuthenticationProvider super:test 
//  With peer epoch and version the message became 40 bytes 
/*                              * This predicate is true once we don't read any new                             * relevant message from the reception queue                              */
//  This isn't really an error txn; it just has the same   format. The error represents the timeout 
//  now check if their is already existing   parent or child that has quota 
//  save the found address so that it's used during the next   connection attempt 
//  fake propose request 
//  If we have a worker thread pool, use that; otherwise, do the work   directly. 
// the last snapshot seems incompelte   corrupt the last but one   and use that
//  wait for authFailed event from client's EventThread. 
//  This should stomp the zk handle 
//  Make sure we can instantiate a trust manager from the JKS file on disk 
//  add snapshot files to the log version dir 
//  provide time for the falseleader to realize no followers have connected 
//  Wait for request completion with timeout 
/*                          * If it is from a non-voting server (such as an observer or                         * a non-voting follower), respond right away.                          */
//  Do NOT trigger the reverse name service lookup. 
//  method always on top start only SINCE JDK 5 ! 
//  Calculate sizeLimit that we allow to retrieve txnlog from disk 
//  In the test below 1-9/10 = 1/10 chance of disconnecting 
/*          * Check if all groups have majority          */
//  Joiner initial config consists of itself and the leader. 
/*          * Address of the sender          */
//  remove the old files 
//  Empty snapshot and logfile containing a 1-byte create and 5000-byte set 
//  get information of current leader 
//  3. create a node 
//  Synchronized to sync the containers and ttls change, probably   only need to sync on containers and ttls, will update it in a 
//  If learner hasn't sync properly yet, don't send ping packet   otherwise, the learner will crash 
/*                      * Only proceed if the vote comes from a replica in the current or next                     * voting view for a replica in the current or next voting view.                      */
//  do create operation, so that injected IOException is thrown 
//  Before sending the request, check if the request requires a   global session and what we have is a local session. If so do   an upgrade. 
//  do nothing - exclude persistence from perf 
// LOG.warn("Set clientAddr to " + clientAddr); 
//  we got here, so the version was set 
//  Verify that the correct exception is thrown 
/*                  * put() is going to modify the positions of both                 * buffers, put we don't want to change the position of                 * the source buffers (we'll do that after the send, if                 * needed), so we save and reset the position after the                 * copy                  */
//  in order to be committed, a proposal must be accepted by a quorum.   
//  Set a combination of child/exists/data watches 
//  expected that 
//  stop old watcher if there is one 
//  test done - close the zk, not needed 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorManager#connect(java     * .util.Properties)      */
/*  Reusing the index variable to select a follower to connect to  */
//  check that a dynamic configuration file doesn't exist 
//  Note that we do not generate the Xid for the packet yet. It is   generated later at send-time, by an implementation of ClientCnxnSocket::doIO(), 
//  Color for border 
//  Since the file padding inserts a 0, we will fill the data with 0xff to ensure we corrupt the data if we put the 0 in the data 
//  Convert time -> sessions map to time -> session IDs map 
// start one server 
// the path does not exist  
//  This just avoids complaints by junit 
//  the following commands would not work in the original   cluster of 5, but now that we've removed 2 servers   we have a cluster of 3 servers and one of them is allowed to fail 
/*              * ZOOKEEPER-1624 - We need to store for parent's ChangeRecord             * of the parent node of a request. So that if this is a             * sequential node creation request, rollbackPendingChanges()             * can restore previous parent's ChangeRecord correctly.             *             * Otherwise, sequential node name generation will be incorrect             * for a subsequent request.              */
//  Give the worker threads time to finish executing 
//  request.addRQRec(">sync"); 
//  Should not have touched original file 
//  State of peer that sent this message 
/*          * This is going to reset the buffer position to 0 and the         * limit to the size of the buffer, so that we can fill it         * with data from the non-direct buffers that we need to         * send.          */
//  Avoid negative cxid values.  In particular, cxid values of -4, -2, and -1 are special and   must not be used for requests -- see SendThread.readResponse.   Skip from MAX to 1. 
//  establish the connection to the ZooKeeper cluster 
//  my server is in new config, but load should be decreased.   Need to decide if this client   is moving to one of the new servers 
//  Newer than committedLog, send trunc and done 
// force /bin/ls, except on windows. 
//  Process the touches 
//  see if its set 
/*  joining - comma separated list of server config strings for servers to be added to the ensemble.     * Each entry is identical in syntax as it would appear in a configuration file. Only used for      * incremental reconfigurations.      */
//  Look through the logs for output that indicates Node 1 is LEADING or FOLLOWING 
/*          * Leader epoch          */
//  We are going to look for a leader by casting a vote for ourself 
/*          * (non-Javadoc)         *          * @see javax.swing.tree.TreeNode#isLeaf()          */
//  don't allow redoing this redo 
//  Insert random delay to test thread race conditions 
//  Restart halted node and verify count 
// the snapshot directory 
//  create an extra handle, so we can index the handles from 1 to qu.ALL   using the server id. 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * hasChildren(java.lang.String)      */
//  Make sure we can instantiate a key manager from the PEM file on disk 
//  This code does not exists 
//  shutdown the server itself 
//  used for assertions later 
//  On my box, if selector.close() is not called fd diff is > 700. 
//  new config will have three of the servers as followers 
//  Instantiate Notification and set its attributes 
//  check if we have a version that includes config. If so extract config info from message. 
// Store off current pending change records in case we need to rollback 
//  close the existing txnLog and snapLog 
//  updates the dynamic file pointer 
//  tests the case currentHost == null && lastIndex >= 0 
//  if we can't skip, we should just read from the start 
//  make sure servers 0, 1 don't come online - this should be the case 
//  Similar to follower, we need to log requests between the snapshot   and UPTODATE 
//  wait for things to stabilize 
//  all clients should be disconnected 
//  note, setUp() enables this test based on the test name 
/*  we test a normal run. everything should work out well.  */
//  We send DIFF and forward any packet starting at maxCommittedLog 
//  Java 9+ default should have the GCM suites first 
//  execute output stream operation 
//  Everything below and until we get back to the select is   non blocking, so time is effectively a constant. That is   Why we just have to do this once, here 
//  Generate Xid now because it will be sent immediately,   by call to sendThread.sendPacket() below. 
//  joiner should have the following format: server.x = server_spec;client_spec                
// last proposed quorum verifier 
//  default hostprovider 
//  property is set but can not be parsed to int, we should get the 
/*          * Run another instance of leader election.          */
//  remember to close old instance before replacing it 
//  do nothing 
//  This server should join successfully 
//  create session with max value 
/*  Make sure to create a new object when changing  */
//  We only run if the readyNode exists 
//  Notify server state changes to the registered shutdown handler, if any. 
//  this should trigger the watch 
//  whether to remove the watches locally 
/*          * Start mock server.          */
//  run servers 0 and 1 normally 
//  checks that conditioning on version works properly 
//  ephemeral node is getting deleted. 
//  currentIndex was set by the call to updateServerList, which   called next 
//  Refresh the Ticket Granting Ticket (TGT) periodically. How often to refresh is determined by the   TGT's existing expiry date and the configured MIN_TIME_BEFORE_RELOGIN. For testing and development,   you can decrease the interval of expiration of tickets (for example, to 3 minutes) by running : 
/*          * Creating peer.          */
//  Leader mock: Prep -> MockProposal -> Commit -> validate -> Final   Have side thread call commitProc.commit() 
/*        * If the stat fails, the node has gone missing between the call to       * getChildren() and exists(). We need to try and become the leader.        */
//  The previous client connection to falseLeader likely closed, create a new one 
//  inject problem in server 
//  Try to provide hints to use about what went wrong so they   can fix their configuration.   TODO: introspect about e: look for GSS information. 
//  while OpCode.closeSession 
//  could not create tmp directory to hold JAAS conf file.
// 'groups username' command return is non-consistent across different unixes 
//  12725 days, about 34 years 
//  When incremented... 
//  Since we just shut down server 2, its still considered "synced"   by the leader, which allows us to start the reconfig   (PrepRequestProcessor checks that a quorum of the new   config is synced before starting a reconfig).   We try to remove server 3, which requires a quorum of {1,2,3}   (we have that) and of {1,2}, but 2 is down so we won't get a   quorum of new config ACKs. 
//  We don't want to receive any packets until we are sure that the 
//  Verify if there is any change in the proposed leader 
//  When reset... 
//  Simulate a socket channel between a client and a follower 
// last committed quorum verifier 
//  check duplication of addresses and ports 
//  bad hostport string 
//  sleep for 10 seconds 
//  this should exceed threshold (ZKDatabase.snapshotSizeFactor) 
//  adding back the packet to notify of failure in conLossPacket(). 
/*  Reconfig test with unresolved hostnames  */
//  ignore, close the send/event threads 
//  make streams and socket do something innocuous 
//  There is ACL however the permission is wrong - need WRITE permission at leaste. 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * getNodeMeta(java.lang.String)      */
//  don't care about the version if it's in LOOKING state 
//  create the pkg directory 
//  We can only test calls to ZKTrustManager using Sockets (not SSLEngines). This can be fine since the logic is the same. 
//  setConfiguration() will work even if the above try() fails due   to a missing Kerberos configuration (unless zookeeper.requireKerberosConfig   is set to true, which would not allow execution to reach here due to the   throwing of an IllegalArgumentException above). 
//  takes place 
//  their .next file during startup, and will find the next config and join it 
//  Add child watch 
//  Make sure we can instantiate a trust manager from the PKCS12 file on disk 
//  Lock object that guard access to quorumVerifier and lastSeenQuorumVerifier. 
/*          * id contains the tag for acks, and zxid for notifications          */
//  combine local and global sessions, getting local first so upgrades   to global are caught 
//  is client_config a host:port or just a port 
//  Arrange   Create a HostProvider with a list of unresolved server address(es) 
//  (*) setting it to what it should be 
//  ignores its connectstring, and next() always returns localhost:2181   it will count down when updateServerList() is called 
/*  Send close connection packet to the client, doIO will eventually     * close the underlying machinery (like socket, selectorkey, etc...)      */
// volatile int round = 1; 
/*      * Protocol identifier used among peers      */
//  Server 0 stays down 
//  See ZOOKEEPER-2967 for more details 
//  we expect this to throw an IOException since we're faking socket connect errors every time 
//  If we've timed out, do a hard shutdown 
//  see a disconnect for each Assert.failed connection attempt 
//  Pending sync requests. Must access under 'this' lock. 
//  they will be handled in next connection or cleared up if closed. 
//  start with an initial set of candidates that are voters from new config that    acknowledged the reconfig op (there must be a quorum). Choose one of them as  
//  Set up bogus streams 
//  Set to true when connected to a quorum server in read-only mode 
//  With local session on 
//  This was added to avoid running into the problem of ZOOKEEPER-1539 
//  remove host number 0 (the first one in the current list) 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * setDefaultNodeViewerConfiguration(java.io.File, java.util.List)      */
//  We send DIFF to (2, 0) and forward any packet starting at (2, 0) 
//  Assuming that isConnected() is only used to initiate connection,   not used by some other connection status judgement. 
//  6. wait for the leader to quit due to not enough followers and come back up as a part of the new quorum 
//  Here peerCommunicationAddress is null, also clientAddr is null 
//  Test a hostname that resolves to multiple addresses 
//  pzxid not updated with smaller zxid 
/*          * epoch of the proposed leader          */
//         response.setContentType("text/plain;charset=utf-8"); 
//  not reg so should = 0 
/*      * (non-Javadoc)     *     * @see org.apache.zookeeper.server.ServerCnxnIface#process(org.apache.zookeeper.proto.WatcherEvent)      */
//  quorum.auth.learnerRequireSasl=true, quorum.auth.serverRequireSasl=true 
//  we throw an exception otherwise we continue without authentication. 
//  e.g. serviceHostname := "myhost.foo.com" 
//  Shutdown every one else but the leader 
//  This is expected. 
//  Create dummy txn larger than preAllocSize 
//  setowner as the leader itself, unless updated   via the follower handlers 
//  resume poor fellow 
// Reset back to default. 
/*      * Record leader election time      */
//  wait to connect to one of these 
//  any arbitrary constant will do  
//  Observer asks for epoch (mocking LearnerHandler behavior) 
//  TODO: should depend on zoo.cfg specified mechs, but if
//  Global session 
//  Wait until we can't connect 
//  Otherwise, wait for a fixed amount of time 
// force server to restart and load from snapshot, not txn log 
//  We use an instance of SyncedLearnerTracker to   track synced learners to make sure we still have a   quorum of current (and potentially next pending) view. 
//  NOTE: wrong password ('test' != 'test1') : this is to test SASL authentication failure.
//  creating the subtree for chRoot clients. 
//  When there is no worker thread pool, do the work directly   and wait for its completion 
//  OOM condition; 
/*              * This replica might still believe that the connection to sid is             * up, so we have to shut down the workers before trying to open a             * new connection.              */
//  On initial connection, write the complete connect request   packet, but then disable further writes until after   receiving a successful connection response.  If the   session is expired, then the server sends the expiration   response and immediately closes its end of the socket.  If   the client is simultaneously writing on its end, then the   TCP stack may choose to abort with RST, in which case the   client would never receive the session expired event.  See   http://docs.oracle.com/javase/6/docs/technotes/guides/net/articles/connection_release.html 
//  not), and all server SASL messages have been received. 
//  In this scenario to change 3's role to participant we need to remove it first 
//  Verify each quorum peer has expected quorum member view. 
//  Initialize the client's communications with the Zookeeper server by sending the server the first 
//  ipMap is used to limit connections per IP 
//  This could be faster, but probably wont be used 
//  good message 
// Thread.sleep(10000); 
//  Given ... 
//  We need to check if we can close the session id.   Sometimes the corresponding ServerCnxnFactory could be null because   we are just playing diffs from the leader. 
//  http://docs.oracle.com/javase/6/docs/technotes/guides/security/jgss/jgss-features.html   """   In addition, when performing operations as a   particular   Subject, e.g. Subject.doAs(...) or   Subject.doAsPrivileged(...), the to-be-used   GSSCredential should be added to Subject's   private credential set. Otherwise, the GSS operations   will fail since no credential is found.   """
//  Send the snapshot we created earlier 
/*      * (non-Javadoc)     *      * @see java.awt.datatransfer.Transferable#getTransferDataFlavors()      */
//  validate CRC 
//  Don't apply any prior change records less than firstZxid.   Note that previous outstanding requests might have been removed   once they are completed. 
//  verifying that other path data watches are removed 
//     make sure everything is consistent 
//  we're good. 
//  5. on the customized leader catch the beginSnapshot call in      LearnerSnapshotThrottler to set the node to value v2, 
//  Act & Assert 
/*          * Add sid to payload          */
//  represents protocol version (in other words - message type) 
/*          * (non-Javadoc)         *         * @see org.apache.zookeeper.server.RequestProcessor#shutdown()          */
// taken care in finally block 
//  cnxns typically have many watches, so use default cap here 
//  intentionally use the wrong password 
//  We send DIFF and forward any packet starting at lastProcessedZxid 
//  ensure that server and data bean are registered 
// Give it some time to process the snap  No Snapshot taken yet, the SNAP was applied in memory 
//  mySocket.setSoTimeout(20000); 
//  No event ready to emit yet. 
//  suite setup 
//  Note: The first call to getSocket() triggers mode detection which can block 
//  jute toString is horrible, remove unnecessary newlines 
//  Get the ack of the new leader 
//  watchers2 
//  list of all the followers 
//  A period that isn't on its own is ok 
//  servers in the new list that are not in the old list 
//  Validate the provided znode path contains the given watcher of   watcherType 
//  leader calls waitForNewLeaderAck, first add to ackSet 
//  non-GSSAPI: no final packet from server. 
//  Through the magic of byte buffers, txn will not be   pointing 
//  We need to sync and get consensus on any transactions 
/*      * (non-Javadoc)     *      * @seejava.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.     * datatransfer.DataFlavor)      */
//  we are setting the bytes quota 
//  check set 
//  Remove beans which are related to zk client sessions. Strong   assertions cannot be done for these client sessions because   registeration of these beans with server will happen only on their 
//  my server is not in new config, and load on old servers must   be decreased, so connect to   one of the new servers 
//  of zxid on the second log 
//  on the lookout for timeout 
// new configuration 
//  expected behaviour 
//  We expect leader to lose quorum of proposed config and time out 
//  Remove ReplicatedServer_1 from the ensemble 
//  Intercept when startForwarding is called 
//  Attempt an incremental reconfig. 
//  wait for the node to appear 
//  Verify that the exit code is set properly 
//  register, createConnection 
//  We should get snap, we can do better here, but the main logic is   that we should never send diff if we have never seen any txn older 
//  now verify autocreate off works 
//  sets reconfigMode 
//  in sync request processor get flush to disk 
//  If lost the challenge, then drop the new connection 
// start and add 2 followers 
//  don't keep this up too long, will Assert.assert false below 
//  fake the message 
//  create keytab 
//  do nothing, just return, it is the same as packet is dropped   by the network 
//  kill peer and wait no more than 5 seconds for read-only server 
//  If we are sending the first packet, figure out whether to trunc 
//  Ignore. 
//  not used. 
//  Step time 
//  during first iteration, leavingIndex will correspond to a follower 
//  Create some additional znodes without taking a snapshot afterwards. 
//  Note that 'Configuration' here refers to javax.security.auth.login.Configuration. 
/*  Log the number of fds used before and after a test is run. Verifies         * we are freeing resources correctly. Unfortunately this only works         * on unix systems (the only place sun has implemented as part of the         * mgmt bean api).          */
//  keep findbugs happy 
// turnOffFollowers(); 
//  The exception is thrown on the server side, we need to unwrap it
//  spin up a quorum, we use a small ticktime to make the test run faster 
//  default not registered 
//  The leader didn't get a quorum of acks - make sure that leader's current epoch is not advanced 
//  Timeout of 0 is not allowed, since an infinite timeout can permanently lock up an   accept() thread. 
//  It should fail and shouldn't change outstanding record.
//  leader. This should also fail 
//  The created ephemeral nodes are still around. 
//  simulate snapshot file 
//  make sure to snapshot, so that we have something there when 
//  make sure to map negative ids as well to [0, size-1] 
//  if a log file is more recent we must scan it to find   the highest zxid 
//  Allow subclasses (e.g. StatCommand) to specify their own names 
//  later packet will be notified. 
//  returns whether we are interested in taking new requests, which is 
//  Starts listener thread that waits for connection requests 
//  Observers are currently only compatible with LeaderElection 
/*          * Do not consider groups with weight zero          */
//  On Java 8, prefer CBC ciphers since AES-NI support is lacking and GCM is slower than CBC. 
//  this is good 
//  NIO should not accept conenctions 
//  Let's grab two ports 
// invalid dataversion no 
//  Notification probe = recvqueue.peek(); 
//  Need to process local session requests 
//  the version of this quorumVerifier will be set by leader.lead() in case   the leader is just being established. waitForEpochAck makes sure that readyToStart is true if 
//  Now the resulting ensemble shouldn't be quorate          
//  id but different role / port 
//  old client session can expire, restart it 
//  the pointer to the connection in the request 
/*      * This method is called when a client passes authentication data for this     * scheme. The authData is directly from the authentication packet. The     * implementor may attach new ids to the authInfo field of cnxn or may use     * cnxn to send packets back to the client.     *      * @param cnxn     *                the cnxn that received the authentication information.     * @param authData     *                the authentication data received.     * @return TODO      */
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorManager#addWatchers     * (java.util.Collection,     * org.apache.zookeeper.inspector.manager.NodeListener)      */
//  If we've already starting sending the first packet, we better finish 
//  Connect the client after services are restarted (otherwise we would get 
//  Send the packet of death 
// stored files is the list of files greater than  the zxid we are looking for. 
//  needed by jersey 
//  Get zxid of create requests 
/*      * (non-Javadoc)     *      * @see java.lang.Object#equals(java.lang.Object)      */
// setup servers 1-5 to be followers 
// Snapshot was never taken during very simple sync 
/*  PASS  */
//  now check if its the limit node 
//  It is important that this is done before the leader executes waitForEpochAck,   so before LearnerHandlers return from their waitForEpochAck   hence before they construct the NEWLEADER message containing   the last-seen-quorumverifier of the leader, which we change below 
//  Read the length, now get the buffer 
//  Arrange 
//  As above, but don't do the throttled read. Make the request bytes wait in the socket 
//  check that there's no reconfig in progress 
//  making sure setdata works on / 
//  do one successful operation on the newly added node 
//  second iteration of the loop will remove the leader 
//  allow the clients to run for max 5sec 
//  optimization for read heavy workloads   iff this is a read, and there are no pending   flushes (writes), then just pass this to the next   processor 
//  With local session off 
//  The follower reconfiguration will have failed 
//  This test makes sure that client-initiated TLS renegotiation does not 
//  Default case 
//  we're sending the designated leader, and if the leader is changing the followers are    responsible for closing the connection - this way we are sure that at least a majority of them  
//  simulate reconfig in progress - servers 0..2 have a temp reconfig 
//  Don't forward local sessions to the leader. 
//  Start thread that waits for connection requests from 
//  proposedRefresh is too far in the future: it's after ticket expires: simply return now. 
//  proceeds correctly after this point 
//  enable Client Sasl 
//  Number of machines stayed the same, my server is in the new cluster 
//  Create a couple of nodes 
//  this is the backwardCompatibility mode for no version information 
//  This is just an arbitrary object to represent requests issued by   (aka owned by) this class 
//  Something is wrong.
//  Create 10,000 nodes. This should ensure the length of our 
/*                  * A real zookeeper would take care of setting the current vote. Here                 * we do it manually.                  */
//  Create some ephemeral nodes.  This should force the session to 
//  otherwise : is at the end of the string, ignore 
//  Sleep since writing the config files may take time. 
//  this call shouldn't trigger any error or watch 
/*                              * I'm done so joining.                               */
//  Trying to load a JKS file with PEM loader should fail 
//  now update if the path is in a quota subtree. 
//  Builds an OCSPHandler that responds with a good status for all certificates   except revokedCert. 
//  We've found the priming-packet. Move it to the beginning of the queue. 
//  Will be fixed in next Kerby version.
//  We send DIFF and forward any packet starting lastProcessedZxid 
//  '/multi' should never have been created as entire op should fail 
//  Test that data provided when  
//  start of next request 
//  Negative value not allowed, will return the default 
// Follower counter 
//  /foo/bar childwatch   /foo 
/*      * We sort leader offers by sequence number (which may not be zero-based or     * contiguous) and keep their paths handy for setting watches.      */
//  make sure it doesn't have the new value that it alone had logged 
//  update last committed quorum verifier, write the new config to disk 
//  it by a commit packet 
//  We also use the sessionlessCnxnTimeout as expiring interval for   cnxnExpiryQueue. These don't need to be the same, but the expiring   interval passed into the ExpiryQueue() constructor below should be   less than or equal to the timeout. 
//  Either client is not configured to use a tunnelled authentication   scheme, or tunnelled authentication has completed (successfully or 
//  Remove the buffers that we have sent 
//  by default create snap/log dirs, but otherwise complain instead 
//  snapCount must be 2 or more. See org.apache.zookeeper.server.SyncRequestProcessor 
/*  borrowed from Path.WINDOWS  */
/*  * This code is originally from HDFS, see the file name MiniKdc there * in case of bug fixing, history, etc. * * Branch : trunk * Github Revision: 916140604ffef59466ba30832478311d3e6249bd  */
//  verify the session existence 
//  for cmds. They are all 4-bytes which fits inside of an int 
//  We are adding two new servers to the ensemble. These two servers should have the config which includes   all five servers (the old three servers, plus the two servers added). The old three servers should only   have the old three server config, because disabling reconfig will prevent synchronizing configs between   peers. 
// Make sure that we did take the snapshot now 
//  OP_READ means "can read", but OP_WRITE means "cannot write",   it's weird. 
//  LOG.info("starting forward for "+toClose); 
//  "zookeeper.server.realm" is set). 
//  7. start follower A to do snapshot sync 
//  Add ReplicatedServer_1 back to the ensemble 
//  call command and put result in byteStream 
//  remove self as it is local bean 
//  Only do extra logging so we know what kind of session this is   if we're supporting both kinds of sessions 
//  We will send DIFF for this kind of zxid in any case. This if-block   is the catch when our history older than learner and there is   no new txn since then. So we need an empty diff 
//  Restart leader election 
//  by waiting for the callback we're assured that the event queue is flushed 
//  commit proposals in order 
//  Peer have some proposals that the leader hasn't seen yet   it may used to be a leader 
// corrupt all the snapshot in the snapshot directory 
//  should work 
//  -4 is the xid for AuthPacket                
/*          * Message type: 0 notification, 1 acknowledgement          */
//  start 3 servers 
//  wait until followers time out in waitForEpochAck - they shouldn't return 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * getNumChildren(java.lang.String)      */
//  set the snap count to something low so that we force log rollover   and verify that is working as part of the epoch rollover. 
//  close wasn't successful, try to delete the tmp file 
//  now verify that the FileTxnLog reads every transaction only once 
//  generate some transactions 
/*  * We suppress the "try" warning here because the close() method's signature * allows it to throw InterruptedException which is strongly advised against * by AutoCloseable (see: http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html#close()). * close() will never throw an InterruptedException but the exception remains in the * signature for backwards compatibility purposes. */
//  password is test 
/*      * Connection time out value in milliseconds      */
//  Wait until we can connect 
//  make sure that ops are committed in order. With reconfigurations it is now possible   that different operations wait for different sets of acks, and we still want to enforce   that they are committed in order. Currently we only permit one outstanding reconfiguration   such that the reconfiguration and subsequent outstanding ops proposed while the reconfig is   pending all wait for a quorum of old and new config, so it's not possible to get enough acks   for an operation without getting enough acks for preceding ops. But in the future if multiple 
/*      * Turn each child of rootNodeName into a leader offer. This is a tuple of     * the sequence number and the node name.      */
//  New contents replace original file 
// LOG.info("Created a new client: " + zk.describeCNXN()); 
//  Sleeps on receive 
//  Add the root logger to the Hierarchy MBean   org.apache.log4j.Logger rootLogger = 
//  This is only true because we're setting cmdName to the primary name 
//  If we have written more than we have previously preallocated we need to make sure the new   file size is larger than what we already have 
//  create top level znode 
//  Peer is already sync 
//  resetting watcher so that this watcher can be again used to ensure   that the zkClient is able to re-establish connection with the 
//  canonicalize authorization id according to system properties:   zookeeper.kerberos.removeRealmFromPrincipal(={true,false})   zookeeper.kerberos.removeHostFromPrincipal(={true,false}) 
//  OK, expected that 
//  we failed on the most recent snapshot   must be incomplete   try reading the next one   after corrupting 
//  leader calls waitForEpochAck, first add to electingFollowers 
//  Get a three server quorum. 
//  cleanup 
/*      * (non-Javadoc)     *      * @see     * java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer     * .DataFlavor)      */
//  We are requesting half the number of transaction from the snapshot 
//  entry point for quorum/Learner.java 
/*                          * Before joining an established ensemble, verify that                         * a majority are following the same leader.                          */
//  Errors are okay, since hosts may be   down 
//  bad gateway
//  Got a EOF right away, definitely not using TLS. Fallthrough. 
//  Check that new dynamic config includes the updated client port.   Check that server changedServerId erased clientPort from static config.   Check that other servers still have clientPort in static config. 
//  Only update pzxid when the zxid is larger than the current pzxid,   otherwise we might override higher pzxid set by a following create    Txn, which could cause the cversion and pzxid inconsistent
//  truncateLog reloads the db 
//  Set threshold to -1, as after the first commit it takes 0ms to commit to disk. 
/*                      * Set the state of the peer to LOOKING and look for leader                      */
//  this is ok - the leader has dropped leadership 
//  If unable to pull a new connection off the accept   queue, pause accepting to give us time to free   up file descriptors and so the accept thread   doesn't spin in a tight loop. 
//  Make sure that the magic number is written before padding. 
//  Must be Java 9 or later 
//  this means that the file has ended   we should go to the next file 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * loadNodeViewersFile(java.io.File)      */
//  If sasl is not required, when a server initializes a   connection it will try to log in, but it will also   accept connections that do not start with a sasl
//  We cannot send TRUNC that cross epoch boundary.   The learner will crash if it is asked to do so.   We will send snapshot this those cases. 
//  Since the SASL authenticator will usually be used with Kerberos authentication,   it should enforce that these names are valid according to Kerberos's   syntax for principals.     Use the KerberosName(id) constructor to define validity:   if KerberosName(id) throws IllegalArgumentException, then id is invalid.   otherwise, it is valid.   
//  it does not commit ops after committing the reconfig 
//  This is safe inside an iterator as per   http://download.oracle.com/javase/1.5.0/docs/api/java/util/Map.Entry.html 
//  as a result of the I/O operations we just performed. 
//  find the leader 
//  as we look through proposals, this variable keeps track of previous   proposal Id. 
//  Max number of toasters for the sceen 
//  need it for calloc() & free() 
//  receive the commit message. 
//  for no such child 
//  Great this is what we were hoping for! 
/*      * ZOOKEEPER-2693: test white list of four letter words.     * For 3.5.x default white list is empty. Verify that is     * the case (except 'stat' command which is enabled in ClientBase     * which other tests depend on.).      */
//  disconnected 
//  ZOOKEEPER-2743:   Always unregister connection upon close to prevent   connection bean leak under certain race conditions. 
//  2. SASL login failed. 
//  null if factory never started 
//  ignore for this test 
//  All zxid should match what we created 
//  This class holds the servers and clients for those servers 
/*          * Adds up weights per group          */
//  qcm outside QV_LOCK to avoid a deadlock against other callers of qcm.connectOne(). 
//  If quorumpeer learner is not auth enabled then self won't be able to   join quorum. So this condition is ensuring that the quorumpeer learner 
//  Read without sending data. Verify timeout. 
//  ignore, we've simply come to the end of the file 
//  Receive and handle the connection request   asynchronously if the quorum sasl authentication is   enabled. This is required because sasl server   authentication process may take few seconds to finish,   this may delay next peer connection requests. 
/*      * Separated this method from the main run loop     * for test purposes (ZOOKEEPER-1863)      */
//  rewrite to option 
//  LoginThread will sleep until 80% of time from last refresh to   ticket's expiry has been reached, at which time it will wake 
/*          * Used to send a QuorumVerifier (configuration info)          */
/*                              * Print notification info                              */
//  new server 3 has still its invalid joiner config - everyone in old 
//  Commit /foo1 update 
//  create child znodes 
//  Note: getting the input stream should not block the thread or trigger mode detection.
//  mapping was present, clean up the previous expiry bucket. 
//  We can get here, if we don't have op packet to queue   or there is a duplicate txn in a given iterator 
//  We only want to print anything if things have had a   chance to change 
//  to removed server 
//  We can't call outgoingQueue.clear() here because   between iterating and clear up there might be new   packets added in queuePacket(). 
//  don't re-establish connection if we are closing 
//  Start the servers with a static config file, without a dynamic 
//  Find zxid for the second log 
//  crank up the epoch numbers 
// "This should never happen, you can't have a filter exception without a filter"); 
//  All new sessions local by default. 
//  handle clientPath = "/" 
//  2. set force snapshot to be true 
//  Nothing to do, we are shutting things down, so an exception here is irrelevant 
//  free the error stream buffer 
/*          * If sending message to myself, then simply enqueue it (loopback).          */
/*                  * Choose identifier at random. We need a value to identify                 * the connection.                  */
//  entry point for FinalRequestProcessor.java 
//  closing session should remove ephemeral nodes and trigger data   watches if any 
//  stopping the ELECTED node, so re-election will happen. 
//  We expect this to happen. 
// return "    "+capitalize(fname)+"=a_.Read"+mMethodSuffix+"(" + capitalize(fname) + ",\""+tag+"\");\n"; 
//  Show time 
//  listener thread should stop and throws error which notify QuorumPeer about error.   QuorumPeer should start shutdown process   set wait time, if listener contains bug and thread not stops. 
// LOG.warn("ClientParts: " + serverClientParts[1]); 
//  some tests initialize QuorumPeer without a static config file 
// zk.close(); 
//  Setting used for snapRetainCount in this test. 
//  NIOServerCnxnFactory 
/*          * Update the election vote here to ensure that all members of the         * ensemble report the same vote to new servers that start up and         * send leader election notifications to the ensemble.         *          * @see https://issues.apache.org/jira/browse/ZOOKEEPER-1732          */
//  subject is non-null, it can be assumed to be GSSAPI. 
//  Should be able to dump the recovered logfile with no CRC error 
//  check content of transaction log and snapshot dirs if they are two different directories 
//  Run the command 
//  Sending id and challenge 
//  assume that server and client are in the same realm (by default;   unless the system property 
/*      * Messages to send, both Notifications and Acks      */
//  resolution occured every time 
//  ignore "/" chroot spec, same as null 
//  This was added in ZOOKEEPER-1783. The initial config has version 0 (not explicitly   specified by the user; the lack of version in a config file is interpreted as version=0).    As soon as a config is established we would like to increase its version so that it   takes presedence over other initial configs that were not established (such as a config   of a server trying to join the ensemble, which may be a partial view of the system, not the full config).    We chose to set the new version to the one of the NEWLEADER message. However, before we can do that   there must be agreement on the new version, so we can only change the version when sending/receiving UPTODATE,   not when sending/receiving NEWLEADER. In other words, we can't change curQV here since its the committed quorum verifier,    and there's still no agreement on the new version that we'd like to use. Instead, we use    lastSeenQuorumVerifier which is being sent with NEWLEADER message   so its a good way to let followers know about the new version. (The original reason for sending    lastSeenQuorumVerifier with NEWLEADER is so that the leader completes any potentially uncommitted reconfigs   that it finds before starting to propose operations. Here we're reusing the same code path for    reaching consensus on the new version number.) 
//  Clean up for shutdown. 
//  just make sure that we actually did get it in process at the   leader 
//  remove the error 
//  Create a file at destination 
//  make sure we don't mess with request itself 
/*  if we are not truncating or sending a diff just send a snapshot  */
//  send a response... 
//  Start peer0,1,2 servers with quorum.auth.enableSasl=false and   quorum.auth.learnerRequireSasl=false, quorum.auth.serverRequireSasl=false 
//  Set sizeLimit to be very high number, so we can pull all transactions 
//  response as with other packets. 
//  Multiply by 1000 to get   reqs/sec 
//  initial data is written. 
//  We want to queue the request to be processed before we submit   the request to the leader so that we are ready to receive 
//  add back host number 0 
//  Make sure we can instantiate a trust manager from the PEM file on disk 
//  0xff = Extended feature is ON   0x0001 = Unsupported extended type id (1) 
//  Explicitly add to global session if the flag is not set 
//  request.addRQRec(">final"); 
//  the files   are sorted with zxid's 
//  If the connection is not in the master list it's already been closed 
/*  this 'Client' section has the correct password, but we're not configured                                  to  use it (we're configured by the above System.setProperty(...LOGIN_CONTEXT_NAME_KEY...) to                                   use the 'MyZookeeperClient' section, which has an incorrect password). */
//  parse the output   clear the input stream buffer 
//  check for more than 2 children --   if zookeeper_stats and zookeeper_quotas   are not the children then this path   is an ancestor of some path that 
//  quorum.auth.learnerRequireSasl=false, quorum.auth.serverRequireSasl=false 
//  Wait for falseLeader to rejoin the quorum 
//  parent channel options 
//  Validate status code at the end of authentication exchange. 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorManager#disconnect()      */
//  *************** <END> CientCnxnSocketNetty </END> ****************** 
//  Otherwise proceed with the connection 
//  input buffer until after throttling is turned off. Need to make sure both modes work. 
//  check exceptions 
//  Find the leader by id 
//  For Invalid ACls should not throw exception 
//  create child to see NodeChildren notification 
//     private void notestConnections()          throws IOException, InterruptedException, KeeperException      {          ZooKeeper zk; 
//  found path watchers 
//  the sleep is necessary so that the leader figures out 
//  sanity check 
/*      * Methods to aid in testing follow.     *      * THESE METHODS ARE EXPECTED TO BE USED FOR TESTING ONLY!!!      */
//  Use subject.getPrincipals().isEmpty() as an indication of which SASL   mechanism to use: if empty, use DIGEST-MD5; otherwise, use GSSAPI. 
/*  new client port  */
//  Animate from top! 
//  DIFF + 2 proposals + 2 commit 
//  Generate snapshot and close files. 
//  create with valid sequential flag 
//  Check whether it's a global session. We can ignore those   because they are handled at the leader, but if not, rethrow.   We check local session status first to avoid race condition   with session upgrading. 
//  add all non-excluded log files 
//  test the most likely situation only: server is stated as observer in 
//  iterator points to   the first valid txn when initialized 
//  delete 
/*          * Requests coming from the learner should have gone through         * submitRequest() on each server which already perform some request         * validation, so we don't need to do it again.         *         * Additionally, LearnerHandler should start submitting requests into         * the leader's pipeline only when the leader's server is started, so we         * can submit the request directly into PrepRequestProcessor.         *         * This is done so that requests from learners won't go through         * LeaderRequestProcessor which perform local session upgrade.          */
/*                  * It is possible that committedLog is empty. In that case                 * setting these value to the latest txn in leader db                 * will reduce the case that we need to handle                 *                 * Here is how each case handle by the if block below                 * 1. lastProcessZxid == peerZxid -> Handle by (2)                 * 2. lastProcessZxid < peerZxid -> Handle by (3)                 * 3. lastProcessZxid > peerZxid -> Handle by (5)                  */
//  Peer zxid 
//  Grab a list iterator starting at the END of the list so we can iterate in reverse 
//  0 value not allowed, will return the default 
//  Test view contains self 
//  Wait until all updates return 
//  log request 
//  Make sure the data was recorded in the filesystem ok 
//  Child watcher 
//  Now, try an ephemeral node.  This should fail since we 
//  stop all severs 
//  ZOOKEEPER-2722: wait until we can connect to a read-write server after the quorum   is formed. Otherwise, it is possible that client first connects to a read-only server,   then drops the connection because of shutting down of the read-only server caused   by leader election / quorum forming between the read-only server and the newly started   server. If we happen to execute the zk.create after the read-only server is shutdown and   before the quorum is formed, we will get a ConnectLossException. 
//  If an exception occurred we misdetected a sequence suffix,   so return -1. 
//  double check for the file existence 
//  We now ship the request to the leader. As with all   other quorum operations, sync also follows this code   path, but different from others, we need to keep track   of the sync operations this follower has pending, so we 
/*              * Now we start a new connection              */
//  TODO: introduce JuteTestCase as in ZKTestCase 
// there should be only two files   one the snapshot and the other logFile 
//  now corrupt the leader's database 
//  flush the config to server 2 
//  fake messages from the server 
//  Put the new set in the map, but only if another thread 
/*                          * Consider all notifications from the same epoch                         * together.                          */
//  this is a test that a reconfig will only succeed   if there is a quorum up in new config. Below there is no   quorum so it should fail 
//  simulate the upgrading case where the config node will be created 
/*  this 'Client' section has an incorrect password, but we're not configured                                  to  use it (we're configured by the above System.setProperty(...LOGIN_CONTEXT_NAME_KEY...) to                                   use the 'MyZookeeperClient' section below, which has the correct password). */
//  call is no-op if session isn't tracked so safe to call both 
//  Need to be short since we need to wait for session to expire 
// 1. Upgrade peer0,1,2 with quorum.auth.enableSasl=true and 
//  It would be great to test the value of PKIXBuilderParameters#setRevocationEnabled but it does not appear to be 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * getConnectionPropertiesTemplate()      */
//  If this request is the commit request that was blocking   the processor, clear. 
//  wait for selector and worker threads to shutdown 
//  Reset to default value since some test cases set this to true.   Needed for JDK7 since unit test can run is random order 
/*          * Address of recipient          */
//  never true if tmpfile does it's job 
/*              * Note that addAck already checks that the learner             * is a PARTICIPANT.              */
//  this server will be added back as an observer 
//  ... and finally disable throttling after 2 seconds. 
// All the rest don't need to create a Txn - just verify session 
//  we've asked to close, wait for it to finish closing   all the sub-threads otw the selector may not be   closed when we check (false positive on test Assert.failure 
//  only use jline if it's in the classpath 
//  don't try to handle jersey exceptions ourselves 
//  ulimit isn't supported on Windows
//  get new designated leader from (current) leader's message 
/*  this 'Server' section has an incorrect password, but we're not configured         * to  use it (we're configured by the above System.setProperty(...LOGIN_CONTEXT_NAME_KEY...)         * to use the 'MyZookeeperServer' section below, which has the correct password).          */
//  c.f. HADOOP-6559 
//  close clients 
//  start creating all the parents 
//  this data structure must be accessed under the outstandingChanges lock 
//  go through buffer until i find a \n, if i reach end of buffer first, put whats in buffer into string buffer,   repeat 
/*                      * A real zookeeper would take care of setting the current vote. Here                     * we do it manually.                      */
//  we should catch the exceptions   from the valid snapshot and continue   until we find a valid one 
//  Cannot use createClient here because server may close session before    JMXEnv.ensureAll is called which will fail the test case 
//  lastProcessedZxid 
//  nothing interesting to do if out == null 
//  transaction log and snapshot files in the same dir 
//  observer calls waitForEpochAck, should fail verifier.containsQuorum 
//  Trying to get a second txn on second txnlog give us the 
/*  some useful information - log the number of fds used before         * and after a test is run. Helps to verify we are freeing resources         * correctly. Unfortunately this only works on unix systems (the         * only place sun has implemented as part of the mgmt bean api.          */
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.encryption.DataEncryptionManager#encryptData     * (java.lang.String)      */
/*              * Here are the cases that we want to handle             *             * 1. Force sending snapshot (for testing purpose)             * 2. Peer and leader is already sync, send empty diff             * 3. Follower has txn that we haven't seen. This may be old leader             *    so we need to send TRUNC. However, if peer has newEpochZxid,             *    we cannot send TRUNC since the follower has no txnlog             * 4. Follower is within committedLog range or already in-sync.             *    We may need to send DIFF or TRUNC depending on follower's zxid             *    We always send empty DIFF if follower is already in-sync             * 5. Follower missed the committedLog. We will try to use on-disk             *    txnlog + committedLog to sync with follower. If that fail,             *    we will send snapshot              */
//  my server is in new config, and load should be increased, so   stay with this server and do nothing special 
// the transaction logs 
//  Set the last accepted epoch and current epochs to be 1 
/*          * Proposed leader in the case of notification          */
//  visiable for test 
//  Purge snapshot and log files. 
//  e.g. servicePrincipalNameAndHostname := 
//  for now. 
//  Take any necessary action if we need to send TRUNC or DIFF 
//  'domain' parameter is hard-wired between the server and client 
/*  this is ok  */
//     txn proposal and commit for v1 value update 
/*          * When a new leader starts executing Leader#lead, it          * invokes this method. The database, however, has been         * initialized before running leader election so that         * the server could pick its zxid for its initial vote.         * It does it by invoking QuorumPeer#getLastLoggedZxid.         * Consequently, we don't need to initialize it once more         * and avoid the penalty of loading it a second time. Not          * reloading it is particularly important for applications         * that host a large database.         *          * The following if block checks whether the database has         * been initialized or not. Note that this method is         * invoked by at least one other method:          * ZooKeeperServer#startdata.         *           * See ZOOKEEPER-1642 for more detail.          */
//  Depricated: rmr 
//  server error or shutdown state changes. 
/*                  * For future unwary socket programmers: although connect 'blocks' it                 * does not require an accept on the server side to return. Therefore                 * you can not assume that all the sockets are connected at the end of                 * this for loop.                  */
/*          * zxid of the proposed leader          */
//  / marks end of stream   we need to check if clear had been called in between the snapshot. 
//  Ensure we have the leader's correct IP address before   attempting to connect. 
//  this should break the run() loop 
//  LOG.info("Prep>>> cxid = " + request.cxid + " type = " + 
//  LOG.warn("sid = " + sid + " addressStr = " + addressStr); 
//  case-1) 'quorum.auth.enableSasl' is off. Tries to enable learner sasl. 
//  ZOOKEEPER-2819: overwrite config node content extracted   from leader snapshot with local config, to avoid potential 
//  All dynamic files created with the same version should have 
//  Creating child using chRoot client. 
//  Send the valid or invalid session packet to the follower 
/*              * Do the flip: limit becomes position, position gets set to             * 0. This sets us up for the write.              */
//  wildCard address(0.0.0.0)   loopback address(localhost/127.0.0.1) 
//  transaction log files in log dir 
//  Make tracked buffers eligible for GC 
// deserialize a DataTree; this should clear the old /bug nodes and pathTrie 
//  now, truncate at the current position 
//  upgrade this once we have Google-Guava or Java 7+ 
//  Should be noop 
//  when we do the Cversion we need to translate from the count of the creates   to the count of the changes (v3 semantics)   for every create there is a delete except for the children still present 
// This will fast forward the database to the latest recorded transactions 
//  Original contents still in place 
/*          * Format version, introduced in 3.4.6          */
//  same port. 
//  capture QuorumPeer logging 
//  verify that the size is just 2 - ie connect then disconnect   if the client attempts reconnect and we are not handling current   state correctly (ie eventing on duplicate disconnects) then we'll 
//  catch this. 
//  now shut down the servers and restart them 
//  create dummy log and transaction file 
//  Register watch 
//  /10 wont work because the session expiration   will match the zxid for /10 and so we wont   actually truncate the zxid for /10 creation   due to an artifact of switching the xid of the standalone   /11 is the last entry in the log for the xid   as a result /12 is the first of the truncated znodes to check for
// } 
//  Make sure that previous request is finished 
//  TODO lets assert that we are no longer the leader 
//  Recreate a client session since the previous session was not persisted. 
//  for them that a reconfiguration was in progress when they failed 
//  Calling closeSession() after losing the cnxn, results in the client close session response being dropped. 
//  start the old leader 
//  ignore, simply end of file, though really (line!=null) should have caught this 
/*                                  * Assert that the state of the thread is the one expected.                                  */
//  get the value from the map 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#getData     * (java.lang.String)      */
//  If SASL authentication is currently in progress, construct and   send a response packet immediately, rather than queuing a 
//  specify all of the commands that are available 
// Wait for the transactions to be written out. The thread that writes them out 
//  Use gathered write call. This updates the positions of the   byte buffers to reflect the bytes that were written out. 
//  Try to load a password-protected private key without providing a password 
//  The proposal has already been committed 
//  sanitise start and end times 
/*  expected  */
//  two of the servers as observers, and all ports different 
//  if we're here, I shouldn't be the leader 
//  Use a single listener instance to reduce GC 
/*                              * We want to make sure we implement the state machine                             * correctly. If we are a PARTICIPANT, once a leader                             * is elected we can move either to LEADING or                             * FOLLOWING. However if we are an OBSERVER, it is an                             * error to be elected as a Leader.                              */
//  Try reconnecting with a new session.   The data should be persisted, even though the session was not. 
//  survives the exception thrown by the first callback. 
//  not the case for 4letterword 
//  clear all the connections 
//  giving a grace period of 10seconds 
//  Make sure we can instantiate a key manager from the JKS file on disk 
//  and add back hosts 6, 7 and 8 
//  the watch contains the un-chroot path 
//  OK, now the follower knows that the session is valid or invalid, let's try 
//  verify super with bad pass Assert.fails 
//  For global session, if we don't know it, it is already expired 
// non-incremental membership change                   
//  setup redirect out/err streams to get System.in/err, use this   judiciously!   get current err 
//  watches which require multiple SetWatches calls. 
/*  configure socket to be blocking            * so that we dont have to do write in            * a tight while loop             */
//  Start 3rd peer and check if it goes in LEADING state 
//  We are simulating an established leader, so the epoch is 1 
//  leader will shutdown, remaining followers will elect a new leader 
// / delete the direct children first 
//  have we read length bytes?   sock is non-blocking, so ok 
//  add back server 7 
//  lets try look up the current ID if we failed    in the middle of creating the znode 
//  ignore, this just means server is not up 
/*                          * we now wait until a quorum supports the same leader.                          */
/*                      * Building challenge request packet to send                      */
//  Sending a nonexisting opcode should cause the server to disconnect 
//  shutdown and start zookeeper again 
//  new server joining 
//  Server.start() only throws Exception, so let's at least wrap it   in an identifiable subclass 
//  NumberFormatException 
//  Mock processor used in zookeeper server 
//  Replace trusted keys with a valid key that is not trusted by the server 
//  do nothing for the root.   we are not keeping a quota on the zookeeper   root node for now. 
//  Set message color 
//  add all non-excluded snapshot files to the deletion list 
//  server.  This should fail since it is a local sesion.
/*              * Receives a socket and max number of attempts as input              */
//  change leader's leading port - should renounce leadership 
//  Do nothing 
//  second add to ackSet, verifier.containsQuorum=true, waitForNewLeaderAck returns without exceptions 
//  inconsistency of config node content during rolling restart. 
//  32 cores sweet spot seems to be 4 selector threads 
// This is the real assertion - could another thread lock  the DataNode we're currently writing 
//  that id 
//  Restore former value. 
//  Check that return code of all request are correct 
//  Allows the JVM to shutdown even if this thread is still running. 
//  standalone mode doens't need myid 
//  re-open the txnLog and snapLog   I'd rather just close/reopen this object itself, however that    would have a big impact outside ZKDatabase as there are other
//  Resolver called 10 times, because we shouldn't cache the resolved addresses
//  Non-priming packet: defer it until later, leaving it in the queue   until authentication completes. 
// check if I'm an observer in new config 
//  lets sort them explicitly (though they do seem to come back in order ususally :) 
//  initialization 
//  this is the limit node   get the parent and add it to the trie 
//  this is a server id and not a protocol version 
//  Hard close immediately, discarding buffers 
//  the initial message (without the protocol version) 
//  Ignore. We'll check instead whether it's a global session 
//  Check if this is a local session and we are trying to create   an ephemeral node, in which case we upgrade the session 
/*  this 'Client' section has the correct password, but we're not configured                                  to  use it - we're configured instead by the above                                  System.setProperty(...LOGIN_CONTEXT_NAME_KEY...) to                                  use the (nonexistent) 'MyZookeeperClient' section.  */
//  only happens during tests 
/*  ZOOKEEPER-706: If a session has a large number of watches set then     * attempting to re-establish those watches after a connection loss may     * fail due to the SetWatches request exceeding the server's configured     * jute.maxBuffer value. To avoid this we instead split the watch     * re-establishement across multiple SetWatches calls. This constant     * controls the size of each call. It is set to 128kB to be conservative     * with respect to the server's 1MB default for jute.maxBuffer.      */
//  server is using a JAAS-authenticated subject: determine service   principal name and hostname from zk server's subject. 
//  hasn't beaten us to it 
//  skip to the offset of latest skip point before starttime 
//  Point server at testDir 
//  Make sure that empty password and null password are treated the same 
//  create ephemeral sequential node 
//  Make all snapshots empty 
//  We keep a queue of requests. As requests get submitted they are   stored here. The queue is drained in the run() method. 
//  some of the operations will be executed by a client connected to   the removed server   while others are invoked by a client connected to some other   server.   when we're removing the leader, zk1 will be the client connected 
//  ok. 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorNodeTreeManager#createNode     * (java.lang.String, java.lang.String)      */
//  On windows, renameTo does not replace. 
//  If this is a request for a local session and it is to   create an ephemeral node, then upgrade the session and return   a new session request for the leader.   This is called by the request processor thread (either follower   or observer request processor), which is unique to a learner.   So will not be called concurrently by two threads. 
//  from txnlog 
//  warn, but generally this is ok 
//  Start the prepared thread so that it is writing znodes while   the follower is restarting. On the first restart, the follow   should use txnlog to catchup. For subsequent restart, the   follower should use a diff to catchup. 
//  take the last server to which we were connected 
//  convert to milliseconds 
//  therefore authentication is (at the earliest stage of being) in progress. 
//  wait for the process to finish and check the exit code 
/*          * Building notification packet to send          */
/*              * Lower epoch must return false              */
// we need to truncate the log to the lastzxid of the leader 
//  Send diff and fall through if zxid is of a new-epoch 
//  next two steps - related to sequential processing   1) verify that empty child name Assert.fails if not sequential 
//  Test view does not contain non-existant servers 
//  break the quorum 
//  getting called by PrepRequestProcessor 
/*                          * quora keeps the supporters of a given leader, so                          * we first update it with the vote of this peer.                          */
//  We send DIFF to (6,0) and forward any packet starting at (6, 0) 
//  register with JMX 
//  test fails if we still can't connect to the quorum after   30 seconds. 
//  Per RFC 5280 section 4.1.2.2, X509 certificates can use up to 20 bytes == 160 bits for serial numbers. 
/*          * Building notification packet to send, this is called directly only in tests          */
/*      * Normalize IPv6 or DNS name.      */
//  add child,remove child and then call getChildren 
//  First add the elem to the new expiry time bucket in expiryMap. 
//  It's possible our session expired - but this is ok, shows we  
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.gui.NodeViewersChangeListener#     * nodeViewersChanged(java.util.List)      */
//  Reconfigure 
//  If qcm is non-null, we may call qcm.connectOne(), which will take the lock on qcm   and then take QV_LOCK.  Take the locks in the same order to ensure that we don't   deadlock against other callers of connectOne().  If qcmRef gets set in another   thread while we're inside the synchronized block, that does no harm; if we didn't   take a lock on qcm (because it was null when we sampled it), we won't call   connectOne() on it.  (Use of an AtomicReference is enough to guarantee visibility   of updates that provably happen in another thread before entering this method.) 
//  sessionMap is used by closeSession() 
//  any arbitrary constant will do 
/*      * For ZOOKEEPER-975 verify that a peer joining an established cluster     * does not go in LEADING state.      */
/*         On startup, it's possible that we'll try calling addUsage of an ID not in the cache.  This is safe to ignore        as it'll be added later when we traverse the tranlog.  See discussion here:        http://mail-archives.apache.org/mod_mbox/zookeeper-user/201507.mbox/%3CCAB5oV2_ujhvBA1sEkCG2WRakPjCy%2BNR10620WK2G1GGgmEO44g%40mail.gmail.com%3E        This test makes sure that we don't add the ID to the cache in this case as that would result in dupes later        and consequently incorrect counts and entries that will never be cleaned out.          */
//  setting back 
//  should always be the case 
//  Flag that indicate if use alwaysOnTop or not. 
//  corrupt the logfile 
//  creating ephemeral with wrong option. 
//  set on watch 
// reduce the set of candidates to those that acknowledged p 
//  remember this server so we can add it back later 
//  Simulate a bit of network latency... 
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.manager.ZooInspectorNodeTreeManager#deleteNode     * (java.lang.String)      */
//  Write only 2 bytes of the message, wait a bit, then write the rest.   This makes sure that writes smaller than 5 bytes don't break the plaintext mode on the server   once it decides that the input doesn't look like a TLS handshake. 
//  call reconfig API when the new server has received 
//  Send watches packet to server connection 
//  We have to get at least a majority of servers in sync with   us. We do this by waiting for the NEWLEADER packet to get   acknowledged 
//  Pattern.compile("Notification: \\d+, (\\d+), (\\d+), \\d+, [^,]*, [^,]*, (\\d+)");//, LOOKING, LOOKING, 2 
//  Shutdown sequence guarantee that all pending requests 
//     wait it hit data tree 
//  Mimic sessionId generated by follower's local session tracker 
//  validate lower limit 
//  sets lastIndex, resets reconfigMode 
//  remove host number 8 (the last one in a list of 9 hosts) 
//  Format and print the output of the command 
//  Peer miss the txnlog 
//  Skip the xid 
//  Peer zxid is in txnlog range 
//  setup the logger to capture all logs 
//  Get expected exception 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * getLastConnectionProps()      */
//  now start the third server so that new config has quorum 
// Check format 
//  by setting the value to 2 
//  message too long 
/*  Rather than fight it, let root have an alias  */
//  TODO only show add if a selected node isn't being   watched, and only show remove if a selected node is being   watched
//  Since we preallocate, we define EOF to be an   empty transaction 
//  now shutdown the server and restart it 
// If we are not going to take the snapshot be sure the transactions are not applied in memory 
// Keep these two lines together to keep the initialization order explicit 
// check to see if the leader zxid is lower than ours  this should never happen but is just a safety check 
//  ignore silently 
//  resolution occurred 
//  If we failed when flushing, try to close it to not leak   an FD 
/*      * Tests that if a quorum of a new config is synced with the leader and a reconfig     * is allowed to start but then the new quorum is lost, the leader will time out and     * we go to leader election.      */
//  We send DIFF to (1, 2) and forward any packet starting at (1, 2) 
/*                              * If this server is looking, then send proposed leader                              */
//  We want to track the change with a callback rather than depending on timing 
//  server_config should be either host:port:port or host:port:port:type 
//  Node 2 started last, kicks off leader election 
//  Ignore. This may be local session from other servers. 
//  lets remove someone who's not the leader 
//  get the new configuration from the request 
//  ZOOKEEPER-2693: don't execute 4lw if it's not enabled. 
//  Set SSL system properties and port unification, begin restarting servers 
//  now parse it 
/*                      * Exponential backoff                      */
//  and the leader will complete it 
/*  nThreads  */
//  setting up the quorum has a transaction overhead for creating and closing the session 
/*  Prep the request and convert to a Txn  */
//    test get/exists with two sets of watchers 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorReadOnlyManager#     * isAllowsChildren(java.lang.String)      */
/*  Once we've figured out where we are, we're done.  */
//  lets see one successful operation 
//  try to reestablish the quorum 
//  Same as for element.  Should refactor this.
//  make sure zkclient works 
//  start server 3 with new config 
//  or none, if not ready yet. Sets saslState to COMPLETE as a side-effect. 
//  Instead of starting roZk immediately, wait some grace   period before we decide we're partitioned.     Thread is used here because otherwise it would require   changes in each of election strategy classes which is 
//  This should never happen 
//  LOG.warn("Ack>>> cxid = " + request.cxid + " type = " +   request.type + " id = " + request.sessionId);   request.addRQRec(">prop"); 
//  This method can return empty iterator if the requested zxid 
//  log at error level as we are returning a marshalling   error to the user 
//  if we have read data from the file, and it matchs the timep pattern 
//  No change, so nothing to update 
//  Make sure to atomically check local session status, upgrade   session, and make the session creation request.  This is to   avoid another thread upgrading the session in parallel. 
/*      * For each leader offer, find out where we fit in. If we're first, we     * become the leader. If we're not elected the leader, attempt to stat the     * offer just less than us. If they exist, watch for their failure, but if     * they don't, become the leader.      */
//  ZOOKEEPER-3056: provides an escape hatch for users upgrading   from old versions of zookeeper (3.4.x, pre 3.5.3). 
//  the follower acceptor thread 
//  c.f. org.apache.hadoop.security.UserGroupInformation. 
//  Now kill one of the other real servers         
//  servers with authentication interfaces configured 
//  resets "zookeeper.datadir.autocreate" flag 
//  Note: mode is UNKNOWN or PLAINTEXT 
//  Disable throttling and resume acceptance of new requests. If this   entailed a state change, register an interest op update request with 
//  and add it back (as follower) 
//  create a file logger url from the command line args 
//  check delete 
//  leader 
//  Input may be delimited by either commas or newlines so convert to common newline separated format 
//  return number of session expiry calls 
//  Touch table for the global sessions 
//  watcher1 
//  init quorum auth server & learner 
//  verify bad pass Assert.fails 
//  verifying that other path child watches are not affected 
//  start 2 peers and verify if they form the cluster 
//  This server should fail to join the quorum as it is not using ssl. 
//  check if the path exists. We cannot create   quota for a path that already exists in zookeeper 
//  if no matching option -c or -d or -a is specified, we remove   the watches of the given node by choosing WatcherType.Any 
/*                                  * Version added in 3.4.6                                  */
//  we want to loop through the list twice 
//  create transaction and snapshot files in different-different 
//  set a watch on the root node 
//  the selector. 
//  Note: according to the Socket javadocs, setTrafficClass() may be   ignored by socket implementations, so we don't check that the value   we set is returned. 
//  execute from commandMap 
//  sub process used to execute the command 
//  Now participant asks for epoch (mocking LearnerHandler behavior). Second add to connectingFollowers.   Triggers verifier.containsQuorum = true 
//  that the switched off servers are down 
// LOG.warn("designated leader is: " + designatedLeader); 
/*      * Creates a leader election notification message.      */
//  we want to send our version of the request. 
//  This should be enough time for the first session to expire and for   the closeSession request to propagate to other machines (if there is a bug)   Since it is time sensitive, we have false negative when test 
//  Here we start populating the server and shutdown the follower after 
//  clear our internal buffer 
//  Access to ipMap or to any Set contained in the map needs to be   protected with synchronized (ipMap) { ... } 
//  choose "current" server according to the client rebalancing algorithm 
// create/close session don't require request record 
/*          * Start one LEThread for each peer we want to run.          */
//  Grab some memory so that it is easier to cause an 
//  Doing a delete 
//  ensure zk got connected 
//  use synchronized(this) to access 
//  Defaults ServerCnxnFactory would be instantiated with 
//  make sure there is a leader 
//  now create the direct children 
//  add back servers 7 and 8 while still in reconfigMode (we didn't call 
//  Create Zookeeper and connect to it. 
// quorumPeer.setQuorumPeers(config.getAllMembers()); 
//  we only import NodeViewers 
/*      * Challenge counter to avoid replay attacks      */
// Check that the node path is removed from pTrie 
//  including the header and the last / bytes   the snapshot should be at least 10 bytes 
//  not a CA 
//  number of entries skipped to get to the end of the iterator, less the number skipped to get to the start 
/*  save the return error code by the server  */
//  Change the '1' to e.g. 5, to change this to 5 minutes. 
//  authenticate learner 
//  The test method threw an exception, but it might be an   expected exception as defined in the @Test annotation.   Check the annotation and log an appropriate message. 
//  register an interest op update request with the selector. 
//  This must be a global request 
//  Here we create 13000 znodes 
//  The change should happen now 
/*      * Request processors      */
//  1238, 1237 
//  Create and Register the top level Log4J MBean 
//  Test basic create, ls, and getData 
//  No entries in jaas.conf   If there's a configuration exception fetching the jaas section and   the user has required sasl by specifying a LOGIN_CONTEXT_NAME_KEY or a jaas file 
//  don't waste memory if there are few watches on a node   rehash when the 4th entry is added, doubling size thereafter   seems like a good compromise 
//  creating sequential nodes is stored properly 
//  servers, and then bounce the other servers one by one 
//  than peer zxid 
//  Check that when a server starts from old style config, it should keep the client 
/*          * Send the same messages, this time should not make 0 the leader.          */
//  start additional new servers 
//  pretend each connect attempt takes 4000 milliseconds 
//  servers 4 and 5 should be able to work independently 
/*  We've sent the whole buffer, so drop the buffer  */
/*               * Start a new connection if doesn't have one already.               */
//  watcher2 
//  Send the connection request as a client do 
//  This value will be used directly in {@link CODE#SESSIONMOVED}   public static final int SessionMoved = -118;        
/*      * (non-Javadoc)     *      * @see     * org.apache.zookeeper.inspector.gui.nodeviewer.ZooInspectorNodeViewer#     * setZooInspectorManager     * (org.apache.zookeeper.inspector.manager.ZooInspectorNodeManager)      */
//  this is ok -- just a packet from an old client which   doesn't contain readOnly field 
//  Number of machines increased, my server is in the new cluster   Here whether to move or not depends on the difference of cluster   sizes   With probability 1 - |old|/|new} the client disconnects 
//  In this case, the hostname equals literal IP address. 
//  queuedBuffer has reached its component limit, so combine the existing components. 
//  check if being waken up on closing. 
//  abort if we hit the limit 
/*          * Start mock server 1          */
//  start server again with intact database 
//  so this shouldn't break anything. 
//  Resolve hostname for this server in case the   underlying ip address has changed. 
//  lets remove the leader and some other server 
//  Throw an error if there were any leaked buffers 
//  delete till you can find a node with more than   one child 
// shutdown leader- quorum should still exist 
/*      * (non-Javadoc)     *      * @seeorg.apache.zookeeper.inspector.manager.ZooInspectorManager#     * saveNodeViewersFile(java.io.File, java.util.List)      */
/*  Election instance  */
//  if no TGT, do not bother with ticket management. 
//  each watcher will process the event 
//  7. restart the previous leader to force it to replay the edits and possibly come up in a bad state 
//  shutdown 2 followers so that leader does not have majority and goes 
//  make sure they joined the new config without any change to it 
//  where the packet is actually sent. 
//  write message 
//  Get each logger from the Log4J Repository and add it to the   Hierarchy MBean created above.   org.apache.log4j.spi.LoggerRepository r = 
//  We send snap 
//  a different, larger version dynamic file 
//  Start up the ZK server to automatically create the necessary directories   and capture the directory where data is stored 
//  look for the clients to finish their create operations 
//  default constructor 
//  it later 
//  startForwarding() will be called in all cases 
// send a ping request either time is due or no packet sent out within MAX_SEND_PING_INTERVAL 
//  some of the operations will be executed by a client connected to   the removed server   while others are invoked by a client connected to some other   server.   when we're removing the leader, zk1 will be the client connected   to removed server 
//  Again, the user explicitly set something SASL-related, so   they probably expected SASL to succeed. 
//  content preserved 
//  1246, 1245, 1244, 1243, 1242, 1241, 1240, 1139 
//  check to avoid startup follows shutdown 
//  sleep for 10 millisecond and then again check 
//  check the existence of name in bean 
/*                  * When local session upgrading is disabled, leader will                 * reject the ephemeral node creation due to session expire.                 * However, if this is the follower that issue the request,                 * it will have the correct error code, so we should use that                 * and report to user                  */
//  Only called as callback from zkServer.processPacket() 
// If the test failes it will most likely fail with a NoAuth exception before it ever gets to this assertion 
//  loop through the args (must be key/value sequence) 
//  Falls back to filename detection if no property value 
//  3. start up the followers to form a new quorum 
//  Number of machines became smaller, my server is not in the new   cluster 
//     the node value is same as what we have on leader 
//  Check that the static config was split into static and dynamic files correctly. 
/*  (non-Javadoc)         * @see org.apache.zookeeper.ClientWatchManager#materialize(Event.KeeperState,          *                                                        Event.EventType, java.lang.String)          */
//  Signal for graceful shutdown 
//  proceed to the next processor 
//  do cleanup 
//  halt one of the listeners and verify count 
//  Throttle when there are too many concurrent snapshots being sent to observers 
//  should only happen during upgrade 
// check for any parent that has been quota 
//  take one of the new servers if it is possible (there are still such   servers we didn't try),   and either the probability tells us to connect to one of the new   servers or if we already   tried all the old servers 
//  We won't race another upgrade attempt because only one thread   will get the timeout from the map 
//  findbugs2.0.3 complains about get after put.   long term strategy would be use computeIfAbsent after JDK 1.8 
//  jaas.conf entry available 
//  Create the node with another session 
//  The node doesn't exist anymore, so skip it 
//  sid 
//  The first allowable character 
//  during first and second iteration, leavingIndex will correspond to a   follower   during third and fouth iteration leavingIndex will be the index of 
//  If the socket times out, we count that as Assert.failed - 
//  Make sure we can handle any type of correct wrapper 
// the direcotry containing the 
//  Sets authorization flag 
//  Setup a database with a single /foo node 
//  Sun doesn't include the address that causes this   exception to be thrown, so we wrap the exception   in order to capture this critical detail. 
//  Check that storage space return some value 
//  log that precedes first retained snapshot is also retained 
